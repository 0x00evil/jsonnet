// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (process['argv'].length > 1) {
    Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
  } else {
    Module['thisProgram'] = 'unknown-program';
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    window['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    var source = Pointer_stringify(code);
    if (source[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (source.indexOf('"', 1) === source.length-1) {
        source = source.substr(1, source.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + source + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    try {
      // Module is the only 'upvar', which we provide directly. We also provide FS for legacy support.
      var evalled = eval('(function(Module, FS) { return function(' + args.join(',') + '){ ' + source + ' } })')(Module, typeof FS !== 'undefined' ? FS : null);
    } catch(e) {
      Module.printErr('error in executing inline EM_ASM code: ' + e + ' on: \n\n' + source + '\n\nwith args |' + args + '| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)');
      throw e;
    }
    return Runtime.asmConstCache[code] = evalled;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          (((codePoint - 0x10000) / 0x400)|0) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      /* TODO: use TextEncoder when present,
        var encoder = new TextEncoder();
        encoder['encoding'] = "utf-8";
        var utf8Array = encoder['encode'](aMsg.data);
      */
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) Runtime.stackRestore(stack);
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;


function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;


function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))>>0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 56576;
  /* global initializers */ __ATINIT__.push({ func: function() { __GLOBAL__I_a() } }, { func: function() { __GLOBAL__I_a635() } });
  

/* memory initializer */ allocate([67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,0,0,0,0,0,49,49,83,116,97,116,105,99,69,114,114,111,114,0,0,0,40,214,0,0,32,0,0,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,100,101,99,105,109,97,108,32,112,111,105,110,116,58,32,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,39,69,39,58,32,0,0,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,101,120,112,111,110,101,110,116,32,115,105,103,110,58,32,0,33,61,0,0,0,0,0,0,33,0,0,0,0,0,0,0,126,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,0,0,0,0,0,84,114,117,110,99,97,116,101,100,32,117,110,105,99,111,100,101,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,46,0,0,0,0,77,97,108,102,111,114,109,101,100,32,117,110,105,99,111,100,101,32,101,115,99,97,112,101,32,99,104,97,114,97,99,116,101,114,44,32,0,0,0,0,115,104,111,117,108,100,32,98,101,32,104,101,120,58,32,39,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,67,111,100,101,112,111,105,110,116,32,111,117,116,32,111,102,32,97,115,99,105,105,32,114,97,110,103,101,46,0,0,0,84,114,117,110,99,97,116,101,100,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,46,0,0,0,0,85,110,107,110,111,119,110,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,58,32,39,0,0,0,0,101,108,115,101,0,0,0,0,101,114,114,111,114,0,0,0,102,97,108,115,101,0,0,0,102,111,114,0,0,0,0,0,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,105,102,0,0,0,0,0,0,105,109,112,111,114,116,0,0,105,109,112,111,114,116,115,116,114,0,0,0,0,0,0,0,105,110,0,0,0,0,0,0,108,111,99,97,108,0,0,0,110,117,108,108,0,0,0,0,115,101,108,102,0,0,0,0,115,117,112,101,114,0,0,0,116,97,105,108,99,97,108,108,0,0,0,0,0,0,0,0,116,104,101,110,0,0,0,0,116,114,117,101,0,0,0,0,77,117,108,116,105,45,108,105,110,101,32,99,111,109,109,101,110,116,32,104,97,115,32,110,111,32,116,101,114,109,105,110,97,116,105,110,103,32,42,47,46,0,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,108,101,120,32,116,104,101,32,99,104,97,114,97,99,116,101,114,32,0,0,0,0,99,111,100,101,32,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,56,4,0,0,1,0,0,0,2,0,0,0,56,0,0,0,248,255,255,255,56,4,0,0,3,0,0,0,4,0,0,0,192,255,255,255,192,255,255,255,56,4,0,0,5,0,0,0,6,0,0,0,0,0,0,0,4,3,0,0,108,3,0,0,172,3,0,0,192,3,0,0,212,3,0,0,232,3,0,0,148,3,0,0,128,3,0,0,44,3,0,0,24,3,0,0,64,0,0,0,0,0,0,0,8,172,0,0,7,0,0,0,8,0,0,0,56,0,0,0,248,255,255,255,8,172,0,0,9,0,0,0,10,0,0,0,192,255,255,255,192,255,255,255,8,172,0,0,11,0,0,0,12,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,232,170,0,0,13,0,0,0,14,0,0,0,192,255,255,255,192,255,255,255,232,170,0,0,15,0,0,0,16,0,0,0,56,0,0,0,0,0,0,0,120,171,0,0,17,0,0,0,18,0,0,0,200,255,255,255,200,255,255,255,120,171,0,0,19,0,0,0,20,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,80,214,0,0,240,3,0,0,8,172,0,0,0,0,0,0,0,0,0,0,208,4,0,0,21,0,0,0,22,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,80,214,0,0,136,4,0,0,112,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,97,107,101,65,114,114,97,121,0,0,0,0,0,0,0,115,122,0,0,0,0,0,0,102,117,110,99,0,0,0,0,112,111,119,0,0,0,0,0,120,0,0,0,0,0,0,0,110,0,0,0,0,0,0,0,102,108,111,111,114,0,0,0,99,101,105,108,0,0,0,0,115,113,114,116,0,0,0,0,115,105,110,0,0,0,0,0,99,111,115,0,0,0,0,0,116,97,110,0,0,0,0,0,97,115,105,110,0,0,0,0,97,99,111,115,0,0,0,0,97,116,97,110,0,0,0,0,116,121,112,101,0,0,0,0,102,105,108,116,101,114,0,0,97,114,114,0,0,0,0,0,111,98,106,101,99,116,72,97,115,0,0,0,0,0,0,0,111,98,106,0,0,0,0,0,102,0,0,0,0,0,0,0,108,101,110,103,116,104,0,0,111,98,106,101,99,116,70,105,101,108,100,115,0,0,0,0,99,111,100,101,112,111,105,110,116,0,0,0,0,0,0,0,115,116,114,0,0,0,0,0,99,104,97,114,0,0,0,0,108,111,103,0,0,0,0,0,101,120,112,0,0,0,0,0,109,97,110,116,105,115,115,97,0,0,0,0,0,0,0,0,101,120,112,111,110,101,110,116,0,0,0,0,0,0,0,0,109,111,100,117,108,111,0,0,97,0,0,0,0,0,0,0,98,0,0,0,0,0,0,0,102,111,114,99,101,0,0,0,101,120,116,86,97,114,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,122,101,100,32,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,58,32,0,115,116,100,46,106,115,111,110,110,101,116,0,0,0,0,0,47,42,10,67,111,112,121,114,105,103,104,116,32,50,48,49,53,32,71,111,111,103,108,101,32,73,110,99,46,32,65,108,108,32,114,105,103,104,116,115,32,114,101,115,101,114,118,101,100,46,10,10,76,105,99,101,110,115,101,100,32,117,110,100,101,114,32,116,104,101,32,65,112,97,99,104,101,32,76,105,99,101,110,115,101,44,32,86,101,114,115,105,111,110,32,50,46,48,32,40,116,104,101,32,34,76,105,99,101,110,115,101,34,41,59,10,121,111,117,32,109,97,121,32,110,111,116,32,117,115,101,32,116,104,105,115,32,102,105,108,101,32,101,120,99,101,112,116,32,105,110,32,99,111,109,112,108,105,97,110,99,101,32,119,105,116,104,32,116,104,101,32,76,105,99,101,110,115,101,46,10,89,111,117,32,109,97,121,32,111,98,116,97,105,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,76,105,99,101,110,115,101,32,97,116,10,10,32,32,32,32,104,116,116,112,58,47,47,119,119,119,46,97,112,97,99,104,101,46,111,114,103,47,108,105,99,101,110,115,101,115,47,76,73,67,69,78,83,69,45,50,46,48,10,10,85,110,108,101,115,115,32,114,101,113,117,105,114,101,100,32,98,121,32,97,112,112,108,105,99,97,98,108,101,32,108,97,119,32,111,114,32,97,103,114,101,101,100,32,116,111,32,105,110,32,119,114,105,116,105,110,103,44,32,115,111,102,116,119,97,114,101,10,100,105,115,116,114,105,98,117,116,101,100,32,117,110,100,101,114,32,116,104,101,32,76,105,99,101,110,115,101,32,105,115,32,100,105,115,116,114,105,98,117,116,101,100,32,111,110,32,97,110,32,34,65,83,32,73,83,34,32,66,65,83,73,83,44,10,87,73,84,72,79,85,84,32,87,65,82,82,65,78,84,73,69,83,32,79,82,32,67,79,78,68,73,84,73,79,78,83,32,79,70,32,65,78,89,32,75,73,78,68,44,32,101,105,116,104,101,114,32,101,120,112,114,101,115,115,32,111,114,32,105,109,112,108,105,101,100,46,10,83,101,101,32,116,104,101,32,76,105,99,101,110,115,101,32,102,111,114,32,116,104,101,32,115,112,101,99,105,102,105,99,32,108,97,110,103,117,97,103,101,32,103,111,118,101,114,110,105,110,103,32,112,101,114,109,105,115,115,105,111,110,115,32,97,110,100,10,108,105,109,105,116,97,116,105,111,110,115,32,117,110,100,101,114,32,116,104,101,32,76,105,99,101,110,115,101,46,10,42,47,10,10,47,42,32,84,104,105,115,32,105,115,32,116,104,101,32,74,115,111,110,110,101,116,32,115,116,97,110,100,97,114,100,32,108,105,98,114,97,114,121,44,32,97,116,32,108,101,97,115,116,32,116,104,101,32,112,97,114,116,115,32,111,102,32,105,116,32,116,104,97,116,32,97,114,101,32,119,114,105,116,116,101,110,32,105,110,32,74,115,111,110,110,101,116,46,10,32,42,10,32,42,32,84,104,101,114,101,32,97,114,101,32,115,111,109,101,32,110,97,116,105,118,101,32,109,101,116,104,111,100,115,32,97,115,32,119,101,108,108,44,32,119,104,105,99,104,32,97,114,101,32,100,101,102,105,110,101,100,32,105,110,32,116,104,101,32,105,110,116,101,114,112,114,101,116,101,114,32,97,110,100,32,97,100,100,101,100,32,116,111,32,116,104,105,115,10,32,42,32,102,105,108,101,46,32,32,73,116,32,105,115,32,110,101,118,101,114,32,110,101,99,101,115,115,97,114,121,32,116,111,32,105,109,112,111,114,116,32,115,116,100,46,106,115,111,110,110,101,116,44,32,105,116,32,105,115,32,101,109,98,101,100,100,101,100,32,105,110,116,111,32,116,104,101,32,105,110,116,101,114,112,114,101,116,101,114,32,97,116,10,32,42,32,99,111,109,112,105,108,101,45,116,105,109,101,32,97,110,100,32,97,117,116,111,109,97,116,105,99,97,108,108,121,32,105,109,112,111,114,116,101,100,32,105,110,116,111,32,97,108,108,32,111,116,104,101,114,32,74,115,111,110,110,101,116,32,112,114,111,103,114,97,109,115,46,10,32,42,47,10,123,10,10,32,32,32,32,108,111,99,97,108,32,115,116,100,32,61,32,115,101,108,102,44,10,10,32,32,32,32,116,111,83,116,114,105,110,103,40,97,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,32,97,32,101,108,115,101,32,34,34,32,43,32,97,44,10,32,32,32,32,10,32,32,32,32,115,117,98,115,116,114,40,115,116,114,44,32,102,114,111,109,44,32,108,101,110,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,115,116,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,116,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,102,114,111,109,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,114,111,109,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,108,101,110,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,116,104,105,114,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,108,101,110,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,108,101,110,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,116,104,105,114,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,122,101,114,111,44,32,103,111,116,32,34,32,43,32,108,101,110,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,34,44,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,108,101,110,44,32,102,117,110,99,116,105,111,110,40,105,41,32,115,116,114,91,105,32,43,32,102,114,111,109,93,41,41,44,10,10,32,32,32,32,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,102,117,110,99,116,105,111,110,40,105,41,32,115,116,114,91,105,93,41,44,10,10,32,32,32,32,115,112,108,105,116,40,115,116,114,44,32,99,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,115,116,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,116,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,99,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,99,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,99,41,32,33,61,32,49,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,104,97,118,101,32,108,101,110,103,116,104,32,49,44,32,103,111,116,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,99,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,44,32,97,114,114,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,50,32,61,32,105,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,32,43,32,91,118,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,102,111,114,99,101,40,105,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,100,101,108,105,109,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,114,114,50,32,61,32,97,114,114,32,43,32,91,118,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,102,111,114,99,101,40,97,114,114,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,50,44,32,97,114,114,50,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,50,32,61,32,118,32,43,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,102,111,114,99,101,40,118,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,50,44,32,97,114,114,44,32,118,50,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,99,44,32,48,44,32,91,93,44,32,34,34,41,44,10,10,32,32,32,32,114,97,110,103,101,40,102,114,111,109,44,32,116,111,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,116,111,32,45,32,102,114,111,109,32,43,32,49,44,32,102,117,110,99,116,105,111,110,40,105,41,32,105,32,43,32,102,114,111,109,41,44,10,10,32,32,32,32,109,111,100,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,110,117,109,98,101,114,34,32,38,38,32,115,116,100,46,116,121,112,101,40,98,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,111,100,117,108,111,40,97,44,32,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,102,111,114,109,97,116,40,97,44,32,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,79,112,101,114,97,116,111,114,32,37,32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,111,110,32,116,121,112,101,115,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,32,43,32,34,32,97,110,100,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,32,43,32,34,46,34,44,10,10,32,32,32,32,109,97,112,40,102,117,110,99,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,109,97,112,32,102,105,114,115,116,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,38,38,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,109,97,112,32,115,101,99,111,110,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,97,114,114,97,121,32,47,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,44,32,102,117,110,99,116,105,111,110,40,105,41,32,102,117,110,99,40,97,114,114,91,105,93,41,41,44,10,10,32,32,32,32,106,111,105,110,40,115,101,112,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,114,114,44,32,105,44,32,102,105,114,115,116,44,32,114,117,110,110,105,110,103,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,114,114,91,105,93,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,43,49,44,32,102,105,114,115,116,44,32,114,117,110,110,105,110,103,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,102,105,114,115,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,43,49,44,32,102,97,108,115,101,44,32,114,117,110,110,105,110,103,32,43,32,97,114,114,91,105,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,43,49,44,32,102,97,108,115,101,44,32,114,117,110,110,105,110,103,32,43,32,115,101,112,32,43,32,97,114,114,91,105,93,41,59,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,106,111,105,110,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,115,101,112,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,48,44,32,116,114,117,101,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,115,101,112,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,48,44,32,116,114,117,101,44,32,91,93,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,106,111,105,110,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,115,116,114,105,110,103,32,111,114,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,44,10,10,32,32,32,32,108,105,110,101,115,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,97,114,114,32,43,32,91,34,34,93,41,44,10,10,32,32,32,32,102,111,114,109,97,116,40,115,116,114,44,32,118,97,108,115,41,58,58,10,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,32,116,104,101,32,109,105,110,105,45,108,97,110,103,117,97,103,101,32,47,47,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,109,97,112,112,105,110,103,95,107,101,121,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,40,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,33,61,32,34,41,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,32,43,32,49,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,32,43,32,49,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,44,32,118,58,32,110,117,108,108,32,125,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,99,102,108,97,103,115,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,35,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,97,108,116,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,122,101,114,111,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,45,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,108,101,102,116,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,32,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,98,108,97,110,107,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,43,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,115,105,103,110,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,44,32,123,32,97,108,116,58,32,102,97,108,115,101,44,32,122,101,114,111,58,32,102,97,108,115,101,44,32,108,101,102,116,58,32,102,97,108,115,101,44,32,98,108,97,110,107,58,32,102,97,108,115,101,44,32,115,105,103,110,58,32,102,97,108,115,101,125,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,38,38,32,115,116,114,91,105,93,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,43,49,44,32,118,58,32,34,42,34,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,48,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,49,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,50,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,50,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,51,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,51,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,52,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,52,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,53,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,53,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,54,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,54,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,55,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,55,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,56,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,56,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,57,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,57,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,44,32,48,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,112,114,101,99,105,115,105,111,110,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,46,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,105,32,43,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,44,32,118,58,32,110,117,108,108,32,125,59,10,10,32,32,32,32,32,32,32,32,47,47,32,73,103,110,111,114,101,100,44,32,105,102,32,105,116,32,101,120,105,115,116,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,108,101,110,103,116,104,95,109,111,100,105,102,105,101,114,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,104,34,32,124,124,32,99,32,61,61,32,34,108,34,32,124,124,32,99,32,61,61,32,34,76,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,32,43,32,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,110,118,95,116,121,112,101,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,100,34,32,124,124,32,99,32,61,61,32,34,105,34,32,124,124,32,99,32,61,61,32,34,117,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,100,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,111,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,111,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,120,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,120,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,88,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,120,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,101,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,101,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,69,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,101,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,102,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,70,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,102,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,103,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,71,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,103,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,99,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,99,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,115,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,115,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,37,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,85,110,114,101,99,111,103,110,105,115,101,100,32,99,111,110,118,101,114,115,105,111,110,32,116,121,112,101,58,32,34,32,43,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,100,32,105,110,105,116,105,97,108,32,37,44,32,110,111,119,32,116,104,101,32,114,101,115,116,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,100,101,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,109,107,101,121,32,61,32,116,114,121,95,112,97,114,115,101,95,109,97,112,112,105,110,103,95,107,101,121,40,115,116,114,44,32,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,102,108,97,103,115,32,61,32,116,114,121,95,112,97,114,115,101,95,99,102,108,97,103,115,40,115,116,114,44,32,109,107,101,121,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,119,32,61,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,99,102,108,97,103,115,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,114,101,99,32,61,32,116,114,121,95,112,97,114,115,101,95,112,114,101,99,105,115,105,111,110,40,115,116,114,44,32,102,119,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,101,110,95,109,111,100,32,61,32,116,114,121,95,112,97,114,115,101,95,108,101,110,103,116,104,95,109,111,100,105,102,105,101,114,40,115,116,114,44,32,112,114,101,99,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,116,121,112,101,32,61,32,112,97,114,115,101,95,99,111,110,118,95,116,121,112,101,40,115,116,114,44,32,108,101,110,95,109,111,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,58,32,99,116,121,112,101,46,105,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,107,101,121,58,32,109,107,101,121,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,58,32,99,102,108,97,103,115,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,102,119,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,112,114,101,99,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,116,121,112,101,58,32,99,116,121,112,101,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,112,115,58,32,99,116,121,112,101,46,99,97,112,115,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,32,97,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,40,99,111,110,116,97,105,110,105,110,103,32,110,111,110,101,32,111,114,32,109,111,114,101,32,37,32,102,111,114,109,97,116,32,116,97,103,115,41,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,105,44,32,111,117,116,41,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,117,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,32,61,32,112,97,114,115,101,95,99,111,100,101,40,115,116,114,44,32,105,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,114,46,105,44,32,111,117,116,43,91,114,46,99,111,100,101,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,97,115,116,32,61,32,111,117,116,91,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,45,49,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,112,112,101,110,100,32,61,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,62,32,48,32,38,38,32,115,116,100,46,116,121,112,101,40,108,97,115,116,41,32,61,61,32,34,115,116,114,105,110,103,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,105,32,43,32,49,44,32,105,102,32,97,112,112,101,110,100,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,105,41,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,45,49,32,116,104,101,110,32,111,117,116,91,105,93,32,101,108,115,101,32,108,97,115,116,32,43,32,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,105,41,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,116,104,101,110,32,111,117,116,91,105,93,32,101,108,115,101,32,99,41,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,115,32,61,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,48,44,32,91,93,41,59,10,10,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,32,32,32,32,32,32,32,32,47,47,32,70,111,114,109,97,116,32,116,104,101,32,118,97,108,117,101,115,32,47,47,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,10,32,32,32,32,32,32,32,32,47,47,32,85,115,101,102,117,108,32,117,116,105,108,105,116,105,101,115,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,100,105,110,103,40,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,119,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,119,32,60,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,119,32,45,32,49,44,32,118,32,43,32,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,119,44,32,34,34,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,65,100,100,32,115,32,116,111,32,116,104,101,32,108,101,102,116,32,111,102,32,115,116,114,32,115,111,32,116,104,97,116,32,105,116,115,32,108,101,110,103,116,104,32,105,115,32,97,116,32,108,101,97,115,116,32,119,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,95,108,101,102,116,40,115,116,114,44,32,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,100,105,110,103,40,119,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,115,41,32,43,32,115,116,114,59,10,10,32,32,32,32,32,32,32,32,47,47,32,65,100,100,32,115,32,116,111,32,116,104,101,32,114,105,103,104,116,32,111,102,32,115,116,114,32,115,111,32,116,104,97,116,32,105,116,115,32,108,101,110,103,116,104,32,105,115,32,97,116,32,108,101,97,115,116,32,119,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,95,114,105,103,104,116,40,115,116,114,44,32,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,112,97,100,100,105,110,103,40,119,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,115,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,110,32,105,110,116,101,103,101,114,32,40,101,46,103,46,44,32,100,101,99,105,109,97,108,32,111,114,32,111,99,116,97,108,41,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,105,110,116,40,110,95,95,44,32,109,105,110,95,99,104,97,114,115,44,32,109,105,110,95,100,105,103,105,116,115,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,114,97,100,105,120,44,32,122,101,114,111,95,112,114,101,102,105,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,110,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,122,101,114,111,95,112,114,101,102,105,120,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,32,47,32,114,97,100,105,120,41,41,32,43,32,40,110,32,37,32,114,97,100,105,120,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,101,99,32,61,32,105,102,32,115,116,100,46,102,108,111,111,114,40,110,95,41,32,61,61,32,48,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,95,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,101,103,32,61,32,110,95,95,32,60,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,109,105,110,95,99,104,97,114,115,32,45,32,40,105,102,32,110,101,103,32,124,124,32,98,108,97,110,107,32,124,124,32,115,105,103,110,32,116,104,101,110,32,49,32,101,108,115,101,32,48,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,115,116,100,46,109,97,120,40,122,112,44,32,109,105,110,95,100,105,103,105,116,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,101,99,50,32,61,32,112,97,100,95,108,101,102,116,40,100,101,99,44,32,122,112,50,44,32,34,48,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,105,102,32,110,101,103,32,116,104,101,110,32,34,45,34,32,101,108,115,101,32,105,102,32,115,105,103,110,32,116,104,101,110,32,34,43,34,32,101,108,115,101,32,105,102,32,98,108,97,110,107,32,116,104,101,110,32,34,32,34,32,101,108,115,101,32,34,34,41,32,43,32,100,101,99,50,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,110,32,105,110,116,101,103,101,114,32,105,110,32,104,101,120,97,100,101,99,105,109,97,108,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,104,101,120,40,110,95,95,44,32,109,105,110,95,99,104,97,114,115,44,32,109,105,110,95,100,105,103,105,116,115,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,97,100,100,95,122,101,114,111,120,44,32,99,97,112,105,116,97,108,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,117,109,101,114,97,108,115,32,61,32,91,48,44,32,49,44,32,50,44,32,51,44,32,52,44,32,53,44,32,54,44,32,55,44,32,56,44,32,57,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,102,32,99,97,112,105,116,97,108,115,32,116,104,101,110,32,91,34,65,34,44,32,34,66,34,44,32,34,67,34,44,32,34,68,34,44,32,34,69,34,44,32,34,70,34,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,34,97,34,44,32,34,98,34,44,32,34,99,34,44,32,34,100,34,44,32,34,101,34,44,32,34,102,34,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,110,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,32,47,32,49,54,41,41,32,43,32,110,117,109,101,114,97,108,115,91,110,32,37,32,49,54,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,104,101,120,32,61,32,105,102,32,115,116,100,46,102,108,111,111,114,40,110,95,41,32,61,61,32,48,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,95,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,101,103,32,61,32,110,95,95,32,60,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,109,105,110,95,99,104,97,114,115,32,45,32,40,105,102,32,110,101,103,32,124,124,32,98,108,97,110,107,32,124,124,32,115,105,103,110,32,116,104,101,110,32,49,32,101,108,115,101,32,48,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,45,32,40,105,102,32,97,100,100,95,122,101,114,111,120,32,116,104,101,110,32,50,32,101,108,115,101,32,48,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,115,116,100,46,109,97,120,40,122,112,44,32,109,105,110,95,100,105,103,105,116,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,104,101,120,50,32,61,32,40,105,102,32,97,100,100,95,122,101,114,111,120,32,116,104,101,110,32,40,105,102,32,99,97,112,105,116,97,108,115,32,116,104,101,110,32,34,48,88,34,32,101,108,115,101,32,34,48,120,34,41,32,101,108,115,101,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,112,97,100,95,108,101,102,116,40,104,101,120,44,32,122,112,50,44,32,34,48,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,105,102,32,110,101,103,32,116,104,101,110,32,34,45,34,32,101,108,115,101,32,105,102,32,115,105,103,110,32,116,104,101,110,32,34,43,34,32,101,108,115,101,32,105,102,32,98,108,97,110,107,32,116,104,101,110,32,34,32,34,32,101,108,115,101,32,34,34,41,32,43,32,104,101,120,50,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,105,112,95,116,114,97,105,108,105,110,103,95,122,101,114,111,40,115,116,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,93,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,105,32,45,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,115,117,98,115,116,114,40,115,116,114,44,32,48,44,32,105,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,45,32,49,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,105,110,32,100,101,99,105,109,97,108,32,102,111,114,109,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,110,95,95,44,32,122,101,114,111,95,112,97,100,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,112,114,101,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,119,104,111,108,101,32,61,32,115,116,100,46,102,108,111,111,114,40,110,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,111,116,95,115,105,122,101,32,61,32,105,102,32,112,114,101,99,32,61,61,32,48,32,38,38,32,33,101,110,115,117,114,101,95,112,116,32,116,104,101,110,32,48,32,101,108,115,101,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,122,101,114,111,95,112,97,100,32,45,32,112,114,101,99,32,45,32,100,111,116,95,115,105,122,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,114,101,110,100,101,114,95,105,110,116,40,110,95,95,32,47,32,110,95,32,42,32,119,104,111,108,101,44,32,122,112,44,32,48,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,112,114,101,99,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,105,102,32,101,110,115,117,114,101,95,112,116,32,116,104,101,110,32,34,46,34,32,101,108,115,101,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,114,97,99,32,61,32,115,116,100,46,102,108,111,111,114,40,40,110,95,32,45,32,119,104,111,108,101,41,32,42,32,115,116,100,46,112,111,119,40,49,48,44,32,112,114,101,99,41,32,43,32,48,46,53,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,116,114,97,105,108,105,110,103,32,124,124,32,102,114,97,99,32,62,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,114,97,99,95,115,116,114,32,61,32,114,101,110,100,101,114,95,105,110,116,40,102,114,97,99,44,32,112,114,101,99,44,32,48,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,34,46,34,32,43,32,105,102,32,33,116,114,97,105,108,105,110,103,32,116,104,101,110,32,115,116,114,105,112,95,116,114,97,105,108,105,110,103,95,122,101,114,111,40,102,114,97,99,95,115,116,114,41,32,101,108,115,101,32,102,114,97,99,95,115,116,114,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,105,110,32,115,99,105,101,110,116,105,102,105,99,32,102,111,114,109,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,110,95,95,44,32,122,101,114,111,95,112,97,100,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,99,97,112,115,44,32,112,114,101,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,101,120,112,111,110,101,110,116,32,61,32,115,116,100,46,102,108,111,111,114,40,115,116,100,46,108,111,103,40,115,116,100,46,97,98,115,40,110,95,95,41,41,32,47,32,115,116,100,46,108,111,103,40,49,48,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,117,102,102,32,61,32,40,105,102,32,99,97,112,115,32,116,104,101,110,32,34,69,34,32,101,108,115,101,32,34,101,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,114,101,110,100,101,114,95,105,110,116,40,101,120,112,111,110,101,110,116,44,32,51,44,32,48,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,109,97,110,116,105,115,115,97,32,61,32,110,95,95,32,47,32,115,116,100,46,112,111,119,40,49,48,44,32,101,120,112,111,110,101,110,116,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,122,101,114,111,95,112,97,100,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,117,102,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,109,97,110,116,105,115,115,97,44,32,122,112,50,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,112,114,101,99,41,32,43,32,115,117,102,102,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,118,97,108,117,101,32,119,105,116,104,32,97,110,32,97,114,98,105,116,114,97,114,121,32,102,111,114,109,97,116,32,99,111,100,101,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,102,119,44,32,112,114,101,99,95,111,114,95,110,117,108,108,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,102,108,97,103,115,32,61,32,99,111,100,101,46,99,102,108,97,103,115,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,112,112,114,101,99,32,61,32,105,102,32,112,114,101,99,95,111,114,95,110,117,108,108,32,33,61,32,110,117,108,108,32,116,104,101,110,32,112,114,101,99,95,111,114,95,110,117,108,108,32,101,108,115,101,32,54,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,112,114,101,99,32,61,32,105,102,32,112,114,101,99,95,111,114,95,110,117,108,108,32,33,61,32,110,117,108,108,32,116,104,101,110,32,112,114,101,99,95,111,114,95,110,117,108,108,32,101,108,115,101,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,105,102,32,99,102,108,97,103,115,46,122,101,114,111,32,38,38,32,33,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,32,102,119,32,101,108,115,101,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,115,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,116,111,83,116,114,105,110,103,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,100,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,105,110,116,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,49,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,111,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,101,114,111,95,112,114,101,102,105,120,32,61,32,105,102,32,99,102,108,97,103,115,46,97,108,116,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,34,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,105,110,116,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,56,44,32,122,101,114,111,95,112,114,101,102,105,120,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,120,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,104,101,120,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,99,97,112,115,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,32,116,114,117,101,44,32,102,112,112,114,101,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,101,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,32,116,114,117,101,44,32,99,111,100,101,46,99,97,112,115,44,32,102,112,112,114,101,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,101,120,112,111,110,101,110,116,32,61,32,115,116,100,46,102,108,111,111,114,40,115,116,100,46,108,111,103,40,115,116,100,46,97,98,115,40,118,97,108,41,41,47,115,116,100,46,108,111,103,40,49,48,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,101,120,112,111,110,101,110,116,32,60,32,45,52,32,124,124,32,101,120,112,111,110,101,110,116,32,62,61,32,102,112,112,114,101,99,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,97,108,116,44,32,99,111,100,101,46,99,97,112,115,44,32,102,112,112,114,101,99,32,45,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,105,103,105,116,115,95,98,101,102,111,114,101,95,112,116,32,61,32,115,116,100,46,109,97,120,40,49,44,32,101,120,112,111,110,101,110,116,43,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,97,108,116,44,32,102,112,112,114,101,99,32,45,32,100,105,103,105,116,115,95,98,101,102,111,114,101,95,112,116,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,99,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,99,104,97,114,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,118,97,108,41,32,61,61,32,49,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,37,99,32,101,120,112,101,99,116,101,100,32,49,45,115,105,122,101,100,32,115,116,114,105,110,103,32,103,111,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,37,99,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,32,47,32,115,116,114,105,110,103,44,32,103,111,116,58,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,85,110,107,110,111,119,110,32,99,111,100,101,58,32,34,32,43,32,99,111,100,101,46,99,116,121,112,101,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,112,97,114,115,101,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,119,105,116,104,32,97,110,32,97,114,114,97,121,32,111,102,32,118,97,108,117,101,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,99,111,100,101,115,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,60,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,84,111,111,32,109,97,110,121,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,43,32,34,44,32,101,120,112,101,99,116,101,100,32,34,32,43,32,106,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,32,61,32,99,111,100,101,115,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,99,111,100,101,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,32,43,32,49,44,32,106,44,32,118,32,43,32,99,111,100,101,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,109,112,32,61,32,105,102,32,99,111,100,101,46,102,119,32,61,61,32,34,42,34,32,116,104,101,110,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,106,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,106,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,106,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,99,111,100,101,46,102,119,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,109,112,50,32,61,32,105,102,32,99,111,100,101,46,112,114,101,99,32,61,61,32,34,42,34,32,116,104,101,110,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,116,109,112,46,106,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,105,102,32,116,109,112,46,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,116,109,112,46,106,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,116,109,112,46,106,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,99,111,100,101,46,112,114,101,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,106,50,32,61,32,116,109,112,50,46,106,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,108,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,50,32,60,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,106,50,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,44,32,103,111,116,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,37,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,116,109,112,46,102,119,44,32,116,109,112,50,46,112,114,101,99,44,32,106,50,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,95,112,97,100,100,101,100,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,114,105,103,104,116,40,115,44,32,116,109,112,46,102,119,44,32,34,32,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,108,101,102,116,40,115,44,32,116,109,112,46,102,119,44,32,34,32,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,32,43,32,49,44,32,106,50,32,43,32,49,44,32,118,32,43,32,115,95,112,97,100,100,101,100,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,112,97,114,115,101,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,119,105,116,104,32,97,110,32,111,98,106,101,99,116,32,111,102,32,118,97,108,117,101,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,99,111,100,101,115,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,32,61,32,99,111,100,101,115,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,99,111,100,101,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,32,43,32,49,44,32,118,32,43,32,99,111,100,101,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,109,107,101,121,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,77,97,112,112,105,110,103,32,107,101,121,115,32,114,101,113,117,105,114,101,100,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,109,107,101,121,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,119,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,102,119,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,110,111,116,32,117,115,101,32,42,32,102,105,101,108,100,32,119,105,100,116,104,32,119,105,116,104,32,111,98,106,101,99,116,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,102,119,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,114,101,99,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,112,114,101,99,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,110,111,116,32,117,115,101,32,42,32,112,114,101,99,105,115,105,111,110,32,119,105,116,104,32,111,98,106,101,99,116,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,112,114,101,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,108,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,111,98,106,101,99,116,72,97,115,40,111,98,106,44,32,102,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,98,106,91,102,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,32,115,117,99,104,32,102,105,101,108,100,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,37,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,102,119,44,32,112,114,101,99,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,95,112,97,100,100,101,100,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,114,105,103,104,116,40,115,44,32,102,119,44,32,34,32,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,108,101,102,116,40,115,44,32,102,119,44,32,34,32,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,32,43,32,49,44,32,118,32,43,32,115,95,112,97,100,100,101,100,41,59,10,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,115,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,118,97,108,115,44,32,48,44,32,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,115,41,32,61,61,32,34,111,98,106,101,99,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,118,97,108,115,44,32,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,91,118,97,108,115,93,44,32,48,44,32,48,44,32,34,34,41,44,10,10,32,32,32,32,102,111,108,100,114,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,44,32,105,100,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,100,120,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,117,110,110,105,110,103,50,32,61,32,102,117,110,99,40,97,114,114,91,105,100,120,93,44,32,114,117,110,110,105,110,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,100,120,50,32,61,32,105,100,120,32,45,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,102,111,114,99,101,40,114,117,110,110,105,110,103,50,41,32,38,38,32,115,116,100,46,102,111,114,99,101,40,105,100,120,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,50,44,32,105,100,120,50,41,59,10,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,44,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,45,32,49,41,44,10,10,32,32,32,32,102,111,108,100,108,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,44,32,105,100,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,100,120,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,117,110,110,105,110,103,50,32,61,32,102,117,110,99,40,114,117,110,110,105,110,103,44,32,97,114,114,91,105,100,120,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,100,120,50,32,61,32,105,100,120,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,102,111,114,99,101,40,114,117,110,110,105,110,103,50,41,32,38,38,32,115,116,100,46,102,111,114,99,101,40,105,100,120,50,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,50,44,32,105,100,120,50,41,59,10,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,44,32,48,41,44,10,10,10,32,32,32,32,102,105,108,116,101,114,77,97,112,40,102,105,108,116,101,114,95,102,117,110,99,44,32,109,97,112,95,102,117,110,99,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,102,105,108,116,101,114,95,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,102,105,114,115,116,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,105,108,116,101,114,95,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,109,97,112,95,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,115,101,99,111,110,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,109,97,112,95,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,116,104,105,114,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,112,40,109,97,112,95,102,117,110,99,44,32,115,116,100,46,102,105,108,116,101,114,40,102,105,108,116,101,114,95,102,117,110,99,44,32,97,114,114,41,41,44,10,10,32,32,32,32,97,115,115,101,114,116,69,113,117,97,108,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,97,32,61,61,32,98,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,116,114,117,101,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,46,32,34,32,43,32,97,32,43,32,34,32,33,61,32,34,32,43,32,98,44,10,10,32,32,32,32,97,98,115,40,110,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,110,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,97,98,115,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,110,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,62,32,48,32,116,104,101,110,32,110,32,101,108,115,101,32,45,110,44,10,10,32,32,32,32,109,97,120,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,102,105,114,115,116,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,98,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,115,101,99,111,110,100,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,32,62,32,98,32,116,104,101,110,32,97,32,101,108,115,101,32,98,44,10,10,32,32,32,32,109,105,110,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,102,105,114,115,116,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,98,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,115,101,99,111,110,100,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,32,60,32,98,32,116,104,101,110,32,97,32,101,108,115,101,32,98,44,10,10,32,32,32,32,102,108,97,116,116,101,110,65,114,114,97,121,115,40,97,114,114,115,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,98,41,32,97,32,43,32,98,44,32,97,114,114,115,44,32,91,93,41,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,73,110,105,40,105,110,105,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,111,100,121,95,108,105,110,101,115,40,98,111,100,121,41,32,61,32,91,32,34,37,115,32,61,32,37,115,34,32,37,32,91,107,44,32,98,111,100,121,91,107,93,93,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,98,111,100,121,41,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,101,99,116,105,111,110,95,108,105,110,101,115,40,115,110,97,109,101,44,32,115,98,111,100,121,41,32,61,32,91,32,34,91,37,115,93,34,32,37,32,91,115,110,97,109,101,93,32,93,32,43,32,98,111,100,121,95,108,105,110,101,115,40,115,98,111,100,121,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,97,105,110,95,98,111,100,121,32,61,32,105,102,32,115,116,100,46,111,98,106,101,99,116,72,97,115,40,105,110,105,44,32,34,109,97,105,110,34,41,32,116,104,101,110,32,98,111,100,121,95,108,105,110,101,115,40,105,110,105,46,109,97,105,110,41,32,101,108,115,101,32,91,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,108,108,95,115,101,99,116,105,111,110,115,32,61,32,91,115,101,99,116,105,111,110,95,108,105,110,101,115,40,107,44,32,105,110,105,46,115,101,99,116,105,111,110,115,91,107,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,105,110,105,46,115,101,99,116,105,111,110,115,41,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,109,97,105,110,95,98,111,100,121,32,43,32,115,116,100,46,102,108,97,116,116,101,110,65,114,114,97,121,115,40,97,108,108,95,115,101,99,116,105,111,110,115,41,32,43,32,91,34,34,93,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,74,115,111,110,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,92,34,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,92,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,92,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,92,92,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,98,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,98,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,102,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,110,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,114,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,116,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,117,48,48,48,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,117,48,48,48,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,112,32,61,32,115,116,100,46,99,111,100,101,112,111,105,110,116,40,99,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,112,32,60,32,51,50,32,124,124,32,99,112,32,62,32,49,50,54,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,117,37,48,52,120,34,32,37,32,91,99,112,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,34,92,34,37,115,92,34,34,32,37,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,32,32,32,32,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,115,116,114,41,58,58,32,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,74,115,111,110,40,115,116,114,41,44,10,32,32,32,32,32,32,32,32,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,66,97,115,104,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,39,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,39,92,34,39,92,34,39,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,34,39,37,115,39,34,32,37,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,68,111,108,108,97,114,115,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,36,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,36,36,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,111,98,106,101,99,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,105,101,108,100,115,32,61,32,91,34,37,115,58,32,37,115,34,32,37,32,91,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,107,41,44,32,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,91,107,93,41,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,111,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,34,123,37,115,125,34,32,37,32,91,115,116,100,46,106,111,105,110,40,34,44,32,34,44,32,102,105,101,108,100,115,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,91,37,115,93,34,32,37,32,91,115,116,100,46,106,111,105,110,40,34,44,32,34,44,32,91,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,50,41,32,102,111,114,32,111,50,32,105,110,32,111,93,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,37,115,34,32,37,32,91,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,111,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,99,97,110,110,111,116,32,109,97,110,105,102,101,115,116,32,102,117,110,99,116,105,111,110,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,116,111,83,116,114,105,110,103,40,111,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,116,114,117,101,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,114,117,101,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,102,97,108,115,101,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,97,108,115,101,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,111,110,101,34,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,80,121,116,104,111,110,86,97,114,115,40,99,111,110,102,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,114,115,32,61,32,91,34,37,115,32,61], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);
/* memory initializer */ allocate([32,37,115,34,32,37,32,91,107,44,32,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,99,111,110,102,91,107,93,41,93,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,99,111,110,102,41,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,118,97,114,115,32,43,32,91,34,34,93,41,44,10,10,10,32,32,32,32,108,111,99,97,108,32,98,97,115,101,54,52,95,116,97,98,108,101,32,61,32,34,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47,34,44,10,32,32,32,32,108,111,99,97,108,32,98,97,115,101,54,52,95,105,110,118,32,61,32,123,91,98,97,115,101,54,52,95,116,97,98,108,101,91,105,93,93,58,32,105,32,102,111,114,32,105,32,105,110,32,115,116,100,46,114,97,110,103,101,40,48,44,32,54,51,41,125,44,10,10,32,32,32,32,98,97,115,101,54,52,40,105,110,112,117,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,121,116,101,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,105,110,112,117,116,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,112,40,102,117,110,99,116,105,111,110,40,99,41,32,115,116,100,46,99,111,100,101,112,111,105,110,116,40,99,41,44,32,105,110,112,117,116,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,112,117,116,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,114,114,44,32,105,44,32,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,105,32,43,32,49,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,61,61,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,105,32,43,32,50,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,44,32,52,32,77,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,32,124,32,40,97,114,114,91,105,43,49,93,32,38,32,50,52,48,41,32,62,62,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,49,93,32,38,32,49,53,41,32,60,60,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,61,34,59,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,44,32,52,32,77,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,32,124,32,40,97,114,114,91,105,43,49,93,32,38,32,50,52,48,41,32,62,62,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,44,32,50,32,77,83,66,32,111,102,32,105,43,50,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,49,93,32,38,32,49,53,41,32,60,60,32,50,32,124,32,40,97,114,114,91,105,43,50,93,32,38,32,49,57,50,41,32,62,62,32,54,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,76,83,66,32,111,102,32,105,43,50,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,50,93,32,38,32,54,51,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,97,110,105,116,121,32,61,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,114,44,32,97,41,32,114,32,38,38,32,40,97,32,60,32,50,53,54,41,44,32,98,121,116,101,115,44,32,116,114,117,101,41,59,10,32,32,32,32,32,32,32,32,105,102,32,33,115,97,110,105,116,121,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,32,111,110,108,121,32,98,97,115,101,54,52,32,101,110,99,111,100,101,32,115,116,114,105,110,103,115,32,47,32,97,114,114,97,121,115,32,111,102,32,115,105,110,103,108,101,32,98,121,116,101,115,46,34,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,98,121,116,101,115,44,32,48,44,32,34,34,41,44,10,10,32,32,32,32,10,32,32,32,32,98,97,115,101,54,52,68,101,99,111,100,101,66,121,116,101,115,40,115,116,114,41,58,58,32,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,37,32,52,32,33,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,97,32,98,97,115,101,54,52,32,101,110,99,111,100,101,100,32,115,116,114,105,110,103,32,92,34,37,115,92,34,34,32,37,32,115,116,114,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,105,44,32,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,97,108,108,32,54,32,98,105,116,115,32,111,102,32,105,44,32,50,32,77,83,66,32,111,102,32,105,43,49,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,49,32,61,32,91,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,93,93,32,60,60,32,50,32,124,32,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,49,93,93,32,62,62,32,52,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,44,32,52,77,83,66,32,111,102,32,105,43,50,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,50,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,43,50,93,32,61,61,32,34,61,34,32,116,104,101,110,32,91,93,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,49,93,93,32,38,32,49,53,41,32,60,60,32,52,32,124,32,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,50,93,93,32,62,62,32,50,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,43,50,44,32,97,108,108,32,54,32,98,105,116,115,32,111,102,32,105,43,51,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,51,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,43,51,93,32,61,61,32,34,61,34,32,116,104,101,110,32,91,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,50,93,93,32,38,32,51,41,32,60,60,32,54,32,124,32,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,51,93,93,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,105,43,52,44,32,114,32,43,32,110,49,32,43,32,110,50,32,43,32,110,51,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,48,44,32,91,93,41,44,10,10,32,32,32,32,98,97,115,101,54,52,68,101,99,111,100,101,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,121,116,101,115,32,61,32,115,116,100,46,98,97,115,101,54,52,68,101,99,111,100,101,66,121,116,101,115,40,115,116,114,41,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,34,44,32,115,116,100,46,109,97,112,40,102,117,110,99,116,105,111,110,40,98,41,32,115,116,100,46,99,104,97,114,40,98,41,44,32,98,121,116,101,115,41,41,10,10,10,125,10,0,0,0,115,116,100,0,0,0,0,0,92,34,0,0,0,0,0,0,92,92,0,0,0,0,0,0,92,98,0,0,0,0,0,0,92,102,0,0,0,0,0,0,92,110,0,0,0,0,0,0,92,114,0,0,0,0,0,0,92,116,0,0,0,0,0,0,92,117,48,48,48,48,0,0,92,117,0,0,0,0,0,0,51,65,83,84,0,0,0,0,40,214,0,0,200,132,0,0,53,76,111,99,97,108,0,0,80,214,0,0,216,132,0,0,208,132,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,112,97,114,115,105,110,103,32,97,110,32,65,83,84,32,116,104,97,116,32,119,97,115,110,39,116,32,119,114,97,112,112,101,100,32,105,110,32,97,32,115,116,100,32,108,111,99,97,108,46,0,0,0,0,0,0,0,0,96,133,0,0,23,0,0,0,24,0,0,0,49,53,66,117,105,108,116,105,110,70,117,110,99,116,105,111,110,0,0,0,0,0,0,0,80,214,0,0,72,133,0,0,208,132,0,0,0,0,0,0,0,0,0,0,208,132,0,0,25,0,0,0,26,0,0,0,0,0,0,0,160,133,0,0,27,0,0,0,28,0,0,0,49,51,76,105,116,101,114,97,108,83,116,114,105,110,103,0,80,214,0,0,144,133,0,0,208,132,0,0,0,0,0,0,0,0,0,0,224,132,0,0,29,0,0,0,30,0,0,0,53,65,112,112,108,121,0,0,80,214,0,0,192,133,0,0,208,132,0,0,0,0,0,0,40,41,0,0,0,0,0,0,40,0,0,0,0,0,0,0,44,32,0,0,0,0,0,0,41,0,0,0,0,0,0,0,53,65,114,114,97,121,0,0,80,214,0,0,248,133,0,0,208,132,0,0,0,0,0,0,91,32,93,0,0,0,0,0,91,0,0,0,0,0,0,0,93,0,0,0,0,0,0,0,54,66,105,110,97,114,121,0,80,214,0,0,40,134,0,0,208,132,0,0,0,0,0,0,32,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,112,97,114,115,105,110,103,32,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,46,0,0,0,0,0,49,49,67,111,110,100,105,116,105,111,110,97,108,0,0,0,80,214,0,0,120,134,0,0,208,132,0,0,0,0,0,0,105,102,32,0,0,0,0,0,32,116,104,101,110,32,0,0,32,101,108,115,101,32,0,0,53,69,114,114,111,114,0,0,80,214,0,0,176,134,0,0,208,132,0,0,0,0,0,0,101,114,114,111,114,32,0,0,56,70,117,110,99,116,105,111,110,0,0,0,0,0,0,0,80,214,0,0,208,134,0,0,208,132,0,0,0,0,0,0,102,117,110,99,116,105,111,110,32,0,0,0,0,0,0,0,41,32,0,0,0,0,0,0,54,73,109,112,111,114,116,0,80,214,0,0,8,135,0,0,208,132,0,0,0,0,0,0,105,109,112,111,114,116,32,0,57,73,109,112,111,114,116,115,116,114,0,0,0,0,0,0,80,214,0,0,40,135,0,0,208,132,0,0,0,0,0,0,105,109,112,111,114,116,115,116,114,32,0,0,0,0,0,0,53,73,110,100,101,120,0,0,80,214,0,0,88,135,0,0,208,132,0,0,0,0,0,0,108,111,99,97,108,32,0,0,32,61,32,0,0,0,0,0,59,32,0,0,0,0,0,0,49,52,76,105,116,101,114,97,108,66,111,111,108,101,97,110,0,0,0,0,0,0,0,0,80,214,0,0,136,135,0,0,208,132,0,0,0,0,0,0,116,114,117,101,0,0,0,0,102,97,108,115,101,0,0,0,49,51,76,105,116,101,114,97,108,78,117,109,98,101,114,0,80,214,0,0,192,135,0,0,208,132,0,0,0,0,0,0,49,49,76,105,116,101,114,97,108,78,117,108,108,0,0,0,80,214,0,0,224,135,0,0,208,132,0,0,0,0,0,0,110,117,108,108,0,0,0,0,54,79,98,106,101,99,116,0,80,214,0,0,8,136,0,0,208,132,0,0,0,0,0,0,123,32,125,0,0,0,0,0,123,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,58,58,0,0,0,0,0,0,58,58,58,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,70,105,101,108,100,72,105,100,101,58,32,0,0,0,0,0,125,0,0,0,0,0,0,0,49,55,79,98,106,101,99,116,67,111,109,112,111,115,105,116,105,111,110,0,0,0,0,0,80,214,0,0,120,136,0,0,208,132,0,0,0,0,0,0,123,91,0,0,0,0,0,0,93,58,32,0,0,0,0,0,32,102,111,114,32,0,0,0,32,105,110,32,0,0,0,0,52,83,101,108,102,0,0,0,80,214,0,0,192,136,0,0,208,132,0,0,0,0,0,0,115,101,108,102,0,0,0,0,53,83,117,112,101,114,0,0,80,214,0,0,224,136,0,0,208,132,0,0,0,0,0,0,115,117,112,101,114,0,0,0,53,85,110,97,114,121,0,0,80,214,0,0,0,137,0,0,208,132,0,0,0,0,0,0,51,86,97,114,0,0,0,0,80,214,0,0,24,137,0,0,208,132,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,65,83,84,58,32,0,0,0,43,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,126,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,117,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,0,42,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,60,60,0,0,0,0,0,0,62,62,0,0,0,0,0,0,62,0,0,0,0,0,0,0,62,61,0,0,0,0,0,0,60,0,0,0,0,0,0,0,60,61,0,0,0,0,0,0,61,61,0,0,0,0,0,0,33,61,0,0,0,0,0,0,38,0,0,0,0,0,0,0,94,0,0,0,0,0,0,0,124,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,124,124,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,68,105,100,32,110,111,116,32,101,120,112,101,99,116,58,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,44,32,34,0,0,0,0,0,34,41,0,0,0,0,0,0,34,123,34,0,0,0,0,0,34,125,34,0,0,0,0,0,34,91,34,0,0,0,0,0,34,93,34,0,0,0,0,0,34,58,34,0,0,0,0,0,34,44,34,0,0,0,0,0,34,36,34,0,0,0,0,0,34,46,34,0,0,0,0,0,34,40,34,0,0,0,0,0,34,41,34,0,0,0,0,0,34,59,34,0,0,0,0,0,73,68,69,78,84,73,70,73,69,82,0,0,0,0,0,0,78,85,77,66,69,82,0,0,79,80,69,82,65,84,79,82,0,0,0,0,0,0,0,0,83,84,82,73,78,71,0,0,101,108,115,101,0,0,0,0,101,114,114,111,114,0,0,0,102,111,114,0,0,0,0,0,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,105,102,0,0,0,0,0,0,105,109,112,111,114,116,0,0,105,109,112,111,114,116,115,116,114,0,0,0,0,0,0,0,105,110,0,0,0,0,0,0,108,111,99,97,108,0,0,0,116,97,105,108,99,97,108,108,0,0,0,0,0,0,0,0,116,104,101,110,0,0,0,0,101,110,100,32,111,102,32,102,105,108,101,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,111,107,101,110,32,107,105,110,100,58,32,0,0,0,0,102,117,110,99,116,105,111,110,32,112,97,114,97,109,101,116,101,114,0,0,0,0,0,0,78,111,116,32,97,110,32,105,100,101,110,116,105,102,105,101,114,58,32,0,0,0,0,0,69,120,112,101,99,116,101,100,32,40,32,98,117,116,32,103,111,116,32,0,0,0,0,0,69,120,112,101,99,116,101,100,32,44,32,111,114,32,59,32,98,117,116,32,103,111,116,32,0,0,0,0,0,0,0,0,78,111,116,32,97,32,117,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,37,0,0,0,0,0,0,0,78,111,116,32,97,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,102,117,110,99,116,105,111,110,32,97,114,103,117,109,101,110,116,0,0,0,0,0,0,0,109,111,100,0,0,0,0,0,0,0,0,0,32,137,0,0,25,0,0,0,31,0,0,0,0,0,0,0,48,134,0,0,25,0,0,0,32,0,0,0,36,0,0,0,0,0,0,0,79,98,106,101,99,116,32,99,111,109,112,111,115,105,116,105,111,110,32,99,97,110,32,111,110,108,121,32,104,97,118,101,32,111,110,101,32,102,105,101,108,100,47,118,97,108,117,101,32,112,97,105,114,46,0,0,76,111,99,97,108,115,32,109,117,115,116,32,97,112,112,101,97,114,32,102,105,114,115,116,32,105,110,32,97,110,32,111,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,46,0,0,0,0,79,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,115,32,99,97,110,110,111,116,32,104,97,118,101,32,104,105,100,100,101,110,32,102,105,101,108,100,115,46,0,0,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,32,99,111,109,109,97,32,98,101,102,111,114,101,32,102,111,114,46,0,0,0,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,102,105,101,108,100,46,0,0,0,0,0,109,101,116,104,111,100,32,112,97,114,97,109,101,116,101,114,0,0,0,0,0,0,0,0,68,117,112,108,105,99,97,116,101,32,102,105,101,108,100,58,32,0,0,0,0,0,0,0,112,97,114,115,105,110,103,32,102,105,101,108,100,32,100,101,102,105,110,105,116,105,111,110,0,0,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,58,32,0,0,0,0,32,119,104,105,108,101,32,0,0,0,0,0,232,136,0,0,25,0,0,0,33,0,0,0,0,0,0,0,96,135,0,0,25,0,0,0,34,0,0,0,0,0,0,0,144,136,0,0,25,0,0,0,35,0,0,0,0,0,0,0,16,136,0,0,36,0,0,0,37,0,0,0,0,0,0,0,200,136,0,0,25,0,0,0,38,0,0,0,0,0,0,0,200,133,0,0,39,0,0,0,40,0,0,0,112,97,114,115,105,110,103,32,116,101,114,109,105,110,97,108,0,0,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,102,105,108,101,46,0,109,97,112,0,0,0,0,0,102,105,108,116,101,114,77,97,112,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,105,102,32,111,114,32,93,32,97,102,116,101,114,32,102,111,114,32,99,108,97,117,115,101,44,32,103,111,116,58,32,0,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,97,114,114,97,121,32,101,108,101,109,101,110,116,46,0,0,0,0,0,78,111,32,116,111,112,45,108,101,118,101,108,32,111,98,106,101,99,116,32,102,111,117,110,100,46,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,111,107,32,107,105,110,100,58,32,0,0,0,0,0,0,0,0,0,0,56,135,0,0,41,0,0,0,42,0,0,0,0,0,0,0,16,135,0,0,43,0,0,0,44,0,0,0,0,0,0,0,160,135,0,0,25,0,0,0,45,0,0,0,0,0,0,0,208,135,0,0,25,0,0,0,46,0,0,0,0,0,0,0,0,134,0,0,47,0,0,0,48,0,0,0,0,0,0,0,8,137,0,0,25,0,0,0,49,0,0,0,68,117,112,108,105,99,97,116,101,32,108,111,99,97,108,32,118,97,114,58,32,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,224,134,0,0,50,0,0,0,51,0,0,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,136,134,0,0,25,0,0,0,52,0,0,0,0,0,0,0,240,135,0,0,25,0,0,0,53,0,0,0,69,120,112,101,99,116,101,100,32,116,111,107,101,110,32,0,32,98,117,116,32,103,111,116,32,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,111,112,101,114,97,116,111,114,32,0,0,0,0,0,0,0,0,0,0,184,134,0,0,25,0,0,0,54,0,0,0,68,117,112,108,105,99,97,116,101,32,102,117,110,99,116,105,111,110,32,112,97,114,97,109,101,116,101,114,58,32,0,0,67,97,110,39,116,32,117,115,101,32,115,101,108,102,32,111,117,116,115,105,100,101,32,111,102,32,97,110,32,111,98,106,101,99,116,46,0,0,0,0,67,97,110,39,116,32,117,115,101,32,115,117,112,101,114,32,111,117,116,115,105,100,101,32,111,102,32,97,110,32,111,98,106,101,99,116,46,0,0,0,85,110,107,110,111,119,110,32,118,97,114,105,97,98,108,101,58,32,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,65,83,84,58,32,0,0,0,68,117,114,105,110,103,32,109,97,110,105,102,101,115,116,97,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,77,117,108,116,105,32,109,111,100,101,58,32,84,111,112,45,108,101,118,101,108,32,111,98,106,101,99,116,32,119,97,115,32,97,32,0,0,0,0,0,44,32,0,0,0,0,0,0,115,104,111,117,108,100,32,98,101,32,97,110,32,111,98,106,101,99,116,32,119,104,111,115,101,32,107,101,121,115,32,97,114,101,32,102,105,108,101,110,97,109,101,115,32,97,110,100,32,118,97,108,117,101,115,32,104,111,108,100,32,0,0,0,116,104,101,32,74,83,79,78,32,102,111,114,32,116,104,97,116,32,102,105,108,101,46,0,49,50,82,117,110,116,105,109,101,69,114,114,111,114,0,0,40,214,0,0,176,145,0,0,70,105,101,108,100,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,58,32,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,52,72,101,97,112,76,101,97,102,79,98,106,101,99,116,69,0,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,79,98,106,101,99,116,69,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,69,110,116,105,116,121,69,0,0,0,0,40,214,0,0,40,146,0,0,80,214,0,0,8,146,0,0,72,146,0,0,0,0,0,0,80,214,0,0,224,145,0,0,80,146,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,54,72,101,97,112,83,105,109,112,108,101,79,98,106,101,99,116,69,0,0,0,0,0,0,80,214,0,0,112,146,0,0,96,146,0,0,0,0,0,0,77,97,120,32,115,116,97,99,107,32,102,114,97,109,101,115,32,101,120,99,101,101,100,101,100,46,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,57,72,101,97,112,84,104,117,110,107,69,0,0,0,0,0,0,80,214,0,0,200,146,0,0,72,146,0,0,0,0,0,0,98,105,110,100,46,115,101,99,111,110,100,32,33,61,32,110,117,108,108,112,116,114,0,0,118,109,46,99,112,112,0,0,110,101,119,67,97,108,108,0,97,110,111,110,121,109,111,117,115,0,0,0,0,0,0,0,111,98,106,101,99,116,32,60,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,116,104,117,110,107,32,60,0,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,32,60,0,0,0,0,0,0,102,117,110,99,116,105,111,110,32,60,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,56,72,101,97,112,69,120,116,101,110,100,101,100,79,98,106,101,99,116,69,0,0,0,0,80,214,0,0,120,147,0,0,80,146,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,53,72,101,97,112,83,117,112,101,114,79,98,106,101,99,116,69,0,0,0,0,0,0,0,80,214,0,0,176,147,0,0,80,146,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,50,51,72,101,97,112,67,111,109,112,114,101,104,101,110,115,105,111,110,79,98,106,101,99,116,69,0,0,0,0,0,0,0,80,214,0,0,232,147,0,0,96,146,0,0,0,0,0,0,110,117,108,108,0,0,0,0,98,111,111,108,101,97,110,0,100,111,117,98,108,101,0,0,97,114,114,97,121,0,0,0,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,111,98,106,101,99,116,0,0,115,116,114,105,110,103,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,121,112,101,58,32,0,0,0,0,0,0,176,148,0,0,55,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,53,83,116,97,99,107,69,0,0,40,214,0,0,152,148,0,0,115,116,97,99,107,91,0,0,93,32,61,32,0,0,0,0,32,40,0,0,0,0,0,0,41,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,41,45,40,0,0,0,0,0,91,32,93,0,0,0,0,0,91,10,0,0,0,0,0,0,91,0,0,0,0,0,0,0,32,32,32,0,0,0,0,0,44,10,0,0,0,0,0,0,10,0,0,0,0,0,0,0,93,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,102,97,108,115,101,0,0,0,67,111,117,108,100,110,39,116,32,109,97,110,105,102,101,115,116,32,102,117,110,99,116,105,111,110,32,105,110,32,74,83,79,78,32,111,117,116,112,117,116,46,0,0,0,0,0,0,123,32,125,0,0,0,0,0,123,10,0,0,0,0,0,0,123,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,34,58,32,0,0,0,0,0,125,0,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,115,116,114,105,110,103,32,114,101,115,117,108,116,44,32,103,111,116,58,32,0,0,0,65,116,116,101,109,112,116,32,116,111,32,117,115,101,32,115,117,112,101,114,32,119,104,101,110,32,116,104,101,114,101,32,105,115,32,110,111,32,115,117,112,101,114,32,99,108,97,115,115,46,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,67,111,117,108,100,32,110,111,116,32,98,105,110,100,32,118,97,114,105,97,98,108,101,58,32,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,65,83,84,58,32,0,0,0,79,110,108,121,32,102,117,110,99,116,105,111,110,115,32,99,97,110,32,98,101,32,99,97,108,108,101,100,44,32,103,111,116,32,0,0,0,0,0,0,69,120,112,101,99,116,101,100,32,0,0,0,0,0,0,0,32,97,114,103,117,109,101,110,116,115,44,32,103,111,116,32,0,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,73,110,101,113,117,97,108,105,116,105,101,115,32,110,111,116,32,100,101,115,117,103,97,114,101,100,0,0,0,0,0,0,66,105,110,97,114,121,32,111,112,101,114,97,116,111,114,32,0,0,0,0,0,0,0,0,32,114,101,113,117,105,114,101,115,32,109,97,116,99,104,105,110,103,32,116,121,112,101,115,44,32,103,111,116,32,0,0,32,97,110,100,32,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,97,114,114,97,121,115,46,0,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,98,111,111,108,101,97,110,115,46,0,0,68,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111,46,0,0,0,0,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,110,117,109,98,101,114,115,46,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,102,117,110,99,116,105,111,110,115,46,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,110,117,108,108,46,0,0,0,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,111,98,106,101,99,116,115,46,0,0,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,115,116,114,105,110,103,115,46,0,0,0,102,105,108,116,101,114,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,114,101,116,117,114,110,32,98,111,111,108,101,97,110,44,32,103,111,116,58,32,0,0,0,0,0,0,109,97,107,101,65,114,114,97,121,32,114,101,113,117,105,114,101,115,32,115,105,122,101,32,62,61,32,48,44,32,103,111,116,32,0,0,0,0,0,0,109,97,107,101,65,114,114,97,121,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,116,97,107,101,32,49,32,112,97,114,97,109,44,32,103,111,116,58,32,0,0,0,0,0,110,117,109,98,101,114,0,0,102,105,108,116,101,114,32,102,117,110,99,116,105,111,110,32,116,97,107,101,115,32,49,32,112,97,114,97,109,101,116,101,114,46,0,0,0,0,0,0,108,101,110,103,116,104,32,116,97,107,101,115,32,49,32,112,97,114,97,109,101,116,101,114,46,0,0,0,0,0,0,0,108,101,110,103,116,104,32,111,112,101,114,97,116,101,115,32,111,110,32,115,116,114,105,110,103,115,44,32,111,98,106,101,99,116,115,44,32,97,110,100,32,97,114,114,97,121,115,44,32,103,111,116,32,0,0,0,99,111,100,101,112,111,105,110,116,32,116,97,107,101,115,32,97,32,115,116,114,105,110,103,32,111,102,32,108,101,110,103,116,104,32,49,44,32,103,111,116,32,108,101,110,103,116,104,32,0,0,0,0,0,0,0,67,111,100,101,112,111,105,110,116,115,32,109,117,115,116,32,98,101,32,62,61,32,48,44,32,103,111,116,32,0,0,0,83,111,114,114,121,44,32,111,110,108,121,32,65,83,67,73,73,32,115,117,112,112,111,114,116,101,100,32,114,105,103,104,116,32,110,111,119,46,32,32,0,0,0,0,0,0,0,0,67,111,100,101,112,111,105,110,116,115,32,109,117,115,116,32,98,101,32,60,32,49,50,56,44,32,103,111,116,32,0,0,85,110,100,101,102,105,110,101,100,32,101,120,116,101,114,110,97,108,32,118,97,114,105,97,98,108,101,58,32,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,122,101,100,32,98,117,105,108,116,105,110,58,32,0,0,69,114,114,111,114,32,109,101,115,115,97,103,101,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,32,0,0,0,0,0,0,73,102,32,99,111,110,100,105,116,105,111,110,32,109,117,115,116,32,98,101,32,98,111,111,108,101,97,110,44,32,103,111,116,32,0,0,0,0,0,0,65,114,114,97,121,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,110,117,109,98,101,114,44,32,103,111,116,32,0,0,0,0,0,0,0,0,65,114,114,97,121,32,98,111,117,110,100,115,32,101,114,114,111,114,58,32,0,0,0,0,32,110,111,116,32,119,105,116,104,105,110,32,91,48,44,32,0,0,0,0,0,0,0,0,111,98,106,32,33,61,32,110,117,108,108,112,116,114,0,0,101,118,97,108,117,97,116,101,0,0,0,0,0,0,0,0,79,98,106,101,99,116,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,32,0,0,0,0,0,0,0,83,116,114,105,110,103,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,0,0,0,0,0,83,116,114,105,110,103,32,98,111,117,110,100,115,32,101,114,114,111,114,58,32,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,78,111,116,32,111,98,106,101,99,116,32,47,32,97,114,114,97,121,32,47,32,115,116,114,105,110,103,46,0,0,0,0,67,97,110,32,111,110,108,121,32,105,110,100,101,120,32,111,98,106,101,99,116,115,44,32,115,116,114,105,110,103,115,44,32,97,110,100,32,97,114,114,97,121,115,44,32,103,111,116,32,0,0,0,0,0,0,0,70,105,101,108,100,32,110,97,109,101,32,119,97,115,32,110,111,116,32,97,32,115,116,114,105,110,103,46,0,0,0,0,68,117,112,108,105,99,97,116,101,32,102,105,101,108,100,32,110,97,109,101,58,32,34,0,79,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,32,110,101,101,100,115,32,97,114,114,97,121,44,32,103,111,116,32,0,0,102,105,101,108,100,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,58,32,0,0,0,0,0,85,110,97,114,121,32,111,112,101,114,97,116,111,114,32,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,116,121,112,101,32,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,70,114,97,109,101,75,105,110,100,58,32,32,0,0,0,0,43,0,0,0,0,0,0,0,126,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,117,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,0,102,114,111,109,32,33,61,32,110,117,108,108,112,116,114,0,46,47,115,116,97,116,101,46,104,0,0,0,0,0,0,0,109,97,114,107,70,114,111,109,0,0,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,57,72,101,97,112,65,114,114,97,121,69,0,0,0,0,0,0,80,214,0,0,240,156,0,0,72,146,0,0,0,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,49,72,101,97,112,67,108,111,115,117,114,101,69,0,0,0,80,214,0,0,32,157,0,0,72,146,0,0,0,0,0,0,0,0,0,0,24,148,0,0,56,0,0,0,57,0,0,0,78,111,116,32,97,32,110,117,109,98,101,114,0,0,0,0,0,0,0,0,232,146,0,0,58,0,0,0,59,0,0,0,66,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,32,0,0,0,0,0,0,0,32,101,120,112,101,99,116,101,100,32,40,0,0,0,0,0,41,32,98,117,116,32,103,111,116,32,40,0,0,0,0,0,0,0,0,0,160,147,0,0,60,0,0,0,61,0,0,0,42,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,60,60,0,0,0,0,0,0,62,62,0,0,0,0,0,0,62,61,0,0,0,0,0,0,60,0,0,0,0,0,0,0,60,61,0,0,0,0,0,0,61,61,0,0,0,0,0,0,33,61,0,0,0,0,0,0,38,0,0,0,0,0,0,0,94,0,0,0,0,0,0,0,124,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,124,124,0,0,0,0,0,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,0,0,0,0,0,216,147,0,0,60,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,146,0,0,63,0,0,0,64,0,0,0,0,0,0,0,200,158,0,0,65,0,0,0,66,0,0,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,83,116,114,105,110,103,69,0,0,0,0,80,214,0,0,168,158,0,0,72,146,0,0,0,0,0,0,67,111,117,108,100,110,39,116,32,111,112,101,110,32,105,109,112,111,114,116,32,34,0,0,0,0,0,0,64,157,0,0,67,0,0,0,68,0,0,0,0,0,0,0,16,157,0,0,69,0,0,0,70,0,0,0,97,114,114,97,121,95,101,108,101,109,101,110,116,0,0,0,10,0,0,0,0,0,0,0,82,85,78,84,73,77,69,32,69,82,82,79,82,58,32,0,9,46,46,46,0,0,0,0,9,0,0,0,0,0,0,0,83,84,65,84,73,67,32,69,82,82,79,82,58,32,0,0,58,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,41,45,40,0,0,0,0,0,41,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,24,160,0,0,71,0,0,0,72,0,0,0,148,255,255,255,148,255,255,255,24,160,0,0,73,0,0,0,74,0,0,0,148,159,0,0,204,159,0,0,224,159,0,0,168,159,0,0,108,0,0,0,0,0,0,0,232,170,0,0,13,0,0,0,14,0,0,0,148,255,255,255,148,255,255,255,232,170,0,0,15,0,0,0,16,0,0,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,102,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+30720);
/* memory initializer */ allocate([97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,80,214,0,0,232,159,0,0,232,170,0,0,0,0,0,0,0,0,0,0,152,160,0,0,75,0,0,0,76,0,0,0,2,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,6,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,102,105,108,101,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,80,214,0,0,104,160,0,0,112,170,0,0,0,0,0,0,114], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+40960);
/* memory initializer */ allocate([56,165,0,0,77,0,0,0,78,0,0,0,3,0,0,0,5,0,0,0,3,0,0,0,3,0,0,0,7,0,0,0,8,0,0,0,6,0,0,0,9,0,0,0,10,0,0,0,5,0,0,0,7,0,0,0,6,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,80,214,0,0,24,165,0,0,176,170,0,0,0,0,0,0,0,0,0,0,160,165,0,0,77,0,0,0,79,0,0,0,4,0,0,0,5,0,0,0,3,0,0,0,3,0,0,0,11,0,0,0,8,0,0,0,6,0,0,0,12,0,0,0,13,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,80,214,0,0,136,165,0,0,176,170,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,0,0,0,0,56,166,0,0,80,0,0,0,81,0,0,0,5,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,14,0,0,0,2,0,0,0,2,0,0,0,15,0,0,0,4,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,80,214,0,0,24,166,0,0,112,170,0,0,0,0,0,0,0,0,0,0,160,166,0,0,80,0,0,0,82,0,0,0,6,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,16,0,0,0,17,0,0,0,11,0,0,0,3,0,0,0,12,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,80,214,0,0,136,166,0,0,112,170,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,40,214,0,0,176,166,0,0,58,32,0,0,0,0,0,0,0,0,0,0,16,167,0,0,83,0,0,0,84,0,0,0,18,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,80,214,0,0,248,166,0,0,208,212,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,40,214,0,0,32,167,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,80,214,0,0,72,167,0,0,64,167,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,0,112,170,0,0,85,0,0,0,86,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,15,0,0,0,4,0,0,0,9,0,0,0,3,0,0,0,12,0,0,0,0,0,0,0,176,170,0,0,87,0,0,0,88,0,0,0,7,0,0,0,5,0,0,0,3,0,0,0,3,0,0,0,11,0,0,0,8,0,0,0,6,0,0,0,9,0,0,0,10,0,0,0,5,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,232,170,0,0,13,0,0,0,14,0,0,0,248,255,255,255,248,255,255,255,232,170,0,0,15,0,0,0,16,0,0,0,8,0,0,0,0,0,0,0,48,171,0,0,89,0,0,0,90,0,0,0,248,255,255,255,248,255,255,255,48,171,0,0,91,0,0,0,92,0,0,0,4,0,0,0,0,0,0,0,120,171,0,0,17,0,0,0,18,0,0,0,252,255,255,255,252,255,255,255,120,171,0,0,19,0,0,0,20,0,0,0,4,0,0,0,0,0,0,0,192,171,0,0,93,0,0,0,94,0,0,0,252,255,255,255,252,255,255,255,192,171,0,0,95,0,0,0,96,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,169,0,0,97,0,0,0,98,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,176,169,0,0,99,0,0,0,100,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,80,214,0,0,104,169,0,0,16,167,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,40,214,0,0,152,169,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,80,214,0,0,184,169,0,0,176,169,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,80,214,0,0,248,169,0,0,176,169,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,40,214,0,0,56,170,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,40,214,0,0,120,170,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,176,214,0,0,184,170,0,0,0,0,0,0,1,0,0,0,232,169,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,176,214,0,0,0,171,0,0,0,0,0,0,1,0,0,0,40,170,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,176,214,0,0,72,171,0,0,0,0,0,0,1,0,0,0,232,169,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,176,214,0,0,144,171,0,0,0,0,0,0,1,0,0,0,40,170,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,176,214,0,0,216,171,0,0,3,0,0,0,2,0,0,0,232,170,0,0,2,0,0,0,120,171,0,0,2,8,0,0,0,0,0,0,112,172,0,0,101,0,0,0,102,0,0,0,19,0,0,0,1,0,0,0,10,0,0,0,11,0,0,0,2,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,80,214,0,0,80,172,0,0,96,167,0,0,0,0,0,0,0,0,0,0,184,186,0,0,103,0,0,0,104,0,0,0,105,0,0,0,1,0,0,0,5,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,186,0,0,106,0,0,0,107,0,0,0,105,0,0,0,2,0,0,0,6,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,191,0,0,108,0,0,0,109,0,0,0,105,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,40,192,0,0,110,0,0,0,111,0,0,0,105,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,192,0,0,112,0,0,0,113,0,0,0,105,0,0,0,5,0,0,0,6,0,0,0,23,0,0,0,7,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,128,193,0,0,114,0,0,0,115,0,0,0,105,0,0,0,9,0,0,0,10,0,0,0,25,0,0,0,11,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,168,188,0,0,116,0,0,0,117,0,0,0,105,0,0,0,20,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,168,188,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,72,189,0,0,118,0,0,0,119,0,0,0,105,0,0,0,28,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,72,189,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,216,189,0,0,120,0,0,0,121,0,0,0,105,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,190,0,0,122,0,0,0,123,0,0,0,105,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,187,0,0,124,0,0,0,125,0,0,0,105,0,0,0,36,0,0,0,37,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,38,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,187,0,0,126,0,0,0,127,0,0,0,105,0,0,0,39,0,0,0,40,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,41,0,0,0,18,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,187,0,0,128,0,0,0,129,0,0,0,105,0,0,0,42,0,0,0,43,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,44,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,187,0,0,130,0,0,0,131,0,0,0,105,0,0,0,45,0,0,0,46,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,47,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,194,0,0,132,0,0,0,133,0,0,0,105,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,160,194,0,0,134,0,0,0,135,0,0,0,105,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,48,195,0,0,136,0,0,0,137,0,0,0,105,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,192,195,0,0,138,0,0,0,139,0,0,0,105,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,190,0,0,140,0,0,0,141,0,0,0,105,0,0,0,14,0,0,0,13,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,190,0,0,142,0,0,0,143,0,0,0,105,0,0,0,15,0,0,0,14,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,144,186,0,0,144,0,0,0,145,0,0,0,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,183,0,0,146,0,0,0,147,0,0,0,105,0,0,0,13,0,0,0,16,0,0,0,14,0,0,0,17,0,0,0,15,0,0,0,1,0,0,0,18,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,184,0,0,148,0,0,0,149,0,0,0,105,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,48,0,0,0,49,0,0,0,5,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,186,0,0,150,0,0,0,151,0,0,0,105,0,0,0,51,0,0,0,52,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,0,0,0,0,104,186,0,0,152,0,0,0,153,0,0,0,105,0,0,0,53,0,0,0,54,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,160,182,0,0,154,0,0,0,155,0,0,0,105,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,80,214,0,0,136,182,0,0,208,166,0,0,0,0,0,0,0,0,0,0,48,183,0,0,154,0,0,0,156,0,0,0,105,0,0,0,19,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,16,0,0,0,20,0,0,0,17,0,0,0,21,0,0,0,18,0,0,0,5,0,0,0,22,0,0,0,6,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,40,214,0,0,16,183,0,0,176,214,0,0,248,182,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,40,183,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,176,214,0,0,80,183,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,40,183,0,0,2,0,0,0,0,0,0,0,0,184,0,0,154,0,0,0,157,0,0,0,105,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,55,0,0,0,56,0,0,0,8,0,0,0,57,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,40,214,0,0,224,183,0,0,176,214,0,0,184,183,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,248,183,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,176,214,0,0,32,184,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,248,183,0,0,2,0,0,0,0,0,0,0,192,184,0,0,154,0,0,0,158,0,0,0,105,0,0,0,5,0,0,0,6,0,0,0,9,0,0,0,58,0,0,0,59,0,0,0,10,0,0,0,60,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,176,214,0,0,152,184,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,248,183,0,0,2,0,0,0,0,0,0,0,56,185,0,0,154,0,0,0,159,0,0,0,105,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,61,0,0,0,62,0,0,0,12,0,0,0,63,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,176,214,0,0,16,185,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,248,183,0,0,2,0,0,0,0,0,0,0,176,185,0,0,154,0,0,0,160,0,0,0,105,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,61,0,0,0,62,0,0,0,12,0,0,0,63,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,80,214,0,0,136,185,0,0,56,185,0,0,0,0,0,0,0,0,0,0,24,186,0,0,154,0,0,0,161,0,0,0,105,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,61,0,0,0,62,0,0,0,12,0,0,0,63,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,80,214,0,0,240,185,0,0,56,185,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,80,214,0,0,40,186,0,0,160,182,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,80,214,0,0,80,186,0,0,160,182,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,80,214,0,0,120,186,0,0,160,182,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,80,214,0,0,160,186,0,0,160,182,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,80,214,0,0,200,186,0,0,160,182,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,40,214,0,0,16,187,0,0,176,214,0,0,240,186,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,40,187,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,176,214,0,0,80,187,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,40,187,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,176,214,0,0,144,187,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,40,187,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,176,214,0,0,208,187,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,40,187,0,0,2,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,40,214,0,0,88,188,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,40,214,0,0,120,188,0,0,176,214,0,0,16,188,0,0,0,0,0,0,3,0,0,0,160,182,0,0,2,0,0,0,112,188,0,0,2,0,0,0,160,188,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,40,214,0,0,24,189,0,0,176,214,0,0,208,188,0,0,0,0,0,0,3,0,0,0,160,182,0,0,2,0,0,0,112,188,0,0,2,0,0,0,64,189,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,40,214,0,0,184,189,0,0,176,214,0,0,112,189,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,208,189,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,176,214,0,0,248,189,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,208,189,0,0,0,8,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,40,214,0,0,120,190,0,0,176,214,0,0,96,190,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,144,190,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,176,214,0,0,184,190,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,144,190,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,40,214,0,0,80,191,0,0,176,214,0,0,56,191,0,0,0,0,0,0,1,0,0,0,112,191,0,0,0,0,0,0,176,214,0,0,240,190,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,120,191,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,176,214,0,0,248,191,0,0,0,0,0,0,1,0,0,0,112,191,0,0,0,0,0,0,176,214,0,0,176,191,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,16,192,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,40,214,0,0,168,192,0,0,176,214,0,0,144,192,0,0,0,0,0,0,1,0,0,0,200,192,0,0,0,0,0,0,176,214,0,0,72,192,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,208,192,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,176,214,0,0,80,193,0,0,0,0,0,0,1,0,0,0,200,192,0,0,0,0,0,0,176,214,0,0,8,193,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,104,193,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,40,214,0,0,232,193,0,0,176,214,0,0,160,193,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,8,194,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,40,214,0,0,120,194,0,0,176,214,0,0,48,194,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,152,194,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,40,214,0,0,8,195,0,0,176,214,0,0,192,194,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,40,195,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,40,214,0,0,152,195,0,0,176,214,0,0,80,195,0,0,0,0,0,0,2,0,0,0,160,182,0,0,2,0,0,0,184,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+42196);
/* memory initializer */ allocate([0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,192,209,0,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,0,88,211,0,0,162,0,0,0,163,0,0,0,64,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,80,214,0,0,72,211,0,0,224,211,0,0,0,0,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,40,214,0,0,208,211,0,0,0,0,0,0,40,212,0,0,164,0,0,0,165,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,208,212,0,0,166,0,0,0,167,0,0,0,18,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,80,214,0,0,24,212,0,0,224,211,0,0,0,0,0,0,0,0,0,0,104,212,0,0,164,0,0,0,168,0,0,0,65,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,80,214,0,0,80,212,0,0,40,212,0,0,0,0,0,0,0,0,0,0,168,212,0,0,164,0,0,0,169,0,0,0,65,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,80,214,0,0,144,212,0,0,40,212,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,80,214,0,0,184,212,0,0,224,211,0,0,0,0,0,0,0,0,0,0,48,213,0,0,170,0,0,0,171,0,0,0,66,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,40,214,0,0,8,213,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,80,214,0,0,32,213,0,0,224,211,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,80,214,0,0,64,213,0,0,24,213,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,80,214,0,0,120,213,0,0,104,213,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,80,214,0,0,216,213,0,0,104,213,0,0,0,0,0,0,80,214,0,0,176,213,0,0,0,214,0,0,0,0,0,0,0,0,0,0,160,213,0,0,172,0,0,0,173,0,0,0,174,0,0,0,175,0,0,0,23,0,0,0,15,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,152,214,0,0,172,0,0,0,176,0,0,0,174,0,0,0,175,0,0,0,23,0,0,0,16,0,0,0,2,0,0,0,8,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,80,214,0,0,112,214,0,0,160,213,0,0,0,0,0,0,0,0,0,0,248,214,0,0,172,0,0,0,177,0,0,0,174,0,0,0,175,0,0,0,23,0,0,0,17,0,0,0,3,0,0,0,9,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,80,214,0,0,208,214,0,0,160,213,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,110,97,110,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+52436);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

   
  Module["_i64Add"] = _i64Add;

   
  Module["_i64Subtract"] = _i64Subtract;

  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          }
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
  
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
  
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
  
      /*
      // Disabled, see https://github.com/kripken/emscripten/issues/2770
      stream = FS.getStreamFromPtr(stream);
      if (stream.stream_ops.flush) {
        stream.stream_ops.flush(stream);
      }
      */
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  var _emscripten_resume=true;

  var _emscripten_landingpad=true;

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }


  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        // If Module['websocket'] has already been defined (e.g. for configuring
        // the subprotocol/url) use that, if not initialise it to a new object.
        Module['websocket'] = (Module['websocket'] && 
                               ('object' === typeof Module['websocket'])) ? Module['websocket'] : {};
  
        // Add the Event registration mechanism to the exported websocket configuration
        // object so we can register network callbacks from native JavaScript too.
        // For more documentation see system/include/emscripten/emscripten.h
        Module['websocket']._callbacks = {};
        Module['websocket']['on'] = function(event, callback) {
  	    if ('function' === typeof callback) {
  		  this._callbacks[event] = callback;
          }
  	    return this;
        };
  
        Module['websocket'].emit = function(event, param) {
  	    if ('function' === typeof this._callbacks[event]) {
  		  this._callbacks[event].call(this, param);
          }
        };
  
        // If debug is enabled register simple default logging callbacks for each Event.
  
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          error: null, // Used in getsockopt for SOL_SOCKET/SO_ERROR test
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces '//' comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the '#' for '//' again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                var parts = addr.split('/');
                url = url + parts[0] + ":" + port + "/" + parts.slice(1).join('/');
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
  
            Module['websocket'].emit('open', sock.stream.fd);
  
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
            Module['websocket'].emit('message', sock.stream.fd);
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('close', function() {
              Module['websocket'].emit('close', sock.stream.fd);
            });
            peer.socket.on('error', function(error) {
              // Although the ws library may pass errors that may be more descriptive than
              // ECONNREFUSED they are not necessarily the expected error code e.g. 
              // ENOTFOUND on getaddrinfo seems to be node.js specific, so using ECONNREFUSED
              // is still probably the most useful thing to do.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onclose = function() {
              Module['websocket'].emit('close', sock.stream.fd);
            };
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
            peer.socket.onerror = function(error) {
              // The WebSocket spec only allows a 'simple event' to be thrown on error,
              // so we only really know as much as ECONNREFUSED.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          Module['websocket'].emit('listen', sock.stream.fd); // Send Event with listen fd.
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
              Module['websocket'].emit('connection', newsock.stream.fd);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
              Module['websocket'].emit('connection', sock.stream.fd);
            }
          });
          sock.server.on('closed', function() {
            Module['websocket'].emit('close', sock.stream.fd);
            sock.server = null;
          });
          sock.server.on('error', function(error) {
            // Although the ws library may pass errors that may be more descriptive than
            // ECONNREFUSED they are not necessarily the expected error code e.g. 
            // ENOTFOUND on getaddrinfo seems to be node.js specific, so using EHOSTUNREACH
            // is still probably the most useful thing to do. This error shouldn't
            // occur in a well written app as errors should get trapped in the compiled
            // app's own getaddrinfo call.
            sock.error = ERRNO_CODES.EHOSTUNREACH; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
            Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'EHOSTUNREACH: Host is unreachable']);
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _log=Math_log;

  var _emscripten_postinvoke=true;

  function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }

  function ___gxx_personality_v0() {
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)>>0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return (bytesRead / size)|0;
    }

  var _BDtoILow=true;

  var _BDtoIHigh=true;

  function _pthread_cond_broadcast() {
      return 0;
    }

  var _ceil=Math_ceil;

  
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _pthread_mutex_lock() {}

  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }
  Module["_calloc"] = _calloc;function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function ___cxa_guard_release() {}

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function ___errno_location() {
      return ___errno_state;
    }

   
  Module["_memset"] = _memset;

  
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }function _ftello() {
  return _ftell.apply(null, arguments)
  }

  var _BItoD=true;

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }


  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  var _tan=Math_tan;


  var _asin=Math_asin;

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;

  var _floor=Math_floor;

  
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)>>0)];
      }
    }function _getc() {
  return _fgetc.apply(null, arguments)
  }

  var _sqrt=Math_sqrt;

  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
      else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
      Browser.mainLoop.scheduler();
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvasContainer.requestFullScreen();
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  var _atan=Math_atan;

  function _pthread_cond_wait() {
      return 0;
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  function _llvm_eh_typeid_for(type) {
      return type;
    }


  var _cos=Math_cos;

  
  
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var fd = _fileno(stream);
      var ret = _lseek(fd, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStreamFromPtr(stream);
      stream.eof = false;
      return 0;
    }function _fseeko() {
  return _fseek.apply(null, arguments)
  }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

   
  Module["_strcpy"] = _strcpy;

  var _exp=Math_exp;

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);



___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiddiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiddiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iid(index,a1,a2) {
  try {
    return Module["dynCall_iid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "min": Math_min, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiiiddiii": invoke_viiiiiddiii, "invoke_iid": invoke_iid, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_exp": _exp, "_pthread_key_create": _pthread_key_create, "_fread": _fread, "___cxa_guard_acquire": ___cxa_guard_acquire, "___assert_fail": ___assert_fail, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___ctype_toupper_loc": ___ctype_toupper_loc, "__addDays": __addDays, "_fsync": _fsync, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_sbrk": _sbrk, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_sysconf": _sysconf, "_close": _close, "_cos": _cos, "_write": _write, "__isLeapYear": __isLeapYear, "_ftell": _ftell, "___cxa_atexit": ___cxa_atexit, "___cxa_rethrow": ___cxa_rethrow, "_catclose": _catclose, "_send": _send, "___cxa_free_exception": ___cxa_free_exception, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_guard_release": ___cxa_guard_release, "_strerror_r": _strerror_r, "___setErrNo": ___setErrNo, "___ctype_tolower_loc": ___ctype_tolower_loc, "_newlocale": _newlocale, "___resumeException": ___resumeException, "_freelocale": _freelocale, "_pthread_once": _pthread_once, "_read": _read, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_catopen": _catopen, "___cxa_guard_abort": ___cxa_guard_abort, "_llvm_pow_f64": _llvm_pow_f64, "___ctype_b_loc": ___ctype_b_loc, "_lseek": _lseek, "_vfprintf": _vfprintf, "___cxa_allocate_exception": ___cxa_allocate_exception, "_asin": _asin, "_floor": _floor, "_pwrite": _pwrite, "_open": _open, "_uselocale": _uselocale, "___cxa_end_catch": ___cxa_end_catch, "_pthread_getspecific": _pthread_getspecific, "_fseek": _fseek, "_fclose": _fclose, "_log": _log, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_recv": _recv, "_tan": _tan, "_fgetc": _fgetc, "_abort": _abort, "_ceil": _ceil, "_fopen": _fopen, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "_acos": _acos, "___gxx_personality_v0": ___gxx_personality_v0, "_ungetc": _ungetc, "_calloc": _calloc, "_fflush": _fflush, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_catgets": _catgets, "_fileno": _fileno, "__arraySum": __arraySum, "_fseeko": _fseeko, "_atan": _atan, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pread": _pread, "_mkport": _mkport, "_getc": _getc, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_ftello": _ftello, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_strerror": _strerror, "__formatString": __formatString, "_atexit": _atexit, "_sqrt": _sqrt, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "___dso_handle": ___dso_handle, "_stderr": _stderr, "_stdin": _stdin, "_stdout": _stdout };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ctlz_i8=env.ctlz_i8|0;
  var ___dso_handle=env.___dso_handle|0;
  var _stderr=env._stderr|0;
  var _stdin=env._stdin|0;
  var _stdout=env._stdout|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = +env.NaN, inf = +env.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var Math_min=env.min;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vid=env.invoke_vid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiid=env.invoke_viiiiid;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiiiddiii=env.invoke_viiiiiddiii;
  var invoke_iid=env.invoke_iid;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiid=env.invoke_viiiiiid;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _exp=env._exp;
  var _pthread_key_create=env._pthread_key_create;
  var _fread=env._fread;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var ___assert_fail=env.___assert_fail;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var __addDays=env.__addDays;
  var _fsync=env._fsync;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _sbrk=env._sbrk;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _sysconf=env._sysconf;
  var _close=env._close;
  var _cos=env._cos;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var _ftell=env._ftell;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var _catclose=env._catclose;
  var _send=env._send;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var _strerror_r=env._strerror_r;
  var ___setErrNo=env.___setErrNo;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _newlocale=env._newlocale;
  var ___resumeException=env.___resumeException;
  var _freelocale=env._freelocale;
  var _pthread_once=env._pthread_once;
  var _read=env._read;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _catopen=env._catopen;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var _lseek=env._lseek;
  var _vfprintf=env._vfprintf;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _asin=env._asin;
  var _floor=env._floor;
  var _pwrite=env._pwrite;
  var _open=env._open;
  var _uselocale=env._uselocale;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var _pthread_getspecific=env._pthread_getspecific;
  var _fseek=env._fseek;
  var _fclose=env._fclose;
  var _log=env._log;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _recv=env._recv;
  var _tan=env._tan;
  var _fgetc=env._fgetc;
  var _abort=env._abort;
  var _ceil=env._ceil;
  var _fopen=env._fopen;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var _acos=env._acos;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var _ungetc=env._ungetc;
  var _calloc=env._calloc;
  var _fflush=env._fflush;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _llvm_eh_typeid_for=env._llvm_eh_typeid_for;
  var _catgets=env._catgets;
  var _fileno=env._fileno;
  var __arraySum=env.__arraySum;
  var _fseeko=env._fseeko;
  var _atan=env._atan;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pread=env._pread;
  var _mkport=env._mkport;
  var _getc=env._getc;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _ftello=env._ftello;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _atexit=env._atexit;
  var _sqrt=env._sqrt;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, $ast_) {
 $this = $this | 0;
 $ast_ = $ast_ | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i440 = 0, $$0$i$i$i$i$i$i$i$i$i$i421 = 0, $$0$i$i$i$i$i$i$i$i$i1041 = 0, $$0$i$i$i$i$i$i$i$i$i1624 = 0, $$0$i$i$i$i$i$i$i$i$i2242 = 0, $$0$i$i$i$i$i$i$i$i$i2281 = 0, $$0$i$i$i$i$i$i$i$i$i2377 = 0, $$0$i$i$i$i$i$i$i$i$i2416 = 0, $$0$i$i$i$i$i$i$i$i$i4$i = 0, $$0$i$i$i$i$i$i$i$i$i784 = 0, $$0$i$i$i$i$i$i$i$i1043 = 0, $$0$i$i$i$i$i$i$i$i1626 = 0, $$0$i$i$i$i$i$i$i$i2244 = 0, $$0$i$i$i$i$i$i$i$i2283 = 0, $$0$i$i$i$i$i$i$i$i2379 = 0, $$0$i$i$i$i$i$i$i$i2418 = 0, $$0$i$i$i$i$i$i$i$i460 = 0, $$0$i$i$i$i$i$i$i$i786 = 0, $$0$i$i$i$i$i$i$i422 = 0, $$0$i$i$i$i$i$i1062 = 0, $$0$i$i$i$i$i$i1174 = 0, $$0$i$i$i$i$i$i1645 = 0, $$0$i$i$i$i$i$i2263 = 0, $$0$i$i$i$i$i$i2304 = 0, $$0$i$i$i$i$i$i2398 = 0, $$0$i$i$i$i$i$i2437 = 0, $$0$i$i$i$i$i$i5$i = 0, $$0$i$i$i$i$i$i805 = 0, $$0$i$i$i$i$i1064 = 0, $$0$i$i$i$i$i1176 = 0, $$0$i$i$i$i$i1647 = 0, $$0$i$i$i$i$i2265 = 0, $$0$i$i$i$i$i2306 = 0, $$0$i$i$i$i$i2400 = 0, $$0$i$i$i$i$i2439 = 0, $$0$i$i$i$i$i807 = 0, $$0$i$i$i$i1$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i452 = 0, $$0$i$i$i$i1$i$i1054 = 0, $$0$i$i$i$i1$i$i1637 = 0, $$0$i$i$i$i1$i$i2255 = 0, $$0$i$i$i$i1$i$i2296 = 0, $$0$i$i$i$i1$i$i2390 = 0, $$0$i$i$i$i1$i$i2429 = 0, $$0$i$i$i$i1$i$i797 = 0, $$0$i$i$i$i1171 = 0, $$0$i$i$i$i565 = 0, $$0$i$i$i10$i$i$i = 0, $$0$i$i$i1684 = 0, $$0$i$i$i1727 = 0, $$0$i$i$i1761 = 0, $$0$i$i$i567 = 0, $$0$i$i12$i$i$i = 0, $$0$i$i1685 = 0, $$0$i$i1729 = 0, $$0$i$i1763 = 0, $$0$i$i23$i$i$i = 0, $$0$i$i2484 = 0, $$0$i$i2514 = 0, $$0$i$i2548 = 0, $$0$i$i2582 = 0, $$0$i$i2616 = 0, $$0$i$i2655 = 0, $$0$i$i2689 = 0, $$0$i$i536 = 0, $$0$i$i6$i$i$i = 0, $$0$i$i7$i$i$i = 0, $$0$i1$i$i$i$i = 0, $$0$i11$i$i = 0, $$0$i1102 = 0, $$0$i1122 = 0, $$0$i1212 = 0, $$0$i1244 = 0, $$0$i1281 = 0, $$0$i1318 = 0, $$0$i1355 = 0, $$0$i1392 = 0, $$0$i1429 = 0, $$0$i1466 = 0, $$0$i1503 = 0, $$0$i1540 = 0, $$0$i1798 = 0, $$0$i1841 = 0, $$0$i1861 = 0, $$0$i1897 = 0, $$0$i1934 = 0, $$0$i1971 = 0, $$0$i2008 = 0, $$0$i2055 = 0, $$0$i2145 = 0, $$0$i2165 = 0, $$0$i2180 = 0, $$0$i2209 = 0, $$0$i2323 = 0, $$0$i2339 = 0, $$0$i2454 = 0, $$0$i5$i$i = 0, $$0$i544 = 0, $$0$i7$i$i = 0, $$0$i7$i$i$i$i = 0, $$0$i7$i$i$i$i$i = 0, $$0$i7$i$i$i$i$i493 = 0, $$0$i7$i$i$i$i$i651 = 0, $$0$i7$i$i$i$i$i967 = 0, $$0$i7$i$i1025 = 0, $$0$i7$i$i1078 = 0, $$0$i7$i$i1161 = 0, $$0$i7$i$i1751 = 0, $$0$i7$i$i736 = 0, $$0$i7$i$i872 = 0, $$0$i7$i$i899 = 0, $$0$i706 = 0, $$0$i8$i$i = 0, $$0$i8$i$i$i$i = 0, $$0$i8$i$i$i$i$i = 0, $$0$i8$i$i$i$i$i495 = 0, $$0$i8$i$i$i$i$i652 = 0, $$0$i8$i$i$i$i$i968 = 0, $$0$i8$i$i1026 = 0, $$0$i8$i$i1079 = 0, $$0$i8$i$i1162 = 0, $$0$i8$i$i1752 = 0, $$0$i8$i$i737 = 0, $$0$i8$i$i873 = 0, $$0$i8$i$i900 = 0, $$0$i812$i$i = 0, $$0$i813$i$i = 0, $$0$ph5$i$i$i = 0, $$0$ph5$i$i$i$i = 0, $$0$ph5$i$i$i$i2501 = 0, $$0$ph5$i$i$i$i2535 = 0, $$0$ph5$i$i$i$i2569 = 0, $$0$ph5$i$i$i$i2603 = 0, $$0$ph5$i$i$i$i2637 = 0, $$0$ph5$i$i$i$i2676 = 0, $$0$ph5$i$i$i$i2710 = 0, $$0$ph5$i$i$i2349 = 0, $$0$ph7$i$i$i = 0, $$0$ph7$i$i$i$i = 0, $$0$ph7$i$i$i$i2493 = 0, $$0$ph7$i$i$i$i2527 = 0, $$0$ph7$i$i$i$i2561 = 0, $$0$ph7$i$i$i$i2595 = 0, $$0$ph7$i$i$i$i2629 = 0, $$0$ph7$i$i$i$i2668 = 0, $$0$ph7$i$i$i$i2702 = 0, $$0$ph7$i$i$i2341 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i443 = 0, $$01$i$i$i$i$i$i$i$i1045 = 0, $$01$i$i$i$i$i$i$i$i1628 = 0, $$01$i$i$i$i$i$i$i$i2246 = 0, $$01$i$i$i$i$i$i$i$i2285 = 0, $$01$i$i$i$i$i$i$i$i2381 = 0, $$01$i$i$i$i$i$i$i$i2420 = 0, $$01$i$i$i$i$i$i$i$i788 = 0, $$01$i$i$i$i$i$i$i463 = 0, $$01$i$i$i$i$i1066 = 0, $$01$i$i$i$i$i1178 = 0, $$01$i$i$i$i$i1649 = 0, $$01$i$i$i$i$i2267 = 0, $$01$i$i$i$i$i2308 = 0, $$01$i$i$i$i$i2402 = 0, $$01$i$i$i$i$i2441 = 0, $$01$i$i$i$i$i809 = 0, $$01$i$i$i$i469 = 0, $$01$i$i$i424 = 0, $$01$i$i$i559 = 0, $$01$i$i$i569 = 0, $$01$i$i$i766 = 0, $$01$i$i14$i$i$i = 0, $$01$i$i1687 = 0, $$01$i$i1731 = 0, $$01$i$i1765 = 0, $$01$i$i535 = 0, $$01$i$i745 = 0, $$01$i1101 = 0, $$01$i1121 = 0, $$01$i1797 = 0, $$01$i1840 = 0, $$01$i1860 = 0, $$01$i2144 = 0, $$01$i2179 = 0, $$01$i2322 = 0, $$01$i2453 = 0, $$01$i543 = 0, $$01$i6$i$i = 0, $$01$i705 = 0, $$01$ph6$i$in$i$i = 0, $$01$ph6$i$in$i$i$i = 0, $$01$ph6$i$in$i$i$i2494 = 0, $$01$ph6$i$in$i$i$i2528 = 0, $$01$ph6$i$in$i$i$i2562 = 0, $$01$ph6$i$in$i$i$i2596 = 0, $$01$ph6$i$in$i$i$i2630 = 0, $$01$ph6$i$in$i$i$i2669 = 0, $$01$ph6$i$in$i$i$i2703 = 0, $$01$ph6$i$in$i$i2342 = 0, $$010 = 0, $$013$i$in$i$i = 0, $$013$i$in$i$i$i = 0, $$013$i$in$i$i$i2496 = 0, $$013$i$in$i$i$i2530 = 0, $$013$i$in$i$i$i2564 = 0, $$013$i$in$i$i$i2598 = 0, $$013$i$in$i$i$i2632 = 0, $$013$i$in$i$i$i2671 = 0, $$013$i$in$i$i$i2705 = 0, $$013$i$in$i$i2344 = 0, $$0135 = 0, $$0137 = 0, $$0141 = 0, $$0143 = 0, $$0145 = 0, $$0148 = 0, $$015$i = 0, $$015$i1247 = 0, $$015$i1284 = 0, $$015$i1321 = 0, $$015$i1358 = 0, $$015$i1395 = 0, $$015$i1432 = 0, $$015$i1469 = 0, $$015$i1506 = 0, $$015$i1543 = 0, $$015$i1900 = 0, $$015$i1937 = 0, $$015$i1974 = 0, $$015$i2011 = 0, $$015$i2058 = 0, $$0150 = 0, $$0153 = 0, $$016$i = 0, $$016$i1245 = 0, $$016$i1282 = 0, $$016$i1319 = 0, $$016$i1356 = 0, $$016$i1393 = 0, $$016$i1430 = 0, $$016$i1467 = 0, $$016$i1504 = 0, $$016$i1541 = 0, $$016$i1898 = 0, $$016$i1935 = 0, $$016$i1972 = 0, $$016$i2009 = 0, $$016$i2056 = 0, $$0163 = 0, $$0166 = 0, $$0170 = 0, $$0172 = 0, $$0176 = 0, $$0180 = 0, $$0182 = 0, $$0184 = 0, $$0188 = 0, $$0192 = 0, $$0196 = 0, $$02 = 0, $$0200 = 0, $$0204 = 0, $$0208 = 0, $$0212 = 0, $$0215 = 0, $$0217 = 0, $$0219 = 0, $$0221 = 0, $$0225 = 0, $$0227 = 0, $$0229 = 0, $$023$i = 0, $$023$i1248 = 0, $$023$i1285 = 0, $$023$i1322 = 0, $$023$i1359 = 0, $$023$i1396 = 0, $$023$i1433 = 0, $$023$i1470 = 0, $$023$i1507 = 0, $$023$i1544 = 0, $$023$i1901 = 0, $$023$i1938 = 0, $$023$i1975 = 0, $$023$i2012 = 0, $$023$i2059 = 0, $$0233 = 0, $$0236 = 0, $$024$i = 0, $$024$i1246 = 0, $$024$i1283 = 0, $$024$i1320 = 0, $$024$i1357 = 0, $$024$i1394 = 0, $$024$i1431 = 0, $$024$i1468 = 0, $$024$i1505 = 0, $$024$i1542 = 0, $$024$i1899 = 0, $$024$i1936 = 0, $$024$i1973 = 0, $$024$i2010 = 0, $$024$i2057 = 0, $$0240 = 0, $$0242 = 0, $$0244 = 0, $$0246 = 0, $$0248 = 0, $$06 = 0, $$1 = 0, $$10 = 0, $$1011283079 = 0, $$1013080 = 0, $$102 = 0, $$102129 = 0, $$103 = 0, $$103130 = 0, $$1037 = 0, $$104 = 0, $$104131 = 0, $$1061333083 = 0, $$1063084 = 0, $$107 = 0, $$107134 = 0, $$11 = 0, $$111$ph$be = 0, $$111$ph4195 = 0, $$1136 = 0, $$1136$ph = 0, $$1138 = 0, $$1154 = 0, $$1167 = 0, $$1173 = 0, $$1177 = 0, $$1185 = 0, $$1189 = 0, $$1193 = 0, $$1197 = 0, $$12 = 0, $$1201 = 0, $$1205 = 0, $$1209 = 0, $$1222 = 0, $$1230 = 0, $$1237 = 0, $$1239 = 0, $$13 = 0, $$1321 = 0, $$1340 = 0, $$14 = 0, $$1441 = 0, $$162955 = 0, $$16432954 = 0, $$17 = 0, $$1722 = 0, $$1744 = 0, $$192959 = 0, $$19462958 = 0, $$2 = 0, $$20 = 0, $$2047 = 0, $$212 = 0, $$2155 = 0, $$2172945 = 0, $$222963 = 0, $$22492962 = 0, $$2292944 = 0, $$232967 = 0, $$23502966 = 0, $$2423 = 0, $$2451 = 0, $$262970 = 0, $$26532969 = 0, $$27 = 0, $$2754 = 0, $$292974 = 0, $$29562973 = 0, $$3 = 0, $$30 = 0, $$3057 = 0, $$313 = 0, $$313$ph = 0, $$3156 = 0, $$322978 = 0, $$32592977 = 0, $$33 = 0, $$3360 = 0, $$35252982 = 0, $$35622981 = 0, $$36 = 0, $$3663 = 0, $$382986 = 0, $$38652985 = 0, $$402990 = 0, $$40672989 = 0, $$412994 = 0, $$414 = 0, $$4157 = 0, $$41682993 = 0, $$4192948 = 0, $$42 = 0, $$4269 = 0, $$4312947 = 0, $$432997 = 0, $$43702996 = 0, $$44 = 0, $$4471 = 0, $$45 = 0, $$4572 = 0, $$463000 = 0, $$46732999 = 0, $$473005 = 0, $$47743004 = 0, $$493008 = 0, $$49763007 = 0, $$50 = 0, $$5077 = 0, $$513012 = 0, $$5158 = 0, $$51783011 = 0, $$52 = 0, $$5202952 = 0, $$5279 = 0, $$5322951 = 0, $$533015 = 0, $$53803014 = 0, $$54 = 0, $$5481 = 0, $$553018 = 0, $$55823017 = 0, $$56 = 0, $$5683 = 0, $$573021 = 0, $$57843020 = 0, $$583024 = 0, $$58853023 = 0, $$59 = 0, $$5986 = 0, $$6 = 0, $$60 = 0, $$6087 = 0, $$6159 = 0, $$623028 = 0, $$62893027 = 0, $$63 = 0, $$633 = 0, $$6390 = 0, $$653032 = 0, $$65923031 = 0, $$66 = 0, $$6693 = 0, $$683036 = 0, $$68953035 = 0, $$693040 = 0, $$69963039 = 0, $$7 = 0, $$70 = 0, $$7097 = 0, $$71 = 0, $$7160 = 0, $$7198 = 0, $$731003042 = 0, $$733043 = 0, $$734 = 0, $$74 = 0, $$74101 = 0, $$761033046 = 0, $$763047 = 0, $$771043050 = 0, $$773051 = 0, $$78 = 0, $$78105 = 0, $$79 = 0, $$79106 = 0, $$8 = 0, $$811083053 = 0, $$813054 = 0, $$821093057 = 0, $$823058 = 0, $$835 = 0, $$841113060 = 0, $$843061 = 0, $$85 = 0, $$85112 = 0, $$86 = 0, $$86113 = 0, $$881153064 = 0, $$883065 = 0, $$891163068 = 0, $$893069 = 0, $$9 = 0, $$90 = 0, $$90117 = 0, $$921193071 = 0, $$923072 = 0, $$93 = 0, $$93120 = 0, $$936 = 0, $$94 = 0, $$94121 = 0, $$95 = 0, $$95122 = 0, $$96 = 0, $$96123 = 0, $$981253075 = 0, $$983076 = 0, $$99 = 0, $$99126 = 0, $$idx$i = 0, $$idx$val = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i432 = 0, $$idx$val$i$i$i$i764 = 0, $$idx$val$i$i$i418 = 0, $$idx$val$i$i$i753 = 0, $$idx$val$i$i1034 = 0, $$idx$val$i$i1617 = 0, $$idx$val$i$i2235$pre = 0, $$idx$val$i$i2274 = 0, $$idx$val$i$i2370$pre = 0, $$idx$val$i$i2409 = 0, $$idx$val$i$i777 = 0, $$idx$val$i15$i$i$i = 0, $$idx$val$i15$i$i$i$i = 0, $$idx$val$i15$i$i$i$i436 = 0, $$idx$val$i15$i$i1037 = 0, $$idx$val$i15$i$i1620 = 0, $$idx$val$i15$i$i2238 = 0, $$idx$val$i15$i$i2277 = 0, $$idx$val$i15$i$i2373 = 0, $$idx$val$i15$i$i2412 = 0, $$idx$val$i15$i$i780 = 0, $$idx$val$i2488 = 0, $$idx$val$i2522 = 0, $$idx$val$i2556 = 0, $$idx$val$i2590 = 0, $$idx$val$i2624 = 0, $$idx$val$i2663 = 0, $$idx$val$i2697 = 0, $$idx$val$i393 = 0, $$idx$val$i408 = 0, $$idx$val$i546 = 0, $$idx$val$i548 = 0, $$idx$val$i618 = 0, $$idx$val$i628 = 0, $$idx$val$i686 = 0, $$idx$val$i695 = 0, $$idx$val$i69533964193 = 0, $$idx$val$i7115767 = 0, $$idx$val$i7115768 = 0, $$idx$val$i751 = 0, $$idx$val$i772 = 0, $$idx$val$i839 = 0, $$idx1$i = 0, $$idx1$i$i$i = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i = 0, $$idx1$val$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i487 = 0, $$idx1$val$i$i$i$i$i$i$i645 = 0, $$idx1$val$i$i$i$i$i$i$i961 = 0, $$idx1$val$i$i$i$i1019 = 0, $$idx1$val$i$i$i$i1074 = 0, $$idx1$val$i$i$i$i1135 = 0, $$idx1$val$i$i$i$i1155 = 0, $$idx1$val$i$i$i$i1745 = 0, $$idx1$val$i$i$i$i730 = 0, $$idx1$val$i$i$i$i763 = 0, $$idx1$val$i$i$i$i866 = 0, $$idx1$val$i$i$i$i893 = 0, $$idx1$val$i$i$i502 = 0, $$idx1$val$i$i$i659 = 0, $$idx1$val$i$i$i754 = 0, $$idx1$val$i$i$i975 = 0, $$idx1$val$i$i16$i$i = 0, $$idx1$val$i697 = 0, $$idx1$val$i69733974194 = 0, $$idx1$val$i69733974196 = 0, $$idx1$val$i713 = 0, $$idx2$val$i23$i$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i$i$i450 = 0, $$idx2$val$i23$i$i$i$i$i$i1052 = 0, $$idx2$val$i23$i$i$i$i$i$i1635 = 0, $$idx2$val$i23$i$i$i$i$i$i2253 = 0, $$idx2$val$i23$i$i$i$i$i$i2294 = 0, $$idx2$val$i23$i$i$i$i$i$i2388 = 0, $$idx2$val$i23$i$i$i$i$i$i2427 = 0, $$idx2$val$i23$i$i$i$i$i$i795 = 0, $$idx2$val$i718 = 0, $$idx254$val = 0, $$idx260$val = 0, $$idx261 = 0, $$idx261$val = 0, $$idx262$pre$phiZZ2D = 0, $$idx262$val = 0, $$idx265$val = 0, $$idx266$val = 0, $$idx268$val = 0, $$idx269$val = 0, $$idx273$val = 0, $$idx274$val = 0, $$idx275$val = 0, $$idx276$val = 0, $$idx277$val = 0, $$idx278$val = 0, $$idx279$val = 0, $$idx280$val = 0, $$idx281$val = 0, $$idx282$val = 0, $$idx283$val = 0, $$idx284$val = 0, $$idx285$val = 0, $$idx286$val = 0, $$idx4$val$i$i = 0, $$idx4$val$i$i$i = 0, $$idx4$val$i$i$i515 = 0, $$idx4$val$i$i$i673 = 0, $$idx4$val$i$i$i989 = 0, $$idx5$val$i$i = 0, $$idx5$val$i$i$i = 0, $$idx5$val$i$i$i514 = 0, $$idx5$val$i$i$i672 = 0, $$idx5$val$i$i$i988 = 0, $$idx6$i$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$i$i$i = 0, $$idx6$val$i$i$i521 = 0, $$idx6$val$i$i$i679 = 0, $$idx6$val$i$i$i995 = 0, $$idx6$val$pre$i$i = 0, $$idx6$val$pre$i$i$i = 0, $$idx6$val$pre$i$i$i518 = 0, $$idx6$val$pre$i$i$i676 = 0, $$idx6$val$pre$i$i$i992 = 0, $$idx6$val11$i$i = 0, $$idx6$val11$i$i$i = 0, $$idx6$val11$i$i$i506 = 0, $$idx6$val11$i$i$i663 = 0, $$idx6$val11$i$i$i979 = 0, $$idx6$val14$i$i = 0, $$idx6$val14$i$i$i = 0, $$idx6$val14$i$i$i510 = 0, $$idx6$val14$i$i$i667 = 0, $$idx6$val14$i$i$i983 = 0, $$idx7$val$i$i = 0, $$idx7$val$i$i$i = 0, $$idx7$val$i$i$i520 = 0, $$idx7$val$i$i$i678 = 0, $$idx7$val$i$i$i994 = 0, $$idx7$val12$i$i = 0, $$idx7$val12$i$i$i = 0, $$idx7$val12$i$i$i507 = 0, $$idx7$val12$i$i$i664 = 0, $$idx7$val12$i$i$i980 = 0, $$idx7$val18$i$i = 0, $$idx7$val18$i$i$i = 0, $$idx7$val18$i$i$i509 = 0, $$idx7$val18$i$i$i666 = 0, $$idx7$val18$i$i$i982 = 0, $$in = 0, $$lcssa$i$i = 0, $$lcssa$i$i$i = 0, $$lcssa$i$i$i525 = 0, $$lcssa$i$i$i683 = 0, $$lcssa$i$i$i999 = 0, $$pre = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i438 = 0, $$pre$i$i$i$i$i$i1039 = 0, $$pre$i$i$i$i$i$i1622 = 0, $$pre$i$i$i$i$i$i2240 = 0, $$pre$i$i$i$i$i$i2279 = 0, $$pre$i$i$i$i$i$i2375 = 0, $$pre$i$i$i$i$i$i2414 = 0, $$pre$i$i$i$i$i$i782 = 0, $$pre$i1069 = 0, $$pre$phi5797Z2D = 0, $$pre$phi5801Z2D = 0, $$pre5761 = 0, $$pre5764 = 0, $$pre5776 = 0, $$pre5777 = 0, $$sroa$22928 = 0, $$sroa$3 = 0, $$sroa$32743 = 0, $$sroa$32750 = 0, $$sroa$32801 = 0, $$sroa$32867 = 0, $$sroa$32871 = 0, $$sroa$32875 = 0, $$sroa$32879 = 0, $$sroa$32910 = 0, $$sroa$32914 = 0, $$sroa$32918 = 0, $$sroa$32922 = 0, $$sroa$32935 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1003 = 0, $1004 = 0, $1008 = 0, $101 = 0, $1010 = 0, $1012 = 0, $1015 = 0, $102 = 0, $1021 = 0, $1025 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1031 = 0, $1035 = 0, $1037 = 0, $104 = 0, $1040 = 0, $1046 = 0, $1048 = 0, $105 = 0, $1051 = 0, $1055 = 0, $1056 = 0, $1059 = 0, $106 = 0, $1062 = 0, $1063 = 0, $1066 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1072 = 0, $1073 = 0, $1075 = 0, $1079 = 0, $108 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1086 = 0, $109 = 0, $1092 = 0, $1093 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1103 = 0, $1104 = 0, $1109 = 0, $111 = 0, $1111 = 0, $1114 = 0, $1115 = 0, $112 = 0, $1121 = 0, $1123 = 0, $1126 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1137 = 0, $1138 = 0, $114 = 0, $1142 = 0, $1144 = 0, $1146 = 0, $1147 = 0, $115 = 0, $1154 = 0, $1156 = 0, $116 = 0, $1163 = 0, $117 = 0, $1172 = 0, $1174 = 0, $118 = 0, $1180 = 0, $1183 = 0, $1186 = 0, $119 = 0, $1190 = 0, $1199 = 0, $12 = 0, $120 = 0, $1204 = 0, $1206 = 0, $121 = 0, $1210 = 0, $1212 = 0, $1214 = 0, $1216 = 0, $122 = 0, $1223 = 0, $1225 = 0, $123 = 0, $1231 = 0, $1233 = 0, $1235 = 0, $124 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $125 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $126 = 0, $1260 = 0, $1261 = 0, $127 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1287 = 0, $1288 = 0, $129 = 0, $1291 = 0, $1295 = 0, $1297 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1303 = 0, $1304 = 0, $1309 = 0, $131 = 0, $1312 = 0, $1313 = 0, $1319 = 0, $132 = 0, $1321 = 0, $1324 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1333 = 0, $1334 = 0, $1338 = 0, $134 = 0, $1340 = 0, $1347 = 0, $135 = 0, $136 = 0, $1361 = 0, $1364 = 0, $1368 = 0, $137 = 0, $1377 = 0, $138 = 0, $1382 = 0, $1384 = 0, $1388 = 0, $139 = 0, $1392 = 0, $1394 = 0, $1397 = 0, $14 = 0, $140 = 0, $1401 = 0, $1403 = 0, $1405 = 0, $1407 = 0, $1408 = 0, $141 = 0, $1410 = 0, $1412 = 0, $1413 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1427 = 0, $143 = 0, $1433 = 0, $1435 = 0, $1438 = 0, $144 = 0, $1440 = 0, $1443 = 0, $1444 = 0, $1446 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1455 = 0, $1457 = 0, $146 = 0, $1460 = 0, $1464 = 0, $1469 = 0, $147 = 0, $1472 = 0, $1474 = 0, $1478 = 0, $148 = 0, $1480 = 0, $1482 = 0, $1485 = 0, $149 = 0, $1492 = 0, $1494 = 0.0, $1499 = 0, $15 = 0, $150 = 0, $1505 = 0, $1506 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1525 = 0, $153 = 0, $1531 = 0, $1533 = 0, $1536 = 0, $1538 = 0, $154 = 0, $1541 = 0, $1542 = 0, $1544 = 0, $1546 = 0, $1547 = 0, $155 = 0, $1553 = 0, $1555 = 0, $1558 = 0, $156 = 0, $1562 = 0, $1567 = 0, $157 = 0, $1570 = 0, $1573 = 0, $1575 = 0, $1576 = 0, $158 = 0, $1588 = 0, $159 = 0, $1599 = 0, $16 = 0, $160 = 0, $1601 = 0, $1603 = 0, $1604 = 0, $1607 = 0, $1609 = 0, $161 = 0, $1611 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1622 = 0, $1623 = 0, $1628 = 0, $163 = 0, $1631 = 0, $1632 = 0, $1638 = 0, $164 = 0, $1640 = 0, $1643 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1652 = 0, $1653 = 0, $1657 = 0, $1659 = 0, $166 = 0, $1666 = 0, $167 = 0, $168 = 0, $1680 = 0, $1683 = 0, $1687 = 0, $169 = 0, $1696 = 0, $17 = 0, $170 = 0, $1701 = 0, $1703 = 0, $1707 = 0, $171 = 0, $1711 = 0, $1712 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1726 = 0, $173 = 0, $1732 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $174 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $175 = 0, $1753 = 0, $1754 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1762 = 0, $1763 = 0, $1767 = 0, $177 = 0, $1778 = 0, $178 = 0, $1783 = 0, $1784 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1792 = 0, $1793 = 0, $1798 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1811 = 0, $1813 = 0, $1815 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1846 = 0, $185 = 0, $1850 = 0, $1852 = 0, $1854 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $186 = 0, $1860 = 0, $1863 = 0, $1864 = 0, $187 = 0, $1872 = 0, $1873 = 0, $1875 = 0, $1876 = 0, $188 = 0, $1884 = 0, $1885 = 0, $1887 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1893 = 0, $1895 = 0, $1897 = 0, $1899 = 0, $19 = 0, $190 = 0, $1901 = 0, $1902 = 0, $1905 = 0, $1906 = 0, $191 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1925 = 0, $1926 = 0, $193 = 0, $1933 = 0, $1934 = 0, $194 = 0, $1940 = 0, $1946 = 0, $1948 = 0, $1951 = 0, $1953 = 0, $1956 = 0, $1957 = 0, $1959 = 0, $1961 = 0, $1962 = 0, $1968 = 0, $197 = 0, $1970 = 0, $1973 = 0, $1977 = 0, $198 = 0, $1982 = 0, $1985 = 0, $1987 = 0, $199 = 0, $1991 = 0, $1992 = 0, $1997 = 0, $2 = 0, $20 = 0, $200 = 0, $2002 = 0, $2005 = 0, $2006 = 0, $201 = 0, $2012 = 0, $2014 = 0, $2017 = 0, $202 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2027 = 0, $203 = 0, $2031 = 0, $2033 = 0, $2035 = 0, $2037 = 0, $204 = 0, $2045 = 0, $2046 = 0, $2049 = 0, $205 = 0, $2051 = 0, $2052 = 0, $2055 = 0, $2056 = 0, $2058 = 0, $206 = 0, $2062 = 0, $2065 = 0, $2067 = 0, $2069 = 0, $207 = 0, $2075 = 0, $2079 = 0, $208 = 0, $2081 = 0, $2083 = 0, $2084 = 0, $2087 = 0, $2088 = 0, $209 = 0, $2090 = 0, $2095 = 0, $2096 = 0, $2098 = 0, $21 = 0, $210 = 0, $2100 = 0, $2104 = 0, $2107 = 0, $2108 = 0, $211 = 0, $2115 = 0, $2116 = 0, $212 = 0, $2123 = 0, $2126 = 0, $2129 = 0, $213 = 0, $2131 = 0, $2133 = 0, $2136 = 0, $2137 = 0, $2139 = 0, $214 = 0, $2142 = 0, $2146 = 0, $215 = 0, $2150 = 0, $2151 = 0, $2154 = 0, $2156 = 0, $2157 = 0, $216 = 0, $2161 = 0, $2163 = 0, $2166 = 0, $2167 = 0, $217 = 0, $2171 = 0, $2173 = 0, $2175 = 0, $2178 = 0, $218 = 0, $2184 = 0, $2188 = 0, $219 = 0, $2191 = 0, $2192 = 0, $2194 = 0, $2198 = 0, $22 = 0, $220 = 0, $2200 = 0, $2203 = 0, $2209 = 0, $221 = 0, $2211 = 0, $2214 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2222 = 0, $2225 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $224 = 0, $2249 = 0, $225 = 0, $2251 = 0, $2253 = 0, $2255 = 0, $226 = 0, $2261 = 0, $2263 = 0, $227 = 0, $2270 = 0, $2274 = 0, $2279 = 0, $228 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $229 = 0, $2290 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2299 = 0, $23 = 0, $230 = 0, $2304 = 0, $2305 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2313 = 0, $2314 = 0, $2317 = 0, $2318 = 0, $232 = 0, $2320 = 0, $2322 = 0, $2323 = 0, $2325 = 0, $2326 = 0, $2328 = 0, $233 = 0, $2330 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2345 = 0, $2346 = 0, $2348 = 0, $235 = 0, $2350 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2365 = 0, $2366 = 0, $2368 = 0, $237 = 0, $2370 = 0, $2372 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2378 = 0, $238 = 0, $2380 = 0, $2382 = 0, $2384 = 0, $2386 = 0, $2388 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2395 = 0, $2396 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2401 = 0, $2403 = 0, $2406 = 0, $241 = 0, $2411 = 0, $2413 = 0, $2416 = 0, $2417 = 0, $242 = 0, $2423 = 0, $2425 = 0, $2428 = 0, $243 = 0, $2431 = 0, $2432 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $244 = 0, $2440 = 0, $2444 = 0, $2446 = 0, $2448 = 0, $245 = 0, $2456 = 0, $2458 = 0, $246 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $247 = 0, $2473 = 0, $2478 = 0, $248 = 0, $2480 = 0, $2483 = 0, $2484 = 0, $249 = 0, $2490 = 0, $2492 = 0, $2495 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2507 = 0, $251 = 0, $2511 = 0, $2513 = 0, $2517 = 0, $2519 = 0, $252 = 0, $2521 = 0, $2527 = 0, $2528 = 0, $253 = 0, $2530 = 0, $2532 = 0, $2533 = 0, $2535 = 0, $2536 = 0, $2538 = 0, $254 = 0, $2540 = 0, $2542 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2548 = 0, $2549 = 0, $255 = 0, $2554 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2563 = 0, $2565 = 0, $2566 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2571 = 0, $2573 = 0, $2575 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2581 = 0, $2582 = 0, $2586 = 0.0, $259 = 0, $2590 = 0.0, $2594 = 0.0, $2595 = 0.0, $2597 = 0, $2598 = 0, $26 = 0, $260 = 0, $2601 = 0, $2603 = 0, $2605 = 0, $2607 = 0, $2608 = 0, $261 = 0, $2611 = 0.0, $2618 = 0.0, $262 = 0, $2625 = 0.0, $263 = 0, $2632 = 0.0, $2639 = 0.0, $264 = 0, $2646 = 0.0, $265 = 0, $2651 = 0, $2656 = 0, $266 = 0, $2661 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $267 = 0, $2670 = 0, $2672 = 0, $2673 = 0, $2675 = 0, $2676 = 0, $2678 = 0, $268 = 0, $2680 = 0, $2682 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2688 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2691 = 0, $2693 = 0, $2695 = 0, $2696 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2701 = 0, $2703 = 0, $2705 = 0, $2707 = 0, $2708 = 0, $2709 = 0, $271 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2716 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2721 = 0, $2722 = 0, $2724 = 0, $2726 = 0, $2728 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2734 = 0, $2735 = 0, $2737 = 0, $2738 = 0, $274 = 0, $2740 = 0, $2742 = 0, $2743 = 0, $2745 = 0, $2746 = 0, $2748 = 0, $275 = 0, $2750 = 0, $2752 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2761 = 0, $2762 = 0, $2763 = 0, $2766 = 0, $2767 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2776 = 0, $2779 = 0, $278 = 0, $2780 = 0, $2786 = 0, $2788 = 0, $279 = 0, $2791 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $28 = 0, $280 = 0, $2800 = 0, $2801 = 0, $2805 = 0, $2807 = 0, $281 = 0, $2814 = 0, $282 = 0, $2828 = 0, $283 = 0, $2831 = 0, $2835 = 0, $284 = 0, $2844 = 0, $2849 = 0, $285 = 0, $2851 = 0, $2855 = 0, $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2865 = 0, $287 = 0, $2870 = 0, $288 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $289 = 0, $2892 = 0, $2893 = 0, $2895 = 0, $2897 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2904 = 0, $2906 = 0, $2907 = 0, $2909 = 0, $291 = 0, $2910 = 0, $2912 = 0, $2914 = 0, $2916 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2922 = 0, $2923 = 0, $2925 = 0, $2927 = 0, $2929 = 0, $293 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2936 = 0, $2937 = 0, $2939 = 0, $294 = 0, $2941 = 0, $2943 = 0, $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $295 = 0, $2951 = 0, $2952 = 0, $2953 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $296 = 0, $2964 = 0, $2969 = 0, $297 = 0, $2972 = 0, $2973 = 0, $2979 = 0, $298 = 0, $2981 = 0, $2984 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2995 = 0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3001 = 0, $3004 = 0, $301 = 0, $3012 = 0, $3014 = 0, $3016 = 0, $3017 = 0, $302 = 0, $3021 = 0, $3023 = 0, $3026 = 0, $3027 = 0, $303 = 0, $3031 = 0, $3033 = 0, $3035 = 0, $3038 = 0, $304 = 0, $3044 = 0, $3048 = 0, $305 = 0, $3051 = 0, $3052 = 0, $3054 = 0, $3058 = 0, $306 = 0, $3060 = 0, $3063 = 0, $3069 = 0, $307 = 0, $3071 = 0, $3074 = 0, $3078 = 0, $308 = 0, $3083 = 0, $3084 = 0, $309 = 0, $3091 = 0, $3094 = 0, $3096 = 0, $3097 = 0, $31 = 0, $310 = 0, $3100 = 0, $3101 = 0, $3102 = 0, $3103 = 0, $3104 = 0, $311 = 0, $3112 = 0, $3114 = 0, $3117 = 0, $3118 = 0, $312 = 0, $3120 = 0, $3123 = 0, $3128 = 0, $313 = 0, $3130 = 0, $3133 = 0, $3134 = 0, $314 = 0, $3140 = 0, $3142 = 0, $3145 = 0, $3148 = 0, $3149 = 0, $315 = 0, $3151 = 0, $3152 = 0, $3153 = 0, $3157 = 0, $316 = 0, $3161 = 0, $3163 = 0, $3165 = 0, $3167 = 0, $3169 = 0, $317 = 0, $3171 = 0, $3173 = 0, $3174 = 0, $3177 = 0, $3178 = 0, $318 = 0, $3180 = 0, $3182 = 0, $3188 = 0, $319 = 0, $3190 = 0, $3191 = 0, $3192 = 0, $3195 = 0, $3199 = 0, $32 = 0, $320 = 0, $3201 = 0, $3203 = 0, $3205 = 0, $3206 = 0, $3207 = 0, $3209 = 0, $321 = 0, $3212 = 0, $3213 = 0, $3215 = 0, $3217 = 0, $3218 = 0, $322 = 0, $3220 = 0, $3222 = 0, $3224 = 0, $3225 = 0, $323 = 0, $3230 = 0, $3232 = 0, $3234 = 0, $3235 = 0, $3238 = 0, $3239 = 0, $324 = 0, $3240 = 0, $3247 = 0, $3248 = 0, $3249 = 0, $325 = 0, $3252 = 0, $3256 = 0, $3258 = 0, $326 = 0, $3260 = 0, $3262 = 0, $3263 = 0, $3264 = 0, $3266 = 0, $3269 = 0, $327 = 0, $3270 = 0, $3278 = 0, $328 = 0, $3280 = 0, $3281 = 0, $3283 = 0, $3285 = 0, $3287 = 0, $3289 = 0, $329 = 0, $3291 = 0, $3293 = 0, $3295 = 0, $3297 = 0, $3298 = 0, $33 = 0, $330 = 0, $3302 = 0, $3304 = 0, $331 = 0, $3310 = 0, $3312 = 0, $3315 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3322 = 0, $3323 = 0, $3324 = 0, $3327 = 0, $333 = 0, $3331 = 0, $3335 = 0, $3337 = 0, $334 = 0, $3340 = 0, $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $335 = 0, $3350 = 0, $3351 = 0, $3353 = 0, $3358 = 0, $336 = 0, $3363 = 0, $3365 = 0, $3368 = 0, $3369 = 0, $337 = 0, $3375 = 0, $3377 = 0, $338 = 0, $3380 = 0, $3383 = 0, $3384 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $339 = 0, $3392 = 0, $3396 = 0, $3398 = 0, $34 = 0, $340 = 0, $3400 = 0, $3402 = 0, $3405 = 0, $3406 = 0, $341 = 0, $3410 = 0, $3413 = 0, $3416 = 0, $342 = 0, $3420 = 0, $3424 = 0, $3425 = 0, $3427 = 0, $343 = 0, $3430 = 0, $3432 = 0, $3435 = 0, $3439 = 0, $344 = 0, $3442 = 0, $3444 = 0, $3448 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3454 = 0, $3456 = 0, $3459 = 0, $346 = 0, $3463 = 0, $3465 = 0, $3468 = 0, $347 = 0, $3473 = 0, $3474 = 0, $3477 = 0, $3478 = 0, $3479 = 0, $348 = 0, $3480 = 0, $3484 = 0, $3486 = 0, $3487 = 0, $3489 = 0, $349 = 0, $3490 = 0, $3493 = 0, $3498 = 0, $3499 = 0, $35 = 0, $350 = 0, $3505 = 0, $3507 = 0, $351 = 0, $3510 = 0, $3514 = 0, $3516 = 0, $3519 = 0, $352 = 0, $3525 = 0, $3526 = 0, $353 = 0, $3533 = 0, $3537 = 0, $3539 = 0, $354 = 0, $3540 = 0, $3545 = 0, $3547 = 0, $3549 = 0, $355 = 0, $3555 = 0, $3557 = 0, $356 = 0, $3563 = 0, $3564 = 0, $3567 = 0, $3568 = 0, $357 = 0, $3570 = 0, $3572 = 0, $358 = 0, $3580 = 0.0, $3583 = 0, $3589 = 0, $359 = 0, $3590 = 0, $3592 = 0, $3594 = 0, $3596 = 0, $3598 = 0, $3599 = 0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0, $3606 = 0, $3607 = 0, $361 = 0, $3610 = 0, $3611 = 0, $3612 = 0, $3613 = 0, $3615 = 0, $362 = 0, $3623 = 0.0, $3626 = 0, $363 = 0, $3632 = 0, $3633 = 0, $3635 = 0, $3637 = 0, $3639 = 0, $364 = 0, $3641 = 0, $3642 = 0, $3643 = 0, $3644 = 0, $3649 = 0, $365 = 0, $3650 = 0, $3653 = 0, $3654 = 0, $3655 = 0, $3656 = 0, $3658 = 0, $366 = 0, $3666 = 0.0, $3669 = 0, $367 = 0, $3675 = 0, $3676 = 0, $3678 = 0, $368 = 0, $3680 = 0, $3682 = 0, $3684 = 0, $3685 = 0, $3686 = 0, $3687 = 0, $369 = 0, $3692 = 0, $3693 = 0, $3696 = 0, $3697 = 0, $3698 = 0, $3699 = 0, $37 = 0, $370 = 0, $3701 = 0, $3709 = 0.0, $371 = 0, $3712 = 0, $3718 = 0, $3719 = 0, $372 = 0, $3721 = 0, $3723 = 0, $3725 = 0, $3727 = 0, $3728 = 0, $3729 = 0, $373 = 0, $3730 = 0, $3735 = 0, $3736 = 0, $3739 = 0, $374 = 0, $3740 = 0, $3741 = 0, $3742 = 0, $3744 = 0, $375 = 0, $3752 = 0.0, $3755 = 0, $376 = 0, $3761 = 0, $3762 = 0, $3764 = 0, $3766 = 0, $3768 = 0, $377 = 0, $3770 = 0, $3771 = 0, $3772 = 0, $3773 = 0, $3778 = 0, $3779 = 0, $378 = 0, $3782 = 0, $3783 = 0, $3784 = 0, $3785 = 0, $3787 = 0, $379 = 0, $3795 = 0.0, $3798 = 0, $38 = 0, $380 = 0, $3804 = 0, $3805 = 0, $3807 = 0, $3809 = 0, $381 = 0, $3811 = 0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0, $382 = 0, $3821 = 0, $3822 = 0, $3825 = 0, $3826 = 0, $3827 = 0, $3828 = 0, $383 = 0, $3830 = 0, $3838 = 0.0, $384 = 0, $3841 = 0, $3847 = 0, $3848 = 0, $385 = 0, $3850 = 0, $3852 = 0, $3854 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $3859 = 0, $3864 = 0, $3865 = 0, $3868 = 0, $3869 = 0, $3870 = 0, $3871 = 0, $3873 = 0, $3881 = 0.0, $3884 = 0, $3890 = 0, $3891 = 0, $3893 = 0, $3895 = 0, $3897 = 0, $3899 = 0, $39 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3907 = 0, $3908 = 0, $3911 = 0, $3912 = 0, $3913 = 0, $3914 = 0, $3916 = 0, $3924 = 0.0, $3927 = 0, $3933 = 0, $3934 = 0, $3936 = 0, $3938 = 0, $3940 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3950 = 0, $3951 = 0, $3954 = 0, $3955 = 0, $3956 = 0, $3957 = 0, $3959 = 0, $3967 = 0.0, $3970 = 0, $3976 = 0, $3977 = 0, $3979 = 0, $3981 = 0, $3983 = 0, $3985 = 0, $3986 = 0, $3987 = 0, $3988 = 0, $399 = 0, $3994 = 0, $3996 = 0, $3998 = 0, $3999 = 0, $4 = 0, $40 = 0, $4000 = 0, $4002 = 0, $4004 = 0, $4005 = 0, $4006 = 0, $4008 = 0, $401 = 0, $4010 = 0, $4011 = 0, $4012 = 0, $4014 = 0, $4016 = 0, $4017 = 0, $4018 = 0, $4020 = 0, $4022 = 0, $4023 = 0, $4024 = 0, $4026 = 0, $4028 = 0, $4029 = 0, $403 = 0, $4030 = 0, $4032 = 0, $4034 = 0, $4035 = 0, $4036 = 0, $4037 = 0, $404 = 0, $4040 = 0, $4041 = 0, $4043 = 0, $4045 = 0, $405 = 0, $4050 = 0, $4051 = 0, $4059 = 0, $406 = 0, $4060 = 0, $4062 = 0, $4064 = 0, $4066 = 0, $4067 = 0, $4072 = 0, $4074 = 0, $4075 = 0, $4077 = 0, $4078 = 0, $408 = 0, $4080 = 0, $4084 = 0, $4085 = 0, $4086 = 0, $4087 = 0, $409 = 0, $4093 = 0, $4095 = 0, $4097 = 0, $4098 = 0, $41 = 0, $410 = 0, $4102 = 0, $4104 = 0, $4107 = 0, $4108 = 0, $411 = 0, $4112 = 0, $4114 = 0, $4116 = 0, $4119 = 0, $4125 = 0, $4129 = 0, $413 = 0, $4132 = 0, $4133 = 0, $4135 = 0, $4139 = 0, $414 = 0, $4141 = 0, $4144 = 0, $4150 = 0, $4152 = 0, $4155 = 0, $4159 = 0, $4160 = 0, $4163 = 0, $4164 = 0, $4170 = 0, $4173 = 0, $4175 = 0, $4176 = 0, $4178 = 0, $4179 = 0, $4182 = 0, $4183 = 0, $4185 = 0, $4187 = 0, $4194 = 0, $4195 = 0, $4197 = 0, $4199 = 0, $42 = 0, $4200 = 0, $4202 = 0, $4204 = 0, $4205 = 0, $4206 = 0, $4207 = 0, $4208 = 0, $4209 = 0, $421 = 0, $4215 = 0, $4216 = 0, $4217 = 0, $4219 = 0, $422 = 0, $4225 = 0, $4227 = 0, $4240 = 0, $4241 = 0, $4245 = 0, $4247 = 0, $4250 = 0, $4259 = 0, $4260 = 0, $4262 = 0, $4264 = 0, $4266 = 0, $4268 = 0, $4269 = 0, $4271 = 0, $4272 = 0, $4273 = 0, $4276 = 0.0, $428 = 0, $4283 = 0.0, $4285 = 0, $4293 = 0, $4294 = 0, $43 = 0, $4302 = 0.0, $4303 = 0, $4304 = 0, $4306 = 0, $4307 = 0, $4309 = 0, $4311 = 0, $4313 = 0, $4315 = 0, $4316 = 0, $4317 = 0, $4318 = 0, $4319 = 0, $4320 = 0, $4323 = 0, $4324 = 0, $4325 = 0, $4326 = 0, $4328 = 0, $4335 = 0, $4336 = 0, $4338 = 0, $434 = 0, $4341 = 0, $4343 = 0, $4344 = 0, $4353 = 0, $4354 = 0, $4357 = 0, $4359 = 0, $436 = 0, $4362 = 0, $4364 = 0, $4367 = 0, $4371 = 0, $4373 = 0, $4374 = 0, $4375 = 0, $4376 = 0, $4378 = 0, $4379 = 0, $4381 = 0, $4386 = 0, $439 = 0, $4391 = 0, $4393 = 0, $4396 = 0, $4397 = 0, $44 = 0, $4403 = 0, $4405 = 0, $4408 = 0, $441 = 0, $4411 = 0, $4412 = 0, $4414 = 0, $4415 = 0, $4416 = 0, $4420 = 0, $4424 = 0, $4426 = 0, $4428 = 0, $4430 = 0, $4433 = 0, $4437 = 0, $4439 = 0, $444 = 0, $4441 = 0, $4444 = 0, $445 = 0, $4452 = 0, $4453 = 0, $4456 = 0, $4457 = 0, $4458 = 0, $4459 = 0, $4461 = 0, $4468 = 0, $4469 = 0, $447 = 0, $4470 = 0, $4472 = 0, $4477 = 0, $4479 = 0, $4480 = 0, $4481 = 0, $4484 = 0, $4488 = 0, $449 = 0, $4490 = 0, $4492 = 0, $4494 = 0, $4495 = 0, $4496 = 0, $4498 = 0, $45 = 0, $450 = 0, $4501 = 0, $4502 = 0, $4504 = 0, $4511 = 0, $4512 = 0, $4514 = 0, $4515 = 0, $4517 = 0, $4519 = 0, $4521 = 0, $4522 = 0, $4527 = 0, $4529 = 0, $4531 = 0, $4532 = 0, $4538 = 0, $4539 = 0.0, $4540 = 0, $4541 = 0, $4544 = 0, $4545 = 0, $4546 = 0, $4547 = 0, $4549 = 0, $4557 = 0, $4559 = 0, $456 = 0, $4560 = 0, $4561 = 0, $4564 = 0, $4568 = 0, $4570 = 0, $4572 = 0, $4574 = 0, $4575 = 0, $4576 = 0, $4578 = 0, $458 = 0, $4581 = 0, $4582 = 0, $4584 = 0, $4586 = 0, $4587 = 0, $4589 = 0, $4591 = 0, $4593 = 0, $4594 = 0, $4599 = 0, $46 = 0, $4601 = 0, $4603 = 0, $4604 = 0, $4607 = 0, $4608 = 0, $4609 = 0, $461 = 0, $4612 = 0, $4616 = 0, $4618 = 0, $4620 = 0, $4622 = 0, $4623 = 0, $4624 = 0, $4626 = 0, $4628 = 0, $4629 = 0, $4631 = 0, $4632 = 0, $4634 = 0, $4636 = 0, $4637 = 0, $4639 = 0, $4641 = 0, $4643 = 0, $4645 = 0, $4647 = 0, $4648 = 0, $465 = 0, $4651 = 0, $4653 = 0, $4655 = 0, $4656 = 0, $4657 = 0, $4658 = 0, $4661 = 0, $4662 = 0, $4663 = 0, $4664 = 0, $4666 = 0, $4674 = 0.0, $4677 = 0, $4683 = 0, $4684 = 0, $4686 = 0, $4688 = 0, $4690 = 0, $4692 = 0, $4693 = 0, $4694 = 0, $4695 = 0, $47 = 0, $470 = 0, $4700 = 0, $4701 = 0, $4704 = 0, $4705 = 0, $4706 = 0, $4707 = 0, $4709 = 0, $4717 = 0.0, $4720 = 0, $4726 = 0, $4727 = 0, $4729 = 0, $473 = 0, $4731 = 0, $4733 = 0, $4735 = 0, $4736 = 0, $4737 = 0, $4738 = 0, $4743 = 0, $4744 = 0, $4747 = 0, $4748 = 0, $4749 = 0, $475 = 0, $4750 = 0, $4752 = 0, $4760 = 0.0, $4763 = 0, $4769 = 0, $4770 = 0, $4772 = 0, $4774 = 0, $4776 = 0, $4778 = 0, $4779 = 0, $4780 = 0, $4781 = 0, $4786 = 0, $4787 = 0, $479 = 0, $4790 = 0, $4791 = 0, $4792 = 0, $4793 = 0, $4795 = 0, $48 = 0, $480 = 0, $4804 = 0.0, $4807 = 0, $4813 = 0, $4814 = 0, $4816 = 0, $4818 = 0, $4820 = 0, $4822 = 0, $4823 = 0, $4824 = 0, $4825 = 0, $4830 = 0, $4831 = 0, $4834 = 0, $4835 = 0, $4837 = 0, $4839 = 0, $4844 = 0.0, $4846 = 0, $4847 = 0, $4849 = 0, $485 = 0, $4851 = 0, $4853 = 0, $4854 = 0, $4859 = 0, $4861 = 0, $4862 = 0, $4865 = 0.0, $4868 = 0, $4874 = 0, $4875 = 0, $4877 = 0, $4879 = 0, $4881 = 0, $4883 = 0, $4884 = 0, $4885 = 0, $4886 = 0, $4889 = 0, $4890 = 0, $4891 = 0, $4892 = 0, $4894 = 0, $49 = 0, $490 = 0, $4901 = 0, $4902 = 0, $4905 = 0, $4906 = 0, $4914 = 0, $4915 = 0, $4923 = 0, $4924 = 0, $4926 = 0, $4928 = 0, $493 = 0, $4930 = 0, $4931 = 0, $4936 = 0, $4937 = 0, $4938 = 0, $4939 = 0, $494 = 0, $4940 = 0, $4941 = 0, $4943 = 0, $4945 = 0, $4946 = 0, $4948 = 0, $4949 = 0, $4955 = 0, $4957 = 0, $4958 = 0, $4963 = 0, $4964 = 0, $4966 = 0, $4967 = 0, $4968 = 0, $4970 = 0, $4972 = 0, $4974 = 0, $4976 = 0, $4982 = 0, $4984 = 0, $4992 = 0, $5 = 0, $50 = 0, $500 = 0, $5005 = 0, $5007 = 0, $5009 = 0, $5012 = 0, $5013 = 0, $502 = 0, $5022 = 0, $5024 = 0, $5026 = 0, $5027 = 0, $5028 = 0, $5029 = 0, $5031 = 0, $5032 = 0, $5034 = 0, $5035 = 0, $5037 = 0, $5039 = 0, $5041 = 0, $5043 = 0, $5044 = 0, $5045 = 0, $5047 = 0, $5048 = 0, $505 = 0, $5051 = 0, $5053 = 0, $5054 = 0, $5056 = 0, $5059 = 0, $5060 = 0, $5061 = 0, $5063 = 0, $5064 = 0, $5066 = 0, $5067 = 0, $5069 = 0, $5071 = 0, $5073 = 0, $5075 = 0, $5076 = 0, $5077 = 0, $5079 = 0, $5080 = 0, $5085 = 0, $5087 = 0, $5089 = 0, $509 = 0, $5092 = 0, $5093 = 0, $5094 = 0, $5096 = 0, $5097 = 0, $5099 = 0, $51 = 0, $510 = 0, $5100 = 0, $5102 = 0, $5104 = 0, $5106 = 0, $5108 = 0, $5109 = 0, $511 = 0, $5110 = 0, $5112 = 0, $5113 = 0, $5115 = 0, $5117 = 0, $5122 = 0, $5125 = 0, $5126 = 0, $5127 = 0, $5130 = 0, $5134 = 0, $5136 = 0, $5138 = 0, $5140 = 0, $5141 = 0, $5142 = 0, $5144 = 0, $5147 = 0, $5148 = 0, $515 = 0, $5150 = 0, $5151 = 0, $5153 = 0, $5154 = 0, $5156 = 0, $5157 = 0, $5159 = 0, $5161 = 0, $5162 = 0, $5165 = 0, $5167 = 0, $5169 = 0, $5171 = 0, $5173 = 0, $5174 = 0, $5177 = 0, $5181 = 0, $519 = 0, $5191 = 0, $5195 = 0, $5196 = 0, $5197 = 0, $5199 = 0, $52 = 0, $5200 = 0, $5202 = 0, $5203 = 0, $5205 = 0, $5207 = 0, $5209 = 0, $521 = 0, $5211 = 0, $5212 = 0, $5213 = 0, $5215 = 0, $5216 = 0, $5218 = 0, $5219 = 0, $5221 = 0, $5225 = 0, $5226 = 0, $5229 = 0, $5234 = 0, $5238 = 0, $5239 = 0, $5240 = 0, $5242 = 0, $5243 = 0, $5245 = 0, $5246 = 0, $5248 = 0, $5250 = 0, $5252 = 0, $5254 = 0, $5255 = 0, $5256 = 0, $5258 = 0, $5259 = 0, $5260 = 0, $5261 = 0, $5263 = 0, $5269 = 0, $5272 = 0, $5273 = 0, $5274 = 0, $5275 = 0, $5278 = 0, $5282 = 0, $5284 = 0, $5286 = 0, $5288 = 0, $5289 = 0, $5290 = 0, $5292 = 0, $5295 = 0, $5296 = 0, $5298 = 0, $5299 = 0, $53 = 0, $530 = 0, $5301 = 0, $5302 = 0, $5304 = 0, $5305 = 0, $5307 = 0, $5309 = 0, $531 = 0, $5310 = 0, $5313 = 0, $5315 = 0, $5317 = 0, $5319 = 0, $532 = 0, $5321 = 0, $5322 = 0, $5328 = 0, $5331 = 0, $5333 = 0, $5334 = 0, $5335 = 0, $5340 = 0, $5341 = 0, $5346 = 0, $5347 = 0, $5349 = 0, $5350 = 0, $5352 = 0, $5353 = 0, $5354 = 0, $5355 = 0, $5356 = 0, $5358 = 0, $5359 = 0, $5361 = 0, $5362 = 0, $5364 = 0, $5366 = 0, $5368 = 0, $537 = 0, $5370 = 0, $5371 = 0, $5372 = 0, $5374 = 0, $5375 = 0, $5377 = 0, $5378 = 0, $538 = 0, $5380 = 0, $5381 = 0, $5382 = 0, $5383 = 0, $5386 = 0, $5388 = 0, $5390 = 0, $5392 = 0, $5393 = 0, $5394 = 0, $5395 = 0, $5396 = 0, $5398 = 0, $54 = 0, $5402 = 0, $5403 = 0, $5406 = 0, $5408 = 0, $541 = 0, $5410 = 0, $5411 = 0, $5417 = 0, $5421 = 0, $5422 = 0, $5423 = 0, $543 = 0, $5431 = 0, $5432 = 0, $544 = 0, $5440 = 0, $5441 = 0, $5443 = 0, $5444 = 0, $5446 = 0, $5448 = 0, $5450 = 0, $5451 = 0, $5452 = 0, $5453 = 0, $5454 = 0, $5455 = 0, $5456 = 0, $5459 = 0, $5463 = 0, $5468 = 0, $547 = 0, $5474 = 0, $5475 = 0, $548 = 0, $5482 = 0, $5483 = 0, $5489 = 0, $5495 = 0, $5497 = 0, $55 = 0, $550 = 0, $5500 = 0, $5502 = 0, $5505 = 0, $5506 = 0, $5508 = 0, $5510 = 0, $5511 = 0, $5517 = 0, $5519 = 0, $5522 = 0, $5526 = 0, $553 = 0, $5532 = 0, $5533 = 0, $5537 = 0, $5539 = 0, $554 = 0, $5542 = 0, $5543 = 0, $5547 = 0, $5549 = 0, $5551 = 0, $5554 = 0, $5560 = 0, $5564 = 0, $5567 = 0, $5568 = 0, $557 = 0, $5570 = 0, $5574 = 0, $5576 = 0, $5579 = 0, $558 = 0, $5585 = 0, $5587 = 0, $559 = 0, $5590 = 0, $5594 = 0, $5596 = 0, $5597 = 0, $5599 = 0, $56 = 0, $5600 = 0, $5602 = 0, $5604 = 0, $5607 = 0, $561 = 0, $5613 = 0, $5617 = 0, $5620 = 0, $5621 = 0, $5623 = 0, $5627 = 0, $5629 = 0, $5632 = 0, $5638 = 0, $5640 = 0, $5643 = 0, $5647 = 0, $5652 = 0, $5653 = 0, $5655 = 0, $5656 = 0, $5658 = 0, $5659 = 0, $5664 = 0, $5667 = 0, $5668 = 0, $5669 = 0, $5671 = 0, $5672 = 0, $5674 = 0, $5676 = 0, $5678 = 0, $568 = 0, $5680 = 0, $5681 = 0, $5682 = 0, $5683 = 0, $5684 = 0, $5685 = 0, $5688 = 0, $569 = 0, $5690 = 0, $5691 = 0, $5695 = 0, $5696 = 0, $5699 = 0, $57 = 0, $5700 = 0, $5708 = 0, $5710 = 0, $5713 = 0, $5714 = 0, $5715 = 0, $5718 = 0, $5722 = 0, $5724 = 0, $5726 = 0, $5728 = 0, $5729 = 0, $573 = 0, $5730 = 0, $5732 = 0, $5735 = 0, $5736 = 0, $5738 = 0, $5740 = 0, $575 = 0, $5750 = 0, $5751 = 0, $5752 = 0, $5754 = 0, $5755 = 0, $5758 = 0, $5760 = 0, $5762 = 0, $5764 = 0, $5765 = 0, $5766 = 0, $5768 = 0, $5769 = 0, $5771 = 0, $5772 = 0, $5773 = 0, $5775 = 0, $5779 = 0, $578 = 0, $5780 = 0, $5783 = 0, $5785 = 0, $5787 = 0, $5788 = 0, $579 = 0, $5794 = 0, $5798 = 0, $5799 = 0, $58 = 0, $5800 = 0, $5808 = 0, $5809 = 0, $5817 = 0, $5818 = 0, $5820 = 0, $5821 = 0, $5823 = 0, $5825 = 0, $5827 = 0, $5828 = 0, $5829 = 0, $583 = 0, $5830 = 0, $5831 = 0, $5832 = 0, $5833 = 0, $5834 = 0, $5837 = 0, $5840 = 0, $5847 = 0, $5848 = 0, $585 = 0, $5855 = 0, $5856 = 0, $5862 = 0, $5868 = 0, $587 = 0, $5870 = 0, $5873 = 0, $5875 = 0, $5878 = 0, $5879 = 0, $5881 = 0, $5883 = 0, $5884 = 0, $5890 = 0, $5892 = 0, $5895 = 0, $5899 = 0, $59 = 0, $590 = 0, $5905 = 0, $5906 = 0, $5910 = 0, $5912 = 0, $5915 = 0, $5916 = 0, $5920 = 0, $5922 = 0, $5924 = 0, $5927 = 0, $5933 = 0, $5937 = 0, $5940 = 0, $5941 = 0, $5943 = 0, $5947 = 0, $5949 = 0, $5952 = 0, $5958 = 0, $596 = 0, $5960 = 0, $5963 = 0, $5968 = 0, $5970 = 0, $5972 = 0, $5973 = 0, $5977 = 0, $5979 = 0, $5982 = 0, $5983 = 0, $5987 = 0, $5989 = 0, $5991 = 0, $5994 = 0, $6 = 0, $60 = 0, $600 = 0, $6000 = 0, $6004 = 0, $6007 = 0, $6008 = 0, $6010 = 0, $6014 = 0, $6016 = 0, $6019 = 0, $6025 = 0, $6027 = 0, $603 = 0, $6030 = 0, $6034 = 0, $6039 = 0, $604 = 0, $6040 = 0, $6042 = 0, $6043 = 0, $6045 = 0, $6046 = 0, $6051 = 0, $6058 = 0, $6059 = 0, $606 = 0, $6060 = 0, $6061 = 0, $6063 = 0, $6065 = 0, $6067 = 0, $6068 = 0, $6069 = 0, $6071 = 0, $6076 = 0, $6077 = 0, $6078 = 0, $6088 = 0, $6089 = 0, $6090 = 0, $6092 = 0, $6095 = 0, $6096 = 0, $6099 = 0, $61 = 0, $610 = 0, $6101 = 0, $6102 = 0, $6103 = 0, $6110 = 0, $6111 = 0, $6112 = 0, $6114 = 0, $6115 = 0, $6119 = 0, $612 = 0, $6120 = 0, $6121 = 0, $6131 = 0, $6132 = 0, $6133 = 0, $6136 = 0, $6137 = 0, $6140 = 0, $6142 = 0, $6143 = 0, $6144 = 0, $615 = 0, $6151 = 0, $6152 = 0, $6153 = 0, $6155 = 0, $6156 = 0, $6157 = 0, $6159 = 0, $6161 = 0, $6162 = 0, $6164 = 0, $6165 = 0, $6166 = 0, $6170 = 0, $6171 = 0, $6172 = 0, $6174 = 0, $6176 = 0, $6177 = 0, $6179 = 0, $6180 = 0, $6182 = 0, $6184 = 0, $6186 = 0, $6188 = 0, $6189 = 0, $6190 = 0, $6192 = 0, $6193 = 0, $6194 = 0, $6195 = 0, $6197 = 0.0, $62 = 0, $6201 = 0.0, $6202 = 0, $6203 = 0, $6205 = 0, $6207 = 0, $6208 = 0, $621 = 0, $6210 = 0, $6211 = 0, $6213 = 0, $6215 = 0, $6217 = 0, $6219 = 0, $6220 = 0, $6221 = 0, $6223 = 0, $6224 = 0, $6225 = 0, $6226 = 0, $6229 = 0, $623 = 0, $6231 = 0, $6232 = 0, $6234 = 0, $6235 = 0, $6237 = 0, $6239 = 0, $6249 = 0, $6250 = 0, $6251 = 0, $6252 = 0, $6254 = 0, $6256 = 0, $6258 = 0, $626 = 0, $6260 = 0, $6261 = 0, $6262 = 0, $6264 = 0, $6266 = 0, $6268 = 0, $6269 = 0, $6272 = 0, $6277 = 0, $6278 = 0, $6283 = 0, $6284 = 0, $6286 = 0, $6287 = 0, $6293 = 0, $6296 = 0, $6299 = 0, $63 = 0, $630 = 0, $6302 = 0, $6305 = 0, $6307 = 0, $6308 = 0, $6309 = 0, $631 = 0, $6310 = 0, $6311 = 0, $6312 = 0, $6313 = 0, $6314 = 0, $6315 = 0, $6316 = 0, $6317 = 0, $6318 = 0, $6319 = 0, $6320 = 0, $6321 = 0, $6322 = 0, $634 = 0, $637 = 0, $638 = 0, $64 = 0, $641 = 0, $643 = 0, $644 = 0, $647 = 0, $648 = 0, $65 = 0, $650 = 0, $654 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $661 = 0, $667 = 0, $668 = 0, $67 = 0, $670 = 0, $672 = 0, $673 = 0, $676 = 0, $677 = 0, $68 = 0, $682 = 0, $684 = 0, $687 = 0, $688 = 0, $69 = 0, $694 = 0, $696 = 0, $699 = 0, $7 = 0, $70 = 0, $702 = 0, $703 = 0, $705 = 0, $706 = 0, $707 = 0, $71 = 0, $710 = 0, $711 = 0, $715 = 0, $717 = 0, $719 = 0, $72 = 0, $720 = 0, $727 = 0, $729 = 0, $73 = 0, $736 = 0, $74 = 0, $745 = 0, $747 = 0, $75 = 0, $753 = 0, $756 = 0, $759 = 0, $76 = 0, $763 = 0, $77 = 0, $772 = 0, $777 = 0, $779 = 0, $78 = 0, $783 = 0, $785 = 0, $787 = 0, $789 = 0, $79 = 0, $796 = 0, $798 = 0, $8 = 0, $80 = 0, $804 = 0, $806 = 0, $808 = 0, $81 = 0, $814 = 0, $82 = 0, $821 = 0, $822 = 0, $829 = 0, $83 = 0, $830 = 0, $836 = 0, $84 = 0, $842 = 0, $844 = 0, $847 = 0, $849 = 0, $85 = 0, $852 = 0, $853 = 0, $855 = 0, $857 = 0, $858 = 0, $86 = 0, $864 = 0, $866 = 0, $869 = 0, $87 = 0, $873 = 0, $88 = 0, $888 = 0, $89 = 0, $890 = 0, $892 = 0, $893 = 0, $897 = 0, $899 = 0, $9 = 0, $90 = 0, $902 = 0, $903 = 0, $907 = 0, $909 = 0, $91 = 0, $911 = 0, $914 = 0, $92 = 0, $920 = 0, $924 = 0, $927 = 0, $928 = 0, $93 = 0, $930 = 0, $934 = 0, $936 = 0, $939 = 0, $94 = 0, $945 = 0, $947 = 0, $95 = 0, $950 = 0, $954 = 0, $955 = 0, $957 = 0, $96 = 0, $962 = 0, $963 = 0, $966 = 0, $968 = 0, $969 = 0, $97 = 0, $972 = 0, $973 = 0, $975 = 0, $978 = 0, $979 = 0, $98 = 0, $982 = 0, $983 = 0, $984 = 0, $986 = 0, $99 = 0, $993 = 0, $994 = 0, $998 = 0, $__cache$0$ph$i$i$i = 0, $__cache$013$i$i$i = 0, $__cache$2$lcssa$i$i$i = 0, $__first$0312$i$i$i = 0, $__first$04$ph$i$i$i = 0, $__first$046$i$i$i = 0, $__lhs_sz$03$i = 0, $__lp$04$i = 0, $__nd$0$in$i$i = 0, $__nd$0$in$i$i$i$i$i = 0, $__nd$0$in$i$i19$i$i$i = 0, $__nd$0$in$i$i2512 = 0, $__nd$0$in$i$i2546 = 0, $__nd$0$in$i$i2580 = 0, $__nd$0$in$i$i2614 = 0, $__nd$0$in$i$i2653 = 0, $__nd$0$in$i$i2687 = 0, $__nd$0$in$i21$i$i$i$i$i$i$i = 0, $__nd$0$in$i21$i$i$i$i$i$i$i$i = 0, $__nd$0$in$i21$i$i$i$i$i$i$i$i448 = 0, $__nd$0$in$i21$i$i$i$i$i$i1050 = 0, $__nd$0$in$i21$i$i$i$i$i$i1633 = 0, $__nd$0$in$i21$i$i$i$i$i$i2251 = 0, $__nd$0$in$i21$i$i$i$i$i$i2292 = 0, $__nd$0$in$i21$i$i$i$i$i$i2386 = 0, $__nd$0$in$i21$i$i$i$i$i$i2425 = 0, $__nd$0$in$i21$i$i$i$i$i$i793 = 0, $__r$0$i = 0, $__r$0$i2518 = 0, $__r$0$i2552 = 0, $__r$0$i2586 = 0, $__r$0$i2620 = 0, $__r$0$i2659 = 0, $__r$0$i2693 = 0, $__rp$05$i = 0, $__t$idx$val$i$i = 0, $__v$idx$val$i$i$i$i$i = 0, $__v$idx$val$i$i17$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i2289 = 0, $__x$idx$i = 0, $__x$idx1$i$pre$phiZZZ2D = 0, $args = 0, $args68 = 0, $args68$idx$val = 0, $args68$idx353$val = 0, $args68$idx355$val = 0, $args68$idx365$val = 0, $args68$idx369$val = 0, $args68$idx371$val = 0, $args68$idx384$val = 0, $bindings = 0, $bindings65 = 0, $bindings83 = 0, $c105 = 0, $ch = 0, $eh$lpad$body$i$index31Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i1099$index146Z2D = 0, $eh$lpad$body$i1099$indexZ2D = 0, $eh$lpad$body$i1119$index151Z2D = 0, $eh$lpad$body$i1119$indexZ2D = 0, $eh$lpad$body$i1795$index170Z2D = 0, $eh$lpad$body$i1795$indexZ2D = 0, $eh$lpad$body$i1838$index175Z2D = 0, $eh$lpad$body$i1838$indexZ2D = 0, $eh$lpad$body$i1858$index180Z2D = 0, $eh$lpad$body$i1858$indexZ2D = 0, $eh$lpad$body$i2142$index185Z2D = 0, $eh$lpad$body$i2142$indexZ2D = 0, $eh$lpad$body$i2177$index190Z2D = 0, $eh$lpad$body$i2177$indexZ2D = 0, $eh$lpad$body$i2320$index195Z2D = 0, $eh$lpad$body$i2320$indexZ2D = 0, $eh$lpad$body$i2451$index200Z2D = 0, $eh$lpad$body$i2451$indexZ2D = 0, $eh$lpad$body$index26Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body1093$index97Z2D = 0, $eh$lpad$body1093$indexZ2D = 0, $eh$lpad$body11$i$index8Z2D = 0, $eh$lpad$body11$i$indexZ2D = 0, $eh$lpad$body1124$index158Z2D = 0, $eh$lpad$body1124$indexZ2D = 0, $eh$lpad$body16$i$index20Z2D = 0, $eh$lpad$body16$i$indexZ2D = 0, $eh$lpad$body2478$index206Z2D = 0, $eh$lpad$body2478$indexZ2D = 0, $eh$lpad$body6$i$i$index2Z2D = 0, $eh$lpad$body6$i$i$indexZ2D = 0, $eh$lpad$body6$i$i528$index14Z2D = 0, $eh$lpad$body6$i$i528$indexZ2D = 0, $eh$lpad$body812$index36Z2D = 0, $eh$lpad$body812$indexZ2D = 0, $elements45 = 0, $elements75 = 0, $env = 0, $env129 = 0, $env137 = 0, $env26 = 0, $env27 = 0, $exp = 0, $exp106 = 0, $fid128 = 0, $fid136 = 0, $fields = 0, $fields88 = 0, $fields90 = 0, $found$0$off0 = 0, $i$0$in$i = 0, $i$0$in$i2491 = 0, $i$0$in$i2525 = 0, $i$0$in$i2559 = 0, $i$0$in$i2593 = 0, $i$0$in$i2627 = 0, $i$0$in$i2666 = 0, $i$0$in$i2700 = 0, $i$0$in$i411 = 0, $i$0$in$i551 = 0, $i$0$in$i621 = 0, $i$0$in$i631 = 0, $i$0$in$i689 = 0, $i$0$in$i714 = 0, $i$013$i$i = 0, $i$013$i$i$i = 0, $i$013$i$i$i511 = 0, $i$013$i$i$i668 = 0, $i$013$i$i$i984 = 0, $i$03320 = 0, $i$1$i$i = 0, $i$1$i$i$i = 0, $i$1$i$i$i522 = 0, $i$1$i$i$i680 = 0, $i$1$i$i$i996 = 0, $i41$03337 = 0, $i77$03293 = 0, $lpad$phi3261$index = 0, $lpad$phi3261$index165 = 0, $lpad$phi3300$index = 0, $lpad$phi3300$index47 = 0, $lpad$phi3336$index = 0, $lpad$phi3336$index41 = 0, $scevgep4$i$i$i$i$i$i677 = 0, $scevgep4$i$i$i$i$i$i993 = 0, $scevgep4$i$i$i$i$i558 = 0, $scevgep4$i$i$i$i8$i$i = 0, $scevgep4$i$i$i$i8$i$i519 = 0, $ss = 0, $ss102 = 0, $ss103 = 0, $ss104 = 0, $ss119 = 0, $ss125 = 0, $ss134 = 0, $ss141 = 0, $ss73 = 0, $ss76 = 0, $this$idx$val$i$i = 0, $this$idx$val$i$i$i$i = 0, $this$idx$val$i$i$i$i$i = 0, $this$idx$val$i$i$i$i$i488 = 0, $this$idx$val$i$i$i$i$i646 = 0, $this$idx$val$i$i$i$i$i962 = 0, $this$idx$val$i$i1020 = 0, $this$idx$val$i$i1075 = 0, $this$idx$val$i$i1136 = 0, $this$idx$val$i$i1156 = 0, $this$idx$val$i$i1746 = 0, $this$idx$val$i$i731 = 0, $this$idx$val$i$i867 = 0, $this$idx$val$i$i894 = 0, $this$idx2$val$i$i = 0, $this$idx2$val$i$i$i$i = 0, $this$idx2$val$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i$i483 = 0, $this$idx2$val$i$i$i$i$i642 = 0, $this$idx2$val$i$i$i$i$i958 = 0, $this$idx2$val$i$i1016 = 0, $this$idx2$val$i$i1071 = 0, $this$idx2$val$i$i1152 = 0, $this$idx2$val$i$i1742 = 0, $this$idx2$val$i$i727 = 0, $this$idx2$val$i$i863 = 0, $this$idx2$val$i$i890 = 0, $this$idx3$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4176 | 0;
 $0 = sp + 4064 | 0;
 $1 = sp + 4052 | 0;
 $2 = sp + 4040 | 0;
 $3 = sp + 4028 | 0;
 $4 = sp + 4016 | 0;
 $5 = sp + 4004 | 0;
 $6 = sp + 3992 | 0;
 $7 = sp + 3980 | 0;
 $8 = sp + 3968 | 0;
 $9 = sp + 3956 | 0;
 $10 = sp + 3944 | 0;
 $11 = sp + 3936 | 0;
 $12 = sp + 3924 | 0;
 $13 = sp + 3912 | 0;
 $14 = sp + 3900 | 0;
 $15 = sp + 3888 | 0;
 $16 = sp + 3876 | 0;
 $17 = sp + 3864 | 0;
 $18 = sp + 3852 | 0;
 $19 = sp + 3840 | 0;
 $20 = sp + 3828 | 0;
 $21 = sp + 3816 | 0;
 $22 = sp + 3804 | 0;
 $23 = sp + 3792 | 0;
 $24 = sp + 3780 | 0;
 $25 = sp + 3768 | 0;
 $26 = sp + 3756 | 0;
 $27 = sp + 3744 | 0;
 $28 = sp + 384 | 0;
 $29 = sp + 3732 | 0;
 $30 = sp + 3720 | 0;
 $env = sp + 3708 | 0;
 $31 = sp + 3696 | 0;
 $32 = sp + 368 | 0;
 $33 = sp + 3684 | 0;
 $$sroa$32935 = sp + 4164 | 0;
 $34 = sp + 352 | 0;
 $$sroa$22928 = sp + 3672 | 0;
 $env26 = sp + 3660 | 0;
 $fields = sp + 3648 | 0;
 $35 = sp + 336 | 0;
 $36 = sp + 3636 | 0;
 $37 = sp + 3624 | 0;
 $env27 = sp + 3612 | 0;
 $38 = sp + 3600 | 0;
 $39 = sp + 3588 | 0;
 $40 = sp + 3576 | 0;
 $ss = sp + 3432 | 0;
 $41 = sp + 3420 | 0;
 $42 = sp + 3408 | 0;
 $args = sp + 3396 | 0;
 $bindings = sp + 3384 | 0;
 $$sroa$32922 = sp + 4157 | 0;
 $$sroa$32918 = sp + 4150 | 0;
 $43 = sp + 3372 | 0;
 $44 = sp + 3360 | 0;
 $45 = sp + 3348 | 0;
 $46 = sp + 3336 | 0;
 $47 = sp + 3324 | 0;
 $48 = sp + 3312 | 0;
 $49 = sp + 3300 | 0;
 $50 = sp + 3288 | 0;
 $51 = sp + 3276 | 0;
 $elements45 = sp + 3264 | 0;
 $52 = sp + 320 | 0;
 $53 = sp + 3252 | 0;
 $54 = sp + 3240 | 0;
 $55 = sp + 3228 | 0;
 $$sroa$32914 = sp + 4143 | 0;
 $$sroa$32910 = sp + 4136 | 0;
 $56 = sp + 3216 | 0;
 $57 = sp + 3204 | 0;
 $58 = sp + 3192 | 0;
 $59 = sp + 3180 | 0;
 $$sroa$32879 = sp + 4129 | 0;
 $$sroa$32875 = sp + 4122 | 0;
 $$sroa$32871 = sp + 4115 | 0;
 $$sroa$32867 = sp + 4108 | 0;
 $60 = sp + 3168 | 0;
 $61 = sp + 3156 | 0;
 $62 = sp + 3144 | 0;
 $63 = sp + 3132 | 0;
 $64 = sp + 3120 | 0;
 $65 = sp + 3108 | 0;
 $66 = sp + 3096 | 0;
 $67 = sp + 3084 | 0;
 $68 = sp + 3072 | 0;
 $69 = sp + 3060 | 0;
 $70 = sp + 3048 | 0;
 $71 = sp + 3036 | 0;
 $72 = sp + 304 | 0;
 $73 = sp + 3024 | 0;
 $74 = sp + 3012 | 0;
 $75 = sp + 3e3 | 0;
 $76 = sp + 2988 | 0;
 $77 = sp + 2976 | 0;
 $78 = sp + 2964 | 0;
 $79 = sp + 288 | 0;
 $bindings65 = sp + 2952 | 0;
 $args68 = sp + 2940 | 0;
 $80 = sp + 2928 | 0;
 $ss73 = sp + 2784 | 0;
 $81 = sp + 2772 | 0;
 $elements75 = sp + 2760 | 0;
 $ss76 = sp + 2616 | 0;
 $82 = sp + 2600 | 0;
 $83 = sp + 272 | 0;
 $84 = sp + 2588 | 0;
 $85 = sp + 2576 | 0;
 $86 = sp + 2564 | 0;
 $87 = sp + 2552 | 0;
 $88 = sp + 2540 | 0;
 $89 = sp + 2528 | 0;
 $90 = sp + 2516 | 0;
 $91 = sp + 2504 | 0;
 $92 = sp + 2492 | 0;
 $93 = sp + 2480 | 0;
 $94 = sp + 256 | 0;
 $95 = sp + 2468 | 0;
 $96 = sp + 240 | 0;
 $97 = sp + 2456 | 0;
 $98 = sp + 224 | 0;
 $99 = sp + 2444 | 0;
 $100 = sp + 208 | 0;
 $101 = sp + 2432 | 0;
 $102 = sp + 192 | 0;
 $103 = sp + 2420 | 0;
 $104 = sp + 176 | 0;
 $105 = sp + 2408 | 0;
 $106 = sp + 160 | 0;
 $107 = sp + 2396 | 0;
 $108 = sp + 2384 | 0;
 $109 = sp + 2372 | 0;
 $110 = sp + 144 | 0;
 $111 = sp + 2360 | 0;
 $bindings83 = sp + 2348 | 0;
 $112 = sp + 2336 | 0;
 $113 = sp + 2324 | 0;
 $$sroa$32801 = sp + 4101 | 0;
 $114 = sp + 2312 | 0;
 $fields88 = sp + 2300 | 0;
 $115 = sp + 2288 | 0;
 $116 = sp + 2276 | 0;
 $117 = sp + 2264 | 0;
 $fields90 = sp + 2252 | 0;
 $118 = sp + 2240 | 0;
 $119 = sp + 128 | 0;
 $120 = sp + 2228 | 0;
 $121 = sp + 112 | 0;
 $122 = sp + 2216 | 0;
 $ss102 = sp + 2072 | 0;
 $123 = sp + 2060 | 0;
 $124 = sp + 2048 | 0;
 $ss103 = sp + 1904 | 0;
 $125 = sp + 1888 | 0;
 $ss104 = sp + 1744 | 0;
 $126 = sp + 1732 | 0;
 $c105 = sp + 4100 | 0;
 $127 = sp + 96 | 0;
 $128 = sp + 1720 | 0;
 $129 = sp + 1708 | 0;
 $130 = sp + 1696 | 0;
 $131 = sp + 1684 | 0;
 $exp = sp + 1680 | 0;
 $132 = sp + 1668 | 0;
 $exp106 = sp + 1664 | 0;
 $133 = sp + 1652 | 0;
 $134 = sp + 1640 | 0;
 $$sroa$32750 = sp + 4093 | 0;
 $135 = sp + 1628 | 0;
 $136 = sp + 1624 | 0;
 $137 = sp + 1612 | 0;
 $138 = sp + 80 | 0;
 $$sroa$32743 = sp + 4086 | 0;
 $139 = sp + 1600 | 0;
 $140 = sp + 1588 | 0;
 $141 = sp + 1576 | 0;
 $142 = sp + 1564 | 0;
 $143 = sp + 1552 | 0;
 $144 = sp + 1540 | 0;
 $145 = sp + 1528 | 0;
 $146 = sp + 1516 | 0;
 $147 = sp + 1504 | 0;
 $ss119 = sp + 1360 | 0;
 $148 = sp + 1344 | 0;
 $149 = sp + 1332 | 0;
 $150 = sp + 1320 | 0;
 $151 = sp + 1308 | 0;
 $152 = sp + 1296 | 0;
 $153 = sp + 1284 | 0;
 $154 = sp + 1272 | 0;
 $ss125 = sp + 1128 | 0;
 $155 = sp + 1116 | 0;
 $ch = sp + 4084 | 0;
 $156 = sp + 64 | 0;
 $157 = sp + 1104 | 0;
 $158 = sp + 1092 | 0;
 $159 = sp + 1080 | 0;
 $160 = sp + 1068 | 0;
 $161 = sp + 1056 | 0;
 $fid128 = sp + 1052 | 0;
 $162 = sp + 1040 | 0;
 $163 = sp + 1028 | 0;
 $env129 = sp + 1016 | 0;
 $164 = sp + 48 | 0;
 $165 = sp + 1004 | 0;
 $166 = sp + 992 | 0;
 $167 = sp + 980 | 0;
 $168 = sp + 968 | 0;
 $169 = sp + 32 | 0;
 $170 = sp + 956 | 0;
 $171 = sp + 944 | 0;
 $ss134 = sp + 800 | 0;
 $172 = sp + 788 | 0;
 $173 = sp + 776 | 0;
 $fid136 = sp + 772 | 0;
 $174 = sp + 760 | 0;
 $175 = sp + 748 | 0;
 $env137 = sp + 736 | 0;
 $176 = sp + 16 | 0;
 $177 = sp + 724 | 0;
 $178 = sp + 712 | 0;
 $ss141 = sp + 568 | 0;
 $179 = sp + 556 | 0;
 $180 = sp + 544 | 0;
 $181 = sp;
 $182 = sp + 532 | 0;
 $$sroa$3 = sp + 4076 | 0;
 $183 = sp + 520 | 0;
 $184 = sp + 508 | 0;
 $185 = sp + 496 | 0;
 $186 = sp + 484 | 0;
 $187 = sp + 472 | 0;
 $188 = sp + 460 | 0;
 $189 = sp + 448 | 0;
 $190 = sp + 436 | 0;
 $191 = sp + 424 | 0;
 $192 = sp + 412 | 0;
 $193 = sp + 400 | 0;
 $194 = $this + 72 | 0;
 $$idx$i = $this + 84 | 0;
 $$idx1$i = $this + 88 | 0;
 $197 = (HEAP32[$$idx1$i >> 2] | 0) - (HEAP32[$$idx$i >> 2] | 0) | 0;
 $198 = $29 + 4 | 0;
 $199 = $29 + 8 | 0;
 $200 = $this + 56 | 0;
 $201 = $this + 64 | 0;
 $202 = $this + 100 | 0;
 $203 = $30 + 4 | 0;
 $204 = $30 + 8 | 0;
 $205 = $30 + 4 | 0;
 $206 = $3 + 4 | 0;
 $207 = $3 + 8 | 0;
 $208 = $3 + 4 | 0;
 $209 = $4 + 4 | 0;
 $210 = $4 + 8 | 0;
 $211 = $1 + 4 | 0;
 $212 = $1 + 8 | 0;
 $213 = $1 + 4 | 0;
 $214 = $2 + 4 | 0;
 $215 = $2 + 8 | 0;
 $216 = $this + 20 | 0;
 $217 = $this + 24 | 0;
 $218 = $this + 28 | 0;
 $219 = $this + 16 | 0;
 $220 = $this + 48 | 0;
 $221 = $this + 8 | 0;
 $222 = $this + 44 | 0;
 $223 = $this + 56 | 0;
 $$idx6$i$i$i = $this + 20 | 0;
 $224 = $env + 4 | 0;
 $225 = $env + 8 | 0;
 $226 = $env + 4 | 0;
 $227 = $26 + 4 | 0;
 $228 = $26 + 8 | 0;
 $229 = $26 + 4 | 0;
 $230 = $27 + 4 | 0;
 $231 = $27 + 8 | 0;
 $232 = $24 + 4 | 0;
 $233 = $24 + 8 | 0;
 $234 = $24 + 4 | 0;
 $235 = $25 + 4 | 0;
 $236 = $25 + 8 | 0;
 $237 = $this + 96 | 0;
 $238 = $31 + 4 | 0;
 $239 = $31 + 8 | 0;
 $240 = $31 + 4 | 0;
 $241 = $33 + 4 | 0;
 $242 = $33 + 8 | 0;
 $243 = $33 + 4 | 0;
 $244 = $this + 65 | 0;
 $245 = $this + 64 | 0;
 $246 = $this + 60 | 0;
 $247 = $env26 + 4 | 0;
 $248 = $env26 + 8 | 0;
 $249 = $env26 + 4 | 0;
 $250 = $fields + 4 | 0;
 $251 = $fields + 8 | 0;
 $252 = $fields + 4 | 0;
 $253 = $36 + 4 | 0;
 $254 = $36 + 8 | 0;
 $255 = $36 + 4 | 0;
 $256 = $37 + 4 | 0;
 $257 = $37 + 8 | 0;
 $258 = $37 + 4 | 0;
 $259 = $env27 + 4 | 0;
 $260 = $env27 + 8 | 0;
 $261 = $env27 + 4 | 0;
 $262 = $200 + 4 | 0;
 $263 = $200 + 12 | 0;
 $264 = $args + 4 | 0;
 $265 = $args + 8 | 0;
 $266 = $bindings + 4 | 0;
 $267 = $bindings + 8 | 0;
 $268 = $bindings + 4 | 0;
 $269 = $42 + 4 | 0;
 $270 = $42 + 8 | 0;
 $271 = $42 + 4 | 0;
 $272 = $elements45 + 4 | 0;
 $273 = $elements45 + 8 | 0;
 $274 = $args68 + 4 | 0;
 $275 = $args68 + 8 | 0;
 $276 = $80 + 4 | 0;
 $277 = $80 + 8 | 0;
 $278 = $elements75 + 4 | 0;
 $279 = $elements75 + 8 | 0;
 $280 = $84 + 4 | 0;
 $281 = $84 + 8 | 0;
 $282 = $85 + 4 | 0;
 $283 = $85 + 8 | 0;
 $284 = $86 + 4 | 0;
 $285 = $86 + 8 | 0;
 $286 = $87 + 4 | 0;
 $287 = $87 + 8 | 0;
 $288 = $88 + 4 | 0;
 $289 = $88 + 8 | 0;
 $290 = $89 + 4 | 0;
 $291 = $89 + 8 | 0;
 $292 = $90 + 4 | 0;
 $293 = $90 + 8 | 0;
 $294 = $91 + 4 | 0;
 $295 = $91 + 8 | 0;
 $296 = $92 + 4 | 0;
 $297 = $92 + 8 | 0;
 $298 = $93 + 4 | 0;
 $299 = $93 + 8 | 0;
 $300 = $108 + 4 | 0;
 $301 = $108 + 8 | 0;
 $302 = $111 + 4 | 0;
 $303 = $111 + 8 | 0;
 $304 = $bindings83 + 4 | 0;
 $305 = $bindings83 + 8 | 0;
 $306 = $bindings83 + 4 | 0;
 $307 = $112 + 4 | 0;
 $308 = $112 + 8 | 0;
 $309 = $113 + 4 | 0;
 $310 = $113 + 4 | 0;
 $311 = $fields88 + 8 | 0;
 $312 = $fields88 + 4 | 0;
 $313 = $117 + 4 | 0;
 $314 = $117 + 8 | 0;
 $315 = $fields90 + 4 | 0;
 $316 = $fields90 + 8 | 0;
 $317 = $fields90 + 4 | 0;
 $318 = $118 + 4 | 0;
 $319 = $118 + 4 | 0;
 $320 = $120 + 4 | 0;
 $321 = $120 + 8 | 0;
 $322 = $122 + 4 | 0;
 $323 = $122 + 8 | 0;
 $324 = $124 + 4 | 0;
 $325 = $124 + 8 | 0;
 $326 = $129 + 4 | 0;
 $327 = $129 + 8 | 0;
 $328 = $130 + 4 | 0;
 $329 = $130 + 8 | 0;
 $330 = $131 + 4 | 0;
 $331 = $131 + 8 | 0;
 $332 = $132 + 4 | 0;
 $333 = $132 + 8 | 0;
 $334 = $133 + 4 | 0;
 $335 = $133 + 8 | 0;
 $336 = $135 + 4 | 0;
 $337 = $135 + 8 | 0;
 $338 = $this + 116 | 0;
 $339 = $this + 120 | 0;
 $340 = $ch + 1 | 0;
 $341 = $env129 + 4 | 0;
 $342 = $env129 + 8 | 0;
 $343 = $env129 + 4 | 0;
 $344 = $165 + 4 | 0;
 $345 = $165 + 8 | 0;
 $346 = $165 + 4 | 0;
 $347 = $166 + 4 | 0;
 $348 = $166 + 8 | 0;
 $349 = $166 + 4 | 0;
 $350 = $170 + 4 | 0;
 $351 = $170 + 8 | 0;
 $352 = $170 + 4 | 0;
 $353 = $171 + 4 | 0;
 $354 = $171 + 8 | 0;
 $355 = $171 + 4 | 0;
 $356 = $env137 + 4 | 0;
 $357 = $env137 + 8 | 0;
 $358 = $env137 + 4 | 0;
 $359 = $177 + 4 | 0;
 $360 = $177 + 8 | 0;
 $361 = $177 + 4 | 0;
 $362 = $178 + 4 | 0;
 $363 = $178 + 8 | 0;
 $364 = $178 + 4 | 0;
 $365 = $ss141 + 64 | 0;
 $366 = $ss141 + 8 | 0;
 $367 = $ss141 + 12 | 0;
 $368 = $ss141 + 4 | 0;
 $369 = $ss141 + 64 | 0;
 $370 = $ss141 + 136 | 0;
 $371 = $ss141 + 140 | 0;
 $372 = $ss141 + 44 | 0;
 $373 = $ss141 + 60 | 0;
 $374 = $ss141 + 8 | 0;
 $375 = $ss141 + 64 | 0;
 $376 = $180 + 1 | 0;
 $377 = $180 + 8 | 0;
 $378 = $180 + 4 | 0;
 $379 = $179 + 1 | 0;
 $380 = $179 + 8 | 0;
 $381 = $179 + 4 | 0;
 $382 = $bindings65 + 4 | 0;
 $383 = $bindings65 + 8 | 0;
 $384 = $bindings65 + 4 | 0;
 $$010 = $ast_;
 L1 : while (1) {
  $385 = $$010 + 32 | 0;
  L3 : do switch (HEAP32[$385 >> 2] | 0) {
  case 3:
   {
    $530 = HEAP32[$$010 + 48 >> 2] | 0;
    $531 = $$010 + 52 | 0;
    HEAP32[$206 >> 2] = 0;
    HEAP32[$207 >> 2] = 0;
    HEAP32[$3 >> 2] = $208;
    HEAP32[$4 >> 2] = 0;
    HEAP32[$209 >> 2] = 0;
    HEAP32[$210 >> 2] = 0;
    $532 = $$010 + 56 | 0;
    $537 = (HEAP32[$532 >> 2] | 0) - (HEAP32[$531 >> 2] | 0) | 0;
    $538 = $537 >> 2;
    if (!$538) $6308 = 0; else {
     if ($538 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(181, $4 | 0);
      $541 = __THREW__;
      __THREW__ = 0;
      if ($541 & 1) {
       label = 68;
       break L1;
      }
     }
     __THREW__ = 0;
     $543 = invoke_ii(67, $537 | 0) | 0;
     $544 = __THREW__;
     __THREW__ = 0;
     if ($544 & 1) {
      label = 68;
      break L1;
     }
     HEAP32[$209 >> 2] = $543;
     HEAP32[$4 >> 2] = $543;
     HEAP32[$210 >> 2] = $543 + ($538 << 2);
     $547 = HEAP32[$531 >> 2] | 0;
     $548 = HEAP32[$532 >> 2] | 0;
     if (($547 | 0) == ($548 | 0)) $6308 = $543; else {
      $$01$i$i$i = $547;
      $550 = $543;
      while (1) {
       if (!$550) $554 = 0; else {
        HEAP32[$550 >> 2] = HEAP32[$$01$i$i$i >> 2];
        $554 = HEAP32[$209 >> 2] | 0;
       }
       $553 = $554 + 4 | 0;
       HEAP32[$209 >> 2] = $553;
       $$01$i$i$i = $$01$i$i$i + 4 | 0;
       if (($$01$i$i$i | 0) == ($548 | 0)) {
        $6308 = $553;
        break;
       } else $550 = $553;
      }
     }
    }
    HEAP32[$211 >> 2] = 0;
    HEAP32[$212 >> 2] = 0;
    HEAP32[$1 >> 2] = $213;
    $$idx$val$i$i$i$i = HEAP32[$3 >> 2] | 0;
    if (($$idx$val$i$i$i$i | 0) == ($208 | 0)) $634 = $6308; else {
     $$idx$val$i15$i$i$i$i = $$idx$val$i$i$i$i;
     while (1) {
      __THREW__ = 0;
      $568 = invoke_ii(67, 24) | 0;
      $569 = __THREW__;
      __THREW__ = 0;
      if ($569 & 1) {
       label = 102;
       break L1;
      }
      $573 = $$idx$val$i15$i$i$i$i + 16 | 0;
      $575 = HEAP32[$573 >> 2] | 0;
      $578 = HEAP32[$573 + 4 >> 2] | 0;
      $579 = $568 + 16 | 0;
      HEAP32[$579 >> 2] = $575;
      HEAP32[$579 + 4 >> 2] = $578;
      $583 = $575;
      $$pre$i$i$i$i$i$i$i$i = HEAP32[$213 >> 2] | 0;
      do if ((HEAP32[$1 >> 2] | 0) == ($213 | 0)) {
       $596 = $213;
       label = 79;
      } else {
       $585 = ($$pre$i$i$i$i$i$i$i$i | 0) == 0;
       if ($585) {
        $$0$i$i$i$i$i$i$i$i$i$i = $213;
        while (1) {
         $590 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$590 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i$i = $590; else {
          $$01$i$i$i$i$i$i$i$i$i$i = $590;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $587 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
         if (!$587) {
          $$01$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i = $587;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $583 >>> 0) {
        $596 = $$01$i$i$i$i$i$i$i$i$i$i;
        label = 79;
       } else {
        if ($585) {
         HEAP32[$0 >> 2] = $213;
         $$0$i$i$i$i1$i$i$i$i = $213;
         $610 = $213;
         break;
        } else $__nd$0$in$i21$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i23$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i + 16 >> 2] | 0;
         if ($583 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i$i$i >>> 0) {
          $600 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i >> 2] | 0;
          if (!$600) {
           label = 85;
           break;
          } else {
           $__nd$0$in$i21$i$i$i$i$i$i$i$i = $600;
           continue;
          }
         }
         if ($$idx2$val$i23$i$i$i$i$i$i$i$i >>> 0 >= $583 >>> 0) {
          label = 89;
          break;
         }
         $603 = $__nd$0$in$i21$i$i$i$i$i$i$i$i + 4 | 0;
         $604 = HEAP32[$603 >> 2] | 0;
         if (!$604) {
          label = 88;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i$i$i = $604;
        }
        if ((label | 0) == 85) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i$i = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         $610 = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         break;
        } else if ((label | 0) == 88) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i$i = $603;
         $610 = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         break;
        } else if ((label | 0) == 89) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i$i = $0;
         $610 = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 79) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i) {
        HEAP32[$0 >> 2] = $213;
        $$0$i$i$i$i1$i$i$i$i = $213;
        $610 = $213;
        break;
       } else {
        HEAP32[$0 >> 2] = $596;
        $$0$i$i$i$i1$i$i$i$i = $596 + 4 | 0;
        $610 = $596;
        break;
       }
      } while (0);
      $606 = HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] | 0;
      if (!$606) {
       HEAP32[$568 >> 2] = 0;
       HEAP32[$568 + 4 >> 2] = 0;
       HEAP32[$568 + 8 >> 2] = $610;
       HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] = $568;
       $612 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
       if (!$612) $615 = $568; else {
        HEAP32[$1 >> 2] = $612;
        $615 = HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$211 >> 2] | 0, $615);
       HEAP32[$212 >> 2] = (HEAP32[$212 >> 2] | 0) + 1;
      } else if (!(($606 | 0) == ($568 | 0) | ($568 | 0) == 0)) __ZdlPv($568);
      $621 = HEAP32[$$idx$val$i15$i$i$i$i + 4 >> 2] | 0;
      if (!$621) {
       $$0$i$i$i$i$i$i$i = $$idx$val$i15$i$i$i$i;
       while (1) {
        $626 = HEAP32[$$0$i$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$626 >> 2] | 0) == ($$0$i$i$i$i$i$i$i | 0)) {
         $$01$i$i$i$i$i$i$i = $626;
         break;
        } else $$0$i$i$i$i$i$i$i = $626;
       }
      } else {
       $$0$i$i$i$i$i$i$i$i = $621;
       while (1) {
        $623 = HEAP32[$$0$i$i$i$i$i$i$i$i >> 2] | 0;
        if (!$623) {
         $$01$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i;
         break;
        } else $$0$i$i$i$i$i$i$i$i = $623;
       }
      }
      if (($$01$i$i$i$i$i$i$i | 0) == ($208 | 0)) break; else $$idx$val$i15$i$i$i$i = $$01$i$i$i$i$i$i$i;
     }
     $634 = HEAP32[$209 >> 2] | 0;
    }
    HEAP32[$2 >> 2] = 0;
    HEAP32[$214 >> 2] = 0;
    HEAP32[$215 >> 2] = 0;
    $637 = $634 - (HEAP32[$4 >> 2] | 0) | 0;
    $638 = $637 >> 2;
    if ($638) {
     if ($638 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(181, $2 | 0);
      $641 = __THREW__;
      __THREW__ = 0;
      if ($641 & 1) {
       label = 112;
       break L1;
      }
     }
     __THREW__ = 0;
     $643 = invoke_ii(67, $637 | 0) | 0;
     $644 = __THREW__;
     __THREW__ = 0;
     if ($644 & 1) {
      label = 112;
      break L1;
     }
     HEAP32[$214 >> 2] = $643;
     HEAP32[$2 >> 2] = $643;
     HEAP32[$215 >> 2] = $643 + ($638 << 2);
     $647 = HEAP32[$4 >> 2] | 0;
     $648 = HEAP32[$209 >> 2] | 0;
     if (($647 | 0) != ($648 | 0)) {
      $$01$i$i$i$i = $647;
      $650 = $643;
      do {
       if (!$650) $654 = 0; else {
        HEAP32[$650 >> 2] = HEAP32[$$01$i$i$i$i >> 2];
        $654 = HEAP32[$214 >> 2] | 0;
       }
       $650 = $654 + 4 | 0;
       HEAP32[$214 >> 2] = $650;
       $$01$i$i$i$i = $$01$i$i$i$i + 4 | 0;
      } while (($$01$i$i$i$i | 0) != ($648 | 0));
     }
    }
    __THREW__ = 0;
    $667 = invoke_ii(67, 48) | 0;
    $668 = __THREW__;
    __THREW__ = 0;
    if ($668 & 1) {
     label = 156;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiiiiii(40, $667 | 0, $1 | 0, 0, 0, $2 | 0, 0, $530 | 0);
    $670 = __THREW__;
    __THREW__ = 0;
    if ($670 & 1) {
     label = 134;
     break L1;
    }
    $672 = HEAP32[$217 >> 2] | 0;
    $673 = HEAP32[$218 >> 2] | 0;
    if ($672 >>> 0 < $673 >>> 0) {
     if (!$672) $677 = 0; else {
      HEAP32[$672 >> 2] = $667;
      $677 = HEAP32[$217 >> 2] | 0;
     }
     $676 = $677 + 4 | 0;
     HEAP32[$217 >> 2] = $676;
     $$idx1$val$i$i$i = $676;
    } else {
     $this$idx2$val$i$i$i$i$i = HEAP32[$216 >> 2] | 0;
     $682 = ($672 - $this$idx2$val$i$i$i$i$i >> 2) + 1 | 0;
     if ($682 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(181, $216 | 0);
      $684 = __THREW__;
      __THREW__ = 0;
      if ($684 & 1) {
       label = 156;
       break L1;
      }
      $$idx1$val$i$i$i$i$i$i$i = HEAP32[$218 >> 2] | 0;
      $this$idx$val$i$i$i$i$i = HEAP32[$216 >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i$i$i$i = $673;
      $this$idx$val$i$i$i$i$i = $this$idx2$val$i$i$i$i$i;
     }
     $687 = $this$idx$val$i$i$i$i$i;
     $688 = $$idx1$val$i$i$i$i$i$i$i - $687 | 0;
     if ($688 >> 2 >>> 0 < 536870911) {
      $694 = $688 >> 1;
      $696 = $694 >>> 0 < $682 >>> 0 ? $682 : $694;
      $699 = (HEAP32[$217 >> 2] | 0) - $687 >> 2;
      if (!$696) {
       $$0$i8$i$i$i$i$i = 0;
       $706 = 0;
       $707 = $699;
      } else {
       $$0$i7$i$i$i$i$i = $696;
       $6309 = $699;
       label = 128;
      }
     } else {
      $$0$i7$i$i$i$i$i = 1073741823;
      $6309 = (HEAP32[$217 >> 2] | 0) - $687 >> 2;
      label = 128;
     }
     if ((label | 0) == 128) {
      label = 0;
      __THREW__ = 0;
      $702 = invoke_ii(67, $$0$i7$i$i$i$i$i << 2 | 0) | 0;
      $703 = __THREW__;
      __THREW__ = 0;
      if ($703 & 1) {
       label = 156;
       break L1;
      }
      $$0$i8$i$i$i$i$i = $$0$i7$i$i$i$i$i;
      $706 = $702;
      $707 = $6309;
     }
     $705 = $706 + ($707 << 2) | 0;
     if ($705) HEAP32[$705 >> 2] = $667;
     $710 = $706 + ($707 + 1 << 2) | 0;
     $711 = HEAP32[$216 >> 2] | 0;
     $715 = (HEAP32[$217 >> 2] | 0) - $711 | 0;
     $717 = $706 + ($707 - ($715 >> 2) << 2) | 0;
     _memcpy($717 | 0, $711 | 0, $715 | 0) | 0;
     HEAP32[$216 >> 2] = $717;
     HEAP32[$217 >> 2] = $710;
     HEAP32[$218 >> 2] = $706 + ($$0$i8$i$i$i$i$i << 2);
     if (!$711) $$idx1$val$i$i$i = $710; else {
      __ZdlPv($711);
      $$idx1$val$i$i$i = HEAP32[$217 >> 2] | 0;
     }
    }
    HEAP8[$667 + 4 >> 0] = HEAP8[$219 >> 0] | 0;
    HEAP32[$220 >> 2] = $$idx1$val$i$i$i - (HEAP32[$216 >> 2] | 0) >> 2;
    $727 = HEAP32[$2 >> 2] | 0;
    if ($727) {
     $729 = HEAP32[$214 >> 2] | 0;
     if (($729 | 0) != ($727 | 0)) HEAP32[$214 >> 2] = $729 + (~(($729 + -4 - $727 | 0) >>> 2) << 2);
     __ZdlPv($727);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$211 >> 2] | 0);
    $736 = HEAP32[$220 >> 2] | 0;
    if ($736 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($736 >>> 0) > +HEAPF64[$221 >> 3] * +((HEAP32[$222 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(61, $this | 0, $667 | 0);
     $745 = __THREW__;
     __THREW__ = 0;
     if ($745 & 1) {
      label = 167;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(62, $194 | 0, $this | 0);
     $747 = __THREW__;
     __THREW__ = 0;
     if ($747 & 1) {
      label = 167;
      break L1;
     }
     if (HEAP32[$223 >> 2] & 16) {
      __THREW__ = 0;
      invoke_vii(61, $this | 0, HEAP32[$201 >> 2] | 0);
      $753 = __THREW__;
      __THREW__ = 0;
      if ($753 & 1) {
       label = 167;
       break L1;
      }
     }
     $756 = (HEAP8[$219 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$219 >> 0] = $756;
     $$idx6$val11$i$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
     $$idx7$val12$i$i$i = HEAP32[$217 >> 2] | 0;
     L115 : do if (($$idx7$val12$i$i$i | 0) == ($$idx6$val11$i$i$i | 0)) $$lcssa$i$i$i = 0; else {
      $$idx6$val14$i$i$i = $$idx6$val11$i$i$i;
      $$idx7$val18$i$i$i = $$idx7$val12$i$i$i;
      $763 = $756;
      $i$013$i$i$i = 0;
      while (1) {
       $759 = HEAP32[$$idx6$val14$i$i$i + ($i$013$i$i$i << 2) >> 2] | 0;
       if ((HEAP8[$759 + 4 >> 0] | 0) == $763 << 24 >> 24) {
        $$idx6$val$i$i$i = $$idx6$val14$i$i$i;
        $$idx7$val$i$i$i = $$idx7$val18$i$i$i;
        $i$1$i$i$i = $i$013$i$i$i;
       } else {
        if (!$759) {
         $$idx4$val$i$i$i = $$idx6$val14$i$i$i;
         $$idx5$val$i$i$i = $$idx7$val18$i$i$i;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$759 >> 2] | 0) + 4 >> 2] & 255]($759);
         $$idx4$val$i$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $$idx5$val$i$i$i = HEAP32[$217 >> 2] | 0;
        }
        $772 = ($$idx5$val$i$i$i - $$idx4$val$i$i$i >> 2) + -1 | 0;
        if (($i$013$i$i$i | 0) == ($772 | 0)) {
         $$idx6$val$pre$i$i$i = $$idx4$val$i$i$i;
         $777 = $$idx5$val$i$i$i;
        } else {
         HEAP32[$$idx4$val$i$i$i + ($i$013$i$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i$i + ($772 << 2) >> 2];
         $$idx6$val$pre$i$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $777 = HEAP32[$217 >> 2] | 0;
        }
        $scevgep4$i$i$i$i8$i$i = $777 + -4 | 0;
        HEAP32[$217 >> 2] = $scevgep4$i$i$i$i8$i$i;
        $$idx6$val$i$i$i = $$idx6$val$pre$i$i$i;
        $$idx7$val$i$i$i = $scevgep4$i$i$i$i8$i$i;
        $i$1$i$i$i = $i$013$i$i$i + -1 | 0;
       }
       $779 = $i$1$i$i$i + 1 | 0;
       $783 = $$idx7$val$i$i$i - $$idx6$val$i$i$i >> 2;
       if ($779 >>> 0 >= $783 >>> 0) {
        $$lcssa$i$i$i = $783;
        break L115;
       }
       $$idx6$val14$i$i$i = $$idx6$val$i$i$i;
       $$idx7$val18$i$i$i = $$idx7$val$i$i$i;
       $763 = HEAP8[$219 >> 0] | 0;
       $i$013$i$i$i = $779;
      }
     } while (0);
     HEAP32[$220 >> 2] = $$lcssa$i$i$i;
     HEAP32[$222 >> 2] = $$lcssa$i$i$i;
    }
    $796 = HEAP32[$4 >> 2] | 0;
    if ($796) {
     $798 = HEAP32[$209 >> 2] | 0;
     if (($798 | 0) != ($796 | 0)) HEAP32[$209 >> 2] = $798 + (~(($798 + -4 - $796 | 0) >>> 2) << 2);
     __ZdlPv($796);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$206 >> 2] | 0);
    HEAP32[$223 >> 2] = 17;
    HEAP32[$201 >> 2] = $667;
    break;
   }
  case 13:
   {
    $1494 = +HEAPF64[$$010 + 48 >> 3];
    HEAP32[$223 >> 2] = 2;
    HEAPF64[$245 >> 3] = $1494;
    break;
   }
  case 11:
   {
    $1492 = HEAP8[$$010 + 48 >> 0] | 0;
    HEAP32[$223 >> 2] = 1;
    HEAP8[$201 >> 0] = $1492;
    HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32935 + 0 >> 0] | 0;
    HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32935 + 1 >> 0] | 0;
    HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32935 + 2 >> 0] | 0;
    HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32935 + 3 >> 0] | 0;
    HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32935 + 4 >> 0] | 0;
    HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32935 + 5 >> 0] | 0;
    HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32935 + 6 >> 0] | 0;
    break;
   }
  case 15:
   {
    if (!(HEAP32[$$010 + 56 >> 2] | 0)) {
     HEAP32[$247 >> 2] = 0;
     HEAP32[$248 >> 2] = 0;
     HEAP32[$env26 >> 2] = $249;
     HEAP32[$250 >> 2] = 0;
     HEAP32[$251 >> 2] = 0;
     HEAP32[$fields >> 2] = $252;
     HEAP32[$253 >> 2] = 0;
     HEAP32[$254 >> 2] = 0;
     HEAP32[$36 >> 2] = $255;
     HEAP32[$256 >> 2] = 0;
     HEAP32[$257 >> 2] = 0;
     HEAP32[$37 >> 2] = $258;
     __THREW__ = 0;
     invoke_viiii(19, $35 | 0, $this | 0, $36 | 0, $37 | 0);
     $1499 = __THREW__;
     __THREW__ = 0;
     if ($1499 & 1) {
      label = 450;
      break L1;
     };
     HEAP32[$200 + 0 >> 2] = HEAP32[$35 + 0 >> 2];
     HEAP32[$200 + 4 >> 2] = HEAP32[$35 + 4 >> 2];
     HEAP32[$200 + 8 >> 2] = HEAP32[$35 + 8 >> 2];
     HEAP32[$200 + 12 >> 2] = HEAP32[$35 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($37, HEAP32[$256 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($36, HEAP32[$253 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($fields, HEAP32[$250 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env26, HEAP32[$247 >> 2] | 0);
     break L3;
    }
    $$idx279$val = HEAP32[$$010 + 36 >> 2] | 0;
    $$idx280$val = HEAP32[$$010 + 40 >> 2] | 0;
    HEAP32[$259 >> 2] = 0;
    HEAP32[$260 >> 2] = 0;
    HEAP32[$env27 >> 2] = $261;
    if (($$idx279$val | 0) != ($$idx280$val | 0)) {
     $1511 = $$idx279$val;
     do {
      $1510 = HEAP32[$1511 >> 2] | 0;
      $$idx$val$i2590 = HEAP32[$$idx$i >> 2] | 0;
      $i$0$in$i2593 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i2590 | 0) / 144 | 0;
      do {
       $i$0$in$i2593 = $i$0$in$i2593 + -1 | 0;
       if (($i$0$in$i2593 | 0) <= -1) break;
       $1518 = HEAP32[$$idx$val$i2590 + ($i$0$in$i2593 * 144 | 0) + 132 >> 2] | 0;
       $1519 = $$idx$val$i2590 + ($i$0$in$i2593 * 144 | 0) + 132 | 0;
       if ($1518) {
        $$0$ph7$i$i$i$i2595 = $1519;
        $$01$ph6$i$in$i$i$i2596 = $1518;
        L150 : while (1) {
         $$013$i$in$i$i$i2598 = $$01$ph6$i$in$i$i$i2596;
         while (1) {
          if ((HEAP32[$$013$i$in$i$i$i2598 + 16 >> 2] | 0) >>> 0 >= $1510 >>> 0) break;
          $1525 = HEAP32[$$013$i$in$i$i$i2598 + 4 >> 2] | 0;
          if (!$1525) {
           $$0$ph5$i$i$i$i2603 = $$0$ph7$i$i$i$i2595;
           break L150;
          } else $$013$i$in$i$i$i2598 = $1525;
         }
         $$01$ph6$i$in$i$i$i2596 = HEAP32[$$013$i$in$i$i$i2598 >> 2] | 0;
         if (!$$01$ph6$i$in$i$i$i2596) {
          $$0$ph5$i$i$i$i2603 = $$013$i$in$i$i$i2598;
          break;
         } else $$0$ph7$i$i$i$i2595 = $$013$i$in$i$i$i2598;
        }
        if (($$0$ph5$i$i$i$i2603 | 0) != ($1519 | 0)) if ((HEAP32[$$0$ph5$i$i$i$i2603 + 16 >> 2] | 0) >>> 0 <= $1510 >>> 0) {
         label = 462;
         break;
        }
       }
      } while ((HEAP32[$$idx$val$i2590 + ($i$0$in$i2593 * 144 | 0) >> 2] | 0) != 5);
      if ((label | 0) == 462) {
       label = 0;
       $1531 = HEAP32[$$0$ph5$i$i$i$i2603 + 20 >> 2] | 0;
       if ($1531) {
        $1533 = HEAP32[$259 >> 2] | 0;
        do if (!$1533) {
         HEAP32[$0 >> 2] = $261;
         $$0$i$i2582 = $261;
         $1553 = $261;
        } else {
         $__nd$0$in$i$i2580 = $1533;
         while (1) {
          $1536 = HEAP32[$__nd$0$in$i$i2580 + 16 >> 2] | 0;
          if ($1510 >>> 0 < $1536 >>> 0) {
           $1538 = HEAP32[$__nd$0$in$i$i2580 >> 2] | 0;
           if (!$1538) {
            label = 466;
            break;
           } else {
            $__nd$0$in$i$i2580 = $1538;
            continue;
           }
          }
          if ($1536 >>> 0 >= $1510 >>> 0) {
           label = 470;
           break;
          }
          $1541 = $__nd$0$in$i$i2580 + 4 | 0;
          $1542 = HEAP32[$1541 >> 2] | 0;
          if (!$1542) {
           label = 469;
           break;
          } else $__nd$0$in$i$i2580 = $1542;
         }
         if ((label | 0) == 466) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i$i2580;
          $$0$i$i2582 = $__nd$0$in$i$i2580;
          $1553 = $__nd$0$in$i$i2580;
          break;
         } else if ((label | 0) == 469) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i$i2580;
          $$0$i$i2582 = $1541;
          $1553 = $__nd$0$in$i$i2580;
          break;
         } else if ((label | 0) == 470) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i$i2580;
          $$0$i$i2582 = $0;
          $1553 = $__nd$0$in$i$i2580;
          break;
         }
        } while (0);
        $1544 = HEAP32[$$0$i$i2582 >> 2] | 0;
        if (!$1544) {
         __THREW__ = 0;
         $1546 = invoke_ii(67, 24) | 0;
         $1547 = __THREW__;
         __THREW__ = 0;
         if ($1547 & 1) {
          label = 478;
          break L1;
         }
         HEAP32[$1546 + 16 >> 2] = $1510;
         HEAP32[$1546 + 20 >> 2] = 0;
         HEAP32[$1546 >> 2] = 0;
         HEAP32[$1546 + 4 >> 2] = 0;
         HEAP32[$1546 + 8 >> 2] = $1553;
         HEAP32[$$0$i$i2582 >> 2] = $1546;
         $1555 = HEAP32[HEAP32[$env27 >> 2] >> 2] | 0;
         if (!$1555) $1558 = $1546; else {
          HEAP32[$env27 >> 2] = $1555;
          $1558 = HEAP32[$$0$i$i2582 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$259 >> 2] | 0, $1558);
         HEAP32[$260 >> 2] = (HEAP32[$260 >> 2] | 0) + 1;
         $__r$0$i2586 = $1546;
        } else $__r$0$i2586 = $1544;
        HEAP32[$__r$0$i2586 + 20 >> 2] = $1531;
       }
      }
      $1511 = $1511 + 4 | 0;
     } while (($1511 | 0) != ($$idx280$val | 0));
    }
    __THREW__ = 0;
    invoke_viii(13, $194 | 0, 12, $$010 | 0);
    $1567 = __THREW__;
    __THREW__ = 0;
    if ($1567 & 1) {
     label = 482;
     break L1;
    }
    $1570 = HEAP32[$$010 + 52 >> 2] | 0;
    HEAP32[(HEAP32[$$idx1$i >> 2] | 0) + -72 >> 2] = $1570;
    $1573 = HEAP32[$1570 + 8 >> 2] | 0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env27, HEAP32[$259 >> 2] | 0);
    $$010 = $1573;
    continue L1;
    break;
   }
  case 14:
   {
    __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($34, $this, $$010 + 48 | 0);
    HEAP32[$200 + 0 >> 2] = HEAP32[$34 + 0 >> 2];
    HEAP32[$200 + 4 >> 2] = HEAP32[$34 + 4 >> 2];
    HEAP32[$200 + 8 >> 2] = HEAP32[$34 + 8 >> 2];
    HEAP32[$200 + 12 >> 2] = HEAP32[$34 + 12 >> 2];
    break;
   }
  case 12:
   {
    HEAP32[$223 >> 2] = 0;
    HEAP32[$246 + 0 >> 2] = HEAP32[$$sroa$22928 + 0 >> 2];
    HEAP32[$246 + 4 >> 2] = HEAP32[$$sroa$22928 + 4 >> 2];
    HEAP32[$246 + 8 >> 2] = HEAP32[$$sroa$22928 + 8 >> 2];
    break;
   }
  case 2:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($194, 1, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 0:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($194, 0, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 4:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($194, 8, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 5:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($194, 6, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 19:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($194, 16, $$010);
    $$010 = HEAP32[$$010 + 52 >> 2] | 0;
    continue L1;
    break;
   }
  case 20:
   {
    $1711 = $$010 + 48 | 0;
    $1712 = HEAP32[$1711 >> 2] | 0;
    $$idx$val$i686 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i689 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i686 | 0) / 144 | 0;
    while (1) {
     $i$0$in$i689 = $i$0$in$i689 + -1 | 0;
     if (($i$0$in$i689 | 0) <= -1) {
      label = 541;
      break L1;
     }
     $1719 = HEAP32[$$idx$val$i686 + ($i$0$in$i689 * 144 | 0) + 132 >> 2] | 0;
     $1720 = $$idx$val$i686 + ($i$0$in$i689 * 144 | 0) + 132 | 0;
     if ($1719) {
      $$0$ph7$i$i$i$i = $1720;
      $$01$ph6$i$in$i$i$i = $1719;
      L197 : while (1) {
       $$013$i$in$i$i$i = $$01$ph6$i$in$i$i$i;
       while (1) {
        if ((HEAP32[$$013$i$in$i$i$i + 16 >> 2] | 0) >>> 0 >= $1712 >>> 0) break;
        $1726 = HEAP32[$$013$i$in$i$i$i + 4 >> 2] | 0;
        if (!$1726) {
         $$0$ph5$i$i$i$i = $$0$ph7$i$i$i$i;
         break L197;
        } else $$013$i$in$i$i$i = $1726;
       }
       $$01$ph6$i$in$i$i$i = HEAP32[$$013$i$in$i$i$i >> 2] | 0;
       if (!$$01$ph6$i$in$i$i$i) {
        $$0$ph5$i$i$i$i = $$013$i$in$i$i$i;
        break;
       } else $$0$ph7$i$i$i$i = $$013$i$in$i$i$i;
      }
      if (($$0$ph5$i$i$i$i | 0) != ($1720 | 0)) if ((HEAP32[$$0$ph5$i$i$i$i + 16 >> 2] | 0) >>> 0 <= $1712 >>> 0) break;
     }
     if ((HEAP32[$$idx$val$i686 + ($i$0$in$i689 * 144 | 0) >> 2] | 0) == 5) {
      label = 541;
      break L1;
     }
    }
    $1732 = HEAP32[$$0$ph5$i$i$i$i + 20 >> 2] | 0;
    if (!$1732) {
     label = 541;
     break L1;
    }
    if (!(HEAP8[$1732 + 5 >> 0] | 0)) {
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($194, $$010 + 4 | 0, $1732, HEAP32[$1732 + 40 >> 2] | 0, HEAP32[$1732 + 44 >> 2] | 0, $1732 + 28 | 0);
     $$010 = HEAP32[$1732 + 48 >> 2] | 0;
     continue L1;
    } else {
     $1767 = $1732 + 8 | 0;
     HEAP32[$200 + 0 >> 2] = HEAP32[$1767 + 0 >> 2];
     HEAP32[$200 + 4 >> 2] = HEAP32[$1767 + 4 >> 2];
     HEAP32[$200 + 8 >> 2] = HEAP32[$1767 + 8 >> 2];
     HEAP32[$200 + 12 >> 2] = HEAP32[$1767 + 12 >> 2];
     break L3;
    }
    break;
   }
  case 16:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($194, 13, $$010);
    $$010 = HEAP32[$$010 + 60 >> 2] | 0;
    continue L1;
    break;
   }
  case 17:
   {
    HEAP32[$223 >> 2] = 18;
    $$idx$val$i618 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i621 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i618 | 0) / 144 | 0;
    while (1) {
     $i$0$in$i621 = $i$0$in$i621 + -1 | 0;
     if (($i$0$in$i621 | 0) <= -1) {
      $1588 = 0;
      break;
     }
     if ((HEAP32[$$idx$val$i618 + ($i$0$in$i621 * 144 | 0) >> 2] | 0) == 5) {
      label = 487;
      break;
     }
    }
    if ((label | 0) == 487) {
     label = 0;
     $1588 = HEAP32[$$idx$val$i618 + ($i$0$in$i621 * 144 | 0) + 120 >> 2] | 0;
    }
    HEAP32[$201 >> 2] = $1588;
    break;
   }
  case 18:
   {
    $$idx$val$i628 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i631 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i628 | 0) / 144 | 0;
    while (1) {
     $i$0$in$i631 = $i$0$in$i631 + -1 | 0;
     if (($i$0$in$i631 | 0) <= -1) {
      $1599 = 0;
      $1601 = 1;
      break;
     }
     if ((HEAP32[$$idx$val$i628 + ($i$0$in$i631 * 144 | 0) >> 2] | 0) == 5) {
      label = 492;
      break;
     }
    }
    if ((label | 0) == 492) {
     label = 0;
     $1599 = HEAP32[$$idx$val$i628 + ($i$0$in$i631 * 144 | 0) + 120 >> 2] | 0;
     $1601 = (HEAP32[$$idx$val$i628 + ($i$0$in$i631 * 144 | 0) + 124 >> 2] | 0) + 1 | 0;
    }
    if ($1601 >>> 0 >= (__ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE($1599) | 0) >>> 0) {
     label = 494;
     break L1;
    }
    $1615 = __Znwj(16) | 0;
    HEAP32[$1615 >> 2] = 40560;
    HEAP32[$1615 + 8 >> 2] = $1599;
    HEAP32[$1615 + 12 >> 2] = $1601;
    $1618 = HEAP32[$217 >> 2] | 0;
    $1619 = HEAP32[$218 >> 2] | 0;
    if ($1618 >>> 0 < $1619 >>> 0) {
     if (!$1618) $1623 = 0; else {
      HEAP32[$1618 >> 2] = $1615;
      $1623 = HEAP32[$217 >> 2] | 0;
     }
     $1622 = $1623 + 4 | 0;
     HEAP32[$217 >> 2] = $1622;
     $$idx1$val$i$i$i659 = $1622;
    } else {
     $this$idx2$val$i$i$i$i$i642 = HEAP32[$216 >> 2] | 0;
     $1628 = ($1618 - $this$idx2$val$i$i$i$i$i642 >> 2) + 1 | 0;
     if ($1628 >>> 0 > 1073741823) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($216);
      $$idx1$val$i$i$i$i$i$i$i645 = HEAP32[$218 >> 2] | 0;
      $this$idx$val$i$i$i$i$i646 = HEAP32[$216 >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i$i$i$i645 = $1619;
      $this$idx$val$i$i$i$i$i646 = $this$idx2$val$i$i$i$i$i642;
     }
     $1631 = $this$idx$val$i$i$i$i$i646;
     $1632 = $$idx1$val$i$i$i$i$i$i$i645 - $1631 | 0;
     if ($1632 >> 2 >>> 0 < 536870911) {
      $1638 = $1632 >> 1;
      $1640 = $1638 >>> 0 < $1628 >>> 0 ? $1628 : $1638;
      $1643 = (HEAP32[$217 >> 2] | 0) - $1631 >> 2;
      if (!$1640) {
       $$0$i8$i$i$i$i$i652 = 0;
       $1648 = 0;
       $1649 = $1643;
      } else {
       $$0$i7$i$i$i$i$i651 = $1640;
       $6313 = $1643;
       label = 509;
      }
     } else {
      $$0$i7$i$i$i$i$i651 = 1073741823;
      $6313 = (HEAP32[$217 >> 2] | 0) - $1631 >> 2;
      label = 509;
     }
     if ((label | 0) == 509) {
      label = 0;
      $$0$i8$i$i$i$i$i652 = $$0$i7$i$i$i$i$i651;
      $1648 = __Znwj($$0$i7$i$i$i$i$i651 << 2) | 0;
      $1649 = $6313;
     }
     $1647 = $1648 + ($1649 << 2) | 0;
     if ($1647) HEAP32[$1647 >> 2] = $1615;
     $1652 = $1648 + ($1649 + 1 << 2) | 0;
     $1653 = HEAP32[$216 >> 2] | 0;
     $1657 = (HEAP32[$217 >> 2] | 0) - $1653 | 0;
     $1659 = $1648 + ($1649 - ($1657 >> 2) << 2) | 0;
     _memcpy($1659 | 0, $1653 | 0, $1657 | 0) | 0;
     HEAP32[$216 >> 2] = $1659;
     HEAP32[$217 >> 2] = $1652;
     HEAP32[$218 >> 2] = $1648 + ($$0$i8$i$i$i$i$i652 << 2);
     if (!$1653) $$idx1$val$i$i$i659 = $1652; else {
      __ZdlPv($1653);
      $$idx1$val$i$i$i659 = HEAP32[$217 >> 2] | 0;
     }
    }
    HEAP8[$1615 + 4 >> 0] = HEAP8[$219 >> 0] | 0;
    $1666 = $$idx1$val$i$i$i659 - (HEAP32[$216 >> 2] | 0) >> 2;
    HEAP32[$220 >> 2] = $1666;
    if ($1666 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1666 >>> 0) > +HEAPF64[$221 >> 3] * +((HEAP32[$222 >> 2] | 0) >>> 0)) {
     __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $1615);
     __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($194, $this);
     if (HEAP32[$223 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$201 >> 2] | 0);
     $1680 = (HEAP8[$219 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$219 >> 0] = $1680;
     $$idx6$val11$i$i$i663 = HEAP32[$$idx6$i$i$i >> 2] | 0;
     $$idx7$val12$i$i$i664 = HEAP32[$217 >> 2] | 0;
     L253 : do if (($$idx7$val12$i$i$i664 | 0) == ($$idx6$val11$i$i$i663 | 0)) $$lcssa$i$i$i683 = 0; else {
      $$idx6$val14$i$i$i667 = $$idx6$val11$i$i$i663;
      $$idx7$val18$i$i$i666 = $$idx7$val12$i$i$i664;
      $1687 = $1680;
      $i$013$i$i$i668 = 0;
      while (1) {
       $1683 = HEAP32[$$idx6$val14$i$i$i667 + ($i$013$i$i$i668 << 2) >> 2] | 0;
       if ((HEAP8[$1683 + 4 >> 0] | 0) == $1687 << 24 >> 24) {
        $$idx6$val$i$i$i679 = $$idx6$val14$i$i$i667;
        $$idx7$val$i$i$i678 = $$idx7$val18$i$i$i666;
        $i$1$i$i$i680 = $i$013$i$i$i668;
       } else {
        if (!$1683) {
         $$idx4$val$i$i$i673 = $$idx6$val14$i$i$i667;
         $$idx5$val$i$i$i672 = $$idx7$val18$i$i$i666;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1683 >> 2] | 0) + 4 >> 2] & 255]($1683);
         $$idx4$val$i$i$i673 = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $$idx5$val$i$i$i672 = HEAP32[$217 >> 2] | 0;
        }
        $1696 = ($$idx5$val$i$i$i672 - $$idx4$val$i$i$i673 >> 2) + -1 | 0;
        if (($i$013$i$i$i668 | 0) == ($1696 | 0)) {
         $$idx6$val$pre$i$i$i676 = $$idx4$val$i$i$i673;
         $1701 = $$idx5$val$i$i$i672;
        } else {
         HEAP32[$$idx4$val$i$i$i673 + ($i$013$i$i$i668 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i673 + ($1696 << 2) >> 2];
         $$idx6$val$pre$i$i$i676 = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $1701 = HEAP32[$217 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i677 = $1701 + -4 | 0;
        HEAP32[$217 >> 2] = $scevgep4$i$i$i$i$i$i677;
        $$idx6$val$i$i$i679 = $$idx6$val$pre$i$i$i676;
        $$idx7$val$i$i$i678 = $scevgep4$i$i$i$i$i$i677;
        $i$1$i$i$i680 = $i$013$i$i$i668 + -1 | 0;
       }
       $1703 = $i$1$i$i$i680 + 1 | 0;
       $1707 = $$idx7$val$i$i$i678 - $$idx6$val$i$i$i679 >> 2;
       if ($1703 >>> 0 >= $1707 >>> 0) {
        $$lcssa$i$i$i683 = $1707;
        break L253;
       }
       $$idx6$val14$i$i$i667 = $$idx6$val$i$i$i679;
       $$idx7$val18$i$i$i666 = $$idx7$val$i$i$i678;
       $1687 = HEAP8[$219 >> 0] | 0;
       $i$013$i$i$i668 = $1703;
      }
     } while (0);
     HEAP32[$220 >> 2] = $$lcssa$i$i$i683;
     HEAP32[$222 >> 2] = $$lcssa$i$i$i683;
    }
    HEAP32[$223 >> 2] = 18;
    HEAP32[$262 >> 2] = 0;
    HEAP32[$201 >> 2] = $1615;
    HEAP32[$263 >> 2] = 0;
    break;
   }
  case 7:
   {
    $1245 = $$010 + 4 | 0;
    $1246 = $$010 + 48 | 0;
    $1247 = __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $1245, $1246) | 0;
    if (!(HEAP8[$1247 >> 0] & 1)) $1255 = $1247 + 1 | 0; else $1255 = HEAP32[$1247 + 8 >> 2] | 0;
    $1256 = __Z13jsonnet_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc(HEAP32[$237 >> 2] | 0, $1246, $1255) | 0;
    __Z23jsonnet_static_analysisP3AST($1256);
    HEAP32[$238 >> 2] = 0;
    HEAP32[$239 >> 2] = 0;
    HEAP32[$31 >> 2] = $240;
    __THREW__ = 0;
    invoke_viiiiii(19, $194 | 0, $1245 | 0, 0, 0, 0, $31 | 0);
    $1257 = __THREW__;
    __THREW__ = 0;
    if ($1257 & 1) {
     label = 360;
     break L1;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($31, HEAP32[$238 >> 2] | 0);
    $$010 = $1256;
    continue L1;
    break;
   }
  case 9:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($194, 9, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 8:
   {
    __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($32, $this, __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $$010 + 4 | 0, $$010 + 48 | 0) | 0);
    HEAP32[$200 + 0 >> 2] = HEAP32[$32 + 0 >> 2];
    HEAP32[$200 + 4 >> 2] = HEAP32[$32 + 4 >> 2];
    HEAP32[$200 + 8 >> 2] = HEAP32[$32 + 8 >> 2];
    HEAP32[$200 + 12 >> 2] = HEAP32[$32 + 12 >> 2];
    break;
   }
  case 10:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($194, 11, $$010);
    $$idx$val$i546 = HEAP32[$$idx1$i >> 2] | 0;
    $$idx$val$i548 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i551 = ($$idx$val$i546 - $$idx$val$i548 | 0) / 144 | 0;
    while (1) {
     $i$0$in$i551 = $i$0$in$i551 + -1 | 0;
     if (($i$0$in$i551 | 0) <= -1) {
      $1295 = 0;
      $1297 = 0;
      break;
     }
     if ((HEAP32[$$idx$val$i548 + ($i$0$in$i551 * 144 | 0) >> 2] | 0) == 5) {
      label = 366;
      break;
     }
    }
    if ((label | 0) == 366) {
     label = 0;
     $1295 = HEAP32[$$idx$val$i548 + ($i$0$in$i551 * 144 | 0) + 120 >> 2] | 0;
     $1297 = HEAP32[$$idx$val$i548 + ($i$0$in$i551 * 144 | 0) + 124 >> 2] | 0;
    }
    $1278 = $$010 + 48 | 0;
    $1279 = HEAP32[$1278 >> 2] | 0;
    $1280 = $$010 + 52 | 0;
    if (($1279 | 0) == ($1280 | 0)) $1401 = $1279; else {
     $1282 = $$idx$val$i546 + -16 | 0;
     $1284 = $1279;
     while (1) {
      $1283 = $1284 + 16 | 0;
      $1285 = HEAP32[$1283 >> 2] | 0;
      $1287 = HEAP32[$1284 + 20 >> 2] | 0;
      $1288 = __Znwj(56) | 0;
      HEAP32[$1288 >> 2] = 40312;
      HEAP8[$1288 + 5 >> 0] = 0;
      HEAP32[$1288 + 24 >> 2] = $1285;
      $1291 = $1288 + 32 | 0;
      HEAP32[$1291 >> 2] = 0;
      HEAP32[$1288 + 36 >> 2] = 0;
      HEAP32[$1288 + 28 >> 2] = $1291;
      HEAP32[$1288 + 40 >> 2] = $1295;
      HEAP32[$1288 + 44 >> 2] = $1297;
      HEAP32[$1288 + 48 >> 2] = $1287;
      $1299 = HEAP32[$217 >> 2] | 0;
      $1300 = HEAP32[$218 >> 2] | 0;
      if ($1299 >>> 0 < $1300 >>> 0) {
       if (!$1299) $1304 = 0; else {
        HEAP32[$1299 >> 2] = $1288;
        $1304 = HEAP32[$217 >> 2] | 0;
       }
       $1303 = $1304 + 4 | 0;
       HEAP32[$217 >> 2] = $1303;
       $$idx1$val$i$i = $1303;
      } else {
       $this$idx2$val$i$i$i$i = HEAP32[$216 >> 2] | 0;
       $1309 = ($1299 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
       if ($1309 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($216);
        $$idx1$val$i$i$i$i$i$i = HEAP32[$218 >> 2] | 0;
        $this$idx$val$i$i$i$i = HEAP32[$216 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i$i$i = $1300;
        $this$idx$val$i$i$i$i = $this$idx2$val$i$i$i$i;
       }
       $1312 = $this$idx$val$i$i$i$i;
       $1313 = $$idx1$val$i$i$i$i$i$i - $1312 | 0;
       if ($1313 >> 2 >>> 0 < 536870911) {
        $1319 = $1313 >> 1;
        $1321 = $1319 >>> 0 < $1309 >>> 0 ? $1309 : $1319;
        $1324 = (HEAP32[$217 >> 2] | 0) - $1312 >> 2;
        if (!$1321) {
         $$0$i8$i$i$i$i = 0;
         $1329 = 0;
         $1330 = $1324;
        } else {
         $$0$i7$i$i$i$i = $1321;
         $6312 = $1324;
         label = 378;
        }
       } else {
        $$0$i7$i$i$i$i = 1073741823;
        $6312 = (HEAP32[$217 >> 2] | 0) - $1312 >> 2;
        label = 378;
       }
       if ((label | 0) == 378) {
        label = 0;
        $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
        $1329 = __Znwj($$0$i7$i$i$i$i << 2) | 0;
        $1330 = $6312;
       }
       $1328 = $1329 + ($1330 << 2) | 0;
       if ($1328) HEAP32[$1328 >> 2] = $1288;
       $1333 = $1329 + ($1330 + 1 << 2) | 0;
       $1334 = HEAP32[$216 >> 2] | 0;
       $1338 = (HEAP32[$217 >> 2] | 0) - $1334 | 0;
       $1340 = $1329 + ($1330 - ($1338 >> 2) << 2) | 0;
       _memcpy($1340 | 0, $1334 | 0, $1338 | 0) | 0;
       HEAP32[$216 >> 2] = $1340;
       HEAP32[$217 >> 2] = $1333;
       HEAP32[$218 >> 2] = $1329 + ($$0$i8$i$i$i$i << 2);
       if (!$1334) $$idx1$val$i$i = $1333; else {
        __ZdlPv($1334);
        $$idx1$val$i$i = HEAP32[$217 >> 2] | 0;
       }
      }
      HEAP8[$1288 + 4 >> 0] = HEAP8[$219 >> 0] | 0;
      $1347 = $$idx1$val$i$i - (HEAP32[$216 >> 2] | 0) >> 2;
      HEAP32[$220 >> 2] = $1347;
      if ($1347 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1347 >>> 0) > +HEAPF64[$221 >> 3] * +((HEAP32[$222 >> 2] | 0) >>> 0)) {
       __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $1288);
       __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($194, $this);
       if (HEAP32[$223 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$201 >> 2] | 0);
       $1361 = (HEAP8[$219 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$219 >> 0] = $1361;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$217 >> 2] | 0;
       L313 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $$idx7$val18$i$i = $$idx7$val12$i$i;
        $1368 = $1361;
        $i$013$i$i = 0;
        while (1) {
         $1364 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$1364 + 4 >> 0] | 0) == $1368 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx7$val18$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$1364) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx7$val18$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1364 >> 2] | 0) + 4 >> 2] & 255]($1364);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$217 >> 2] | 0;
          }
          $1377 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($1377 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $1382 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($1377 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i$i >> 2] | 0;
           $1382 = HEAP32[$217 >> 2] | 0;
          }
          $scevgep4$i$i$i$i$i558 = $1382 + -4 | 0;
          HEAP32[$217 >> 2] = $scevgep4$i$i$i$i$i558;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i$i558;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $1384 = $i$1$i$i + 1 | 0;
         $1388 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($1384 >>> 0 >= $1388 >>> 0) {
          $$lcssa$i$i = $1388;
          break L313;
         }
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $$idx7$val18$i$i = $$idx7$val$i$i;
         $1368 = HEAP8[$219 >> 0] | 0;
         $i$013$i$i = $1384;
        }
       } while (0);
       HEAP32[$220 >> 2] = $$lcssa$i$i;
       HEAP32[$222 >> 2] = $$lcssa$i$i;
      }
      HEAP32[(__ZNSt3__13mapIPK10IdentifierPN12_GLOBAL__N_19HeapThunkENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($1282, $1283) | 0) >> 2] = $1288;
      $1392 = HEAP32[$1284 + 4 >> 2] | 0;
      if (!$1392) {
       $$0$i$i$i = $1284;
       while (1) {
        $1397 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$1397 >> 2] | 0) == ($$0$i$i$i | 0)) {
         $$01$i$i$i559 = $1397;
         break;
        } else $$0$i$i$i = $1397;
       }
      } else {
       $$0$i$i$i$i = $1392;
       while (1) {
        $1394 = HEAP32[$$0$i$i$i$i >> 2] | 0;
        if (!$1394) {
         $$01$i$i$i559 = $$0$i$i$i$i;
         break;
        } else $$0$i$i$i$i = $1394;
       }
      }
      if (($$01$i$i$i559 | 0) == ($1280 | 0)) break; else $1284 = $$01$i$i$i559;
     }
     $1401 = HEAP32[$1278 >> 2] | 0;
    }
    if (($1401 | 0) != ($1280 | 0)) {
     $1403 = $$idx$val$i546 + -16 | 0;
     $1405 = $1401;
     while (1) {
      $1407 = HEAP32[(__ZNSt3__13mapIPK10IdentifierPN12_GLOBAL__N_19HeapThunkENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($1403, $1405 + 16 | 0) | 0) >> 2] | 0;
      $1408 = $1407 + 28 | 0;
      $1410 = HEAP32[$1405 + 20 >> 2] | 0;
      $$idx281$val = HEAP32[$1410 + 36 >> 2] | 0;
      $$idx282$val = HEAP32[$1410 + 40 >> 2] | 0;
      HEAP32[$241 >> 2] = 0;
      HEAP32[$242 >> 2] = 0;
      HEAP32[$33 >> 2] = $243;
      if (($$idx281$val | 0) != ($$idx282$val | 0)) {
       $1413 = $$idx281$val;
       do {
        $1412 = HEAP32[$1413 >> 2] | 0;
        $$idx$val$i2556 = HEAP32[$$idx$i >> 2] | 0;
        $i$0$in$i2559 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i2556 | 0) / 144 | 0;
        do {
         $i$0$in$i2559 = $i$0$in$i2559 + -1 | 0;
         if (($i$0$in$i2559 | 0) <= -1) break;
         $1420 = HEAP32[$$idx$val$i2556 + ($i$0$in$i2559 * 144 | 0) + 132 >> 2] | 0;
         $1421 = $$idx$val$i2556 + ($i$0$in$i2559 * 144 | 0) + 132 | 0;
         if ($1420) {
          $$0$ph7$i$i$i$i2561 = $1421;
          $$01$ph6$i$in$i$i$i2562 = $1420;
          L348 : while (1) {
           $$013$i$in$i$i$i2564 = $$01$ph6$i$in$i$i$i2562;
           while (1) {
            if ((HEAP32[$$013$i$in$i$i$i2564 + 16 >> 2] | 0) >>> 0 >= $1412 >>> 0) break;
            $1427 = HEAP32[$$013$i$in$i$i$i2564 + 4 >> 2] | 0;
            if (!$1427) {
             $$0$ph5$i$i$i$i2569 = $$0$ph7$i$i$i$i2561;
             break L348;
            } else $$013$i$in$i$i$i2564 = $1427;
           }
           $$01$ph6$i$in$i$i$i2562 = HEAP32[$$013$i$in$i$i$i2564 >> 2] | 0;
           if (!$$01$ph6$i$in$i$i$i2562) {
            $$0$ph5$i$i$i$i2569 = $$013$i$in$i$i$i2564;
            break;
           } else $$0$ph7$i$i$i$i2561 = $$013$i$in$i$i$i2564;
          }
          if (($$0$ph5$i$i$i$i2569 | 0) != ($1421 | 0)) if ((HEAP32[$$0$ph5$i$i$i$i2569 + 16 >> 2] | 0) >>> 0 <= $1412 >>> 0) {
           label = 416;
           break;
          }
         }
        } while ((HEAP32[$$idx$val$i2556 + ($i$0$in$i2559 * 144 | 0) >> 2] | 0) != 5);
        if ((label | 0) == 416) {
         label = 0;
         $1433 = HEAP32[$$0$ph5$i$i$i$i2569 + 20 >> 2] | 0;
         if ($1433) {
          $1435 = HEAP32[$241 >> 2] | 0;
          do if (!$1435) {
           HEAP32[$0 >> 2] = $243;
           $$0$i$i2548 = $243;
           $1455 = $243;
          } else {
           $__nd$0$in$i$i2546 = $1435;
           while (1) {
            $1438 = HEAP32[$__nd$0$in$i$i2546 + 16 >> 2] | 0;
            if ($1412 >>> 0 < $1438 >>> 0) {
             $1440 = HEAP32[$__nd$0$in$i$i2546 >> 2] | 0;
             if (!$1440) {
              label = 420;
              break;
             } else {
              $__nd$0$in$i$i2546 = $1440;
              continue;
             }
            }
            if ($1438 >>> 0 >= $1412 >>> 0) {
             label = 424;
             break;
            }
            $1443 = $__nd$0$in$i$i2546 + 4 | 0;
            $1444 = HEAP32[$1443 >> 2] | 0;
            if (!$1444) {
             label = 423;
             break;
            } else $__nd$0$in$i$i2546 = $1444;
           }
           if ((label | 0) == 420) {
            label = 0;
            HEAP32[$0 >> 2] = $__nd$0$in$i$i2546;
            $$0$i$i2548 = $__nd$0$in$i$i2546;
            $1455 = $__nd$0$in$i$i2546;
            break;
           } else if ((label | 0) == 423) {
            label = 0;
            HEAP32[$0 >> 2] = $__nd$0$in$i$i2546;
            $$0$i$i2548 = $1443;
            $1455 = $__nd$0$in$i$i2546;
            break;
           } else if ((label | 0) == 424) {
            label = 0;
            HEAP32[$0 >> 2] = $__nd$0$in$i$i2546;
            $$0$i$i2548 = $0;
            $1455 = $__nd$0$in$i$i2546;
            break;
           }
          } while (0);
          $1446 = HEAP32[$$0$i$i2548 >> 2] | 0;
          if (!$1446) {
           __THREW__ = 0;
           $1448 = invoke_ii(67, 24) | 0;
           $1449 = __THREW__;
           __THREW__ = 0;
           if ($1449 & 1) {
            label = 432;
            break L1;
           }
           HEAP32[$1448 + 16 >> 2] = $1412;
           HEAP32[$1448 + 20 >> 2] = 0;
           HEAP32[$1448 >> 2] = 0;
           HEAP32[$1448 + 4 >> 2] = 0;
           HEAP32[$1448 + 8 >> 2] = $1455;
           HEAP32[$$0$i$i2548 >> 2] = $1448;
           $1457 = HEAP32[HEAP32[$33 >> 2] >> 2] | 0;
           if (!$1457) $1460 = $1448; else {
            HEAP32[$33 >> 2] = $1457;
            $1460 = HEAP32[$$0$i$i2548 >> 2] | 0;
           }
           __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$241 >> 2] | 0, $1460);
           HEAP32[$242 >> 2] = (HEAP32[$242 >> 2] | 0) + 1;
           $__r$0$i2552 = $1448;
          } else $__r$0$i2552 = $1446;
          HEAP32[$__r$0$i2552 + 20 >> 2] = $1433;
         }
        }
        $1413 = $1413 + 4 | 0;
       } while (($1413 | 0) != ($$idx282$val | 0));
      }
      $1469 = $1407 + 32 | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1408, HEAP32[$1469 >> 2] | 0);
      HEAP32[$1408 >> 2] = HEAP32[$33 >> 2];
      $1472 = HEAP32[$241 >> 2] | 0;
      HEAP32[$1407 + 32 >> 2] = $1472;
      $1474 = HEAP32[$242 >> 2] | 0;
      HEAP32[$1407 + 36 >> 2] = $1474;
      if (!$1474) {
       HEAP32[$1408 >> 2] = $1469;
       $1478 = HEAP32[$241 >> 2] | 0;
      } else {
       HEAP32[$1472 + 8 >> 2] = $1469;
       HEAP32[$33 >> 2] = $243;
       HEAP32[$243 >> 2] = 0;
       HEAP32[$242 >> 2] = 0;
       $1478 = 0;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($33, $1478);
      $1480 = HEAP32[$1405 + 4 >> 2] | 0;
      if (!$1480) {
       $$0$i$i$i567 = $1405;
       while (1) {
        $1485 = HEAP32[$$0$i$i$i567 + 8 >> 2] | 0;
        if ((HEAP32[$1485 >> 2] | 0) == ($$0$i$i$i567 | 0)) {
         $$01$i$i$i569 = $1485;
         break;
        } else $$0$i$i$i567 = $1485;
       }
      } else {
       $$0$i$i$i$i565 = $1480;
       while (1) {
        $1482 = HEAP32[$$0$i$i$i$i565 >> 2] | 0;
        if (!$1482) {
         $$01$i$i$i569 = $$0$i$i$i$i565;
         break;
        } else $$0$i$i$i$i565 = $1482;
       }
      }
      if (($$01$i$i$i569 | 0) == ($1280 | 0)) break; else $1405 = $$01$i$i$i569;
     }
    }
    $$010 = HEAP32[$$010 + 60 >> 2] | 0;
    continue L1;
    break;
   }
  case 1:
   {
    $$idx$val$i393 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i393 | 0) / 144 | 0;
    while (1) {
     $i$0$in$i = $i$0$in$i + -1 | 0;
     if (($i$0$in$i | 0) <= -1) {
      $408 = 0;
      $409 = 0;
      break;
     }
     if ((HEAP32[$$idx$val$i393 + ($i$0$in$i * 144 | 0) >> 2] | 0) == 5) {
      label = 7;
      break;
     }
    }
    if ((label | 0) == 7) {
     label = 0;
     $408 = HEAP32[$$idx$val$i393 + ($i$0$in$i * 144 | 0) + 120 >> 2] | 0;
     $409 = HEAP32[$$idx$val$i393 + ($i$0$in$i * 144 | 0) + 124 >> 2] | 0;
    }
    HEAP32[$29 >> 2] = 0;
    HEAP32[$198 >> 2] = 0;
    HEAP32[$199 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(12, $28 | 0, $this | 0, $29 | 0);
    $399 = __THREW__;
    __THREW__ = 0;
    if ($399 & 1) {
     label = 58;
     break L1;
    };
    HEAP32[$200 + 0 >> 2] = HEAP32[$28 + 0 >> 2];
    HEAP32[$200 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
    HEAP32[$200 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
    HEAP32[$200 + 12 >> 2] = HEAP32[$28 + 12 >> 2];
    $$pre = HEAP32[$201 >> 2] | 0;
    $$pre5761 = HEAP32[$$010 + 48 >> 2] | 0;
    $$pre5764 = HEAP32[$$010 + 52 >> 2] | 0;
    $401 = $$pre + 8 | 0;
    if (($$pre5761 | 0) != ($$pre5764 | 0)) {
     $403 = $$pre + 12 | 0;
     $404 = $$pre + 16 | 0;
     $406 = $$pre5761;
     do {
      $405 = HEAP32[$406 >> 2] | 0;
      $410 = __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_($this, HEAP32[$202 >> 2] | 0, $408, $409, $405) | 0;
      $411 = $410 + 28 | 0;
      $$idx285$val = HEAP32[$405 + 36 >> 2] | 0;
      $$idx286$val = HEAP32[$405 + 40 >> 2] | 0;
      HEAP32[$203 >> 2] = 0;
      HEAP32[$204 >> 2] = 0;
      HEAP32[$30 >> 2] = $205;
      if (($$idx285$val | 0) != ($$idx286$val | 0)) {
       $414 = $$idx285$val;
       do {
        $413 = HEAP32[$414 >> 2] | 0;
        $$idx$val$i2488 = HEAP32[$$idx$i >> 2] | 0;
        $i$0$in$i2491 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i2488 | 0) / 144 | 0;
        do {
         $i$0$in$i2491 = $i$0$in$i2491 + -1 | 0;
         if (($i$0$in$i2491 | 0) <= -1) break;
         $421 = HEAP32[$$idx$val$i2488 + ($i$0$in$i2491 * 144 | 0) + 132 >> 2] | 0;
         $422 = $$idx$val$i2488 + ($i$0$in$i2491 * 144 | 0) + 132 | 0;
         if ($421) {
          $$0$ph7$i$i$i$i2493 = $422;
          $$01$ph6$i$in$i$i$i2494 = $421;
          L412 : while (1) {
           $$013$i$in$i$i$i2496 = $$01$ph6$i$in$i$i$i2494;
           while (1) {
            if ((HEAP32[$$013$i$in$i$i$i2496 + 16 >> 2] | 0) >>> 0 >= $413 >>> 0) break;
            $428 = HEAP32[$$013$i$in$i$i$i2496 + 4 >> 2] | 0;
            if (!$428) {
             $$0$ph5$i$i$i$i2501 = $$0$ph7$i$i$i$i2493;
             break L412;
            } else $$013$i$in$i$i$i2496 = $428;
           }
           $$01$ph6$i$in$i$i$i2494 = HEAP32[$$013$i$in$i$i$i2496 >> 2] | 0;
           if (!$$01$ph6$i$in$i$i$i2494) {
            $$0$ph5$i$i$i$i2501 = $$013$i$in$i$i$i2496;
            break;
           } else $$0$ph7$i$i$i$i2493 = $$013$i$in$i$i$i2496;
          }
          if (($$0$ph5$i$i$i$i2501 | 0) != ($422 | 0)) if ((HEAP32[$$0$ph5$i$i$i$i2501 + 16 >> 2] | 0) >>> 0 <= $413 >>> 0) {
           label = 22;
           break;
          }
         }
        } while ((HEAP32[$$idx$val$i2488 + ($i$0$in$i2491 * 144 | 0) >> 2] | 0) != 5);
        if ((label | 0) == 22) {
         label = 0;
         $434 = HEAP32[$$0$ph5$i$i$i$i2501 + 20 >> 2] | 0;
         if ($434) {
          $436 = HEAP32[$203 >> 2] | 0;
          do if (!$436) {
           HEAP32[$0 >> 2] = $205;
           $$0$i$i2484 = $205;
           $456 = $205;
          } else {
           $__nd$0$in$i$i = $436;
           while (1) {
            $439 = HEAP32[$__nd$0$in$i$i + 16 >> 2] | 0;
            if ($413 >>> 0 < $439 >>> 0) {
             $441 = HEAP32[$__nd$0$in$i$i >> 2] | 0;
             if (!$441) {
              label = 26;
              break;
             } else {
              $__nd$0$in$i$i = $441;
              continue;
             }
            }
            if ($439 >>> 0 >= $413 >>> 0) {
             label = 30;
             break;
            }
            $444 = $__nd$0$in$i$i + 4 | 0;
            $445 = HEAP32[$444 >> 2] | 0;
            if (!$445) {
             label = 29;
             break;
            } else $__nd$0$in$i$i = $445;
           }
           if ((label | 0) == 26) {
            label = 0;
            HEAP32[$0 >> 2] = $__nd$0$in$i$i;
            $$0$i$i2484 = $__nd$0$in$i$i;
            $456 = $__nd$0$in$i$i;
            break;
           } else if ((label | 0) == 29) {
            label = 0;
            HEAP32[$0 >> 2] = $__nd$0$in$i$i;
            $$0$i$i2484 = $444;
            $456 = $__nd$0$in$i$i;
            break;
           } else if ((label | 0) == 30) {
            label = 0;
            HEAP32[$0 >> 2] = $__nd$0$in$i$i;
            $$0$i$i2484 = $0;
            $456 = $__nd$0$in$i$i;
            break;
           }
          } while (0);
          $447 = HEAP32[$$0$i$i2484 >> 2] | 0;
          if (!$447) {
           __THREW__ = 0;
           $449 = invoke_ii(67, 24) | 0;
           $450 = __THREW__;
           __THREW__ = 0;
           if ($450 & 1) {
            label = 38;
            break L1;
           }
           HEAP32[$449 + 16 >> 2] = $413;
           HEAP32[$449 + 20 >> 2] = 0;
           HEAP32[$449 >> 2] = 0;
           HEAP32[$449 + 4 >> 2] = 0;
           HEAP32[$449 + 8 >> 2] = $456;
           HEAP32[$$0$i$i2484 >> 2] = $449;
           $458 = HEAP32[HEAP32[$30 >> 2] >> 2] | 0;
           if (!$458) $461 = $449; else {
            HEAP32[$30 >> 2] = $458;
            $461 = HEAP32[$$0$i$i2484 >> 2] | 0;
           }
           __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$203 >> 2] | 0, $461);
           HEAP32[$204 >> 2] = (HEAP32[$204 >> 2] | 0) + 1;
           $__r$0$i = $449;
          } else $__r$0$i = $447;
          HEAP32[$__r$0$i + 20 >> 2] = $434;
         }
        }
        $414 = $414 + 4 | 0;
       } while (($414 | 0) != ($$idx286$val | 0));
      }
      $470 = $410 + 32 | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($411, HEAP32[$470 >> 2] | 0);
      HEAP32[$411 >> 2] = HEAP32[$30 >> 2];
      $473 = HEAP32[$203 >> 2] | 0;
      HEAP32[$410 + 32 >> 2] = $473;
      $475 = HEAP32[$204 >> 2] | 0;
      HEAP32[$410 + 36 >> 2] = $475;
      if (!$475) {
       HEAP32[$411 >> 2] = $470;
       $479 = HEAP32[$203 >> 2] | 0;
      } else {
       HEAP32[$473 + 8 >> 2] = $470;
       HEAP32[$30 >> 2] = $205;
       HEAP32[$205 >> 2] = 0;
       HEAP32[$204 >> 2] = 0;
       $479 = 0;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($30, $479);
      $480 = HEAP32[$403 >> 2] | 0;
      if (($480 | 0) == (HEAP32[$404 >> 2] | 0)) {
       $this$idx2$val$i$i = HEAP32[$401 >> 2] | 0;
       $490 = ($480 - $this$idx2$val$i$i >> 2) + 1 | 0;
       if ($490 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($401);
        $$idx1$val$i$i$i$i = HEAP32[$404 >> 2] | 0;
        $this$idx$val$i$i = HEAP32[$401 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i = $480;
        $this$idx$val$i$i = $this$idx2$val$i$i;
       }
       $493 = $this$idx$val$i$i;
       $494 = $$idx1$val$i$i$i$i - $493 | 0;
       if ($494 >> 2 >>> 0 < 536870911) {
        $500 = $494 >> 1;
        $502 = $500 >>> 0 < $490 >>> 0 ? $490 : $500;
        $505 = (HEAP32[$403 >> 2] | 0) - $493 >> 2;
        if (!$502) {
         $$0$i8$i$i = 0;
         $510 = 0;
         $511 = $505;
        } else {
         $$0$i7$i$i = $502;
         $6307 = $505;
         label = 52;
        }
       } else {
        $$0$i7$i$i = 1073741823;
        $6307 = (HEAP32[$403 >> 2] | 0) - $493 >> 2;
        label = 52;
       }
       if ((label | 0) == 52) {
        label = 0;
        $$0$i8$i$i = $$0$i7$i$i;
        $510 = __Znwj($$0$i7$i$i << 2) | 0;
        $511 = $6307;
       }
       $509 = $510 + ($511 << 2) | 0;
       if ($509) HEAP32[$509 >> 2] = $410;
       $515 = HEAP32[$401 >> 2] | 0;
       $519 = (HEAP32[$403 >> 2] | 0) - $515 | 0;
       $521 = $510 + ($511 - ($519 >> 2) << 2) | 0;
       _memcpy($521 | 0, $515 | 0, $519 | 0) | 0;
       HEAP32[$401 >> 2] = $521;
       HEAP32[$403 >> 2] = $510 + ($511 + 1 << 2);
       HEAP32[$404 >> 2] = $510 + ($$0$i8$i$i << 2);
       if ($515) __ZdlPv($515);
      } else {
       if (!$480) $485 = 0; else {
        HEAP32[$480 >> 2] = $410;
        $485 = HEAP32[$403 >> 2] | 0;
       }
       HEAP32[$403 >> 2] = $485 + 4;
      }
      $406 = $406 + 4 | 0;
     } while (($406 | 0) != ($$pre5764 | 0));
    }
    break;
   }
  case 6:
   {
    $$idx283$val = HEAP32[$$010 + 36 >> 2] | 0;
    $$idx284$val = HEAP32[$$010 + 40 >> 2] | 0;
    HEAP32[$224 >> 2] = 0;
    HEAP32[$225 >> 2] = 0;
    HEAP32[$env >> 2] = $226;
    if (($$idx283$val | 0) != ($$idx284$val | 0)) {
     $822 = $$idx283$val;
     do {
      $821 = HEAP32[$822 >> 2] | 0;
      $$idx$val$i2522 = HEAP32[$$idx$i >> 2] | 0;
      $i$0$in$i2525 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i2522 | 0) / 144 | 0;
      do {
       $i$0$in$i2525 = $i$0$in$i2525 + -1 | 0;
       if (($i$0$in$i2525 | 0) <= -1) break;
       $829 = HEAP32[$$idx$val$i2522 + ($i$0$in$i2525 * 144 | 0) + 132 >> 2] | 0;
       $830 = $$idx$val$i2522 + ($i$0$in$i2525 * 144 | 0) + 132 | 0;
       if ($829) {
        $$0$ph7$i$i$i$i2527 = $830;
        $$01$ph6$i$in$i$i$i2528 = $829;
        L478 : while (1) {
         $$013$i$in$i$i$i2530 = $$01$ph6$i$in$i$i$i2528;
         while (1) {
          if ((HEAP32[$$013$i$in$i$i$i2530 + 16 >> 2] | 0) >>> 0 >= $821 >>> 0) break;
          $836 = HEAP32[$$013$i$in$i$i$i2530 + 4 >> 2] | 0;
          if (!$836) {
           $$0$ph5$i$i$i$i2535 = $$0$ph7$i$i$i$i2527;
           break L478;
          } else $$013$i$in$i$i$i2530 = $836;
         }
         $$01$ph6$i$in$i$i$i2528 = HEAP32[$$013$i$in$i$i$i2530 >> 2] | 0;
         if (!$$01$ph6$i$in$i$i$i2528) {
          $$0$ph5$i$i$i$i2535 = $$013$i$in$i$i$i2530;
          break;
         } else $$0$ph7$i$i$i$i2527 = $$013$i$in$i$i$i2530;
        }
        if (($$0$ph5$i$i$i$i2535 | 0) != ($830 | 0)) if ((HEAP32[$$0$ph5$i$i$i$i2535 + 16 >> 2] | 0) >>> 0 <= $821 >>> 0) {
         label = 187;
         break;
        }
       }
      } while ((HEAP32[$$idx$val$i2522 + ($i$0$in$i2525 * 144 | 0) >> 2] | 0) != 5);
      if ((label | 0) == 187) {
       label = 0;
       $842 = HEAP32[$$0$ph5$i$i$i$i2535 + 20 >> 2] | 0;
       if ($842) {
        $844 = HEAP32[$224 >> 2] | 0;
        do if (!$844) {
         HEAP32[$0 >> 2] = $226;
         $$0$i$i2514 = $226;
         $864 = $226;
        } else {
         $__nd$0$in$i$i2512 = $844;
         while (1) {
          $847 = HEAP32[$__nd$0$in$i$i2512 + 16 >> 2] | 0;
          if ($821 >>> 0 < $847 >>> 0) {
           $849 = HEAP32[$__nd$0$in$i$i2512 >> 2] | 0;
           if (!$849) {
            label = 191;
            break;
           } else {
            $__nd$0$in$i$i2512 = $849;
            continue;
           }
          }
          if ($847 >>> 0 >= $821 >>> 0) {
           label = 195;
           break;
          }
          $852 = $__nd$0$in$i$i2512 + 4 | 0;
          $853 = HEAP32[$852 >> 2] | 0;
          if (!$853) {
           label = 194;
           break;
          } else $__nd$0$in$i$i2512 = $853;
         }
         if ((label | 0) == 191) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i$i2512;
          $$0$i$i2514 = $__nd$0$in$i$i2512;
          $864 = $__nd$0$in$i$i2512;
          break;
         } else if ((label | 0) == 194) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i$i2512;
          $$0$i$i2514 = $852;
          $864 = $__nd$0$in$i$i2512;
          break;
         } else if ((label | 0) == 195) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i$i2512;
          $$0$i$i2514 = $0;
          $864 = $__nd$0$in$i$i2512;
          break;
         }
        } while (0);
        $855 = HEAP32[$$0$i$i2514 >> 2] | 0;
        if (!$855) {
         __THREW__ = 0;
         $857 = invoke_ii(67, 24) | 0;
         $858 = __THREW__;
         __THREW__ = 0;
         if ($858 & 1) {
          label = 203;
          break L1;
         }
         HEAP32[$857 + 16 >> 2] = $821;
         HEAP32[$857 + 20 >> 2] = 0;
         HEAP32[$857 >> 2] = 0;
         HEAP32[$857 + 4 >> 2] = 0;
         HEAP32[$857 + 8 >> 2] = $864;
         HEAP32[$$0$i$i2514 >> 2] = $857;
         $866 = HEAP32[HEAP32[$env >> 2] >> 2] | 0;
         if (!$866) $869 = $857; else {
          HEAP32[$env >> 2] = $866;
          $869 = HEAP32[$$0$i$i2514 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$224 >> 2] | 0, $869);
         HEAP32[$225 >> 2] = (HEAP32[$225 >> 2] | 0) + 1;
         $__r$0$i2518 = $857;
        } else $__r$0$i2518 = $855;
        HEAP32[$__r$0$i2518 + 20 >> 2] = $842;
       }
      }
      $822 = $822 + 4 | 0;
     } while (($822 | 0) != ($$idx284$val | 0));
    }
    $$idx$val$i408 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i411 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i408 | 0) / 144 | 0;
    while (1) {
     $i$0$in$i411 = $i$0$in$i411 + -1 | 0;
     if (($i$0$in$i411 | 0) <= -1) {
      $1095 = 0;
      $1096 = 0;
      break;
     }
     if ((HEAP32[$$idx$val$i408 + ($i$0$in$i411 * 144 | 0) >> 2] | 0) == 5) {
      label = 208;
      break;
     }
    }
    if ((label | 0) == 208) {
     label = 0;
     $1095 = HEAP32[$$idx$val$i408 + ($i$0$in$i411 * 144 | 0) + 120 >> 2] | 0;
     $1096 = HEAP32[$$idx$val$i408 + ($i$0$in$i411 * 144 | 0) + 124 >> 2] | 0;
    }
    $888 = $$010 + 48 | 0;
    $890 = HEAP32[$$010 + 60 >> 2] | 0;
    HEAP32[$227 >> 2] = 0;
    HEAP32[$228 >> 2] = 0;
    HEAP32[$26 >> 2] = $229;
    $$idx$val$i$i$i418 = HEAP32[$env >> 2] | 0;
    if (($$idx$val$i$i$i418 | 0) != ($226 | 0)) {
     $$idx$val$i15$i$i$i = $$idx$val$i$i$i418;
     while (1) {
      __THREW__ = 0;
      $892 = invoke_ii(67, 24) | 0;
      $893 = __THREW__;
      __THREW__ = 0;
      if ($893 & 1) {
       label = 239;
       break L1;
      }
      $897 = $$idx$val$i15$i$i$i + 16 | 0;
      $899 = HEAP32[$897 >> 2] | 0;
      $902 = HEAP32[$897 + 4 >> 2] | 0;
      $903 = $892 + 16 | 0;
      HEAP32[$903 >> 2] = $899;
      HEAP32[$903 + 4 >> 2] = $902;
      $907 = $899;
      $$pre$i$i$i$i$i$i$i = HEAP32[$229 >> 2] | 0;
      do if ((HEAP32[$26 >> 2] | 0) == ($229 | 0)) {
       $920 = $229;
       label = 216;
      } else {
       $909 = ($$pre$i$i$i$i$i$i$i | 0) == 0;
       if ($909) {
        $$0$i$i$i$i$i$i$i$i$i = $229;
        while (1) {
         $914 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$914 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i = $914; else {
          $$01$i$i$i$i$i$i$i$i$i = $914;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i421 = $$pre$i$i$i$i$i$i$i;
        while (1) {
         $911 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i421 + 4 >> 2] | 0;
         if (!$911) {
          $$01$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i421;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i421 = $911;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $907 >>> 0) {
        $920 = $$01$i$i$i$i$i$i$i$i$i;
        label = 216;
       } else {
        if ($909) {
         HEAP32[$0 >> 2] = $229;
         $$0$i$i$i$i1$i$i$i = $229;
         $934 = $229;
         break;
        } else $__nd$0$in$i21$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i23$i$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i + 16 >> 2] | 0;
         if ($907 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i$i >>> 0) {
          $924 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i >> 2] | 0;
          if (!$924) {
           label = 222;
           break;
          } else {
           $__nd$0$in$i21$i$i$i$i$i$i$i = $924;
           continue;
          }
         }
         if ($$idx2$val$i23$i$i$i$i$i$i$i >>> 0 >= $907 >>> 0) {
          label = 226;
          break;
         }
         $927 = $__nd$0$in$i21$i$i$i$i$i$i$i + 4 | 0;
         $928 = HEAP32[$927 >> 2] | 0;
         if (!$928) {
          label = 225;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i$i = $928;
        }
        if ((label | 0) == 222) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i = $__nd$0$in$i21$i$i$i$i$i$i$i;
         $934 = $__nd$0$in$i21$i$i$i$i$i$i$i;
         break;
        } else if ((label | 0) == 225) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i = $927;
         $934 = $__nd$0$in$i21$i$i$i$i$i$i$i;
         break;
        } else if ((label | 0) == 226) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i = $0;
         $934 = $__nd$0$in$i21$i$i$i$i$i$i$i;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 216) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i) {
        HEAP32[$0 >> 2] = $229;
        $$0$i$i$i$i1$i$i$i = $229;
        $934 = $229;
        break;
       } else {
        HEAP32[$0 >> 2] = $920;
        $$0$i$i$i$i1$i$i$i = $920 + 4 | 0;
        $934 = $920;
        break;
       }
      } while (0);
      $930 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
      if (!$930) {
       HEAP32[$892 >> 2] = 0;
       HEAP32[$892 + 4 >> 2] = 0;
       HEAP32[$892 + 8 >> 2] = $934;
       HEAP32[$$0$i$i$i$i1$i$i$i >> 2] = $892;
       $936 = HEAP32[HEAP32[$26 >> 2] >> 2] | 0;
       if (!$936) $939 = $892; else {
        HEAP32[$26 >> 2] = $936;
        $939 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$227 >> 2] | 0, $939);
       HEAP32[$228 >> 2] = (HEAP32[$228 >> 2] | 0) + 1;
      } else if (!(($930 | 0) == ($892 | 0) | ($892 | 0) == 0)) __ZdlPv($892);
      $945 = HEAP32[$$idx$val$i15$i$i$i + 4 >> 2] | 0;
      if (!$945) {
       $$0$i$i$i$i$i$i = $$idx$val$i15$i$i$i;
       while (1) {
        $950 = HEAP32[$$0$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$950 >> 2] | 0) == ($$0$i$i$i$i$i$i | 0)) {
         $$01$i$i$i$i$i$i = $950;
         break;
        } else $$0$i$i$i$i$i$i = $950;
       }
      } else {
       $$0$i$i$i$i$i$i$i422 = $945;
       while (1) {
        $947 = HEAP32[$$0$i$i$i$i$i$i$i422 >> 2] | 0;
        if (!$947) {
         $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i422;
         break;
        } else $$0$i$i$i$i$i$i$i422 = $947;
       }
      }
      if (($$01$i$i$i$i$i$i | 0) == ($226 | 0)) break; else $$idx$val$i15$i$i$i = $$01$i$i$i$i$i$i;
     }
    }
    HEAP32[$27 >> 2] = 0;
    HEAP32[$230 >> 2] = 0;
    HEAP32[$231 >> 2] = 0;
    $957 = $$010 + 52 | 0;
    $962 = (HEAP32[$957 >> 2] | 0) - (HEAP32[$888 >> 2] | 0) | 0;
    $963 = $962 >> 2;
    if (!$963) $6310 = 0; else {
     if ($963 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(181, $27 | 0);
      $966 = __THREW__;
      __THREW__ = 0;
      if ($966 & 1) {
       label = 248;
       break L1;
      }
     }
     __THREW__ = 0;
     $968 = invoke_ii(67, $962 | 0) | 0;
     $969 = __THREW__;
     __THREW__ = 0;
     if ($969 & 1) {
      label = 248;
      break L1;
     }
     HEAP32[$230 >> 2] = $968;
     HEAP32[$27 >> 2] = $968;
     HEAP32[$231 >> 2] = $968 + ($963 << 2);
     $972 = HEAP32[$888 >> 2] | 0;
     $973 = HEAP32[$957 >> 2] | 0;
     if (($972 | 0) == ($973 | 0)) $6310 = $968; else {
      $$01$i$i$i424 = $972;
      $975 = $968;
      while (1) {
       if (!$975) $979 = 0; else {
        HEAP32[$975 >> 2] = HEAP32[$$01$i$i$i424 >> 2];
        $979 = HEAP32[$230 >> 2] | 0;
       }
       $978 = $979 + 4 | 0;
       HEAP32[$230 >> 2] = $978;
       $$01$i$i$i424 = $$01$i$i$i424 + 4 | 0;
       if (($$01$i$i$i424 | 0) == ($973 | 0)) {
        $6310 = $978;
        break;
       } else $975 = $978;
      }
     }
    }
    HEAP32[$232 >> 2] = 0;
    HEAP32[$233 >> 2] = 0;
    HEAP32[$24 >> 2] = $234;
    $$idx$val$i$i$i$i432 = HEAP32[$26 >> 2] | 0;
    if (($$idx$val$i$i$i$i432 | 0) == ($229 | 0)) $1059 = $6310; else {
     $$idx$val$i15$i$i$i$i436 = $$idx$val$i$i$i$i432;
     while (1) {
      __THREW__ = 0;
      $993 = invoke_ii(67, 24) | 0;
      $994 = __THREW__;
      __THREW__ = 0;
      if ($994 & 1) {
       label = 282;
       break L1;
      }
      $998 = $$idx$val$i15$i$i$i$i436 + 16 | 0;
      $1000 = HEAP32[$998 >> 2] | 0;
      $1003 = HEAP32[$998 + 4 >> 2] | 0;
      $1004 = $993 + 16 | 0;
      HEAP32[$1004 >> 2] = $1000;
      HEAP32[$1004 + 4 >> 2] = $1003;
      $1008 = $1000;
      $$pre$i$i$i$i$i$i$i$i438 = HEAP32[$234 >> 2] | 0;
      do if ((HEAP32[$24 >> 2] | 0) == ($234 | 0)) {
       $1021 = $234;
       label = 259;
      } else {
       $1010 = ($$pre$i$i$i$i$i$i$i$i438 | 0) == 0;
       if ($1010) {
        $$0$i$i$i$i$i$i$i$i$i4$i = $234;
        while (1) {
         $1015 = HEAP32[$$0$i$i$i$i$i$i$i$i$i4$i + 8 >> 2] | 0;
         if ((HEAP32[$1015 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i4$i | 0)) $$0$i$i$i$i$i$i$i$i$i4$i = $1015; else {
          $$01$i$i$i$i$i$i$i$i$i$i443 = $1015;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i440 = $$pre$i$i$i$i$i$i$i$i438;
        while (1) {
         $1012 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i440 + 4 >> 2] | 0;
         if (!$1012) {
          $$01$i$i$i$i$i$i$i$i$i$i443 = $$0$i$i$i$i$i$i$i$i$i$i$i440;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i440 = $1012;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i443 + 16 >> 2] | 0) >>> 0 < $1008 >>> 0) {
        $1021 = $$01$i$i$i$i$i$i$i$i$i$i443;
        label = 259;
       } else {
        if ($1010) {
         HEAP32[$0 >> 2] = $234;
         $$0$i$i$i$i1$i$i$i$i452 = $234;
         $1035 = $234;
         break;
        } else $__nd$0$in$i21$i$i$i$i$i$i$i$i448 = $$pre$i$i$i$i$i$i$i$i438;
        while (1) {
         $$idx2$val$i23$i$i$i$i$i$i$i$i450 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i448 + 16 >> 2] | 0;
         if ($1008 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i$i$i450 >>> 0) {
          $1025 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i448 >> 2] | 0;
          if (!$1025) {
           label = 265;
           break;
          } else {
           $__nd$0$in$i21$i$i$i$i$i$i$i$i448 = $1025;
           continue;
          }
         }
         if ($$idx2$val$i23$i$i$i$i$i$i$i$i450 >>> 0 >= $1008 >>> 0) {
          label = 269;
          break;
         }
         $1028 = $__nd$0$in$i21$i$i$i$i$i$i$i$i448 + 4 | 0;
         $1029 = HEAP32[$1028 >> 2] | 0;
         if (!$1029) {
          label = 268;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i$i$i448 = $1029;
        }
        if ((label | 0) == 265) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i448;
         $$0$i$i$i$i1$i$i$i$i452 = $__nd$0$in$i21$i$i$i$i$i$i$i$i448;
         $1035 = $__nd$0$in$i21$i$i$i$i$i$i$i$i448;
         break;
        } else if ((label | 0) == 268) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i448;
         $$0$i$i$i$i1$i$i$i$i452 = $1028;
         $1035 = $__nd$0$in$i21$i$i$i$i$i$i$i$i448;
         break;
        } else if ((label | 0) == 269) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i448;
         $$0$i$i$i$i1$i$i$i$i452 = $0;
         $1035 = $__nd$0$in$i21$i$i$i$i$i$i$i$i448;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 259) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i438) {
        HEAP32[$0 >> 2] = $234;
        $$0$i$i$i$i1$i$i$i$i452 = $234;
        $1035 = $234;
        break;
       } else {
        HEAP32[$0 >> 2] = $1021;
        $$0$i$i$i$i1$i$i$i$i452 = $1021 + 4 | 0;
        $1035 = $1021;
        break;
       }
      } while (0);
      $1031 = HEAP32[$$0$i$i$i$i1$i$i$i$i452 >> 2] | 0;
      if (!$1031) {
       HEAP32[$993 >> 2] = 0;
       HEAP32[$993 + 4 >> 2] = 0;
       HEAP32[$993 + 8 >> 2] = $1035;
       HEAP32[$$0$i$i$i$i1$i$i$i$i452 >> 2] = $993;
       $1037 = HEAP32[HEAP32[$24 >> 2] >> 2] | 0;
       if (!$1037) $1040 = $993; else {
        HEAP32[$24 >> 2] = $1037;
        $1040 = HEAP32[$$0$i$i$i$i1$i$i$i$i452 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$232 >> 2] | 0, $1040);
       HEAP32[$233 >> 2] = (HEAP32[$233 >> 2] | 0) + 1;
      } else if (!(($1031 | 0) == ($993 | 0) | ($993 | 0) == 0)) __ZdlPv($993);
      $1046 = HEAP32[$$idx$val$i15$i$i$i$i436 + 4 >> 2] | 0;
      if (!$1046) {
       $$0$i$i$i$i$i$i5$i = $$idx$val$i15$i$i$i$i436;
       while (1) {
        $1051 = HEAP32[$$0$i$i$i$i$i$i5$i + 8 >> 2] | 0;
        if ((HEAP32[$1051 >> 2] | 0) == ($$0$i$i$i$i$i$i5$i | 0)) {
         $$01$i$i$i$i$i$i$i463 = $1051;
         break;
        } else $$0$i$i$i$i$i$i5$i = $1051;
       }
      } else {
       $$0$i$i$i$i$i$i$i$i460 = $1046;
       while (1) {
        $1048 = HEAP32[$$0$i$i$i$i$i$i$i$i460 >> 2] | 0;
        if (!$1048) {
         $$01$i$i$i$i$i$i$i463 = $$0$i$i$i$i$i$i$i$i460;
         break;
        } else $$0$i$i$i$i$i$i$i$i460 = $1048;
       }
      }
      if (($$01$i$i$i$i$i$i$i463 | 0) == ($229 | 0)) break; else $$idx$val$i15$i$i$i$i436 = $$01$i$i$i$i$i$i$i463;
     }
     $1059 = HEAP32[$230 >> 2] | 0;
    }
    HEAP32[$25 >> 2] = 0;
    HEAP32[$235 >> 2] = 0;
    HEAP32[$236 >> 2] = 0;
    $1062 = $1059 - (HEAP32[$27 >> 2] | 0) | 0;
    $1063 = $1062 >> 2;
    if ($1063) {
     if ($1063 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(181, $25 | 0);
      $1066 = __THREW__;
      __THREW__ = 0;
      if ($1066 & 1) {
       label = 292;
       break L1;
      }
     }
     __THREW__ = 0;
     $1068 = invoke_ii(67, $1062 | 0) | 0;
     $1069 = __THREW__;
     __THREW__ = 0;
     if ($1069 & 1) {
      label = 292;
      break L1;
     }
     HEAP32[$235 >> 2] = $1068;
     HEAP32[$25 >> 2] = $1068;
     HEAP32[$236 >> 2] = $1068 + ($1063 << 2);
     $1072 = HEAP32[$27 >> 2] | 0;
     $1073 = HEAP32[$230 >> 2] | 0;
     if (($1072 | 0) != ($1073 | 0)) {
      $$01$i$i$i$i469 = $1072;
      $1075 = $1068;
      do {
       if (!$1075) $1079 = 0; else {
        HEAP32[$1075 >> 2] = HEAP32[$$01$i$i$i$i469 >> 2];
        $1079 = HEAP32[$235 >> 2] | 0;
       }
       $1075 = $1079 + 4 | 0;
       HEAP32[$235 >> 2] = $1075;
       $$01$i$i$i$i469 = $$01$i$i$i$i469 + 4 | 0;
      } while (($$01$i$i$i$i469 | 0) != ($1073 | 0));
     }
    }
    __THREW__ = 0;
    $1092 = invoke_ii(67, 48) | 0;
    $1093 = __THREW__;
    __THREW__ = 0;
    if ($1093 & 1) {
     label = 336;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiiiiii(40, $1092 | 0, $24 | 0, $1095 | 0, $1096 | 0, $25 | 0, $890 | 0, 0);
    $1097 = __THREW__;
    __THREW__ = 0;
    if ($1097 & 1) {
     label = 314;
     break L1;
    }
    $1099 = HEAP32[$217 >> 2] | 0;
    $1100 = HEAP32[$218 >> 2] | 0;
    if ($1099 >>> 0 < $1100 >>> 0) {
     if (!$1099) $1104 = 0; else {
      HEAP32[$1099 >> 2] = $1092;
      $1104 = HEAP32[$217 >> 2] | 0;
     }
     $1103 = $1104 + 4 | 0;
     HEAP32[$217 >> 2] = $1103;
     $$idx1$val$i$i$i502 = $1103;
    } else {
     $this$idx2$val$i$i$i$i$i483 = HEAP32[$216 >> 2] | 0;
     $1109 = ($1099 - $this$idx2$val$i$i$i$i$i483 >> 2) + 1 | 0;
     if ($1109 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(181, $216 | 0);
      $1111 = __THREW__;
      __THREW__ = 0;
      if ($1111 & 1) {
       label = 336;
       break L1;
      }
      $$idx1$val$i$i$i$i$i$i$i487 = HEAP32[$218 >> 2] | 0;
      $this$idx$val$i$i$i$i$i488 = HEAP32[$216 >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i$i$i$i487 = $1100;
      $this$idx$val$i$i$i$i$i488 = $this$idx2$val$i$i$i$i$i483;
     }
     $1114 = $this$idx$val$i$i$i$i$i488;
     $1115 = $$idx1$val$i$i$i$i$i$i$i487 - $1114 | 0;
     if ($1115 >> 2 >>> 0 < 536870911) {
      $1121 = $1115 >> 1;
      $1123 = $1121 >>> 0 < $1109 >>> 0 ? $1109 : $1121;
      $1126 = (HEAP32[$217 >> 2] | 0) - $1114 >> 2;
      if (!$1123) {
       $$0$i8$i$i$i$i$i495 = 0;
       $1133 = 0;
       $1134 = $1126;
      } else {
       $$0$i7$i$i$i$i$i493 = $1123;
       $6311 = $1126;
       label = 308;
      }
     } else {
      $$0$i7$i$i$i$i$i493 = 1073741823;
      $6311 = (HEAP32[$217 >> 2] | 0) - $1114 >> 2;
      label = 308;
     }
     if ((label | 0) == 308) {
      label = 0;
      __THREW__ = 0;
      $1129 = invoke_ii(67, $$0$i7$i$i$i$i$i493 << 2 | 0) | 0;
      $1130 = __THREW__;
      __THREW__ = 0;
      if ($1130 & 1) {
       label = 336;
       break L1;
      }
      $$0$i8$i$i$i$i$i495 = $$0$i7$i$i$i$i$i493;
      $1133 = $1129;
      $1134 = $6311;
     }
     $1132 = $1133 + ($1134 << 2) | 0;
     if ($1132) HEAP32[$1132 >> 2] = $1092;
     $1137 = $1133 + ($1134 + 1 << 2) | 0;
     $1138 = HEAP32[$216 >> 2] | 0;
     $1142 = (HEAP32[$217 >> 2] | 0) - $1138 | 0;
     $1144 = $1133 + ($1134 - ($1142 >> 2) << 2) | 0;
     _memcpy($1144 | 0, $1138 | 0, $1142 | 0) | 0;
     HEAP32[$216 >> 2] = $1144;
     HEAP32[$217 >> 2] = $1137;
     HEAP32[$218 >> 2] = $1133 + ($$0$i8$i$i$i$i$i495 << 2);
     if (!$1138) $$idx1$val$i$i$i502 = $1137; else {
      __ZdlPv($1138);
      $$idx1$val$i$i$i502 = HEAP32[$217 >> 2] | 0;
     }
    }
    HEAP8[$1092 + 4 >> 0] = HEAP8[$219 >> 0] | 0;
    HEAP32[$220 >> 2] = $$idx1$val$i$i$i502 - (HEAP32[$216 >> 2] | 0) >> 2;
    $1154 = HEAP32[$25 >> 2] | 0;
    if ($1154) {
     $1156 = HEAP32[$235 >> 2] | 0;
     if (($1156 | 0) != ($1154 | 0)) HEAP32[$235 >> 2] = $1156 + (~(($1156 + -4 - $1154 | 0) >>> 2) << 2);
     __ZdlPv($1154);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($24, HEAP32[$232 >> 2] | 0);
    $1163 = HEAP32[$220 >> 2] | 0;
    if ($1163 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1163 >>> 0) > +HEAPF64[$221 >> 3] * +((HEAP32[$222 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(61, $this | 0, $1092 | 0);
     $1172 = __THREW__;
     __THREW__ = 0;
     if ($1172 & 1) {
      label = 347;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(62, $194 | 0, $this | 0);
     $1174 = __THREW__;
     __THREW__ = 0;
     if ($1174 & 1) {
      label = 347;
      break L1;
     }
     if (HEAP32[$223 >> 2] & 16) {
      __THREW__ = 0;
      invoke_vii(61, $this | 0, HEAP32[$201 >> 2] | 0);
      $1180 = __THREW__;
      __THREW__ = 0;
      if ($1180 & 1) {
       label = 347;
       break L1;
      }
     }
     $1183 = (HEAP8[$219 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$219 >> 0] = $1183;
     $$idx6$val11$i$i$i506 = HEAP32[$$idx6$i$i$i >> 2] | 0;
     $$idx7$val12$i$i$i507 = HEAP32[$217 >> 2] | 0;
     L675 : do if (($$idx7$val12$i$i$i507 | 0) == ($$idx6$val11$i$i$i506 | 0)) $$lcssa$i$i$i525 = 0; else {
      $$idx6$val14$i$i$i510 = $$idx6$val11$i$i$i506;
      $$idx7$val18$i$i$i509 = $$idx7$val12$i$i$i507;
      $1190 = $1183;
      $i$013$i$i$i511 = 0;
      while (1) {
       $1186 = HEAP32[$$idx6$val14$i$i$i510 + ($i$013$i$i$i511 << 2) >> 2] | 0;
       if ((HEAP8[$1186 + 4 >> 0] | 0) == $1190 << 24 >> 24) {
        $$idx6$val$i$i$i521 = $$idx6$val14$i$i$i510;
        $$idx7$val$i$i$i520 = $$idx7$val18$i$i$i509;
        $i$1$i$i$i522 = $i$013$i$i$i511;
       } else {
        if (!$1186) {
         $$idx4$val$i$i$i515 = $$idx6$val14$i$i$i510;
         $$idx5$val$i$i$i514 = $$idx7$val18$i$i$i509;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1186 >> 2] | 0) + 4 >> 2] & 255]($1186);
         $$idx4$val$i$i$i515 = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $$idx5$val$i$i$i514 = HEAP32[$217 >> 2] | 0;
        }
        $1199 = ($$idx5$val$i$i$i514 - $$idx4$val$i$i$i515 >> 2) + -1 | 0;
        if (($i$013$i$i$i511 | 0) == ($1199 | 0)) {
         $$idx6$val$pre$i$i$i518 = $$idx4$val$i$i$i515;
         $1204 = $$idx5$val$i$i$i514;
        } else {
         HEAP32[$$idx4$val$i$i$i515 + ($i$013$i$i$i511 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i515 + ($1199 << 2) >> 2];
         $$idx6$val$pre$i$i$i518 = HEAP32[$$idx6$i$i$i >> 2] | 0;
         $1204 = HEAP32[$217 >> 2] | 0;
        }
        $scevgep4$i$i$i$i8$i$i519 = $1204 + -4 | 0;
        HEAP32[$217 >> 2] = $scevgep4$i$i$i$i8$i$i519;
        $$idx6$val$i$i$i521 = $$idx6$val$pre$i$i$i518;
        $$idx7$val$i$i$i520 = $scevgep4$i$i$i$i8$i$i519;
        $i$1$i$i$i522 = $i$013$i$i$i511 + -1 | 0;
       }
       $1206 = $i$1$i$i$i522 + 1 | 0;
       $1210 = $$idx7$val$i$i$i520 - $$idx6$val$i$i$i521 >> 2;
       if ($1206 >>> 0 >= $1210 >>> 0) {
        $$lcssa$i$i$i525 = $1210;
        break L675;
       }
       $$idx6$val14$i$i$i510 = $$idx6$val$i$i$i521;
       $$idx7$val18$i$i$i509 = $$idx7$val$i$i$i520;
       $1190 = HEAP8[$219 >> 0] | 0;
       $i$013$i$i$i511 = $1206;
      }
     } while (0);
     HEAP32[$220 >> 2] = $$lcssa$i$i$i525;
     HEAP32[$222 >> 2] = $$lcssa$i$i$i525;
    }
    $1223 = HEAP32[$27 >> 2] | 0;
    if ($1223) {
     $1225 = HEAP32[$230 >> 2] | 0;
     if (($1225 | 0) != ($1223 | 0)) HEAP32[$230 >> 2] = $1225 + (~(($1225 + -4 - $1223 | 0) >>> 2) << 2);
     __ZdlPv($1223);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($26, HEAP32[$227 >> 2] | 0);
    HEAP32[$223 >> 2] = 17;
    HEAP32[$201 >> 2] = $1092;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env, HEAP32[$224 >> 2] | 0);
    break;
   }
  default:
   {
    label = 551;
    break L1;
   }
  } while (0);
  $$idx$val$i69533964193 = HEAP32[$$idx$i >> 2] | 0;
  $$idx1$val$i69733974194 = HEAP32[$$idx1$i >> 2] | 0;
  if (($$idx1$val$i69733974194 - $$idx$val$i69533964193 | 0) >>> 0 > $197 >>> 0) {
   $$111$ph4195 = $$010;
   $$idx$val$i7115768 = $$idx$val$i69533964193;
   $$idx1$val$i69733974196 = $$idx1$val$i69733974194;
  } else {
   label = 2493;
   break;
  }
  L697 : while (1) {
   $$idx$val$i7115767 = $$idx$val$i7115768;
   $$idx$val$i839 = $$idx1$val$i69733974196;
   L699 : while (1) {
    $1798 = $$idx$val$i839 + -144 | 0;
    switch (HEAP32[$1798 >> 2] | 0) {
    case 0:
     {
      label = 558;
      break L699;
      break;
     }
    case 1:
     {
      label = 736;
      break L699;
      break;
     }
    case 2:
     break;
    case 3:
     {
      label = 996;
      break L699;
      break;
     }
    case 4:
     {
      label = 1059;
      break L699;
      break;
     }
    case 7:
     {
      label = 1943;
      break L699;
      break;
     }
    case 5:
     {
      label = 1940;
      break L699;
      break;
     }
    case 6:
     {
      label = 1944;
      break L1;
      break;
     }
    case 8:
     {
      label = 1959;
      break L697;
      break;
     }
    case 10:
     {
      label = 1975;
      break L699;
      break;
     }
    case 9:
     {
      label = 2082;
      break L697;
      break;
     }
    case 12:
     {
      label = 2095;
      break L699;
      break;
     }
    case 13:
     {
      label = 2231;
      break L699;
      break;
     }
    case 14:
     {
      label = 2245;
      break L699;
      break;
     }
    case 15:
     {
      label = 2396;
      break L699;
      break;
     }
    case 16:
     {
      label = 2439;
      break L699;
      break;
     }
    case 11:
     {
      $$414 = $$111$ph4195;
      label = 2491;
      break L699;
      break;
     }
    default:
     {
      label = 2487;
      break L1;
     }
    }
    $2283 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
    $2284 = $$idx$val$i839 + -104 | 0;
    $2285 = HEAP32[$2284 >> 2] | 0;
    if (($2285 | 0) == 19) label = 746; else if ((HEAP32[$200 >> 2] | 0) == 19) label = 746; else {
     $2392 = HEAP32[$2283 + 52 >> 2] | 0;
     label = 748;
    }
    if ((label | 0) == 746) {
     label = 0;
     $2290 = HEAP32[$2283 + 52 >> 2] | 0;
     if (($2290 | 0) == 2) {
      HEAP32[$1798 >> 2] = 15;
      $2292 = $$idx$val$i839 + -88 | 0;
      HEAP32[$2292 + 0 >> 2] = HEAP32[$200 + 0 >> 2];
      HEAP32[$2292 + 4 >> 2] = HEAP32[$200 + 4 >> 2];
      HEAP32[$2292 + 8 >> 2] = HEAP32[$200 + 8 >> 2];
      HEAP32[$2292 + 12 >> 2] = HEAP32[$200 + 12 >> 2];
     } else {
      $2392 = $2290;
      label = 748;
     }
    }
    if ((label | 0) == 748) {
     label = 0;
     $2293 = $2283 + 52 | 0;
     if (($2392 | 0) == 11) {
      label = 751;
      break L1;
     } else if (($2392 | 0) != 10) {
      label = 755;
      break;
     }
     HEAP32[$1798 >> 2] = 7;
     $2294 = $$idx$val$i839 + -88 | 0;
     HEAP32[$2294 + 0 >> 2] = HEAP32[$200 + 0 >> 2];
     HEAP32[$2294 + 4 >> 2] = HEAP32[$200 + 4 >> 2];
     HEAP32[$2294 + 8 >> 2] = HEAP32[$200 + 8 >> 2];
     HEAP32[$2294 + 12 >> 2] = HEAP32[$200 + 12 >> 2];
    }
    $$idx$val$i695 = HEAP32[$$idx$i >> 2] | 0;
    $$idx1$val$i697 = HEAP32[$$idx1$i >> 2] | 0;
    if (($$idx1$val$i697 - $$idx$val$i695 | 0) >>> 0 > $197 >>> 0) {
     $$idx$val$i7115767 = $$idx$val$i695;
     $$idx$val$i839 = $$idx1$val$i697;
    } else {
     label = 2493;
     break L1;
    }
   }
   L712 : switch (label | 0) {
   case 558:
    {
     label = 0;
     $1800 = $$idx$val$i839 + -140 | 0;
     $1801 = HEAP32[$1800 >> 2] | 0;
     if ((HEAP32[$200 >> 2] | 0) != 17) {
      label = 559;
      break L1;
     }
     $1821 = HEAP32[$201 >> 2] | 0;
     $1822 = $1801 + 52 | 0;
     $1823 = $1801 + 56 | 0;
     $1824 = HEAP32[$1823 >> 2] | 0;
     $1825 = HEAP32[$1822 >> 2] | 0;
     $1829 = $1821 + 28 | 0;
     $1830 = $1829 + 4 | 0;
     if (($1824 - $1825 | 0) != ((HEAP32[$1830 >> 2] | 0) - (HEAP32[$1829 >> 2] | 0) | 0)) {
      label = 571;
      break L1;
     }
     L716 : do if (($1824 | 0) == ($1825 | 0)) $__x$idx1$i$pre$phiZZZ2D = $$idx$val$i839 + -36 | 0; else {
      $1838 = $$idx$val$i839 + -40 | 0;
      $1839 = $$idx$val$i839 + -36 | 0;
      $1840 = $$idx$val$i839 + -32 | 0;
      $$idx1$val$i713 = $$idx$val$i839;
      $$idx2$val$i718 = $$idx$val$i7115767;
      $1905 = $1825;
      $i$03320 = 0;
      while (1) {
       $1906 = HEAP32[$1905 + ($i$03320 << 2) >> 2] | 0;
       $i$0$in$i714 = ($$idx1$val$i713 - $$idx2$val$i718 | 0) / 144 | 0;
       while (1) {
        $i$0$in$i714 = $i$0$in$i714 + -1 | 0;
        if (($i$0$in$i714 | 0) <= -1) {
         $1920 = 0;
         $1921 = 0;
         break;
        }
        if ((HEAP32[$$idx2$val$i718 + ($i$0$in$i714 * 144 | 0) >> 2] | 0) == 5) {
         label = 595;
         break;
        }
       }
       if ((label | 0) == 595) {
        label = 0;
        $1920 = HEAP32[$$idx2$val$i718 + ($i$0$in$i714 * 144 | 0) + 120 >> 2] | 0;
        $1921 = HEAP32[$$idx2$val$i718 + ($i$0$in$i714 * 144 | 0) + 124 >> 2] | 0;
       }
       $1922 = __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_($this, HEAP32[(HEAP32[$1829 >> 2] | 0) + ($i$03320 << 2) >> 2] | 0, $1920, $1921, $1906) | 0;
       $1923 = $1922 + 28 | 0;
       $$idx277$val = HEAP32[$1906 + 36 >> 2] | 0;
       $$idx278$val = HEAP32[$1906 + 40 >> 2] | 0;
       HEAP32[$269 >> 2] = 0;
       HEAP32[$270 >> 2] = 0;
       HEAP32[$42 >> 2] = $271;
       if (($$idx277$val | 0) != ($$idx278$val | 0)) {
        $1926 = $$idx277$val;
        do {
         $1925 = HEAP32[$1926 >> 2] | 0;
         $$idx$val$i2624 = HEAP32[$$idx$i >> 2] | 0;
         $i$0$in$i2627 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i2624 | 0) / 144 | 0;
         do {
          $i$0$in$i2627 = $i$0$in$i2627 + -1 | 0;
          if (($i$0$in$i2627 | 0) <= -1) break;
          $1933 = HEAP32[$$idx$val$i2624 + ($i$0$in$i2627 * 144 | 0) + 132 >> 2] | 0;
          $1934 = $$idx$val$i2624 + ($i$0$in$i2627 * 144 | 0) + 132 | 0;
          if ($1933) {
           $$0$ph7$i$i$i$i2629 = $1934;
           $$01$ph6$i$in$i$i$i2630 = $1933;
           L734 : while (1) {
            $$013$i$in$i$i$i2632 = $$01$ph6$i$in$i$i$i2630;
            while (1) {
             if ((HEAP32[$$013$i$in$i$i$i2632 + 16 >> 2] | 0) >>> 0 >= $1925 >>> 0) break;
             $1940 = HEAP32[$$013$i$in$i$i$i2632 + 4 >> 2] | 0;
             if (!$1940) {
              $$0$ph5$i$i$i$i2637 = $$0$ph7$i$i$i$i2629;
              break L734;
             } else $$013$i$in$i$i$i2632 = $1940;
            }
            $$01$ph6$i$in$i$i$i2630 = HEAP32[$$013$i$in$i$i$i2632 >> 2] | 0;
            if (!$$01$ph6$i$in$i$i$i2630) {
             $$0$ph5$i$i$i$i2637 = $$013$i$in$i$i$i2632;
             break;
            } else $$0$ph7$i$i$i$i2629 = $$013$i$in$i$i$i2632;
           }
           if (($$0$ph5$i$i$i$i2637 | 0) != ($1934 | 0)) if ((HEAP32[$$0$ph5$i$i$i$i2637 + 16 >> 2] | 0) >>> 0 <= $1925 >>> 0) {
            label = 607;
            break;
           }
          }
         } while ((HEAP32[$$idx$val$i2624 + ($i$0$in$i2627 * 144 | 0) >> 2] | 0) != 5);
         if ((label | 0) == 607) {
          label = 0;
          $1946 = HEAP32[$$0$ph5$i$i$i$i2637 + 20 >> 2] | 0;
          if ($1946) {
           $1948 = HEAP32[$269 >> 2] | 0;
           do if (!$1948) {
            HEAP32[$0 >> 2] = $271;
            $$0$i$i2616 = $271;
            $1968 = $271;
           } else {
            $__nd$0$in$i$i2614 = $1948;
            while (1) {
             $1951 = HEAP32[$__nd$0$in$i$i2614 + 16 >> 2] | 0;
             if ($1925 >>> 0 < $1951 >>> 0) {
              $1953 = HEAP32[$__nd$0$in$i$i2614 >> 2] | 0;
              if (!$1953) {
               label = 611;
               break;
              } else {
               $__nd$0$in$i$i2614 = $1953;
               continue;
              }
             }
             if ($1951 >>> 0 >= $1925 >>> 0) {
              label = 615;
              break;
             }
             $1956 = $__nd$0$in$i$i2614 + 4 | 0;
             $1957 = HEAP32[$1956 >> 2] | 0;
             if (!$1957) {
              label = 614;
              break;
             } else $__nd$0$in$i$i2614 = $1957;
            }
            if ((label | 0) == 611) {
             label = 0;
             HEAP32[$0 >> 2] = $__nd$0$in$i$i2614;
             $$0$i$i2616 = $__nd$0$in$i$i2614;
             $1968 = $__nd$0$in$i$i2614;
             break;
            } else if ((label | 0) == 614) {
             label = 0;
             HEAP32[$0 >> 2] = $__nd$0$in$i$i2614;
             $$0$i$i2616 = $1956;
             $1968 = $__nd$0$in$i$i2614;
             break;
            } else if ((label | 0) == 615) {
             label = 0;
             HEAP32[$0 >> 2] = $__nd$0$in$i$i2614;
             $$0$i$i2616 = $0;
             $1968 = $__nd$0$in$i$i2614;
             break;
            }
           } while (0);
           $1959 = HEAP32[$$0$i$i2616 >> 2] | 0;
           if (!$1959) {
            __THREW__ = 0;
            $1961 = invoke_ii(67, 24) | 0;
            $1962 = __THREW__;
            __THREW__ = 0;
            if ($1962 & 1) {
             label = 623;
             break L1;
            }
            HEAP32[$1961 + 16 >> 2] = $1925;
            HEAP32[$1961 + 20 >> 2] = 0;
            HEAP32[$1961 >> 2] = 0;
            HEAP32[$1961 + 4 >> 2] = 0;
            HEAP32[$1961 + 8 >> 2] = $1968;
            HEAP32[$$0$i$i2616 >> 2] = $1961;
            $1970 = HEAP32[HEAP32[$42 >> 2] >> 2] | 0;
            if (!$1970) $1973 = $1961; else {
             HEAP32[$42 >> 2] = $1970;
             $1973 = HEAP32[$$0$i$i2616 >> 2] | 0;
            }
            __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$269 >> 2] | 0, $1973);
            HEAP32[$270 >> 2] = (HEAP32[$270 >> 2] | 0) + 1;
            $__r$0$i2620 = $1961;
           } else $__r$0$i2620 = $1959;
           HEAP32[$__r$0$i2620 + 20 >> 2] = $1946;
          }
         }
         $1926 = $1926 + 4 | 0;
        } while (($1926 | 0) != ($$idx278$val | 0));
       }
       $1982 = $1922 + 32 | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1923, HEAP32[$1982 >> 2] | 0);
       HEAP32[$1923 >> 2] = HEAP32[$42 >> 2];
       $1985 = HEAP32[$269 >> 2] | 0;
       HEAP32[$1922 + 32 >> 2] = $1985;
       $1987 = HEAP32[$270 >> 2] | 0;
       HEAP32[$1922 + 36 >> 2] = $1987;
       if (!$1987) {
        HEAP32[$1923 >> 2] = $1982;
        $1991 = HEAP32[$269 >> 2] | 0;
       } else {
        HEAP32[$1985 + 8 >> 2] = $1982;
        HEAP32[$42 >> 2] = $271;
        HEAP32[$271 >> 2] = 0;
        HEAP32[$270 >> 2] = 0;
        $1991 = 0;
       }
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($42, $1991);
       $1992 = HEAP32[$1839 >> 2] | 0;
       if (($1992 | 0) == (HEAP32[$1840 >> 2] | 0)) {
        $this$idx2$val$i$i727 = HEAP32[$1838 >> 2] | 0;
        $2002 = ($1992 - $this$idx2$val$i$i727 >> 2) + 1 | 0;
        if ($2002 >>> 0 > 1073741823) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1838);
         $$idx1$val$i$i$i$i730 = HEAP32[$1840 >> 2] | 0;
         $this$idx$val$i$i731 = HEAP32[$1838 >> 2] | 0;
        } else {
         $$idx1$val$i$i$i$i730 = $1992;
         $this$idx$val$i$i731 = $this$idx2$val$i$i727;
        }
        $2005 = $this$idx$val$i$i731;
        $2006 = $$idx1$val$i$i$i$i730 - $2005 | 0;
        if ($2006 >> 2 >>> 0 < 536870911) {
         $2012 = $2006 >> 1;
         $2014 = $2012 >>> 0 < $2002 >>> 0 ? $2002 : $2012;
         $2017 = (HEAP32[$1839 >> 2] | 0) - $2005 >> 2;
         if (!$2014) {
          $$0$i8$i$i737 = 0;
          $2022 = 0;
          $2023 = $2017;
         } else {
          $$0$i7$i$i736 = $2014;
          $6314 = $2017;
          label = 637;
         }
        } else {
         $$0$i7$i$i736 = 1073741823;
         $6314 = (HEAP32[$1839 >> 2] | 0) - $2005 >> 2;
         label = 637;
        }
        if ((label | 0) == 637) {
         label = 0;
         $$0$i8$i$i737 = $$0$i7$i$i736;
         $2022 = __Znwj($$0$i7$i$i736 << 2) | 0;
         $2023 = $6314;
        }
        $2021 = $2022 + ($2023 << 2) | 0;
        if ($2021) HEAP32[$2021 >> 2] = $1922;
        $2027 = HEAP32[$1838 >> 2] | 0;
        $2031 = (HEAP32[$1839 >> 2] | 0) - $2027 | 0;
        $2033 = $2022 + ($2023 - ($2031 >> 2) << 2) | 0;
        _memcpy($2033 | 0, $2027 | 0, $2031 | 0) | 0;
        HEAP32[$1838 >> 2] = $2033;
        HEAP32[$1839 >> 2] = $2022 + ($2023 + 1 << 2);
        HEAP32[$1840 >> 2] = $2022 + ($$0$i8$i$i737 << 2);
        if ($2027) __ZdlPv($2027);
       } else {
        if (!$1992) $1997 = 0; else {
         HEAP32[$1992 >> 2] = $1922;
         $1997 = HEAP32[$1839 >> 2] | 0;
        }
        HEAP32[$1839 >> 2] = $1997 + 4;
       }
       $2035 = $i$03320 + 1 | 0;
       $2037 = HEAP32[$1822 >> 2] | 0;
       if ($2035 >>> 0 >= (HEAP32[$1823 >> 2] | 0) - $2037 >> 2 >>> 0) {
        $__x$idx1$i$pre$phiZZZ2D = $1839;
        break L716;
       }
       $$idx1$val$i713 = HEAP32[$$idx1$i >> 2] | 0;
       $$idx2$val$i718 = HEAP32[$$idx$i >> 2] | 0;
       $1905 = $2037;
       $i$03320 = $2035;
      }
     } while (0);
     HEAP32[$args >> 2] = 0;
     HEAP32[$264 >> 2] = 0;
     HEAP32[$265 >> 2] = 0;
     $__x$idx$i = $$idx$val$i839 + -40 | 0;
     $2045 = (HEAP32[$__x$idx1$i$pre$phiZZZ2D >> 2] | 0) - (HEAP32[$__x$idx$i >> 2] | 0) | 0;
     $2046 = $2045 >> 2;
     if ($2046) {
      if ($2046 >>> 0 > 1073741823) {
       __THREW__ = 0;
       invoke_vi(181, $args | 0);
       $2049 = __THREW__;
       __THREW__ = 0;
       if ($2049 & 1) {
        label = 652;
        break L1;
       }
      }
      __THREW__ = 0;
      $2051 = invoke_ii(67, $2045 | 0) | 0;
      $2052 = __THREW__;
      __THREW__ = 0;
      if ($2052 & 1) {
       label = 652;
       break L1;
      }
      HEAP32[$264 >> 2] = $2051;
      HEAP32[$args >> 2] = $2051;
      HEAP32[$265 >> 2] = $2051 + ($2046 << 2);
      $2055 = HEAP32[$__x$idx$i >> 2] | 0;
      $2056 = HEAP32[$__x$idx1$i$pre$phiZZZ2D >> 2] | 0;
      if (($2055 | 0) != ($2056 | 0)) {
       $$01$i$i745 = $2055;
       $2058 = $2051;
       do {
        if (!$2058) $2062 = 0; else {
         HEAP32[$2058 >> 2] = HEAP32[$$01$i$i745 >> 2];
         $2062 = HEAP32[$264 >> 2] | 0;
        }
        $2058 = $2062 + 4 | 0;
        HEAP32[$264 >> 2] = $2058;
        $$01$i$i745 = $$01$i$i745 + 4 | 0;
       } while (($$01$i$i745 | 0) != ($2056 | 0));
      }
     }
     __ZN12_GLOBAL__N_15Stack3popEv($194);
     $2075 = $1821 + 40 | 0;
     if (!(HEAP32[$2075 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_viii(13, $194 | 0, 4, HEAP32[$1800 >> 2] | 0);
      $2079 = __THREW__;
      __THREW__ = 0;
      if ($2079 & 1) {
       label = 685;
       break L1;
      }
      $$idx$val$i751 = HEAP32[$$idx1$i >> 2] | 0;
      $2081 = $$idx$val$i751 + -40 | 0;
      L809 : do if (($2081 | 0) != ($args | 0)) {
       $2083 = HEAP32[$args >> 2] | 0;
       $2084 = HEAP32[$264 >> 2] | 0;
       $2087 = $2084 - $2083 | 0;
       $2088 = $2087 >> 2;
       $$idx$val$i$i$i753 = HEAP32[$2081 >> 2] | 0;
       $$idx1$i$i$i = $$idx$val$i751 + -32 | 0;
       $$idx1$val$i$i$i754 = HEAP32[$$idx1$i$i$i >> 2] | 0;
       $2090 = $$idx$val$i$i$i753;
       if ($2088 >>> 0 <= $$idx1$val$i$i$i754 - $2090 >> 2 >>> 0) {
        $this$idx3$i$i = $$idx$val$i751 + -36 | 0;
        $2095 = (HEAP32[$this$idx3$i$i >> 2] | 0) - $2090 | 0;
        $2096 = $2095 >> 2;
        if ($2088 >>> 0 <= $2096 >>> 0) {
         _memmove($$idx$val$i$i$i753 | 0, $2083 | 0, $2087 | 0) | 0;
         $2107 = $$idx$val$i$i$i753 + ($2088 << 2) | 0;
         $2108 = HEAP32[$this$idx3$i$i >> 2] | 0;
         if (($2108 | 0) == ($2107 | 0)) break;
         HEAP32[$this$idx3$i$i >> 2] = $2108 + (~(($2108 + -4 - $2107 | 0) >>> 2) << 2);
         break;
        }
        $2098 = $2083 + ($2096 << 2) | 0;
        _memmove($$idx$val$i$i$i753 | 0, $2083 | 0, $2095 | 0) | 0;
        if (($2098 | 0) == ($2084 | 0)) break;
        $$01$i6$i$i = $2098;
        $2100 = HEAP32[$this$idx3$i$i >> 2] | 0;
        while (1) {
         if (!$2100) $2104 = 0; else {
          HEAP32[$2100 >> 2] = HEAP32[$$01$i6$i$i >> 2];
          $2104 = HEAP32[$this$idx3$i$i >> 2] | 0;
         }
         $2100 = $2104 + 4 | 0;
         HEAP32[$this$idx3$i$i >> 2] = $2100;
         $$01$i6$i$i = $$01$i6$i$i + 4 | 0;
         if (($$01$i6$i$i | 0) == ($2084 | 0)) break L809;
        }
       }
       if (!$$idx$val$i$i$i753) $$idx1$val$i$i16$i$i = $$idx1$val$i$i$i754; else {
        $2115 = $$idx$val$i751 + -36 | 0;
        $2116 = HEAP32[$2115 >> 2] | 0;
        if (($2116 | 0) != ($$idx$val$i$i$i753 | 0)) HEAP32[$2115 >> 2] = $2116 + (~(($2116 + -4 - $2090 | 0) >>> 2) << 2);
        __ZdlPv($$idx$val$i$i$i753);
        HEAP32[$$idx1$i$i$i >> 2] = 0;
        HEAP32[$2115 >> 2] = 0;
        HEAP32[$2081 >> 2] = 0;
        $$idx1$val$i$i16$i$i = 0;
       }
       if ($2088 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(181, $2081 | 0);
        $2123 = __THREW__;
        __THREW__ = 0;
        if ($2123 & 1) {
         label = 685;
         break L1;
        }
        $$idx$val$i$i$i$i764 = HEAP32[$2081 >> 2] | 0;
        $$idx1$val$i$i$i$i763 = HEAP32[$$idx1$i$i$i >> 2] | 0;
       } else {
        $$idx$val$i$i$i$i764 = 0;
        $$idx1$val$i$i$i$i763 = $$idx1$val$i$i16$i$i;
       }
       $2126 = $$idx1$val$i$i$i$i763 - $$idx$val$i$i$i$i764 | 0;
       if ($2126 >> 2 >>> 0 < 536870911) {
        $2129 = $2126 >> 1;
        $2131 = $2129 >>> 0 < $2088 >>> 0 ? $2088 : $2129;
        if ($2131 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(181, $2081 | 0);
         $2133 = __THREW__;
         __THREW__ = 0;
         if ($2133 & 1) {
          label = 685;
          break L1;
         } else $$0$i11$i$i = $2131;
        } else $$0$i11$i$i = $2131;
       } else $$0$i11$i$i = 1073741823;
       __THREW__ = 0;
       $2136 = invoke_ii(67, $$0$i11$i$i << 2 | 0) | 0;
       $2137 = __THREW__;
       __THREW__ = 0;
       if ($2137 & 1) {
        label = 685;
        break L1;
       }
       $2139 = $$idx$val$i751 + -36 | 0;
       HEAP32[$2139 >> 2] = $2136;
       HEAP32[$2081 >> 2] = $2136;
       HEAP32[$$idx1$i$i$i >> 2] = $2136 + ($$0$i11$i$i << 2);
       if (($2083 | 0) != ($2084 | 0)) {
        $$01$i$i$i766 = $2083;
        $2142 = $2136;
        do {
         if (!$2142) $2146 = 0; else {
          HEAP32[$2142 >> 2] = HEAP32[$$01$i$i$i766 >> 2];
          $2146 = HEAP32[$2139 >> 2] | 0;
         }
         $2142 = $2146 + 4 | 0;
         HEAP32[$2139 >> 2] = $2142;
         $$01$i$i$i766 = $$01$i$i$i766 + 4 | 0;
        } while (($$01$i$i$i766 | 0) != ($2084 | 0));
       }
      } while (0);
      $$idx$val$i772 = HEAP32[$$idx1$i >> 2] | 0;
      HEAP32[$$idx$val$i772 + -56 >> 2] = 0;
      $2150 = $$idx$val$i772 + -104 | 0;
      HEAP32[$2150 + 0 >> 2] = HEAP32[$200 + 0 >> 2];
      HEAP32[$2150 + 4 >> 2] = HEAP32[$200 + 4 >> 2];
      HEAP32[$2150 + 8 >> 2] = HEAP32[$200 + 8 >> 2];
      HEAP32[$2150 + 12 >> 2] = HEAP32[$200 + 12 >> 2];
      $$0135 = 1;
      $$212 = $$111$ph4195;
     } else {
      HEAP32[$266 >> 2] = 0;
      HEAP32[$267 >> 2] = 0;
      HEAP32[$bindings >> 2] = $268;
      $$idx$val$i$i777 = HEAP32[$1821 + 8 >> 2] | 0;
      $2154 = $1821 + 12 | 0;
      if (($$idx$val$i$i777 | 0) != ($2154 | 0)) {
       $$idx$val$i15$i$i780 = $$idx$val$i$i777;
       while (1) {
        __THREW__ = 0;
        $2156 = invoke_ii(67, 24) | 0;
        $2157 = __THREW__;
        __THREW__ = 0;
        if ($2157 & 1) {
         label = 718;
         break L1;
        }
        $2161 = $$idx$val$i15$i$i780 + 16 | 0;
        $2163 = HEAP32[$2161 >> 2] | 0;
        $2166 = HEAP32[$2161 + 4 >> 2] | 0;
        $2167 = $2156 + 16 | 0;
        HEAP32[$2167 >> 2] = $2163;
        HEAP32[$2167 + 4 >> 2] = $2166;
        $2171 = $2163;
        $$pre$i$i$i$i$i$i782 = HEAP32[$268 >> 2] | 0;
        do if ((HEAP32[$bindings >> 2] | 0) == ($268 | 0)) {
         $2184 = $268;
         label = 695;
        } else {
         $2173 = ($$pre$i$i$i$i$i$i782 | 0) == 0;
         if ($2173) {
          $$0$i$i$i$i$i$i$i$i786 = $268;
          while (1) {
           $2178 = HEAP32[$$0$i$i$i$i$i$i$i$i786 + 8 >> 2] | 0;
           if ((HEAP32[$2178 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i786 | 0)) $$0$i$i$i$i$i$i$i$i786 = $2178; else {
            $$01$i$i$i$i$i$i$i$i788 = $2178;
            break;
           }
          }
         } else {
          $$0$i$i$i$i$i$i$i$i$i784 = $$pre$i$i$i$i$i$i782;
          while (1) {
           $2175 = HEAP32[$$0$i$i$i$i$i$i$i$i$i784 + 4 >> 2] | 0;
           if (!$2175) {
            $$01$i$i$i$i$i$i$i$i788 = $$0$i$i$i$i$i$i$i$i$i784;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i784 = $2175;
          }
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i788 + 16 >> 2] | 0) >>> 0 < $2171 >>> 0) {
          $2184 = $$01$i$i$i$i$i$i$i$i788;
          label = 695;
         } else {
          if ($2173) {
           HEAP32[$0 >> 2] = $268;
           $$0$i$i$i$i1$i$i797 = $268;
           $2198 = $268;
           break;
          } else $__nd$0$in$i21$i$i$i$i$i$i793 = $$pre$i$i$i$i$i$i782;
          while (1) {
           $$idx2$val$i23$i$i$i$i$i$i795 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i793 + 16 >> 2] | 0;
           if ($2171 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i795 >>> 0) {
            $2188 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i793 >> 2] | 0;
            if (!$2188) {
             label = 701;
             break;
            } else {
             $__nd$0$in$i21$i$i$i$i$i$i793 = $2188;
             continue;
            }
           }
           if ($$idx2$val$i23$i$i$i$i$i$i795 >>> 0 >= $2171 >>> 0) {
            label = 705;
            break;
           }
           $2191 = $__nd$0$in$i21$i$i$i$i$i$i793 + 4 | 0;
           $2192 = HEAP32[$2191 >> 2] | 0;
           if (!$2192) {
            label = 704;
            break;
           } else $__nd$0$in$i21$i$i$i$i$i$i793 = $2192;
          }
          if ((label | 0) == 701) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i793;
           $$0$i$i$i$i1$i$i797 = $__nd$0$in$i21$i$i$i$i$i$i793;
           $2198 = $__nd$0$in$i21$i$i$i$i$i$i793;
           break;
          } else if ((label | 0) == 704) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i793;
           $$0$i$i$i$i1$i$i797 = $2191;
           $2198 = $__nd$0$in$i21$i$i$i$i$i$i793;
           break;
          } else if ((label | 0) == 705) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i793;
           $$0$i$i$i$i1$i$i797 = $0;
           $2198 = $__nd$0$in$i21$i$i$i$i$i$i793;
           break;
          }
         }
        } while (0);
        do if ((label | 0) == 695) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i782) {
          HEAP32[$0 >> 2] = $268;
          $$0$i$i$i$i1$i$i797 = $268;
          $2198 = $268;
          break;
         } else {
          HEAP32[$0 >> 2] = $2184;
          $$0$i$i$i$i1$i$i797 = $2184 + 4 | 0;
          $2198 = $2184;
          break;
         }
        } while (0);
        $2194 = HEAP32[$$0$i$i$i$i1$i$i797 >> 2] | 0;
        if (!$2194) {
         HEAP32[$2156 >> 2] = 0;
         HEAP32[$2156 + 4 >> 2] = 0;
         HEAP32[$2156 + 8 >> 2] = $2198;
         HEAP32[$$0$i$i$i$i1$i$i797 >> 2] = $2156;
         $2200 = HEAP32[HEAP32[$bindings >> 2] >> 2] | 0;
         if (!$2200) $2203 = $2156; else {
          HEAP32[$bindings >> 2] = $2200;
          $2203 = HEAP32[$$0$i$i$i$i1$i$i797 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$266 >> 2] | 0, $2203);
         HEAP32[$267 >> 2] = (HEAP32[$267 >> 2] | 0) + 1;
        } else if (!(($2194 | 0) == ($2156 | 0) | ($2156 | 0) == 0)) __ZdlPv($2156);
        $2209 = HEAP32[$$idx$val$i15$i$i780 + 4 >> 2] | 0;
        if (!$2209) {
         $$0$i$i$i$i$i807 = $$idx$val$i15$i$i780;
         while (1) {
          $2214 = HEAP32[$$0$i$i$i$i$i807 + 8 >> 2] | 0;
          if ((HEAP32[$2214 >> 2] | 0) == ($$0$i$i$i$i$i807 | 0)) {
           $$01$i$i$i$i$i809 = $2214;
           break;
          } else $$0$i$i$i$i$i807 = $2214;
         }
        } else {
         $$0$i$i$i$i$i$i805 = $2209;
         while (1) {
          $2211 = HEAP32[$$0$i$i$i$i$i$i805 >> 2] | 0;
          if (!$2211) {
           $$01$i$i$i$i$i809 = $$0$i$i$i$i$i$i805;
           break;
          } else $$0$i$i$i$i$i$i805 = $2211;
         }
        }
        if (($$01$i$i$i$i$i809 | 0) == ($2154 | 0)) break; else $$idx$val$i15$i$i780 = $$01$i$i$i$i$i809;
       }
      }
      $2222 = HEAP32[$1829 >> 2] | 0;
      if ((HEAP32[$1830 >> 2] | 0) != ($2222 | 0)) {
       $2227 = $2222;
       $i41$03337 = 0;
       do {
        $2225 = HEAP32[(HEAP32[$args >> 2] | 0) + ($i41$03337 << 2) >> 2] | 0;
        __THREW__ = 0;
        $2228 = invoke_iii(34, $bindings | 0, $2227 + ($i41$03337 << 2) | 0) | 0;
        $2229 = __THREW__;
        __THREW__ = 0;
        if ($2229 & 1) {
         label = 722;
         break L1;
        }
        HEAP32[$2228 >> 2] = $2225;
        $i41$03337 = $i41$03337 + 1 | 0;
        $2227 = HEAP32[$1829 >> 2] | 0;
       } while ($i41$03337 >>> 0 < (HEAP32[$1830 >> 2] | 0) - $2227 >> 2 >>> 0);
      }
      __THREW__ = 0;
      invoke_viiiiii(19, $194 | 0, $1801 + 4 | 0, $1821 | 0, HEAP32[$1821 + 20 >> 2] | 0, HEAP32[$1821 + 24 >> 2] | 0, $bindings | 0);
      $2249 = __THREW__;
      __THREW__ = 0;
      if ($2249 & 1) {
       label = 723;
       break L1;
      }
      $2251 = HEAP32[$2075 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, HEAP32[$266 >> 2] | 0);
      $$0135 = 0;
      $$212 = $2251;
     }
     $2253 = HEAP32[$args >> 2] | 0;
     if ($2253) {
      $2255 = HEAP32[$264 >> 2] | 0;
      if (($2255 | 0) != ($2253 | 0)) HEAP32[$264 >> 2] = $2255 + (~(($2255 + -4 - $2253 | 0) >>> 2) << 2);
      __ZdlPv($2253);
     }
     if ($$0135) $$111$ph$be = $$212; else {
      $$010 = $$212;
      continue L1;
     }
     break;
    }
   case 736:
    {
     label = 0;
     $2270 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
     if ((HEAP32[$200 >> 2] | 0) != 1) {
      label = 742;
      break L697;
     }
     $2274 = HEAP32[$2270 + 52 >> 2] | 0;
     if (($2274 | 0) == 15) {
      if (HEAP8[$201 >> 0] | 0) {
       label = 742;
       break L697;
      }
      HEAP32[$223 >> 2] = 1;
      HEAP8[$201 >> 0] = 0;
      HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32922 + 0 >> 0] | 0;
      HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32922 + 1 >> 0] | 0;
      HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32922 + 2 >> 0] | 0;
      HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32922 + 3 >> 0] | 0;
      HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32922 + 4 >> 0] | 0;
      HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32922 + 5 >> 0] | 0;
      HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32922 + 6 >> 0] | 0;
      $$414 = $$111$ph4195;
      label = 2491;
      break;
     } else if (($2274 | 0) == 16) {
      if (!(HEAP8[$201 >> 0] | 0)) {
       label = 742;
       break L697;
      }
      HEAP32[$223 >> 2] = 1;
      HEAP8[$201 >> 0] = 1;
      HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32918 + 0 >> 0] | 0;
      HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32918 + 1 >> 0] | 0;
      HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32918 + 2 >> 0] | 0;
      HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32918 + 3 >> 0] | 0;
      HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32918 + 4 >> 0] | 0;
      HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32918 + 5 >> 0] | 0;
      HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32918 + 6 >> 0] | 0;
      $$414 = $$111$ph4195;
      label = 2491;
      break;
     } else {
      label = 742;
      break L697;
     }
     break;
    }
   case 755:
    {
     label = 0;
     if (($2285 | 0) != (HEAP32[$200 >> 2] | 0)) {
      label = 756;
      break L1;
     }
     switch ($2285 | 0) {
     case 16:
      {
       if (($2392 | 0) != 2) {
        label = 842;
        break L1;
       }
       $2395 = HEAP32[$$idx$val$i839 + -96 >> 2] | 0;
       $2396 = HEAP32[$201 >> 2] | 0;
       HEAP32[$elements45 >> 2] = 0;
       HEAP32[$272 >> 2] = 0;
       HEAP32[$273 >> 2] = 0;
       $$idx266$val = HEAP32[$2395 + 8 >> 2] | 0;
       $$idx269$val = HEAP32[$2395 + 12 >> 2] | 0;
       L919 : do if (($$idx266$val | 0) != ($$idx269$val | 0)) {
        $2400 = $$idx266$val;
        $2401 = 0;
        $2403 = 0;
        while (1) {
         $2399 = HEAP32[$2400 >> 2] | 0;
         if (($2401 | 0) == ($2403 | 0)) {
          $this$idx2$val$i$i863 = HEAP32[$elements45 >> 2] | 0;
          $2411 = ($2403 - $this$idx2$val$i$i863 >> 2) + 1 | 0;
          if ($2411 >>> 0 > 1073741823) {
           __THREW__ = 0;
           invoke_vi(181, $elements45 | 0);
           $2413 = __THREW__;
           __THREW__ = 0;
           if ($2413 & 1) {
            label = 812;
            break L1;
           }
           $$idx1$val$i$i$i$i866 = HEAP32[$273 >> 2] | 0;
           $this$idx$val$i$i867 = HEAP32[$elements45 >> 2] | 0;
          } else {
           $$idx1$val$i$i$i$i866 = $2403;
           $this$idx$val$i$i867 = $this$idx2$val$i$i863;
          }
          $2416 = $this$idx$val$i$i867;
          $2417 = $$idx1$val$i$i$i$i866 - $2416 | 0;
          if ($2417 >> 2 >>> 0 < 536870911) {
           $2423 = $2417 >> 1;
           $2425 = $2423 >>> 0 < $2411 >>> 0 ? $2411 : $2423;
           $2428 = (HEAP32[$272 >> 2] | 0) - $2416 >> 2;
           if (!$2425) {
            $$0$i8$i$i873 = 0;
            $2435 = 0;
            $2436 = $2428;
           } else {
            $$0$i7$i$i872 = $2425;
            $6315 = $2428;
            label = 804;
           }
          } else {
           $$0$i7$i$i872 = 1073741823;
           $6315 = (HEAP32[$272 >> 2] | 0) - $2416 >> 2;
           label = 804;
          }
          if ((label | 0) == 804) {
           label = 0;
           __THREW__ = 0;
           $2431 = invoke_ii(67, $$0$i7$i$i872 << 2 | 0) | 0;
           $2432 = __THREW__;
           __THREW__ = 0;
           if ($2432 & 1) {
            label = 812;
            break L1;
           }
           $$0$i8$i$i873 = $$0$i7$i$i872;
           $2435 = $2431;
           $2436 = $6315;
          }
          $2434 = $2435 + ($2436 << 2) | 0;
          if ($2434) HEAP32[$2434 >> 2] = $2399;
          $2440 = HEAP32[$elements45 >> 2] | 0;
          $2444 = (HEAP32[$272 >> 2] | 0) - $2440 | 0;
          $2446 = $2435 + ($2436 - ($2444 >> 2) << 2) | 0;
          _memcpy($2446 | 0, $2440 | 0, $2444 | 0) | 0;
          HEAP32[$elements45 >> 2] = $2446;
          HEAP32[$272 >> 2] = $2435 + ($2436 + 1 << 2);
          HEAP32[$273 >> 2] = $2435 + ($$0$i8$i$i873 << 2);
          if ($2440) __ZdlPv($2440);
         } else {
          if (!$2401) $2406 = 0; else {
           HEAP32[$2401 >> 2] = $2399;
           $2406 = HEAP32[$272 >> 2] | 0;
          }
          HEAP32[$272 >> 2] = $2406 + 4;
         }
         $2448 = $2400 + 4 | 0;
         if (($2448 | 0) == ($$idx269$val | 0)) break L919;
         $2400 = $2448;
         $2401 = HEAP32[$272 >> 2] | 0;
         $2403 = HEAP32[$273 >> 2] | 0;
        }
       } while (0);
       $$idx265$val = HEAP32[$2396 + 8 >> 2] | 0;
       $$idx268$val = HEAP32[$2396 + 12 >> 2] | 0;
       if (($$idx265$val | 0) != ($$idx268$val | 0)) {
        $2467 = $$idx265$val;
        do {
         $2466 = HEAP32[$2467 >> 2] | 0;
         $2468 = HEAP32[$272 >> 2] | 0;
         if (($2468 | 0) == (HEAP32[$273 >> 2] | 0)) {
          $this$idx2$val$i$i890 = HEAP32[$elements45 >> 2] | 0;
          $2478 = ($2468 - $this$idx2$val$i$i890 >> 2) + 1 | 0;
          if ($2478 >>> 0 > 1073741823) {
           __THREW__ = 0;
           invoke_vi(181, $elements45 | 0);
           $2480 = __THREW__;
           __THREW__ = 0;
           if ($2480 & 1) {
            label = 813;
            break L1;
           }
           $$idx1$val$i$i$i$i893 = HEAP32[$273 >> 2] | 0;
           $this$idx$val$i$i894 = HEAP32[$elements45 >> 2] | 0;
          } else {
           $$idx1$val$i$i$i$i893 = $2468;
           $this$idx$val$i$i894 = $this$idx2$val$i$i890;
          }
          $2483 = $this$idx$val$i$i894;
          $2484 = $$idx1$val$i$i$i$i893 - $2483 | 0;
          if ($2484 >> 2 >>> 0 < 536870911) {
           $2490 = $2484 >> 1;
           $2492 = $2490 >>> 0 < $2478 >>> 0 ? $2478 : $2490;
           $2495 = (HEAP32[$272 >> 2] | 0) - $2483 >> 2;
           if (!$2492) {
            $$0$i8$i$i900 = 0;
            $2502 = 0;
            $2503 = $2495;
           } else {
            $$0$i7$i$i899 = $2492;
            $6316 = $2495;
            label = 830;
           }
          } else {
           $$0$i7$i$i899 = 1073741823;
           $6316 = (HEAP32[$272 >> 2] | 0) - $2483 >> 2;
           label = 830;
          }
          if ((label | 0) == 830) {
           label = 0;
           __THREW__ = 0;
           $2498 = invoke_ii(67, $$0$i7$i$i899 << 2 | 0) | 0;
           $2499 = __THREW__;
           __THREW__ = 0;
           if ($2499 & 1) {
            label = 813;
            break L1;
           }
           $$0$i8$i$i900 = $$0$i7$i$i899;
           $2502 = $2498;
           $2503 = $6316;
          }
          $2501 = $2502 + ($2503 << 2) | 0;
          if ($2501) HEAP32[$2501 >> 2] = $2466;
          $2507 = HEAP32[$elements45 >> 2] | 0;
          $2511 = (HEAP32[$272 >> 2] | 0) - $2507 | 0;
          $2513 = $2502 + ($2503 - ($2511 >> 2) << 2) | 0;
          _memcpy($2513 | 0, $2507 | 0, $2511 | 0) | 0;
          HEAP32[$elements45 >> 2] = $2513;
          HEAP32[$272 >> 2] = $2502 + ($2503 + 1 << 2);
          HEAP32[$273 >> 2] = $2502 + ($$0$i8$i$i900 << 2);
          if ($2507) __ZdlPv($2507);
         } else {
          if (!$2468) $2473 = 0; else {
           HEAP32[$2468 >> 2] = $2466;
           $2473 = HEAP32[$272 >> 2] | 0;
          }
          HEAP32[$272 >> 2] = $2473 + 4;
         }
         $2467 = $2467 + 4 | 0;
        } while (($2467 | 0) != ($$idx268$val | 0));
       }
       __THREW__ = 0;
       invoke_viii(12, $52 | 0, $this | 0, $elements45 | 0);
       $2517 = __THREW__;
       __THREW__ = 0;
       if ($2517 & 1) {
        label = 814;
        break L1;
       };
       HEAP32[$200 + 0 >> 2] = HEAP32[$52 + 0 >> 2];
       HEAP32[$200 + 4 >> 2] = HEAP32[$52 + 4 >> 2];
       HEAP32[$200 + 8 >> 2] = HEAP32[$52 + 8 >> 2];
       HEAP32[$200 + 12 >> 2] = HEAP32[$52 + 12 >> 2];
       $2519 = HEAP32[$elements45 >> 2] | 0;
       if (!$2519) {
        $$414 = $$111$ph4195;
        label = 2491;
        break L712;
       }
       $2521 = HEAP32[$272 >> 2] | 0;
       if (($2521 | 0) != ($2519 | 0)) HEAP32[$272 >> 2] = $2521 + (~(($2521 + -4 - $2519 | 0) >>> 2) << 2);
       __ZdlPv($2519);
       $$414 = $$111$ph4195;
       label = 2491;
       break L712;
       break;
      }
     case 1:
      {
       if (($2392 | 0) == 15) {
        if (!(HEAP8[$$idx$val$i839 + -96 >> 0] | 0)) $2554 = 0; else $2554 = HEAP8[$201 >> 0] | 0;
        HEAP32[$223 >> 2] = 1;
        HEAP8[$201 >> 0] = $2554;
        HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32914 + 0 >> 0] | 0;
        HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32914 + 1 >> 0] | 0;
        HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32914 + 2 >> 0] | 0;
        HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32914 + 3 >> 0] | 0;
        HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32914 + 4 >> 0] | 0;
        HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32914 + 5 >> 0] | 0;
        HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32914 + 6 >> 0] | 0;
        $$414 = $$111$ph4195;
        label = 2491;
        break L712;
       } else if (($2392 | 0) == 16) {
        if (!(HEAP8[$$idx$val$i839 + -96 >> 0] | 0)) $2559 = HEAP8[$201 >> 0] | 0; else $2559 = 1;
        HEAP32[$223 >> 2] = 1;
        HEAP8[$201 >> 0] = $2559;
        HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32910 + 0 >> 0] | 0;
        HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32910 + 1 >> 0] | 0;
        HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32910 + 2 >> 0] | 0;
        HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32910 + 3 >> 0] | 0;
        HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32910 + 4 >> 0] | 0;
        HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32910 + 5 >> 0] | 0;
        HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32910 + 6 >> 0] | 0;
        $$414 = $$111$ph4195;
        label = 2491;
        break L712;
       } else {
        label = 860;
        break L1;
       }
       break;
      }
     case 2:
      {
       do switch ($2392 | 0) {
       case 2:
        {
         $2586 = +HEAPF64[$$idx$val$i839 + -96 >> 3] + +HEAPF64[$245 >> 3];
         HEAP32[$223 >> 2] = 2;
         HEAPF64[$245 >> 3] = $2586;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 3:
        {
         $2590 = +HEAPF64[$$idx$val$i839 + -96 >> 3] - +HEAPF64[$245 >> 3];
         HEAP32[$223 >> 2] = 2;
         HEAPF64[$245 >> 3] = $2590;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 0:
        {
         $2594 = +HEAPF64[$$idx$val$i839 + -96 >> 3] * +HEAPF64[$245 >> 3];
         HEAP32[$223 >> 2] = 2;
         HEAPF64[$245 >> 3] = $2594;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 1:
        {
         $2595 = +HEAPF64[$245 >> 3];
         if ($2595 == 0.0) {
          label = 876;
          break L1;
         }
         $2611 = +HEAPF64[$$idx$val$i839 + -96 >> 3] / $2595;
         HEAP32[$223 >> 2] = 2;
         HEAPF64[$245 >> 3] = $2611;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 4:
        {
         $2618 = +(~~+HEAPF64[$$idx$val$i839 + -96 >> 3] << ~~+HEAPF64[$245 >> 3] | 0);
         HEAP32[$223 >> 2] = 2;
         HEAPF64[$245 >> 3] = $2618;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 5:
        {
         $2625 = +(~~+HEAPF64[$$idx$val$i839 + -96 >> 3] >> ~~+HEAPF64[$245 >> 3] | 0);
         HEAP32[$223 >> 2] = 2;
         HEAPF64[$245 >> 3] = $2625;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 12:
        {
         $2632 = +(~~+HEAPF64[$245 >> 3] & ~~+HEAPF64[$$idx$val$i839 + -96 >> 3] | 0);
         HEAP32[$223 >> 2] = 2;
         HEAPF64[$245 >> 3] = $2632;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 13:
        {
         $2639 = +(~~+HEAPF64[$245 >> 3] ^ ~~+HEAPF64[$$idx$val$i839 + -96 >> 3] | 0);
         HEAP32[$223 >> 2] = 2;
         HEAPF64[$245 >> 3] = $2639;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 14:
        {
         $2646 = +(~~+HEAPF64[$245 >> 3] | ~~+HEAPF64[$$idx$val$i839 + -96 >> 3] | 0);
         HEAP32[$223 >> 2] = 2;
         HEAPF64[$245 >> 3] = $2646;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 9:
        {
         $2651 = +HEAPF64[$$idx$val$i839 + -96 >> 3] <= +HEAPF64[$245 >> 3] & 1;
         HEAP32[$223 >> 2] = 1;
         HEAP8[$201 >> 0] = $2651;
         HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32879 + 0 >> 0] | 0;
         HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32879 + 1 >> 0] | 0;
         HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32879 + 2 >> 0] | 0;
         HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32879 + 3 >> 0] | 0;
         HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32879 + 4 >> 0] | 0;
         HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32879 + 5 >> 0] | 0;
         HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32879 + 6 >> 0] | 0;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 7:
        {
         $2656 = +HEAPF64[$$idx$val$i839 + -96 >> 3] >= +HEAPF64[$245 >> 3] & 1;
         HEAP32[$223 >> 2] = 1;
         HEAP8[$201 >> 0] = $2656;
         HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32875 + 0 >> 0] | 0;
         HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32875 + 1 >> 0] | 0;
         HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32875 + 2 >> 0] | 0;
         HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32875 + 3 >> 0] | 0;
         HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32875 + 4 >> 0] | 0;
         HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32875 + 5 >> 0] | 0;
         HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32875 + 6 >> 0] | 0;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 8:
        {
         $2661 = +HEAPF64[$$idx$val$i839 + -96 >> 3] < +HEAPF64[$245 >> 3] & 1;
         HEAP32[$223 >> 2] = 1;
         HEAP8[$201 >> 0] = $2661;
         HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32871 + 0 >> 0] | 0;
         HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32871 + 1 >> 0] | 0;
         HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32871 + 2 >> 0] | 0;
         HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32871 + 3 >> 0] | 0;
         HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32871 + 4 >> 0] | 0;
         HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32871 + 5 >> 0] | 0;
         HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32871 + 6 >> 0] | 0;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       case 6:
        {
         $2666 = +HEAPF64[$$idx$val$i839 + -96 >> 3] > +HEAPF64[$245 >> 3] & 1;
         HEAP32[$223 >> 2] = 1;
         HEAP8[$201 >> 0] = $2666;
         HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32867 + 0 >> 0] | 0;
         HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32867 + 1 >> 0] | 0;
         HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32867 + 2 >> 0] | 0;
         HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32867 + 3 >> 0] | 0;
         HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32867 + 4 >> 0] | 0;
         HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32867 + 5 >> 0] | 0;
         HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32867 + 6 >> 0] | 0;
         $$414 = $$111$ph4195;
         label = 2491;
         break L712;
         break;
        }
       default:
        {
         label = 892;
         break L1;
        }
       } while (0);
       break;
      }
     case 17:
      {
       label = 903;
       break L1;
       break;
      }
     case 0:
      {
       label = 914;
       break L1;
       break;
      }
     case 18:
      {
       if (($2392 | 0) != 2) {
        label = 926;
        break L1;
       }
       $2761 = HEAP32[$$idx$val$i839 + -96 >> 2] | 0;
       $2762 = HEAP32[$201 >> 2] | 0;
       $2763 = __Znwj(16) | 0;
       HEAP32[$2763 >> 2] = 40384;
       HEAP32[$2763 + 8 >> 2] = $2761;
       HEAP32[$2763 + 12 >> 2] = $2762;
       $2766 = HEAP32[$217 >> 2] | 0;
       $2767 = HEAP32[$218 >> 2] | 0;
       if ($2766 >>> 0 < $2767 >>> 0) {
        if (!$2766) $2771 = 0; else {
         HEAP32[$2766 >> 2] = $2763;
         $2771 = HEAP32[$217 >> 2] | 0;
        }
        $2770 = $2771 + 4 | 0;
        HEAP32[$217 >> 2] = $2770;
        $$idx1$val$i$i$i975 = $2770;
       } else {
        $this$idx2$val$i$i$i$i$i958 = HEAP32[$216 >> 2] | 0;
        $2776 = ($2766 - $this$idx2$val$i$i$i$i$i958 >> 2) + 1 | 0;
        if ($2776 >>> 0 > 1073741823) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($216);
         $$idx1$val$i$i$i$i$i$i$i961 = HEAP32[$218 >> 2] | 0;
         $this$idx$val$i$i$i$i$i962 = HEAP32[$216 >> 2] | 0;
        } else {
         $$idx1$val$i$i$i$i$i$i$i961 = $2767;
         $this$idx$val$i$i$i$i$i962 = $this$idx2$val$i$i$i$i$i958;
        }
        $2779 = $this$idx$val$i$i$i$i$i962;
        $2780 = $$idx1$val$i$i$i$i$i$i$i961 - $2779 | 0;
        if ($2780 >> 2 >>> 0 < 536870911) {
         $2786 = $2780 >> 1;
         $2788 = $2786 >>> 0 < $2776 >>> 0 ? $2776 : $2786;
         $2791 = (HEAP32[$217 >> 2] | 0) - $2779 >> 2;
         if (!$2788) {
          $$0$i8$i$i$i$i$i968 = 0;
          $2796 = 0;
          $2797 = $2791;
         } else {
          $$0$i7$i$i$i$i$i967 = $2788;
          $6317 = $2791;
          label = 946;
         }
        } else {
         $$0$i7$i$i$i$i$i967 = 1073741823;
         $6317 = (HEAP32[$217 >> 2] | 0) - $2779 >> 2;
         label = 946;
        }
        if ((label | 0) == 946) {
         label = 0;
         $$0$i8$i$i$i$i$i968 = $$0$i7$i$i$i$i$i967;
         $2796 = __Znwj($$0$i7$i$i$i$i$i967 << 2) | 0;
         $2797 = $6317;
        }
        $2795 = $2796 + ($2797 << 2) | 0;
        if ($2795) HEAP32[$2795 >> 2] = $2763;
        $2800 = $2796 + ($2797 + 1 << 2) | 0;
        $2801 = HEAP32[$216 >> 2] | 0;
        $2805 = (HEAP32[$217 >> 2] | 0) - $2801 | 0;
        $2807 = $2796 + ($2797 - ($2805 >> 2) << 2) | 0;
        _memcpy($2807 | 0, $2801 | 0, $2805 | 0) | 0;
        HEAP32[$216 >> 2] = $2807;
        HEAP32[$217 >> 2] = $2800;
        HEAP32[$218 >> 2] = $2796 + ($$0$i8$i$i$i$i$i968 << 2);
        if (!$2801) $$idx1$val$i$i$i975 = $2800; else {
         __ZdlPv($2801);
         $$idx1$val$i$i$i975 = HEAP32[$217 >> 2] | 0;
        }
       }
       HEAP8[$2763 + 4 >> 0] = HEAP8[$219 >> 0] | 0;
       $2814 = $$idx1$val$i$i$i975 - (HEAP32[$216 >> 2] | 0) >> 2;
       HEAP32[$220 >> 2] = $2814;
       if ($2814 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($2814 >>> 0) > +HEAPF64[$221 >> 3] * +((HEAP32[$222 >> 2] | 0) >>> 0)) {
        __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $2763);
        __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($194, $this);
        if (HEAP32[$223 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$201 >> 2] | 0);
        $2828 = (HEAP8[$219 >> 0] | 0) + 1 << 24 >> 24;
        HEAP8[$219 >> 0] = $2828;
        $$idx6$val11$i$i$i979 = HEAP32[$$idx6$i$i$i >> 2] | 0;
        $$idx7$val12$i$i$i980 = HEAP32[$217 >> 2] | 0;
        L1031 : do if (($$idx7$val12$i$i$i980 | 0) == ($$idx6$val11$i$i$i979 | 0)) $$lcssa$i$i$i999 = 0; else {
         $$idx6$val14$i$i$i983 = $$idx6$val11$i$i$i979;
         $$idx7$val18$i$i$i982 = $$idx7$val12$i$i$i980;
         $2835 = $2828;
         $i$013$i$i$i984 = 0;
         while (1) {
          $2831 = HEAP32[$$idx6$val14$i$i$i983 + ($i$013$i$i$i984 << 2) >> 2] | 0;
          if ((HEAP8[$2831 + 4 >> 0] | 0) == $2835 << 24 >> 24) {
           $$idx6$val$i$i$i995 = $$idx6$val14$i$i$i983;
           $$idx7$val$i$i$i994 = $$idx7$val18$i$i$i982;
           $i$1$i$i$i996 = $i$013$i$i$i984;
          } else {
           if (!$2831) {
            $$idx4$val$i$i$i989 = $$idx6$val14$i$i$i983;
            $$idx5$val$i$i$i988 = $$idx7$val18$i$i$i982;
           } else {
            FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2831 >> 2] | 0) + 4 >> 2] & 255]($2831);
            $$idx4$val$i$i$i989 = HEAP32[$$idx6$i$i$i >> 2] | 0;
            $$idx5$val$i$i$i988 = HEAP32[$217 >> 2] | 0;
           }
           $2844 = ($$idx5$val$i$i$i988 - $$idx4$val$i$i$i989 >> 2) + -1 | 0;
           if (($i$013$i$i$i984 | 0) == ($2844 | 0)) {
            $$idx6$val$pre$i$i$i992 = $$idx4$val$i$i$i989;
            $2849 = $$idx5$val$i$i$i988;
           } else {
            HEAP32[$$idx4$val$i$i$i989 + ($i$013$i$i$i984 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i989 + ($2844 << 2) >> 2];
            $$idx6$val$pre$i$i$i992 = HEAP32[$$idx6$i$i$i >> 2] | 0;
            $2849 = HEAP32[$217 >> 2] | 0;
           }
           $scevgep4$i$i$i$i$i$i993 = $2849 + -4 | 0;
           HEAP32[$217 >> 2] = $scevgep4$i$i$i$i$i$i993;
           $$idx6$val$i$i$i995 = $$idx6$val$pre$i$i$i992;
           $$idx7$val$i$i$i994 = $scevgep4$i$i$i$i$i$i993;
           $i$1$i$i$i996 = $i$013$i$i$i984 + -1 | 0;
          }
          $2851 = $i$1$i$i$i996 + 1 | 0;
          $2855 = $$idx7$val$i$i$i994 - $$idx6$val$i$i$i995 >> 2;
          if ($2851 >>> 0 >= $2855 >>> 0) {
           $$lcssa$i$i$i999 = $2855;
           break L1031;
          }
          $$idx6$val14$i$i$i983 = $$idx6$val$i$i$i995;
          $$idx7$val18$i$i$i982 = $$idx7$val$i$i$i994;
          $2835 = HEAP8[$219 >> 0] | 0;
          $i$013$i$i$i984 = $2851;
         }
        } while (0);
        HEAP32[$220 >> 2] = $$lcssa$i$i$i999;
        HEAP32[$222 >> 2] = $$lcssa$i$i$i999;
       }
       HEAP32[$223 >> 2] = 18;
       HEAP32[$262 >> 2] = 0;
       HEAP32[$201 >> 2] = $2763;
       HEAP32[$263 >> 2] = 0;
       $$414 = $$111$ph4195;
       label = 2491;
       break L712;
       break;
      }
     case 19:
      {
       if (($2392 | 0) != 2) {
        label = 985;
        break L1;
       }
       $2859 = HEAP32[$$idx$val$i839 + -96 >> 2] | 0;
       $2860 = $2859 + 8 | 0;
       $2861 = HEAP32[$201 >> 2] | 0;
       $2862 = $2861 + 8 | 0;
       HEAP32[$73 + 0 >> 2] = 0;
       HEAP32[$73 + 4 >> 2] = 0;
       HEAP32[$73 + 8 >> 2] = 0;
       $2863 = HEAP8[$2860 >> 0] | 0;
       $2865 = ($2863 & 1) == 0;
       if ($2865) $2881 = ($2863 & 255) >>> 1; else $2881 = HEAP32[$2859 + 12 >> 2] | 0;
       $2870 = HEAP8[$2862 >> 0] | 0;
       if (!($2870 & 1)) $2882 = ($2870 & 255) >>> 1; else $2882 = HEAP32[$2861 + 12 >> 2] | 0;
       if ($2865) $2883 = $2860 + 1 | 0; else $2883 = HEAP32[$2859 + 16 >> 2] | 0;
       __THREW__ = 0;
       invoke_viiii(14, $73 | 0, $2883 | 0, $2881 | 0, $2882 + $2881 | 0);
       $2884 = __THREW__;
       __THREW__ = 0;
       if ($2884 & 1) {
        label = 981;
        break L1;
       }
       if (!(HEAP8[$2862 >> 0] & 1)) $2892 = $2862 + 1 | 0; else $2892 = HEAP32[$2861 + 16 >> 2] | 0;
       __THREW__ = 0;
       invoke_iiii(31, $73 | 0, $2892 | 0, $2882 | 0) | 0;
       $2893 = __THREW__;
       __THREW__ = 0;
       if ($2893 & 1) {
        label = 981;
        break L1;
       }
       __THREW__ = 0;
       invoke_viii(14, $72 | 0, $this | 0, $73 | 0);
       $2897 = __THREW__;
       __THREW__ = 0;
       if ($2897 & 1) {
        label = 984;
        break L1;
       };
       HEAP32[$200 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
       HEAP32[$200 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
       HEAP32[$200 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
       HEAP32[$200 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($73);
       $$414 = $$111$ph4195;
       label = 2491;
       break L712;
       break;
      }
     default:
      {
       $$414 = $$111$ph4195;
       label = 2491;
       break L712;
      }
     }
     break;
    }
   case 996:
    {
     label = 0;
     $2925 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
     $2927 = HEAP32[$$idx$val$i839 + -96 >> 2] | 0;
     $2929 = HEAP32[$$idx$val$i839 + -80 >> 2] | 0;
     if ((HEAP32[$200 >> 2] | 0) != 1) {
      label = 997;
      break L1;
     }
     do if (!(HEAP8[$201 >> 0] | 0)) {
      $$idx262$pre$phiZZ2D = $2929 + 8 | 0;
      $$pre$phi5797Z2D = $$idx$val$i839 + -56 | 0;
     } else {
      $2951 = $$idx$val$i839 + -40 | 0;
      $2952 = $2929 + 8 | 0;
      $2953 = $$idx$val$i839 + -56 | 0;
      $2955 = (HEAP32[$2952 >> 2] | 0) + (HEAP32[$2953 >> 2] << 2) | 0;
      $2956 = $$idx$val$i839 + -36 | 0;
      $2957 = HEAP32[$2956 >> 2] | 0;
      $2958 = $$idx$val$i839 + -32 | 0;
      if (($2957 | 0) != (HEAP32[$2958 >> 2] | 0)) {
       if (!$2957) $2964 = 0; else {
        HEAP32[$2957 >> 2] = HEAP32[$2955 >> 2];
        $2964 = HEAP32[$2956 >> 2] | 0;
       }
       HEAP32[$2956 >> 2] = $2964 + 4;
       $$idx262$pre$phiZZ2D = $2952;
       $$pre$phi5797Z2D = $2953;
       break;
      }
      $this$idx2$val$i$i1016 = HEAP32[$2951 >> 2] | 0;
      $2969 = ($2957 - $this$idx2$val$i$i1016 >> 2) + 1 | 0;
      if ($2969 >>> 0 > 1073741823) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2951);
       $$idx1$val$i$i$i$i1019 = HEAP32[$2958 >> 2] | 0;
       $this$idx$val$i$i1020 = HEAP32[$2951 >> 2] | 0;
      } else {
       $$idx1$val$i$i$i$i1019 = $2957;
       $this$idx$val$i$i1020 = $this$idx2$val$i$i1016;
      }
      $2972 = $this$idx$val$i$i1020;
      $2973 = $$idx1$val$i$i$i$i1019 - $2972 | 0;
      if ($2973 >> 2 >>> 0 < 536870911) {
       $2979 = $2973 >> 1;
       $2981 = $2979 >>> 0 < $2969 >>> 0 ? $2969 : $2979;
       $2984 = (HEAP32[$2956 >> 2] | 0) - $2972 >> 2;
       if (!$2981) {
        $$0$i8$i$i1026 = 0;
        $2989 = 0;
        $2990 = $2984;
       } else {
        $$0$i7$i$i1025 = $2981;
        $6318 = $2984;
        label = 1016;
       }
      } else {
       $$0$i7$i$i1025 = 1073741823;
       $6318 = (HEAP32[$2956 >> 2] | 0) - $2972 >> 2;
       label = 1016;
      }
      if ((label | 0) == 1016) {
       label = 0;
       $$0$i8$i$i1026 = $$0$i7$i$i1025;
       $2989 = __Znwj($$0$i7$i$i1025 << 2) | 0;
       $2990 = $6318;
      }
      $2988 = $2989 + ($2990 << 2) | 0;
      if ($2988) HEAP32[$2988 >> 2] = HEAP32[$2955 >> 2];
      $2995 = HEAP32[$2951 >> 2] | 0;
      $2999 = (HEAP32[$2956 >> 2] | 0) - $2995 | 0;
      $3001 = $2989 + ($2990 - ($2999 >> 2) << 2) | 0;
      _memcpy($3001 | 0, $2995 | 0, $2999 | 0) | 0;
      HEAP32[$2951 >> 2] = $3001;
      HEAP32[$2956 >> 2] = $2989 + ($2990 + 1 << 2);
      HEAP32[$2958 >> 2] = $2989 + ($$0$i8$i$i1026 << 2);
      if (!$2995) {
       $$idx262$pre$phiZZ2D = $2952;
       $$pre$phi5797Z2D = $2953;
      } else {
       __ZdlPv($2995);
       $$idx262$pre$phiZZ2D = $2952;
       $$pre$phi5797Z2D = $2953;
      }
     } while (0);
     $3004 = (HEAP32[$$pre$phi5797Z2D >> 2] | 0) + 1 | 0;
     HEAP32[$$pre$phi5797Z2D >> 2] = $3004;
     $$idx262$val = HEAP32[$$idx262$pre$phiZZ2D >> 2] | 0;
     if (($3004 | 0) != ((HEAP32[$2929 + 12 >> 2] | 0) - $$idx262$val >> 2 | 0)) {
      label = 1023;
      break L697;
     }
     __ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE($79, $this, $$idx$val$i839 + -40 | 0);
     HEAP32[$200 + 0 >> 2] = HEAP32[$79 + 0 >> 2];
     HEAP32[$200 + 4 >> 2] = HEAP32[$79 + 4 >> 2];
     HEAP32[$200 + 8 >> 2] = HEAP32[$79 + 8 >> 2];
     HEAP32[$200 + 12 >> 2] = HEAP32[$79 + 12 >> 2];
     $$414 = $$111$ph4195;
     label = 2491;
     break;
    }
   case 1059:
    {
     label = 0;
     $3100 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
     $3101 = $$idx$val$i839 + -104 | 0;
     $3102 = $$idx$val$i839 + -56 | 0;
     $3103 = HEAP32[$3102 >> 2] | 0;
     $3104 = $$idx$val$i839 + -40 | 0;
     $$idx260$val = HEAP32[$3104 >> 2] | 0;
     $$idx261 = $$idx$val$i839 + -36 | 0;
     $$idx261$val = HEAP32[$$idx261 >> 2] | 0;
     if (($3103 | 0) != ($$idx261$val - $$idx260$val >> 2 | 0)) {
      HEAP32[$3102 >> 2] = $3103 + 1;
      $4992 = HEAP32[$$idx260$val + ($3103 << 2) >> 2] | 0;
      if (!(HEAP8[$4992 + 5 >> 0] | 0)) {
       label = 1939;
       break L697;
      } else {
       $$414 = $$111$ph4195;
       label = 2491;
       break;
      }
     }
     $3112 = $3100 + 4 | 0;
     $3114 = HEAP32[(HEAP32[$$idx$val$i839 + -96 >> 2] | 0) + 44 >> 2] | 0;
     HEAP32[$args68 >> 2] = 0;
     HEAP32[$274 >> 2] = 0;
     HEAP32[$275 >> 2] = 0;
     L1097 : do if (($$idx260$val | 0) != ($$idx261$val | 0)) {
      $$pre$i1069 = 0;
      $3117 = $$idx260$val;
      $3120 = 0;
      while (1) {
       $3118 = (HEAP32[$3117 >> 2] | 0) + 8 | 0;
       if (($$pre$i1069 | 0) == ($3120 | 0)) {
        $this$idx2$val$i$i1071 = HEAP32[$args68 >> 2] | 0;
        $3128 = ($3120 - $this$idx2$val$i$i1071 >> 4) + 1 | 0;
        if ($3128 >>> 0 > 268435455) {
         __THREW__ = 0;
         invoke_vi(181, $args68 | 0);
         $3130 = __THREW__;
         __THREW__ = 0;
         if ($3130 & 1) {
          label = 1079;
          break L1;
         }
         $$idx1$val$i$i$i$i1074 = HEAP32[$275 >> 2] | 0;
         $this$idx$val$i$i1075 = HEAP32[$args68 >> 2] | 0;
        } else {
         $$idx1$val$i$i$i$i1074 = $3120;
         $this$idx$val$i$i1075 = $this$idx2$val$i$i1071;
        }
        $3133 = $this$idx$val$i$i1075;
        $3134 = $$idx1$val$i$i$i$i1074 - $3133 | 0;
        if ($3134 >> 4 >>> 0 < 134217727) {
         $3140 = $3134 >> 3;
         $3142 = $3140 >>> 0 < $3128 >>> 0 ? $3128 : $3140;
         $3145 = (HEAP32[$274 >> 2] | 0) - $3133 >> 4;
         if (!$3142) {
          $$0$i8$i$i1079 = 0;
          $3152 = 0;
          $3153 = $3145;
         } else {
          $$0$i7$i$i1078 = $3142;
          $6319 = $3145;
          label = 1071;
         }
        } else {
         $$0$i7$i$i1078 = 268435455;
         $6319 = (HEAP32[$274 >> 2] | 0) - $3133 >> 4;
         label = 1071;
        }
        if ((label | 0) == 1071) {
         label = 0;
         __THREW__ = 0;
         $3148 = invoke_ii(67, $$0$i7$i$i1078 << 4 | 0) | 0;
         $3149 = __THREW__;
         __THREW__ = 0;
         if ($3149 & 1) {
          label = 1079;
          break L1;
         }
         $$0$i8$i$i1079 = $$0$i7$i$i1078;
         $3152 = $3148;
         $3153 = $6319;
        }
        $3151 = $3152 + ($3153 << 4) | 0;
        if ($3151) {
         HEAP32[$3151 + 0 >> 2] = HEAP32[$3118 + 0 >> 2];
         HEAP32[$3151 + 4 >> 2] = HEAP32[$3118 + 4 >> 2];
         HEAP32[$3151 + 8 >> 2] = HEAP32[$3118 + 8 >> 2];
         HEAP32[$3151 + 12 >> 2] = HEAP32[$3118 + 12 >> 2];
        }
        $3157 = HEAP32[$args68 >> 2] | 0;
        $3161 = (HEAP32[$274 >> 2] | 0) - $3157 | 0;
        $3163 = $3152 + ($3153 - ($3161 >> 4) << 4) | 0;
        _memcpy($3163 | 0, $3157 | 0, $3161 | 0) | 0;
        HEAP32[$args68 >> 2] = $3163;
        HEAP32[$274 >> 2] = $3152 + ($3153 + 1 << 4);
        HEAP32[$275 >> 2] = $3152 + ($$0$i8$i$i1079 << 4);
        if ($3157) __ZdlPv($3157);
       } else {
        if (!$$pre$i1069) $3123 = 0; else {
         HEAP32[$$pre$i1069 + 0 >> 2] = HEAP32[$3118 + 0 >> 2];
         HEAP32[$$pre$i1069 + 4 >> 2] = HEAP32[$3118 + 4 >> 2];
         HEAP32[$$pre$i1069 + 8 >> 2] = HEAP32[$3118 + 8 >> 2];
         HEAP32[$$pre$i1069 + 12 >> 2] = HEAP32[$3118 + 12 >> 2];
         $3123 = $$pre$i1069;
        }
        HEAP32[$274 >> 2] = $3123 + 16;
       }
       $3165 = $3117 + 4 | 0;
       if (($3165 | 0) == ($$idx261$val | 0)) break L1097;
       $$pre$i1069 = HEAP32[$274 >> 2] | 0;
       $3117 = $3165;
       $3120 = HEAP32[$275 >> 2] | 0;
      }
     } while (0);
     L1124 : do switch ($3114 | 0) {
     case 0:
      {
       HEAP32[$80 >> 2] = 0;
       HEAP32[$276 >> 2] = 0;
       HEAP32[$277 >> 2] = 0;
       __THREW__ = 0;
       $3173 = invoke_ii(67, 8) | 0;
       $3174 = __THREW__;
       __THREW__ = 0;
       if ($3174 & 1) {
        label = 1087;
        break L1;
       }
       HEAP32[$276 >> 2] = $3173;
       HEAP32[$80 >> 2] = $3173;
       HEAP32[$277 >> 2] = $3173 + 8;
       $3177 = ($3173 | 0) == 0;
       if ($3177) $3182 = 0; else {
        HEAP32[$3173 >> 2] = 2;
        $3182 = $3173;
       }
       HEAP32[$3182 + 4 >> 2] = 17;
       $3180 = $3182 + 8 | 0;
       HEAP32[$276 >> 2] = $3180;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 0, $args68 | 0, $80 | 0);
       $6305 = __THREW__;
       __THREW__ = 0;
       if ($6305 & 1) {
        label = 1106;
        break L1;
       }
       if (!$3177) {
        if (($3180 | 0) != ($3173 | 0)) HEAP32[$276 >> 2] = $3182 + (1 - (($3182 + 4 - $3173 | 0) >>> 2) << 2);
        __ZdlPv($3173);
       }
       $args68$idx353$val = HEAP32[$args68 >> 2] | 0;
       $3188 = ~~+HEAPF64[$args68$idx353$val + 8 >> 3];
       if (($3188 | 0) < 0) {
        label = 1093;
        break L1;
       }
       $3238 = HEAP32[$args68$idx353$val + 24 >> 2] | 0;
       HEAP32[$elements75 >> 2] = 0;
       HEAP32[$278 >> 2] = 0;
       HEAP32[$279 >> 2] = 0;
       $3239 = $3238 + 28 | 0;
       $3240 = $3239 + 4 | 0;
       if (((HEAP32[$3240 >> 2] | 0) - (HEAP32[$3239 >> 2] | 0) | 0) != 4) {
        label = 1116;
        break L1;
       }
       if ($3188) {
        if ($3188 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(181, $elements75 | 0);
         $3302 = __THREW__;
         __THREW__ = 0;
         if ($3302 & 1) {
          label = 1131;
          break L1;
         }
         $$idx1$val$i$i$i$i1135 = HEAP32[$279 >> 2] | 0;
         $this$idx$val$i$i1136 = HEAP32[$elements75 >> 2] | 0;
        } else {
         $$idx1$val$i$i$i$i1135 = 0;
         $this$idx$val$i$i1136 = 0;
        }
        $3304 = $$idx1$val$i$i$i$i1135 - $this$idx$val$i$i1136 | 0;
        if ($3304 >> 2 >>> 0 < 536870911) {
         $3310 = $3304 >> 1;
         $3312 = $3310 >>> 0 < $3188 >>> 0 ? $3188 : $3310;
         $3315 = (HEAP32[$278 >> 2] | 0) - $this$idx$val$i$i1136 >> 2;
         if (!$3312) {
          $$0$i813$i$i = 0;
          $3322 = 0;
          $3323 = $3315;
         } else {
          $$0$i812$i$i = $3312;
          $6320 = $3315;
          label = 1145;
         }
        } else {
         $$0$i812$i$i = 1073741823;
         $6320 = (HEAP32[$278 >> 2] | 0) - $this$idx$val$i$i1136 >> 2;
         label = 1145;
        }
        if ((label | 0) == 1145) {
         label = 0;
         __THREW__ = 0;
         $3318 = invoke_ii(67, $$0$i812$i$i << 2 | 0) | 0;
         $3319 = __THREW__;
         __THREW__ = 0;
         if ($3319 & 1) {
          label = 1131;
          break L1;
         }
         $$0$i813$i$i = $$0$i812$i$i;
         $3322 = $3318;
         $3323 = $6320;
        }
        $$0$i5$i$i = $3188;
        $3324 = $3322 + ($3323 << 2) | 0;
        do {
         if (!$3324) $3327 = 0; else {
          HEAP32[$3324 >> 2] = 0;
          $3327 = $3324;
         }
         $3324 = $3327 + 4 | 0;
         $$0$i5$i$i = $$0$i5$i$i + -1 | 0;
        } while (($$0$i5$i$i | 0) != 0);
        $3331 = HEAP32[$elements75 >> 2] | 0;
        $3335 = (HEAP32[$278 >> 2] | 0) - $3331 | 0;
        $3337 = $3322 + ($3323 - ($3335 >> 2) << 2) | 0;
        _memcpy($3337 | 0, $3331 | 0, $3335 | 0) | 0;
        HEAP32[$elements75 >> 2] = $3337;
        HEAP32[$278 >> 2] = $3324;
        HEAP32[$279 >> 2] = $3322 + ($$0$i813$i$i << 2);
        if ($3331) __ZdlPv($3331);
        if (($3188 | 0) > 0) {
         $3340 = $3238 + 20 | 0;
         $3341 = $3238 + 24 | 0;
         $3342 = $3238 + 40 | 0;
         $3343 = $$idx$val$i839 + -32 | 0;
         $3344 = $3238 + 8 | 0;
         $3345 = $3238 + 12 | 0;
         $i77$03293 = 0;
         do {
          __THREW__ = 0;
          $3350 = invoke_iiiiii(13, $this | 0, HEAP32[$202 >> 2] | 0, HEAP32[$3340 >> 2] | 0, HEAP32[$3341 >> 2] | 0, HEAP32[$3342 >> 2] | 0) | 0;
          $3351 = __THREW__;
          __THREW__ = 0;
          if ($3351 & 1) {
           label = 1130;
           break L1;
          }
          $3353 = HEAP32[$$idx261 >> 2] | 0;
          do if (($3353 | 0) == (HEAP32[$3343 >> 2] | 0)) {
           $this$idx2$val$i$i1152 = HEAP32[$3104 >> 2] | 0;
           $3363 = ($3353 - $this$idx2$val$i$i1152 >> 2) + 1 | 0;
           if ($3363 >>> 0 > 1073741823) {
            __THREW__ = 0;
            invoke_vi(181, $3104 | 0);
            $3365 = __THREW__;
            __THREW__ = 0;
            if ($3365 & 1) {
             label = 1130;
             break L1;
            }
            $$idx1$val$i$i$i$i1155 = HEAP32[$3343 >> 2] | 0;
            $this$idx$val$i$i1156 = HEAP32[$3104 >> 2] | 0;
           } else {
            $$idx1$val$i$i$i$i1155 = $3353;
            $this$idx$val$i$i1156 = $this$idx2$val$i$i1152;
           }
           $3368 = $this$idx$val$i$i1156;
           $3369 = $$idx1$val$i$i$i$i1155 - $3368 | 0;
           if ($3369 >> 2 >>> 0 < 536870911) {
            $3375 = $3369 >> 1;
            $3377 = $3375 >>> 0 < $3363 >>> 0 ? $3363 : $3375;
            $3380 = (HEAP32[$$idx261 >> 2] | 0) - $3368 >> 2;
            if (!$3377) {
             $$0$i8$i$i1162 = 0;
             $3387 = 0;
             $3388 = $3380;
            } else {
             $$0$i7$i$i1161 = $3377;
             $6321 = $3380;
             label = 1166;
            }
           } else {
            $$0$i7$i$i1161 = 1073741823;
            $6321 = (HEAP32[$$idx261 >> 2] | 0) - $3368 >> 2;
            label = 1166;
           }
           if ((label | 0) == 1166) {
            label = 0;
            __THREW__ = 0;
            $3383 = invoke_ii(67, $$0$i7$i$i1161 << 2 | 0) | 0;
            $3384 = __THREW__;
            __THREW__ = 0;
            if ($3384 & 1) {
             label = 1130;
             break L1;
            }
            $$0$i8$i$i1162 = $$0$i7$i$i1161;
            $3387 = $3383;
            $3388 = $6321;
           }
           $3386 = $3387 + ($3388 << 2) | 0;
           if ($3386) HEAP32[$3386 >> 2] = $3350;
           $3392 = HEAP32[$3104 >> 2] | 0;
           $3396 = (HEAP32[$$idx261 >> 2] | 0) - $3392 | 0;
           $3398 = $3387 + ($3388 - ($3396 >> 2) << 2) | 0;
           _memcpy($3398 | 0, $3392 | 0, $3396 | 0) | 0;
           HEAP32[$3104 >> 2] = $3398;
           HEAP32[$$idx261 >> 2] = $3387 + ($3388 + 1 << 2);
           HEAP32[$3343 >> 2] = $3387 + ($$0$i8$i$i1162 << 2);
           if (!$3392) break;
           __ZdlPv($3392);
          } else {
           if (!$3353) $3358 = 0; else {
            HEAP32[$3353 >> 2] = $3350;
            $3358 = HEAP32[$$idx261 >> 2] | 0;
           }
           HEAP32[$$idx261 >> 2] = $3358 + 4;
          } while (0);
          $3400 = $3350 + 28 | 0;
          L1187 : do if (($3400 | 0) != ($3344 | 0)) {
           $__t$idx$val$i$i = HEAP32[$3344 >> 2] | 0;
           $3402 = $3350 + 36 | 0;
           L1189 : do if (!(HEAP32[$3402 >> 2] | 0)) $__first$04$ph$i$i$i = $__t$idx$val$i$i; else {
            $3405 = HEAP32[$3400 >> 2] | 0;
            $3406 = $3350 + 32 | 0;
            HEAP32[$3400 >> 2] = $3406;
            HEAP32[(HEAP32[$3406 >> 2] | 0) + 8 >> 2] = 0;
            HEAP32[$3406 >> 2] = 0;
            HEAP32[$3402 >> 2] = 0;
            $3410 = HEAP32[$3405 + 4 >> 2] | 0;
            if (!$3410) $__cache$0$ph$i$i$i = $3405; else $__cache$0$ph$i$i$i = $3410;
            if (!$__cache$0$ph$i$i$i) {
             $__first$04$ph$i$i$i = $__t$idx$val$i$i;
             break;
            }
            $3413 = $3350 + 32 | 0;
            $__cache$013$i$i$i = $__cache$0$ph$i$i$i;
            $__first$0312$i$i$i = $__t$idx$val$i$i;
            while (1) {
             if (($__first$0312$i$i$i | 0) == ($3345 | 0)) break;
             $3420 = $__cache$013$i$i$i + 16 | 0;
             HEAP32[$3420 >> 2] = HEAP32[$__first$0312$i$i$i + 16 >> 2];
             HEAP32[$__cache$013$i$i$i + 20 >> 2] = HEAP32[$__first$0312$i$i$i + 20 >> 2];
             $3424 = $__cache$013$i$i$i + 8 | 0;
             $3425 = HEAP32[$3424 >> 2] | 0;
             do if (!$3425) $$0$i$i$i$i1171 = 0; else {
              $3427 = HEAP32[$3425 >> 2] | 0;
              if (($3427 | 0) == ($__cache$013$i$i$i | 0)) {
               HEAP32[$3425 >> 2] = 0;
               $3430 = HEAP32[$3425 + 4 >> 2] | 0;
               if (!$3430) {
                $$0$i$i$i$i1171 = $3425;
                break;
               } else $$0$i1$i$i$i$i = $3430;
               while (1) {
                $3432 = HEAP32[$$0$i1$i$i$i$i >> 2] | 0;
                if ($3432) {
                 $$0$i1$i$i$i$i = $3432;
                 continue;
                }
                $3435 = HEAP32[$$0$i1$i$i$i$i + 4 >> 2] | 0;
                if (!$3435) break; else $$0$i1$i$i$i$i = $3435;
               }
               $$0$i$i$i$i1171 = $$0$i1$i$i$i$i;
               break;
              } else {
               HEAP32[$3425 + 4 >> 2] = 0;
               if (!$3427) {
                $$0$i$i$i$i1171 = $3425;
                break;
               } else $$0$i$i7$i$i$i = $3427;
               while (1) {
                $3439 = HEAP32[$$0$i$i7$i$i$i >> 2] | 0;
                if ($3439) {
                 $$0$i$i7$i$i$i = $3439;
                 continue;
                }
                $3442 = HEAP32[$$0$i$i7$i$i$i + 4 >> 2] | 0;
                if (!$3442) break; else $$0$i$i7$i$i$i = $3442;
               }
               $$0$i$i$i$i1171 = $$0$i$i7$i$i$i;
               break;
              }
             } while (0);
             $3444 = HEAP32[$3413 >> 2] | 0;
             if (!$3444) {
              $$0$i$i23$i$i$i = $3406;
              $3454 = $3406;
             } else {
              $__v$idx$val$i$i17$i$i$i = HEAP32[$3420 >> 2] | 0;
              $__nd$0$in$i$i19$i$i$i = $3444;
              while (1) if ($__v$idx$val$i$i17$i$i$i >>> 0 < (HEAP32[$__nd$0$in$i$i19$i$i$i + 16 >> 2] | 0) >>> 0) {
               $3448 = HEAP32[$__nd$0$in$i$i19$i$i$i >> 2] | 0;
               if (!$3448) {
                $$0$i$i23$i$i$i = $__nd$0$in$i$i19$i$i$i;
                $3454 = $__nd$0$in$i$i19$i$i$i;
                break;
               } else {
                $__nd$0$in$i$i19$i$i$i = $3448;
                continue;
               }
              } else {
               $3450 = $__nd$0$in$i$i19$i$i$i + 4 | 0;
               $3451 = HEAP32[$3450 >> 2] | 0;
               if (!$3451) {
                $$0$i$i23$i$i$i = $3450;
                $3454 = $__nd$0$in$i$i19$i$i$i;
                break;
               } else {
                $__nd$0$in$i$i19$i$i$i = $3451;
                continue;
               }
              }
             }
             HEAP32[$__cache$013$i$i$i >> 2] = 0;
             HEAP32[$__cache$013$i$i$i + 4 >> 2] = 0;
             HEAP32[$3424 >> 2] = $3454;
             HEAP32[$$0$i$i23$i$i$i >> 2] = $__cache$013$i$i$i;
             $3456 = HEAP32[HEAP32[$3400 >> 2] >> 2] | 0;
             if (!$3456) $3459 = $__cache$013$i$i$i; else {
              HEAP32[$3400 >> 2] = $3456;
              $3459 = HEAP32[$$0$i$i23$i$i$i >> 2] | 0;
             }
             __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3413 >> 2] | 0, $3459);
             HEAP32[$3402 >> 2] = (HEAP32[$3402 >> 2] | 0) + 1;
             $3463 = HEAP32[$__first$0312$i$i$i + 4 >> 2] | 0;
             if (!$3463) {
              $$0$i$i12$i$i$i = $__first$0312$i$i$i;
              while (1) {
               $3468 = HEAP32[$$0$i$i12$i$i$i + 8 >> 2] | 0;
               if ((HEAP32[$3468 >> 2] | 0) == ($$0$i$i12$i$i$i | 0)) {
                $$01$i$i14$i$i$i = $3468;
                break;
               } else $$0$i$i12$i$i$i = $3468;
              }
             } else {
              $$0$i$i$i10$i$i$i = $3463;
              while (1) {
               $3465 = HEAP32[$$0$i$i$i10$i$i$i >> 2] | 0;
               if (!$3465) {
                $$01$i$i14$i$i$i = $$0$i$i$i10$i$i$i;
                break;
               } else $$0$i$i$i10$i$i$i = $3465;
              }
             }
             if (!$$0$i$i$i$i1171) {
              $__first$04$ph$i$i$i = $$01$i$i14$i$i$i;
              break L1189;
             } else {
              $__cache$013$i$i$i = $$0$i$i$i$i1171;
              $__first$0312$i$i$i = $$01$i$i14$i$i$i;
             }
            }
            $3416 = HEAP32[$__cache$013$i$i$i + 8 >> 2] | 0;
            if (!$3416) $__cache$2$lcssa$i$i$i = $__cache$013$i$i$i; else {
             $3473 = $3416;
             while (1) {
              $3474 = HEAP32[$3473 + 8 >> 2] | 0;
              if (!$3474) break; else $3473 = $3474;
             }
             $__cache$2$lcssa$i$i$i = $3473;
            }
            __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3400, $__cache$2$lcssa$i$i$i);
            break L1187;
           } while (0);
           if (($__first$04$ph$i$i$i | 0) == ($3345 | 0)) break;
           $3477 = $3350 + 32 | 0;
           $3478 = $3350 + 32 | 0;
           $__first$046$i$i$i = $__first$04$ph$i$i$i;
           while (1) {
            $3479 = $__first$046$i$i$i + 16 | 0;
            $3480 = HEAP32[$3477 >> 2] | 0;
            if (!$3480) {
             $$0$i$i6$i$i$i = $3478;
             $3505 = $3478;
            } else {
             $__v$idx$val$i$i$i$i$i = HEAP32[$3479 >> 2] | 0;
             $__nd$0$in$i$i$i$i$i = $3480;
             while (1) if ($__v$idx$val$i$i$i$i$i >>> 0 < (HEAP32[$__nd$0$in$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
              $3484 = HEAP32[$__nd$0$in$i$i$i$i$i >> 2] | 0;
              if (!$3484) {
               $$0$i$i6$i$i$i = $__nd$0$in$i$i$i$i$i;
               $3505 = $__nd$0$in$i$i$i$i$i;
               break;
              } else {
               $__nd$0$in$i$i$i$i$i = $3484;
               continue;
              }
             } else {
              $3486 = $__nd$0$in$i$i$i$i$i + 4 | 0;
              $3487 = HEAP32[$3486 >> 2] | 0;
              if (!$3487) {
               $$0$i$i6$i$i$i = $3486;
               $3505 = $__nd$0$in$i$i$i$i$i;
               break;
              } else {
               $__nd$0$in$i$i$i$i$i = $3487;
               continue;
              }
             }
            }
            __THREW__ = 0;
            $3489 = invoke_ii(67, 24) | 0;
            $3490 = __THREW__;
            __THREW__ = 0;
            if ($3490 & 1) {
             label = 1129;
             break L1;
            }
            $3493 = $3479;
            $3498 = HEAP32[$3493 + 4 >> 2] | 0;
            $3499 = $3489 + 16 | 0;
            HEAP32[$3499 >> 2] = HEAP32[$3493 >> 2];
            HEAP32[$3499 + 4 >> 2] = $3498;
            HEAP32[$3489 >> 2] = 0;
            HEAP32[$3489 + 4 >> 2] = 0;
            HEAP32[$3489 + 8 >> 2] = $3505;
            HEAP32[$$0$i$i6$i$i$i >> 2] = $3489;
            $3507 = HEAP32[HEAP32[$3400 >> 2] >> 2] | 0;
            if (!$3507) $3510 = $3489; else {
             HEAP32[$3400 >> 2] = $3507;
             $3510 = HEAP32[$$0$i$i6$i$i$i >> 2] | 0;
            }
            __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3477 >> 2] | 0, $3510);
            HEAP32[$3402 >> 2] = (HEAP32[$3402 >> 2] | 0) + 1;
            $3514 = HEAP32[$__first$046$i$i$i + 4 >> 2] | 0;
            if (!$3514) {
             $$0$i$i$i$i$i1176 = $__first$046$i$i$i;
             while (1) {
              $3519 = HEAP32[$$0$i$i$i$i$i1176 + 8 >> 2] | 0;
              if ((HEAP32[$3519 >> 2] | 0) == ($$0$i$i$i$i$i1176 | 0)) {
               $$01$i$i$i$i$i1178 = $3519;
               break;
              } else $$0$i$i$i$i$i1176 = $3519;
             }
            } else {
             $$0$i$i$i$i$i$i1174 = $3514;
             while (1) {
              $3516 = HEAP32[$$0$i$i$i$i$i$i1174 >> 2] | 0;
              if (!$3516) {
               $$01$i$i$i$i$i1178 = $$0$i$i$i$i$i$i1174;
               break;
              } else $$0$i$i$i$i$i$i1174 = $3516;
             }
            }
            if (($$01$i$i$i$i$i1178 | 0) == ($3345 | 0)) break; else $__first$046$i$i$i = $$01$i$i$i$i$i1178;
           }
          } while (0);
          __THREW__ = 0;
          $3525 = invoke_iii(35, $this | 0, HEAP32[HEAP32[$3239 >> 2] >> 2] | 0) | 0;
          $3526 = __THREW__;
          __THREW__ = 0;
          if ($3526 & 1) {
           label = 1130;
           break L1;
          }
          HEAP32[$3525 + 8 >> 2] = 2;
          HEAPF64[$3525 + 16 >> 3] = +($i77$03293 | 0);
          HEAP8[$3525 + 5 >> 0] = 1;
          HEAP32[$3525 + 40 >> 2] = 0;
          $3533 = $3525 + 28 | 0;
          __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3533, HEAP32[$3525 + 32 >> 2] | 0);
          HEAP32[$3525 + 36 >> 2] = 0;
          $3537 = $3525 + 32 | 0;
          HEAP32[$3533 >> 2] = $3537;
          HEAP32[$3537 >> 2] = 0;
          __THREW__ = 0;
          $3539 = invoke_iii(34, $3400 | 0, HEAP32[$3239 >> 2] | 0) | 0;
          $3540 = __THREW__;
          __THREW__ = 0;
          if ($3540 & 1) {
           label = 1130;
           break L1;
          }
          HEAP32[$3539 >> 2] = $3525;
          HEAP32[(HEAP32[$elements75 >> 2] | 0) + ($i77$03293 << 2) >> 2] = $3350;
          $i77$03293 = $i77$03293 + 1 | 0;
         } while (($i77$03293 | 0) < ($3188 | 0));
        }
       }
       __THREW__ = 0;
       invoke_viii(12, $83 | 0, $this | 0, $elements75 | 0);
       $3545 = __THREW__;
       __THREW__ = 0;
       if ($3545 & 1) {
        label = 1131;
        break L1;
       };
       HEAP32[$200 + 0 >> 2] = HEAP32[$83 + 0 >> 2];
       HEAP32[$200 + 4 >> 2] = HEAP32[$83 + 4 >> 2];
       HEAP32[$200 + 8 >> 2] = HEAP32[$83 + 8 >> 2];
       HEAP32[$200 + 12 >> 2] = HEAP32[$83 + 12 >> 2];
       $3547 = HEAP32[$elements75 >> 2] | 0;
       if (!$3547) {
        $$1136$ph = 0;
        $$313$ph = $$111$ph4195;
        label = 1928;
       } else {
        $3549 = HEAP32[$278 >> 2] | 0;
        if (($3549 | 0) != ($3547 | 0)) HEAP32[$278 >> 2] = $3549 + (~(($3549 + -4 - $3547 | 0) >>> 2) << 2);
        __ZdlPv($3547);
        $$1136$ph = 0;
        $$313$ph = $$111$ph4195;
        label = 1928;
       }
       break;
      }
     case 1:
      {
       HEAP32[$84 >> 2] = 0;
       HEAP32[$280 >> 2] = 0;
       HEAP32[$281 >> 2] = 0;
       __THREW__ = 0;
       $3563 = invoke_ii(67, 8) | 0;
       $3564 = __THREW__;
       __THREW__ = 0;
       if ($3564 & 1) {
        label = 1237;
        break L1;
       }
       HEAP32[$280 >> 2] = $3563;
       HEAP32[$84 >> 2] = $3563;
       HEAP32[$281 >> 2] = $3563 + 8;
       $3567 = ($3563 | 0) == 0;
       if ($3567) $3572 = 0; else {
        HEAP32[$3563 >> 2] = 2;
        $3572 = $3563;
       }
       HEAP32[$3572 + 4 >> 2] = 2;
       $3570 = $3572 + 8 | 0;
       HEAP32[$280 >> 2] = $3570;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 1, $args68 | 0, $84 | 0);
       $6302 = __THREW__;
       __THREW__ = 0;
       if ($6302 & 1) {
        label = 1252;
        break L1;
       }
       if (!$3567) {
        if (($3570 | 0) != ($3563 | 0)) HEAP32[$280 >> 2] = $3572 + (1 - (($3572 + 4 - $3563 | 0) >>> 2) << 2);
        __ZdlPv($3563);
       }
       $args68$idx355$val = HEAP32[$args68 >> 2] | 0;
       $3580 = +Math_pow(+(+HEAPF64[$args68$idx355$val + 8 >> 3]), +(+HEAPF64[$args68$idx355$val + 24 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3580;
       $3583 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3583 >>> 0 > 2146435072 | ($3583 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1243;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3580;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 2:
      {
       HEAP32[$85 >> 2] = 0;
       HEAP32[$282 >> 2] = 0;
       HEAP32[$283 >> 2] = 0;
       __THREW__ = 0;
       $3606 = invoke_ii(67, 4) | 0;
       $3607 = __THREW__;
       __THREW__ = 0;
       if ($3607 & 1) {
        label = 1260;
        break L1;
       }
       HEAP32[$282 >> 2] = $3606;
       HEAP32[$85 >> 2] = $3606;
       HEAP32[$283 >> 2] = $3606 + 4;
       $3610 = ($3606 | 0) == 0;
       if ($3610) $3612 = 0; else {
        HEAP32[$3606 >> 2] = 2;
        $3612 = $3606;
       }
       $3611 = $3612 + 4 | 0;
       HEAP32[$282 >> 2] = $3611;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 2, $args68 | 0, $85 | 0);
       $3613 = __THREW__;
       __THREW__ = 0;
       if ($3613 & 1) {
        label = 1275;
        break L1;
       }
       if (!$3610) {
        if (($3611 | 0) != ($3606 | 0)) HEAP32[$282 >> 2] = $3612 + (0 - (($3612 - $3606 | 0) >>> 2) << 2);
        __ZdlPv($3606);
       }
       $3623 = +Math_floor(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3623;
       $3626 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3626 >>> 0 > 2146435072 | ($3626 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1266;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3623;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 3:
      {
       HEAP32[$86 >> 2] = 0;
       HEAP32[$284 >> 2] = 0;
       HEAP32[$285 >> 2] = 0;
       __THREW__ = 0;
       $3649 = invoke_ii(67, 4) | 0;
       $3650 = __THREW__;
       __THREW__ = 0;
       if ($3650 & 1) {
        label = 1283;
        break L1;
       }
       HEAP32[$284 >> 2] = $3649;
       HEAP32[$86 >> 2] = $3649;
       HEAP32[$285 >> 2] = $3649 + 4;
       $3653 = ($3649 | 0) == 0;
       if ($3653) $3655 = 0; else {
        HEAP32[$3649 >> 2] = 2;
        $3655 = $3649;
       }
       $3654 = $3655 + 4 | 0;
       HEAP32[$284 >> 2] = $3654;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 3, $args68 | 0, $86 | 0);
       $3656 = __THREW__;
       __THREW__ = 0;
       if ($3656 & 1) {
        label = 1298;
        break L1;
       }
       if (!$3653) {
        if (($3654 | 0) != ($3649 | 0)) HEAP32[$284 >> 2] = $3655 + (0 - (($3655 - $3649 | 0) >>> 2) << 2);
        __ZdlPv($3649);
       }
       $3666 = +Math_ceil(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3666;
       $3669 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3669 >>> 0 > 2146435072 | ($3669 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1289;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3666;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 4:
      {
       HEAP32[$87 >> 2] = 0;
       HEAP32[$286 >> 2] = 0;
       HEAP32[$287 >> 2] = 0;
       __THREW__ = 0;
       $3692 = invoke_ii(67, 4) | 0;
       $3693 = __THREW__;
       __THREW__ = 0;
       if ($3693 & 1) {
        label = 1306;
        break L1;
       }
       HEAP32[$286 >> 2] = $3692;
       HEAP32[$87 >> 2] = $3692;
       HEAP32[$287 >> 2] = $3692 + 4;
       $3696 = ($3692 | 0) == 0;
       if ($3696) $3698 = 0; else {
        HEAP32[$3692 >> 2] = 2;
        $3698 = $3692;
       }
       $3697 = $3698 + 4 | 0;
       HEAP32[$286 >> 2] = $3697;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 4, $args68 | 0, $87 | 0);
       $3699 = __THREW__;
       __THREW__ = 0;
       if ($3699 & 1) {
        label = 1321;
        break L1;
       }
       if (!$3696) {
        if (($3697 | 0) != ($3692 | 0)) HEAP32[$286 >> 2] = $3698 + (0 - (($3698 - $3692 | 0) >>> 2) << 2);
        __ZdlPv($3692);
       }
       $3709 = +Math_sqrt(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3709;
       $3712 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3712 >>> 0 > 2146435072 | ($3712 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1312;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3709;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 5:
      {
       HEAP32[$88 >> 2] = 0;
       HEAP32[$288 >> 2] = 0;
       HEAP32[$289 >> 2] = 0;
       __THREW__ = 0;
       $3735 = invoke_ii(67, 4) | 0;
       $3736 = __THREW__;
       __THREW__ = 0;
       if ($3736 & 1) {
        label = 1329;
        break L1;
       }
       HEAP32[$288 >> 2] = $3735;
       HEAP32[$88 >> 2] = $3735;
       HEAP32[$289 >> 2] = $3735 + 4;
       $3739 = ($3735 | 0) == 0;
       if ($3739) $3741 = 0; else {
        HEAP32[$3735 >> 2] = 2;
        $3741 = $3735;
       }
       $3740 = $3741 + 4 | 0;
       HEAP32[$288 >> 2] = $3740;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 5, $args68 | 0, $88 | 0);
       $3742 = __THREW__;
       __THREW__ = 0;
       if ($3742 & 1) {
        label = 1344;
        break L1;
       }
       if (!$3739) {
        if (($3740 | 0) != ($3735 | 0)) HEAP32[$288 >> 2] = $3741 + (0 - (($3741 - $3735 | 0) >>> 2) << 2);
        __ZdlPv($3735);
       }
       $3752 = +Math_sin(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3752;
       $3755 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3755 >>> 0 > 2146435072 | ($3755 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1335;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3752;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 6:
      {
       HEAP32[$89 >> 2] = 0;
       HEAP32[$290 >> 2] = 0;
       HEAP32[$291 >> 2] = 0;
       __THREW__ = 0;
       $3778 = invoke_ii(67, 4) | 0;
       $3779 = __THREW__;
       __THREW__ = 0;
       if ($3779 & 1) {
        label = 1352;
        break L1;
       }
       HEAP32[$290 >> 2] = $3778;
       HEAP32[$89 >> 2] = $3778;
       HEAP32[$291 >> 2] = $3778 + 4;
       $3782 = ($3778 | 0) == 0;
       if ($3782) $3784 = 0; else {
        HEAP32[$3778 >> 2] = 2;
        $3784 = $3778;
       }
       $3783 = $3784 + 4 | 0;
       HEAP32[$290 >> 2] = $3783;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 6, $args68 | 0, $89 | 0);
       $3785 = __THREW__;
       __THREW__ = 0;
       if ($3785 & 1) {
        label = 1367;
        break L1;
       }
       if (!$3782) {
        if (($3783 | 0) != ($3778 | 0)) HEAP32[$290 >> 2] = $3784 + (0 - (($3784 - $3778 | 0) >>> 2) << 2);
        __ZdlPv($3778);
       }
       $3795 = +Math_cos(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3795;
       $3798 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3798 >>> 0 > 2146435072 | ($3798 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1358;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3795;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 7:
      {
       HEAP32[$90 >> 2] = 0;
       HEAP32[$292 >> 2] = 0;
       HEAP32[$293 >> 2] = 0;
       __THREW__ = 0;
       $3821 = invoke_ii(67, 4) | 0;
       $3822 = __THREW__;
       __THREW__ = 0;
       if ($3822 & 1) {
        label = 1375;
        break L1;
       }
       HEAP32[$292 >> 2] = $3821;
       HEAP32[$90 >> 2] = $3821;
       HEAP32[$293 >> 2] = $3821 + 4;
       $3825 = ($3821 | 0) == 0;
       if ($3825) $3827 = 0; else {
        HEAP32[$3821 >> 2] = 2;
        $3827 = $3821;
       }
       $3826 = $3827 + 4 | 0;
       HEAP32[$292 >> 2] = $3826;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 7, $args68 | 0, $90 | 0);
       $3828 = __THREW__;
       __THREW__ = 0;
       if ($3828 & 1) {
        label = 1390;
        break L1;
       }
       if (!$3825) {
        if (($3826 | 0) != ($3821 | 0)) HEAP32[$292 >> 2] = $3827 + (0 - (($3827 - $3821 | 0) >>> 2) << 2);
        __ZdlPv($3821);
       }
       $3838 = +Math_tan(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3838;
       $3841 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3841 >>> 0 > 2146435072 | ($3841 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1381;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3838;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 8:
      {
       HEAP32[$91 >> 2] = 0;
       HEAP32[$294 >> 2] = 0;
       HEAP32[$295 >> 2] = 0;
       __THREW__ = 0;
       $3864 = invoke_ii(67, 4) | 0;
       $3865 = __THREW__;
       __THREW__ = 0;
       if ($3865 & 1) {
        label = 1398;
        break L1;
       }
       HEAP32[$294 >> 2] = $3864;
       HEAP32[$91 >> 2] = $3864;
       HEAP32[$295 >> 2] = $3864 + 4;
       $3868 = ($3864 | 0) == 0;
       if ($3868) $3870 = 0; else {
        HEAP32[$3864 >> 2] = 2;
        $3870 = $3864;
       }
       $3869 = $3870 + 4 | 0;
       HEAP32[$294 >> 2] = $3869;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 8, $args68 | 0, $91 | 0);
       $3871 = __THREW__;
       __THREW__ = 0;
       if ($3871 & 1) {
        label = 1413;
        break L1;
       }
       if (!$3868) {
        if (($3869 | 0) != ($3864 | 0)) HEAP32[$294 >> 2] = $3870 + (0 - (($3870 - $3864 | 0) >>> 2) << 2);
        __ZdlPv($3864);
       }
       $3881 = +Math_asin(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3881;
       $3884 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3884 >>> 0 > 2146435072 | ($3884 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1404;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3881;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 9:
      {
       HEAP32[$92 >> 2] = 0;
       HEAP32[$296 >> 2] = 0;
       HEAP32[$297 >> 2] = 0;
       __THREW__ = 0;
       $3907 = invoke_ii(67, 4) | 0;
       $3908 = __THREW__;
       __THREW__ = 0;
       if ($3908 & 1) {
        label = 1421;
        break L1;
       }
       HEAP32[$296 >> 2] = $3907;
       HEAP32[$92 >> 2] = $3907;
       HEAP32[$297 >> 2] = $3907 + 4;
       $3911 = ($3907 | 0) == 0;
       if ($3911) $3913 = 0; else {
        HEAP32[$3907 >> 2] = 2;
        $3913 = $3907;
       }
       $3912 = $3913 + 4 | 0;
       HEAP32[$296 >> 2] = $3912;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 9, $args68 | 0, $92 | 0);
       $3914 = __THREW__;
       __THREW__ = 0;
       if ($3914 & 1) {
        label = 1436;
        break L1;
       }
       if (!$3911) {
        if (($3912 | 0) != ($3907 | 0)) HEAP32[$296 >> 2] = $3913 + (0 - (($3913 - $3907 | 0) >>> 2) << 2);
        __ZdlPv($3907);
       }
       $3924 = +Math_acos(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3924;
       $3927 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3927 >>> 0 > 2146435072 | ($3927 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1427;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3924;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 10:
      {
       HEAP32[$93 >> 2] = 0;
       HEAP32[$298 >> 2] = 0;
       HEAP32[$299 >> 2] = 0;
       __THREW__ = 0;
       $3950 = invoke_ii(67, 4) | 0;
       $3951 = __THREW__;
       __THREW__ = 0;
       if ($3951 & 1) {
        label = 1444;
        break L1;
       }
       HEAP32[$298 >> 2] = $3950;
       HEAP32[$93 >> 2] = $3950;
       HEAP32[$299 >> 2] = $3950 + 4;
       $3954 = ($3950 | 0) == 0;
       if ($3954) $3956 = 0; else {
        HEAP32[$3950 >> 2] = 2;
        $3956 = $3950;
       }
       $3955 = $3956 + 4 | 0;
       HEAP32[$298 >> 2] = $3955;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 10, $args68 | 0, $93 | 0);
       $3957 = __THREW__;
       __THREW__ = 0;
       if ($3957 & 1) {
        label = 1459;
        break L1;
       }
       if (!$3954) {
        if (($3955 | 0) != ($3950 | 0)) HEAP32[$298 >> 2] = $3956 + (0 - (($3956 - $3950 | 0) >>> 2) << 2);
        __ZdlPv($3950);
       }
       $3967 = +Math_atan(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $3967;
       $3970 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($3970 >>> 0 > 2146435072 | ($3970 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1450;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $3967;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 11:
      {
       $args68$idx365$val = HEAP32[$args68 >> 2] | 0;
       switch (HEAP32[$args68$idx365$val >> 2] | 0) {
       case 1:
        {
         __THREW__ = 0;
         invoke_viii(3, $97 | 0, 37936, 7);
         $4000 = __THREW__;
         __THREW__ = 0;
         if ($4000 & 1) {
          label = 1080;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(14, $96 | 0, $this | 0, $97 | 0);
         $4002 = __THREW__;
         __THREW__ = 0;
         if ($4002 & 1) {
          label = 1471;
          break L1;
         };
         HEAP32[$200 + 0 >> 2] = HEAP32[$96 + 0 >> 2];
         HEAP32[$200 + 4 >> 2] = HEAP32[$96 + 4 >> 2];
         HEAP32[$200 + 8 >> 2] = HEAP32[$96 + 8 >> 2];
         HEAP32[$200 + 12 >> 2] = HEAP32[$96 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($97);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4195;
         label = 1928;
         break L1124;
         break;
        }
       case 2:
        {
         __THREW__ = 0;
         invoke_viii(3, $99 | 0, 39056, 6);
         $4006 = __THREW__;
         __THREW__ = 0;
         if ($4006 & 1) {
          label = 1080;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(14, $98 | 0, $this | 0, $99 | 0);
         $4008 = __THREW__;
         __THREW__ = 0;
         if ($4008 & 1) {
          label = 1475;
          break L1;
         };
         HEAP32[$200 + 0 >> 2] = HEAP32[$98 + 0 >> 2];
         HEAP32[$200 + 4 >> 2] = HEAP32[$98 + 4 >> 2];
         HEAP32[$200 + 8 >> 2] = HEAP32[$98 + 8 >> 2];
         HEAP32[$200 + 12 >> 2] = HEAP32[$98 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($99);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4195;
         label = 1928;
         break L1124;
         break;
        }
       case 0:
        {
         __THREW__ = 0;
         invoke_viii(3, $95 | 0, 37928, 4);
         $3994 = __THREW__;
         __THREW__ = 0;
         if ($3994 & 1) {
          label = 1080;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(14, $94 | 0, $this | 0, $95 | 0);
         $3996 = __THREW__;
         __THREW__ = 0;
         if ($3996 & 1) {
          label = 1467;
          break L1;
         };
         HEAP32[$200 + 0 >> 2] = HEAP32[$94 + 0 >> 2];
         HEAP32[$200 + 4 >> 2] = HEAP32[$94 + 4 >> 2];
         HEAP32[$200 + 8 >> 2] = HEAP32[$94 + 8 >> 2];
         HEAP32[$200 + 12 >> 2] = HEAP32[$94 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($95);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4195;
         label = 1928;
         break L1124;
         break;
        }
       case 17:
        {
         __THREW__ = 0;
         invoke_viii(3, $103 | 0, 37960, 8);
         $4018 = __THREW__;
         __THREW__ = 0;
         if ($4018 & 1) {
          label = 1080;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(14, $102 | 0, $this | 0, $103 | 0);
         $4020 = __THREW__;
         __THREW__ = 0;
         if ($4020 & 1) {
          label = 1483;
          break L1;
         };
         HEAP32[$200 + 0 >> 2] = HEAP32[$102 + 0 >> 2];
         HEAP32[$200 + 4 >> 2] = HEAP32[$102 + 4 >> 2];
         HEAP32[$200 + 8 >> 2] = HEAP32[$102 + 8 >> 2];
         HEAP32[$200 + 12 >> 2] = HEAP32[$102 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($103);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4195;
         label = 1928;
         break L1124;
         break;
        }
       case 18:
        {
         __THREW__ = 0;
         invoke_viii(3, $105 | 0, 37976, 6);
         $4024 = __THREW__;
         __THREW__ = 0;
         if ($4024 & 1) {
          label = 1080;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(14, $104 | 0, $this | 0, $105 | 0);
         $4026 = __THREW__;
         __THREW__ = 0;
         if ($4026 & 1) {
          label = 1487;
          break L1;
         };
         HEAP32[$200 + 0 >> 2] = HEAP32[$104 + 0 >> 2];
         HEAP32[$200 + 4 >> 2] = HEAP32[$104 + 4 >> 2];
         HEAP32[$200 + 8 >> 2] = HEAP32[$104 + 8 >> 2];
         HEAP32[$200 + 12 >> 2] = HEAP32[$104 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($105);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4195;
         label = 1928;
         break L1124;
         break;
        }
       case 16:
        {
         __THREW__ = 0;
         invoke_viii(3, $101 | 0, 37952, 5);
         $4012 = __THREW__;
         __THREW__ = 0;
         if ($4012 & 1) {
          label = 1080;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(14, $100 | 0, $this | 0, $101 | 0);
         $4014 = __THREW__;
         __THREW__ = 0;
         if ($4014 & 1) {
          label = 1479;
          break L1;
         };
         HEAP32[$200 + 0 >> 2] = HEAP32[$100 + 0 >> 2];
         HEAP32[$200 + 4 >> 2] = HEAP32[$100 + 4 >> 2];
         HEAP32[$200 + 8 >> 2] = HEAP32[$100 + 8 >> 2];
         HEAP32[$200 + 12 >> 2] = HEAP32[$100 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($101);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4195;
         label = 1928;
         break L1124;
         break;
        }
       case 19:
        {
         __THREW__ = 0;
         invoke_viii(3, $107 | 0, 37984, 6);
         $4030 = __THREW__;
         __THREW__ = 0;
         if ($4030 & 1) {
          label = 1080;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(14, $106 | 0, $this | 0, $107 | 0);
         $4032 = __THREW__;
         __THREW__ = 0;
         if ($4032 & 1) {
          label = 1491;
          break L1;
         };
         HEAP32[$200 + 0 >> 2] = HEAP32[$106 + 0 >> 2];
         HEAP32[$200 + 4 >> 2] = HEAP32[$106 + 4 >> 2];
         HEAP32[$200 + 8 >> 2] = HEAP32[$106 + 8 >> 2];
         HEAP32[$200 + 12 >> 2] = HEAP32[$106 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($107);
         $$1136$ph = 0;
         $$313$ph = $$111$ph4195;
         label = 1928;
         break L1124;
         break;
        }
       default:
        {
         $$1136 = 0;
         $$313 = $$111$ph4195;
         $4974 = $args68$idx365$val;
         break L1124;
        }
       }
       break;
      }
     case 12:
      {
       HEAP32[$108 >> 2] = 0;
       HEAP32[$300 >> 2] = 0;
       HEAP32[$301 >> 2] = 0;
       __THREW__ = 0;
       $4036 = invoke_ii(67, 8) | 0;
       $4037 = __THREW__;
       __THREW__ = 0;
       if ($4037 & 1) {
        label = 1495;
        break L1;
       }
       HEAP32[$300 >> 2] = $4036;
       HEAP32[$108 >> 2] = $4036;
       HEAP32[$301 >> 2] = $4036 + 8;
       $4040 = ($4036 | 0) == 0;
       if ($4040) $4045 = 0; else {
        HEAP32[$4036 >> 2] = 17;
        $4045 = $4036;
       }
       HEAP32[$4045 + 4 >> 2] = 16;
       $4043 = $4045 + 8 | 0;
       HEAP32[$300 >> 2] = $4043;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 12, $args68 | 0, $108 | 0);
       $6299 = __THREW__;
       __THREW__ = 0;
       if ($6299 & 1) {
        label = 1504;
        break L1;
       }
       if (!$4040) {
        if (($4043 | 0) != ($4036 | 0)) HEAP32[$300 >> 2] = $4045 + (1 - (($4045 + 4 - $4036 | 0) >>> 2) << 2);
        __ZdlPv($4036);
       }
       $args68$idx369$val = HEAP32[$args68 >> 2] | 0;
       $4050 = HEAP32[$args68$idx369$val + 8 >> 2] | 0;
       $4051 = $4050 + 28 | 0;
       if (((HEAP32[$4051 + 4 >> 2] | 0) - (HEAP32[$4051 >> 2] | 0) | 0) != 4) {
        label = 1501;
        break L1;
       }
       $4077 = HEAP32[$args68$idx369$val + 24 >> 2] | 0;
       $4078 = $4077 + 8 | 0;
       if ((HEAP32[$4077 + 12 >> 2] | 0) == (HEAP32[$4078 >> 2] | 0)) {
        HEAP32[$111 >> 2] = 0;
        HEAP32[$302 >> 2] = 0;
        HEAP32[$303 >> 2] = 0;
        __THREW__ = 0;
        invoke_viii(12, $110 | 0, $this | 0, $111 | 0);
        $4080 = __THREW__;
        __THREW__ = 0;
        if ($4080 & 1) {
         label = 1514;
         break L1;
        };
        HEAP32[$200 + 0 >> 2] = HEAP32[$110 + 0 >> 2];
        HEAP32[$200 + 4 >> 2] = HEAP32[$110 + 4 >> 2];
        HEAP32[$200 + 8 >> 2] = HEAP32[$110 + 8 >> 2];
        HEAP32[$200 + 12 >> 2] = HEAP32[$110 + 12 >> 2];
        $$1136$ph = 0;
        $$313$ph = $$111$ph4195;
        label = 1928;
        break L1124;
       }
       HEAP32[$1798 >> 2] = 3;
       HEAP32[$3101 + 0 >> 2] = HEAP32[$args68$idx369$val + 0 >> 2];
       HEAP32[$3101 + 4 >> 2] = HEAP32[$args68$idx369$val + 4 >> 2];
       HEAP32[$3101 + 8 >> 2] = HEAP32[$args68$idx369$val + 8 >> 2];
       HEAP32[$3101 + 12 >> 2] = HEAP32[$args68$idx369$val + 12 >> 2];
       $4084 = $$idx$val$i839 + -88 | 0;
       $4085 = $args68$idx369$val + 16 | 0;
       HEAP32[$4084 + 0 >> 2] = HEAP32[$4085 + 0 >> 2];
       HEAP32[$4084 + 4 >> 2] = HEAP32[$4085 + 4 >> 2];
       HEAP32[$4084 + 8 >> 2] = HEAP32[$4085 + 8 >> 2];
       HEAP32[$4084 + 12 >> 2] = HEAP32[$4085 + 12 >> 2];
       $4086 = HEAP32[$3104 >> 2] | 0;
       $4087 = HEAP32[$$idx261 >> 2] | 0;
       if (($4087 | 0) != ($4086 | 0)) HEAP32[$$idx261 >> 2] = $4087 + (~(($4087 + -4 - $4086 | 0) >>> 2) << 2);
       HEAP32[$3102 >> 2] = 0;
       $4093 = HEAP32[HEAP32[$4078 >> 2] >> 2] | 0;
       HEAP32[$304 >> 2] = 0;
       HEAP32[$305 >> 2] = 0;
       HEAP32[$bindings83 >> 2] = $306;
       $$idx$val$i$i1617 = HEAP32[$4050 + 8 >> 2] | 0;
       $4095 = $4050 + 12 | 0;
       if (($$idx$val$i$i1617 | 0) != ($4095 | 0)) {
        $$idx$val$i15$i$i1620 = $$idx$val$i$i1617;
        while (1) {
         __THREW__ = 0;
         $4097 = invoke_ii(67, 24) | 0;
         $4098 = __THREW__;
         __THREW__ = 0;
         if ($4098 & 1) {
          label = 1548;
          break L1;
         }
         $4102 = $$idx$val$i15$i$i1620 + 16 | 0;
         $4104 = HEAP32[$4102 >> 2] | 0;
         $4107 = HEAP32[$4102 + 4 >> 2] | 0;
         $4108 = $4097 + 16 | 0;
         HEAP32[$4108 >> 2] = $4104;
         HEAP32[$4108 + 4 >> 2] = $4107;
         $4112 = $4104;
         $$pre$i$i$i$i$i$i1622 = HEAP32[$306 >> 2] | 0;
         do if ((HEAP32[$bindings83 >> 2] | 0) == ($306 | 0)) {
          $4125 = $306;
          label = 1525;
         } else {
          $4114 = ($$pre$i$i$i$i$i$i1622 | 0) == 0;
          if ($4114) {
           $$0$i$i$i$i$i$i$i$i1626 = $306;
           while (1) {
            $4119 = HEAP32[$$0$i$i$i$i$i$i$i$i1626 + 8 >> 2] | 0;
            if ((HEAP32[$4119 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i1626 | 0)) $$0$i$i$i$i$i$i$i$i1626 = $4119; else {
             $$01$i$i$i$i$i$i$i$i1628 = $4119;
             break;
            }
           }
          } else {
           $$0$i$i$i$i$i$i$i$i$i1624 = $$pre$i$i$i$i$i$i1622;
           while (1) {
            $4116 = HEAP32[$$0$i$i$i$i$i$i$i$i$i1624 + 4 >> 2] | 0;
            if (!$4116) {
             $$01$i$i$i$i$i$i$i$i1628 = $$0$i$i$i$i$i$i$i$i$i1624;
             break;
            } else $$0$i$i$i$i$i$i$i$i$i1624 = $4116;
           }
          }
          if ((HEAP32[$$01$i$i$i$i$i$i$i$i1628 + 16 >> 2] | 0) >>> 0 < $4112 >>> 0) {
           $4125 = $$01$i$i$i$i$i$i$i$i1628;
           label = 1525;
           break;
          }
          if ($4114) {
           HEAP32[$0 >> 2] = $306;
           $$0$i$i$i$i1$i$i1637 = $306;
           $4139 = $306;
           break;
          } else $__nd$0$in$i21$i$i$i$i$i$i1633 = $$pre$i$i$i$i$i$i1622;
          while (1) {
           $$idx2$val$i23$i$i$i$i$i$i1635 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i1633 + 16 >> 2] | 0;
           if ($4112 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i1635 >>> 0) {
            $4129 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i1633 >> 2] | 0;
            if (!$4129) {
             label = 1531;
             break;
            } else {
             $__nd$0$in$i21$i$i$i$i$i$i1633 = $4129;
             continue;
            }
           }
           if ($$idx2$val$i23$i$i$i$i$i$i1635 >>> 0 >= $4112 >>> 0) {
            label = 1535;
            break;
           }
           $4132 = $__nd$0$in$i21$i$i$i$i$i$i1633 + 4 | 0;
           $4133 = HEAP32[$4132 >> 2] | 0;
           if (!$4133) {
            label = 1534;
            break;
           } else $__nd$0$in$i21$i$i$i$i$i$i1633 = $4133;
          }
          if ((label | 0) == 1531) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i1633;
           $$0$i$i$i$i1$i$i1637 = $__nd$0$in$i21$i$i$i$i$i$i1633;
           $4139 = $__nd$0$in$i21$i$i$i$i$i$i1633;
           break;
          } else if ((label | 0) == 1534) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i1633;
           $$0$i$i$i$i1$i$i1637 = $4132;
           $4139 = $__nd$0$in$i21$i$i$i$i$i$i1633;
           break;
          } else if ((label | 0) == 1535) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i1633;
           $$0$i$i$i$i1$i$i1637 = $0;
           $4139 = $__nd$0$in$i21$i$i$i$i$i$i1633;
           break;
          }
         } while (0);
         do if ((label | 0) == 1525) {
          label = 0;
          if (!$$pre$i$i$i$i$i$i1622) {
           HEAP32[$0 >> 2] = $306;
           $$0$i$i$i$i1$i$i1637 = $306;
           $4139 = $306;
           break;
          } else {
           HEAP32[$0 >> 2] = $4125;
           $$0$i$i$i$i1$i$i1637 = $4125 + 4 | 0;
           $4139 = $4125;
           break;
          }
         } while (0);
         $4135 = HEAP32[$$0$i$i$i$i1$i$i1637 >> 2] | 0;
         do if (!$4135) {
          HEAP32[$4097 >> 2] = 0;
          HEAP32[$4097 + 4 >> 2] = 0;
          HEAP32[$4097 + 8 >> 2] = $4139;
          HEAP32[$$0$i$i$i$i1$i$i1637 >> 2] = $4097;
          $4141 = HEAP32[HEAP32[$bindings83 >> 2] >> 2] | 0;
          if (!$4141) $4144 = $4097; else {
           HEAP32[$bindings83 >> 2] = $4141;
           $4144 = HEAP32[$$0$i$i$i$i1$i$i1637 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$304 >> 2] | 0, $4144);
          HEAP32[$305 >> 2] = (HEAP32[$305 >> 2] | 0) + 1;
         } else {
          if (($4135 | 0) == ($4097 | 0) | ($4097 | 0) == 0) break;
          __ZdlPv($4097);
         } while (0);
         $4150 = HEAP32[$$idx$val$i15$i$i1620 + 4 >> 2] | 0;
         if (!$4150) {
          $$0$i$i$i$i$i1647 = $$idx$val$i15$i$i1620;
          while (1) {
           $4155 = HEAP32[$$0$i$i$i$i$i1647 + 8 >> 2] | 0;
           if ((HEAP32[$4155 >> 2] | 0) == ($$0$i$i$i$i$i1647 | 0)) {
            $$01$i$i$i$i$i1649 = $4155;
            break;
           } else $$0$i$i$i$i$i1647 = $4155;
          }
         } else {
          $$0$i$i$i$i$i$i1645 = $4150;
          while (1) {
           $4152 = HEAP32[$$0$i$i$i$i$i$i1645 >> 2] | 0;
           if (!$4152) {
            $$01$i$i$i$i$i1649 = $$0$i$i$i$i$i$i1645;
            break;
           } else $$0$i$i$i$i$i$i1645 = $4152;
          }
         }
         if (($$01$i$i$i$i$i1649 | 0) == ($4095 | 0)) break; else $$idx$val$i15$i$i1620 = $$01$i$i$i$i$i1649;
        }
       }
       __THREW__ = 0;
       $4163 = invoke_iii(34, $bindings83 | 0, HEAP32[$4051 >> 2] | 0) | 0;
       $4164 = __THREW__;
       __THREW__ = 0;
       if ($4164 & 1) {
        label = 1552;
        break L1;
       }
       HEAP32[$4163 >> 2] = $4093;
       __THREW__ = 0;
       invoke_viiiiii(19, $194 | 0, $3112 | 0, $4050 | 0, HEAP32[$4050 + 20 >> 2] | 0, HEAP32[$4050 + 24 >> 2] | 0, $bindings83 | 0);
       $4170 = __THREW__;
       __THREW__ = 0;
       if ($4170 & 1) {
        label = 1552;
        break L1;
       }
       $4173 = HEAP32[$4050 + 40 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$304 >> 2] | 0);
       $$1136$ph = 1;
       $$313$ph = $4173;
       label = 1928;
       break;
      }
     case 13:
      {
       HEAP32[$112 >> 2] = 0;
       HEAP32[$307 >> 2] = 0;
       HEAP32[$308 >> 2] = 0;
       __THREW__ = 0;
       $4178 = invoke_ii(67, 8) | 0;
       $4179 = __THREW__;
       __THREW__ = 0;
       if ($4179 & 1) {
        label = 1556;
        break L1;
       }
       HEAP32[$307 >> 2] = $4178;
       HEAP32[$112 >> 2] = $4178;
       HEAP32[$308 >> 2] = $4178 + 8;
       $4182 = ($4178 | 0) == 0;
       if ($4182) $4187 = 0; else {
        HEAP32[$4178 >> 2] = 18;
        $4187 = $4178;
       }
       HEAP32[$4187 + 4 >> 2] = 19;
       $4185 = $4187 + 8 | 0;
       HEAP32[$307 >> 2] = $4185;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 13, $args68 | 0, $112 | 0);
       $6296 = __THREW__;
       __THREW__ = 0;
       if ($6296 & 1) {
        label = 1564;
        break L1;
       }
       if (!$4182) {
        if (($4185 | 0) != ($4178 | 0)) HEAP32[$307 >> 2] = $4187 + (1 - (($4187 + 4 - $4178 | 0) >>> 2) << 2);
        __ZdlPv($4178);
       }
       $args68$idx371$val = HEAP32[$args68 >> 2] | 0;
       $4194 = HEAP32[$args68$idx371$val + 24 >> 2] | 0;
       __THREW__ = 0;
       invoke_vii(60, $113 | 0, HEAP32[$args68$idx371$val + 8 >> 2] | 0);
       $4195 = __THREW__;
       __THREW__ = 0;
       if ($4195 & 1) {
        label = 1080;
        break L1;
       }
       $4197 = HEAP32[$113 >> 2] | 0;
       L1508 : do if (($4197 | 0) == ($309 | 0)) $found$0$off0 = 0; else {
        $4199 = $4194 + 8 | 0;
        $4200 = HEAP8[$4199 >> 0] | 0;
        $4202 = ($4200 & 1) == 0;
        $4204 = ($4200 & 255) >>> 1;
        $4205 = $4199 + 1 | 0;
        $4206 = $4194 + 16 | 0;
        $4207 = $4194 + 12 | 0;
        $4215 = $4197;
        while (1) {
         $4216 = HEAP32[$4215 + 16 >> 2] | 0;
         $4217 = HEAP8[$4216 >> 0] | 0;
         $4219 = ($4217 & 1) == 0;
         if ($4219) $4225 = ($4217 & 255) >>> 1; else $4225 = HEAP32[$4216 + 4 >> 2] | 0;
         if ($4202) $4227 = $4204; else $4227 = HEAP32[$4207 >> 2] | 0;
         L1519 : do if (($4225 | 0) == ($4227 | 0)) {
          if ($4219) $4240 = $4216 + 1 | 0; else $4240 = HEAP32[$4216 + 8 >> 2] | 0;
          if ($4202) $4241 = $4205; else $4241 = HEAP32[$4206 >> 2] | 0;
          if (!$4219) if (!(_memcmp($4240, $4241, $4225) | 0)) {
           $found$0$off0 = 1;
           break L1508;
          } else break;
          if (!$4225) {
           $found$0$off0 = 1;
           break L1508;
          } else {
           $__lhs_sz$03$i = $4225;
           $__lp$04$i = $4240;
           $__rp$05$i = $4241;
          }
          while (1) {
           if ((HEAP8[$__lp$04$i >> 0] | 0) != (HEAP8[$__rp$05$i >> 0] | 0)) break L1519;
           $__lhs_sz$03$i = $__lhs_sz$03$i + -1 | 0;
           if (!$__lhs_sz$03$i) {
            $found$0$off0 = 1;
            break L1508;
           } else {
            $__lp$04$i = $__lp$04$i + 1 | 0;
            $__rp$05$i = $__rp$05$i + 1 | 0;
           }
          }
         } while (0);
         $4245 = HEAP32[$4215 + 4 >> 2] | 0;
         if (!$4245) {
          $$0$i$i1685 = $4215;
          while (1) {
           $4250 = HEAP32[$$0$i$i1685 + 8 >> 2] | 0;
           if ((HEAP32[$4250 >> 2] | 0) == ($$0$i$i1685 | 0)) {
            $$01$i$i1687 = $4250;
            break;
           } else $$0$i$i1685 = $4250;
          }
         } else {
          $$0$i$i$i1684 = $4245;
          while (1) {
           $4247 = HEAP32[$$0$i$i$i1684 >> 2] | 0;
           if (!$4247) {
            $$01$i$i1687 = $$0$i$i$i1684;
            break;
           } else $$0$i$i$i1684 = $4247;
          }
         }
         if (($$01$i$i1687 | 0) == ($309 | 0)) {
          $found$0$off0 = 0;
          break;
         } else $4215 = $$01$i$i1687;
        }
       } while (0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($113, HEAP32[$310 >> 2] | 0);
       HEAP32[$223 >> 2] = 1;
       HEAP8[$201 >> 0] = $found$0$off0;
       HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32801 + 0 >> 0] | 0;
       HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32801 + 1 >> 0] | 0;
       HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32801 + 2 >> 0] | 0;
       HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32801 + 3 >> 0] | 0;
       HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32801 + 4 >> 0] | 0;
       HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32801 + 5 >> 0] | 0;
       HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32801 + 6 >> 0] | 0;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 14:
      {
       $args68$idx$val = HEAP32[$args68 >> 2] | 0;
       if (((HEAP32[$274 >> 2] | 0) - $args68$idx$val | 0) != 16) {
        label = 1591;
        break L1;
       }
       $4271 = HEAP32[$args68$idx$val + 8 >> 2] | 0;
       $4272 = HEAP32[$args68$idx$val >> 2] | 0;
       if (($4272 | 0) == 18) {
        __THREW__ = 0;
        invoke_vii(60, $fields88 | 0, $4271 | 0);
        $4273 = __THREW__;
        __THREW__ = 0;
        if ($4273 & 1) {
         label = 1080;
         break L1;
        }
        $4276 = +((HEAP32[$311 >> 2] | 0) >>> 0);
        HEAP32[$223 >> 2] = 2;
        HEAPF64[$245 >> 3] = $4276;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields88, HEAP32[$312 >> 2] | 0);
        $$1136$ph = 0;
        $$313$ph = $$111$ph4195;
        label = 1928;
        break L1124;
       } else if (($4272 | 0) == 16) {
        $4283 = +((HEAP32[$4271 + 12 >> 2] | 0) - (HEAP32[$4271 + 8 >> 2] | 0) >> 2 >>> 0);
        HEAP32[$223 >> 2] = 2;
        HEAPF64[$245 >> 3] = $4283;
        $$1136$ph = 0;
        $$313$ph = $$111$ph4195;
        label = 1928;
        break L1124;
       } else if (($4272 | 0) == 17) {
        $4294 = $4271 + 28 | 0;
        $4302 = +((HEAP32[$4294 + 4 >> 2] | 0) - (HEAP32[$4294 >> 2] | 0) >> 2 >>> 0);
        HEAP32[$223 >> 2] = 2;
        HEAPF64[$245 >> 3] = $4302;
        $$1136$ph = 0;
        $$313$ph = $$111$ph4195;
        label = 1928;
        break L1124;
       } else if (($4272 | 0) == 19) {
        $4285 = HEAP8[$4271 + 8 >> 0] | 0;
        if (!($4285 & 1)) $4293 = ($4285 & 255) >>> 1; else $4293 = HEAP32[$4271 + 12 >> 2] | 0;
        HEAP32[$223 >> 2] = 2;
        HEAPF64[$245 >> 3] = +($4293 >>> 0);
        $$1136$ph = 0;
        $$313$ph = $$111$ph4195;
        label = 1928;
        break L1124;
       } else {
        label = 1606;
        break L1;
       }
       break;
      }
     case 15:
      {
       HEAP32[$117 >> 2] = 0;
       HEAP32[$313 >> 2] = 0;
       HEAP32[$314 >> 2] = 0;
       __THREW__ = 0;
       $4319 = invoke_ii(67, 4) | 0;
       $4320 = __THREW__;
       __THREW__ = 0;
       if ($4320 & 1) {
        label = 1618;
        break L1;
       }
       HEAP32[$313 >> 2] = $4319;
       HEAP32[$117 >> 2] = $4319;
       HEAP32[$314 >> 2] = $4319 + 4;
       $4323 = ($4319 | 0) == 0;
       if ($4323) $4325 = 0; else {
        HEAP32[$4319 >> 2] = 18;
        $4325 = $4319;
       }
       $4324 = $4325 + 4 | 0;
       HEAP32[$313 >> 2] = $4324;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 15, $args68 | 0, $117 | 0);
       $4326 = __THREW__;
       __THREW__ = 0;
       if ($4326 & 1) {
        label = 1626;
        break L1;
       }
       if (!$4323) {
        if (($4324 | 0) != ($4319 | 0)) HEAP32[$313 >> 2] = $4325 + (0 - (($4325 - $4319 | 0) >>> 2) << 2);
        __ZdlPv($4319);
       }
       $4335 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
       HEAP32[$315 >> 2] = 0;
       HEAP32[$316 >> 2] = 0;
       HEAP32[$fields90 >> 2] = $317;
       __THREW__ = 0;
       invoke_vii(60, $118 | 0, $4335 | 0);
       $4336 = __THREW__;
       __THREW__ = 0;
       if ($4336 & 1) {
        label = 1631;
        break L1;
       }
       $4338 = HEAP32[$118 >> 2] | 0;
       if (($4338 | 0) != ($318 | 0)) {
        $4357 = $4338;
        while (1) {
         __THREW__ = 0;
         invoke_viii(9, $11 | 0, $fields90 | 0, HEAP32[$4357 + 16 >> 2] | 0);
         $4359 = __THREW__;
         __THREW__ = 0;
         if ($4359 & 1) {
          label = 1633;
          break L1;
         }
         $4362 = HEAP32[$4357 + 4 >> 2] | 0;
         if (!$4362) {
          $$0$i$i1729 = $4357;
          while (1) {
           $4367 = HEAP32[$$0$i$i1729 + 8 >> 2] | 0;
           if ((HEAP32[$4367 >> 2] | 0) == ($$0$i$i1729 | 0)) {
            $$01$i$i1731 = $4367;
            break;
           } else $$0$i$i1729 = $4367;
          }
         } else {
          $$0$i$i$i1727 = $4362;
          while (1) {
           $4364 = HEAP32[$$0$i$i$i1727 >> 2] | 0;
           if (!$4364) {
            $$01$i$i1731 = $$0$i$i$i1727;
            break;
           } else $$0$i$i$i1727 = $4364;
          }
         }
         if (($$01$i$i1731 | 0) == ($318 | 0)) break; else $4357 = $$01$i$i1731;
        }
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($118, HEAP32[$319 >> 2] | 0);
       HEAP32[$120 >> 2] = 0;
       HEAP32[$320 >> 2] = 0;
       HEAP32[$321 >> 2] = 0;
       __THREW__ = 0;
       invoke_viii(12, $119 | 0, $this | 0, $120 | 0);
       $4341 = __THREW__;
       __THREW__ = 0;
       if ($4341 & 1) {
        label = 1665;
        break L1;
       };
       HEAP32[$200 + 0 >> 2] = HEAP32[$119 + 0 >> 2];
       HEAP32[$200 + 4 >> 2] = HEAP32[$119 + 4 >> 2];
       HEAP32[$200 + 8 >> 2] = HEAP32[$119 + 8 >> 2];
       HEAP32[$200 + 12 >> 2] = HEAP32[$119 + 12 >> 2];
       $$pre5776 = HEAP32[$201 >> 2] | 0;
       $$pre5777 = HEAP32[$fields90 >> 2] | 0;
       $4371 = $$pre5776 + 8 | 0;
       if (($$pre5777 | 0) != ($317 | 0)) {
        $4373 = $$pre5776 + 12 | 0;
        $4374 = $$pre5776 + 16 | 0;
        $4376 = $$pre5777;
        while (1) {
         $4375 = $4376 + 16 | 0;
         __THREW__ = 0;
         $4378 = invoke_iii(35, $this | 0, HEAP32[$202 >> 2] | 0) | 0;
         $4379 = __THREW__;
         __THREW__ = 0;
         if ($4379 & 1) {
          label = 1630;
          break L1;
         }
         $4381 = HEAP32[$4373 >> 2] | 0;
         do if (($4381 | 0) == (HEAP32[$4374 >> 2] | 0)) {
          $this$idx2$val$i$i1742 = HEAP32[$4371 >> 2] | 0;
          $4391 = ($4381 - $this$idx2$val$i$i1742 >> 2) + 1 | 0;
          if ($4391 >>> 0 > 1073741823) {
           __THREW__ = 0;
           invoke_vi(181, $4371 | 0);
           $4393 = __THREW__;
           __THREW__ = 0;
           if ($4393 & 1) {
            label = 1630;
            break L1;
           }
           $$idx1$val$i$i$i$i1745 = HEAP32[$4374 >> 2] | 0;
           $this$idx$val$i$i1746 = HEAP32[$4371 >> 2] | 0;
          } else {
           $$idx1$val$i$i$i$i1745 = $4381;
           $this$idx$val$i$i1746 = $this$idx2$val$i$i1742;
          }
          $4396 = $this$idx$val$i$i1746;
          $4397 = $$idx1$val$i$i$i$i1745 - $4396 | 0;
          if ($4397 >> 2 >>> 0 < 536870911) {
           $4403 = $4397 >> 1;
           $4405 = $4403 >>> 0 < $4391 >>> 0 ? $4391 : $4403;
           $4408 = (HEAP32[$4373 >> 2] | 0) - $4396 >> 2;
           if (!$4405) {
            $$0$i8$i$i1752 = 0;
            $4415 = 0;
            $4416 = $4408;
           } else {
            $$0$i7$i$i1751 = $4405;
            $6322 = $4408;
            label = 1653;
           }
          } else {
           $$0$i7$i$i1751 = 1073741823;
           $6322 = (HEAP32[$4373 >> 2] | 0) - $4396 >> 2;
           label = 1653;
          }
          if ((label | 0) == 1653) {
           label = 0;
           __THREW__ = 0;
           $4411 = invoke_ii(67, $$0$i7$i$i1751 << 2 | 0) | 0;
           $4412 = __THREW__;
           __THREW__ = 0;
           if ($4412 & 1) {
            label = 1630;
            break L1;
           }
           $$0$i8$i$i1752 = $$0$i7$i$i1751;
           $4415 = $4411;
           $4416 = $6322;
          }
          $4414 = $4415 + ($4416 << 2) | 0;
          if ($4414) HEAP32[$4414 >> 2] = $4378;
          $4420 = HEAP32[$4371 >> 2] | 0;
          $4424 = (HEAP32[$4373 >> 2] | 0) - $4420 | 0;
          $4426 = $4415 + ($4416 - ($4424 >> 2) << 2) | 0;
          _memcpy($4426 | 0, $4420 | 0, $4424 | 0) | 0;
          HEAP32[$4371 >> 2] = $4426;
          HEAP32[$4373 >> 2] = $4415 + ($4416 + 1 << 2);
          HEAP32[$4374 >> 2] = $4415 + ($$0$i8$i$i1752 << 2);
          if (!$4420) break;
          __ZdlPv($4420);
         } else {
          if (!$4381) $4386 = 0; else {
           HEAP32[$4381 >> 2] = $4378;
           $4386 = HEAP32[$4373 >> 2] | 0;
          }
          HEAP32[$4373 >> 2] = $4386 + 4;
         } while (0);
         __THREW__ = 0;
         invoke_viii(14, $121 | 0, $this | 0, $4375 | 0);
         $4428 = __THREW__;
         __THREW__ = 0;
         if ($4428 & 1) {
          label = 1630;
          break L1;
         }
         $4430 = $4378 + 8 | 0;
         HEAP32[$4430 + 0 >> 2] = HEAP32[$121 + 0 >> 2];
         HEAP32[$4430 + 4 >> 2] = HEAP32[$121 + 4 >> 2];
         HEAP32[$4430 + 8 >> 2] = HEAP32[$121 + 8 >> 2];
         HEAP32[$4430 + 12 >> 2] = HEAP32[$121 + 12 >> 2];
         HEAP8[$4378 + 5 >> 0] = 1;
         HEAP32[$4378 + 40 >> 2] = 0;
         $4433 = $4378 + 28 | 0;
         __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4433, HEAP32[$4378 + 32 >> 2] | 0);
         HEAP32[$4378 + 36 >> 2] = 0;
         $4437 = $4378 + 32 | 0;
         HEAP32[$4433 >> 2] = $4437;
         HEAP32[$4437 >> 2] = 0;
         $4439 = HEAP32[$4376 + 4 >> 2] | 0;
         if (!$4439) {
          $$0$i$i1763 = $4376;
          while (1) {
           $4444 = HEAP32[$$0$i$i1763 + 8 >> 2] | 0;
           if ((HEAP32[$4444 >> 2] | 0) == ($$0$i$i1763 | 0)) {
            $$01$i$i1765 = $4444;
            break;
           } else $$0$i$i1763 = $4444;
          }
         } else {
          $$0$i$i$i1761 = $4439;
          while (1) {
           $4441 = HEAP32[$$0$i$i$i1761 >> 2] | 0;
           if (!$4441) {
            $$01$i$i1765 = $$0$i$i$i1761;
            break;
           } else $$0$i$i$i1761 = $4441;
          }
         }
         if (($$01$i$i1765 | 0) == ($317 | 0)) break; else $4376 = $$01$i$i1765;
        }
       }
       __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($fields90, HEAP32[$315 >> 2] | 0);
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 16:
      {
       HEAP32[$122 >> 2] = 0;
       HEAP32[$322 >> 2] = 0;
       HEAP32[$323 >> 2] = 0;
       __THREW__ = 0;
       $4452 = invoke_ii(67, 4) | 0;
       $4453 = __THREW__;
       __THREW__ = 0;
       if ($4453 & 1) {
        label = 1672;
        break L1;
       }
       HEAP32[$322 >> 2] = $4452;
       HEAP32[$122 >> 2] = $4452;
       HEAP32[$323 >> 2] = $4452 + 4;
       $4456 = ($4452 | 0) == 0;
       if ($4456) $4458 = 0; else {
        HEAP32[$4452 >> 2] = 19;
        $4458 = $4452;
       }
       $4457 = $4458 + 4 | 0;
       HEAP32[$322 >> 2] = $4457;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 16, $args68 | 0, $122 | 0);
       $4459 = __THREW__;
       __THREW__ = 0;
       if ($4459 & 1) {
        label = 1697;
        break L1;
       }
       if (!$4456) {
        if (($4457 | 0) != ($4452 | 0)) HEAP32[$322 >> 2] = $4458 + (0 - (($4458 - $4452 | 0) >>> 2) << 2);
        __ZdlPv($4452);
       }
       $4468 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
       $4469 = $4468 + 8 | 0;
       $4470 = HEAP8[$4469 >> 0] | 0;
       $4472 = ($4470 & 1) == 0;
       if ($4472) $4477 = ($4470 & 255) >>> 1; else $4477 = HEAP32[$4468 + 12 >> 2] | 0;
       if (($4477 | 0) != 1) {
        label = 1681;
        break L1;
       }
       if ($4472) $4538 = $4469 + 1 | 0; else $4538 = HEAP32[$4468 + 16 >> 2] | 0;
       $4539 = +(HEAPU8[$4538 >> 0] | 0);
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $4539;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 17:
      {
       HEAP32[$124 >> 2] = 0;
       HEAP32[$324 >> 2] = 0;
       HEAP32[$325 >> 2] = 0;
       __THREW__ = 0;
       $4540 = invoke_ii(67, 4) | 0;
       $4541 = __THREW__;
       __THREW__ = 0;
       if ($4541 & 1) {
        label = 1714;
        break L1;
       }
       HEAP32[$324 >> 2] = $4540;
       HEAP32[$124 >> 2] = $4540;
       HEAP32[$325 >> 2] = $4540 + 4;
       $4544 = ($4540 | 0) == 0;
       if ($4544) $4546 = 0; else {
        HEAP32[$4540 >> 2] = 2;
        $4546 = $4540;
       }
       $4545 = $4546 + 4 | 0;
       HEAP32[$324 >> 2] = $4545;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 17, $args68 | 0, $124 | 0);
       $4547 = __THREW__;
       __THREW__ = 0;
       if ($4547 & 1) {
        label = 1733;
        break L1;
       }
       if (!$4544) {
        if (($4545 | 0) != ($4540 | 0)) HEAP32[$324 >> 2] = $4546 + (0 - (($4546 - $4540 | 0) >>> 2) << 2);
        __ZdlPv($4540);
       }
       $4557 = ~~+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3] >>> 0;
       if (($4557 | 0) < 0) {
        label = 1720;
        break L1;
       }
       if (($4557 | 0) > 127) {
        label = 1743;
        break L1;
       }
       HEAP8[$c105 >> 0] = $4557;
       __THREW__ = 0;
       invoke_viii(3, $128 | 0, $c105 | 0, 1);
       $4651 = __THREW__;
       __THREW__ = 0;
       if ($4651 & 1) {
        label = 1080;
        break L1;
       }
       __THREW__ = 0;
       invoke_viii(14, $127 | 0, $this | 0, $128 | 0);
       $4653 = __THREW__;
       __THREW__ = 0;
       if ($4653 & 1) {
        label = 1765;
        break L1;
       };
       HEAP32[$200 + 0 >> 2] = HEAP32[$127 + 0 >> 2];
       HEAP32[$200 + 4 >> 2] = HEAP32[$127 + 4 >> 2];
       HEAP32[$200 + 8 >> 2] = HEAP32[$127 + 8 >> 2];
       HEAP32[$200 + 12 >> 2] = HEAP32[$127 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($128);
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 18:
      {
       HEAP32[$129 >> 2] = 0;
       HEAP32[$326 >> 2] = 0;
       HEAP32[$327 >> 2] = 0;
       __THREW__ = 0;
       $4657 = invoke_ii(67, 4) | 0;
       $4658 = __THREW__;
       __THREW__ = 0;
       if ($4658 & 1) {
        label = 1770;
        break L1;
       }
       HEAP32[$326 >> 2] = $4657;
       HEAP32[$129 >> 2] = $4657;
       HEAP32[$327 >> 2] = $4657 + 4;
       $4661 = ($4657 | 0) == 0;
       if ($4661) $4663 = 0; else {
        HEAP32[$4657 >> 2] = 2;
        $4663 = $4657;
       }
       $4662 = $4663 + 4 | 0;
       HEAP32[$326 >> 2] = $4662;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 18, $args68 | 0, $129 | 0);
       $4664 = __THREW__;
       __THREW__ = 0;
       if ($4664 & 1) {
        label = 1785;
        break L1;
       }
       if (!$4661) {
        if (($4662 | 0) != ($4657 | 0)) HEAP32[$326 >> 2] = $4663 + (0 - (($4663 - $4657 | 0) >>> 2) << 2);
        __ZdlPv($4657);
       }
       $4674 = +Math_log(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $4674;
       $4677 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($4677 >>> 0 > 2146435072 | ($4677 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1776;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $4674;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 19:
      {
       HEAP32[$130 >> 2] = 0;
       HEAP32[$328 >> 2] = 0;
       HEAP32[$329 >> 2] = 0;
       __THREW__ = 0;
       $4700 = invoke_ii(67, 4) | 0;
       $4701 = __THREW__;
       __THREW__ = 0;
       if ($4701 & 1) {
        label = 1793;
        break L1;
       }
       HEAP32[$328 >> 2] = $4700;
       HEAP32[$130 >> 2] = $4700;
       HEAP32[$329 >> 2] = $4700 + 4;
       $4704 = ($4700 | 0) == 0;
       if ($4704) $4706 = 0; else {
        HEAP32[$4700 >> 2] = 2;
        $4706 = $4700;
       }
       $4705 = $4706 + 4 | 0;
       HEAP32[$328 >> 2] = $4705;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 19, $args68 | 0, $130 | 0);
       $4707 = __THREW__;
       __THREW__ = 0;
       if ($4707 & 1) {
        label = 1808;
        break L1;
       }
       if (!$4704) {
        if (($4705 | 0) != ($4700 | 0)) HEAP32[$328 >> 2] = $4706 + (0 - (($4706 - $4700 | 0) >>> 2) << 2);
        __ZdlPv($4700);
       }
       $4717 = +Math_exp(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       HEAPF64[tempDoublePtr >> 3] = $4717;
       $4720 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($4720 >>> 0 > 2146435072 | ($4720 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1799;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $4717;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 20:
      {
       HEAP32[$131 >> 2] = 0;
       HEAP32[$330 >> 2] = 0;
       HEAP32[$331 >> 2] = 0;
       __THREW__ = 0;
       $4743 = invoke_ii(67, 4) | 0;
       $4744 = __THREW__;
       __THREW__ = 0;
       if ($4744 & 1) {
        label = 1816;
        break L1;
       }
       HEAP32[$330 >> 2] = $4743;
       HEAP32[$131 >> 2] = $4743;
       HEAP32[$331 >> 2] = $4743 + 4;
       $4747 = ($4743 | 0) == 0;
       if ($4747) $4749 = 0; else {
        HEAP32[$4743 >> 2] = 2;
        $4749 = $4743;
       }
       $4748 = $4749 + 4 | 0;
       HEAP32[$330 >> 2] = $4748;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 20, $args68 | 0, $131 | 0);
       $4750 = __THREW__;
       __THREW__ = 0;
       if ($4750 & 1) {
        label = 1831;
        break L1;
       }
       if (!$4747) {
        if (($4748 | 0) != ($4743 | 0)) HEAP32[$330 >> 2] = $4749 + (0 - (($4749 - $4743 | 0) >>> 2) << 2);
        __ZdlPv($4743);
       }
       $4760 = +_frexp(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3], $exp);
       HEAPF64[tempDoublePtr >> 3] = $4760;
       $4763 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($4763 >>> 0 > 2146435072 | ($4763 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1822;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $4760;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 21:
      {
       HEAP32[$132 >> 2] = 0;
       HEAP32[$332 >> 2] = 0;
       HEAP32[$333 >> 2] = 0;
       __THREW__ = 0;
       $4786 = invoke_ii(67, 4) | 0;
       $4787 = __THREW__;
       __THREW__ = 0;
       if ($4787 & 1) {
        label = 1839;
        break L1;
       }
       HEAP32[$332 >> 2] = $4786;
       HEAP32[$132 >> 2] = $4786;
       HEAP32[$333 >> 2] = $4786 + 4;
       $4790 = ($4786 | 0) == 0;
       if ($4790) $4792 = 0; else {
        HEAP32[$4786 >> 2] = 2;
        $4792 = $4786;
       }
       $4791 = $4792 + 4 | 0;
       HEAP32[$332 >> 2] = $4791;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 21, $args68 | 0, $132 | 0);
       $4793 = __THREW__;
       __THREW__ = 0;
       if ($4793 & 1) {
        label = 1854;
        break L1;
       }
       if (!$4790) {
        if (($4791 | 0) != ($4786 | 0)) HEAP32[$332 >> 2] = $4792 + (0 - (($4792 - $4786 | 0) >>> 2) << 2);
        __ZdlPv($4786);
       }
       +_frexp(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3], $exp106);
       $4804 = +(HEAP32[$exp106 >> 2] | 0);
       HEAPF64[tempDoublePtr >> 3] = $4804;
       $4807 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($4807 >>> 0 > 2146435072 | ($4807 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1845;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $4804;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 22:
      {
       HEAP32[$133 >> 2] = 0;
       HEAP32[$334 >> 2] = 0;
       HEAP32[$335 >> 2] = 0;
       __THREW__ = 0;
       $4830 = invoke_ii(67, 8) | 0;
       $4831 = __THREW__;
       __THREW__ = 0;
       if ($4831 & 1) {
        label = 1861;
        break L1;
       }
       HEAP32[$334 >> 2] = $4830;
       HEAP32[$133 >> 2] = $4830;
       HEAP32[$335 >> 2] = $4830 + 8;
       $4834 = ($4830 | 0) == 0;
       if ($4834) $4839 = 0; else {
        HEAP32[$4830 >> 2] = 2;
        $4839 = $4830;
       }
       HEAP32[$4839 + 4 >> 2] = 2;
       $4837 = $4839 + 8 | 0;
       HEAP32[$334 >> 2] = $4837;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 22, $args68 | 0, $133 | 0);
       $6293 = __THREW__;
       __THREW__ = 0;
       if ($6293 & 1) {
        label = 1870;
        break L1;
       }
       if (!$4834) {
        if (($4837 | 0) != ($4830 | 0)) HEAP32[$334 >> 2] = $4839 + (1 - (($4839 + 4 - $4830 | 0) >>> 2) << 2);
        __ZdlPv($4830);
       }
       $args68$idx384$val = HEAP32[$args68 >> 2] | 0;
       $4844 = +HEAPF64[$args68$idx384$val + 24 >> 3];
       if ($4844 == 0.0) {
        label = 1867;
        break L1;
       }
       $4865 = +_fmod(+HEAPF64[$args68$idx384$val + 8 >> 3], $4844);
       HEAPF64[tempDoublePtr >> 3] = $4865;
       $4868 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
       if ($4868 >>> 0 > 2146435072 | ($4868 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
        label = 1878;
        break L1;
       }
       HEAP32[$223 >> 2] = 2;
       HEAPF64[$245 >> 3] = $4865;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 23:
      {
       HEAP32[$223 >> 2] = 1;
       HEAP8[$201 >> 0] = 1;
       HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32750 + 0 >> 0] | 0;
       HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32750 + 1 >> 0] | 0;
       HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32750 + 2 >> 0] | 0;
       HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32750 + 3 >> 0] | 0;
       HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32750 + 4 >> 0] | 0;
       HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32750 + 5 >> 0] | 0;
       HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32750 + 6 >> 0] | 0;
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     case 24:
      {
       HEAP32[$135 >> 2] = 0;
       HEAP32[$336 >> 2] = 0;
       HEAP32[$337 >> 2] = 0;
       __THREW__ = 0;
       $4885 = invoke_ii(67, 4) | 0;
       $4886 = __THREW__;
       __THREW__ = 0;
       if ($4886 & 1) {
        label = 1892;
        break L1;
       }
       HEAP32[$336 >> 2] = $4885;
       HEAP32[$135 >> 2] = $4885;
       HEAP32[$337 >> 2] = $4885 + 4;
       $4889 = ($4885 | 0) == 0;
       if ($4889) $4891 = 0; else {
        HEAP32[$4885 >> 2] = 19;
        $4891 = $4885;
       }
       $4890 = $4891 + 4 | 0;
       HEAP32[$336 >> 2] = $4890;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3112 | 0, 24, $args68 | 0, $135 | 0);
       $4892 = __THREW__;
       __THREW__ = 0;
       if ($4892 & 1) {
        label = 1908;
        break L1;
       }
       if (!$4889) {
        if (($4890 | 0) != ($4885 | 0)) HEAP32[$336 >> 2] = $4891 + (0 - (($4891 - $4885 | 0) >>> 2) << 2);
        __ZdlPv($4885);
       }
       $4901 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
       $4902 = $4901 + 8 | 0;
       __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_($136, $338, $4902);
       if ((HEAP32[$136 >> 2] | 0) == ($339 | 0)) {
        label = 1898;
        break L1;
       }
       __THREW__ = 0;
       $4940 = invoke_iii(33, $338 | 0, $4902 | 0) | 0;
       $4941 = __THREW__;
       __THREW__ = 0;
       if ($4941 & 1) {
        label = 1080;
        break L1;
       }
       __THREW__ = 0;
       invoke_viii(14, $138 | 0, $this | 0, $4940 | 0);
       $4943 = __THREW__;
       __THREW__ = 0;
       if ($4943 & 1) {
        label = 1080;
        break L1;
       };
       HEAP32[$200 + 0 >> 2] = HEAP32[$138 + 0 >> 2];
       HEAP32[$200 + 4 >> 2] = HEAP32[$138 + 4 >> 2];
       HEAP32[$200 + 8 >> 2] = HEAP32[$138 + 8 >> 2];
       HEAP32[$200 + 12 >> 2] = HEAP32[$138 + 12 >> 2];
       $$1136$ph = 0;
       $$313$ph = $$111$ph4195;
       label = 1928;
       break;
      }
     default:
      {
       label = 1918;
       break L1;
      }
     } while (0);
     if ((label | 0) == 1928) {
      label = 0;
      $$1136 = $$1136$ph;
      $$313 = $$313$ph;
      $4974 = HEAP32[$args68 >> 2] | 0;
     }
     if ($4974) {
      $4976 = HEAP32[$274 >> 2] | 0;
      if (($4976 | 0) != ($4974 | 0)) HEAP32[$274 >> 2] = $4976 + (~(($4976 + -16 - $4974 | 0) >>> 4) << 4);
      __ZdlPv($4974);
     }
     if ($$1136) {
      $$010 = $$313;
      continue L1;
     } else {
      $$414 = $$313;
      label = 2491;
     }
     break;
    }
   case 1940:
    {
     label = 0;
     $5005 = HEAP32[$$idx$val$i839 + -28 >> 2] | 0;
     if (!$5005) {
      $$414 = $$111$ph4195;
      label = 2491;
     } else {
      $5007 = ___dynamic_cast($5005, 37448, 37608, 0) | 0;
      if (!$5007) {
       $$414 = $$111$ph4195;
       label = 2491;
      } else {
       $5009 = $5007 + 8 | 0;
       HEAP32[$5009 + 0 >> 2] = HEAP32[$200 + 0 >> 2];
       HEAP32[$5009 + 4 >> 2] = HEAP32[$200 + 4 >> 2];
       HEAP32[$5009 + 8 >> 2] = HEAP32[$200 + 8 >> 2];
       HEAP32[$5009 + 12 >> 2] = HEAP32[$200 + 12 >> 2];
       HEAP8[$5007 + 5 >> 0] = 1;
       HEAP32[$5007 + 40 >> 2] = 0;
       $5012 = $5007 + 28 | 0;
       $5013 = $5007 + 32 | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($5012, HEAP32[$5013 >> 2] | 0);
       HEAP32[$5007 + 36 >> 2] = 0;
       HEAP32[$5012 >> 2] = $5013;
       HEAP32[$5013 >> 2] = 0;
       $$414 = $$111$ph4195;
       label = 2491;
      }
     }
     break;
    }
   case 1943:
    {
     label = 0;
     $5022 = (__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, (HEAP32[$$idx$val$i839 + -140 >> 2] | 0) + 4 | 0, $$idx$val$i839 + -104 | 0, $$idx$val$i839 + -88 | 0) | 0) & 1;
     HEAP32[$223 >> 2] = 1;
     HEAP8[$201 >> 0] = $5022;
     HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$32743 + 0 >> 0] | 0;
     HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$32743 + 1 >> 0] | 0;
     HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$32743 + 2 >> 0] | 0;
     HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$32743 + 3 >> 0] | 0;
     HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$32743 + 4 >> 0] | 0;
     HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$32743 + 5 >> 0] | 0;
     HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$32743 + 6 >> 0] | 0;
     $$414 = $$111$ph4195;
     label = 2491;
     break;
    }
   case 1975:
    {
     label = 0;
     $5087 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
     $5089 = HEAP32[$$idx$val$i839 + -104 >> 2] | 0;
     if (($5089 | 0) == 16) {
      if ((HEAP32[$200 >> 2] | 0) != 2) {
       label = 1977;
       break L1;
      }
      $5115 = HEAP32[$$idx$val$i839 + -96 >> 2] | 0;
      $5117 = ~~+HEAPF64[$245 >> 3];
      $$idx254$val = HEAP32[$5115 + 8 >> 2] | 0;
      $5122 = (HEAP32[$5115 + 12 >> 2] | 0) - $$idx254$val >> 2;
      if (!(($5117 | 0) > -1 & ($5117 | 0) < ($5122 | 0))) {
       label = 1989;
       break L1;
      }
      $5177 = HEAP32[$$idx254$val + ($5117 << 2) >> 2] | 0;
      if (!(HEAP8[$5177 + 5 >> 0] | 0)) {
       label = 2012;
       break L697;
      }
      $5181 = $5177 + 8 | 0;
      HEAP32[$200 + 0 >> 2] = HEAP32[$5181 + 0 >> 2];
      HEAP32[$200 + 4 >> 2] = HEAP32[$5181 + 4 >> 2];
      HEAP32[$200 + 8 >> 2] = HEAP32[$5181 + 8 >> 2];
      HEAP32[$200 + 12 >> 2] = HEAP32[$5181 + 12 >> 2];
      $$414 = $$111$ph4195;
      label = 2491;
      break;
     } else if (($5089 | 0) == 18) {
      label = 2013;
      break L697;
     } else if (($5089 | 0) != 19) {
      label = 2078;
      break L1;
     }
     $5234 = HEAP32[$$idx$val$i839 + -96 >> 2] | 0;
     if (!$5234) {
      label = 2034;
      break L1;
     }
     if ((HEAP32[$200 >> 2] | 0) != 2) {
      label = 2036;
      break L1;
     }
     $5260 = $5234 + 8 | 0;
     $5261 = HEAP8[$5260 >> 0] | 0;
     $5263 = ($5261 & 1) == 0;
     if ($5263) $5272 = ($5261 & 255) >>> 1; else $5272 = HEAP32[$5234 + 12 >> 2] | 0;
     $5269 = ~~+HEAPF64[$245 >> 3];
     if (!(($5269 | 0) > -1 & ($5269 | 0) < ($5272 | 0))) {
      label = 2051;
      break L1;
     }
     if ($5263) $5328 = $5260 + 1 | 0; else $5328 = HEAP32[$5234 + 16 >> 2] | 0;
     HEAP8[$ch >> 0] = HEAP8[$5328 + $5269 >> 0] | 0;
     HEAP8[$340 >> 0] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($157, $ch, _strlen($ch | 0) | 0);
     __THREW__ = 0;
     invoke_viii(14, $156 | 0, $this | 0, $157 | 0);
     $5331 = __THREW__;
     __THREW__ = 0;
     if ($5331 & 1) {
      label = 2077;
      break L1;
     };
     HEAP32[$200 + 0 >> 2] = HEAP32[$156 + 0 >> 2];
     HEAP32[$200 + 4 >> 2] = HEAP32[$156 + 4 >> 2];
     HEAP32[$200 + 8 >> 2] = HEAP32[$156 + 8 >> 2];
     HEAP32[$200 + 12 >> 2] = HEAP32[$156 + 12 >> 2];
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($157);
     $$414 = $$111$ph4195;
     label = 2491;
     break;
    }
   case 2095:
    {
     label = 0;
     $5380 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
     $5381 = HEAP32[$200 >> 2] | 0;
     if (!$5381) $$pre$phi5801Z2D = $$idx$val$i839 + -72 | 0; else if (($5381 | 0) == 19) {
      $5394 = HEAP32[$201 >> 2] | 0;
      $5395 = $5394 + 8 | 0;
      $5396 = HEAP32[$237 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($0, $5396, $5395);
      $5398 = HEAP32[$0 >> 2] | 0;
      if (($5398 | 0) == ($5396 + 4 | 0)) {
       $5402 = __Znwj(12) | 0;
       __THREW__ = 0;
       invoke_vii(40, $5402 | 0, $5395 | 0);
       $5403 = __THREW__;
       __THREW__ = 0;
       if ($5403 & 1) {
        label = 2107;
        break L1;
       }
       HEAP32[(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($5396, $5395) | 0) >> 2] = $5402;
       $$0$i2209 = $5402;
      } else $$0$i2209 = HEAP32[$5398 + 28 >> 2] | 0;
      HEAP32[$fid128 >> 2] = $$0$i2209;
      $5408 = $$idx$val$i839 + -68 | 0;
      $5410 = HEAP32[$$idx$val$i839 + -64 >> 2] | 0;
      $5411 = $$idx$val$i839 + -64 | 0;
      if ($5410) {
       $$0$ph7$i$i$i = $5411;
       $$01$ph6$i$in$i$i = $5410;
       L1778 : while (1) {
        $$013$i$in$i$i = $$01$ph6$i$in$i$i;
        while (1) {
         if ((HEAP32[$$013$i$in$i$i + 16 >> 2] | 0) >>> 0 >= $$0$i2209 >>> 0) break;
         $5417 = HEAP32[$$013$i$in$i$i + 4 >> 2] | 0;
         if (!$5417) {
          $$0$ph5$i$i$i = $$0$ph7$i$i$i;
          break L1778;
         } else $$013$i$in$i$i = $5417;
        }
        $$01$ph6$i$in$i$i = HEAP32[$$013$i$in$i$i >> 2] | 0;
        if (!$$01$ph6$i$in$i$i) {
         $$0$ph5$i$i$i = $$013$i$in$i$i;
         break;
        } else $$0$ph7$i$i$i = $$013$i$in$i$i;
       }
       if (($$0$ph5$i$i$i | 0) != ($5411 | 0)) if ((HEAP32[$$0$ph5$i$i$i + 16 >> 2] | 0) >>> 0 <= $$0$i2209 >>> 0) {
        label = 2115;
        break L1;
       }
      }
      $5456 = $$idx$val$i839 + -72 | 0;
      $5459 = HEAP32[(HEAP32[$5456 >> 2] | 0) + 12 >> 2] | 0;
      HEAP32[(__ZNSt3__13mapIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($5408, $fid128) | 0) >> 2] = $5459;
      $5463 = HEAP32[(HEAP32[$5456 >> 2] | 0) + 16 >> 2] | 0;
      HEAP32[(__ZNSt3__13mapIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($5408, $fid128) | 0) + 4 >> 2] = $5463;
      $$pre$phi5801Z2D = $5456;
     } else {
      label = 2097;
      break L1;
     }
     $5468 = HEAP32[(HEAP32[$$pre$phi5801Z2D >> 2] | 0) + 4 >> 2] | 0;
     HEAP32[$$pre$phi5801Z2D >> 2] = $5468;
     if (($5468 | 0) != ($5380 + 48 | 0)) {
      label = 2132;
      break L697;
     }
     $$idx275$val = HEAP32[$5380 + 36 >> 2] | 0;
     $$idx276$val = HEAP32[$5380 + 40 >> 2] | 0;
     HEAP32[$341 >> 2] = 0;
     HEAP32[$342 >> 2] = 0;
     HEAP32[$env129 >> 2] = $343;
     if (($$idx275$val | 0) == ($$idx276$val | 0)) {
      HEAP32[$344 >> 2] = 0;
      HEAP32[$345 >> 2] = 0;
      HEAP32[$165 >> 2] = $346;
     } else {
      $5475 = $$idx275$val;
      do {
       $5474 = HEAP32[$5475 >> 2] | 0;
       $$idx$val$i2663 = HEAP32[$$idx$i >> 2] | 0;
       $i$0$in$i2666 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i2663 | 0) / 144 | 0;
       do {
        $i$0$in$i2666 = $i$0$in$i2666 + -1 | 0;
        if (($i$0$in$i2666 | 0) <= -1) break;
        $5482 = HEAP32[$$idx$val$i2663 + ($i$0$in$i2666 * 144 | 0) + 132 >> 2] | 0;
        $5483 = $$idx$val$i2663 + ($i$0$in$i2666 * 144 | 0) + 132 | 0;
        if ($5482) {
         $$0$ph7$i$i$i$i2668 = $5483;
         $$01$ph6$i$in$i$i$i2669 = $5482;
         L1797 : while (1) {
          $$013$i$in$i$i$i2671 = $$01$ph6$i$in$i$i$i2669;
          while (1) {
           if ((HEAP32[$$013$i$in$i$i$i2671 + 16 >> 2] | 0) >>> 0 >= $5474 >>> 0) break;
           $5489 = HEAP32[$$013$i$in$i$i$i2671 + 4 >> 2] | 0;
           if (!$5489) {
            $$0$ph5$i$i$i$i2676 = $$0$ph7$i$i$i$i2668;
            break L1797;
           } else $$013$i$in$i$i$i2671 = $5489;
          }
          $$01$ph6$i$in$i$i$i2669 = HEAP32[$$013$i$in$i$i$i2671 >> 2] | 0;
          if (!$$01$ph6$i$in$i$i$i2669) {
           $$0$ph5$i$i$i$i2676 = $$013$i$in$i$i$i2671;
           break;
          } else $$0$ph7$i$i$i$i2668 = $$013$i$in$i$i$i2671;
         }
         if (($$0$ph5$i$i$i$i2676 | 0) != ($5483 | 0)) if ((HEAP32[$$0$ph5$i$i$i$i2676 + 16 >> 2] | 0) >>> 0 <= $5474 >>> 0) {
          label = 2145;
          break;
         }
        }
       } while ((HEAP32[$$idx$val$i2663 + ($i$0$in$i2666 * 144 | 0) >> 2] | 0) != 5);
       if ((label | 0) == 2145) {
        label = 0;
        $5495 = HEAP32[$$0$ph5$i$i$i$i2676 + 20 >> 2] | 0;
        if ($5495) {
         $5497 = HEAP32[$341 >> 2] | 0;
         do if (!$5497) {
          HEAP32[$0 >> 2] = $343;
          $$0$i$i2655 = $343;
          $5517 = $343;
         } else {
          $__nd$0$in$i$i2653 = $5497;
          while (1) {
           $5500 = HEAP32[$__nd$0$in$i$i2653 + 16 >> 2] | 0;
           if ($5474 >>> 0 < $5500 >>> 0) {
            $5502 = HEAP32[$__nd$0$in$i$i2653 >> 2] | 0;
            if (!$5502) {
             label = 2149;
             break;
            } else {
             $__nd$0$in$i$i2653 = $5502;
             continue;
            }
           }
           if ($5500 >>> 0 >= $5474 >>> 0) {
            label = 2153;
            break;
           }
           $5505 = $__nd$0$in$i$i2653 + 4 | 0;
           $5506 = HEAP32[$5505 >> 2] | 0;
           if (!$5506) {
            label = 2152;
            break;
           } else $__nd$0$in$i$i2653 = $5506;
          }
          if ((label | 0) == 2149) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i$i2653;
           $$0$i$i2655 = $__nd$0$in$i$i2653;
           $5517 = $__nd$0$in$i$i2653;
           break;
          } else if ((label | 0) == 2152) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i$i2653;
           $$0$i$i2655 = $5505;
           $5517 = $__nd$0$in$i$i2653;
           break;
          } else if ((label | 0) == 2153) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i$i2653;
           $$0$i$i2655 = $0;
           $5517 = $__nd$0$in$i$i2653;
           break;
          }
         } while (0);
         $5508 = HEAP32[$$0$i$i2655 >> 2] | 0;
         if (!$5508) {
          __THREW__ = 0;
          $5510 = invoke_ii(67, 24) | 0;
          $5511 = __THREW__;
          __THREW__ = 0;
          if ($5511 & 1) {
           label = 2161;
           break L1;
          }
          HEAP32[$5510 + 16 >> 2] = $5474;
          HEAP32[$5510 + 20 >> 2] = 0;
          HEAP32[$5510 >> 2] = 0;
          HEAP32[$5510 + 4 >> 2] = 0;
          HEAP32[$5510 + 8 >> 2] = $5517;
          HEAP32[$$0$i$i2655 >> 2] = $5510;
          $5519 = HEAP32[HEAP32[$env129 >> 2] >> 2] | 0;
          if (!$5519) $5522 = $5510; else {
           HEAP32[$env129 >> 2] = $5519;
           $5522 = HEAP32[$$0$i$i2655 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$341 >> 2] | 0, $5522);
          HEAP32[$342 >> 2] = (HEAP32[$342 >> 2] | 0) + 1;
          $__r$0$i2659 = $5510;
         } else $__r$0$i2659 = $5508;
         HEAP32[$__r$0$i2659 + 20 >> 2] = $5495;
        }
       }
       $5475 = $5475 + 4 | 0;
      } while (($5475 | 0) != ($$idx276$val | 0));
      $$idx$val$i$i2235$pre = HEAP32[$env129 >> 2] | 0;
      HEAP32[$344 >> 2] = 0;
      HEAP32[$345 >> 2] = 0;
      HEAP32[$165 >> 2] = $346;
      if (($$idx$val$i$i2235$pre | 0) != ($343 | 0)) {
       $$idx$val$i15$i$i2238 = $$idx$val$i$i2235$pre;
       while (1) {
        __THREW__ = 0;
        $5532 = invoke_ii(67, 24) | 0;
        $5533 = __THREW__;
        __THREW__ = 0;
        if ($5533 & 1) {
         label = 2226;
         break L1;
        }
        $5537 = $$idx$val$i15$i$i2238 + 16 | 0;
        $5539 = HEAP32[$5537 >> 2] | 0;
        $5542 = HEAP32[$5537 + 4 >> 2] | 0;
        $5543 = $5532 + 16 | 0;
        HEAP32[$5543 >> 2] = $5539;
        HEAP32[$5543 + 4 >> 2] = $5542;
        $5547 = $5539;
        $$pre$i$i$i$i$i$i2240 = HEAP32[$346 >> 2] | 0;
        do if ((HEAP32[$165 >> 2] | 0) == ($346 | 0)) {
         $5560 = $346;
         label = 2170;
        } else {
         $5549 = ($$pre$i$i$i$i$i$i2240 | 0) == 0;
         if ($5549) {
          $$0$i$i$i$i$i$i$i$i2244 = $346;
          while (1) {
           $5554 = HEAP32[$$0$i$i$i$i$i$i$i$i2244 + 8 >> 2] | 0;
           if ((HEAP32[$5554 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2244 | 0)) $$0$i$i$i$i$i$i$i$i2244 = $5554; else {
            $$01$i$i$i$i$i$i$i$i2246 = $5554;
            break;
           }
          }
         } else {
          $$0$i$i$i$i$i$i$i$i$i2242 = $$pre$i$i$i$i$i$i2240;
          while (1) {
           $5551 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2242 + 4 >> 2] | 0;
           if (!$5551) {
            $$01$i$i$i$i$i$i$i$i2246 = $$0$i$i$i$i$i$i$i$i$i2242;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2242 = $5551;
          }
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2246 + 16 >> 2] | 0) >>> 0 < $5547 >>> 0) {
          $5560 = $$01$i$i$i$i$i$i$i$i2246;
          label = 2170;
         } else {
          if ($5549) {
           HEAP32[$0 >> 2] = $346;
           $$0$i$i$i$i1$i$i2255 = $346;
           $5574 = $346;
           break;
          } else $__nd$0$in$i21$i$i$i$i$i$i2251 = $$pre$i$i$i$i$i$i2240;
          while (1) {
           $$idx2$val$i23$i$i$i$i$i$i2253 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i2251 + 16 >> 2] | 0;
           if ($5547 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i2253 >>> 0) {
            $5564 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i2251 >> 2] | 0;
            if (!$5564) {
             label = 2176;
             break;
            } else {
             $__nd$0$in$i21$i$i$i$i$i$i2251 = $5564;
             continue;
            }
           }
           if ($$idx2$val$i23$i$i$i$i$i$i2253 >>> 0 >= $5547 >>> 0) {
            label = 2180;
            break;
           }
           $5567 = $__nd$0$in$i21$i$i$i$i$i$i2251 + 4 | 0;
           $5568 = HEAP32[$5567 >> 2] | 0;
           if (!$5568) {
            label = 2179;
            break;
           } else $__nd$0$in$i21$i$i$i$i$i$i2251 = $5568;
          }
          if ((label | 0) == 2176) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2251;
           $$0$i$i$i$i1$i$i2255 = $__nd$0$in$i21$i$i$i$i$i$i2251;
           $5574 = $__nd$0$in$i21$i$i$i$i$i$i2251;
           break;
          } else if ((label | 0) == 2179) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2251;
           $$0$i$i$i$i1$i$i2255 = $5567;
           $5574 = $__nd$0$in$i21$i$i$i$i$i$i2251;
           break;
          } else if ((label | 0) == 2180) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2251;
           $$0$i$i$i$i1$i$i2255 = $0;
           $5574 = $__nd$0$in$i21$i$i$i$i$i$i2251;
           break;
          }
         }
        } while (0);
        do if ((label | 0) == 2170) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2240) {
          HEAP32[$0 >> 2] = $346;
          $$0$i$i$i$i1$i$i2255 = $346;
          $5574 = $346;
          break;
         } else {
          HEAP32[$0 >> 2] = $5560;
          $$0$i$i$i$i1$i$i2255 = $5560 + 4 | 0;
          $5574 = $5560;
          break;
         }
        } while (0);
        $5570 = HEAP32[$$0$i$i$i$i1$i$i2255 >> 2] | 0;
        if (!$5570) {
         HEAP32[$5532 >> 2] = 0;
         HEAP32[$5532 + 4 >> 2] = 0;
         HEAP32[$5532 + 8 >> 2] = $5574;
         HEAP32[$$0$i$i$i$i1$i$i2255 >> 2] = $5532;
         $5576 = HEAP32[HEAP32[$165 >> 2] >> 2] | 0;
         if (!$5576) $5579 = $5532; else {
          HEAP32[$165 >> 2] = $5576;
          $5579 = HEAP32[$$0$i$i$i$i1$i$i2255 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$344 >> 2] | 0, $5579);
         HEAP32[$345 >> 2] = (HEAP32[$345 >> 2] | 0) + 1;
        } else if (!(($5570 | 0) == ($5532 | 0) | ($5532 | 0) == 0)) __ZdlPv($5532);
        $5585 = HEAP32[$$idx$val$i15$i$i2238 + 4 >> 2] | 0;
        if (!$5585) {
         $$0$i$i$i$i$i2265 = $$idx$val$i15$i$i2238;
         while (1) {
          $5590 = HEAP32[$$0$i$i$i$i$i2265 + 8 >> 2] | 0;
          if ((HEAP32[$5590 >> 2] | 0) == ($$0$i$i$i$i$i2265 | 0)) {
           $$01$i$i$i$i$i2267 = $5590;
           break;
          } else $$0$i$i$i$i$i2265 = $5590;
         }
        } else {
         $$0$i$i$i$i$i$i2263 = $5585;
         while (1) {
          $5587 = HEAP32[$$0$i$i$i$i$i$i2263 >> 2] | 0;
          if (!$5587) {
           $$01$i$i$i$i$i2267 = $$0$i$i$i$i$i$i2263;
           break;
          } else $$0$i$i$i$i$i$i2263 = $5587;
         }
        }
        if (($$01$i$i$i$i$i2267 | 0) == ($343 | 0)) break; else $$idx$val$i15$i$i2238 = $$01$i$i$i$i$i2267;
       }
      }
     }
     HEAP32[$347 >> 2] = 0;
     HEAP32[$348 >> 2] = 0;
     HEAP32[$166 >> 2] = $349;
     $$idx$val$i$i2274 = HEAP32[$$idx$val$i839 + -68 >> 2] | 0;
     $5594 = $$idx$val$i839 + -64 | 0;
     if (($$idx$val$i$i2274 | 0) != ($5594 | 0)) {
      $$idx$val$i15$i$i2277 = $$idx$val$i$i2274;
      while (1) {
       __THREW__ = 0;
       $5596 = invoke_ii(67, 28) | 0;
       $5597 = __THREW__;
       __THREW__ = 0;
       if ($5597 & 1) {
        label = 2227;
        break L1;
       }
       $5599 = $$idx$val$i15$i$i2277 + 16 | 0;
       $5600 = $5596 + 16 | 0;
       HEAP32[$5600 + 0 >> 2] = HEAP32[$5599 + 0 >> 2];
       HEAP32[$5600 + 4 >> 2] = HEAP32[$5599 + 4 >> 2];
       HEAP32[$5600 + 8 >> 2] = HEAP32[$5599 + 8 >> 2];
       $$pre$i$i$i$i$i$i2279 = HEAP32[$349 >> 2] | 0;
       do if ((HEAP32[$166 >> 2] | 0) == ($349 | 0)) {
        $5613 = $349;
        label = 2201;
       } else {
        $5602 = ($$pre$i$i$i$i$i$i2279 | 0) == 0;
        if ($5602) {
         $$0$i$i$i$i$i$i$i$i2283 = $349;
         while (1) {
          $5607 = HEAP32[$$0$i$i$i$i$i$i$i$i2283 + 8 >> 2] | 0;
          if ((HEAP32[$5607 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2283 | 0)) $$0$i$i$i$i$i$i$i$i2283 = $5607; else {
           $$01$i$i$i$i$i$i$i$i2285 = $5607;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i2281 = $$pre$i$i$i$i$i$i2279;
         while (1) {
          $5604 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2281 + 4 >> 2] | 0;
          if (!$5604) {
           $$01$i$i$i$i$i$i$i$i2285 = $$0$i$i$i$i$i$i$i$i$i2281;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i2281 = $5604;
         }
        }
        $__v$idx14$val$i$i$i$i$i$i2289 = HEAP32[$5600 >> 2] | 0;
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i2285 + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i2289 >>> 0) {
         $5613 = $$01$i$i$i$i$i$i$i$i2285;
         label = 2201;
        } else {
         if ($5602) {
          HEAP32[$0 >> 2] = $349;
          $$0$i$i$i$i1$i$i2296 = $349;
          $5627 = $349;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i2292 = $$pre$i$i$i$i$i$i2279;
         while (1) {
          $$idx2$val$i23$i$i$i$i$i$i2294 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i2292 + 16 >> 2] | 0;
          if ($__v$idx14$val$i$i$i$i$i$i2289 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i2294 >>> 0) {
           $5617 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i2292 >> 2] | 0;
           if (!$5617) {
            label = 2207;
            break;
           } else {
            $__nd$0$in$i21$i$i$i$i$i$i2292 = $5617;
            continue;
           }
          }
          if ($$idx2$val$i23$i$i$i$i$i$i2294 >>> 0 >= $__v$idx14$val$i$i$i$i$i$i2289 >>> 0) {
           label = 2211;
           break;
          }
          $5620 = $__nd$0$in$i21$i$i$i$i$i$i2292 + 4 | 0;
          $5621 = HEAP32[$5620 >> 2] | 0;
          if (!$5621) {
           label = 2210;
           break;
          } else $__nd$0$in$i21$i$i$i$i$i$i2292 = $5621;
         }
         if ((label | 0) == 2207) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2292;
          $$0$i$i$i$i1$i$i2296 = $__nd$0$in$i21$i$i$i$i$i$i2292;
          $5627 = $__nd$0$in$i21$i$i$i$i$i$i2292;
          break;
         } else if ((label | 0) == 2210) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2292;
          $$0$i$i$i$i1$i$i2296 = $5620;
          $5627 = $__nd$0$in$i21$i$i$i$i$i$i2292;
          break;
         } else if ((label | 0) == 2211) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2292;
          $$0$i$i$i$i1$i$i2296 = $0;
          $5627 = $__nd$0$in$i21$i$i$i$i$i$i2292;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 2201) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i2279) {
         HEAP32[$0 >> 2] = $349;
         $$0$i$i$i$i1$i$i2296 = $349;
         $5627 = $349;
         break;
        } else {
         HEAP32[$0 >> 2] = $5613;
         $$0$i$i$i$i1$i$i2296 = $5613 + 4 | 0;
         $5627 = $5613;
         break;
        }
       } while (0);
       $5623 = HEAP32[$$0$i$i$i$i1$i$i2296 >> 2] | 0;
       if (!$5623) {
        HEAP32[$5596 >> 2] = 0;
        HEAP32[$5596 + 4 >> 2] = 0;
        HEAP32[$5596 + 8 >> 2] = $5627;
        HEAP32[$$0$i$i$i$i1$i$i2296 >> 2] = $5596;
        $5629 = HEAP32[HEAP32[$166 >> 2] >> 2] | 0;
        if (!$5629) $5632 = $5596; else {
         HEAP32[$166 >> 2] = $5629;
         $5632 = HEAP32[$$0$i$i$i$i1$i$i2296 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$347 >> 2] | 0, $5632);
        HEAP32[$348 >> 2] = (HEAP32[$348 >> 2] | 0) + 1;
       } else if (!(($5623 | 0) == ($5596 | 0) | ($5596 | 0) == 0)) __ZdlPv($5596);
       $5638 = HEAP32[$$idx$val$i15$i$i2277 + 4 >> 2] | 0;
       if (!$5638) {
        $$0$i$i$i$i$i2306 = $$idx$val$i15$i$i2277;
        while (1) {
         $5643 = HEAP32[$$0$i$i$i$i$i2306 + 8 >> 2] | 0;
         if ((HEAP32[$5643 >> 2] | 0) == ($$0$i$i$i$i$i2306 | 0)) {
          $$01$i$i$i$i$i2308 = $5643;
          break;
         } else $$0$i$i$i$i$i2306 = $5643;
        }
       } else {
        $$0$i$i$i$i$i$i2304 = $5638;
        while (1) {
         $5640 = HEAP32[$$0$i$i$i$i$i$i2304 >> 2] | 0;
         if (!$5640) {
          $$01$i$i$i$i$i2308 = $$0$i$i$i$i$i$i2304;
          break;
         } else $$0$i$i$i$i$i$i2304 = $5640;
        }
       }
       if (($$01$i$i$i$i$i2308 | 0) == ($5594 | 0)) break; else $$idx$val$i15$i$i2277 = $$01$i$i$i$i$i2308;
      }
     }
     __THREW__ = 0;
     invoke_viiii(19, $164 | 0, $this | 0, $165 | 0, $166 | 0);
     $5647 = __THREW__;
     __THREW__ = 0;
     if ($5647 & 1) {
      label = 2228;
      break L1;
     };
     HEAP32[$200 + 0 >> 2] = HEAP32[$164 + 0 >> 2];
     HEAP32[$200 + 4 >> 2] = HEAP32[$164 + 4 >> 2];
     HEAP32[$200 + 8 >> 2] = HEAP32[$164 + 8 >> 2];
     HEAP32[$200 + 12 >> 2] = HEAP32[$164 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($166, HEAP32[$347 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($165, HEAP32[$344 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env129, HEAP32[$341 >> 2] | 0);
     $$414 = $$111$ph4195;
     label = 2491;
     break;
    }
   case 2231:
    {
     label = 0;
     $5664 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
     if ((HEAP32[$200 >> 2] | 0) != 16) {
      label = 2232;
      break L1;
     }
     $5684 = HEAP32[$201 >> 2] | 0;
     $5685 = $5684 + 8 | 0;
     if ((HEAP32[$5684 + 12 >> 2] | 0) != (HEAP32[$5685 >> 2] | 0)) {
      label = 2244;
      break L697;
     }
     HEAP32[$350 >> 2] = 0;
     HEAP32[$351 >> 2] = 0;
     HEAP32[$170 >> 2] = $352;
     $5688 = HEAP32[$5664 + 52 >> 2] | 0;
     $5690 = HEAP32[$5664 + 56 >> 2] | 0;
     HEAP32[$353 >> 2] = 0;
     HEAP32[$354 >> 2] = 0;
     HEAP32[$171 >> 2] = $355;
     __THREW__ = 0;
     invoke_viiiiii(20, $169 | 0, $this | 0, $170 | 0, $5688 | 0, $5690 | 0, $171 | 0);
     $5691 = __THREW__;
     __THREW__ = 0;
     if ($5691 & 1) {
      label = 2243;
      break L1;
     };
     HEAP32[$200 + 0 >> 2] = HEAP32[$169 + 0 >> 2];
     HEAP32[$200 + 4 >> 2] = HEAP32[$169 + 4 >> 2];
     HEAP32[$200 + 8 >> 2] = HEAP32[$169 + 8 >> 2];
     HEAP32[$200 + 12 >> 2] = HEAP32[$169 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($171, HEAP32[$353 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($170, HEAP32[$350 >> 2] | 0);
     $$414 = $$111$ph4195;
     label = 2491;
     break;
    }
   case 2245:
    {
     label = 0;
     $5708 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
     $5710 = HEAP32[$$idx$val$i839 + -96 >> 2] | 0;
     if ((HEAP32[$200 >> 2] | 0) != 19) {
      label = 2246;
      break L1;
     }
     $5771 = HEAP32[$201 >> 2] | 0;
     $5772 = $5771 + 8 | 0;
     $5773 = HEAP32[$237 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($0, $5773, $5772);
     $5775 = HEAP32[$0 >> 2] | 0;
     if (($5775 | 0) == ($5773 + 4 | 0)) {
      $5779 = __Znwj(12) | 0;
      __THREW__ = 0;
      invoke_vii(40, $5779 | 0, $5772 | 0);
      $5780 = __THREW__;
      __THREW__ = 0;
      if ($5780 & 1) {
       label = 2273;
       break L1;
      }
      HEAP32[(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($5773, $5772) | 0) >> 2] = $5779;
      $$0$i2339 = $5779;
     } else $$0$i2339 = HEAP32[$5775 + 28 >> 2] | 0;
     HEAP32[$fid136 >> 2] = $$0$i2339;
     $5785 = $$idx$val$i839 + -52 | 0;
     $5787 = HEAP32[$$idx$val$i839 + -48 >> 2] | 0;
     $5788 = $$idx$val$i839 + -48 | 0;
     if ($5787) {
      $$0$ph7$i$i$i2341 = $5788;
      $$01$ph6$i$in$i$i2342 = $5787;
      L1938 : while (1) {
       $$013$i$in$i$i2344 = $$01$ph6$i$in$i$i2342;
       while (1) {
        if ((HEAP32[$$013$i$in$i$i2344 + 16 >> 2] | 0) >>> 0 >= $$0$i2339 >>> 0) break;
        $5794 = HEAP32[$$013$i$in$i$i2344 + 4 >> 2] | 0;
        if (!$5794) {
         $$0$ph5$i$i$i2349 = $$0$ph7$i$i$i2341;
         break L1938;
        } else $$013$i$in$i$i2344 = $5794;
       }
       $$01$ph6$i$in$i$i2342 = HEAP32[$$013$i$in$i$i2344 >> 2] | 0;
       if (!$$01$ph6$i$in$i$i2342) {
        $$0$ph5$i$i$i2349 = $$013$i$in$i$i2344;
        break;
       } else $$0$ph7$i$i$i2341 = $$013$i$in$i$i2344;
      }
      if (($$0$ph5$i$i$i2349 | 0) != ($5788 | 0)) if ((HEAP32[$$0$ph5$i$i$i2349 + 16 >> 2] | 0) >>> 0 <= $$0$i2339 >>> 0) {
       label = 2281;
       break L1;
      }
     }
     $5833 = $5710 + 8 | 0;
     $5834 = $$idx$val$i839 + -56 | 0;
     $5837 = HEAP32[(HEAP32[$5833 >> 2] | 0) + (HEAP32[$5834 >> 2] << 2) >> 2] | 0;
     HEAP32[(__ZNSt3__13mapIPK10IdentifierPN12_GLOBAL__N_19HeapThunkENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($5785, $fid136) | 0) >> 2] = $5837;
     $5840 = (HEAP32[$5834 >> 2] | 0) + 1 | 0;
     HEAP32[$5834 >> 2] = $5840;
     $$idx$val = HEAP32[$5833 >> 2] | 0;
     if (($5840 | 0) != ((HEAP32[$5710 + 12 >> 2] | 0) - $$idx$val >> 2 | 0)) {
      label = 2395;
      break L697;
     }
     $$idx273$val = HEAP32[$5708 + 36 >> 2] | 0;
     $$idx274$val = HEAP32[$5708 + 40 >> 2] | 0;
     HEAP32[$356 >> 2] = 0;
     HEAP32[$357 >> 2] = 0;
     HEAP32[$env137 >> 2] = $358;
     if (($$idx273$val | 0) == ($$idx274$val | 0)) {
      HEAP32[$359 >> 2] = 0;
      HEAP32[$360 >> 2] = 0;
      HEAP32[$177 >> 2] = $361;
     } else {
      $5848 = $$idx273$val;
      do {
       $5847 = HEAP32[$5848 >> 2] | 0;
       $$idx$val$i2697 = HEAP32[$$idx$i >> 2] | 0;
       $i$0$in$i2700 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i2697 | 0) / 144 | 0;
       do {
        $i$0$in$i2700 = $i$0$in$i2700 + -1 | 0;
        if (($i$0$in$i2700 | 0) <= -1) break;
        $5855 = HEAP32[$$idx$val$i2697 + ($i$0$in$i2700 * 144 | 0) + 132 >> 2] | 0;
        $5856 = $$idx$val$i2697 + ($i$0$in$i2700 * 144 | 0) + 132 | 0;
        if ($5855) {
         $$0$ph7$i$i$i$i2702 = $5856;
         $$01$ph6$i$in$i$i$i2703 = $5855;
         L1955 : while (1) {
          $$013$i$in$i$i$i2705 = $$01$ph6$i$in$i$i$i2703;
          while (1) {
           if ((HEAP32[$$013$i$in$i$i$i2705 + 16 >> 2] | 0) >>> 0 >= $5847 >>> 0) break;
           $5862 = HEAP32[$$013$i$in$i$i$i2705 + 4 >> 2] | 0;
           if (!$5862) {
            $$0$ph5$i$i$i$i2710 = $$0$ph7$i$i$i$i2702;
            break L1955;
           } else $$013$i$in$i$i$i2705 = $5862;
          }
          $$01$ph6$i$in$i$i$i2703 = HEAP32[$$013$i$in$i$i$i2705 >> 2] | 0;
          if (!$$01$ph6$i$in$i$i$i2703) {
           $$0$ph5$i$i$i$i2710 = $$013$i$in$i$i$i2705;
           break;
          } else $$0$ph7$i$i$i$i2702 = $$013$i$in$i$i$i2705;
         }
         if (($$0$ph5$i$i$i$i2710 | 0) != ($5856 | 0)) if ((HEAP32[$$0$ph5$i$i$i$i2710 + 16 >> 2] | 0) >>> 0 <= $5847 >>> 0) {
          label = 2309;
          break;
         }
        }
       } while ((HEAP32[$$idx$val$i2697 + ($i$0$in$i2700 * 144 | 0) >> 2] | 0) != 5);
       if ((label | 0) == 2309) {
        label = 0;
        $5868 = HEAP32[$$0$ph5$i$i$i$i2710 + 20 >> 2] | 0;
        if ($5868) {
         $5870 = HEAP32[$356 >> 2] | 0;
         do if (!$5870) {
          HEAP32[$0 >> 2] = $358;
          $$0$i$i2689 = $358;
          $5890 = $358;
         } else {
          $__nd$0$in$i$i2687 = $5870;
          while (1) {
           $5873 = HEAP32[$__nd$0$in$i$i2687 + 16 >> 2] | 0;
           if ($5847 >>> 0 < $5873 >>> 0) {
            $5875 = HEAP32[$__nd$0$in$i$i2687 >> 2] | 0;
            if (!$5875) {
             label = 2313;
             break;
            } else {
             $__nd$0$in$i$i2687 = $5875;
             continue;
            }
           }
           if ($5873 >>> 0 >= $5847 >>> 0) {
            label = 2317;
            break;
           }
           $5878 = $__nd$0$in$i$i2687 + 4 | 0;
           $5879 = HEAP32[$5878 >> 2] | 0;
           if (!$5879) {
            label = 2316;
            break;
           } else $__nd$0$in$i$i2687 = $5879;
          }
          if ((label | 0) == 2313) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i$i2687;
           $$0$i$i2689 = $__nd$0$in$i$i2687;
           $5890 = $__nd$0$in$i$i2687;
           break;
          } else if ((label | 0) == 2316) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i$i2687;
           $$0$i$i2689 = $5878;
           $5890 = $__nd$0$in$i$i2687;
           break;
          } else if ((label | 0) == 2317) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i$i2687;
           $$0$i$i2689 = $0;
           $5890 = $__nd$0$in$i$i2687;
           break;
          }
         } while (0);
         $5881 = HEAP32[$$0$i$i2689 >> 2] | 0;
         if (!$5881) {
          __THREW__ = 0;
          $5883 = invoke_ii(67, 24) | 0;
          $5884 = __THREW__;
          __THREW__ = 0;
          if ($5884 & 1) {
           label = 2325;
           break L1;
          }
          HEAP32[$5883 + 16 >> 2] = $5847;
          HEAP32[$5883 + 20 >> 2] = 0;
          HEAP32[$5883 >> 2] = 0;
          HEAP32[$5883 + 4 >> 2] = 0;
          HEAP32[$5883 + 8 >> 2] = $5890;
          HEAP32[$$0$i$i2689 >> 2] = $5883;
          $5892 = HEAP32[HEAP32[$env137 >> 2] >> 2] | 0;
          if (!$5892) $5895 = $5883; else {
           HEAP32[$env137 >> 2] = $5892;
           $5895 = HEAP32[$$0$i$i2689 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$356 >> 2] | 0, $5895);
          HEAP32[$357 >> 2] = (HEAP32[$357 >> 2] | 0) + 1;
          $__r$0$i2693 = $5883;
         } else $__r$0$i2693 = $5881;
         HEAP32[$__r$0$i2693 + 20 >> 2] = $5868;
        }
       }
       $5848 = $5848 + 4 | 0;
      } while (($5848 | 0) != ($$idx274$val | 0));
      $$idx$val$i$i2370$pre = HEAP32[$env137 >> 2] | 0;
      HEAP32[$359 >> 2] = 0;
      HEAP32[$360 >> 2] = 0;
      HEAP32[$177 >> 2] = $361;
      if (($$idx$val$i$i2370$pre | 0) != ($358 | 0)) {
       $$idx$val$i15$i$i2373 = $$idx$val$i$i2370$pre;
       while (1) {
        __THREW__ = 0;
        $5905 = invoke_ii(67, 24) | 0;
        $5906 = __THREW__;
        __THREW__ = 0;
        if ($5906 & 1) {
         label = 2390;
         break L1;
        }
        $5910 = $$idx$val$i15$i$i2373 + 16 | 0;
        $5912 = HEAP32[$5910 >> 2] | 0;
        $5915 = HEAP32[$5910 + 4 >> 2] | 0;
        $5916 = $5905 + 16 | 0;
        HEAP32[$5916 >> 2] = $5912;
        HEAP32[$5916 + 4 >> 2] = $5915;
        $5920 = $5912;
        $$pre$i$i$i$i$i$i2375 = HEAP32[$361 >> 2] | 0;
        do if ((HEAP32[$177 >> 2] | 0) == ($361 | 0)) {
         $5933 = $361;
         label = 2334;
        } else {
         $5922 = ($$pre$i$i$i$i$i$i2375 | 0) == 0;
         if ($5922) {
          $$0$i$i$i$i$i$i$i$i2379 = $361;
          while (1) {
           $5927 = HEAP32[$$0$i$i$i$i$i$i$i$i2379 + 8 >> 2] | 0;
           if ((HEAP32[$5927 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2379 | 0)) $$0$i$i$i$i$i$i$i$i2379 = $5927; else {
            $$01$i$i$i$i$i$i$i$i2381 = $5927;
            break;
           }
          }
         } else {
          $$0$i$i$i$i$i$i$i$i$i2377 = $$pre$i$i$i$i$i$i2375;
          while (1) {
           $5924 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2377 + 4 >> 2] | 0;
           if (!$5924) {
            $$01$i$i$i$i$i$i$i$i2381 = $$0$i$i$i$i$i$i$i$i$i2377;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i2377 = $5924;
          }
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i2381 + 16 >> 2] | 0) >>> 0 < $5920 >>> 0) {
          $5933 = $$01$i$i$i$i$i$i$i$i2381;
          label = 2334;
         } else {
          if ($5922) {
           HEAP32[$0 >> 2] = $361;
           $$0$i$i$i$i1$i$i2390 = $361;
           $5947 = $361;
           break;
          } else $__nd$0$in$i21$i$i$i$i$i$i2386 = $$pre$i$i$i$i$i$i2375;
          while (1) {
           $$idx2$val$i23$i$i$i$i$i$i2388 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i2386 + 16 >> 2] | 0;
           if ($5920 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i2388 >>> 0) {
            $5937 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i2386 >> 2] | 0;
            if (!$5937) {
             label = 2340;
             break;
            } else {
             $__nd$0$in$i21$i$i$i$i$i$i2386 = $5937;
             continue;
            }
           }
           if ($$idx2$val$i23$i$i$i$i$i$i2388 >>> 0 >= $5920 >>> 0) {
            label = 2344;
            break;
           }
           $5940 = $__nd$0$in$i21$i$i$i$i$i$i2386 + 4 | 0;
           $5941 = HEAP32[$5940 >> 2] | 0;
           if (!$5941) {
            label = 2343;
            break;
           } else $__nd$0$in$i21$i$i$i$i$i$i2386 = $5941;
          }
          if ((label | 0) == 2340) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2386;
           $$0$i$i$i$i1$i$i2390 = $__nd$0$in$i21$i$i$i$i$i$i2386;
           $5947 = $__nd$0$in$i21$i$i$i$i$i$i2386;
           break;
          } else if ((label | 0) == 2343) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2386;
           $$0$i$i$i$i1$i$i2390 = $5940;
           $5947 = $__nd$0$in$i21$i$i$i$i$i$i2386;
           break;
          } else if ((label | 0) == 2344) {
           label = 0;
           HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2386;
           $$0$i$i$i$i1$i$i2390 = $0;
           $5947 = $__nd$0$in$i21$i$i$i$i$i$i2386;
           break;
          }
         }
        } while (0);
        do if ((label | 0) == 2334) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i2375) {
          HEAP32[$0 >> 2] = $361;
          $$0$i$i$i$i1$i$i2390 = $361;
          $5947 = $361;
          break;
         } else {
          HEAP32[$0 >> 2] = $5933;
          $$0$i$i$i$i1$i$i2390 = $5933 + 4 | 0;
          $5947 = $5933;
          break;
         }
        } while (0);
        $5943 = HEAP32[$$0$i$i$i$i1$i$i2390 >> 2] | 0;
        if (!$5943) {
         HEAP32[$5905 >> 2] = 0;
         HEAP32[$5905 + 4 >> 2] = 0;
         HEAP32[$5905 + 8 >> 2] = $5947;
         HEAP32[$$0$i$i$i$i1$i$i2390 >> 2] = $5905;
         $5949 = HEAP32[HEAP32[$177 >> 2] >> 2] | 0;
         if (!$5949) $5952 = $5905; else {
          HEAP32[$177 >> 2] = $5949;
          $5952 = HEAP32[$$0$i$i$i$i1$i$i2390 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$359 >> 2] | 0, $5952);
         HEAP32[$360 >> 2] = (HEAP32[$360 >> 2] | 0) + 1;
        } else if (!(($5943 | 0) == ($5905 | 0) | ($5905 | 0) == 0)) __ZdlPv($5905);
        $5958 = HEAP32[$$idx$val$i15$i$i2373 + 4 >> 2] | 0;
        if (!$5958) {
         $$0$i$i$i$i$i2400 = $$idx$val$i15$i$i2373;
         while (1) {
          $5963 = HEAP32[$$0$i$i$i$i$i2400 + 8 >> 2] | 0;
          if ((HEAP32[$5963 >> 2] | 0) == ($$0$i$i$i$i$i2400 | 0)) {
           $$01$i$i$i$i$i2402 = $5963;
           break;
          } else $$0$i$i$i$i$i2400 = $5963;
         }
        } else {
         $$0$i$i$i$i$i$i2398 = $5958;
         while (1) {
          $5960 = HEAP32[$$0$i$i$i$i$i$i2398 >> 2] | 0;
          if (!$5960) {
           $$01$i$i$i$i$i2402 = $$0$i$i$i$i$i$i2398;
           break;
          } else $$0$i$i$i$i$i$i2398 = $5960;
         }
        }
        if (($$01$i$i$i$i$i2402 | 0) == ($358 | 0)) break; else $$idx$val$i15$i$i2373 = $$01$i$i$i$i$i2402;
       }
      }
     }
     $5968 = HEAP32[$5708 + 52 >> 2] | 0;
     $5970 = HEAP32[$5708 + 56 >> 2] | 0;
     HEAP32[$362 >> 2] = 0;
     HEAP32[$363 >> 2] = 0;
     HEAP32[$178 >> 2] = $364;
     $$idx$val$i$i2409 = HEAP32[$5785 >> 2] | 0;
     if (($$idx$val$i$i2409 | 0) != ($5788 | 0)) {
      $$idx$val$i15$i$i2412 = $$idx$val$i$i2409;
      while (1) {
       __THREW__ = 0;
       $5972 = invoke_ii(67, 24) | 0;
       $5973 = __THREW__;
       __THREW__ = 0;
       if ($5973 & 1) {
        label = 2391;
        break L1;
       }
       $5977 = $$idx$val$i15$i$i2412 + 16 | 0;
       $5979 = HEAP32[$5977 >> 2] | 0;
       $5982 = HEAP32[$5977 + 4 >> 2] | 0;
       $5983 = $5972 + 16 | 0;
       HEAP32[$5983 >> 2] = $5979;
       HEAP32[$5983 + 4 >> 2] = $5982;
       $5987 = $5979;
       $$pre$i$i$i$i$i$i2414 = HEAP32[$364 >> 2] | 0;
       do if ((HEAP32[$178 >> 2] | 0) == ($364 | 0)) {
        $6000 = $364;
        label = 2365;
       } else {
        $5989 = ($$pre$i$i$i$i$i$i2414 | 0) == 0;
        if ($5989) {
         $$0$i$i$i$i$i$i$i$i2418 = $364;
         while (1) {
          $5994 = HEAP32[$$0$i$i$i$i$i$i$i$i2418 + 8 >> 2] | 0;
          if ((HEAP32[$5994 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2418 | 0)) $$0$i$i$i$i$i$i$i$i2418 = $5994; else {
           $$01$i$i$i$i$i$i$i$i2420 = $5994;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i2416 = $$pre$i$i$i$i$i$i2414;
         while (1) {
          $5991 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2416 + 4 >> 2] | 0;
          if (!$5991) {
           $$01$i$i$i$i$i$i$i$i2420 = $$0$i$i$i$i$i$i$i$i$i2416;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i2416 = $5991;
         }
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i2420 + 16 >> 2] | 0) >>> 0 < $5987 >>> 0) {
         $6000 = $$01$i$i$i$i$i$i$i$i2420;
         label = 2365;
        } else {
         if ($5989) {
          HEAP32[$0 >> 2] = $364;
          $$0$i$i$i$i1$i$i2429 = $364;
          $6014 = $364;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i2425 = $$pre$i$i$i$i$i$i2414;
         while (1) {
          $$idx2$val$i23$i$i$i$i$i$i2427 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i2425 + 16 >> 2] | 0;
          if ($5987 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i2427 >>> 0) {
           $6004 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i2425 >> 2] | 0;
           if (!$6004) {
            label = 2371;
            break;
           } else {
            $__nd$0$in$i21$i$i$i$i$i$i2425 = $6004;
            continue;
           }
          }
          if ($$idx2$val$i23$i$i$i$i$i$i2427 >>> 0 >= $5987 >>> 0) {
           label = 2375;
           break;
          }
          $6007 = $__nd$0$in$i21$i$i$i$i$i$i2425 + 4 | 0;
          $6008 = HEAP32[$6007 >> 2] | 0;
          if (!$6008) {
           label = 2374;
           break;
          } else $__nd$0$in$i21$i$i$i$i$i$i2425 = $6008;
         }
         if ((label | 0) == 2371) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2425;
          $$0$i$i$i$i1$i$i2429 = $__nd$0$in$i21$i$i$i$i$i$i2425;
          $6014 = $__nd$0$in$i21$i$i$i$i$i$i2425;
          break;
         } else if ((label | 0) == 2374) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2425;
          $$0$i$i$i$i1$i$i2429 = $6007;
          $6014 = $__nd$0$in$i21$i$i$i$i$i$i2425;
          break;
         } else if ((label | 0) == 2375) {
          label = 0;
          HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i2425;
          $$0$i$i$i$i1$i$i2429 = $0;
          $6014 = $__nd$0$in$i21$i$i$i$i$i$i2425;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 2365) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i2414) {
         HEAP32[$0 >> 2] = $364;
         $$0$i$i$i$i1$i$i2429 = $364;
         $6014 = $364;
         break;
        } else {
         HEAP32[$0 >> 2] = $6000;
         $$0$i$i$i$i1$i$i2429 = $6000 + 4 | 0;
         $6014 = $6000;
         break;
        }
       } while (0);
       $6010 = HEAP32[$$0$i$i$i$i1$i$i2429 >> 2] | 0;
       if (!$6010) {
        HEAP32[$5972 >> 2] = 0;
        HEAP32[$5972 + 4 >> 2] = 0;
        HEAP32[$5972 + 8 >> 2] = $6014;
        HEAP32[$$0$i$i$i$i1$i$i2429 >> 2] = $5972;
        $6016 = HEAP32[HEAP32[$178 >> 2] >> 2] | 0;
        if (!$6016) $6019 = $5972; else {
         HEAP32[$178 >> 2] = $6016;
         $6019 = HEAP32[$$0$i$i$i$i1$i$i2429 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$362 >> 2] | 0, $6019);
        HEAP32[$363 >> 2] = (HEAP32[$363 >> 2] | 0) + 1;
       } else if (!(($6010 | 0) == ($5972 | 0) | ($5972 | 0) == 0)) __ZdlPv($5972);
       $6025 = HEAP32[$$idx$val$i15$i$i2412 + 4 >> 2] | 0;
       if (!$6025) {
        $$0$i$i$i$i$i2439 = $$idx$val$i15$i$i2412;
        while (1) {
         $6030 = HEAP32[$$0$i$i$i$i$i2439 + 8 >> 2] | 0;
         if ((HEAP32[$6030 >> 2] | 0) == ($$0$i$i$i$i$i2439 | 0)) {
          $$01$i$i$i$i$i2441 = $6030;
          break;
         } else $$0$i$i$i$i$i2439 = $6030;
        }
       } else {
        $$0$i$i$i$i$i$i2437 = $6025;
        while (1) {
         $6027 = HEAP32[$$0$i$i$i$i$i$i2437 >> 2] | 0;
         if (!$6027) {
          $$01$i$i$i$i$i2441 = $$0$i$i$i$i$i$i2437;
          break;
         } else $$0$i$i$i$i$i$i2437 = $6027;
        }
       }
       if (($$01$i$i$i$i$i2441 | 0) == ($5788 | 0)) break; else $$idx$val$i15$i$i2412 = $$01$i$i$i$i$i2441;
      }
     }
     __THREW__ = 0;
     invoke_viiiiii(20, $176 | 0, $this | 0, $177 | 0, $5968 | 0, $5970 | 0, $178 | 0);
     $6034 = __THREW__;
     __THREW__ = 0;
     if ($6034 & 1) {
      label = 2392;
      break L1;
     };
     HEAP32[$200 + 0 >> 2] = HEAP32[$176 + 0 >> 2];
     HEAP32[$200 + 4 >> 2] = HEAP32[$176 + 4 >> 2];
     HEAP32[$200 + 8 >> 2] = HEAP32[$176 + 8 >> 2];
     HEAP32[$200 + 12 >> 2] = HEAP32[$176 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($178, HEAP32[$362 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($177, HEAP32[$359 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env137, HEAP32[$356 >> 2] | 0);
     $$414 = $$111$ph4195;
     label = 2491;
     break;
    }
   case 2396:
    {
     label = 0;
     $6058 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
     $6059 = $$idx$val$i839 + -104 | 0;
     $6060 = $$idx$val$i839 + -88 | 0;
     HEAP32[$366 >> 2] = 792;
     HEAP32[$ss141 >> 2] = 940;
     HEAP32[$365 >> 2] = 960;
     HEAP32[$368 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $369 | 0, $367 | 0);
     $6061 = __THREW__;
     __THREW__ = 0;
     if ($6061 & 1) {
      label = 2400;
      break L1;
     }
     HEAP32[$370 >> 2] = 0;
     HEAP32[$371 >> 2] = -1;
     HEAP32[$ss141 >> 2] = 772;
     HEAP32[$365 >> 2] = 812;
     HEAP32[$366 >> 2] = 792;
     __THREW__ = 0;
     invoke_vi(179, $367 | 0);
     $6063 = __THREW__;
     __THREW__ = 0;
     if ($6063 & 1) {
      label = 2401;
      break L1;
     }
     HEAP32[$367 >> 2] = 1104;
     HEAP32[$372 + 0 >> 2] = 0;
     HEAP32[$372 + 4 >> 2] = 0;
     HEAP32[$372 + 8 >> 2] = 0;
     HEAP32[$372 + 12 >> 2] = 0;
     HEAP32[$373 >> 2] = 24;
     HEAP32[$0 + 0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $367 | 0, $0 | 0);
     $6065 = __THREW__;
     __THREW__ = 0;
     if ($6065 & 1) {
      label = 2399;
      break L1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     if ((HEAP32[$6059 >> 2] | 0) == 19) {
      $6076 = HEAP32[$$idx$val$i839 + -96 >> 2] | 0;
      $6077 = $6076 + 8 | 0;
      $6078 = HEAP8[$6077 >> 0] | 0;
      if (!($6078 & 1)) {
       $6088 = $6077 + 1 | 0;
       $6089 = ($6078 & 255) >>> 1;
      } else {
       $6088 = HEAP32[$6076 + 16 >> 2] | 0;
       $6089 = HEAP32[$6076 + 12 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $374 | 0, $6088 | 0, $6089 | 0) | 0;
      $6090 = __THREW__;
      __THREW__ = 0;
      if ($6090 & 1) {
       label = 2409;
       break L1;
      }
     } else {
      HEAP32[$200 + 0 >> 2] = HEAP32[$6059 + 0 >> 2];
      HEAP32[$200 + 4 >> 2] = HEAP32[$6059 + 4 >> 2];
      HEAP32[$200 + 8 >> 2] = HEAP32[$6059 + 8 >> 2];
      HEAP32[$200 + 12 >> 2] = HEAP32[$6059 + 12 >> 2];
      $6095 = HEAP32[$6058 + 48 >> 2] | 0;
      __THREW__ = 0;
      invoke_viii(3, $1 | 0, 37152, 0);
      $6096 = __THREW__;
      __THREW__ = 0;
      if ($6096 & 1) {
       label = 2409;
       break L1;
      }
      __THREW__ = 0;
      invoke_viiiii(6, $179 | 0, $this | 0, $6095 + 4 | 0, 0, $1 | 0);
      $6099 = __THREW__;
      __THREW__ = 0;
      if ($6099 & 1) {
       label = 2413;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
      $6103 = HEAP8[$179 >> 0] | 0;
      if (!($6103 & 1)) {
       $6110 = $379;
       $6111 = ($6103 & 255) >>> 1;
      } else {
       $6110 = HEAP32[$380 >> 2] | 0;
       $6111 = HEAP32[$381 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $374 | 0, $6110 | 0, $6111 | 0) | 0;
      $6112 = __THREW__;
      __THREW__ = 0;
      if ($6112 & 1) {
       label = 2419;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($179);
     }
     if ((HEAP32[$6060 >> 2] | 0) == 19) {
      $6119 = HEAP32[$$idx$val$i839 + -80 >> 2] | 0;
      $6120 = $6119 + 8 | 0;
      $6121 = HEAP8[$6120 >> 0] | 0;
      if (!($6121 & 1)) {
       $6131 = $6120 + 1 | 0;
       $6132 = ($6121 & 255) >>> 1;
      } else {
       $6131 = HEAP32[$6119 + 16 >> 2] | 0;
       $6132 = HEAP32[$6119 + 12 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $374 | 0, $6131 | 0, $6132 | 0) | 0;
      $6133 = __THREW__;
      __THREW__ = 0;
      if ($6133 & 1) {
       label = 2409;
       break L1;
      }
     } else {
      HEAP32[$200 + 0 >> 2] = HEAP32[$6060 + 0 >> 2];
      HEAP32[$200 + 4 >> 2] = HEAP32[$6060 + 4 >> 2];
      HEAP32[$200 + 8 >> 2] = HEAP32[$6060 + 8 >> 2];
      HEAP32[$200 + 12 >> 2] = HEAP32[$6060 + 12 >> 2];
      $6136 = HEAP32[$6058 + 56 >> 2] | 0;
      __THREW__ = 0;
      invoke_viii(3, $2 | 0, 37152, 0);
      $6137 = __THREW__;
      __THREW__ = 0;
      if ($6137 & 1) {
       label = 2409;
       break L1;
      }
      __THREW__ = 0;
      invoke_viiiii(6, $180 | 0, $this | 0, $6136 + 4 | 0, 0, $2 | 0);
      $6140 = __THREW__;
      __THREW__ = 0;
      if ($6140 & 1) {
       label = 2427;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
      $6144 = HEAP8[$180 >> 0] | 0;
      if (!($6144 & 1)) {
       $6151 = $376;
       $6152 = ($6144 & 255) >>> 1;
      } else {
       $6151 = HEAP32[$377 >> 2] | 0;
       $6152 = HEAP32[$378 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $374 | 0, $6151 | 0, $6152 | 0) | 0;
      $6153 = __THREW__;
      __THREW__ = 0;
      if ($6153 & 1) {
       label = 2433;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($180);
     }
     __THREW__ = 0;
     invoke_vii(43, $182 | 0, $367 | 0);
     $6157 = __THREW__;
     __THREW__ = 0;
     if ($6157 & 1) {
      label = 2409;
      break L1;
     }
     __THREW__ = 0;
     invoke_viii(14, $181 | 0, $this | 0, $182 | 0);
     $6159 = __THREW__;
     __THREW__ = 0;
     if ($6159 & 1) {
      label = 2437;
      break L1;
     };
     HEAP32[$200 + 0 >> 2] = HEAP32[$181 + 0 >> 2];
     HEAP32[$200 + 4 >> 2] = HEAP32[$181 + 4 >> 2];
     HEAP32[$200 + 8 >> 2] = HEAP32[$181 + 8 >> 2];
     HEAP32[$200 + 12 >> 2] = HEAP32[$181 + 12 >> 2];
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($182);
     HEAP32[$ss141 >> 2] = 772;
     HEAP32[$375 >> 2] = 812;
     HEAP32[$366 >> 2] = 792;
     HEAP32[$367 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($372);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($367);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($365);
     $$414 = $$111$ph4195;
     label = 2491;
     break;
    }
   case 2439:
    {
     label = 0;
     $6164 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
     $6165 = HEAP32[$200 >> 2] | 0;
     if (($6165 | 0) == 1) {
      $6166 = $6164 + 48 | 0;
      if (HEAP32[$6166 >> 2] | 0) {
       label = 2442;
       break L1;
      }
      $6170 = HEAP8[$201 >> 0] ^ 1;
      HEAP32[$223 >> 2] = 1;
      HEAP8[$201 >> 0] = $6170;
      HEAP8[$244 + 0 >> 0] = HEAP8[$$sroa$3 + 0 >> 0] | 0;
      HEAP8[$244 + 1 >> 0] = HEAP8[$$sroa$3 + 1 >> 0] | 0;
      HEAP8[$244 + 2 >> 0] = HEAP8[$$sroa$3 + 2 >> 0] | 0;
      HEAP8[$244 + 3 >> 0] = HEAP8[$$sroa$3 + 3 >> 0] | 0;
      HEAP8[$244 + 4 >> 0] = HEAP8[$$sroa$3 + 4 >> 0] | 0;
      HEAP8[$244 + 5 >> 0] = HEAP8[$$sroa$3 + 5 >> 0] | 0;
      HEAP8[$244 + 6 >> 0] = HEAP8[$$sroa$3 + 6 >> 0] | 0;
      $$414 = $$111$ph4195;
      label = 2491;
      break;
     } else if (($6165 | 0) != 2) {
      label = 2467;
      break L1;
     }
     $6194 = $6164 + 48 | 0;
     $6195 = HEAP32[$6194 >> 2] | 0;
     if (($6195 | 0) == 3) {
      $6197 = -+HEAPF64[$245 >> 3];
      HEAP32[$223 >> 2] = 2;
      HEAPF64[$245 >> 3] = $6197;
      $$414 = $$111$ph4195;
      label = 2491;
      break;
     } else if (($6195 | 0) == 1) {
      $6201 = +(~~+HEAPF64[$245 >> 3] ^ -1 | 0);
      HEAP32[$223 >> 2] = 2;
      HEAPF64[$245 >> 3] = $6201;
      $$414 = $$111$ph4195;
      label = 2491;
      break;
     } else if (($6195 | 0) == 2) {
      $$414 = $$111$ph4195;
      label = 2491;
      break;
     } else {
      label = 2456;
      break L1;
     }
     break;
    }
   }
   if ((label | 0) == 2491) {
    label = 0;
    __ZN12_GLOBAL__N_15Stack3popEv($194);
    $$111$ph$be = $$414;
   }
   $$idx$val$i7115768 = HEAP32[$$idx$i >> 2] | 0;
   $$idx1$val$i69733974196 = HEAP32[$$idx1$i >> 2] | 0;
   if (($$idx1$val$i69733974196 - $$idx$val$i7115768 | 0) >>> 0 <= $197 >>> 0) {
    label = 2493;
    break L1;
   } else $$111$ph4195 = $$111$ph$be;
  }
  switch (label | 0) {
  case 742:
   {
    label = 0;
    HEAP32[$1798 >> 2] = 2;
    $2279 = $$idx$val$i839 + -104 | 0;
    HEAP32[$2279 + 0 >> 2] = HEAP32[$200 + 0 >> 2];
    HEAP32[$2279 + 4 >> 2] = HEAP32[$200 + 4 >> 2];
    HEAP32[$2279 + 8 >> 2] = HEAP32[$200 + 8 >> 2];
    HEAP32[$2279 + 12 >> 2] = HEAP32[$200 + 12 >> 2];
    $$010 = HEAP32[$2270 + 56 >> 2] | 0;
    continue L1;
    break;
   }
  case 1023:
   {
    label = 0;
    $3012 = HEAP32[$$idx262$val + ($3004 << 2) >> 2] | 0;
    HEAP32[$382 >> 2] = 0;
    HEAP32[$383 >> 2] = 0;
    HEAP32[$bindings65 >> 2] = $384;
    $$idx$val$i$i1034 = HEAP32[$2927 + 8 >> 2] | 0;
    $3014 = $2927 + 12 | 0;
    if (($$idx$val$i$i1034 | 0) != ($3014 | 0)) {
     $$idx$val$i15$i$i1037 = $$idx$val$i$i1034;
     while (1) {
      __THREW__ = 0;
      $3016 = invoke_ii(67, 24) | 0;
      $3017 = __THREW__;
      __THREW__ = 0;
      if ($3017 & 1) {
       label = 1054;
       break L1;
      }
      $3021 = $$idx$val$i15$i$i1037 + 16 | 0;
      $3023 = HEAP32[$3021 >> 2] | 0;
      $3026 = HEAP32[$3021 + 4 >> 2] | 0;
      $3027 = $3016 + 16 | 0;
      HEAP32[$3027 >> 2] = $3023;
      HEAP32[$3027 + 4 >> 2] = $3026;
      $3031 = $3023;
      $$pre$i$i$i$i$i$i1039 = HEAP32[$384 >> 2] | 0;
      do if ((HEAP32[$bindings65 >> 2] | 0) == ($384 | 0)) {
       $3044 = $384;
       label = 1031;
      } else {
       $3033 = ($$pre$i$i$i$i$i$i1039 | 0) == 0;
       if ($3033) {
        $$0$i$i$i$i$i$i$i$i1043 = $384;
        while (1) {
         $3038 = HEAP32[$$0$i$i$i$i$i$i$i$i1043 + 8 >> 2] | 0;
         if ((HEAP32[$3038 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i1043 | 0)) $$0$i$i$i$i$i$i$i$i1043 = $3038; else {
          $$01$i$i$i$i$i$i$i$i1045 = $3038;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i1041 = $$pre$i$i$i$i$i$i1039;
        while (1) {
         $3035 = HEAP32[$$0$i$i$i$i$i$i$i$i$i1041 + 4 >> 2] | 0;
         if (!$3035) {
          $$01$i$i$i$i$i$i$i$i1045 = $$0$i$i$i$i$i$i$i$i$i1041;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i1041 = $3035;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i1045 + 16 >> 2] | 0) >>> 0 < $3031 >>> 0) {
        $3044 = $$01$i$i$i$i$i$i$i$i1045;
        label = 1031;
       } else {
        if ($3033) {
         HEAP32[$0 >> 2] = $384;
         $$0$i$i$i$i1$i$i1054 = $384;
         $3058 = $384;
         break;
        } else $__nd$0$in$i21$i$i$i$i$i$i1050 = $$pre$i$i$i$i$i$i1039;
        while (1) {
         $$idx2$val$i23$i$i$i$i$i$i1052 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i1050 + 16 >> 2] | 0;
         if ($3031 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i1052 >>> 0) {
          $3048 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i1050 >> 2] | 0;
          if (!$3048) {
           label = 1037;
           break;
          } else {
           $__nd$0$in$i21$i$i$i$i$i$i1050 = $3048;
           continue;
          }
         }
         if ($$idx2$val$i23$i$i$i$i$i$i1052 >>> 0 >= $3031 >>> 0) {
          label = 1041;
          break;
         }
         $3051 = $__nd$0$in$i21$i$i$i$i$i$i1050 + 4 | 0;
         $3052 = HEAP32[$3051 >> 2] | 0;
         if (!$3052) {
          label = 1040;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i1050 = $3052;
        }
        if ((label | 0) == 1037) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i1050;
         $$0$i$i$i$i1$i$i1054 = $__nd$0$in$i21$i$i$i$i$i$i1050;
         $3058 = $__nd$0$in$i21$i$i$i$i$i$i1050;
         break;
        } else if ((label | 0) == 1040) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i1050;
         $$0$i$i$i$i1$i$i1054 = $3051;
         $3058 = $__nd$0$in$i21$i$i$i$i$i$i1050;
         break;
        } else if ((label | 0) == 1041) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$in$i21$i$i$i$i$i$i1050;
         $$0$i$i$i$i1$i$i1054 = $0;
         $3058 = $__nd$0$in$i21$i$i$i$i$i$i1050;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 1031) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i1039) {
        HEAP32[$0 >> 2] = $384;
        $$0$i$i$i$i1$i$i1054 = $384;
        $3058 = $384;
        break;
       } else {
        HEAP32[$0 >> 2] = $3044;
        $$0$i$i$i$i1$i$i1054 = $3044 + 4 | 0;
        $3058 = $3044;
        break;
       }
      } while (0);
      $3054 = HEAP32[$$0$i$i$i$i1$i$i1054 >> 2] | 0;
      if (!$3054) {
       HEAP32[$3016 >> 2] = 0;
       HEAP32[$3016 + 4 >> 2] = 0;
       HEAP32[$3016 + 8 >> 2] = $3058;
       HEAP32[$$0$i$i$i$i1$i$i1054 >> 2] = $3016;
       $3060 = HEAP32[HEAP32[$bindings65 >> 2] >> 2] | 0;
       if (!$3060) $3063 = $3016; else {
        HEAP32[$bindings65 >> 2] = $3060;
        $3063 = HEAP32[$$0$i$i$i$i1$i$i1054 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$382 >> 2] | 0, $3063);
       HEAP32[$383 >> 2] = (HEAP32[$383 >> 2] | 0) + 1;
      } else if (!(($3054 | 0) == ($3016 | 0) | ($3016 | 0) == 0)) __ZdlPv($3016);
      $3069 = HEAP32[$$idx$val$i15$i$i1037 + 4 >> 2] | 0;
      if (!$3069) {
       $$0$i$i$i$i$i1064 = $$idx$val$i15$i$i1037;
       while (1) {
        $3074 = HEAP32[$$0$i$i$i$i$i1064 + 8 >> 2] | 0;
        if ((HEAP32[$3074 >> 2] | 0) == ($$0$i$i$i$i$i1064 | 0)) {
         $$01$i$i$i$i$i1066 = $3074;
         break;
        } else $$0$i$i$i$i$i1064 = $3074;
       }
      } else {
       $$0$i$i$i$i$i$i1062 = $3069;
       while (1) {
        $3071 = HEAP32[$$0$i$i$i$i$i$i1062 >> 2] | 0;
        if (!$3071) {
         $$01$i$i$i$i$i1066 = $$0$i$i$i$i$i$i1062;
         break;
        } else $$0$i$i$i$i$i$i1062 = $3071;
       }
      }
      if (($$01$i$i$i$i$i1066 | 0) == ($3014 | 0)) break; else $$idx$val$i15$i$i1037 = $$01$i$i$i$i$i1066;
     }
    }
    __THREW__ = 0;
    $3083 = invoke_iii(34, $bindings65 | 0, HEAP32[$2927 + 28 >> 2] | 0) | 0;
    $3084 = __THREW__;
    __THREW__ = 0;
    if ($3084 & 1) {
     label = 1058;
     break L1;
    }
    HEAP32[$3083 >> 2] = $3012;
    __THREW__ = 0;
    invoke_viiiiii(19, $194 | 0, $2925 + 4 | 0, $2927 | 0, HEAP32[$2927 + 20 >> 2] | 0, HEAP32[$2927 + 24 >> 2] | 0, $bindings65 | 0);
    $3091 = __THREW__;
    __THREW__ = 0;
    if ($3091 & 1) {
     label = 1058;
     break L1;
    }
    $3094 = HEAP32[$2927 + 40 >> 2] | 0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$382 >> 2] | 0);
    $$010 = $3094;
    continue L1;
    break;
   }
  case 1939:
   {
    label = 0;
    __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($194, $3100 + 4 | 0, $4992, HEAP32[$4992 + 40 >> 2] | 0, HEAP32[$4992 + 44 >> 2] | 0, $4992 + 28 | 0);
    $$010 = HEAP32[$4992 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 1959:
   {
    label = 0;
    $5056 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
    if ((HEAP32[$200 >> 2] | 0) != 1) {
     label = 1960;
     break L1;
    }
    if (!(HEAP8[$201 >> 0] | 0)) $$in = $5056 + 56 | 0; else $$in = $5056 + 52 | 0;
    $5085 = HEAP32[$$in >> 2] | 0;
    __ZN12_GLOBAL__N_15Stack3popEv($194);
    $$010 = $5085;
    continue L1;
    break;
   }
  case 2012:
   {
    label = 0;
    __ZN12_GLOBAL__N_15Stack3popEv($194);
    __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($194, $5087 + 4 | 0, $5177, HEAP32[$5177 + 40 >> 2] | 0, HEAP32[$5177 + 44 >> 2] | 0, $5177 + 28 | 0);
    $$010 = HEAP32[$5177 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 2013:
   {
    label = 0;
    $5191 = HEAP32[$$idx$val$i839 + -96 >> 2] | 0;
    if (!$5191) {
     label = 2014;
     break L1;
    }
    if ((HEAP32[$200 >> 2] | 0) != 19) {
     label = 2016;
     break L1;
    }
    $5218 = (HEAP32[$201 >> 2] | 0) + 8 | 0;
    $5219 = HEAP32[$237 >> 2] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($0, $5219, $5218);
    $5221 = HEAP32[$0 >> 2] | 0;
    if (($5221 | 0) == ($5219 + 4 | 0)) {
     $5225 = __Znwj(12) | 0;
     __THREW__ = 0;
     invoke_vii(40, $5225 | 0, $5218 | 0);
     $5226 = __THREW__;
     __THREW__ = 0;
     if ($5226 & 1) {
      label = 2031;
      break L1;
     }
     HEAP32[(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($5219, $5218) | 0) >> 2] = $5225;
     $$0$i2165 = $5225;
    } else $$0$i2165 = HEAP32[$5221 + 28 >> 2] | 0;
    __ZN12_GLOBAL__N_15Stack3popEv($194);
    $$010 = __ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier($this, $5087 + 4 | 0, $5191, $$0$i2165) | 0;
    continue L1;
    break;
   }
  case 2082:
   {
    label = 0;
    $5352 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
    $5353 = HEAP32[$200 >> 2] | 0;
    if (!(($5353 | 0) == 19 | ($5353 | 0) == 18 | ($5353 | 0) == 16)) {
     label = 2083;
     break L1;
    }
    $5377 = HEAP32[$5352 + 52 >> 2] | 0;
    HEAP32[$1798 >> 2] = 10;
    $5378 = $$idx$val$i839 + -104 | 0;
    HEAP32[$5378 + 0 >> 2] = HEAP32[$200 + 0 >> 2];
    HEAP32[$5378 + 4 >> 2] = HEAP32[$200 + 4 >> 2];
    HEAP32[$5378 + 8 >> 2] = HEAP32[$200 + 8 >> 2];
    HEAP32[$5378 + 12 >> 2] = HEAP32[$200 + 12 >> 2];
    $$010 = $5377;
    continue L1;
    break;
   }
  case 2132:
   {
    label = 0;
    $$010 = HEAP32[$5468 + 8 >> 2] | 0;
    continue L1;
    break;
   }
  case 2244:
   {
    label = 0;
    HEAP32[$1798 >> 2] = 14;
    $5699 = $$idx$val$i839 + -104 | 0;
    HEAP32[$5699 + 0 >> 2] = HEAP32[$200 + 0 >> 2];
    HEAP32[$5699 + 4 >> 2] = HEAP32[$200 + 4 >> 2];
    HEAP32[$5699 + 8 >> 2] = HEAP32[$200 + 8 >> 2];
    HEAP32[$5699 + 12 >> 2] = HEAP32[$200 + 12 >> 2];
    $5700 = HEAP32[HEAP32[$5685 >> 2] >> 2] | 0;
    HEAP32[(__ZNSt3__13mapIPK10IdentifierPN12_GLOBAL__N_19HeapThunkENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($$idx$val$i839 + -16 | 0, $5664 + 56 | 0) | 0) >> 2] = $5700;
    HEAP32[$$idx$val$i839 + -56 >> 2] = 0;
    $$010 = HEAP32[$5664 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 2395:
   {
    label = 0;
    $6051 = HEAP32[$$idx$val + ($5840 << 2) >> 2] | 0;
    HEAP32[(__ZNSt3__13mapIPK10IdentifierPN12_GLOBAL__N_19HeapThunkENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($$idx$val$i839 + -16 | 0, $5708 + 56 | 0) | 0) >> 2] = $6051;
    $$010 = HEAP32[$5708 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  }
 }
 L2206 : switch (label | 0) {
 case 38:
  {
   $465 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($30, HEAP32[$203 >> 2] | 0);
   ___resumeException($465 | 0);
   break;
  }
 case 58:
  {
   $$107 = ___cxa_find_matching_catch() | 0;
   $$107134 = tempRet0;
   ___resumeException($$107 | 0);
   break;
  }
 case 68:
  {
   $557 = ___cxa_find_matching_catch() | 0;
   $558 = tempRet0;
   $559 = HEAP32[$4 >> 2] | 0;
   if ($559) {
    $561 = HEAP32[$209 >> 2] | 0;
    if (($561 | 0) != ($559 | 0)) HEAP32[$209 >> 2] = $561 + (~(($561 + -4 - $559 | 0) >>> 2) << 2);
    __ZdlPv($559);
   }
   $$0$i = $558;
   $$01$i = $557;
   $814 = HEAP32[$206 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $814);
   ___resumeException($$01$i | 0);
   break;
  }
 case 102:
  {
   $630 = ___cxa_find_matching_catch() | 0;
   $631 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$211 >> 2] | 0);
   $eh$lpad$body11$i$index8Z2D = $631;
   $eh$lpad$body11$i$indexZ2D = $630;
   label = 168;
   break;
  }
 case 112:
  {
   $657 = ___cxa_find_matching_catch() | 0;
   $658 = tempRet0;
   $659 = HEAP32[$2 >> 2] | 0;
   if ($659) {
    $661 = HEAP32[$214 >> 2] | 0;
    if (($661 | 0) != ($659 | 0)) HEAP32[$214 >> 2] = $661 + (~(($661 + -4 - $659 | 0) >>> 2) << 2);
    __ZdlPv($659);
   }
   $$0$i$i = $658;
   $$01$i$i = $657;
   label = 161;
   break;
  }
 case 134:
  {
   $719 = ___cxa_find_matching_catch() | 0;
   $720 = tempRet0;
   __ZdlPv($667);
   $eh$lpad$body6$i$i$index2Z2D = $720;
   $eh$lpad$body6$i$i$indexZ2D = $719;
   label = 157;
   break;
  }
 case 156:
  {
   $785 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body6$i$i$index2Z2D = tempRet0;
   $eh$lpad$body6$i$i$indexZ2D = $785;
   label = 157;
   break;
  }
 case 167:
  {
   $804 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body11$i$index8Z2D = tempRet0;
   $eh$lpad$body11$i$indexZ2D = $804;
   label = 168;
   break;
  }
 case 203:
  {
   $873 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env, HEAP32[$224 >> 2] | 0);
   ___resumeException($873 | 0);
   break;
  }
 case 239:
  {
   $954 = ___cxa_find_matching_catch() | 0;
   $955 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($26, HEAP32[$227 >> 2] | 0);
   $eh$lpad$body$index26Z2D = $955;
   $eh$lpad$body$indexZ2D = $954;
   break;
  }
 case 248:
  {
   $982 = ___cxa_find_matching_catch() | 0;
   $983 = tempRet0;
   $984 = HEAP32[$27 >> 2] | 0;
   if ($984) {
    $986 = HEAP32[$230 >> 2] | 0;
    if (($986 | 0) != ($984 | 0)) HEAP32[$230 >> 2] = $986 + (~(($986 + -4 - $984 | 0) >>> 2) << 2);
    __ZdlPv($984);
   }
   $$0$i544 = $983;
   $$01$i543 = $982;
   label = 352;
   break;
  }
 case 282:
  {
   $1055 = ___cxa_find_matching_catch() | 0;
   $1056 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($24, HEAP32[$232 >> 2] | 0);
   $eh$lpad$body16$i$index20Z2D = $1056;
   $eh$lpad$body16$i$indexZ2D = $1055;
   label = 348;
   break;
  }
 case 292:
  {
   $1082 = ___cxa_find_matching_catch() | 0;
   $1083 = tempRet0;
   $1084 = HEAP32[$25 >> 2] | 0;
   if ($1084) {
    $1086 = HEAP32[$235 >> 2] | 0;
    if (($1086 | 0) != ($1084 | 0)) HEAP32[$235 >> 2] = $1086 + (~(($1086 + -4 - $1084 | 0) >>> 2) << 2);
    __ZdlPv($1084);
   }
   $$0$i$i536 = $1083;
   $$01$i$i535 = $1082;
   label = 341;
   break;
  }
 case 314:
  {
   $1146 = ___cxa_find_matching_catch() | 0;
   $1147 = tempRet0;
   __ZdlPv($1092);
   $eh$lpad$body6$i$i528$index14Z2D = $1147;
   $eh$lpad$body6$i$i528$indexZ2D = $1146;
   label = 337;
   break;
  }
 case 336:
  {
   $1212 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body6$i$i528$index14Z2D = tempRet0;
   $eh$lpad$body6$i$i528$indexZ2D = $1212;
   label = 337;
   break;
  }
 case 347:
  {
   $1231 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body16$i$index20Z2D = tempRet0;
   $eh$lpad$body16$i$indexZ2D = $1231;
   label = 348;
   break;
  }
 case 360:
  {
   $1260 = ___cxa_find_matching_catch() | 0;
   $1261 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($31, HEAP32[$238 >> 2] | 0);
   $$107 = $1260;
   $$107134 = $1261;
   ___resumeException($$107 | 0);
   break;
  }
 case 432:
  {
   $1464 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($33, HEAP32[$241 >> 2] | 0);
   ___resumeException($1464 | 0);
   break;
  }
 case 450:
  {
   $1505 = ___cxa_find_matching_catch() | 0;
   $1506 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($37, HEAP32[$256 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($36, HEAP32[$253 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($fields, HEAP32[$250 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env26, HEAP32[$247 >> 2] | 0);
   $$107 = $1505;
   $$107134 = $1506;
   ___resumeException($$107 | 0);
   break;
  }
 case 478:
  {
   $1562 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env27, HEAP32[$259 >> 2] | 0);
   ___resumeException($1562 | 0);
   break;
  }
 case 482:
  {
   $1575 = ___cxa_find_matching_catch() | 0;
   $1576 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env27, HEAP32[$259 >> 2] | 0);
   $$107 = $1575;
   $$107134 = $1576;
   ___resumeException($$107 | 0);
   break;
  }
 case 494:
  {
   $1603 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $38 | 0, 38336, 50);
   $1604 = __THREW__;
   __THREW__ = 0;
   if ($1604 & 1) {
    $1611 = ___cxa_find_matching_catch() | 0;
    $$2172945 = $1611;
    $$2292944 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $1603 | 0, $194 | 0, $$010 + 4 | 0, $38 | 0);
    $1607 = __THREW__;
    __THREW__ = 0;
    if ($1607 & 1) $$0141 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $1603 | 0, 37312, 185);
     $1609 = __THREW__;
     __THREW__ = 0;
     if ($1609 & 1) $$0141 = 0; else {}
    }
    $1613 = ___cxa_find_matching_catch() | 0;
    $1614 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($38);
    if ($$0141) {
     $$2172945 = $1613;
     $$2292944 = $1614;
    } else {
     $$107 = $1613;
     $$107134 = $1614;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($1603 | 0);
   $$107 = $$2172945;
   $$107134 = $$2292944;
   ___resumeException($$107 | 0);
   break;
  }
 case 541:
  {
   $1734 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 38392, 41) | 0;
   $1735 = HEAP32[$1711 >> 2] | 0;
   $1736 = HEAP8[$1735 >> 0] | 0;
   if (!($1736 & 1)) {
    $1746 = $1735 + 1 | 0;
    $1747 = ($1736 & 255) >>> 1;
   } else {
    $1746 = HEAP32[$1735 + 8 >> 2] | 0;
    $1747 = HEAP32[$1735 + 4 >> 2] | 0;
   }
   $1748 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($1734, $1746, $1747) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $1748 + (HEAP32[(HEAP32[$1748 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $1753 = invoke_iii(22, $0 | 0, 45800) | 0;
   $1754 = __THREW__;
   __THREW__ = 0;
   if ($1754 & 1) {
    $1762 = ___cxa_find_matching_catch() | 0;
    $1763 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1762 | 0);
   }
   __THREW__ = 0;
   $1759 = invoke_iii(HEAP32[(HEAP32[$1753 >> 2] | 0) + 28 >> 2] | 0, $1753 | 0, 10) | 0;
   $1760 = __THREW__;
   __THREW__ = 0;
   if ($1760 & 1) {
    $1762 = ___cxa_find_matching_catch() | 0;
    $1763 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1762 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1748, $1759) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1748) | 0;
    _abort();
   }
   break;
  }
 case 551:
  {
   $1778 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 38440, 29) | 0, HEAP32[$385 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $1778 + (HEAP32[(HEAP32[$1778 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $1783 = invoke_iii(22, $0 | 0, 45800) | 0;
   $1784 = __THREW__;
   __THREW__ = 0;
   if ($1784 & 1) {
    $1792 = ___cxa_find_matching_catch() | 0;
    $1793 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1792 | 0);
   }
   __THREW__ = 0;
   $1789 = invoke_iii(HEAP32[(HEAP32[$1783 >> 2] | 0) + 28 >> 2] | 0, $1783 | 0, 10) | 0;
   $1790 = __THREW__;
   __THREW__ = 0;
   if ($1790 & 1) {
    $1792 = ___cxa_find_matching_catch() | 0;
    $1793 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1792 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1778, $1789) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1778) | 0;
    _abort();
   }
   break;
  }
 case 559:
  {
   $1804 = ___cxa_allocate_exception(24) | 0;
   $1805 = $1801 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(59, $40 | 0, HEAP32[$200 >> 2] | 0);
   $1806 = __THREW__;
   __THREW__ = 0;
   do if ($1806 & 1) {
    $1815 = ___cxa_find_matching_catch() | 0;
    $$4192948 = $1815;
    $$4312947 = tempRet0;
   } else {
    __THREW__ = 0;
    $1808 = invoke_iiii(29, $40 | 0, 0, 38472) | 0;
    $1809 = __THREW__;
    __THREW__ = 0;
    if ($1809 & 1) {
     $1817 = ___cxa_find_matching_catch() | 0;
     $1818 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($40);
     $$4192948 = $1817;
     $$4312947 = $1818;
     break;
    };
    HEAP32[$39 + 0 >> 2] = HEAP32[$1808 + 0 >> 2];
    HEAP32[$39 + 4 >> 2] = HEAP32[$1808 + 4 >> 2];
    HEAP32[$39 + 8 >> 2] = HEAP32[$1808 + 8 >> 2];
    HEAP32[$1808 + 0 >> 2] = 0;
    HEAP32[$1808 + 4 >> 2] = 0;
    HEAP32[$1808 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(17, $1804 | 0, $194 | 0, $1805 | 0, $39 | 0);
    $1811 = __THREW__;
    __THREW__ = 0;
    if ($1811 & 1) $$0145 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $1804 | 0, 37312, 185);
     $1813 = __THREW__;
     __THREW__ = 0;
     if ($1813 & 1) $$0145 = 0; else {}
    }
    $1819 = ___cxa_find_matching_catch() | 0;
    $1820 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($39);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($40);
    if ($$0145) {
     $$4192948 = $1819;
     $$4312947 = $1820;
    } else {
     $$107 = $1819;
     $$107134 = $1820;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($1804 | 0);
   $$107 = $$4192948;
   $$107134 = $$4312947;
   ___resumeException($$107 | 0);
   break;
  }
 case 571:
  {
   $1841 = $ss + 64 | 0;
   $1842 = $ss + 8 | 0;
   HEAP32[$1842 >> 2] = 792;
   $1843 = $ss + 12 | 0;
   HEAP32[$ss >> 2] = 940;
   HEAP32[$1841 >> 2] = 960;
   HEAP32[$ss + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss + 64 | 0, $1843 | 0);
   $1846 = __THREW__;
   __THREW__ = 0;
   if ($1846 & 1) {
    $1858 = ___cxa_find_matching_catch() | 0;
    $$0$i706 = tempRet0;
    $$01$i705 = $1858;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1841);
    ___resumeException($$01$i705 | 0);
   }
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 772;
   HEAP32[$1841 >> 2] = 812;
   HEAP32[$1842 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $1843 | 0);
   $1850 = __THREW__;
   __THREW__ = 0;
   do if ($1850 & 1) {
    $1860 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index31Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $1860;
   } else {
    HEAP32[$1843 >> 2] = 1104;
    $1852 = $ss + 44 | 0;
    HEAP32[$1852 + 0 >> 2] = 0;
    HEAP32[$1852 + 4 >> 2] = 0;
    HEAP32[$1852 + 8 >> 2] = 0;
    HEAP32[$1852 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $1843 | 0, $0 | 0);
    $1854 = __THREW__;
    __THREW__ = 0;
    if ($1854 & 1) {
     $1856 = ___cxa_find_matching_catch() | 0;
     $1857 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1852);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1843);
     $eh$lpad$body$i$index31Z2D = $1857;
     $eh$lpad$body$i$indexZ2D = $1856;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __THREW__ = 0;
    $1863 = invoke_iiii(25, $ss + 8 | 0, 38512, 9) | 0;
    $1864 = __THREW__;
    __THREW__ = 0;
    do if ($1864 & 1) label = 587; else {
     __THREW__ = 0;
     $1872 = invoke_iii(24, $1863 | 0, (HEAP32[$1830 >> 2] | 0) - (HEAP32[$1829 >> 2] | 0) >> 2 | 0) | 0;
     $1873 = __THREW__;
     __THREW__ = 0;
     if ($1873 & 1) label = 587; else {
      __THREW__ = 0;
      $1875 = invoke_iiii(25, $1872 | 0, 38528, 16) | 0;
      $1876 = __THREW__;
      __THREW__ = 0;
      if ($1876 & 1) label = 587; else {
       __THREW__ = 0;
       $1884 = invoke_iii(24, $1875 | 0, (HEAP32[$1823 >> 2] | 0) - (HEAP32[$1822 >> 2] | 0) >> 2 | 0) | 0;
       $1885 = __THREW__;
       __THREW__ = 0;
       if ($1885 & 1) label = 587; else {
        __THREW__ = 0;
        invoke_iiii(25, $1884 | 0, 38552, 1) | 0;
        $1887 = __THREW__;
        __THREW__ = 0;
        if ($1887 & 1) label = 587; else {
         $1889 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $41 | 0, $1843 | 0);
         $1890 = __THREW__;
         __THREW__ = 0;
         if ($1890 & 1) {
          $1899 = ___cxa_find_matching_catch() | 0;
          $$5202952 = $1899;
          $$5322951 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_viiii(17, $1889 | 0, $194 | 0, $1801 + 4 | 0, $41 | 0);
          $1893 = __THREW__;
          __THREW__ = 0;
          if ($1893 & 1) $$0148 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $1889 | 0, 37312, 185);
           $1895 = __THREW__;
           __THREW__ = 0;
           if ($1895 & 1) $$0148 = 0; else {}
          }
          $1901 = ___cxa_find_matching_catch() | 0;
          $1902 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($41);
          if ($$0148) {
           $$5202952 = $1901;
           $$5322951 = $1902;
          } else {
           $$6 = $1901;
           $$633 = $1902;
           break;
          }
         }
         ___cxa_free_exception($1889 | 0);
         $$6 = $$5202952;
         $$633 = $$5322951;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 587) {
     $1897 = ___cxa_find_matching_catch() | 0;
     $$6 = $1897;
     $$633 = tempRet0;
    }
    HEAP32[$ss >> 2] = 772;
    HEAP32[$ss + 64 >> 2] = 812;
    HEAP32[$1842 >> 2] = 792;
    HEAP32[$1843 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1852);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1843);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1841);
    $$107 = $$6;
    $$107134 = $$633;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i706 = $eh$lpad$body$i$index31Z2D;
   $$01$i705 = $eh$lpad$body$i$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1841);
   ___resumeException($$01$i705 | 0);
   break;
  }
 case 623:
  {
   $1977 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($42, HEAP32[$269 >> 2] | 0);
   ___resumeException($1977 | 0);
   break;
  }
 case 652:
  {
   $2065 = ___cxa_find_matching_catch() | 0;
   $2067 = HEAP32[$args >> 2] | 0;
   if (!$2067) ___resumeException($2065 | 0);
   $2069 = HEAP32[$264 >> 2] | 0;
   if (($2069 | 0) != ($2067 | 0)) HEAP32[$264 >> 2] = $2069 + (~(($2069 + -4 - $2067 | 0) >>> 2) << 2);
   __ZdlPv($2067);
   ___resumeException($2065 | 0);
   break;
  }
 case 685:
  {
   $2151 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body812$index36Z2D = tempRet0;
   $eh$lpad$body812$indexZ2D = $2151;
   label = 686;
   break;
  }
 case 718:
  {
   $2218 = ___cxa_find_matching_catch() | 0;
   $2219 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, HEAP32[$266 >> 2] | 0);
   $eh$lpad$body812$index36Z2D = $2219;
   $eh$lpad$body812$indexZ2D = $2218;
   label = 686;
   break;
  }
 case 722:
  {
   $lpad$phi3336$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi3336$index41 = tempRet0;
   label = 724;
   break;
  }
 case 723:
  {
   $lpad$phi3336$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi3336$index41 = tempRet0;
   label = 724;
   break;
  }
 case 751:
  {
   $2299 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 38560, 42) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2299 + (HEAP32[(HEAP32[$2299 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $2304 = invoke_iii(22, $0 | 0, 45800) | 0;
   $2305 = __THREW__;
   __THREW__ = 0;
   if ($2305 & 1) {
    $2313 = ___cxa_find_matching_catch() | 0;
    $2314 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($2313 | 0);
   }
   __THREW__ = 0;
   $2310 = invoke_iii(HEAP32[(HEAP32[$2304 >> 2] | 0) + 28 >> 2] | 0, $2304 | 0, 10) | 0;
   $2311 = __THREW__;
   __THREW__ = 0;
   if ($2311 & 1) {
    $2313 = ___cxa_find_matching_catch() | 0;
    $2314 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($2313 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2299, $2310) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2299) | 0;
    _abort();
   }
   break;
  }
 case 756:
  {
   $2317 = ___cxa_allocate_exception(24) | 0;
   $2318 = $2283 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(63, $49 | 0, HEAP32[$2293 >> 2] | 0);
   $2320 = __THREW__;
   __THREW__ = 0;
   do if ($2320 & 1) {
    $2372 = ___cxa_find_matching_catch() | 0;
    $$162955 = $2372;
    $$16432954 = tempRet0;
   } else {
    __THREW__ = 0;
    $2322 = invoke_iiii(29, $49 | 0, 0, 38608) | 0;
    $2323 = __THREW__;
    __THREW__ = 0;
    if ($2323 & 1) {
     $2374 = ___cxa_find_matching_catch() | 0;
     $2375 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($49);
     $$162955 = $2374;
     $$16432954 = $2375;
     break;
    };
    HEAP32[$48 + 0 >> 2] = HEAP32[$2322 + 0 >> 2];
    HEAP32[$48 + 4 >> 2] = HEAP32[$2322 + 4 >> 2];
    HEAP32[$48 + 8 >> 2] = HEAP32[$2322 + 8 >> 2];
    HEAP32[$2322 + 0 >> 2] = 0;
    HEAP32[$2322 + 4 >> 2] = 0;
    HEAP32[$2322 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2325 = invoke_iii(29, $48 | 0, 38632) | 0;
    $2326 = __THREW__;
    __THREW__ = 0;
    if ($2326 & 1) {
     $2376 = ___cxa_find_matching_catch() | 0;
     $$14 = $2376;
     $$1441 = tempRet0;
     $$7160 = 1;
    } else {
     HEAP32[$47 + 0 >> 2] = HEAP32[$2325 + 0 >> 2];
     HEAP32[$47 + 4 >> 2] = HEAP32[$2325 + 4 >> 2];
     HEAP32[$47 + 8 >> 2] = HEAP32[$2325 + 8 >> 2];
     HEAP32[$2325 + 0 >> 2] = 0;
     HEAP32[$2325 + 4 >> 2] = 0;
     HEAP32[$2325 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(59, $50 | 0, HEAP32[$2284 >> 2] | 0);
     $2328 = __THREW__;
     __THREW__ = 0;
     if ($2328 & 1) {
      $2378 = ___cxa_find_matching_catch() | 0;
      $$1321 = $2378;
      $$1340 = tempRet0;
      $$6159 = 1;
     } else {
      $2330 = HEAP8[$50 >> 0] | 0;
      if (!($2330 & 1)) {
       $2340 = $50 + 1 | 0;
       $2341 = ($2330 & 255) >>> 1;
      } else {
       $2340 = HEAP32[$50 + 8 >> 2] | 0;
       $2341 = HEAP32[$50 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $2342 = invoke_iiii(31, $47 | 0, $2340 | 0, $2341 | 0) | 0;
      $2343 = __THREW__;
      __THREW__ = 0;
      if ($2343 & 1) {
       $2380 = ___cxa_find_matching_catch() | 0;
       $$12 = $2380;
       $$1239 = tempRet0;
       $$5158 = 1;
      } else {
       HEAP32[$46 + 0 >> 2] = HEAP32[$2342 + 0 >> 2];
       HEAP32[$46 + 4 >> 2] = HEAP32[$2342 + 4 >> 2];
       HEAP32[$46 + 8 >> 2] = HEAP32[$2342 + 8 >> 2];
       HEAP32[$2342 + 0 >> 2] = 0;
       HEAP32[$2342 + 4 >> 2] = 0;
       HEAP32[$2342 + 8 >> 2] = 0;
       __THREW__ = 0;
       $2345 = invoke_iii(29, $46 | 0, 38664) | 0;
       $2346 = __THREW__;
       __THREW__ = 0;
       if ($2346 & 1) {
        $2382 = ___cxa_find_matching_catch() | 0;
        $$11 = $2382;
        $$1138 = tempRet0;
        $$4157 = 1;
       } else {
        HEAP32[$45 + 0 >> 2] = HEAP32[$2345 + 0 >> 2];
        HEAP32[$45 + 4 >> 2] = HEAP32[$2345 + 4 >> 2];
        HEAP32[$45 + 8 >> 2] = HEAP32[$2345 + 8 >> 2];
        HEAP32[$2345 + 0 >> 2] = 0;
        HEAP32[$2345 + 4 >> 2] = 0;
        HEAP32[$2345 + 8 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(59, $51 | 0, HEAP32[$200 >> 2] | 0);
        $2348 = __THREW__;
        __THREW__ = 0;
        if ($2348 & 1) {
         $2384 = ___cxa_find_matching_catch() | 0;
         $$10 = $2384;
         $$1037 = tempRet0;
         $$3156 = 1;
        } else {
         $2350 = HEAP8[$51 >> 0] | 0;
         if (!($2350 & 1)) {
          $2360 = $51 + 1 | 0;
          $2361 = ($2350 & 255) >>> 1;
         } else {
          $2360 = HEAP32[$51 + 8 >> 2] | 0;
          $2361 = HEAP32[$51 + 4 >> 2] | 0;
         }
         __THREW__ = 0;
         $2362 = invoke_iiii(31, $45 | 0, $2360 | 0, $2361 | 0) | 0;
         $2363 = __THREW__;
         __THREW__ = 0;
         if ($2363 & 1) {
          $2386 = ___cxa_find_matching_catch() | 0;
          $$2155 = 1;
          $$9 = $2386;
          $$936 = tempRet0;
         } else {
          HEAP32[$44 + 0 >> 2] = HEAP32[$2362 + 0 >> 2];
          HEAP32[$44 + 4 >> 2] = HEAP32[$2362 + 4 >> 2];
          HEAP32[$44 + 8 >> 2] = HEAP32[$2362 + 8 >> 2];
          HEAP32[$2362 + 0 >> 2] = 0;
          HEAP32[$2362 + 4 >> 2] = 0;
          HEAP32[$2362 + 8 >> 2] = 0;
          __THREW__ = 0;
          $2365 = invoke_iii(29, $44 | 0, 38552) | 0;
          $2366 = __THREW__;
          __THREW__ = 0;
          if ($2366 & 1) {
           $2388 = ___cxa_find_matching_catch() | 0;
           $$1154 = 1;
           $$8 = $2388;
           $$835 = tempRet0;
          } else {
           HEAP32[$43 + 0 >> 2] = HEAP32[$2365 + 0 >> 2];
           HEAP32[$43 + 4 >> 2] = HEAP32[$2365 + 4 >> 2];
           HEAP32[$43 + 8 >> 2] = HEAP32[$2365 + 8 >> 2];
           HEAP32[$2365 + 0 >> 2] = 0;
           HEAP32[$2365 + 4 >> 2] = 0;
           HEAP32[$2365 + 8 >> 2] = 0;
           __THREW__ = 0;
           invoke_viiii(17, $2317 | 0, $194 | 0, $2318 | 0, $43 | 0);
           $2368 = __THREW__;
           __THREW__ = 0;
           do if ($2368 & 1) $$0153 = 1; else {
            __THREW__ = 0;
            invoke_viii(4, $2317 | 0, 37312, 185);
            $2370 = __THREW__;
            __THREW__ = 0;
            if ($2370 & 1) {
             $$0153 = 0;
             break;
            }
           } while (0);
           $2390 = ___cxa_find_matching_catch() | 0;
           $2391 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
           $$1154 = $$0153;
           $$8 = $2390;
           $$835 = $2391;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($44);
          $$2155 = $$1154;
          $$9 = $$8;
          $$936 = $$835;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($51);
         $$10 = $$9;
         $$1037 = $$936;
         $$3156 = $$2155;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($45);
        $$11 = $$10;
        $$1138 = $$1037;
        $$4157 = $$3156;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($46);
       $$12 = $$11;
       $$1239 = $$1138;
       $$5158 = $$4157;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($50);
      $$1321 = $$12;
      $$1340 = $$1239;
      $$6159 = $$5158;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($47);
     $$14 = $$1321;
     $$1441 = $$1340;
     $$7160 = $$6159;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($48);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($49);
    if ($$7160) {
     $$162955 = $$14;
     $$16432954 = $$1441;
    } else {
     $$107 = $$14;
     $$107134 = $$1441;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2317 | 0);
   $$107 = $$162955;
   $$107134 = $$16432954;
   ___resumeException($$107 | 0);
   break;
  }
 case 812:
  {
   $lpad$phi3300$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi3300$index47 = tempRet0;
   label = 815;
   break;
  }
 case 813:
  {
   $lpad$phi3300$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi3300$index47 = tempRet0;
   label = 815;
   break;
  }
 case 814:
  {
   $lpad$phi3300$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi3300$index47 = tempRet0;
   label = 815;
   break;
  }
 case 842:
  {
   $2527 = ___cxa_allocate_exception(24) | 0;
   $2528 = $2283 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(63, $55 | 0, HEAP32[$2293 >> 2] | 0);
   $2530 = __THREW__;
   __THREW__ = 0;
   do if ($2530 & 1) {
    $2542 = ___cxa_find_matching_catch() | 0;
    $$192959 = $2542;
    $$19462958 = tempRet0;
   } else {
    __THREW__ = 0;
    $2532 = invoke_iiii(29, $55 | 0, 0, 38608) | 0;
    $2533 = __THREW__;
    __THREW__ = 0;
    if ($2533 & 1) {
     $2544 = ___cxa_find_matching_catch() | 0;
     $2545 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($55);
     $$192959 = $2544;
     $$19462958 = $2545;
     break;
    };
    HEAP32[$54 + 0 >> 2] = HEAP32[$2532 + 0 >> 2];
    HEAP32[$54 + 4 >> 2] = HEAP32[$2532 + 4 >> 2];
    HEAP32[$54 + 8 >> 2] = HEAP32[$2532 + 8 >> 2];
    HEAP32[$2532 + 0 >> 2] = 0;
    HEAP32[$2532 + 4 >> 2] = 0;
    HEAP32[$2532 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2535 = invoke_iii(29, $54 | 0, 38672) | 0;
    $2536 = __THREW__;
    __THREW__ = 0;
    if ($2536 & 1) {
     $2546 = ___cxa_find_matching_catch() | 0;
     $$1167 = 1;
     $$1722 = $2546;
     $$1744 = tempRet0;
    } else {
     HEAP32[$53 + 0 >> 2] = HEAP32[$2535 + 0 >> 2];
     HEAP32[$53 + 4 >> 2] = HEAP32[$2535 + 4 >> 2];
     HEAP32[$53 + 8 >> 2] = HEAP32[$2535 + 8 >> 2];
     HEAP32[$2535 + 0 >> 2] = 0;
     HEAP32[$2535 + 4 >> 2] = 0;
     HEAP32[$2535 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2527 | 0, $194 | 0, $2528 | 0, $53 | 0);
     $2538 = __THREW__;
     __THREW__ = 0;
     if ($2538 & 1) $$0166 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2527 | 0, 37312, 185);
      $2540 = __THREW__;
      __THREW__ = 0;
      if ($2540 & 1) $$0166 = 0; else {}
     }
     $2548 = ___cxa_find_matching_catch() | 0;
     $2549 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($53);
     $$1167 = $$0166;
     $$1722 = $2548;
     $$1744 = $2549;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($54);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($55);
    if ($$1167) {
     $$192959 = $$1722;
     $$19462958 = $$1744;
    } else {
     $$107 = $$1722;
     $$107134 = $$1744;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2527 | 0);
   $$107 = $$192959;
   $$107134 = $$19462958;
   ___resumeException($$107 | 0);
   break;
  }
 case 860:
  {
   $2560 = ___cxa_allocate_exception(24) | 0;
   $2561 = $2283 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(63, $58 | 0, HEAP32[$2293 >> 2] | 0);
   $2563 = __THREW__;
   __THREW__ = 0;
   do if ($2563 & 1) {
    $2575 = ___cxa_find_matching_catch() | 0;
    $$222963 = $2575;
    $$22492962 = tempRet0;
   } else {
    __THREW__ = 0;
    $2565 = invoke_iiii(29, $58 | 0, 0, 38608) | 0;
    $2566 = __THREW__;
    __THREW__ = 0;
    if ($2566 & 1) {
     $2577 = ___cxa_find_matching_catch() | 0;
     $2578 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($58);
     $$222963 = $2577;
     $$22492962 = $2578;
     break;
    };
    HEAP32[$57 + 0 >> 2] = HEAP32[$2565 + 0 >> 2];
    HEAP32[$57 + 4 >> 2] = HEAP32[$2565 + 4 >> 2];
    HEAP32[$57 + 8 >> 2] = HEAP32[$2565 + 8 >> 2];
    HEAP32[$2565 + 0 >> 2] = 0;
    HEAP32[$2565 + 4 >> 2] = 0;
    HEAP32[$2565 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2568 = invoke_iii(29, $57 | 0, 38704) | 0;
    $2569 = __THREW__;
    __THREW__ = 0;
    if ($2569 & 1) {
     $2579 = ___cxa_find_matching_catch() | 0;
     $$1173 = 1;
     $$20 = $2579;
     $$2047 = tempRet0;
    } else {
     HEAP32[$56 + 0 >> 2] = HEAP32[$2568 + 0 >> 2];
     HEAP32[$56 + 4 >> 2] = HEAP32[$2568 + 4 >> 2];
     HEAP32[$56 + 8 >> 2] = HEAP32[$2568 + 8 >> 2];
     HEAP32[$2568 + 0 >> 2] = 0;
     HEAP32[$2568 + 4 >> 2] = 0;
     HEAP32[$2568 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2560 | 0, $194 | 0, $2561 | 0, $56 | 0);
     $2571 = __THREW__;
     __THREW__ = 0;
     if ($2571 & 1) $$0172 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2560 | 0, 37312, 185);
      $2573 = __THREW__;
      __THREW__ = 0;
      if ($2573 & 1) $$0172 = 0; else {}
     }
     $2581 = ___cxa_find_matching_catch() | 0;
     $2582 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($56);
     $$1173 = $$0172;
     $$20 = $2581;
     $$2047 = $2582;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($57);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($58);
    if ($$1173) {
     $$222963 = $$20;
     $$22492962 = $$2047;
    } else {
     $$107 = $$20;
     $$107134 = $$2047;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2560 | 0);
   $$107 = $$222963;
   $$107134 = $$22492962;
   ___resumeException($$107 | 0);
   break;
  }
 case 876:
  {
   $2597 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $59 | 0, 38736, 17);
   $2598 = __THREW__;
   __THREW__ = 0;
   if ($2598 & 1) {
    $2605 = ___cxa_find_matching_catch() | 0;
    $$232967 = $2605;
    $$23502966 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $2597 | 0, $194 | 0, $2283 + 4 | 0, $59 | 0);
    $2601 = __THREW__;
    __THREW__ = 0;
    if ($2601 & 1) $$0180 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $2597 | 0, 37312, 185);
     $2603 = __THREW__;
     __THREW__ = 0;
     if ($2603 & 1) $$0180 = 0; else {}
    }
    $2607 = ___cxa_find_matching_catch() | 0;
    $2608 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($59);
    if ($$0180) {
     $$232967 = $2607;
     $$23502966 = $2608;
    } else {
     $$107 = $2607;
     $$107134 = $2608;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($2597 | 0);
   $$107 = $$232967;
   $$107134 = $$23502966;
   ___resumeException($$107 | 0);
   break;
  }
 case 892:
  {
   $2667 = ___cxa_allocate_exception(24) | 0;
   $2668 = $2283 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(63, $62 | 0, HEAP32[$2293 >> 2] | 0);
   $2670 = __THREW__;
   __THREW__ = 0;
   do if ($2670 & 1) {
    $2682 = ___cxa_find_matching_catch() | 0;
    $$262970 = $2682;
    $$26532969 = tempRet0;
   } else {
    __THREW__ = 0;
    $2672 = invoke_iiii(29, $62 | 0, 0, 38608) | 0;
    $2673 = __THREW__;
    __THREW__ = 0;
    if ($2673 & 1) {
     $2684 = ___cxa_find_matching_catch() | 0;
     $2685 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($62);
     $$262970 = $2684;
     $$26532969 = $2685;
     break;
    };
    HEAP32[$61 + 0 >> 2] = HEAP32[$2672 + 0 >> 2];
    HEAP32[$61 + 4 >> 2] = HEAP32[$2672 + 4 >> 2];
    HEAP32[$61 + 8 >> 2] = HEAP32[$2672 + 8 >> 2];
    HEAP32[$2672 + 0 >> 2] = 0;
    HEAP32[$2672 + 4 >> 2] = 0;
    HEAP32[$2672 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2675 = invoke_iii(29, $61 | 0, 38760) | 0;
    $2676 = __THREW__;
    __THREW__ = 0;
    if ($2676 & 1) {
     $2686 = ___cxa_find_matching_catch() | 0;
     $$1185 = 1;
     $$2423 = $2686;
     $$2451 = tempRet0;
    } else {
     HEAP32[$60 + 0 >> 2] = HEAP32[$2675 + 0 >> 2];
     HEAP32[$60 + 4 >> 2] = HEAP32[$2675 + 4 >> 2];
     HEAP32[$60 + 8 >> 2] = HEAP32[$2675 + 8 >> 2];
     HEAP32[$2675 + 0 >> 2] = 0;
     HEAP32[$2675 + 4 >> 2] = 0;
     HEAP32[$2675 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2667 | 0, $194 | 0, $2668 | 0, $60 | 0);
     $2678 = __THREW__;
     __THREW__ = 0;
     if ($2678 & 1) $$0184 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2667 | 0, 37312, 185);
      $2680 = __THREW__;
      __THREW__ = 0;
      if ($2680 & 1) $$0184 = 0; else {}
     }
     $2688 = ___cxa_find_matching_catch() | 0;
     $2689 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($60);
     $$1185 = $$0184;
     $$2423 = $2688;
     $$2451 = $2689;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($61);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($62);
    if ($$1185) {
     $$262970 = $$2423;
     $$26532969 = $$2451;
    } else {
     $$107 = $$2423;
     $$107134 = $$2451;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2667 | 0);
   $$107 = $$262970;
   $$107134 = $$26532969;
   ___resumeException($$107 | 0);
   break;
  }
 case 903:
  {
   $2690 = ___cxa_allocate_exception(24) | 0;
   $2691 = $2283 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(63, $65 | 0, HEAP32[$2293 >> 2] | 0);
   $2693 = __THREW__;
   __THREW__ = 0;
   do if ($2693 & 1) {
    $2705 = ___cxa_find_matching_catch() | 0;
    $$292974 = $2705;
    $$29562973 = tempRet0;
   } else {
    __THREW__ = 0;
    $2695 = invoke_iiii(29, $65 | 0, 0, 38608) | 0;
    $2696 = __THREW__;
    __THREW__ = 0;
    if ($2696 & 1) {
     $2707 = ___cxa_find_matching_catch() | 0;
     $2708 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($65);
     $$292974 = $2707;
     $$29562973 = $2708;
     break;
    };
    HEAP32[$64 + 0 >> 2] = HEAP32[$2695 + 0 >> 2];
    HEAP32[$64 + 4 >> 2] = HEAP32[$2695 + 4 >> 2];
    HEAP32[$64 + 8 >> 2] = HEAP32[$2695 + 8 >> 2];
    HEAP32[$2695 + 0 >> 2] = 0;
    HEAP32[$2695 + 4 >> 2] = 0;
    HEAP32[$2695 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2698 = invoke_iii(29, $64 | 0, 38792) | 0;
    $2699 = __THREW__;
    __THREW__ = 0;
    if ($2699 & 1) {
     $2709 = ___cxa_find_matching_catch() | 0;
     $$1189 = 1;
     $$27 = $2709;
     $$2754 = tempRet0;
    } else {
     HEAP32[$63 + 0 >> 2] = HEAP32[$2698 + 0 >> 2];
     HEAP32[$63 + 4 >> 2] = HEAP32[$2698 + 4 >> 2];
     HEAP32[$63 + 8 >> 2] = HEAP32[$2698 + 8 >> 2];
     HEAP32[$2698 + 0 >> 2] = 0;
     HEAP32[$2698 + 4 >> 2] = 0;
     HEAP32[$2698 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2690 | 0, $194 | 0, $2691 | 0, $63 | 0);
     $2701 = __THREW__;
     __THREW__ = 0;
     if ($2701 & 1) $$0188 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2690 | 0, 37312, 185);
      $2703 = __THREW__;
      __THREW__ = 0;
      if ($2703 & 1) $$0188 = 0; else {}
     }
     $2711 = ___cxa_find_matching_catch() | 0;
     $2712 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
     $$1189 = $$0188;
     $$27 = $2711;
     $$2754 = $2712;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($64);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($65);
    if ($$1189) {
     $$292974 = $$27;
     $$29562973 = $$2754;
    } else {
     $$107 = $$27;
     $$107134 = $$2754;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2690 | 0);
   $$107 = $$292974;
   $$107134 = $$29562973;
   ___resumeException($$107 | 0);
   break;
  }
 case 914:
  {
   $2713 = ___cxa_allocate_exception(24) | 0;
   $2714 = $2283 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(63, $68 | 0, HEAP32[$2293 >> 2] | 0);
   $2716 = __THREW__;
   __THREW__ = 0;
   do if ($2716 & 1) {
    $2728 = ___cxa_find_matching_catch() | 0;
    $$322978 = $2728;
    $$32592977 = tempRet0;
   } else {
    __THREW__ = 0;
    $2718 = invoke_iiii(29, $68 | 0, 0, 38608) | 0;
    $2719 = __THREW__;
    __THREW__ = 0;
    if ($2719 & 1) {
     $2730 = ___cxa_find_matching_catch() | 0;
     $2731 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($68);
     $$322978 = $2730;
     $$32592977 = $2731;
     break;
    };
    HEAP32[$67 + 0 >> 2] = HEAP32[$2718 + 0 >> 2];
    HEAP32[$67 + 4 >> 2] = HEAP32[$2718 + 4 >> 2];
    HEAP32[$67 + 8 >> 2] = HEAP32[$2718 + 8 >> 2];
    HEAP32[$2718 + 0 >> 2] = 0;
    HEAP32[$2718 + 4 >> 2] = 0;
    HEAP32[$2718 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2721 = invoke_iii(29, $67 | 0, 38824) | 0;
    $2722 = __THREW__;
    __THREW__ = 0;
    if ($2722 & 1) {
     $2732 = ___cxa_find_matching_catch() | 0;
     $$1197 = 1;
     $$30 = $2732;
     $$3057 = tempRet0;
    } else {
     HEAP32[$66 + 0 >> 2] = HEAP32[$2721 + 0 >> 2];
     HEAP32[$66 + 4 >> 2] = HEAP32[$2721 + 4 >> 2];
     HEAP32[$66 + 8 >> 2] = HEAP32[$2721 + 8 >> 2];
     HEAP32[$2721 + 0 >> 2] = 0;
     HEAP32[$2721 + 4 >> 2] = 0;
     HEAP32[$2721 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2713 | 0, $194 | 0, $2714 | 0, $66 | 0);
     $2724 = __THREW__;
     __THREW__ = 0;
     if ($2724 & 1) $$0196 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2713 | 0, 37312, 185);
      $2726 = __THREW__;
      __THREW__ = 0;
      if ($2726 & 1) $$0196 = 0; else {}
     }
     $2734 = ___cxa_find_matching_catch() | 0;
     $2735 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
     $$1197 = $$0196;
     $$30 = $2734;
     $$3057 = $2735;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($68);
    if ($$1197) {
     $$322978 = $$30;
     $$32592977 = $$3057;
    } else {
     $$107 = $$30;
     $$107134 = $$3057;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2713 | 0);
   $$107 = $$322978;
   $$107134 = $$32592977;
   ___resumeException($$107 | 0);
   break;
  }
 case 926:
  {
   $2737 = ___cxa_allocate_exception(24) | 0;
   $2738 = $2283 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(63, $71 | 0, HEAP32[$2293 >> 2] | 0);
   $2740 = __THREW__;
   __THREW__ = 0;
   do if ($2740 & 1) {
    $2752 = ___cxa_find_matching_catch() | 0;
    $$35252982 = $2752;
    $$35622981 = tempRet0;
   } else {
    __THREW__ = 0;
    $2742 = invoke_iiii(29, $71 | 0, 0, 38608) | 0;
    $2743 = __THREW__;
    __THREW__ = 0;
    if ($2743 & 1) {
     $2754 = ___cxa_find_matching_catch() | 0;
     $2755 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($71);
     $$35252982 = $2754;
     $$35622981 = $2755;
     break;
    };
    HEAP32[$70 + 0 >> 2] = HEAP32[$2742 + 0 >> 2];
    HEAP32[$70 + 4 >> 2] = HEAP32[$2742 + 4 >> 2];
    HEAP32[$70 + 8 >> 2] = HEAP32[$2742 + 8 >> 2];
    HEAP32[$2742 + 0 >> 2] = 0;
    HEAP32[$2742 + 4 >> 2] = 0;
    HEAP32[$2742 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2745 = invoke_iii(29, $70 | 0, 38856) | 0;
    $2746 = __THREW__;
    __THREW__ = 0;
    if ($2746 & 1) {
     $2756 = ___cxa_find_matching_catch() | 0;
     $$1201 = 1;
     $$33 = $2756;
     $$3360 = tempRet0;
    } else {
     HEAP32[$69 + 0 >> 2] = HEAP32[$2745 + 0 >> 2];
     HEAP32[$69 + 4 >> 2] = HEAP32[$2745 + 4 >> 2];
     HEAP32[$69 + 8 >> 2] = HEAP32[$2745 + 8 >> 2];
     HEAP32[$2745 + 0 >> 2] = 0;
     HEAP32[$2745 + 4 >> 2] = 0;
     HEAP32[$2745 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2737 | 0, $194 | 0, $2738 | 0, $69 | 0);
     $2748 = __THREW__;
     __THREW__ = 0;
     if ($2748 & 1) $$0200 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2737 | 0, 37312, 185);
      $2750 = __THREW__;
      __THREW__ = 0;
      if ($2750 & 1) $$0200 = 0; else {}
     }
     $2758 = ___cxa_find_matching_catch() | 0;
     $2759 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($69);
     $$1201 = $$0200;
     $$33 = $2758;
     $$3360 = $2759;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($71);
    if ($$1201) {
     $$35252982 = $$33;
     $$35622981 = $$3360;
    } else {
     $$107 = $$33;
     $$107134 = $$3360;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2737 | 0);
   $$107 = $$35252982;
   $$107134 = $$35622981;
   ___resumeException($$107 | 0);
   break;
  }
 case 981:
  {
   $2895 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($73);
   ___resumeException($2895 | 0);
   break;
  }
 case 984:
  {
   $2899 = ___cxa_find_matching_catch() | 0;
   $2900 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($73);
   $$107 = $2899;
   $$107134 = $2900;
   ___resumeException($$107 | 0);
   break;
  }
 case 985:
  {
   $2901 = ___cxa_allocate_exception(24) | 0;
   $2902 = $2283 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(63, $76 | 0, HEAP32[$2293 >> 2] | 0);
   $2904 = __THREW__;
   __THREW__ = 0;
   do if ($2904 & 1) {
    $2916 = ___cxa_find_matching_catch() | 0;
    $$382986 = $2916;
    $$38652985 = tempRet0;
   } else {
    __THREW__ = 0;
    $2906 = invoke_iiii(29, $76 | 0, 0, 38608) | 0;
    $2907 = __THREW__;
    __THREW__ = 0;
    if ($2907 & 1) {
     $2918 = ___cxa_find_matching_catch() | 0;
     $2919 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($76);
     $$382986 = $2918;
     $$38652985 = $2919;
     break;
    };
    HEAP32[$75 + 0 >> 2] = HEAP32[$2906 + 0 >> 2];
    HEAP32[$75 + 4 >> 2] = HEAP32[$2906 + 4 >> 2];
    HEAP32[$75 + 8 >> 2] = HEAP32[$2906 + 8 >> 2];
    HEAP32[$2906 + 0 >> 2] = 0;
    HEAP32[$2906 + 4 >> 2] = 0;
    HEAP32[$2906 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2909 = invoke_iii(29, $75 | 0, 38888) | 0;
    $2910 = __THREW__;
    __THREW__ = 0;
    if ($2910 & 1) {
     $2920 = ___cxa_find_matching_catch() | 0;
     $$1205 = 1;
     $$36 = $2920;
     $$3663 = tempRet0;
    } else {
     HEAP32[$74 + 0 >> 2] = HEAP32[$2909 + 0 >> 2];
     HEAP32[$74 + 4 >> 2] = HEAP32[$2909 + 4 >> 2];
     HEAP32[$74 + 8 >> 2] = HEAP32[$2909 + 8 >> 2];
     HEAP32[$2909 + 0 >> 2] = 0;
     HEAP32[$2909 + 4 >> 2] = 0;
     HEAP32[$2909 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $2901 | 0, $194 | 0, $2902 | 0, $74 | 0);
     $2912 = __THREW__;
     __THREW__ = 0;
     if ($2912 & 1) $$0204 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2901 | 0, 37312, 185);
      $2914 = __THREW__;
      __THREW__ = 0;
      if ($2914 & 1) $$0204 = 0; else {}
     }
     $2922 = ___cxa_find_matching_catch() | 0;
     $2923 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($74);
     $$1205 = $$0204;
     $$36 = $2922;
     $$3663 = $2923;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($75);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($76);
    if ($$1205) {
     $$382986 = $$36;
     $$38652985 = $$3663;
    } else {
     $$107 = $$36;
     $$107134 = $$3663;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2901 | 0);
   $$107 = $$382986;
   $$107134 = $$38652985;
   ___resumeException($$107 | 0);
   break;
  }
 case 997:
  {
   $2932 = ___cxa_allocate_exception(24) | 0;
   $2933 = $2925 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(59, $78 | 0, HEAP32[$200 >> 2] | 0);
   $2934 = __THREW__;
   __THREW__ = 0;
   do if ($2934 & 1) {
    $2943 = ___cxa_find_matching_catch() | 0;
    $$402990 = $2943;
    $$40672989 = tempRet0;
   } else {
    __THREW__ = 0;
    $2936 = invoke_iiii(29, $78 | 0, 0, 38920) | 0;
    $2937 = __THREW__;
    __THREW__ = 0;
    if ($2937 & 1) {
     $2945 = ___cxa_find_matching_catch() | 0;
     $2946 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($78);
     $$402990 = $2945;
     $$40672989 = $2946;
     break;
    };
    HEAP32[$77 + 0 >> 2] = HEAP32[$2936 + 0 >> 2];
    HEAP32[$77 + 4 >> 2] = HEAP32[$2936 + 4 >> 2];
    HEAP32[$77 + 8 >> 2] = HEAP32[$2936 + 8 >> 2];
    HEAP32[$2936 + 0 >> 2] = 0;
    HEAP32[$2936 + 4 >> 2] = 0;
    HEAP32[$2936 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(17, $2932 | 0, $194 | 0, $2933 | 0, $77 | 0);
    $2939 = __THREW__;
    __THREW__ = 0;
    if ($2939 & 1) $$0212 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $2932 | 0, 37312, 185);
     $2941 = __THREW__;
     __THREW__ = 0;
     if ($2941 & 1) $$0212 = 0; else {}
    }
    $2947 = ___cxa_find_matching_catch() | 0;
    $2948 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($77);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($78);
    if ($$0212) {
     $$402990 = $2947;
     $$40672989 = $2948;
    } else {
     $$107 = $2947;
     $$107134 = $2948;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2932 | 0);
   $$107 = $$402990;
   $$107134 = $$40672989;
   ___resumeException($$107 | 0);
   break;
  }
 case 1054:
  {
   $3078 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$382 >> 2] | 0);
   ___resumeException($3078 | 0);
   break;
  }
 case 1058:
  {
   $3096 = ___cxa_find_matching_catch() | 0;
   $3097 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$382 >> 2] | 0);
   $$107 = $3096;
   $$107134 = $3097;
   ___resumeException($$107 | 0);
   break;
  }
 case 1079:
  {
   $3167 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3167;
   label = 1082;
   break;
  }
 case 1080:
  {
   $3169 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3169;
   label = 1082;
   break;
  }
 case 1087:
  {
   $3178 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3178;
   label = 1082;
   break;
  }
 case 1093:
  {
   $3190 = $ss73 + 64 | 0;
   $3191 = $ss73 + 8 | 0;
   HEAP32[$3191 >> 2] = 792;
   $3192 = $ss73 + 12 | 0;
   HEAP32[$ss73 >> 2] = 940;
   HEAP32[$3190 >> 2] = 960;
   HEAP32[$ss73 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss73 + 64 | 0, $3192 | 0);
   $3195 = __THREW__;
   __THREW__ = 0;
   if ($3195 & 1) {
    $3207 = ___cxa_find_matching_catch() | 0;
    $$0$i1102 = tempRet0;
    $$01$i1101 = $3207;
   } else {
    HEAP32[$ss73 + 136 >> 2] = 0;
    HEAP32[$ss73 + 140 >> 2] = -1;
    HEAP32[$ss73 >> 2] = 772;
    HEAP32[$3190 >> 2] = 812;
    HEAP32[$3191 >> 2] = 792;
    __THREW__ = 0;
    invoke_vi(179, $3192 | 0);
    $3199 = __THREW__;
    __THREW__ = 0;
    do if ($3199 & 1) {
     $3209 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1099$index146Z2D = tempRet0;
     $eh$lpad$body$i1099$indexZ2D = $3209;
    } else {
     HEAP32[$3192 >> 2] = 1104;
     $3201 = $ss73 + 44 | 0;
     HEAP32[$3201 + 0 >> 2] = 0;
     HEAP32[$3201 + 4 >> 2] = 0;
     HEAP32[$3201 + 8 >> 2] = 0;
     HEAP32[$3201 + 12 >> 2] = 0;
     HEAP32[$ss73 + 60 >> 2] = 24;
     HEAP32[$23 + 0 >> 2] = 0;
     HEAP32[$23 + 4 >> 2] = 0;
     HEAP32[$23 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $3192 | 0, $23 | 0);
     $3203 = __THREW__;
     __THREW__ = 0;
     if ($3203 & 1) {
      $3205 = ___cxa_find_matching_catch() | 0;
      $3206 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3201);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3192);
      $eh$lpad$body$i1099$index146Z2D = $3206;
      $eh$lpad$body$i1099$indexZ2D = $3205;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23);
     __THREW__ = 0;
     $3212 = invoke_iiii(25, $ss73 + 8 | 0, 38968, 34) | 0;
     $3213 = __THREW__;
     __THREW__ = 0;
     do if ($3213 & 1) label = 1110; else {
      __THREW__ = 0;
      invoke_iii(25, $3212 | 0, $3188 | 0) | 0;
      $3215 = __THREW__;
      __THREW__ = 0;
      if ($3215 & 1) label = 1110; else {
       $3217 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $81 | 0, $3192 | 0);
       $3218 = __THREW__;
       __THREW__ = 0;
       if ($3218 & 1) {
        $3232 = ___cxa_find_matching_catch() | 0;
        $$412994 = $3232;
        $$41682993 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(17, $3217 | 0, $194 | 0, $3112 | 0, $81 | 0);
        $3220 = __THREW__;
        __THREW__ = 0;
        if ($3220 & 1) $$0215 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $3217 | 0, 37312, 185);
         $3222 = __THREW__;
         __THREW__ = 0;
         if ($3222 & 1) $$0215 = 0; else {}
        }
        $3234 = ___cxa_find_matching_catch() | 0;
        $3235 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($81);
        if ($$0215) {
         $$412994 = $3234;
         $$41682993 = $3235;
        } else {
         $$42 = $3234;
         $$4269 = $3235;
         break;
        }
       }
       ___cxa_free_exception($3217 | 0);
       $$42 = $$412994;
       $$4269 = $$41682993;
      }
     } while (0);
     if ((label | 0) == 1110) {
      $3230 = ___cxa_find_matching_catch() | 0;
      $$42 = $3230;
      $$4269 = tempRet0;
     }
     HEAP32[$ss73 >> 2] = 772;
     HEAP32[$ss73 + 64 >> 2] = 812;
     HEAP32[$3191 >> 2] = 792;
     HEAP32[$3192 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3201);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3192);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3190);
     $$59 = $$42;
     $$5986 = $$4269;
     label = 1934;
     break L2206;
    } while (0);
    $$0$i1102 = $eh$lpad$body$i1099$index146Z2D;
    $$01$i1101 = $eh$lpad$body$i1099$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3190);
   $eh$lpad$body1093$index97Z2D = $$0$i1102;
   $eh$lpad$body1093$indexZ2D = $$01$i1101;
   label = 1082;
   break;
  }
 case 1106:
  {
   $3224 = ___cxa_find_matching_catch() | 0;
   $3225 = tempRet0;
   if ($3177) {
    $$59 = $3224;
    $$5986 = $3225;
    label = 1934;
   } else {
    if (($3180 | 0) != ($3173 | 0)) HEAP32[$276 >> 2] = $3182 + (1 - (($3182 + 4 - $3173 | 0) >>> 2) << 2);
    __ZdlPv($3173);
    $$59 = $3224;
    $$5986 = $3225;
    label = 1934;
   }
   break;
  }
 case 1116:
  {
   $3247 = $ss76 + 64 | 0;
   $3248 = $ss76 + 8 | 0;
   HEAP32[$3248 >> 2] = 792;
   $3249 = $ss76 + 12 | 0;
   HEAP32[$ss76 >> 2] = 940;
   HEAP32[$3247 >> 2] = 960;
   HEAP32[$ss76 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss76 + 64 | 0, $3249 | 0);
   $3252 = __THREW__;
   __THREW__ = 0;
   if ($3252 & 1) {
    $3264 = ___cxa_find_matching_catch() | 0;
    $$0$i1122 = tempRet0;
    $$01$i1121 = $3264;
   } else {
    HEAP32[$ss76 + 136 >> 2] = 0;
    HEAP32[$ss76 + 140 >> 2] = -1;
    HEAP32[$ss76 >> 2] = 772;
    HEAP32[$3247 >> 2] = 812;
    HEAP32[$3248 >> 2] = 792;
    __THREW__ = 0;
    invoke_vi(179, $3249 | 0);
    $3256 = __THREW__;
    __THREW__ = 0;
    do if ($3256 & 1) {
     $3266 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1119$index151Z2D = tempRet0;
     $eh$lpad$body$i1119$indexZ2D = $3266;
    } else {
     HEAP32[$3249 >> 2] = 1104;
     $3258 = $ss76 + 44 | 0;
     HEAP32[$3258 + 0 >> 2] = 0;
     HEAP32[$3258 + 4 >> 2] = 0;
     HEAP32[$3258 + 8 >> 2] = 0;
     HEAP32[$3258 + 12 >> 2] = 0;
     HEAP32[$ss76 + 60 >> 2] = 24;
     HEAP32[$22 + 0 >> 2] = 0;
     HEAP32[$22 + 4 >> 2] = 0;
     HEAP32[$22 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $3249 | 0, $22 | 0);
     $3260 = __THREW__;
     __THREW__ = 0;
     if ($3260 & 1) {
      $3262 = ___cxa_find_matching_catch() | 0;
      $3263 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3258);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3249);
      $eh$lpad$body$i1119$index151Z2D = $3263;
      $eh$lpad$body$i1119$indexZ2D = $3262;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
     __THREW__ = 0;
     $3269 = invoke_iiii(25, $ss76 + 8 | 0, 39008, 43) | 0;
     $3270 = __THREW__;
     __THREW__ = 0;
     do if ($3270 & 1) label = 1133; else {
      __THREW__ = 0;
      invoke_iii(24, $3269 | 0, (HEAP32[$3240 >> 2] | 0) - (HEAP32[$3239 >> 2] | 0) >> 2 | 0) | 0;
      $3278 = __THREW__;
      __THREW__ = 0;
      if ($3278 & 1) label = 1133; else {
       $3280 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $82 | 0, $3249 | 0);
       $3281 = __THREW__;
       __THREW__ = 0;
       if ($3281 & 1) {
        $3295 = ___cxa_find_matching_catch() | 0;
        $$432997 = $3295;
        $$43702996 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(17, $3280 | 0, $194 | 0, $3112 | 0, $82 | 0);
        $3283 = __THREW__;
        __THREW__ = 0;
        if ($3283 & 1) $$0219 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $3280 | 0, 37312, 185);
         $3285 = __THREW__;
         __THREW__ = 0;
         if ($3285 & 1) $$0219 = 0; else {}
        }
        $3297 = ___cxa_find_matching_catch() | 0;
        $3298 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($82);
        if ($$0219) {
         $$432997 = $3297;
         $$43702996 = $3298;
        } else {
         $$44 = $3297;
         $$4471 = $3298;
         break;
        }
       }
       ___cxa_free_exception($3280 | 0);
       $$44 = $$432997;
       $$4471 = $$43702996;
      }
     } while (0);
     if ((label | 0) == 1133) {
      $3293 = ___cxa_find_matching_catch() | 0;
      $$44 = $3293;
      $$4471 = tempRet0;
     }
     HEAP32[$ss76 >> 2] = 772;
     HEAP32[$ss76 + 64 >> 2] = 812;
     HEAP32[$3248 >> 2] = 792;
     HEAP32[$3249 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3258);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3249);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3247);
     $$45 = $$44;
     $$4572 = $$4471;
     label = 1230;
     break L2206;
    } while (0);
    $$0$i1122 = $eh$lpad$body$i1119$index151Z2D;
    $$01$i1121 = $eh$lpad$body$i1119$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3247);
   $eh$lpad$body1124$index158Z2D = $$0$i1122;
   $eh$lpad$body1124$indexZ2D = $$01$i1121;
   label = 1132;
   break;
  }
 case 1129:
  {
   $3287 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1124$index158Z2D = tempRet0;
   $eh$lpad$body1124$indexZ2D = $3287;
   label = 1132;
   break;
  }
 case 1130:
  {
   $3289 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1124$index158Z2D = tempRet0;
   $eh$lpad$body1124$indexZ2D = $3289;
   label = 1132;
   break;
  }
 case 1131:
  {
   $3291 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1124$index158Z2D = tempRet0;
   $eh$lpad$body1124$indexZ2D = $3291;
   label = 1132;
   break;
  }
 case 1237:
  {
   $3568 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3568;
   label = 1082;
   break;
  }
 case 1243:
  {
   $3589 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $21 | 0, 40288, 12);
   $3590 = __THREW__;
   __THREW__ = 0;
   if ($3590 & 1) {
    $3596 = ___cxa_find_matching_catch() | 0;
    $$016$i = tempRet0;
    $$024$i = $3596;
    label = 1248;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3589 | 0, $194 | 0, $3112 | 0, $21 | 0);
    $3592 = __THREW__;
    __THREW__ = 0;
    if ($3592 & 1) $$0$i1212 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3589 | 0, 37312, 185);
     $3594 = __THREW__;
     __THREW__ = 0;
     if ($3594 & 1) $$0$i1212 = 0; else {}
    }
    $3598 = ___cxa_find_matching_catch() | 0;
    $3599 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($21);
    if ($$0$i1212) {
     $$016$i = $3599;
     $$024$i = $3598;
     label = 1248;
    } else {
     $$015$i = $3599;
     $$023$i = $3598;
    }
   }
   if ((label | 0) == 1248) {
    ___cxa_free_exception($3589 | 0);
    $$015$i = $$016$i;
    $$023$i = $$024$i;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i;
   $eh$lpad$body1093$indexZ2D = $$023$i;
   label = 1082;
   break;
  }
 case 1252:
  {
   $3600 = ___cxa_find_matching_catch() | 0;
   $3601 = tempRet0;
   if ($3567) {
    $$59 = $3600;
    $$5986 = $3601;
    label = 1934;
   } else {
    if (($3570 | 0) != ($3563 | 0)) HEAP32[$280 >> 2] = $3572 + (1 - (($3572 + 4 - $3563 | 0) >>> 2) << 2);
    __ZdlPv($3563);
    $$59 = $3600;
    $$5986 = $3601;
    label = 1934;
   }
   break;
  }
 case 1260:
  {
   $3615 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3615;
   label = 1082;
   break;
  }
 case 1266:
  {
   $3632 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $20 | 0, 40288, 12);
   $3633 = __THREW__;
   __THREW__ = 0;
   if ($3633 & 1) {
    $3639 = ___cxa_find_matching_catch() | 0;
    $$016$i1245 = tempRet0;
    $$024$i1246 = $3639;
    label = 1271;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3632 | 0, $194 | 0, $3112 | 0, $20 | 0);
    $3635 = __THREW__;
    __THREW__ = 0;
    if ($3635 & 1) $$0$i1244 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3632 | 0, 37312, 185);
     $3637 = __THREW__;
     __THREW__ = 0;
     if ($3637 & 1) $$0$i1244 = 0; else {}
    }
    $3641 = ___cxa_find_matching_catch() | 0;
    $3642 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
    if ($$0$i1244) {
     $$016$i1245 = $3642;
     $$024$i1246 = $3641;
     label = 1271;
    } else {
     $$015$i1247 = $3642;
     $$023$i1248 = $3641;
    }
   }
   if ((label | 0) == 1271) {
    ___cxa_free_exception($3632 | 0);
    $$015$i1247 = $$016$i1245;
    $$023$i1248 = $$024$i1246;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1247;
   $eh$lpad$body1093$indexZ2D = $$023$i1248;
   label = 1082;
   break;
  }
 case 1275:
  {
   $3643 = ___cxa_find_matching_catch() | 0;
   $3644 = tempRet0;
   if ($3610) {
    $$59 = $3643;
    $$5986 = $3644;
    label = 1934;
   } else {
    if (($3611 | 0) != ($3606 | 0)) HEAP32[$282 >> 2] = $3612 + (0 - (($3612 - $3606 | 0) >>> 2) << 2);
    __ZdlPv($3606);
    $$59 = $3643;
    $$5986 = $3644;
    label = 1934;
   }
   break;
  }
 case 1283:
  {
   $3658 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3658;
   label = 1082;
   break;
  }
 case 1289:
  {
   $3675 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $19 | 0, 40288, 12);
   $3676 = __THREW__;
   __THREW__ = 0;
   if ($3676 & 1) {
    $3682 = ___cxa_find_matching_catch() | 0;
    $$016$i1282 = tempRet0;
    $$024$i1283 = $3682;
    label = 1294;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3675 | 0, $194 | 0, $3112 | 0, $19 | 0);
    $3678 = __THREW__;
    __THREW__ = 0;
    if ($3678 & 1) $$0$i1281 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3675 | 0, 37312, 185);
     $3680 = __THREW__;
     __THREW__ = 0;
     if ($3680 & 1) $$0$i1281 = 0; else {}
    }
    $3684 = ___cxa_find_matching_catch() | 0;
    $3685 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
    if ($$0$i1281) {
     $$016$i1282 = $3685;
     $$024$i1283 = $3684;
     label = 1294;
    } else {
     $$015$i1284 = $3685;
     $$023$i1285 = $3684;
    }
   }
   if ((label | 0) == 1294) {
    ___cxa_free_exception($3675 | 0);
    $$015$i1284 = $$016$i1282;
    $$023$i1285 = $$024$i1283;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1284;
   $eh$lpad$body1093$indexZ2D = $$023$i1285;
   label = 1082;
   break;
  }
 case 1298:
  {
   $3686 = ___cxa_find_matching_catch() | 0;
   $3687 = tempRet0;
   if ($3653) {
    $$59 = $3686;
    $$5986 = $3687;
    label = 1934;
   } else {
    if (($3654 | 0) != ($3649 | 0)) HEAP32[$284 >> 2] = $3655 + (0 - (($3655 - $3649 | 0) >>> 2) << 2);
    __ZdlPv($3649);
    $$59 = $3686;
    $$5986 = $3687;
    label = 1934;
   }
   break;
  }
 case 1306:
  {
   $3701 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3701;
   label = 1082;
   break;
  }
 case 1312:
  {
   $3718 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $18 | 0, 40288, 12);
   $3719 = __THREW__;
   __THREW__ = 0;
   if ($3719 & 1) {
    $3725 = ___cxa_find_matching_catch() | 0;
    $$016$i1319 = tempRet0;
    $$024$i1320 = $3725;
    label = 1317;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3718 | 0, $194 | 0, $3112 | 0, $18 | 0);
    $3721 = __THREW__;
    __THREW__ = 0;
    if ($3721 & 1) $$0$i1318 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3718 | 0, 37312, 185);
     $3723 = __THREW__;
     __THREW__ = 0;
     if ($3723 & 1) $$0$i1318 = 0; else {}
    }
    $3727 = ___cxa_find_matching_catch() | 0;
    $3728 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($18);
    if ($$0$i1318) {
     $$016$i1319 = $3728;
     $$024$i1320 = $3727;
     label = 1317;
    } else {
     $$015$i1321 = $3728;
     $$023$i1322 = $3727;
    }
   }
   if ((label | 0) == 1317) {
    ___cxa_free_exception($3718 | 0);
    $$015$i1321 = $$016$i1319;
    $$023$i1322 = $$024$i1320;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1321;
   $eh$lpad$body1093$indexZ2D = $$023$i1322;
   label = 1082;
   break;
  }
 case 1321:
  {
   $3729 = ___cxa_find_matching_catch() | 0;
   $3730 = tempRet0;
   if ($3696) {
    $$59 = $3729;
    $$5986 = $3730;
    label = 1934;
   } else {
    if (($3697 | 0) != ($3692 | 0)) HEAP32[$286 >> 2] = $3698 + (0 - (($3698 - $3692 | 0) >>> 2) << 2);
    __ZdlPv($3692);
    $$59 = $3729;
    $$5986 = $3730;
    label = 1934;
   }
   break;
  }
 case 1329:
  {
   $3744 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3744;
   label = 1082;
   break;
  }
 case 1335:
  {
   $3761 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $17 | 0, 40288, 12);
   $3762 = __THREW__;
   __THREW__ = 0;
   if ($3762 & 1) {
    $3768 = ___cxa_find_matching_catch() | 0;
    $$016$i1356 = tempRet0;
    $$024$i1357 = $3768;
    label = 1340;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3761 | 0, $194 | 0, $3112 | 0, $17 | 0);
    $3764 = __THREW__;
    __THREW__ = 0;
    if ($3764 & 1) $$0$i1355 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3761 | 0, 37312, 185);
     $3766 = __THREW__;
     __THREW__ = 0;
     if ($3766 & 1) $$0$i1355 = 0; else {}
    }
    $3770 = ___cxa_find_matching_catch() | 0;
    $3771 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
    if ($$0$i1355) {
     $$016$i1356 = $3771;
     $$024$i1357 = $3770;
     label = 1340;
    } else {
     $$015$i1358 = $3771;
     $$023$i1359 = $3770;
    }
   }
   if ((label | 0) == 1340) {
    ___cxa_free_exception($3761 | 0);
    $$015$i1358 = $$016$i1356;
    $$023$i1359 = $$024$i1357;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1358;
   $eh$lpad$body1093$indexZ2D = $$023$i1359;
   label = 1082;
   break;
  }
 case 1344:
  {
   $3772 = ___cxa_find_matching_catch() | 0;
   $3773 = tempRet0;
   if ($3739) {
    $$59 = $3772;
    $$5986 = $3773;
    label = 1934;
   } else {
    if (($3740 | 0) != ($3735 | 0)) HEAP32[$288 >> 2] = $3741 + (0 - (($3741 - $3735 | 0) >>> 2) << 2);
    __ZdlPv($3735);
    $$59 = $3772;
    $$5986 = $3773;
    label = 1934;
   }
   break;
  }
 case 1352:
  {
   $3787 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3787;
   label = 1082;
   break;
  }
 case 1358:
  {
   $3804 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $16 | 0, 40288, 12);
   $3805 = __THREW__;
   __THREW__ = 0;
   if ($3805 & 1) {
    $3811 = ___cxa_find_matching_catch() | 0;
    $$016$i1393 = tempRet0;
    $$024$i1394 = $3811;
    label = 1363;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3804 | 0, $194 | 0, $3112 | 0, $16 | 0);
    $3807 = __THREW__;
    __THREW__ = 0;
    if ($3807 & 1) $$0$i1392 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3804 | 0, 37312, 185);
     $3809 = __THREW__;
     __THREW__ = 0;
     if ($3809 & 1) $$0$i1392 = 0; else {}
    }
    $3813 = ___cxa_find_matching_catch() | 0;
    $3814 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
    if ($$0$i1392) {
     $$016$i1393 = $3814;
     $$024$i1394 = $3813;
     label = 1363;
    } else {
     $$015$i1395 = $3814;
     $$023$i1396 = $3813;
    }
   }
   if ((label | 0) == 1363) {
    ___cxa_free_exception($3804 | 0);
    $$015$i1395 = $$016$i1393;
    $$023$i1396 = $$024$i1394;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1395;
   $eh$lpad$body1093$indexZ2D = $$023$i1396;
   label = 1082;
   break;
  }
 case 1367:
  {
   $3815 = ___cxa_find_matching_catch() | 0;
   $3816 = tempRet0;
   if ($3782) {
    $$59 = $3815;
    $$5986 = $3816;
    label = 1934;
   } else {
    if (($3783 | 0) != ($3778 | 0)) HEAP32[$290 >> 2] = $3784 + (0 - (($3784 - $3778 | 0) >>> 2) << 2);
    __ZdlPv($3778);
    $$59 = $3815;
    $$5986 = $3816;
    label = 1934;
   }
   break;
  }
 case 1375:
  {
   $3830 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3830;
   label = 1082;
   break;
  }
 case 1381:
  {
   $3847 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $15 | 0, 40288, 12);
   $3848 = __THREW__;
   __THREW__ = 0;
   if ($3848 & 1) {
    $3854 = ___cxa_find_matching_catch() | 0;
    $$016$i1430 = tempRet0;
    $$024$i1431 = $3854;
    label = 1386;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3847 | 0, $194 | 0, $3112 | 0, $15 | 0);
    $3850 = __THREW__;
    __THREW__ = 0;
    if ($3850 & 1) $$0$i1429 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3847 | 0, 37312, 185);
     $3852 = __THREW__;
     __THREW__ = 0;
     if ($3852 & 1) $$0$i1429 = 0; else {}
    }
    $3856 = ___cxa_find_matching_catch() | 0;
    $3857 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
    if ($$0$i1429) {
     $$016$i1430 = $3857;
     $$024$i1431 = $3856;
     label = 1386;
    } else {
     $$015$i1432 = $3857;
     $$023$i1433 = $3856;
    }
   }
   if ((label | 0) == 1386) {
    ___cxa_free_exception($3847 | 0);
    $$015$i1432 = $$016$i1430;
    $$023$i1433 = $$024$i1431;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1432;
   $eh$lpad$body1093$indexZ2D = $$023$i1433;
   label = 1082;
   break;
  }
 case 1390:
  {
   $3858 = ___cxa_find_matching_catch() | 0;
   $3859 = tempRet0;
   if ($3825) {
    $$59 = $3858;
    $$5986 = $3859;
    label = 1934;
   } else {
    if (($3826 | 0) != ($3821 | 0)) HEAP32[$292 >> 2] = $3827 + (0 - (($3827 - $3821 | 0) >>> 2) << 2);
    __ZdlPv($3821);
    $$59 = $3858;
    $$5986 = $3859;
    label = 1934;
   }
   break;
  }
 case 1398:
  {
   $3873 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3873;
   label = 1082;
   break;
  }
 case 1404:
  {
   $3890 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $14 | 0, 40288, 12);
   $3891 = __THREW__;
   __THREW__ = 0;
   if ($3891 & 1) {
    $3897 = ___cxa_find_matching_catch() | 0;
    $$016$i1467 = tempRet0;
    $$024$i1468 = $3897;
    label = 1409;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3890 | 0, $194 | 0, $3112 | 0, $14 | 0);
    $3893 = __THREW__;
    __THREW__ = 0;
    if ($3893 & 1) $$0$i1466 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3890 | 0, 37312, 185);
     $3895 = __THREW__;
     __THREW__ = 0;
     if ($3895 & 1) $$0$i1466 = 0; else {}
    }
    $3899 = ___cxa_find_matching_catch() | 0;
    $3900 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
    if ($$0$i1466) {
     $$016$i1467 = $3900;
     $$024$i1468 = $3899;
     label = 1409;
    } else {
     $$015$i1469 = $3900;
     $$023$i1470 = $3899;
    }
   }
   if ((label | 0) == 1409) {
    ___cxa_free_exception($3890 | 0);
    $$015$i1469 = $$016$i1467;
    $$023$i1470 = $$024$i1468;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1469;
   $eh$lpad$body1093$indexZ2D = $$023$i1470;
   label = 1082;
   break;
  }
 case 1413:
  {
   $3901 = ___cxa_find_matching_catch() | 0;
   $3902 = tempRet0;
   if ($3868) {
    $$59 = $3901;
    $$5986 = $3902;
    label = 1934;
   } else {
    if (($3869 | 0) != ($3864 | 0)) HEAP32[$294 >> 2] = $3870 + (0 - (($3870 - $3864 | 0) >>> 2) << 2);
    __ZdlPv($3864);
    $$59 = $3901;
    $$5986 = $3902;
    label = 1934;
   }
   break;
  }
 case 1421:
  {
   $3916 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3916;
   label = 1082;
   break;
  }
 case 1427:
  {
   $3933 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $13 | 0, 40288, 12);
   $3934 = __THREW__;
   __THREW__ = 0;
   if ($3934 & 1) {
    $3940 = ___cxa_find_matching_catch() | 0;
    $$016$i1504 = tempRet0;
    $$024$i1505 = $3940;
    label = 1432;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3933 | 0, $194 | 0, $3112 | 0, $13 | 0);
    $3936 = __THREW__;
    __THREW__ = 0;
    if ($3936 & 1) $$0$i1503 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3933 | 0, 37312, 185);
     $3938 = __THREW__;
     __THREW__ = 0;
     if ($3938 & 1) $$0$i1503 = 0; else {}
    }
    $3942 = ___cxa_find_matching_catch() | 0;
    $3943 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
    if ($$0$i1503) {
     $$016$i1504 = $3943;
     $$024$i1505 = $3942;
     label = 1432;
    } else {
     $$015$i1506 = $3943;
     $$023$i1507 = $3942;
    }
   }
   if ((label | 0) == 1432) {
    ___cxa_free_exception($3933 | 0);
    $$015$i1506 = $$016$i1504;
    $$023$i1507 = $$024$i1505;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1506;
   $eh$lpad$body1093$indexZ2D = $$023$i1507;
   label = 1082;
   break;
  }
 case 1436:
  {
   $3944 = ___cxa_find_matching_catch() | 0;
   $3945 = tempRet0;
   if ($3911) {
    $$59 = $3944;
    $$5986 = $3945;
    label = 1934;
   } else {
    if (($3912 | 0) != ($3907 | 0)) HEAP32[$296 >> 2] = $3913 + (0 - (($3913 - $3907 | 0) >>> 2) << 2);
    __ZdlPv($3907);
    $$59 = $3944;
    $$5986 = $3945;
    label = 1934;
   }
   break;
  }
 case 1444:
  {
   $3959 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3959;
   label = 1082;
   break;
  }
 case 1450:
  {
   $3976 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $12 | 0, 40288, 12);
   $3977 = __THREW__;
   __THREW__ = 0;
   if ($3977 & 1) {
    $3983 = ___cxa_find_matching_catch() | 0;
    $$016$i1541 = tempRet0;
    $$024$i1542 = $3983;
    label = 1455;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $3976 | 0, $194 | 0, $3112 | 0, $12 | 0);
    $3979 = __THREW__;
    __THREW__ = 0;
    if ($3979 & 1) $$0$i1540 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3976 | 0, 37312, 185);
     $3981 = __THREW__;
     __THREW__ = 0;
     if ($3981 & 1) $$0$i1540 = 0; else {}
    }
    $3985 = ___cxa_find_matching_catch() | 0;
    $3986 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
    if ($$0$i1540) {
     $$016$i1541 = $3986;
     $$024$i1542 = $3985;
     label = 1455;
    } else {
     $$015$i1543 = $3986;
     $$023$i1544 = $3985;
    }
   }
   if ((label | 0) == 1455) {
    ___cxa_free_exception($3976 | 0);
    $$015$i1543 = $$016$i1541;
    $$023$i1544 = $$024$i1542;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1543;
   $eh$lpad$body1093$indexZ2D = $$023$i1544;
   label = 1082;
   break;
  }
 case 1459:
  {
   $3987 = ___cxa_find_matching_catch() | 0;
   $3988 = tempRet0;
   if ($3954) {
    $$59 = $3987;
    $$5986 = $3988;
    label = 1934;
   } else {
    if (($3955 | 0) != ($3950 | 0)) HEAP32[$298 >> 2] = $3956 + (0 - (($3956 - $3950 | 0) >>> 2) << 2);
    __ZdlPv($3950);
    $$59 = $3987;
    $$5986 = $3988;
    label = 1934;
   }
   break;
  }
 case 1467:
  {
   $3998 = ___cxa_find_matching_catch() | 0;
   $3999 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($95);
   $$59 = $3998;
   $$5986 = $3999;
   label = 1934;
   break;
  }
 case 1471:
  {
   $4004 = ___cxa_find_matching_catch() | 0;
   $4005 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($97);
   $$59 = $4004;
   $$5986 = $4005;
   label = 1934;
   break;
  }
 case 1475:
  {
   $4010 = ___cxa_find_matching_catch() | 0;
   $4011 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($99);
   $$59 = $4010;
   $$5986 = $4011;
   label = 1934;
   break;
  }
 case 1479:
  {
   $4016 = ___cxa_find_matching_catch() | 0;
   $4017 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($101);
   $$59 = $4016;
   $$5986 = $4017;
   label = 1934;
   break;
  }
 case 1483:
  {
   $4022 = ___cxa_find_matching_catch() | 0;
   $4023 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($103);
   $$59 = $4022;
   $$5986 = $4023;
   label = 1934;
   break;
  }
 case 1487:
  {
   $4028 = ___cxa_find_matching_catch() | 0;
   $4029 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($105);
   $$59 = $4028;
   $$5986 = $4029;
   label = 1934;
   break;
  }
 case 1491:
  {
   $4034 = ___cxa_find_matching_catch() | 0;
   $4035 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($107);
   $$59 = $4034;
   $$5986 = $4035;
   label = 1934;
   break;
  }
 case 1495:
  {
   $4041 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4041;
   label = 1082;
   break;
  }
 case 1501:
  {
   $4059 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $109 | 0, 39064, 34);
   $4060 = __THREW__;
   __THREW__ = 0;
   if ($4060 & 1) {
    $4072 = ___cxa_find_matching_catch() | 0;
    $$463000 = $4072;
    $$46732999 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $4059 | 0, $194 | 0, $3112 | 0, $109 | 0);
    $4062 = __THREW__;
    __THREW__ = 0;
    if ($4062 & 1) $$0225 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4059 | 0, 37312, 185);
     $4064 = __THREW__;
     __THREW__ = 0;
     if ($4064 & 1) $$0225 = 0; else {}
    }
    $4074 = ___cxa_find_matching_catch() | 0;
    $4075 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($109);
    if ($$0225) {
     $$463000 = $4074;
     $$46732999 = $4075;
    } else {
     $$59 = $4074;
     $$5986 = $4075;
     label = 1934;
     break;
    }
   }
   ___cxa_free_exception($4059 | 0);
   $$59 = $$463000;
   $$5986 = $$46732999;
   label = 1934;
   break;
  }
 case 1504:
  {
   $4066 = ___cxa_find_matching_catch() | 0;
   $4067 = tempRet0;
   if ($4040) {
    $$59 = $4066;
    $$5986 = $4067;
    label = 1934;
   } else {
    if (($4043 | 0) != ($4036 | 0)) HEAP32[$300 >> 2] = $4045 + (1 - (($4045 + 4 - $4036 | 0) >>> 2) << 2);
    __ZdlPv($4036);
    $$59 = $4066;
    $$5986 = $4067;
    label = 1934;
   }
   break;
  }
 case 1514:
  {
   $$59 = ___cxa_find_matching_catch() | 0;
   $$5986 = tempRet0;
   label = 1934;
   break;
  }
 case 1548:
  {
   $4159 = ___cxa_find_matching_catch() | 0;
   $4160 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$304 >> 2] | 0);
   $eh$lpad$body1093$index97Z2D = $4160;
   $eh$lpad$body1093$indexZ2D = $4159;
   label = 1082;
   break;
  }
 case 1552:
  {
   $4175 = ___cxa_find_matching_catch() | 0;
   $4176 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$304 >> 2] | 0);
   $$59 = $4175;
   $$5986 = $4176;
   label = 1934;
   break;
  }
 case 1556:
  {
   $4183 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4183;
   label = 1082;
   break;
  }
 case 1564:
  {
   $4208 = ___cxa_find_matching_catch() | 0;
   $4209 = tempRet0;
   if ($4182) {
    $$59 = $4208;
    $$5986 = $4209;
    label = 1934;
   } else {
    if (($4185 | 0) != ($4178 | 0)) HEAP32[$307 >> 2] = $4187 + (1 - (($4187 + 4 - $4178 | 0) >>> 2) << 2);
    __ZdlPv($4178);
    $$59 = $4208;
    $$5986 = $4209;
    label = 1934;
   }
   break;
  }
 case 1591:
  {
   $4259 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $114 | 0, 39104, 25);
   $4260 = __THREW__;
   __THREW__ = 0;
   if ($4260 & 1) {
    $4266 = ___cxa_find_matching_catch() | 0;
    $$473005 = $4266;
    $$47743004 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $4259 | 0, $194 | 0, $3112 | 0, $114 | 0);
    $4262 = __THREW__;
    __THREW__ = 0;
    if ($4262 & 1) $$0227 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4259 | 0, 37312, 185);
     $4264 = __THREW__;
     __THREW__ = 0;
     if ($4264 & 1) $$0227 = 0; else {}
    }
    $4268 = ___cxa_find_matching_catch() | 0;
    $4269 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($114);
    if ($$0227) {
     $$473005 = $4268;
     $$47743004 = $4269;
    } else {
     $$59 = $4268;
     $$5986 = $4269;
     label = 1934;
     break;
    }
   }
   ___cxa_free_exception($4259 | 0);
   $$59 = $$473005;
   $$5986 = $$47743004;
   label = 1934;
   break;
  }
 case 1606:
  {
   $4303 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_vii(59, $116 | 0, HEAP32[HEAP32[$args68 >> 2] >> 2] | 0);
   $4304 = __THREW__;
   __THREW__ = 0;
   do if ($4304 & 1) {
    $4313 = ___cxa_find_matching_catch() | 0;
    $$493008 = $4313;
    $$49763007 = tempRet0;
   } else {
    __THREW__ = 0;
    $4306 = invoke_iiii(29, $116 | 0, 0, 39136) | 0;
    $4307 = __THREW__;
    __THREW__ = 0;
    if ($4307 & 1) {
     $4315 = ___cxa_find_matching_catch() | 0;
     $4316 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($116);
     $$493008 = $4315;
     $$49763007 = $4316;
     break;
    };
    HEAP32[$115 + 0 >> 2] = HEAP32[$4306 + 0 >> 2];
    HEAP32[$115 + 4 >> 2] = HEAP32[$4306 + 4 >> 2];
    HEAP32[$115 + 8 >> 2] = HEAP32[$4306 + 8 >> 2];
    HEAP32[$4306 + 0 >> 2] = 0;
    HEAP32[$4306 + 4 >> 2] = 0;
    HEAP32[$4306 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(17, $4303 | 0, $194 | 0, $3112 | 0, $115 | 0);
    $4309 = __THREW__;
    __THREW__ = 0;
    if ($4309 & 1) $$0233 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4303 | 0, 37312, 185);
     $4311 = __THREW__;
     __THREW__ = 0;
     if ($4311 & 1) $$0233 = 0; else {}
    }
    $4317 = ___cxa_find_matching_catch() | 0;
    $4318 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($115);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($116);
    if ($$0233) {
     $$493008 = $4317;
     $$49763007 = $4318;
    } else {
     $$59 = $4317;
     $$5986 = $4318;
     label = 1934;
     break L2206;
    }
   } while (0);
   ___cxa_free_exception($4303 | 0);
   $$59 = $$493008;
   $$5986 = $$49763007;
   label = 1934;
   break;
  }
 case 1618:
  {
   $4328 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4328;
   label = 1082;
   break;
  }
 case 1626:
  {
   $4343 = ___cxa_find_matching_catch() | 0;
   $4344 = tempRet0;
   if ($4323) {
    $$59 = $4343;
    $$5986 = $4344;
    label = 1934;
   } else {
    if (($4324 | 0) != ($4319 | 0)) HEAP32[$313 >> 2] = $4325 + (0 - (($4325 - $4319 | 0) >>> 2) << 2);
    __ZdlPv($4319);
    $$59 = $4343;
    $$5986 = $4344;
    label = 1934;
   }
   break;
  }
 case 1630:
  {
   $lpad$phi3261$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi3261$index165 = tempRet0;
   label = 1632;
   break;
  }
 case 1631:
  {
   $lpad$phi3261$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi3261$index165 = tempRet0;
   label = 1632;
   break;
  }
 case 1633:
  {
   $4353 = ___cxa_find_matching_catch() | 0;
   $4354 = tempRet0;
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($118, HEAP32[$319 >> 2] | 0);
   $$50 = $4353;
   $$5077 = $4354;
   label = 1667;
   break;
  }
 case 1665:
  {
   $$50 = ___cxa_find_matching_catch() | 0;
   $$5077 = tempRet0;
   label = 1667;
   break;
  }
 case 1672:
  {
   $4461 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4461;
   label = 1082;
   break;
  }
 case 1681:
  {
   $4479 = $ss102 + 64 | 0;
   $4480 = $ss102 + 8 | 0;
   HEAP32[$4480 >> 2] = 792;
   $4481 = $ss102 + 12 | 0;
   HEAP32[$ss102 >> 2] = 940;
   HEAP32[$4479 >> 2] = 960;
   HEAP32[$ss102 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss102 + 64 | 0, $4481 | 0);
   $4484 = __THREW__;
   __THREW__ = 0;
   if ($4484 & 1) {
    $4496 = ___cxa_find_matching_catch() | 0;
    $$0$i1798 = tempRet0;
    $$01$i1797 = $4496;
   } else {
    HEAP32[$ss102 + 136 >> 2] = 0;
    HEAP32[$ss102 + 140 >> 2] = -1;
    HEAP32[$ss102 >> 2] = 772;
    HEAP32[$4479 >> 2] = 812;
    HEAP32[$4480 >> 2] = 792;
    __THREW__ = 0;
    invoke_vi(179, $4481 | 0);
    $4488 = __THREW__;
    __THREW__ = 0;
    do if ($4488 & 1) {
     $4498 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1795$index170Z2D = tempRet0;
     $eh$lpad$body$i1795$indexZ2D = $4498;
    } else {
     HEAP32[$4481 >> 2] = 1104;
     $4490 = $ss102 + 44 | 0;
     HEAP32[$4490 + 0 >> 2] = 0;
     HEAP32[$4490 + 4 >> 2] = 0;
     HEAP32[$4490 + 8 >> 2] = 0;
     HEAP32[$4490 + 12 >> 2] = 0;
     HEAP32[$ss102 + 60 >> 2] = 24;
     HEAP32[$10 + 0 >> 2] = 0;
     HEAP32[$10 + 4 >> 2] = 0;
     HEAP32[$10 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4481 | 0, $10 | 0);
     $4492 = __THREW__;
     __THREW__ = 0;
     if ($4492 & 1) {
      $4494 = ___cxa_find_matching_catch() | 0;
      $4495 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4490);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4481);
      $eh$lpad$body$i1795$index170Z2D = $4495;
      $eh$lpad$body$i1795$indexZ2D = $4494;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
     __THREW__ = 0;
     $4501 = invoke_iiii(25, $ss102 + 8 | 0, 39192, 49) | 0;
     $4502 = __THREW__;
     __THREW__ = 0;
     do if ($4502 & 1) label = 1701; else {
      $4504 = HEAP8[$4469 >> 0] | 0;
      if (!($4504 & 1)) $4511 = ($4504 & 255) >>> 1; else $4511 = HEAP32[$4468 + 12 >> 2] | 0;
      __THREW__ = 0;
      invoke_iii(24, $4501 | 0, $4511 | 0) | 0;
      $4512 = __THREW__;
      __THREW__ = 0;
      if ($4512 & 1) label = 1701; else {
       $4514 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $123 | 0, $4481 | 0);
       $4515 = __THREW__;
       __THREW__ = 0;
       if ($4515 & 1) {
        $4529 = ___cxa_find_matching_catch() | 0;
        $$513012 = $4529;
        $$51783011 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(17, $4514 | 0, $194 | 0, $3112 | 0, $123 | 0);
        $4517 = __THREW__;
        __THREW__ = 0;
        if ($4517 & 1) $$0240 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $4514 | 0, 37312, 185);
         $4519 = __THREW__;
         __THREW__ = 0;
         if ($4519 & 1) $$0240 = 0; else {}
        }
        $4531 = ___cxa_find_matching_catch() | 0;
        $4532 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($123);
        if ($$0240) {
         $$513012 = $4531;
         $$51783011 = $4532;
        } else {
         $$52 = $4531;
         $$5279 = $4532;
         break;
        }
       }
       ___cxa_free_exception($4514 | 0);
       $$52 = $$513012;
       $$5279 = $$51783011;
      }
     } while (0);
     if ((label | 0) == 1701) {
      $4527 = ___cxa_find_matching_catch() | 0;
      $$52 = $4527;
      $$5279 = tempRet0;
     }
     HEAP32[$ss102 >> 2] = 772;
     HEAP32[$ss102 + 64 >> 2] = 812;
     HEAP32[$4480 >> 2] = 792;
     HEAP32[$4481 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4490);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4481);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4479);
     $$59 = $$52;
     $$5986 = $$5279;
     label = 1934;
     break L2206;
    } while (0);
    $$0$i1798 = $eh$lpad$body$i1795$index170Z2D;
    $$01$i1797 = $eh$lpad$body$i1795$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4479);
   $eh$lpad$body1093$index97Z2D = $$0$i1798;
   $eh$lpad$body1093$indexZ2D = $$01$i1797;
   label = 1082;
   break;
  }
 case 1697:
  {
   $4521 = ___cxa_find_matching_catch() | 0;
   $4522 = tempRet0;
   if ($4456) {
    $$59 = $4521;
    $$5986 = $4522;
    label = 1934;
   } else {
    if (($4457 | 0) != ($4452 | 0)) HEAP32[$322 >> 2] = $4458 + (0 - (($4458 - $4452 | 0) >>> 2) << 2);
    __ZdlPv($4452);
    $$59 = $4521;
    $$5986 = $4522;
    label = 1934;
   }
   break;
  }
 case 1714:
  {
   $4549 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4549;
   label = 1082;
   break;
  }
 case 1720:
  {
   $4559 = $ss103 + 64 | 0;
   $4560 = $ss103 + 8 | 0;
   HEAP32[$4560 >> 2] = 792;
   $4561 = $ss103 + 12 | 0;
   HEAP32[$ss103 >> 2] = 940;
   HEAP32[$4559 >> 2] = 960;
   HEAP32[$ss103 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss103 + 64 | 0, $4561 | 0);
   $4564 = __THREW__;
   __THREW__ = 0;
   if ($4564 & 1) {
    $4576 = ___cxa_find_matching_catch() | 0;
    $$0$i1841 = tempRet0;
    $$01$i1840 = $4576;
   } else {
    HEAP32[$ss103 + 136 >> 2] = 0;
    HEAP32[$ss103 + 140 >> 2] = -1;
    HEAP32[$ss103 >> 2] = 772;
    HEAP32[$4559 >> 2] = 812;
    HEAP32[$4560 >> 2] = 792;
    __THREW__ = 0;
    invoke_vi(179, $4561 | 0);
    $4568 = __THREW__;
    __THREW__ = 0;
    do if ($4568 & 1) {
     $4578 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1838$index175Z2D = tempRet0;
     $eh$lpad$body$i1838$indexZ2D = $4578;
    } else {
     HEAP32[$4561 >> 2] = 1104;
     $4570 = $ss103 + 44 | 0;
     HEAP32[$4570 + 0 >> 2] = 0;
     HEAP32[$4570 + 4 >> 2] = 0;
     HEAP32[$4570 + 8 >> 2] = 0;
     HEAP32[$4570 + 12 >> 2] = 0;
     HEAP32[$ss103 + 60 >> 2] = 24;
     HEAP32[$9 + 0 >> 2] = 0;
     HEAP32[$9 + 4 >> 2] = 0;
     HEAP32[$9 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4561 | 0, $9 | 0);
     $4572 = __THREW__;
     __THREW__ = 0;
     if ($4572 & 1) {
      $4574 = ___cxa_find_matching_catch() | 0;
      $4575 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4570);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4561);
      $eh$lpad$body$i1838$index175Z2D = $4575;
      $eh$lpad$body$i1838$indexZ2D = $4574;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
     __THREW__ = 0;
     $4581 = invoke_iiii(25, $ss103 + 8 | 0, 39248, 29) | 0;
     $4582 = __THREW__;
     __THREW__ = 0;
     do if ($4582 & 1) label = 1737; else {
      __THREW__ = 0;
      invoke_iii(25, $4581 | 0, $4557 | 0) | 0;
      $4584 = __THREW__;
      __THREW__ = 0;
      if ($4584 & 1) label = 1737; else {
       $4586 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $125 | 0, $4561 | 0);
       $4587 = __THREW__;
       __THREW__ = 0;
       if ($4587 & 1) {
        $4601 = ___cxa_find_matching_catch() | 0;
        $$533015 = $4601;
        $$53803014 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(17, $4586 | 0, $194 | 0, $3112 | 0, $125 | 0);
        $4589 = __THREW__;
        __THREW__ = 0;
        if ($4589 & 1) $$0242 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $4586 | 0, 37312, 185);
         $4591 = __THREW__;
         __THREW__ = 0;
         if ($4591 & 1) $$0242 = 0; else {}
        }
        $4603 = ___cxa_find_matching_catch() | 0;
        $4604 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($125);
        if ($$0242) {
         $$533015 = $4603;
         $$53803014 = $4604;
        } else {
         $$54 = $4603;
         $$5481 = $4604;
         break;
        }
       }
       ___cxa_free_exception($4586 | 0);
       $$54 = $$533015;
       $$5481 = $$53803014;
      }
     } while (0);
     if ((label | 0) == 1737) {
      $4599 = ___cxa_find_matching_catch() | 0;
      $$54 = $4599;
      $$5481 = tempRet0;
     }
     HEAP32[$ss103 >> 2] = 772;
     HEAP32[$ss103 + 64 >> 2] = 812;
     HEAP32[$4560 >> 2] = 792;
     HEAP32[$4561 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4570);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4561);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4559);
     $$59 = $$54;
     $$5986 = $$5481;
     label = 1934;
     break L2206;
    } while (0);
    $$0$i1841 = $eh$lpad$body$i1838$index175Z2D;
    $$01$i1840 = $eh$lpad$body$i1838$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4559);
   $eh$lpad$body1093$index97Z2D = $$0$i1841;
   $eh$lpad$body1093$indexZ2D = $$01$i1840;
   label = 1082;
   break;
  }
 case 1733:
  {
   $4593 = ___cxa_find_matching_catch() | 0;
   $4594 = tempRet0;
   if ($4544) {
    $$59 = $4593;
    $$5986 = $4594;
    label = 1934;
   } else {
    if (($4545 | 0) != ($4540 | 0)) HEAP32[$324 >> 2] = $4546 + (0 - (($4546 - $4540 | 0) >>> 2) << 2);
    __ZdlPv($4540);
    $$59 = $4593;
    $$5986 = $4594;
    label = 1934;
   }
   break;
  }
 case 1743:
  {
   $4607 = $ss104 + 64 | 0;
   $4608 = $ss104 + 8 | 0;
   HEAP32[$4608 >> 2] = 792;
   $4609 = $ss104 + 12 | 0;
   HEAP32[$ss104 >> 2] = 940;
   HEAP32[$4607 >> 2] = 960;
   HEAP32[$ss104 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss104 + 64 | 0, $4609 | 0);
   $4612 = __THREW__;
   __THREW__ = 0;
   if ($4612 & 1) {
    $4624 = ___cxa_find_matching_catch() | 0;
    $$0$i1861 = tempRet0;
    $$01$i1860 = $4624;
   } else {
    HEAP32[$ss104 + 136 >> 2] = 0;
    HEAP32[$ss104 + 140 >> 2] = -1;
    HEAP32[$ss104 >> 2] = 772;
    HEAP32[$4607 >> 2] = 812;
    HEAP32[$4608 >> 2] = 792;
    __THREW__ = 0;
    invoke_vi(179, $4609 | 0);
    $4616 = __THREW__;
    __THREW__ = 0;
    do if ($4616 & 1) {
     $4626 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1858$index180Z2D = tempRet0;
     $eh$lpad$body$i1858$indexZ2D = $4626;
    } else {
     HEAP32[$4609 >> 2] = 1104;
     $4618 = $ss104 + 44 | 0;
     HEAP32[$4618 + 0 >> 2] = 0;
     HEAP32[$4618 + 4 >> 2] = 0;
     HEAP32[$4618 + 8 >> 2] = 0;
     HEAP32[$4618 + 12 >> 2] = 0;
     HEAP32[$ss104 + 60 >> 2] = 24;
     HEAP32[$8 + 0 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4609 | 0, $8 | 0);
     $4620 = __THREW__;
     __THREW__ = 0;
     if ($4620 & 1) {
      $4622 = ___cxa_find_matching_catch() | 0;
      $4623 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4618);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4609);
      $eh$lpad$body$i1858$index180Z2D = $4623;
      $eh$lpad$body$i1858$indexZ2D = $4622;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
     $4628 = $ss104 + 8 | 0;
     __THREW__ = 0;
     invoke_iiii(25, $4628 | 0, 39280, 40) | 0;
     $4629 = __THREW__;
     __THREW__ = 0;
     do if ($4629 & 1) label = 1757; else {
      __THREW__ = 0;
      $4631 = invoke_iiii(25, $4628 | 0, 39328, 30) | 0;
      $4632 = __THREW__;
      __THREW__ = 0;
      if ($4632 & 1) label = 1757; else {
       __THREW__ = 0;
       invoke_iii(25, $4631 | 0, $4557 | 0) | 0;
       $4634 = __THREW__;
       __THREW__ = 0;
       if ($4634 & 1) label = 1757; else {
        $4636 = ___cxa_allocate_exception(24) | 0;
        __THREW__ = 0;
        invoke_vii(43, $126 | 0, $4609 | 0);
        $4637 = __THREW__;
        __THREW__ = 0;
        if ($4637 & 1) {
         $4645 = ___cxa_find_matching_catch() | 0;
         $$553018 = $4645;
         $$55823017 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_viiii(17, $4636 | 0, $194 | 0, $3112 | 0, $126 | 0);
         $4639 = __THREW__;
         __THREW__ = 0;
         if ($4639 & 1) $$0244 = 1; else {
          __THREW__ = 0;
          invoke_viii(4, $4636 | 0, 37312, 185);
          $4641 = __THREW__;
          __THREW__ = 0;
          if ($4641 & 1) $$0244 = 0; else {}
         }
         $4647 = ___cxa_find_matching_catch() | 0;
         $4648 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($126);
         if ($$0244) {
          $$553018 = $4647;
          $$55823017 = $4648;
         } else {
          $$56 = $4647;
          $$5683 = $4648;
          break;
         }
        }
        ___cxa_free_exception($4636 | 0);
        $$56 = $$553018;
        $$5683 = $$55823017;
       }
      }
     } while (0);
     if ((label | 0) == 1757) {
      $4643 = ___cxa_find_matching_catch() | 0;
      $$56 = $4643;
      $$5683 = tempRet0;
     }
     HEAP32[$ss104 >> 2] = 772;
     HEAP32[$ss104 + 64 >> 2] = 812;
     HEAP32[$4608 >> 2] = 792;
     HEAP32[$4609 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4618);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4609);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4607);
     $$59 = $$56;
     $$5986 = $$5683;
     label = 1934;
     break L2206;
    } while (0);
    $$0$i1861 = $eh$lpad$body$i1858$index180Z2D;
    $$01$i1860 = $eh$lpad$body$i1858$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4607);
   $eh$lpad$body1093$index97Z2D = $$0$i1861;
   $eh$lpad$body1093$indexZ2D = $$01$i1860;
   label = 1082;
   break;
  }
 case 1765:
  {
   $4655 = ___cxa_find_matching_catch() | 0;
   $4656 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($128);
   $$59 = $4655;
   $$5986 = $4656;
   label = 1934;
   break;
  }
 case 1770:
  {
   $4666 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4666;
   label = 1082;
   break;
  }
 case 1776:
  {
   $4683 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $7 | 0, 40288, 12);
   $4684 = __THREW__;
   __THREW__ = 0;
   if ($4684 & 1) {
    $4690 = ___cxa_find_matching_catch() | 0;
    $$016$i1898 = tempRet0;
    $$024$i1899 = $4690;
    label = 1781;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $4683 | 0, $194 | 0, $3112 | 0, $7 | 0);
    $4686 = __THREW__;
    __THREW__ = 0;
    if ($4686 & 1) $$0$i1897 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4683 | 0, 37312, 185);
     $4688 = __THREW__;
     __THREW__ = 0;
     if ($4688 & 1) $$0$i1897 = 0; else {}
    }
    $4692 = ___cxa_find_matching_catch() | 0;
    $4693 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
    if ($$0$i1897) {
     $$016$i1898 = $4693;
     $$024$i1899 = $4692;
     label = 1781;
    } else {
     $$015$i1900 = $4693;
     $$023$i1901 = $4692;
    }
   }
   if ((label | 0) == 1781) {
    ___cxa_free_exception($4683 | 0);
    $$015$i1900 = $$016$i1898;
    $$023$i1901 = $$024$i1899;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1900;
   $eh$lpad$body1093$indexZ2D = $$023$i1901;
   label = 1082;
   break;
  }
 case 1785:
  {
   $4694 = ___cxa_find_matching_catch() | 0;
   $4695 = tempRet0;
   if ($4661) {
    $$59 = $4694;
    $$5986 = $4695;
    label = 1934;
   } else {
    if (($4662 | 0) != ($4657 | 0)) HEAP32[$326 >> 2] = $4663 + (0 - (($4663 - $4657 | 0) >>> 2) << 2);
    __ZdlPv($4657);
    $$59 = $4694;
    $$5986 = $4695;
    label = 1934;
   }
   break;
  }
 case 1793:
  {
   $4709 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4709;
   label = 1082;
   break;
  }
 case 1799:
  {
   $4726 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $6 | 0, 40288, 12);
   $4727 = __THREW__;
   __THREW__ = 0;
   if ($4727 & 1) {
    $4733 = ___cxa_find_matching_catch() | 0;
    $$016$i1935 = tempRet0;
    $$024$i1936 = $4733;
    label = 1804;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $4726 | 0, $194 | 0, $3112 | 0, $6 | 0);
    $4729 = __THREW__;
    __THREW__ = 0;
    if ($4729 & 1) $$0$i1934 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4726 | 0, 37312, 185);
     $4731 = __THREW__;
     __THREW__ = 0;
     if ($4731 & 1) $$0$i1934 = 0; else {}
    }
    $4735 = ___cxa_find_matching_catch() | 0;
    $4736 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
    if ($$0$i1934) {
     $$016$i1935 = $4736;
     $$024$i1936 = $4735;
     label = 1804;
    } else {
     $$015$i1937 = $4736;
     $$023$i1938 = $4735;
    }
   }
   if ((label | 0) == 1804) {
    ___cxa_free_exception($4726 | 0);
    $$015$i1937 = $$016$i1935;
    $$023$i1938 = $$024$i1936;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1937;
   $eh$lpad$body1093$indexZ2D = $$023$i1938;
   label = 1082;
   break;
  }
 case 1808:
  {
   $4737 = ___cxa_find_matching_catch() | 0;
   $4738 = tempRet0;
   if ($4704) {
    $$59 = $4737;
    $$5986 = $4738;
    label = 1934;
   } else {
    if (($4705 | 0) != ($4700 | 0)) HEAP32[$328 >> 2] = $4706 + (0 - (($4706 - $4700 | 0) >>> 2) << 2);
    __ZdlPv($4700);
    $$59 = $4737;
    $$5986 = $4738;
    label = 1934;
   }
   break;
  }
 case 1816:
  {
   $4752 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4752;
   label = 1082;
   break;
  }
 case 1822:
  {
   $4769 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $5 | 0, 40288, 12);
   $4770 = __THREW__;
   __THREW__ = 0;
   if ($4770 & 1) {
    $4776 = ___cxa_find_matching_catch() | 0;
    $$016$i1972 = tempRet0;
    $$024$i1973 = $4776;
    label = 1827;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $4769 | 0, $194 | 0, $3112 | 0, $5 | 0);
    $4772 = __THREW__;
    __THREW__ = 0;
    if ($4772 & 1) $$0$i1971 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4769 | 0, 37312, 185);
     $4774 = __THREW__;
     __THREW__ = 0;
     if ($4774 & 1) $$0$i1971 = 0; else {}
    }
    $4778 = ___cxa_find_matching_catch() | 0;
    $4779 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
    if ($$0$i1971) {
     $$016$i1972 = $4779;
     $$024$i1973 = $4778;
     label = 1827;
    } else {
     $$015$i1974 = $4779;
     $$023$i1975 = $4778;
    }
   }
   if ((label | 0) == 1827) {
    ___cxa_free_exception($4769 | 0);
    $$015$i1974 = $$016$i1972;
    $$023$i1975 = $$024$i1973;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i1974;
   $eh$lpad$body1093$indexZ2D = $$023$i1975;
   label = 1082;
   break;
  }
 case 1831:
  {
   $4780 = ___cxa_find_matching_catch() | 0;
   $4781 = tempRet0;
   if ($4747) {
    $$59 = $4780;
    $$5986 = $4781;
    label = 1934;
   } else {
    if (($4748 | 0) != ($4743 | 0)) HEAP32[$330 >> 2] = $4749 + (0 - (($4749 - $4743 | 0) >>> 2) << 2);
    __ZdlPv($4743);
    $$59 = $4780;
    $$5986 = $4781;
    label = 1934;
   }
   break;
  }
 case 1839:
  {
   $4795 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4795;
   label = 1082;
   break;
  }
 case 1845:
  {
   $4813 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $4 | 0, 40288, 12);
   $4814 = __THREW__;
   __THREW__ = 0;
   if ($4814 & 1) {
    $4820 = ___cxa_find_matching_catch() | 0;
    $$016$i2009 = tempRet0;
    $$024$i2010 = $4820;
    label = 1850;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $4813 | 0, $194 | 0, $3112 | 0, $4 | 0);
    $4816 = __THREW__;
    __THREW__ = 0;
    if ($4816 & 1) $$0$i2008 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4813 | 0, 37312, 185);
     $4818 = __THREW__;
     __THREW__ = 0;
     if ($4818 & 1) $$0$i2008 = 0; else {}
    }
    $4822 = ___cxa_find_matching_catch() | 0;
    $4823 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
    if ($$0$i2008) {
     $$016$i2009 = $4823;
     $$024$i2010 = $4822;
     label = 1850;
    } else {
     $$015$i2011 = $4823;
     $$023$i2012 = $4822;
    }
   }
   if ((label | 0) == 1850) {
    ___cxa_free_exception($4813 | 0);
    $$015$i2011 = $$016$i2009;
    $$023$i2012 = $$024$i2010;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i2011;
   $eh$lpad$body1093$indexZ2D = $$023$i2012;
   label = 1082;
   break;
  }
 case 1854:
  {
   $4824 = ___cxa_find_matching_catch() | 0;
   $4825 = tempRet0;
   if ($4790) {
    $$59 = $4824;
    $$5986 = $4825;
    label = 1934;
   } else {
    if (($4791 | 0) != ($4786 | 0)) HEAP32[$332 >> 2] = $4792 + (0 - (($4792 - $4786 | 0) >>> 2) << 2);
    __ZdlPv($4786);
    $$59 = $4824;
    $$5986 = $4825;
    label = 1934;
   }
   break;
  }
 case 1861:
  {
   $4835 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4835;
   label = 1082;
   break;
  }
 case 1867:
  {
   $4846 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $134 | 0, 38736, 17);
   $4847 = __THREW__;
   __THREW__ = 0;
   if ($4847 & 1) {
    $4859 = ___cxa_find_matching_catch() | 0;
    $$573021 = $4859;
    $$57843020 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $4846 | 0, $194 | 0, $3112 | 0, $134 | 0);
    $4849 = __THREW__;
    __THREW__ = 0;
    if ($4849 & 1) $$0246 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4846 | 0, 37312, 185);
     $4851 = __THREW__;
     __THREW__ = 0;
     if ($4851 & 1) $$0246 = 0; else {}
    }
    $4861 = ___cxa_find_matching_catch() | 0;
    $4862 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($134);
    if ($$0246) {
     $$573021 = $4861;
     $$57843020 = $4862;
    } else {
     $$59 = $4861;
     $$5986 = $4862;
     label = 1934;
     break;
    }
   }
   ___cxa_free_exception($4846 | 0);
   $$59 = $$573021;
   $$5986 = $$57843020;
   label = 1934;
   break;
  }
 case 1870:
  {
   $4853 = ___cxa_find_matching_catch() | 0;
   $4854 = tempRet0;
   if ($4834) {
    $$59 = $4853;
    $$5986 = $4854;
    label = 1934;
   } else {
    if (($4837 | 0) != ($4830 | 0)) HEAP32[$334 >> 2] = $4839 + (1 - (($4839 + 4 - $4830 | 0) >>> 2) << 2);
    __ZdlPv($4830);
    $$59 = $4853;
    $$5986 = $4854;
    label = 1934;
   }
   break;
  }
 case 1878:
  {
   $4874 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $3 | 0, 40288, 12);
   $4875 = __THREW__;
   __THREW__ = 0;
   if ($4875 & 1) {
    $4881 = ___cxa_find_matching_catch() | 0;
    $$016$i2056 = tempRet0;
    $$024$i2057 = $4881;
    label = 1883;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $4874 | 0, $194 | 0, $3112 | 0, $3 | 0);
    $4877 = __THREW__;
    __THREW__ = 0;
    if ($4877 & 1) $$0$i2055 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4874 | 0, 37312, 185);
     $4879 = __THREW__;
     __THREW__ = 0;
     if ($4879 & 1) $$0$i2055 = 0; else {}
    }
    $4883 = ___cxa_find_matching_catch() | 0;
    $4884 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
    if ($$0$i2055) {
     $$016$i2056 = $4884;
     $$024$i2057 = $4883;
     label = 1883;
    } else {
     $$015$i2058 = $4884;
     $$023$i2059 = $4883;
    }
   }
   if ((label | 0) == 1883) {
    ___cxa_free_exception($4874 | 0);
    $$015$i2058 = $$016$i2056;
    $$023$i2059 = $$024$i2057;
   }
   $eh$lpad$body1093$index97Z2D = $$015$i2058;
   $eh$lpad$body1093$indexZ2D = $$023$i2059;
   label = 1082;
   break;
  }
 case 1892:
  {
   $4894 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $4894;
   label = 1082;
   break;
  }
 case 1898:
  {
   $4905 = ___cxa_allocate_exception(24) | 0;
   HEAP32[$137 + 0 >> 2] = 0;
   HEAP32[$137 + 4 >> 2] = 0;
   HEAP32[$137 + 8 >> 2] = 0;
   $4906 = HEAP8[$4902 >> 0] | 0;
   if (!($4906 & 1)) $4914 = ($4906 & 255) >>> 1; else $4914 = HEAP32[$4901 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(14, $137 | 0, 39360, 29, $4914 + 29 | 0);
   $4915 = __THREW__;
   __THREW__ = 0;
   if ($4915 & 1) label = 1912; else {
    if (!(HEAP8[$4902 >> 0] & 1)) $4923 = $4902 + 1 | 0; else $4923 = HEAP32[$4901 + 16 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(31, $137 | 0, $4923 | 0, $4914 | 0) | 0;
    $4924 = __THREW__;
    __THREW__ = 0;
    if ($4924 & 1) label = 1912; else {
     __THREW__ = 0;
     invoke_viiii(17, $4905 | 0, $194 | 0, $3112 | 0, $137 | 0);
     $4926 = __THREW__;
     __THREW__ = 0;
     if ($4926 & 1) $$0248 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4905 | 0, 37312, 185);
      $4928 = __THREW__;
      __THREW__ = 0;
      if ($4928 & 1) $$0248 = 0; else {}
     }
     $4938 = ___cxa_find_matching_catch() | 0;
     $4939 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($137);
     if ($$0248) {
      $$583024 = $4938;
      $$58853023 = $4939;
     } else {
      $$59 = $4938;
      $$5986 = $4939;
      label = 1934;
      break;
     }
    }
   }
   if ((label | 0) == 1912) {
    $4936 = ___cxa_find_matching_catch() | 0;
    $4937 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($137);
    $$583024 = $4936;
    $$58853023 = $4937;
   }
   ___cxa_free_exception($4905 | 0);
   $$59 = $$583024;
   $$5986 = $$58853023;
   label = 1934;
   break;
  }
 case 1908:
  {
   $4930 = ___cxa_find_matching_catch() | 0;
   $4931 = tempRet0;
   if ($4889) {
    $$59 = $4930;
    $$5986 = $4931;
    label = 1934;
   } else {
    if (($4890 | 0) != ($4885 | 0)) HEAP32[$336 >> 2] = $4891 + (0 - (($4891 - $4885 | 0) >>> 2) << 2);
    __ZdlPv($4885);
    $$59 = $4930;
    $$5986 = $4931;
    label = 1934;
   }
   break;
  }
 case 1918:
  {
   __THREW__ = 0;
   $4945 = invoke_iiii(25, 41312, 39392, 38) | 0;
   $4946 = __THREW__;
   __THREW__ = 0;
   do if (!($4946 & 1)) {
    __THREW__ = 0;
    $4948 = invoke_iii(24, $4945 | 0, $3114 | 0) | 0;
    $4949 = __THREW__;
    __THREW__ = 0;
    if (!($4949 & 1)) {
     __THREW__ = 0;
     invoke_vii(47, $0 | 0, $4948 + (HEAP32[(HEAP32[$4948 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $4955 = __THREW__;
     __THREW__ = 0;
     if (!($4955 & 1)) {
      __THREW__ = 0;
      $4957 = invoke_iii(22, $0 | 0, 45800) | 0;
      $4958 = __THREW__;
      __THREW__ = 0;
      if (!($4958 & 1)) {
       __THREW__ = 0;
       $4963 = invoke_iii(HEAP32[(HEAP32[$4957 >> 2] | 0) + 28 >> 2] | 0, $4957 | 0, 10) | 0;
       $4964 = __THREW__;
       __THREW__ = 0;
       if (!($4964 & 1)) {
        __ZNSt3__16localeD2Ev($0);
        __THREW__ = 0;
        invoke_iii(27, $4948 | 0, $4963 | 0) | 0;
        $4968 = __THREW__;
        __THREW__ = 0;
        if ($4968 & 1) break;
        __THREW__ = 0;
        invoke_ii(68, $4948 | 0) | 0;
        $4970 = __THREW__;
        __THREW__ = 0;
        if ($4970 & 1) break;
        __THREW__ = 0;
        invoke_v(3);
        $4972 = __THREW__;
        __THREW__ = 0;
        if ($4972 & 1) break;
       }
      }
      $4966 = ___cxa_find_matching_catch() | 0;
      $4967 = tempRet0;
      __ZNSt3__16localeD2Ev($0);
      $eh$lpad$body1093$index97Z2D = $4967;
      $eh$lpad$body1093$indexZ2D = $4966;
      label = 1082;
      break L2206;
     }
    }
   } while (0);
   $3171 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1093$index97Z2D = tempRet0;
   $eh$lpad$body1093$indexZ2D = $3171;
   label = 1082;
   break;
  }
 case 1944:
  {
   $5024 = HEAP32[$$idx$val$i839 + -140 >> 2] | 0;
   $5026 = (HEAP32[$200 >> 2] | 0) == 19;
   $5027 = ___cxa_allocate_exception(24) | 0;
   $5028 = $5024 + 4 | 0;
   if ($5026) {
    __THREW__ = 0;
    invoke_viiii(17, $5027 | 0, $194 | 0, $5028 | 0, (HEAP32[$201 >> 2] | 0) + 8 | 0);
    $5051 = __THREW__;
    __THREW__ = 0;
    if (!($5051 & 1)) ___cxa_throw($5027 | 0, 37312, 185);
    $5053 = ___cxa_find_matching_catch() | 0;
    $5054 = tempRet0;
    ___cxa_free_exception($5027 | 0);
    $$107 = $5053;
    $$107134 = $5054;
    ___resumeException($$107 | 0);
   }
   __THREW__ = 0;
   invoke_vii(59, $141 | 0, HEAP32[$200 >> 2] | 0);
   $5029 = __THREW__;
   __THREW__ = 0;
   do if ($5029 & 1) {
    $5041 = ___cxa_find_matching_catch() | 0;
    $$623028 = $5041;
    $$62893027 = tempRet0;
   } else {
    __THREW__ = 0;
    $5031 = invoke_iiii(29, $141 | 0, 0, 39432) | 0;
    $5032 = __THREW__;
    __THREW__ = 0;
    if ($5032 & 1) {
     $5043 = ___cxa_find_matching_catch() | 0;
     $5044 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($141);
     $$623028 = $5043;
     $$62893027 = $5044;
     break;
    };
    HEAP32[$140 + 0 >> 2] = HEAP32[$5031 + 0 >> 2];
    HEAP32[$140 + 4 >> 2] = HEAP32[$5031 + 4 >> 2];
    HEAP32[$140 + 8 >> 2] = HEAP32[$5031 + 8 >> 2];
    HEAP32[$5031 + 0 >> 2] = 0;
    HEAP32[$5031 + 4 >> 2] = 0;
    HEAP32[$5031 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5034 = invoke_iii(29, $140 | 0, 38552) | 0;
    $5035 = __THREW__;
    __THREW__ = 0;
    if ($5035 & 1) {
     $5045 = ___cxa_find_matching_catch() | 0;
     $$1237 = 1;
     $$60 = $5045;
     $$6087 = tempRet0;
    } else {
     HEAP32[$139 + 0 >> 2] = HEAP32[$5034 + 0 >> 2];
     HEAP32[$139 + 4 >> 2] = HEAP32[$5034 + 4 >> 2];
     HEAP32[$139 + 8 >> 2] = HEAP32[$5034 + 8 >> 2];
     HEAP32[$5034 + 0 >> 2] = 0;
     HEAP32[$5034 + 4 >> 2] = 0;
     HEAP32[$5034 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5027 | 0, $194 | 0, $5028 | 0, $139 | 0);
     $5037 = __THREW__;
     __THREW__ = 0;
     if ($5037 & 1) $$0236 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5027 | 0, 37312, 185);
      $5039 = __THREW__;
      __THREW__ = 0;
      if ($5039 & 1) $$0236 = 0; else {}
     }
     $5047 = ___cxa_find_matching_catch() | 0;
     $5048 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($139);
     $$1237 = $$0236;
     $$60 = $5047;
     $$6087 = $5048;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($140);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($141);
    if ($$1237) {
     $$623028 = $$60;
     $$62893027 = $$6087;
    } else {
     $$107 = $$60;
     $$107134 = $$6087;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5027 | 0);
   $$107 = $$623028;
   $$107134 = $$62893027;
   ___resumeException($$107 | 0);
   break;
  }
 case 1960:
  {
   $5059 = ___cxa_allocate_exception(24) | 0;
   $5060 = $5056 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(59, $144 | 0, HEAP32[$200 >> 2] | 0);
   $5061 = __THREW__;
   __THREW__ = 0;
   do if ($5061 & 1) {
    $5073 = ___cxa_find_matching_catch() | 0;
    $$653032 = $5073;
    $$65923031 = tempRet0;
   } else {
    __THREW__ = 0;
    $5063 = invoke_iiii(29, $144 | 0, 0, 39472) | 0;
    $5064 = __THREW__;
    __THREW__ = 0;
    if ($5064 & 1) {
     $5075 = ___cxa_find_matching_catch() | 0;
     $5076 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($144);
     $$653032 = $5075;
     $$65923031 = $5076;
     break;
    };
    HEAP32[$143 + 0 >> 2] = HEAP32[$5063 + 0 >> 2];
    HEAP32[$143 + 4 >> 2] = HEAP32[$5063 + 4 >> 2];
    HEAP32[$143 + 8 >> 2] = HEAP32[$5063 + 8 >> 2];
    HEAP32[$5063 + 0 >> 2] = 0;
    HEAP32[$5063 + 4 >> 2] = 0;
    HEAP32[$5063 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5066 = invoke_iii(29, $143 | 0, 38552) | 0;
    $5067 = __THREW__;
    __THREW__ = 0;
    if ($5067 & 1) {
     $5077 = ___cxa_find_matching_catch() | 0;
     $$1230 = 1;
     $$63 = $5077;
     $$6390 = tempRet0;
    } else {
     HEAP32[$142 + 0 >> 2] = HEAP32[$5066 + 0 >> 2];
     HEAP32[$142 + 4 >> 2] = HEAP32[$5066 + 4 >> 2];
     HEAP32[$142 + 8 >> 2] = HEAP32[$5066 + 8 >> 2];
     HEAP32[$5066 + 0 >> 2] = 0;
     HEAP32[$5066 + 4 >> 2] = 0;
     HEAP32[$5066 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5059 | 0, $194 | 0, $5060 | 0, $142 | 0);
     $5069 = __THREW__;
     __THREW__ = 0;
     if ($5069 & 1) $$0229 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5059 | 0, 37312, 185);
      $5071 = __THREW__;
      __THREW__ = 0;
      if ($5071 & 1) $$0229 = 0; else {}
     }
     $5079 = ___cxa_find_matching_catch() | 0;
     $5080 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($142);
     $$1230 = $$0229;
     $$63 = $5079;
     $$6390 = $5080;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($143);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($144);
    if ($$1230) {
     $$653032 = $$63;
     $$65923031 = $$6390;
    } else {
     $$107 = $$63;
     $$107134 = $$6390;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5059 | 0);
   $$107 = $$653032;
   $$107134 = $$65923031;
   ___resumeException($$107 | 0);
   break;
  }
 case 1977:
  {
   $5092 = ___cxa_allocate_exception(24) | 0;
   $5093 = $5087 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(59, $147 | 0, HEAP32[$200 >> 2] | 0);
   $5094 = __THREW__;
   __THREW__ = 0;
   do if ($5094 & 1) {
    $5106 = ___cxa_find_matching_catch() | 0;
    $$683036 = $5106;
    $$68953035 = tempRet0;
   } else {
    __THREW__ = 0;
    $5096 = invoke_iiii(29, $147 | 0, 0, 39512) | 0;
    $5097 = __THREW__;
    __THREW__ = 0;
    if ($5097 & 1) {
     $5108 = ___cxa_find_matching_catch() | 0;
     $5109 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($147);
     $$683036 = $5108;
     $$68953035 = $5109;
     break;
    };
    HEAP32[$146 + 0 >> 2] = HEAP32[$5096 + 0 >> 2];
    HEAP32[$146 + 4 >> 2] = HEAP32[$5096 + 4 >> 2];
    HEAP32[$146 + 8 >> 2] = HEAP32[$5096 + 8 >> 2];
    HEAP32[$5096 + 0 >> 2] = 0;
    HEAP32[$5096 + 4 >> 2] = 0;
    HEAP32[$5096 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5099 = invoke_iii(29, $146 | 0, 38552) | 0;
    $5100 = __THREW__;
    __THREW__ = 0;
    if ($5100 & 1) {
     $5110 = ___cxa_find_matching_catch() | 0;
     $$1222 = 1;
     $$66 = $5110;
     $$6693 = tempRet0;
    } else {
     HEAP32[$145 + 0 >> 2] = HEAP32[$5099 + 0 >> 2];
     HEAP32[$145 + 4 >> 2] = HEAP32[$5099 + 4 >> 2];
     HEAP32[$145 + 8 >> 2] = HEAP32[$5099 + 8 >> 2];
     HEAP32[$5099 + 0 >> 2] = 0;
     HEAP32[$5099 + 4 >> 2] = 0;
     HEAP32[$5099 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5092 | 0, $194 | 0, $5093 | 0, $145 | 0);
     $5102 = __THREW__;
     __THREW__ = 0;
     if ($5102 & 1) $$0221 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5092 | 0, 37312, 185);
      $5104 = __THREW__;
      __THREW__ = 0;
      if ($5104 & 1) $$0221 = 0; else {}
     }
     $5112 = ___cxa_find_matching_catch() | 0;
     $5113 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($145);
     $$1222 = $$0221;
     $$66 = $5112;
     $$6693 = $5113;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($146);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($147);
    if ($$1222) {
     $$683036 = $$66;
     $$68953035 = $$6693;
    } else {
     $$107 = $$66;
     $$107134 = $$6693;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5092 | 0);
   $$107 = $$683036;
   $$107134 = $$68953035;
   ___resumeException($$107 | 0);
   break;
  }
 case 1989:
  {
   $5125 = $ss119 + 64 | 0;
   $5126 = $ss119 + 8 | 0;
   HEAP32[$5126 >> 2] = 792;
   $5127 = $ss119 + 12 | 0;
   HEAP32[$ss119 >> 2] = 940;
   HEAP32[$5125 >> 2] = 960;
   HEAP32[$ss119 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss119 + 64 | 0, $5127 | 0);
   $5130 = __THREW__;
   __THREW__ = 0;
   if ($5130 & 1) {
    $5142 = ___cxa_find_matching_catch() | 0;
    $$0$i2145 = tempRet0;
    $$01$i2144 = $5142;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5125);
    ___resumeException($$01$i2144 | 0);
   }
   HEAP32[$ss119 + 136 >> 2] = 0;
   HEAP32[$ss119 + 140 >> 2] = -1;
   HEAP32[$ss119 >> 2] = 772;
   HEAP32[$5125 >> 2] = 812;
   HEAP32[$5126 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $5127 | 0);
   $5134 = __THREW__;
   __THREW__ = 0;
   do if ($5134 & 1) {
    $5144 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i2142$index185Z2D = tempRet0;
    $eh$lpad$body$i2142$indexZ2D = $5144;
   } else {
    HEAP32[$5127 >> 2] = 1104;
    $5136 = $ss119 + 44 | 0;
    HEAP32[$5136 + 0 >> 2] = 0;
    HEAP32[$5136 + 4 >> 2] = 0;
    HEAP32[$5136 + 8 >> 2] = 0;
    HEAP32[$5136 + 12 >> 2] = 0;
    HEAP32[$ss119 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $5127 | 0, $0 | 0);
    $5138 = __THREW__;
    __THREW__ = 0;
    if ($5138 & 1) {
     $5140 = ___cxa_find_matching_catch() | 0;
     $5141 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5136);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5127);
     $eh$lpad$body$i2142$index185Z2D = $5141;
     $eh$lpad$body$i2142$indexZ2D = $5140;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __THREW__ = 0;
    $5147 = invoke_iiii(25, $ss119 + 8 | 0, 39552, 20) | 0;
    $5148 = __THREW__;
    __THREW__ = 0;
    do if ($5148 & 1) label = 2005; else {
     __THREW__ = 0;
     $5150 = invoke_iii(25, $5147 | 0, $5117 | 0) | 0;
     $5151 = __THREW__;
     __THREW__ = 0;
     if ($5151 & 1) label = 2005; else {
      __THREW__ = 0;
      $5153 = invoke_iiii(25, $5150 | 0, 39576, 16) | 0;
      $5154 = __THREW__;
      __THREW__ = 0;
      if ($5154 & 1) label = 2005; else {
       __THREW__ = 0;
       $5156 = invoke_iii(25, $5153 | 0, $5122 | 0) | 0;
       $5157 = __THREW__;
       __THREW__ = 0;
       if ($5157 & 1) label = 2005; else {
        __THREW__ = 0;
        invoke_iiii(25, $5156 | 0, 38096, 1) | 0;
        $5159 = __THREW__;
        __THREW__ = 0;
        if ($5159 & 1) label = 2005; else {
         $5161 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $148 | 0, $5127 | 0);
         $5162 = __THREW__;
         __THREW__ = 0;
         if ($5162 & 1) {
          $5171 = ___cxa_find_matching_catch() | 0;
          $$693040 = $5171;
          $$69963039 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_viiii(17, $5161 | 0, $194 | 0, $5087 + 4 | 0, $148 | 0);
          $5165 = __THREW__;
          __THREW__ = 0;
          if ($5165 & 1) $$0217 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $5161 | 0, 37312, 185);
           $5167 = __THREW__;
           __THREW__ = 0;
           if ($5167 & 1) $$0217 = 0; else {}
          }
          $5173 = ___cxa_find_matching_catch() | 0;
          $5174 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($148);
          if ($$0217) {
           $$693040 = $5173;
           $$69963039 = $5174;
          } else {
           $$70 = $5173;
           $$7097 = $5174;
           break;
          }
         }
         ___cxa_free_exception($5161 | 0);
         $$70 = $$693040;
         $$7097 = $$69963039;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 2005) {
     $5169 = ___cxa_find_matching_catch() | 0;
     $$70 = $5169;
     $$7097 = tempRet0;
    }
    HEAP32[$ss119 >> 2] = 772;
    HEAP32[$ss119 + 64 >> 2] = 812;
    HEAP32[$5126 >> 2] = 792;
    HEAP32[$5127 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5136);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5127);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5125);
    $$107 = $$70;
    $$107134 = $$7097;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i2145 = $eh$lpad$body$i2142$index185Z2D;
   $$01$i2144 = $eh$lpad$body$i2142$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5125);
   ___resumeException($$01$i2144 | 0);
   break;
  }
 case 2014:
  {
   ___assert_fail(39600, 37648, 1800, 39616);
   break;
  }
 case 2016:
  {
   $5195 = ___cxa_allocate_exception(24) | 0;
   $5196 = $5087 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(59, $151 | 0, HEAP32[$200 >> 2] | 0);
   $5197 = __THREW__;
   __THREW__ = 0;
   do if ($5197 & 1) {
    $5209 = ___cxa_find_matching_catch() | 0;
    $$731003042 = tempRet0;
    $$733043 = $5209;
   } else {
    __THREW__ = 0;
    $5199 = invoke_iiii(29, $151 | 0, 0, 39632) | 0;
    $5200 = __THREW__;
    __THREW__ = 0;
    if ($5200 & 1) {
     $5211 = ___cxa_find_matching_catch() | 0;
     $5212 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($151);
     $$731003042 = $5212;
     $$733043 = $5211;
     break;
    };
    HEAP32[$150 + 0 >> 2] = HEAP32[$5199 + 0 >> 2];
    HEAP32[$150 + 4 >> 2] = HEAP32[$5199 + 4 >> 2];
    HEAP32[$150 + 8 >> 2] = HEAP32[$5199 + 8 >> 2];
    HEAP32[$5199 + 0 >> 2] = 0;
    HEAP32[$5199 + 4 >> 2] = 0;
    HEAP32[$5199 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5202 = invoke_iii(29, $150 | 0, 38552) | 0;
    $5203 = __THREW__;
    __THREW__ = 0;
    if ($5203 & 1) {
     $5213 = ___cxa_find_matching_catch() | 0;
     $$1209 = 1;
     $$71 = $5213;
     $$7198 = tempRet0;
    } else {
     HEAP32[$149 + 0 >> 2] = HEAP32[$5202 + 0 >> 2];
     HEAP32[$149 + 4 >> 2] = HEAP32[$5202 + 4 >> 2];
     HEAP32[$149 + 8 >> 2] = HEAP32[$5202 + 8 >> 2];
     HEAP32[$5202 + 0 >> 2] = 0;
     HEAP32[$5202 + 4 >> 2] = 0;
     HEAP32[$5202 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5195 | 0, $194 | 0, $5196 | 0, $149 | 0);
     $5205 = __THREW__;
     __THREW__ = 0;
     if ($5205 & 1) $$0208 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5195 | 0, 37312, 185);
      $5207 = __THREW__;
      __THREW__ = 0;
      if ($5207 & 1) $$0208 = 0; else {}
     }
     $5215 = ___cxa_find_matching_catch() | 0;
     $5216 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($149);
     $$1209 = $$0208;
     $$71 = $5215;
     $$7198 = $5216;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($150);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($151);
    if ($$1209) {
     $$731003042 = $$7198;
     $$733043 = $$71;
    } else {
     $$107 = $$71;
     $$107134 = $$7198;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5195 | 0);
   $$107 = $$733043;
   $$107134 = $$731003042;
   ___resumeException($$107 | 0);
   break;
  }
 case 2031:
  {
   $5229 = ___cxa_find_matching_catch() | 0;
   __ZdlPv($5225);
   ___resumeException($5229 | 0);
   break;
  }
 case 2034:
  {
   ___assert_fail(39600, 37648, 1814, 39616);
   break;
  }
 case 2036:
  {
   $5238 = ___cxa_allocate_exception(24) | 0;
   $5239 = $5087 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(59, $154 | 0, HEAP32[$200 >> 2] | 0);
   $5240 = __THREW__;
   __THREW__ = 0;
   do if ($5240 & 1) {
    $5252 = ___cxa_find_matching_catch() | 0;
    $$761033046 = tempRet0;
    $$763047 = $5252;
   } else {
    __THREW__ = 0;
    $5242 = invoke_iiii(29, $154 | 0, 0, 39672) | 0;
    $5243 = __THREW__;
    __THREW__ = 0;
    if ($5243 & 1) {
     $5254 = ___cxa_find_matching_catch() | 0;
     $5255 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($154);
     $$761033046 = $5255;
     $$763047 = $5254;
     break;
    };
    HEAP32[$153 + 0 >> 2] = HEAP32[$5242 + 0 >> 2];
    HEAP32[$153 + 4 >> 2] = HEAP32[$5242 + 4 >> 2];
    HEAP32[$153 + 8 >> 2] = HEAP32[$5242 + 8 >> 2];
    HEAP32[$5242 + 0 >> 2] = 0;
    HEAP32[$5242 + 4 >> 2] = 0;
    HEAP32[$5242 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5245 = invoke_iii(29, $153 | 0, 38552) | 0;
    $5246 = __THREW__;
    __THREW__ = 0;
    if ($5246 & 1) {
     $5256 = ___cxa_find_matching_catch() | 0;
     $$1193 = 1;
     $$74 = $5256;
     $$74101 = tempRet0;
    } else {
     HEAP32[$152 + 0 >> 2] = HEAP32[$5245 + 0 >> 2];
     HEAP32[$152 + 4 >> 2] = HEAP32[$5245 + 4 >> 2];
     HEAP32[$152 + 8 >> 2] = HEAP32[$5245 + 8 >> 2];
     HEAP32[$5245 + 0 >> 2] = 0;
     HEAP32[$5245 + 4 >> 2] = 0;
     HEAP32[$5245 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5238 | 0, $194 | 0, $5239 | 0, $152 | 0);
     $5248 = __THREW__;
     __THREW__ = 0;
     if ($5248 & 1) $$0192 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5238 | 0, 37312, 185);
      $5250 = __THREW__;
      __THREW__ = 0;
      if ($5250 & 1) $$0192 = 0; else {}
     }
     $5258 = ___cxa_find_matching_catch() | 0;
     $5259 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($152);
     $$1193 = $$0192;
     $$74 = $5258;
     $$74101 = $5259;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($153);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($154);
    if ($$1193) {
     $$761033046 = $$74101;
     $$763047 = $$74;
    } else {
     $$107 = $$74;
     $$107134 = $$74101;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5238 | 0);
   $$107 = $$763047;
   $$107134 = $$761033046;
   ___resumeException($$107 | 0);
   break;
  }
 case 2051:
  {
   $5273 = $ss125 + 64 | 0;
   $5274 = $ss125 + 8 | 0;
   HEAP32[$5274 >> 2] = 792;
   $5275 = $ss125 + 12 | 0;
   HEAP32[$ss125 >> 2] = 940;
   HEAP32[$5273 >> 2] = 960;
   HEAP32[$ss125 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss125 + 64 | 0, $5275 | 0);
   $5278 = __THREW__;
   __THREW__ = 0;
   if ($5278 & 1) {
    $5290 = ___cxa_find_matching_catch() | 0;
    $$0$i2180 = tempRet0;
    $$01$i2179 = $5290;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5273);
    ___resumeException($$01$i2179 | 0);
   }
   HEAP32[$ss125 + 136 >> 2] = 0;
   HEAP32[$ss125 + 140 >> 2] = -1;
   HEAP32[$ss125 >> 2] = 772;
   HEAP32[$5273 >> 2] = 812;
   HEAP32[$5274 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $5275 | 0);
   $5282 = __THREW__;
   __THREW__ = 0;
   do if ($5282 & 1) {
    $5292 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i2177$index190Z2D = tempRet0;
    $eh$lpad$body$i2177$indexZ2D = $5292;
   } else {
    HEAP32[$5275 >> 2] = 1104;
    $5284 = $ss125 + 44 | 0;
    HEAP32[$5284 + 0 >> 2] = 0;
    HEAP32[$5284 + 4 >> 2] = 0;
    HEAP32[$5284 + 8 >> 2] = 0;
    HEAP32[$5284 + 12 >> 2] = 0;
    HEAP32[$ss125 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $5275 | 0, $0 | 0);
    $5286 = __THREW__;
    __THREW__ = 0;
    if ($5286 & 1) {
     $5288 = ___cxa_find_matching_catch() | 0;
     $5289 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5284);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5275);
     $eh$lpad$body$i2177$index190Z2D = $5289;
     $eh$lpad$body$i2177$indexZ2D = $5288;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __THREW__ = 0;
    $5295 = invoke_iiii(25, $ss125 + 8 | 0, 39712, 21) | 0;
    $5296 = __THREW__;
    __THREW__ = 0;
    do if ($5296 & 1) label = 2067; else {
     __THREW__ = 0;
     $5298 = invoke_iii(25, $5295 | 0, $5269 | 0) | 0;
     $5299 = __THREW__;
     __THREW__ = 0;
     if ($5299 & 1) label = 2067; else {
      __THREW__ = 0;
      $5301 = invoke_iiii(25, $5298 | 0, 39576, 16) | 0;
      $5302 = __THREW__;
      __THREW__ = 0;
      if ($5302 & 1) label = 2067; else {
       __THREW__ = 0;
       $5304 = invoke_iii(25, $5301 | 0, $5272 | 0) | 0;
       $5305 = __THREW__;
       __THREW__ = 0;
       if ($5305 & 1) label = 2067; else {
        __THREW__ = 0;
        invoke_iiii(25, $5304 | 0, 38096, 1) | 0;
        $5307 = __THREW__;
        __THREW__ = 0;
        if ($5307 & 1) label = 2067; else {
         $5309 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $155 | 0, $5275 | 0);
         $5310 = __THREW__;
         __THREW__ = 0;
         if ($5310 & 1) {
          $5319 = ___cxa_find_matching_catch() | 0;
          $$771043050 = tempRet0;
          $$773051 = $5319;
         } else {
          __THREW__ = 0;
          invoke_viiii(17, $5309 | 0, $194 | 0, $5087 + 4 | 0, $155 | 0);
          $5313 = __THREW__;
          __THREW__ = 0;
          if ($5313 & 1) $$0182 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $5309 | 0, 37312, 185);
           $5315 = __THREW__;
           __THREW__ = 0;
           if ($5315 & 1) $$0182 = 0; else {}
          }
          $5321 = ___cxa_find_matching_catch() | 0;
          $5322 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($155);
          if ($$0182) {
           $$771043050 = $5322;
           $$773051 = $5321;
          } else {
           $$78 = $5321;
           $$78105 = $5322;
           break;
          }
         }
         ___cxa_free_exception($5309 | 0);
         $$78 = $$773051;
         $$78105 = $$771043050;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 2067) {
     $5317 = ___cxa_find_matching_catch() | 0;
     $$78 = $5317;
     $$78105 = tempRet0;
    }
    HEAP32[$ss125 >> 2] = 772;
    HEAP32[$ss125 + 64 >> 2] = 812;
    HEAP32[$5274 >> 2] = 792;
    HEAP32[$5275 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5284);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5275);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5273);
    $$107 = $$78;
    $$107134 = $$78105;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i2180 = $eh$lpad$body$i2177$index190Z2D;
   $$01$i2179 = $eh$lpad$body$i2177$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5273);
   ___resumeException($$01$i2179 | 0);
   break;
  }
 case 2077:
  {
   $5333 = ___cxa_find_matching_catch() | 0;
   $5334 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($157);
   $$107 = $5333;
   $$107134 = $5334;
   ___resumeException($$107 | 0);
   break;
  }
 case 2078:
  {
   $5335 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 39736, 44) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $5335 + (HEAP32[(HEAP32[$5335 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $5340 = invoke_iii(22, $0 | 0, 45800) | 0;
   $5341 = __THREW__;
   __THREW__ = 0;
   if ($5341 & 1) {
    $5349 = ___cxa_find_matching_catch() | 0;
    $5350 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5349 | 0);
   }
   __THREW__ = 0;
   $5346 = invoke_iii(HEAP32[(HEAP32[$5340 >> 2] | 0) + 28 >> 2] | 0, $5340 | 0, 10) | 0;
   $5347 = __THREW__;
   __THREW__ = 0;
   if ($5347 & 1) {
    $5349 = ___cxa_find_matching_catch() | 0;
    $5350 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5349 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($5335, $5346) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($5335) | 0;
    _abort();
   }
   break;
  }
 case 2083:
  {
   $5354 = ___cxa_allocate_exception(24) | 0;
   $5355 = $5352 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(59, $160 | 0, HEAP32[$200 >> 2] | 0);
   $5356 = __THREW__;
   __THREW__ = 0;
   do if ($5356 & 1) {
    $5368 = ___cxa_find_matching_catch() | 0;
    $$811083053 = tempRet0;
    $$813054 = $5368;
   } else {
    __THREW__ = 0;
    $5358 = invoke_iiii(29, $160 | 0, 0, 39784) | 0;
    $5359 = __THREW__;
    __THREW__ = 0;
    if ($5359 & 1) {
     $5370 = ___cxa_find_matching_catch() | 0;
     $5371 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($160);
     $$811083053 = $5371;
     $$813054 = $5370;
     break;
    };
    HEAP32[$159 + 0 >> 2] = HEAP32[$5358 + 0 >> 2];
    HEAP32[$159 + 4 >> 2] = HEAP32[$5358 + 4 >> 2];
    HEAP32[$159 + 8 >> 2] = HEAP32[$5358 + 8 >> 2];
    HEAP32[$5358 + 0 >> 2] = 0;
    HEAP32[$5358 + 4 >> 2] = 0;
    HEAP32[$5358 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5361 = invoke_iii(29, $159 | 0, 38552) | 0;
    $5362 = __THREW__;
    __THREW__ = 0;
    if ($5362 & 1) {
     $5372 = ___cxa_find_matching_catch() | 0;
     $$1177 = 1;
     $$79 = $5372;
     $$79106 = tempRet0;
    } else {
     HEAP32[$158 + 0 >> 2] = HEAP32[$5361 + 0 >> 2];
     HEAP32[$158 + 4 >> 2] = HEAP32[$5361 + 4 >> 2];
     HEAP32[$158 + 8 >> 2] = HEAP32[$5361 + 8 >> 2];
     HEAP32[$5361 + 0 >> 2] = 0;
     HEAP32[$5361 + 4 >> 2] = 0;
     HEAP32[$5361 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5354 | 0, $194 | 0, $5355 | 0, $158 | 0);
     $5364 = __THREW__;
     __THREW__ = 0;
     if ($5364 & 1) $$0176 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5354 | 0, 37312, 185);
      $5366 = __THREW__;
      __THREW__ = 0;
      if ($5366 & 1) $$0176 = 0; else {}
     }
     $5374 = ___cxa_find_matching_catch() | 0;
     $5375 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($158);
     $$1177 = $$0176;
     $$79 = $5374;
     $$79106 = $5375;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($159);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($160);
    if ($$1177) {
     $$811083053 = $$79106;
     $$813054 = $$79;
    } else {
     $$107 = $$79;
     $$107134 = $$79106;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5354 | 0);
   $$107 = $$813054;
   $$107134 = $$811083053;
   ___resumeException($$107 | 0);
   break;
  }
 case 2097:
  {
   $5382 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $161 | 0, 39840, 28);
   $5383 = __THREW__;
   __THREW__ = 0;
   if ($5383 & 1) {
    $5390 = ___cxa_find_matching_catch() | 0;
    $$821093057 = tempRet0;
    $$823058 = $5390;
   } else {
    __THREW__ = 0;
    invoke_viiii(17, $5382 | 0, $194 | 0, $5380 + 4 | 0, $161 | 0);
    $5386 = __THREW__;
    __THREW__ = 0;
    if ($5386 & 1) $$0170 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $5382 | 0, 37312, 185);
     $5388 = __THREW__;
     __THREW__ = 0;
     if ($5388 & 1) $$0170 = 0; else {}
    }
    $5392 = ___cxa_find_matching_catch() | 0;
    $5393 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($161);
    if ($$0170) {
     $$821093057 = $5393;
     $$823058 = $5392;
    } else {
     $$107 = $5392;
     $$107134 = $5393;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($5382 | 0);
   $$107 = $$823058;
   $$107134 = $$821093057;
   ___resumeException($$107 | 0);
   break;
  }
 case 2107:
  {
   $5406 = ___cxa_find_matching_catch() | 0;
   __ZdlPv($5402);
   ___resumeException($5406 | 0);
   break;
  }
 case 2115:
  {
   $5421 = ___cxa_allocate_exception(24) | 0;
   $5422 = $5380 + 4 | 0;
   HEAP32[$163 + 0 >> 2] = 0;
   HEAP32[$163 + 4 >> 2] = 0;
   HEAP32[$163 + 8 >> 2] = 0;
   $5423 = HEAP8[$5395 >> 0] | 0;
   if (!($5423 & 1)) $5431 = ($5423 & 255) >>> 1; else $5431 = HEAP32[$5394 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(14, $163 | 0, 39872, 23, $5431 + 23 | 0);
   $5432 = __THREW__;
   __THREW__ = 0;
   do if ($5432 & 1) label = 2126; else {
    if (!(HEAP8[$5395 >> 0] & 1)) $5440 = $5395 + 1 | 0; else $5440 = HEAP32[$5394 + 16 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(31, $163 | 0, $5440 | 0, $5431 | 0) | 0;
    $5441 = __THREW__;
    __THREW__ = 0;
    if ($5441 & 1) label = 2126; else {
     __THREW__ = 0;
     $5443 = invoke_iii(29, $163 | 0, 38280) | 0;
     $5444 = __THREW__;
     __THREW__ = 0;
     if ($5444 & 1) {
      $5452 = ___cxa_find_matching_catch() | 0;
      $5453 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($163);
      $$841113060 = $5453;
      $$843061 = $5452;
      break;
     };
     HEAP32[$162 + 0 >> 2] = HEAP32[$5443 + 0 >> 2];
     HEAP32[$162 + 4 >> 2] = HEAP32[$5443 + 4 >> 2];
     HEAP32[$162 + 8 >> 2] = HEAP32[$5443 + 8 >> 2];
     HEAP32[$5443 + 0 >> 2] = 0;
     HEAP32[$5443 + 4 >> 2] = 0;
     HEAP32[$5443 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5421 | 0, $194 | 0, $5422 | 0, $162 | 0);
     $5446 = __THREW__;
     __THREW__ = 0;
     if ($5446 & 1) $$0163 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5421 | 0, 37312, 185);
      $5448 = __THREW__;
      __THREW__ = 0;
      if ($5448 & 1) $$0163 = 0; else {}
     }
     $5454 = ___cxa_find_matching_catch() | 0;
     $5455 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($162);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($163);
     if ($$0163) {
      $$841113060 = $5455;
      $$843061 = $5454;
     } else {
      $$107 = $5454;
      $$107134 = $5455;
      ___resumeException($$107 | 0);
     }
    }
   } while (0);
   if ((label | 0) == 2126) {
    $5450 = ___cxa_find_matching_catch() | 0;
    $5451 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($163);
    $$841113060 = $5451;
    $$843061 = $5450;
   }
   ___cxa_free_exception($5421 | 0);
   $$107 = $$843061;
   $$107134 = $$841113060;
   ___resumeException($$107 | 0);
   break;
  }
 case 2161:
  {
   $5526 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env129, HEAP32[$341 >> 2] | 0);
   ___resumeException($5526 | 0);
   break;
  }
 case 2226:
  {
   $5652 = ___cxa_find_matching_catch() | 0;
   $5653 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($165, HEAP32[$344 >> 2] | 0);
   $$86 = $5652;
   $$86113 = $5653;
   label = 2230;
   break;
  }
 case 2227:
  {
   $5655 = ___cxa_find_matching_catch() | 0;
   $5656 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($166, HEAP32[$347 >> 2] | 0);
   $$85 = $5655;
   $$85112 = $5656;
   label = 2229;
   break;
  }
 case 2228:
  {
   $5658 = ___cxa_find_matching_catch() | 0;
   $5659 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($166, HEAP32[$347 >> 2] | 0);
   $$85 = $5658;
   $$85112 = $5659;
   label = 2229;
   break;
  }
 case 2232:
  {
   $5667 = ___cxa_allocate_exception(24) | 0;
   $5668 = $5664 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(59, $168 | 0, HEAP32[$200 >> 2] | 0);
   $5669 = __THREW__;
   __THREW__ = 0;
   do if ($5669 & 1) {
    $5678 = ___cxa_find_matching_catch() | 0;
    $$881153064 = tempRet0;
    $$883065 = $5678;
   } else {
    __THREW__ = 0;
    $5671 = invoke_iiii(29, $168 | 0, 0, 39896) | 0;
    $5672 = __THREW__;
    __THREW__ = 0;
    if ($5672 & 1) {
     $5680 = ___cxa_find_matching_catch() | 0;
     $5681 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($168);
     $$881153064 = $5681;
     $$883065 = $5680;
     break;
    };
    HEAP32[$167 + 0 >> 2] = HEAP32[$5671 + 0 >> 2];
    HEAP32[$167 + 4 >> 2] = HEAP32[$5671 + 4 >> 2];
    HEAP32[$167 + 8 >> 2] = HEAP32[$5671 + 8 >> 2];
    HEAP32[$5671 + 0 >> 2] = 0;
    HEAP32[$5671 + 4 >> 2] = 0;
    HEAP32[$5671 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(17, $5667 | 0, $194 | 0, $5668 | 0, $167 | 0);
    $5674 = __THREW__;
    __THREW__ = 0;
    if ($5674 & 1) $$0150 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $5667 | 0, 37312, 185);
     $5676 = __THREW__;
     __THREW__ = 0;
     if ($5676 & 1) $$0150 = 0; else {}
    }
    $5682 = ___cxa_find_matching_catch() | 0;
    $5683 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($167);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($168);
    if ($$0150) {
     $$881153064 = $5683;
     $$883065 = $5682;
    } else {
     $$107 = $5682;
     $$107134 = $5683;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5667 | 0);
   $$107 = $$883065;
   $$107134 = $$881153064;
   ___resumeException($$107 | 0);
   break;
  }
 case 2243:
  {
   $5695 = ___cxa_find_matching_catch() | 0;
   $5696 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($171, HEAP32[$353 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($170, HEAP32[$350 >> 2] | 0);
   $$107 = $5695;
   $$107134 = $5696;
   ___resumeException($$107 | 0);
   break;
  }
 case 2246:
  {
   $5713 = $ss134 + 64 | 0;
   $5714 = $ss134 + 8 | 0;
   HEAP32[$5714 >> 2] = 792;
   $5715 = $ss134 + 12 | 0;
   HEAP32[$ss134 >> 2] = 940;
   HEAP32[$5713 >> 2] = 960;
   HEAP32[$ss134 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss134 + 64 | 0, $5715 | 0);
   $5718 = __THREW__;
   __THREW__ = 0;
   if ($5718 & 1) {
    $5730 = ___cxa_find_matching_catch() | 0;
    $$0$i2323 = tempRet0;
    $$01$i2322 = $5730;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5713);
    ___resumeException($$01$i2322 | 0);
   }
   HEAP32[$ss134 + 136 >> 2] = 0;
   HEAP32[$ss134 + 140 >> 2] = -1;
   HEAP32[$ss134 >> 2] = 772;
   HEAP32[$5713 >> 2] = 812;
   HEAP32[$5714 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $5715 | 0);
   $5722 = __THREW__;
   __THREW__ = 0;
   do if ($5722 & 1) {
    $5732 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i2320$index195Z2D = tempRet0;
    $eh$lpad$body$i2320$indexZ2D = $5732;
   } else {
    HEAP32[$5715 >> 2] = 1104;
    $5724 = $ss134 + 44 | 0;
    HEAP32[$5724 + 0 >> 2] = 0;
    HEAP32[$5724 + 4 >> 2] = 0;
    HEAP32[$5724 + 8 >> 2] = 0;
    HEAP32[$5724 + 12 >> 2] = 0;
    HEAP32[$ss134 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $5715 | 0, $0 | 0);
    $5726 = __THREW__;
    __THREW__ = 0;
    if ($5726 & 1) {
     $5728 = ___cxa_find_matching_catch() | 0;
     $5729 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5724);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5715);
     $eh$lpad$body$i2320$index195Z2D = $5729;
     $eh$lpad$body$i2320$indexZ2D = $5728;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __THREW__ = 0;
    $5735 = invoke_iiii(25, $ss134 + 8 | 0, 39936, 27) | 0;
    $5736 = __THREW__;
    __THREW__ = 0;
    do if ($5736 & 1) label = 2263; else {
     __THREW__ = 0;
     invoke_vii(59, $172 | 0, HEAP32[$200 >> 2] | 0);
     $5738 = __THREW__;
     __THREW__ = 0;
     if ($5738 & 1) label = 2263; else {
      $5740 = HEAP8[$172 >> 0] | 0;
      if (!($5740 & 1)) {
       $5750 = $172 + 1 | 0;
       $5751 = ($5740 & 255) >>> 1;
      } else {
       $5750 = HEAP32[$172 + 8 >> 2] | 0;
       $5751 = HEAP32[$172 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $5735 | 0, $5750 | 0, $5751 | 0) | 0;
      $5752 = __THREW__;
      __THREW__ = 0;
      if ($5752 & 1) {
       $5764 = ___cxa_find_matching_catch() | 0;
       $5765 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($172);
       $$90 = $5764;
       $$90117 = $5765;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($172);
      $5754 = ___cxa_allocate_exception(24) | 0;
      __THREW__ = 0;
      invoke_vii(43, $173 | 0, $5715 | 0);
      $5755 = __THREW__;
      __THREW__ = 0;
      if ($5755 & 1) {
       $5766 = ___cxa_find_matching_catch() | 0;
       $$891163068 = tempRet0;
       $$893069 = $5766;
      } else {
       __THREW__ = 0;
       invoke_viiii(17, $5754 | 0, $194 | 0, $5708 + 4 | 0, $173 | 0);
       $5758 = __THREW__;
       __THREW__ = 0;
       if ($5758 & 1) $$0143 = 1; else {
        __THREW__ = 0;
        invoke_viii(4, $5754 | 0, 37312, 185);
        $5760 = __THREW__;
        __THREW__ = 0;
        if ($5760 & 1) $$0143 = 0; else {}
       }
       $5768 = ___cxa_find_matching_catch() | 0;
       $5769 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($173);
       if ($$0143) {
        $$891163068 = $5769;
        $$893069 = $5768;
       } else {
        $$90 = $5768;
        $$90117 = $5769;
        break;
       }
      }
      ___cxa_free_exception($5754 | 0);
      $$90 = $$893069;
      $$90117 = $$891163068;
     }
    } while (0);
    if ((label | 0) == 2263) {
     $5762 = ___cxa_find_matching_catch() | 0;
     $$90 = $5762;
     $$90117 = tempRet0;
    }
    HEAP32[$ss134 >> 2] = 772;
    HEAP32[$ss134 + 64 >> 2] = 812;
    HEAP32[$5714 >> 2] = 792;
    HEAP32[$5715 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5724);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5715);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5713);
    $$107 = $$90;
    $$107134 = $$90117;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i2323 = $eh$lpad$body$i2320$index195Z2D;
   $$01$i2322 = $eh$lpad$body$i2320$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5713);
   ___resumeException($$01$i2322 | 0);
   break;
  }
 case 2273:
  {
   $5783 = ___cxa_find_matching_catch() | 0;
   __ZdlPv($5779);
   ___resumeException($5783 | 0);
   break;
  }
 case 2281:
  {
   $5798 = ___cxa_allocate_exception(24) | 0;
   $5799 = $5708 + 4 | 0;
   HEAP32[$175 + 0 >> 2] = 0;
   HEAP32[$175 + 4 >> 2] = 0;
   HEAP32[$175 + 8 >> 2] = 0;
   $5800 = HEAP8[$5772 >> 0] | 0;
   if (!($5800 & 1)) $5808 = ($5800 & 255) >>> 1; else $5808 = HEAP32[$5771 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(14, $175 | 0, 39872, 23, $5808 + 23 | 0);
   $5809 = __THREW__;
   __THREW__ = 0;
   do if ($5809 & 1) label = 2292; else {
    if (!(HEAP8[$5772 >> 0] & 1)) $5817 = $5772 + 1 | 0; else $5817 = HEAP32[$5771 + 16 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(31, $175 | 0, $5817 | 0, $5808 | 0) | 0;
    $5818 = __THREW__;
    __THREW__ = 0;
    if ($5818 & 1) label = 2292; else {
     __THREW__ = 0;
     $5820 = invoke_iii(29, $175 | 0, 38280) | 0;
     $5821 = __THREW__;
     __THREW__ = 0;
     if ($5821 & 1) {
      $5829 = ___cxa_find_matching_catch() | 0;
      $5830 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($175);
      $$921193071 = $5830;
      $$923072 = $5829;
      break;
     };
     HEAP32[$174 + 0 >> 2] = HEAP32[$5820 + 0 >> 2];
     HEAP32[$174 + 4 >> 2] = HEAP32[$5820 + 4 >> 2];
     HEAP32[$174 + 8 >> 2] = HEAP32[$5820 + 8 >> 2];
     HEAP32[$5820 + 0 >> 2] = 0;
     HEAP32[$5820 + 4 >> 2] = 0;
     HEAP32[$5820 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $5798 | 0, $194 | 0, $5799 | 0, $174 | 0);
     $5823 = __THREW__;
     __THREW__ = 0;
     if ($5823 & 1) $$0137 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5798 | 0, 37312, 185);
      $5825 = __THREW__;
      __THREW__ = 0;
      if ($5825 & 1) $$0137 = 0; else {}
     }
     $5831 = ___cxa_find_matching_catch() | 0;
     $5832 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($174);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($175);
     if ($$0137) {
      $$921193071 = $5832;
      $$923072 = $5831;
     } else {
      $$107 = $5831;
      $$107134 = $5832;
      ___resumeException($$107 | 0);
     }
    }
   } while (0);
   if ((label | 0) == 2292) {
    $5827 = ___cxa_find_matching_catch() | 0;
    $5828 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($175);
    $$921193071 = $5828;
    $$923072 = $5827;
   }
   ___cxa_free_exception($5798 | 0);
   $$107 = $$923072;
   $$107134 = $$921193071;
   ___resumeException($$107 | 0);
   break;
  }
 case 2325:
  {
   $5899 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env137, HEAP32[$356 >> 2] | 0);
   ___resumeException($5899 | 0);
   break;
  }
 case 2390:
  {
   $6039 = ___cxa_find_matching_catch() | 0;
   $6040 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($177, HEAP32[$359 >> 2] | 0);
   $$94 = $6039;
   $$94121 = $6040;
   label = 2394;
   break;
  }
 case 2391:
  {
   $6042 = ___cxa_find_matching_catch() | 0;
   $6043 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($178, HEAP32[$362 >> 2] | 0);
   $$93 = $6042;
   $$93120 = $6043;
   label = 2393;
   break;
  }
 case 2392:
  {
   $6045 = ___cxa_find_matching_catch() | 0;
   $6046 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($178, HEAP32[$362 >> 2] | 0);
   $$93 = $6045;
   $$93120 = $6046;
   label = 2393;
   break;
  }
 case 2399:
  {
   $6067 = ___cxa_find_matching_catch() | 0;
   $6068 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($372);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($367);
   $eh$lpad$body$i2451$index200Z2D = $6068;
   $eh$lpad$body$i2451$indexZ2D = $6067;
   label = 2402;
   break;
  }
 case 2400:
  {
   $6069 = ___cxa_find_matching_catch() | 0;
   $$0$i2454 = tempRet0;
   $$01$i2453 = $6069;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($365);
   ___resumeException($$01$i2453 | 0);
   break;
  }
 case 2401:
  {
   $6071 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i2451$index200Z2D = tempRet0;
   $eh$lpad$body$i2451$indexZ2D = $6071;
   label = 2402;
   break;
  }
 case 2409:
  {
   $6092 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body2478$index206Z2D = tempRet0;
   $eh$lpad$body2478$indexZ2D = $6092;
   label = 2410;
   break;
  }
 case 2413:
  {
   $6101 = ___cxa_find_matching_catch() | 0;
   $6102 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
   $eh$lpad$body2478$index206Z2D = $6102;
   $eh$lpad$body2478$indexZ2D = $6101;
   label = 2410;
   break;
  }
 case 2419:
  {
   $6114 = ___cxa_find_matching_catch() | 0;
   $6115 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($179);
   $$95 = $6114;
   $$95122 = $6115;
   label = 2438;
   break;
  }
 case 2427:
  {
   $6142 = ___cxa_find_matching_catch() | 0;
   $6143 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
   $eh$lpad$body2478$index206Z2D = $6143;
   $eh$lpad$body2478$indexZ2D = $6142;
   label = 2410;
   break;
  }
 case 2433:
  {
   $6155 = ___cxa_find_matching_catch() | 0;
   $6156 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($180);
   $$95 = $6155;
   $$95122 = $6156;
   label = 2438;
   break;
  }
 case 2437:
  {
   $6161 = ___cxa_find_matching_catch() | 0;
   $6162 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($182);
   $$95 = $6161;
   $$95122 = $6162;
   label = 2438;
   break;
  }
 case 2442:
  {
   $6171 = ___cxa_allocate_exception(24) | 0;
   $6172 = $6164 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $185 | 0, HEAP32[$6166 >> 2] | 0);
   $6174 = __THREW__;
   __THREW__ = 0;
   do if ($6174 & 1) {
    $6186 = ___cxa_find_matching_catch() | 0;
    $$981253075 = tempRet0;
    $$983076 = $6186;
   } else {
    __THREW__ = 0;
    $6176 = invoke_iiii(29, $185 | 0, 0, 39968) | 0;
    $6177 = __THREW__;
    __THREW__ = 0;
    if ($6177 & 1) {
     $6188 = ___cxa_find_matching_catch() | 0;
     $6189 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($185);
     $$981253075 = $6189;
     $$983076 = $6188;
     break;
    };
    HEAP32[$184 + 0 >> 2] = HEAP32[$6176 + 0 >> 2];
    HEAP32[$184 + 4 >> 2] = HEAP32[$6176 + 4 >> 2];
    HEAP32[$184 + 8 >> 2] = HEAP32[$6176 + 8 >> 2];
    HEAP32[$6176 + 0 >> 2] = 0;
    HEAP32[$6176 + 4 >> 2] = 0;
    HEAP32[$6176 + 8 >> 2] = 0;
    __THREW__ = 0;
    $6179 = invoke_iii(29, $184 | 0, 38704) | 0;
    $6180 = __THREW__;
    __THREW__ = 0;
    if ($6180 & 1) {
     $6190 = ___cxa_find_matching_catch() | 0;
     $$17 = 1;
     $$96 = $6190;
     $$96123 = tempRet0;
    } else {
     HEAP32[$183 + 0 >> 2] = HEAP32[$6179 + 0 >> 2];
     HEAP32[$183 + 4 >> 2] = HEAP32[$6179 + 4 >> 2];
     HEAP32[$183 + 8 >> 2] = HEAP32[$6179 + 8 >> 2];
     HEAP32[$6179 + 0 >> 2] = 0;
     HEAP32[$6179 + 4 >> 2] = 0;
     HEAP32[$6179 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $6171 | 0, $194 | 0, $6172 | 0, $183 | 0);
     $6182 = __THREW__;
     __THREW__ = 0;
     if ($6182 & 1) $$06 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $6171 | 0, 37312, 185);
      $6184 = __THREW__;
      __THREW__ = 0;
      if ($6184 & 1) $$06 = 0; else {}
     }
     $6192 = ___cxa_find_matching_catch() | 0;
     $6193 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($183);
     $$17 = $$06;
     $$96 = $6192;
     $$96123 = $6193;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($184);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($185);
    if ($$17) {
     $$981253075 = $$96123;
     $$983076 = $$96;
    } else {
     $$107 = $$96;
     $$107134 = $$96123;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($6171 | 0);
   $$107 = $$983076;
   $$107134 = $$981253075;
   ___resumeException($$107 | 0);
   break;
  }
 case 2456:
  {
   $6202 = ___cxa_allocate_exception(24) | 0;
   $6203 = $6164 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $188 | 0, HEAP32[$6194 >> 2] | 0);
   $6205 = __THREW__;
   __THREW__ = 0;
   do if ($6205 & 1) {
    $6217 = ___cxa_find_matching_catch() | 0;
    $$1011283079 = tempRet0;
    $$1013080 = $6217;
   } else {
    __THREW__ = 0;
    $6207 = invoke_iiii(29, $188 | 0, 0, 39968) | 0;
    $6208 = __THREW__;
    __THREW__ = 0;
    if ($6208 & 1) {
     $6219 = ___cxa_find_matching_catch() | 0;
     $6220 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($188);
     $$1011283079 = $6220;
     $$1013080 = $6219;
     break;
    };
    HEAP32[$187 + 0 >> 2] = HEAP32[$6207 + 0 >> 2];
    HEAP32[$187 + 4 >> 2] = HEAP32[$6207 + 4 >> 2];
    HEAP32[$187 + 8 >> 2] = HEAP32[$6207 + 8 >> 2];
    HEAP32[$6207 + 0 >> 2] = 0;
    HEAP32[$6207 + 4 >> 2] = 0;
    HEAP32[$6207 + 8 >> 2] = 0;
    __THREW__ = 0;
    $6210 = invoke_iii(29, $187 | 0, 38760) | 0;
    $6211 = __THREW__;
    __THREW__ = 0;
    if ($6211 & 1) {
     $6221 = ___cxa_find_matching_catch() | 0;
     $$13 = 1;
     $$99 = $6221;
     $$99126 = tempRet0;
    } else {
     HEAP32[$186 + 0 >> 2] = HEAP32[$6210 + 0 >> 2];
     HEAP32[$186 + 4 >> 2] = HEAP32[$6210 + 4 >> 2];
     HEAP32[$186 + 8 >> 2] = HEAP32[$6210 + 8 >> 2];
     HEAP32[$6210 + 0 >> 2] = 0;
     HEAP32[$6210 + 4 >> 2] = 0;
     HEAP32[$6210 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(17, $6202 | 0, $194 | 0, $6203 | 0, $186 | 0);
     $6213 = __THREW__;
     __THREW__ = 0;
     if ($6213 & 1) $$02 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $6202 | 0, 37312, 185);
      $6215 = __THREW__;
      __THREW__ = 0;
      if ($6215 & 1) $$02 = 0; else {}
     }
     $6223 = ___cxa_find_matching_catch() | 0;
     $6224 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($186);
     $$13 = $$02;
     $$99 = $6223;
     $$99126 = $6224;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($187);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($188);
    if ($$13) {
     $$1011283079 = $$99126;
     $$1013080 = $$99;
    } else {
     $$107 = $$99;
     $$107134 = $$99126;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($6202 | 0);
   $$107 = $$1013080;
   $$107134 = $$1011283079;
   ___resumeException($$107 | 0);
   break;
  }
 case 2467:
  {
   $6225 = ___cxa_allocate_exception(24) | 0;
   $6226 = $6164 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $192 | 0, HEAP32[$6164 + 48 >> 2] | 0);
   $6229 = __THREW__;
   __THREW__ = 0;
   do if ($6229 & 1) {
    $6258 = ___cxa_find_matching_catch() | 0;
    $$1061333083 = tempRet0;
    $$1063084 = $6258;
   } else {
    __THREW__ = 0;
    $6231 = invoke_iiii(29, $192 | 0, 0, 39968) | 0;
    $6232 = __THREW__;
    __THREW__ = 0;
    if ($6232 & 1) {
     $6260 = ___cxa_find_matching_catch() | 0;
     $6261 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($192);
     $$1061333083 = $6261;
     $$1063084 = $6260;
     break;
    };
    HEAP32[$191 + 0 >> 2] = HEAP32[$6231 + 0 >> 2];
    HEAP32[$191 + 4 >> 2] = HEAP32[$6231 + 4 >> 2];
    HEAP32[$191 + 8 >> 2] = HEAP32[$6231 + 8 >> 2];
    HEAP32[$6231 + 0 >> 2] = 0;
    HEAP32[$6231 + 4 >> 2] = 0;
    HEAP32[$6231 + 8 >> 2] = 0;
    __THREW__ = 0;
    $6234 = invoke_iii(29, $191 | 0, 39984) | 0;
    $6235 = __THREW__;
    __THREW__ = 0;
    if ($6235 & 1) {
     $6262 = ___cxa_find_matching_catch() | 0;
     $$104 = $6262;
     $$104131 = tempRet0;
     $$3 = 1;
    } else {
     HEAP32[$190 + 0 >> 2] = HEAP32[$6234 + 0 >> 2];
     HEAP32[$190 + 4 >> 2] = HEAP32[$6234 + 4 >> 2];
     HEAP32[$190 + 8 >> 2] = HEAP32[$6234 + 8 >> 2];
     HEAP32[$6234 + 0 >> 2] = 0;
     HEAP32[$6234 + 4 >> 2] = 0;
     HEAP32[$6234 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(59, $193 | 0, HEAP32[$200 >> 2] | 0);
     $6237 = __THREW__;
     __THREW__ = 0;
     if ($6237 & 1) {
      $6264 = ___cxa_find_matching_catch() | 0;
      $$103 = $6264;
      $$103130 = tempRet0;
      $$2 = 1;
     } else {
      $6239 = HEAP8[$193 >> 0] | 0;
      if (!($6239 & 1)) {
       $6249 = $193 + 1 | 0;
       $6250 = ($6239 & 255) >>> 1;
      } else {
       $6249 = HEAP32[$193 + 8 >> 2] | 0;
       $6250 = HEAP32[$193 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $6251 = invoke_iiii(31, $190 | 0, $6249 | 0, $6250 | 0) | 0;
      $6252 = __THREW__;
      __THREW__ = 0;
      if ($6252 & 1) {
       $6266 = ___cxa_find_matching_catch() | 0;
       $$1 = 1;
       $$102 = $6266;
       $$102129 = tempRet0;
      } else {
       HEAP32[$189 + 0 >> 2] = HEAP32[$6251 + 0 >> 2];
       HEAP32[$189 + 4 >> 2] = HEAP32[$6251 + 4 >> 2];
       HEAP32[$189 + 8 >> 2] = HEAP32[$6251 + 8 >> 2];
       HEAP32[$6251 + 0 >> 2] = 0;
       HEAP32[$6251 + 4 >> 2] = 0;
       HEAP32[$6251 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_viiii(17, $6225 | 0, $194 | 0, $6226 | 0, $189 | 0);
       $6254 = __THREW__;
       __THREW__ = 0;
       if ($6254 & 1) $$0 = 1; else {
        __THREW__ = 0;
        invoke_viii(4, $6225 | 0, 37312, 185);
        $6256 = __THREW__;
        __THREW__ = 0;
        if ($6256 & 1) $$0 = 0; else {}
       }
       $6268 = ___cxa_find_matching_catch() | 0;
       $6269 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($189);
       $$1 = $$0;
       $$102 = $6268;
       $$102129 = $6269;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($193);
      $$103 = $$102;
      $$103130 = $$102129;
      $$2 = $$1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($190);
     $$104 = $$103;
     $$104131 = $$103130;
     $$3 = $$2;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($191);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($192);
    if ($$3) {
     $$1061333083 = $$104131;
     $$1063084 = $$104;
    } else {
     $$107 = $$104;
     $$107134 = $$104131;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($6225 | 0);
   $$107 = $$1063084;
   $$107134 = $$1061333083;
   ___resumeException($$107 | 0);
   break;
  }
 case 2487:
  {
   $6272 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 40016, 36) | 0, HEAP32[$1798 >> 2] | 0) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $6272 + (HEAP32[(HEAP32[$6272 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $6277 = invoke_iii(22, $0 | 0, 45800) | 0;
   $6278 = __THREW__;
   __THREW__ = 0;
   if ($6278 & 1) {
    $6286 = ___cxa_find_matching_catch() | 0;
    $6287 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($6286 | 0);
   }
   __THREW__ = 0;
   $6283 = invoke_iii(HEAP32[(HEAP32[$6277 >> 2] | 0) + 28 >> 2] | 0, $6277 | 0, 10) | 0;
   $6284 = __THREW__;
   __THREW__ = 0;
   if ($6284 & 1) {
    $6286 = ___cxa_find_matching_catch() | 0;
    $6287 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($6286 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($6272, $6283) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($6272) | 0;
    _abort();
   }
   break;
  }
 case 2493:
  {
   STACKTOP = sp;
   return;
  }
 }
 switch (label | 0) {
 case 157:
  {
   $787 = HEAP32[$2 >> 2] | 0;
   if (!$787) {
    $$0$i$i = $eh$lpad$body6$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body6$i$i$indexZ2D;
    label = 161;
   } else {
    $789 = HEAP32[$214 >> 2] | 0;
    if (($789 | 0) != ($787 | 0)) HEAP32[$214 >> 2] = $789 + (~(($789 + -4 - $787 | 0) >>> 2) << 2);
    __ZdlPv($787);
    $$0$i$i = $eh$lpad$body6$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body6$i$i$indexZ2D;
    label = 161;
   }
   break;
  }
 case 337:
  {
   $1214 = HEAP32[$25 >> 2] | 0;
   if (!$1214) {
    $$0$i$i536 = $eh$lpad$body6$i$i528$index14Z2D;
    $$01$i$i535 = $eh$lpad$body6$i$i528$indexZ2D;
    label = 341;
   } else {
    $1216 = HEAP32[$235 >> 2] | 0;
    if (($1216 | 0) != ($1214 | 0)) HEAP32[$235 >> 2] = $1216 + (~(($1216 + -4 - $1214 | 0) >>> 2) << 2);
    __ZdlPv($1214);
    $$0$i$i536 = $eh$lpad$body6$i$i528$index14Z2D;
    $$01$i$i535 = $eh$lpad$body6$i$i528$indexZ2D;
    label = 341;
   }
   break;
  }
 case 686:
  {
   $$7 = $eh$lpad$body812$indexZ2D;
   $$734 = $eh$lpad$body812$index36Z2D;
   label = 732;
   break;
  }
 case 724:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, HEAP32[$266 >> 2] | 0);
   $$7 = $lpad$phi3336$index;
   $$734 = $lpad$phi3336$index41;
   label = 732;
   break;
  }
 case 815:
  {
   $2456 = HEAP32[$elements45 >> 2] | 0;
   if (!$2456) {
    $$107 = $lpad$phi3300$index;
    $$107134 = $lpad$phi3300$index47;
    ___resumeException($$107 | 0);
   }
   $2458 = HEAP32[$272 >> 2] | 0;
   if (($2458 | 0) != ($2456 | 0)) HEAP32[$272 >> 2] = $2458 + (~(($2458 + -4 - $2456 | 0) >>> 2) << 2);
   __ZdlPv($2456);
   $$107 = $lpad$phi3300$index;
   $$107134 = $lpad$phi3300$index47;
   ___resumeException($$107 | 0);
   break;
  }
 case 1082:
  {
   $$59 = $eh$lpad$body1093$indexZ2D;
   $$5986 = $eh$lpad$body1093$index97Z2D;
   label = 1934;
   break;
  }
 case 1132:
  {
   $$45 = $eh$lpad$body1124$indexZ2D;
   $$4572 = $eh$lpad$body1124$index158Z2D;
   label = 1230;
   break;
  }
 case 1632:
  {
   $$50 = $lpad$phi3261$index;
   $$5077 = $lpad$phi3261$index165;
   label = 1667;
   break;
  }
 case 2229:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($165, HEAP32[$344 >> 2] | 0);
   $$86 = $$85;
   $$86113 = $$85112;
   label = 2230;
   break;
  }
 case 2393:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($177, HEAP32[$359 >> 2] | 0);
   $$94 = $$93;
   $$94121 = $$93120;
   label = 2394;
   break;
  }
 case 2402:
  {
   $$0$i2454 = $eh$lpad$body$i2451$index200Z2D;
   $$01$i2453 = $eh$lpad$body$i2451$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($365);
   ___resumeException($$01$i2453 | 0);
   break;
  }
 case 2410:
  {
   $$95 = $eh$lpad$body2478$indexZ2D;
   $$95122 = $eh$lpad$body2478$index206Z2D;
   label = 2438;
   break;
  }
 }
 if ((label | 0) == 161) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$211 >> 2] | 0);
  $eh$lpad$body11$i$index8Z2D = $$0$i$i;
  $eh$lpad$body11$i$indexZ2D = $$01$i$i;
  label = 168;
 } else if ((label | 0) == 341) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($24, HEAP32[$232 >> 2] | 0);
  $eh$lpad$body16$i$index20Z2D = $$0$i$i536;
  $eh$lpad$body16$i$indexZ2D = $$01$i$i535;
  label = 348;
 } else if ((label | 0) == 732) {
  $2261 = HEAP32[$args >> 2] | 0;
  if (!$2261) {
   $$107 = $$7;
   $$107134 = $$734;
   ___resumeException($$107 | 0);
  }
  $2263 = HEAP32[$264 >> 2] | 0;
  if (($2263 | 0) != ($2261 | 0)) HEAP32[$264 >> 2] = $2263 + (~(($2263 + -4 - $2261 | 0) >>> 2) << 2);
  __ZdlPv($2261);
  $$107 = $$7;
  $$107134 = $$734;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 1230) {
  $3555 = HEAP32[$elements75 >> 2] | 0;
  if (!$3555) {
   $$59 = $$45;
   $$5986 = $$4572;
   label = 1934;
  } else {
   $3557 = HEAP32[$278 >> 2] | 0;
   if (($3557 | 0) != ($3555 | 0)) HEAP32[$278 >> 2] = $3557 + (~(($3557 + -4 - $3555 | 0) >>> 2) << 2);
   __ZdlPv($3555);
   $$59 = $$45;
   $$5986 = $$4572;
   label = 1934;
  }
 } else if ((label | 0) == 1667) {
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($fields90, HEAP32[$315 >> 2] | 0);
  $$59 = $$50;
  $$5986 = $$5077;
  label = 1934;
 } else if ((label | 0) == 2230) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env129, HEAP32[$341 >> 2] | 0);
  $$107 = $$86;
  $$107134 = $$86113;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 2394) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env137, HEAP32[$356 >> 2] | 0);
  $$107 = $$94;
  $$107134 = $$94121;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 2438) {
  HEAP32[$ss141 >> 2] = 772;
  HEAP32[$375 >> 2] = 812;
  HEAP32[$366 >> 2] = 792;
  HEAP32[$367 >> 2] = 1104;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($372);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($367);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($365);
  $$107 = $$95;
  $$107134 = $$95122;
  ___resumeException($$107 | 0);
 }
 if ((label | 0) == 168) {
  $806 = HEAP32[$4 >> 2] | 0;
  if (!$806) {
   $$0$i = $eh$lpad$body11$i$index8Z2D;
   $$01$i = $eh$lpad$body11$i$indexZ2D;
   $814 = HEAP32[$206 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $814);
   ___resumeException($$01$i | 0);
  }
  $808 = HEAP32[$209 >> 2] | 0;
  if (($808 | 0) != ($806 | 0)) HEAP32[$209 >> 2] = $808 + (~(($808 + -4 - $806 | 0) >>> 2) << 2);
  __ZdlPv($806);
  $$0$i = $eh$lpad$body11$i$index8Z2D;
  $$01$i = $eh$lpad$body11$i$indexZ2D;
  $814 = HEAP32[$206 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $814);
  ___resumeException($$01$i | 0);
 } else if ((label | 0) == 348) {
  $1233 = HEAP32[$27 >> 2] | 0;
  if (!$1233) {
   $$0$i544 = $eh$lpad$body16$i$index20Z2D;
   $$01$i543 = $eh$lpad$body16$i$indexZ2D;
   label = 352;
  } else {
   $1235 = HEAP32[$230 >> 2] | 0;
   if (($1235 | 0) != ($1233 | 0)) HEAP32[$230 >> 2] = $1235 + (~(($1235 + -4 - $1233 | 0) >>> 2) << 2);
   __ZdlPv($1233);
   $$0$i544 = $eh$lpad$body16$i$index20Z2D;
   $$01$i543 = $eh$lpad$body16$i$indexZ2D;
   label = 352;
  }
 } else if ((label | 0) == 1934) {
  $4982 = HEAP32[$args68 >> 2] | 0;
  if (!$4982) {
   $$107 = $$59;
   $$107134 = $$5986;
   ___resumeException($$107 | 0);
  }
  $4984 = HEAP32[$274 >> 2] | 0;
  if (($4984 | 0) != ($4982 | 0)) HEAP32[$274 >> 2] = $4984 + (~(($4984 + -16 - $4982 | 0) >>> 4) << 4);
  __ZdlPv($4982);
  $$107 = $$59;
  $$107134 = $$5986;
  ___resumeException($$107 | 0);
 }
 if ((label | 0) == 352) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($26, HEAP32[$227 >> 2] | 0);
  $eh$lpad$body$index26Z2D = $$0$i544;
  $eh$lpad$body$indexZ2D = $$01$i543;
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env, HEAP32[$224 >> 2] | 0);
 $$107 = $eh$lpad$body$indexZ2D;
 $$107134 = $eh$lpad$body$index26Z2D;
 ___resumeException($$107 | 0);
}

function __ZN12_GLOBAL__N_16Parser13parseTerminalEj($this, $obj_level) {
 $this = $this | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i292 = 0, $$0$i352 = 0, $$0$i467 = 0, $$0$i485 = 0, $$0$i94 = 0, $$01$i = 0, $$01$i$i107 = 0, $$01$i$i155 = 0, $$01$i$i199 = 0, $$01$i$i248 = 0, $$01$i$i367 = 0, $$01$i351 = 0, $$014546 = 0, $$03 = 0, $$043 = 0, $$045 = 0, $$05 = 0, $$07547 = 0, $$1024553 = 0, $$10554 = 0, $$11 = 0, $$1125 = 0, $$115549 = 0, $$12 = 0, $$1210 = 0, $$1226 = 0, $$13 = 0, $$1327 = 0, $$1411 = 0, $$1428 = 0, $$15 = 0, $$1529 = 0, $$1612558 = 0, $$1630557 = 0, $$17 = 0, $$1731 = 0, $$1813 = 0, $$1832 = 0, $$18550 = 0, $$19 = 0, $$1933 = 0, $$2 = 0, $$20 = 0, $$2034 = 0, $$21 = 0, $$2135 = 0, $$216 = 0, $$22 = 0, $$2236 = 0, $$23 = 0, $$2337 = 0, $$24 = 0, $$2438 = 0, $$25 = 0, $$2539 = 0, $$2640561 = 0, $$26562 = 0, $$27 = 0, $$2741 = 0, $$28 = 0, $$2842 = 0, $$29 = 0, $$3 = 0, $$317 = 0, $$4 = 0, $$418 = 0, $$5 = 0, $$519 = 0, $$6 = 0, $$620 = 0, $$7 = 0, $$721 = 0, $$8 = 0, $$822 = 0, $$9 = 0, $$923 = 0, $$pn = 0, $$pre$phi580Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1002 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1008 = 0, $1011 = 0, $1013 = 0, $1014 = 0, $1016 = 0, $1018 = 0, $102 = 0, $1020 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1026 = 0, $1028 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1033 = 0, $1034 = 0, $1036 = 0, $104 = 0, $1041 = 0, $1042 = 0, $1046 = 0, $105 = 0, $1051 = 0, $1052 = 0, $1057 = 0, $1062 = 0, $1063 = 0, $1067 = 0, $1068 = 0, $107 = 0, $1073 = 0, $1074 = 0, $1077 = 0, $1079 = 0, $1080 = 0, $1083 = 0, $1084 = 0, $1086 = 0, $109 = 0, $1090 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1097 = 0, $11 = 0, $1103 = 0, $1104 = 0, $1106 = 0, $1108 = 0, $111 = 0, $1114 = 0, $1116 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1126 = 0, $113 = 0, $1132 = 0, $1134 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1143 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1152 = 0, $1153 = 0, $1158 = 0, $1159 = 0, $1164 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1180 = 0, $1181 = 0.0, $1182 = 0, $1183 = 0, $1186 = 0, $1188 = 0, $119 = 0, $1194 = 0, $1195 = 0, $12 = 0, $120 = 0, $1201 = 0, $1203 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1215 = 0, $1220 = 0, $1221 = 0, $1226 = 0, $1231 = 0, $1232 = 0, $1236 = 0, $1238 = 0, $1239 = 0, $1241 = 0, $1243 = 0, $1244 = 0, $1246 = 0, $1247 = 0, $1250 = 0, $1251 = 0, $1256 = 0, $1257 = 0, $126 = 0, $1262 = 0, $1267 = 0, $1268 = 0, $1272 = 0, $1273 = 0, $1276 = 0, $1278 = 0, $128 = 0, $1284 = 0, $1285 = 0, $1291 = 0, $1293 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1304 = 0, $1305 = 0, $1310 = 0, $1311 = 0, $1316 = 0, $132 = 0, $1321 = 0, $1322 = 0, $1326 = 0, $1327 = 0, $1330 = 0, $1332 = 0, $1338 = 0, $1339 = 0, $1345 = 0, $1347 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1354 = 0, $1355 = 0, $1358 = 0, $1359 = 0, $1364 = 0, $1365 = 0, $137 = 0, $1370 = 0, $1375 = 0, $1376 = 0, $1380 = 0, $1381 = 0, $1384 = 0, $1386 = 0, $139 = 0, $1391 = 0, $1392 = 0, $1398 = 0, $14 = 0, $140 = 0, $1400 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1406 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1413 = 0, $1414 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1425 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1435 = 0, $1436 = 0, $1438 = 0, $1439 = 0, $1441 = 0, $1442 = 0, $1444 = 0, $1446 = 0, $1447 = 0, $145 = 0, $1450 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1456 = 0, $1462 = 0, $1463 = 0, $1469 = 0, $147 = 0, $1471 = 0, $1473 = 0, $1476 = 0, $1478 = 0, $1480 = 0, $1483 = 0, $1486 = 0, $1487 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1496 = 0, $1497 = 0, $15 = 0, $1502 = 0, $1507 = 0, $1508 = 0, $1512 = 0, $1513 = 0, $1515 = 0, $1516 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1521 = 0, $1523 = 0, $1524 = 0, $1527 = 0, $1529 = 0, $1530 = 0, $1531 = 0, $1533 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1546 = 0, $1548 = 0, $1550 = 0, $1553 = 0, $1555 = 0, $1557 = 0, $156 = 0, $1561 = 0, $1562 = 0, $1564 = 0, $1566 = 0, $1568 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1574 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1583 = 0, $1584 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1595 = 0, $16 = 0, $1600 = 0, $1601 = 0, $1605 = 0, $1606 = 0, $1609 = 0, $161 = 0, $1613 = 0, $1614 = 0, $1616 = 0, $1618 = 0, $1619 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1627 = 0, $1629 = 0, $163 = 0, $1636 = 0, $1637 = 0, $164 = 0, $1643 = 0, $1645 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $1651 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1664 = 0, $1665 = 0, $1670 = 0, $1675 = 0, $1676 = 0, $1680 = 0, $1682 = 0, $1686 = 0, $1687 = 0, $1689 = 0, $169 = 0, $1691 = 0, $1692 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $17 = 0, $1700 = 0, $1702 = 0, $1709 = 0, $1710 = 0, $1716 = 0, $1718 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1725 = 0, $1726 = 0, $1729 = 0, $1730 = 0, $1735 = 0, $1736 = 0, $1741 = 0, $1746 = 0, $1747 = 0, $175 = 0, $1751 = 0, $1752 = 0, $1755 = 0, $1757 = 0, $176 = 0, $1762 = 0, $1763 = 0, $1769 = 0, $1771 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1778 = 0, $1779 = 0, $1782 = 0, $1783 = 0, $1788 = 0, $1789 = 0, $1794 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1804 = 0, $1805 = 0, $1808 = 0, $1810 = 0, $1815 = 0, $1816 = 0, $1822 = 0, $1824 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1830 = 0, $1831 = 0, $1834 = 0, $1835 = 0, $1837 = 0, $1838 = 0, $1844 = 0, $1846 = 0, $1847 = 0, $185 = 0, $1852 = 0, $1853 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1859 = 0, $186 = 0, $1861 = 0, $1864 = 0, $1865 = 0, $1868 = 0, $1870 = 0, $19 = 0, $191 = 0, $196 = 0, $197 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $213 = 0, $215 = 0, $217 = 0, $22 = 0, $220 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $236 = 0, $238 = 0, $24 = 0, $240 = 0, $241 = 0, $249 = 0, $25 = 0, $251 = 0, $255 = 0, $257 = 0, $259 = 0, $26 = 0, $262 = 0, $264 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $271 = 0, $273 = 0, $274 = 0, $276 = 0, $279 = 0, $28 = 0, $284 = 0, $286 = 0, $287 = 0, $288 = 0, $29 = 0, $290 = 0, $294 = 0, $295 = 0, $297 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $314 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $322 = 0, $326 = 0, $327 = 0, $329 = 0, $33 = 0, $331 = 0, $332 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $34 = 0, $340 = 0, $342 = 0, $349 = 0, $35 = 0, $350 = 0, $356 = 0, $358 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $364 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $371 = 0, $372 = 0, $373 = 0, $376 = 0, $378 = 0, $379 = 0, $38 = 0, $383 = 0, $387 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $394 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $403 = 0, $405 = 0, $41 = 0, $411 = 0, $415 = 0, $416 = 0, $418 = 0, $42 = 0, $420 = 0, $422 = 0, $425 = 0, $427 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $434 = 0, $436 = 0, $437 = 0, $439 = 0, $44 = 0, $442 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $451 = 0, $452 = 0, $453 = 0, $455 = 0, $456 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $463 = 0, $465 = 0, $47 = 0, $472 = 0, $473 = 0, $479 = 0, $48 = 0, $481 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $488 = 0, $489 = 0, $49 = 0, $493 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $504 = 0, $509 = 0, $51 = 0, $510 = 0, $514 = 0, $515 = 0, $516 = 0, $519 = 0, $52 = 0, $520 = 0, $523 = 0, $525 = 0, $526 = 0, $53 = 0, $530 = 0, $534 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $541 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $551 = 0, $553 = 0, $559 = 0, $56 = 0, $561 = 0, $563 = 0, $565 = 0, $567 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $573 = 0, $579 = 0, $58 = 0, $581 = 0, $582 = 0, $583 = 0, $585 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $591 = 0, $597 = 0, $598 = 0, $6 = 0, $60 = 0, $600 = 0, $602 = 0, $604 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $612 = 0, $613 = 0, $616 = 0, $618 = 0, $619 = 0, $62 = 0, $623 = 0, $627 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $634 = 0, $64 = 0, $640 = 0, $641 = 0, $643 = 0, $645 = 0, $65 = 0, $651 = 0, $652 = 0, $654 = 0, $655 = 0, $656 = 0, $658 = 0, $659 = 0, $661 = 0, $662 = 0, $663 = 0, $666 = 0, $668 = 0, $67 = 0, $675 = 0, $676 = 0, $682 = 0, $684 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $691 = 0, $692 = 0, $696 = 0, $7 = 0, $70 = 0, $701 = 0, $702 = 0, $707 = 0, $712 = 0, $713 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $722 = 0, $723 = 0, $726 = 0, $728 = 0, $729 = 0, $733 = 0, $737 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $744 = 0, $750 = 0, $751 = 0, $752 = 0, $754 = 0, $756 = 0, $76 = 0, $764 = 0, $766 = 0, $767 = 0, $768 = 0, $77 = 0, $770 = 0, $776 = 0, $777 = 0, $778 = 0, $780 = 0, $782 = 0, $783 = 0, $784 = 0, $786 = 0, $79 = 0, $794 = 0, $795 = 0, $796 = 0, $799 = 0, $8 = 0, $803 = 0, $805 = 0, $807 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $813 = 0, $816 = 0, $817 = 0, $819 = 0, $82 = 0, $821 = 0, $822 = 0, $824 = 0, $826 = 0, $828 = 0, $830 = 0, $831 = 0, $832 = 0, $834 = 0, $836 = 0, $838 = 0, $839 = 0, $84 = 0, $843 = 0, $844 = 0, $845 = 0, $847 = 0, $848 = 0, $849 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $867 = 0, $87 = 0, $871 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $881 = 0, $889 = 0, $893 = 0, $895 = 0, $898 = 0, $9 = 0, $902 = 0, $904 = 0, $905 = 0, $906 = 0, $908 = 0, $910 = 0, $911 = 0, $913 = 0, $916 = 0, $921 = 0, $924 = 0, $928 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $938 = 0, $94 = 0, $946 = 0, $950 = 0, $952 = 0, $954 = 0, $956 = 0, $958 = 0, $96 = 0, $960 = 0, $963 = 0, $965 = 0, $967 = 0, $968 = 0, $969 = 0, $970 = 0, $972 = 0, $974 = 0, $975 = 0, $977 = 0, $98 = 0, $980 = 0, $986 = 0, $987 = 0, $989 = 0, $990 = 0, $991 = 0, $994 = 0, $998 = 0, $eh$lpad$body$i$index62Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i349$index82Z2D = 0, $eh$lpad$body$i349$indexZ2D = 0, $eh$lpad$body128$index28Z2D = 0, $eh$lpad$body128$indexZ2D = 0, $eh$lpad$body139$index47Z2D = 0, $eh$lpad$body139$indexZ2D = 0, $eh$lpad$body151$index41Z2D = 0, $eh$lpad$body151$indexZ2D = 0, $eh$lpad$body227$index57Z2D = 0, $eh$lpad$body227$indexZ2D = 0, $eh$lpad$body243$index52Z2D = 0, $eh$lpad$body243$indexZ2D = 0, $eh$lpad$body316$index72Z2D = 0, $eh$lpad$body316$indexZ2D = 0, $eh$lpad$body410$index87Z2D = 0, $eh$lpad$body410$indexZ2D = 0, $eh$lpad$body420$index92Z2D = 0, $eh$lpad$body420$indexZ2D = 0, $eh$lpad$body428$index97Z2D = 0, $eh$lpad$body428$indexZ2D = 0, $eh$lpad$body437$index102Z2D = 0, $eh$lpad$body437$indexZ2D = 0, $eh$lpad$body445$index112Z2D = 0, $eh$lpad$body445$indexZ2D = 0, $eh$lpad$body453$index122Z2D = 0, $eh$lpad$body453$indexZ2D = 0, $eh$lpad$body471$index128Z2D = 0, $eh$lpad$body471$indexZ2D = 0, $eh$lpad$body489$index135Z2D = 0, $eh$lpad$body489$indexZ2D = 0, $eh$lpad$body505$index141Z2D = 0, $eh$lpad$body505$indexZ2D = 0, $eh$lpad$body513$index146Z2D = 0, $eh$lpad$body513$indexZ2D = 0, $eh$lpad$body521$index107Z2D = 0, $eh$lpad$body521$indexZ2D = 0, $eh$lpad$body53$index3Z2D = 0, $eh$lpad$body53$indexZ2D = 0, $eh$lpad$body530$index117Z2D = 0, $eh$lpad$body530$indexZ2D = 0, $eh$lpad$body60$index10Z2D = 0, $eh$lpad$body60$indexZ2D = 0, $eh$lpad$body79$index16Z2D = 0, $eh$lpad$body79$indexZ2D = 0, $eh$lpad$body84$index22Z2D = 0, $eh$lpad$body84$indexZ2D = 0, $eh$lpad$body98$index34Z2D = 0, $eh$lpad$body98$indexZ2D = 0, $elements = 0, $file = 0, $file3 = 0, $first = 0, $got_comma$0$off0 = 0, $id_token = 0, $it$i = 0, $it$i464 = 0, $it$i482 = 0, $it$i91 = 0, $l = 0, $last = 0, $maybe_if = 0, $next = 0, $obj = 0, $ss = 0, $ss2 = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i125 = 0, $this$idx$val$idx$val$i325 = 0, $this$idx$val$idx$val$i341 = 0, $this$idx$val$idx$val$i57 = 0, $this$idx$val$idx$val$i76 = 0, $this$idx47$val$idx$val = 0, $this$idx48$val$idx$val = 0, $this$idx49$val$idx$val = 0, $tok = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2e3 | 0;
 $0 = sp + 1992 | 0;
 $1 = sp + 1988 | 0;
 $2 = sp + 1984 | 0;
 $3 = sp + 1980 | 0;
 $it$i482 = sp + 1976 | 0;
 $4 = sp + 1972 | 0;
 $it$i464 = sp + 1968 | 0;
 $5 = sp + 1964 | 0;
 $6 = sp + 1960 | 0;
 $7 = sp + 1956 | 0;
 $8 = sp + 1952 | 0;
 $9 = sp + 1948 | 0;
 $10 = sp + 1944 | 0;
 $11 = sp + 1932 | 0;
 $12 = sp + 1920 | 0;
 $13 = sp + 1916 | 0;
 $14 = sp + 1912 | 0;
 $15 = sp + 1908 | 0;
 $it$i91 = sp + 1904 | 0;
 $it$i = sp + 1900 | 0;
 $tok = sp + 1856 | 0;
 $16 = sp + 1844 | 0;
 $17 = sp + 1832 | 0;
 $obj = sp + 1828 | 0;
 $18 = sp + 1784 | 0;
 $next = sp + 1740 | 0;
 $19 = sp + 1696 | 0;
 $20 = sp + 1668 | 0;
 $21 = sp + 1656 | 0;
 $first = sp + 1652 | 0;
 $22 = sp + 1608 | 0;
 $l = sp + 1580 | 0;
 $23 = sp + 1536 | 0;
 $id_token = sp + 1492 | 0;
 $24 = sp + 1464 | 0;
 $25 = sp + 1452 | 0;
 $26 = sp + 1424 | 0;
 $27 = sp + 1412 | 0;
 $28 = sp + 1368 | 0;
 $maybe_if = sp + 1324 | 0;
 $29 = sp + 1296 | 0;
 $30 = sp + 1268 | 0;
 $31 = sp + 1240 | 0;
 $32 = sp + 1228 | 0;
 $last = sp + 1184 | 0;
 $33 = sp + 1156 | 0;
 $34 = sp + 1144 | 0;
 $35 = sp + 1116 | 0;
 $36 = sp + 1088 | 0;
 $37 = sp + 1060 | 0;
 $38 = sp + 1048 | 0;
 $ss = sp + 904 | 0;
 $39 = sp + 892 | 0;
 $elements = sp + 880 | 0;
 $40 = sp + 836 | 0;
 $41 = sp + 792 | 0;
 $42 = sp + 748 | 0;
 $43 = sp + 704 | 0;
 $ss2 = sp + 560 | 0;
 $44 = sp + 544 | 0;
 $45 = sp + 540 | 0;
 $46 = sp + 512 | 0;
 $47 = sp + 500 | 0;
 $48 = sp + 456 | 0;
 $49 = sp + 428 | 0;
 $50 = sp + 400 | 0;
 $51 = sp + 388 | 0;
 $52 = sp + 360 | 0;
 $53 = sp + 332 | 0;
 $54 = sp + 304 | 0;
 $file = sp + 260 | 0;
 $55 = sp + 232 | 0;
 $56 = sp + 220 | 0;
 $file3 = sp + 176 | 0;
 $57 = sp + 148 | 0;
 $58 = sp + 136 | 0;
 $59 = sp + 124 | 0;
 $60 = sp + 96 | 0;
 $61 = sp + 84 | 0;
 $62 = sp + 56 | 0;
 $63 = sp + 28 | 0;
 $64 = sp;
 $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $65 = $this$idx$val$idx$val$i + 8 | 0;
 HEAP32[$tok >> 2] = HEAP32[$65 >> 2];
 $67 = $tok + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($67, $this$idx$val$idx$val$i + 12 | 0);
 HEAP32[$tok >> 2] = HEAP32[$65 >> 2];
 $70 = $tok + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $70 | 0, $this$idx$val$idx$val$i + 24 | 0);
 $72 = __THREW__;
 __THREW__ = 0;
 if ($72 & 1) {
  $74 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
  ___resumeException($74 | 0);
 }
 $76 = $tok + 28 | 0;
 $77 = $this$idx$val$idx$val$i + 36 | 0;
 HEAP32[$76 + 0 >> 2] = HEAP32[$77 + 0 >> 2];
 HEAP32[$76 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
 HEAP32[$76 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
 HEAP32[$76 + 12 >> 2] = HEAP32[$77 + 12 >> 2];
 HEAP32[$tok >> 2] = HEAP32[$65 >> 2];
 $79 = HEAP32[$this >> 2] | 0;
 $81 = HEAP32[$79 + 4 >> 2] | 0;
 $82 = $81 + 4 | 0;
 $84 = HEAP32[$81 >> 2] | 0;
 HEAP32[$84 + 4 >> 2] = HEAP32[$82 >> 2];
 HEAP32[HEAP32[$82 >> 2] >> 2] = $84;
 $87 = $79 + 8 | 0;
 HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + -1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($81 + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($81 + 12 | 0);
 __ZdlPv($81);
 L4 : do switch (HEAP32[$tok >> 2] | 0) {
 case 27:
 case 26:
 case 10:
 case 9:
 case 13:
 case 24:
 case 23:
 case 20:
 case 19:
 case 18:
 case 16:
 case 15:
 case 7:
 case 5:
 case 4:
 case 3:
 case 1:
  {
   $93 = ___cxa_allocate_exception(40) | 0;
   __THREW__ = 0;
   invoke_viii(3, $16 | 0, 36432, 16);
   $94 = __THREW__;
   __THREW__ = 0;
   if ($94 & 1) {
    $100 = ___cxa_find_matching_catch() | 0;
    $$014546 = tempRet0;
    $$07547 = $100;
   } else {
    __THREW__ = 0;
    invoke_viii(7, $93 | 0, $tok | 0, $16 | 0);
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) $$043 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $93 | 0, 48, 178);
     $98 = __THREW__;
     __THREW__ = 0;
     if ($98 & 1) $$043 = 0; else {}
    }
    $102 = ___cxa_find_matching_catch() | 0;
    $103 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
    if ($$043) {
     $$014546 = $103;
     $$07547 = $102;
    } else {
     $$28 = $102;
     $$2842 = $103;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     ___resumeException($$28 | 0);
    }
   }
   ___cxa_free_exception($93 | 0);
   $$28 = $$07547;
   $$2842 = $$014546;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
   ___resumeException($$28 | 0);
   break;
  }
 case 8:
  {
   __THREW__ = 0;
   $1140 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
   $1141 = __THREW__;
   __THREW__ = 0;
   if ($1141 & 1) label = 20; else {
    __THREW__ = 0;
    invoke_viiii(13, $48 | 0, $this | 0, 9, 0);
    $1143 = __THREW__;
    __THREW__ = 0;
    if ($1143 & 1) label = 20; else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($48 + 16 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($48 + 4 | 0);
     $$2 = $1140;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    }
   }
   break;
  }
 case 0:
  {
   __THREW__ = 0;
   invoke_viiiii(5, $18 | 0, $this | 0, $obj | 0, $tok | 0, $obj_level | 0);
   $121 = __THREW__;
   __THREW__ = 0;
   if ($121 & 1) label = 20; else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($18 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($18 + 4 | 0);
    $$2 = HEAP32[$obj >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    STACKTOP = sp;
    return $$2 | 0;
   }
   break;
  }
 case 31:
  {
   $104 = ___cxa_allocate_exception(40) | 0;
   __THREW__ = 0;
   invoke_viii(3, $17 | 0, 36456, 23);
   $105 = __THREW__;
   __THREW__ = 0;
   do if ($105 & 1) {
    $117 = ___cxa_find_matching_catch() | 0;
    $$115549 = tempRet0;
    $$18550 = $117;
   } else {
    __THREW__ = 0;
    invoke_vii(40, $104 | 0, $70 | 0);
    $107 = __THREW__;
    __THREW__ = 0;
    if ($107 & 1) $$045 = 1; else {
     $109 = $104 + 12 | 0;
     HEAP32[$109 + 0 >> 2] = HEAP32[$76 + 0 >> 2];
     HEAP32[$109 + 4 >> 2] = HEAP32[$76 + 4 >> 2];
     HEAP32[$109 + 8 >> 2] = HEAP32[$76 + 8 >> 2];
     HEAP32[$109 + 12 >> 2] = HEAP32[$76 + 12 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $104 + 28 | 0, $17 | 0);
     $111 = __THREW__;
     __THREW__ = 0;
     if ($111 & 1) {
      $113 = ___cxa_find_matching_catch() | 0;
      $114 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($104);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
      $$115549 = $114;
      $$18550 = $113;
      break;
     }
     __THREW__ = 0;
     invoke_viii(4, $104 | 0, 48, 178);
     $115 = __THREW__;
     __THREW__ = 0;
     if ($115 & 1) $$045 = 0; else {}
    }
    $119 = ___cxa_find_matching_catch() | 0;
    $120 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
    if ($$045) {
     $$115549 = $120;
     $$18550 = $119;
    } else {
     $$28 = $119;
     $$2842 = $120;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     ___resumeException($$28 | 0);
    }
   } while (0);
   ___cxa_free_exception($104 | 0);
   $$28 = $$18550;
   $$2842 = $$115549;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
   ___resumeException($$28 | 0);
   break;
  }
 case 14:
  {
   $1210 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $50 | 0, $70 | 0);
   $1211 = __THREW__;
   __THREW__ = 0;
   if ($1211 & 1) label = 20; else {
    $1215 = $76;
    $1220 = HEAP32[$1215 + 4 >> 2] | 0;
    $1221 = $50 + 12 | 0;
    HEAP32[$1221 >> 2] = HEAP32[$1215 >> 2];
    HEAP32[$1221 + 4 >> 2] = $1220;
    $1226 = $tok + 36 | 0;
    $1231 = HEAP32[$1226 + 4 >> 2] | 0;
    $1232 = $50 + 20 | 0;
    HEAP32[$1232 >> 2] = HEAP32[$1226 >> 2];
    HEAP32[$1232 + 4 >> 2] = $1231;
    __THREW__ = 0;
    invoke_vii(40, $51 | 0, $67 | 0);
    $1236 = __THREW__;
    __THREW__ = 0;
    do if ($1236 & 1) {
     $1241 = ___cxa_find_matching_catch() | 0;
     $$21 = $1241;
     $$2135 = tempRet0;
    } else {
     __THREW__ = 0;
     $1238 = invoke_iiii(27, $1210 | 0, $50 | 0, $51 | 0) | 0;
     $1239 = __THREW__;
     __THREW__ = 0;
     if ($1239 & 1) {
      $1243 = ___cxa_find_matching_catch() | 0;
      $1244 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($51);
      $$21 = $1243;
      $$2135 = $1244;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($51);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($50);
     $$2 = $1238;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($50);
    $$28 = $$21;
    $$2842 = $$2135;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 22:
  {
   __THREW__ = 0;
   invoke_viiii(13, $file3 | 0, $this | 0, 14, 0);
   $1483 = __THREW__;
   __THREW__ = 0;
   if ($1483 & 1) label = 20; else {
    $1486 = HEAP32[$this + 4 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $57 | 0, $70 | 0);
    $1487 = __THREW__;
    __THREW__ = 0;
    if ($1487 & 1) {
     $1553 = ___cxa_find_matching_catch() | 0;
     $$25 = $1553;
     $$2539 = tempRet0;
     $$pre$phi580Z2D = $file3 + 4 | 0;
    } else {
     $1490 = $57 + 12 | 0;
     $1491 = $76;
     $1496 = HEAP32[$1491 + 4 >> 2] | 0;
     $1497 = $1490;
     HEAP32[$1497 >> 2] = HEAP32[$1491 >> 2];
     HEAP32[$1497 + 4 >> 2] = $1496;
     $1502 = $file3 + 36 | 0;
     $1507 = HEAP32[$1502 + 4 >> 2] | 0;
     $1508 = $57 + 20 | 0;
     HEAP32[$1508 >> 2] = HEAP32[$1502 >> 2];
     HEAP32[$1508 + 4 >> 2] = $1507;
     $1512 = $file3 + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $58 | 0, $1512 | 0);
     $1513 = __THREW__;
     __THREW__ = 0;
     if ($1513 & 1) {
      $1555 = ___cxa_find_matching_catch() | 0;
      $$24 = $1555;
      $$2438 = tempRet0;
     } else {
      __THREW__ = 0;
      $1515 = invoke_ii(67, 60) | 0;
      $1516 = __THREW__;
      __THREW__ = 0;
      L54 : do if ($1516 & 1) label = 481; else {
       HEAP32[$1515 >> 2] = 34168;
       $1518 = $1515 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $1518 | 0, $57 | 0);
       $1519 = __THREW__;
       __THREW__ = 0;
       do if ($1519 & 1) {
        $1550 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body530$index117Z2D = tempRet0;
        $eh$lpad$body530$indexZ2D = $1550;
       } else {
        $1521 = $1515 + 16 | 0;
        HEAP32[$1521 + 0 >> 2] = HEAP32[$1490 + 0 >> 2];
        HEAP32[$1521 + 4 >> 2] = HEAP32[$1490 + 4 >> 2];
        HEAP32[$1521 + 8 >> 2] = HEAP32[$1490 + 8 >> 2];
        HEAP32[$1521 + 12 >> 2] = HEAP32[$1490 + 12 >> 2];
        HEAP32[$1515 + 32 >> 2] = 8;
        $1523 = $1515 + 36 | 0;
        HEAP32[$1523 >> 2] = 0;
        $1524 = $1515 + 40 | 0;
        HEAP32[$1524 >> 2] = 0;
        HEAP32[$1515 + 44 >> 2] = 0;
        HEAP32[$1515 >> 2] = 36680;
        __THREW__ = 0;
        invoke_vii(40, $1515 + 48 | 0, $58 | 0);
        $1527 = __THREW__;
        __THREW__ = 0;
        if ($1527 & 1) {
         $1529 = ___cxa_find_matching_catch() | 0;
         $1530 = tempRet0;
         HEAP32[$1515 >> 2] = 34168;
         $1531 = HEAP32[$1523 >> 2] | 0;
         if ($1531) {
          $1533 = HEAP32[$1524 >> 2] | 0;
          if (($1533 | 0) != ($1531 | 0)) HEAP32[$1524 >> 2] = $1533 + (~(($1533 + -4 - $1531 | 0) >>> 2) << 2);
          __ZdlPv($1531);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1518);
         $eh$lpad$body530$index117Z2D = $1530;
         $eh$lpad$body530$indexZ2D = $1529;
         break;
        }
        HEAP32[$5 >> 2] = $1515;
        $1539 = $1486 + 16 | 0;
        $1540 = HEAP32[$1539 >> 2] | 0;
        if ($1540 >>> 0 < (HEAP32[$1486 + 20 >> 2] | 0) >>> 0) {
         if (!$1540) $1546 = 0; else {
          HEAP32[$1540 >> 2] = $1515;
          $1546 = HEAP32[$1539 >> 2] | 0;
         }
         HEAP32[$1539 >> 2] = $1546 + 4;
        } else {
         __THREW__ = 0;
         invoke_vii(51, $1486 + 12 | 0, $5 | 0);
         $1548 = __THREW__;
         __THREW__ = 0;
         if ($1548 & 1) {
          label = 481;
          break L54;
         }
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($58);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($57);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($file3 + 16 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1512);
        $$2 = $1515;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
        STACKTOP = sp;
        return $$2 | 0;
       } while (0);
       __ZdlPv($1515);
       $eh$lpad$body453$index122Z2D = $eh$lpad$body530$index117Z2D;
       $eh$lpad$body453$indexZ2D = $eh$lpad$body530$indexZ2D;
      } while (0);
      if ((label | 0) == 481) {
       $1557 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body453$index122Z2D = tempRet0;
       $eh$lpad$body453$indexZ2D = $1557;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($58);
      $$24 = $eh$lpad$body453$indexZ2D;
      $$2438 = $eh$lpad$body453$index122Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($57);
     $$25 = $$24;
     $$2539 = $$2438;
     $$pre$phi580Z2D = $1512;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($file3 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($$pre$phi580Z2D);
    $$28 = $$25;
    $$2842 = $$2539;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 2:
  {
   $this$idx49$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $128 = $this$idx49$val$idx$val + 8 | 0;
   HEAP32[$next >> 2] = HEAP32[$128 >> 2];
   $130 = $next + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $130 | 0, $this$idx49$val$idx$val + 12 | 0);
   $132 = __THREW__;
   __THREW__ = 0;
   if ($132 & 1) label = 20; else {
    HEAP32[$next >> 2] = HEAP32[$128 >> 2];
    $135 = $next + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $135 | 0, $this$idx49$val$idx$val + 24 | 0);
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) {
     $139 = ___cxa_find_matching_catch() | 0;
     $140 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($130);
     $eh$lpad$body53$index3Z2D = $140;
     $eh$lpad$body53$indexZ2D = $139;
     break L4;
    }
    $141 = $next + 28 | 0;
    $142 = $this$idx49$val$idx$val + 36 | 0;
    HEAP32[$141 + 0 >> 2] = HEAP32[$142 + 0 >> 2];
    HEAP32[$141 + 4 >> 2] = HEAP32[$142 + 4 >> 2];
    HEAP32[$141 + 8 >> 2] = HEAP32[$142 + 8 >> 2];
    HEAP32[$141 + 12 >> 2] = HEAP32[$142 + 12 >> 2];
    $143 = HEAP32[$128 >> 2] | 0;
    HEAP32[$next >> 2] = $143;
    L90 : do if (($143 | 0) == 3) {
     $this$idx$val$idx$val$i57 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $145 = $this$idx$val$idx$val$i57 + 8 | 0;
     HEAP32[$19 >> 2] = HEAP32[$145 >> 2];
     $147 = $19 + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $147 | 0, $this$idx$val$idx$val$i57 + 12 | 0);
     $149 = __THREW__;
     __THREW__ = 0;
     if ($149 & 1) label = 32; else {
      HEAP32[$19 >> 2] = HEAP32[$145 >> 2];
      $152 = $19 + 16 | 0;
      __THREW__ = 0;
      invoke_vii(40, $152 | 0, $this$idx$val$idx$val$i57 + 24 | 0);
      $154 = __THREW__;
      __THREW__ = 0;
      if ($154 & 1) {
       $156 = ___cxa_find_matching_catch() | 0;
       $157 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($147);
       $eh$lpad$body60$index10Z2D = $157;
       $eh$lpad$body60$indexZ2D = $156;
       label = 33;
       break;
      }
      $158 = $19 + 28 | 0;
      $159 = $this$idx$val$idx$val$i57 + 36 | 0;
      HEAP32[$158 + 0 >> 2] = HEAP32[$159 + 0 >> 2];
      HEAP32[$158 + 4 >> 2] = HEAP32[$159 + 4 >> 2];
      HEAP32[$158 + 8 >> 2] = HEAP32[$159 + 8 >> 2];
      HEAP32[$158 + 12 >> 2] = HEAP32[$159 + 12 >> 2];
      HEAP32[$19 >> 2] = HEAP32[$145 >> 2];
      $161 = HEAP32[$this >> 2] | 0;
      $163 = HEAP32[$161 + 4 >> 2] | 0;
      $164 = $163 + 4 | 0;
      $166 = HEAP32[$163 >> 2] | 0;
      HEAP32[$166 + 4 >> 2] = HEAP32[$164 >> 2];
      HEAP32[HEAP32[$164 >> 2] >> 2] = $166;
      $169 = $161 + 8 | 0;
      HEAP32[$169 >> 2] = (HEAP32[$169 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($163 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($163 + 12 | 0);
      __ZdlPv($163);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($152);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($147);
      $175 = HEAP32[$this + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $20 | 0, $70 | 0);
      $176 = __THREW__;
      __THREW__ = 0;
      if ($176 & 1) label = 32; else {
       $180 = $76;
       $185 = HEAP32[$180 + 4 >> 2] | 0;
       $186 = $20 + 12 | 0;
       HEAP32[$186 >> 2] = HEAP32[$180 >> 2];
       HEAP32[$186 + 4 >> 2] = $185;
       $191 = $next + 36 | 0;
       $196 = HEAP32[$191 + 4 >> 2] | 0;
       $197 = $20 + 20 | 0;
       HEAP32[$197 >> 2] = HEAP32[$191 >> 2];
       HEAP32[$197 + 4 >> 2] = $196;
       HEAP32[$21 >> 2] = 0;
       HEAP32[$21 + 4 >> 2] = 0;
       HEAP32[$21 + 8 >> 2] = 0;
       __THREW__ = 0;
       $203 = invoke_iiii(32, $175 | 0, $20 | 0, $21 | 0) | 0;
       $204 = __THREW__;
       __THREW__ = 0;
       if ($204 & 1) {
        $208 = ___cxa_find_matching_catch() | 0;
        $209 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
        $$20 = $208;
        $$2034 = $209;
        break;
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
        $$12 = $203;
        label = 372;
        break;
       }
      }
     }
    } else {
     __THREW__ = 0;
     $210 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $211 = __THREW__;
     __THREW__ = 0;
     if ($211 & 1) label = 32; else {
      HEAP32[$first >> 2] = $210;
      $this$idx48$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $213 = $this$idx48$val$idx$val + 8 | 0;
      HEAP32[$22 >> 2] = HEAP32[$213 >> 2];
      $215 = $22 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $215 | 0, $this$idx48$val$idx$val + 12 | 0);
      $217 = __THREW__;
      __THREW__ = 0;
      if ($217 & 1) label = 32; else {
       HEAP32[$22 >> 2] = HEAP32[$213 >> 2];
       $220 = $22 + 16 | 0;
       __THREW__ = 0;
       invoke_vii(40, $220 | 0, $this$idx48$val$idx$val + 24 | 0);
       $222 = __THREW__;
       __THREW__ = 0;
       if ($222 & 1) {
        $224 = ___cxa_find_matching_catch() | 0;
        $225 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($215);
        $eh$lpad$body60$index10Z2D = $225;
        $eh$lpad$body60$indexZ2D = $224;
        label = 33;
        break;
       }
       $226 = $22 + 28 | 0;
       $227 = $this$idx48$val$idx$val + 36 | 0;
       HEAP32[$226 + 0 >> 2] = HEAP32[$227 + 0 >> 2];
       HEAP32[$226 + 4 >> 2] = HEAP32[$227 + 4 >> 2];
       HEAP32[$226 + 8 >> 2] = HEAP32[$227 + 8 >> 2];
       HEAP32[$226 + 12 >> 2] = HEAP32[$227 + 12 >> 2];
       $228 = HEAP32[$213 >> 2] | 0;
       HEAP32[$22 >> 2] = $228;
       HEAP32[$next >> 2] = $228;
       if (!(HEAP8[$130 >> 0] & 1)) {
        HEAP8[$130 + 1 >> 0] = 0;
        HEAP8[$130 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$next + 12 >> 2] >> 0] = 0;
        HEAP32[$next + 8 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $130 | 0, 0);
       $236 = __THREW__;
       __THREW__ = 0;
       if ($236 & 1) {
        $238 = ___cxa_find_matching_catch(0) | 0;
        ___clang_call_terminate($238);
       };
       HEAP32[$130 + 0 >> 2] = HEAP32[$215 + 0 >> 2];
       HEAP32[$130 + 4 >> 2] = HEAP32[$215 + 4 >> 2];
       HEAP32[$130 + 8 >> 2] = HEAP32[$215 + 8 >> 2];
       HEAP32[$215 + 0 >> 2] = 0;
       HEAP32[$215 + 4 >> 2] = 0;
       HEAP32[$215 + 8 >> 2] = 0;
       $240 = $next + 16 | 0;
       $241 = $22 + 16 | 0;
       if (!(HEAP8[$240 >> 0] & 1)) {
        HEAP8[$240 + 1 >> 0] = 0;
        HEAP8[$240 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$next + 24 >> 2] >> 0] = 0;
        HEAP32[$next + 20 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $240 | 0, 0);
       $249 = __THREW__;
       __THREW__ = 0;
       if ($249 & 1) {
        $251 = ___cxa_find_matching_catch(0) | 0;
        ___clang_call_terminate($251);
       };
       HEAP32[$240 + 0 >> 2] = HEAP32[$241 + 0 >> 2];
       HEAP32[$240 + 4 >> 2] = HEAP32[$241 + 4 >> 2];
       HEAP32[$240 + 8 >> 2] = HEAP32[$241 + 8 >> 2];
       HEAP32[$241 + 0 >> 2] = 0;
       HEAP32[$241 + 4 >> 2] = 0;
       HEAP32[$241 + 8 >> 2] = 0;
       HEAP32[$141 + 0 >> 2] = HEAP32[$226 + 0 >> 2];
       HEAP32[$141 + 4 >> 2] = HEAP32[$226 + 4 >> 2];
       HEAP32[$141 + 8 >> 2] = HEAP32[$226 + 8 >> 2];
       HEAP32[$141 + 12 >> 2] = HEAP32[$226 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($220);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($215);
       if ((HEAP32[$next >> 2] | 0) != 18) {
        HEAP32[$elements >> 2] = 0;
        $843 = $elements + 4 | 0;
        HEAP32[$843 >> 2] = 0;
        $844 = $elements + 8 | 0;
        HEAP32[$844 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(56, $elements | 0, $first | 0);
        $845 = __THREW__;
        __THREW__ = 0;
        L122 : do if ($845 & 1) label = 308; else {
         $847 = $40 + 4 | 0;
         $848 = $40 + 16 | 0;
         $849 = $40 + 28 | 0;
         $850 = $130 + 1 | 0;
         $851 = $40 + 16 | 0;
         $852 = $240 + 1 | 0;
         $853 = $41 + 4 | 0;
         $854 = $41 + 16 | 0;
         $855 = $41 + 28 | 0;
         $856 = $42 + 4 | 0;
         $857 = $42 + 16 | 0;
         $858 = $42 + 28 | 0;
         $859 = $42 + 16 | 0;
         $860 = $next + 24 | 0;
         $861 = $next + 20 | 0;
         $862 = $next + 12 | 0;
         $863 = $next + 8 | 0;
         while (1) {
          $this$idx47$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
          $864 = $this$idx47$val$idx$val + 8 | 0;
          HEAP32[$40 >> 2] = HEAP32[$864 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $847 | 0, $this$idx47$val$idx$val + 12 | 0);
          $867 = __THREW__;
          __THREW__ = 0;
          if ($867 & 1) {
           label = 307;
           break;
          }
          HEAP32[$40 >> 2] = HEAP32[$864 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $848 | 0, $this$idx47$val$idx$val + 24 | 0);
          $871 = __THREW__;
          __THREW__ = 0;
          if ($871 & 1) {
           label = 278;
           break;
          }
          $875 = $this$idx47$val$idx$val + 36 | 0;
          HEAP32[$849 + 0 >> 2] = HEAP32[$875 + 0 >> 2];
          HEAP32[$849 + 4 >> 2] = HEAP32[$875 + 4 >> 2];
          HEAP32[$849 + 8 >> 2] = HEAP32[$875 + 8 >> 2];
          HEAP32[$849 + 12 >> 2] = HEAP32[$875 + 12 >> 2];
          $876 = HEAP32[$864 >> 2] | 0;
          HEAP32[$40 >> 2] = $876;
          HEAP32[$next >> 2] = $876;
          if (!(HEAP8[$130 >> 0] & 1)) {
           HEAP8[$850 >> 0] = 0;
           HEAP8[$130 >> 0] = 0;
          } else {
           HEAP8[HEAP32[$862 >> 2] >> 0] = 0;
           HEAP32[$863 >> 2] = 0;
          }
          __THREW__ = 0;
          invoke_vii(45, $130 | 0, 0);
          $881 = __THREW__;
          __THREW__ = 0;
          if ($881 & 1) {
           label = 283;
           break;
          };
          HEAP32[$130 + 0 >> 2] = HEAP32[$847 + 0 >> 2];
          HEAP32[$130 + 4 >> 2] = HEAP32[$847 + 4 >> 2];
          HEAP32[$130 + 8 >> 2] = HEAP32[$847 + 8 >> 2];
          HEAP32[$847 + 0 >> 2] = 0;
          HEAP32[$847 + 4 >> 2] = 0;
          HEAP32[$847 + 8 >> 2] = 0;
          if (!(HEAP8[$240 >> 0] & 1)) {
           HEAP8[$852 >> 0] = 0;
           HEAP8[$240 >> 0] = 0;
          } else {
           HEAP8[HEAP32[$860 >> 2] >> 0] = 0;
           HEAP32[$861 >> 2] = 0;
          }
          __THREW__ = 0;
          invoke_vii(45, $240 | 0, 0);
          $889 = __THREW__;
          __THREW__ = 0;
          if ($889 & 1) {
           label = 288;
           break;
          };
          HEAP32[$240 + 0 >> 2] = HEAP32[$851 + 0 >> 2];
          HEAP32[$240 + 4 >> 2] = HEAP32[$851 + 4 >> 2];
          HEAP32[$240 + 8 >> 2] = HEAP32[$851 + 8 >> 2];
          HEAP32[$851 + 0 >> 2] = 0;
          HEAP32[$851 + 4 >> 2] = 0;
          HEAP32[$851 + 8 >> 2] = 0;
          HEAP32[$141 + 0 >> 2] = HEAP32[$849 + 0 >> 2];
          HEAP32[$141 + 4 >> 2] = HEAP32[$849 + 4 >> 2];
          HEAP32[$141 + 8 >> 2] = HEAP32[$849 + 8 >> 2];
          HEAP32[$141 + 12 >> 2] = HEAP32[$849 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($848);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($847);
          $893 = HEAP32[$next >> 2] | 0;
          if (($893 | 0) == 5) {
           $this$idx$val$idx$val$i325 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
           $895 = $this$idx$val$idx$val$i325 + 8 | 0;
           HEAP32[$41 >> 2] = HEAP32[$895 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $853 | 0, $this$idx$val$idx$val$i325 + 12 | 0);
           $898 = __THREW__;
           __THREW__ = 0;
           if ($898 & 1) {
            label = 307;
            break;
           }
           HEAP32[$41 >> 2] = HEAP32[$895 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $854 | 0, $this$idx$val$idx$val$i325 + 24 | 0);
           $902 = __THREW__;
           __THREW__ = 0;
           if ($902 & 1) {
            label = 292;
            break;
           }
           $906 = $this$idx$val$idx$val$i325 + 36 | 0;
           HEAP32[$855 + 0 >> 2] = HEAP32[$906 + 0 >> 2];
           HEAP32[$855 + 4 >> 2] = HEAP32[$906 + 4 >> 2];
           HEAP32[$855 + 8 >> 2] = HEAP32[$906 + 8 >> 2];
           HEAP32[$855 + 12 >> 2] = HEAP32[$906 + 12 >> 2];
           HEAP32[$41 >> 2] = HEAP32[$895 >> 2];
           $908 = HEAP32[$this >> 2] | 0;
           $910 = HEAP32[$908 + 4 >> 2] | 0;
           $911 = $910 + 4 | 0;
           $913 = HEAP32[$910 >> 2] | 0;
           HEAP32[$913 + 4 >> 2] = HEAP32[$911 >> 2];
           HEAP32[HEAP32[$911 >> 2] >> 2] = $913;
           $916 = $908 + 8 | 0;
           HEAP32[$916 >> 2] = (HEAP32[$916 >> 2] | 0) + -1;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($910 + 24 | 0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($910 + 12 | 0);
           __ZdlPv($910);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($854);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($853);
           $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
           $921 = $this$idx$val$idx$val + 8 | 0;
           HEAP32[$42 >> 2] = HEAP32[$921 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $856 | 0, $this$idx$val$idx$val + 12 | 0);
           $924 = __THREW__;
           __THREW__ = 0;
           if ($924 & 1) {
            label = 307;
            break;
           }
           HEAP32[$42 >> 2] = HEAP32[$921 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $857 | 0, $this$idx$val$idx$val + 24 | 0);
           $928 = __THREW__;
           __THREW__ = 0;
           if ($928 & 1) {
            label = 295;
            break;
           }
           $932 = $this$idx$val$idx$val + 36 | 0;
           HEAP32[$858 + 0 >> 2] = HEAP32[$932 + 0 >> 2];
           HEAP32[$858 + 4 >> 2] = HEAP32[$932 + 4 >> 2];
           HEAP32[$858 + 8 >> 2] = HEAP32[$932 + 8 >> 2];
           HEAP32[$858 + 12 >> 2] = HEAP32[$932 + 12 >> 2];
           $933 = HEAP32[$921 >> 2] | 0;
           HEAP32[$42 >> 2] = $933;
           HEAP32[$next >> 2] = $933;
           if (!(HEAP8[$130 >> 0] & 1)) {
            HEAP8[$850 >> 0] = 0;
            HEAP8[$130 >> 0] = 0;
           } else {
            HEAP8[HEAP32[$862 >> 2] >> 0] = 0;
            HEAP32[$863 >> 2] = 0;
           }
           __THREW__ = 0;
           invoke_vii(45, $130 | 0, 0);
           $938 = __THREW__;
           __THREW__ = 0;
           if ($938 & 1) {
            label = 300;
            break;
           };
           HEAP32[$130 + 0 >> 2] = HEAP32[$856 + 0 >> 2];
           HEAP32[$130 + 4 >> 2] = HEAP32[$856 + 4 >> 2];
           HEAP32[$130 + 8 >> 2] = HEAP32[$856 + 8 >> 2];
           HEAP32[$856 + 0 >> 2] = 0;
           HEAP32[$856 + 4 >> 2] = 0;
           HEAP32[$856 + 8 >> 2] = 0;
           if (!(HEAP8[$240 >> 0] & 1)) {
            HEAP8[$852 >> 0] = 0;
            HEAP8[$240 >> 0] = 0;
           } else {
            HEAP8[HEAP32[$860 >> 2] >> 0] = 0;
            HEAP32[$861 >> 2] = 0;
           }
           __THREW__ = 0;
           invoke_vii(45, $240 | 0, 0);
           $946 = __THREW__;
           __THREW__ = 0;
           if ($946 & 1) {
            label = 305;
            break;
           };
           HEAP32[$240 + 0 >> 2] = HEAP32[$859 + 0 >> 2];
           HEAP32[$240 + 4 >> 2] = HEAP32[$859 + 4 >> 2];
           HEAP32[$240 + 8 >> 2] = HEAP32[$859 + 8 >> 2];
           HEAP32[$859 + 0 >> 2] = 0;
           HEAP32[$859 + 4 >> 2] = 0;
           HEAP32[$859 + 8 >> 2] = 0;
           HEAP32[$141 + 0 >> 2] = HEAP32[$858 + 0 >> 2];
           HEAP32[$141 + 4 >> 2] = HEAP32[$858 + 4 >> 2];
           HEAP32[$141 + 8 >> 2] = HEAP32[$858 + 8 >> 2];
           HEAP32[$141 + 12 >> 2] = HEAP32[$858 + 12 >> 2];
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($857);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($856);
           $954 = HEAP32[$next >> 2] | 0;
           $got_comma$0$off0 = 1;
          } else {
           $954 = $893;
           $got_comma$0$off0 = 0;
          }
          if (($954 | 0) == 3) {
           label = 311;
           break;
          }
          if (!$got_comma$0$off0) {
           label = 316;
           break;
          }
          __THREW__ = 0;
          $1033 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
          $1034 = __THREW__;
          __THREW__ = 0;
          if ($1034 & 1) {
           label = 307;
           break;
          }
          HEAP32[$45 >> 2] = $1033;
          $1036 = HEAP32[$843 >> 2] | 0;
          if ($1036 >>> 0 >= (HEAP32[$844 >> 2] | 0) >>> 0) {
           __THREW__ = 0;
           invoke_vii(51, $elements | 0, $45 | 0);
           $1042 = __THREW__;
           __THREW__ = 0;
           if ($1042 & 1) {
            label = 307;
            break;
           } else continue;
          }
          if (!$1036) $1041 = 0; else {
           HEAP32[$1036 >> 2] = $1033;
           $1041 = HEAP32[$843 >> 2] | 0;
          }
          HEAP32[$843 >> 2] = $1041 + 4;
         }
         switch (label | 0) {
         case 278:
          {
           $873 = ___cxa_find_matching_catch() | 0;
           $874 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($847);
           $eh$lpad$body316$index72Z2D = $874;
           $eh$lpad$body316$indexZ2D = $873;
           label = 309;
           break L122;
           break;
          }
         case 283:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 288:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 292:
          {
           $904 = ___cxa_find_matching_catch() | 0;
           $905 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($853);
           $eh$lpad$body316$index72Z2D = $905;
           $eh$lpad$body316$indexZ2D = $904;
           label = 309;
           break L122;
           break;
          }
         case 295:
          {
           $930 = ___cxa_find_matching_catch() | 0;
           $931 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($856);
           $eh$lpad$body316$index72Z2D = $931;
           $eh$lpad$body316$indexZ2D = $930;
           label = 309;
           break L122;
           break;
          }
         case 300:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 305:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 307:
          {
           $950 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body316$index72Z2D = tempRet0;
           $eh$lpad$body316$indexZ2D = $950;
           label = 309;
           break L122;
           break;
          }
         case 311:
          {
           $this$idx$val$idx$val$i341 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
           $956 = $this$idx$val$idx$val$i341 + 8 | 0;
           HEAP32[$43 >> 2] = HEAP32[$956 >> 2];
           $958 = $43 + 4 | 0;
           __THREW__ = 0;
           invoke_vii(40, $958 | 0, $this$idx$val$idx$val$i341 + 12 | 0);
           $960 = __THREW__;
           __THREW__ = 0;
           if ($960 & 1) {
            label = 308;
            break L122;
           }
           HEAP32[$43 >> 2] = HEAP32[$956 >> 2];
           $963 = $43 + 16 | 0;
           __THREW__ = 0;
           invoke_vii(40, $963 | 0, $this$idx$val$idx$val$i341 + 24 | 0);
           $965 = __THREW__;
           __THREW__ = 0;
           if ($965 & 1) {
            $967 = ___cxa_find_matching_catch() | 0;
            $968 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($958);
            $eh$lpad$body316$index72Z2D = $968;
            $eh$lpad$body316$indexZ2D = $967;
            label = 309;
            break L122;
           }
           $969 = $43 + 28 | 0;
           $970 = $this$idx$val$idx$val$i341 + 36 | 0;
           HEAP32[$969 + 0 >> 2] = HEAP32[$970 + 0 >> 2];
           HEAP32[$969 + 4 >> 2] = HEAP32[$970 + 4 >> 2];
           HEAP32[$969 + 8 >> 2] = HEAP32[$970 + 8 >> 2];
           HEAP32[$969 + 12 >> 2] = HEAP32[$970 + 12 >> 2];
           HEAP32[$43 >> 2] = HEAP32[$956 >> 2];
           $972 = HEAP32[$this >> 2] | 0;
           $974 = HEAP32[$972 + 4 >> 2] | 0;
           $975 = $974 + 4 | 0;
           $977 = HEAP32[$974 >> 2] | 0;
           HEAP32[$977 + 4 >> 2] = HEAP32[$975 >> 2];
           HEAP32[HEAP32[$975 >> 2] >> 2] = $977;
           $980 = $972 + 8 | 0;
           HEAP32[$980 >> 2] = (HEAP32[$980 >> 2] | 0) + -1;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($974 + 24 | 0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($974 + 12 | 0);
           __ZdlPv($974);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($963);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($958);
           $986 = HEAP32[$this + 4 >> 2] | 0;
           __THREW__ = 0;
           invoke_vii(40, $46 | 0, $70 | 0);
           $987 = __THREW__;
           __THREW__ = 0;
           if ($987 & 1) {
            label = 308;
            break L122;
           }
           $1046 = $76;
           $1051 = HEAP32[$1046 + 4 >> 2] | 0;
           $1052 = $46 + 12 | 0;
           HEAP32[$1052 >> 2] = HEAP32[$1046 >> 2];
           HEAP32[$1052 + 4 >> 2] = $1051;
           $1057 = $next + 36 | 0;
           $1062 = HEAP32[$1057 + 4 >> 2] | 0;
           $1063 = $46 + 20 | 0;
           HEAP32[$1063 >> 2] = HEAP32[$1057 >> 2];
           HEAP32[$1063 + 4 >> 2] = $1062;
           HEAP32[$47 >> 2] = 0;
           $1067 = $47 + 4 | 0;
           HEAP32[$1067 >> 2] = 0;
           $1068 = $47 + 8 | 0;
           HEAP32[$1068 >> 2] = 0;
           $1073 = (HEAP32[$843 >> 2] | 0) - (HEAP32[$elements >> 2] | 0) | 0;
           $1074 = $1073 >> 2;
           L206 : do if (!$1074) label = 353; else {
            if ($1074 >>> 0 > 1073741823) {
             __THREW__ = 0;
             invoke_vi(181, $47 | 0);
             $1077 = __THREW__;
             __THREW__ = 0;
             if (!($1077 & 1)) label = 344;
            } else label = 344;
            do if ((label | 0) == 344) {
             __THREW__ = 0;
             $1079 = invoke_ii(67, $1073 | 0) | 0;
             $1080 = __THREW__;
             __THREW__ = 0;
             if ($1080 & 1) break;
             HEAP32[$1067 >> 2] = $1079;
             HEAP32[$47 >> 2] = $1079;
             HEAP32[$1068 >> 2] = $1079 + ($1074 << 2);
             $1083 = HEAP32[$elements >> 2] | 0;
             $1084 = HEAP32[$843 >> 2] | 0;
             if (($1083 | 0) == ($1084 | 0)) {
              label = 353;
              break L206;
             } else {
              $$01$i$i367 = $1083;
              $1086 = $1079;
             }
             while (1) {
              if (!$1086) $1090 = 0; else {
               HEAP32[$1086 >> 2] = HEAP32[$$01$i$i367 >> 2];
               $1090 = HEAP32[$1067 >> 2] | 0;
              }
              $1086 = $1090 + 4 | 0;
              HEAP32[$1067 >> 2] = $1086;
              $$01$i$i367 = $$01$i$i367 + 4 | 0;
              if (($$01$i$i367 | 0) == ($1084 | 0)) {
               label = 353;
               break L206;
              }
             }
            } while (0);
            $1093 = ___cxa_find_matching_catch() | 0;
            $1094 = tempRet0;
            $1095 = HEAP32[$47 >> 2] | 0;
            if ($1095) {
             $1097 = HEAP32[$1067 >> 2] | 0;
             if (($1097 | 0) != ($1095 | 0)) HEAP32[$1067 >> 2] = $1097 + (~(($1097 + -4 - $1095 | 0) >>> 2) << 2);
             __ZdlPv($1095);
            }
            $$1813 = $1093;
            $$1832 = $1094;
           } while (0);
           do if ((label | 0) == 353) {
            __THREW__ = 0;
            $1103 = invoke_iiii(32, $986 | 0, $46 | 0, $47 | 0) | 0;
            $1104 = __THREW__;
            __THREW__ = 0;
            if ($1104 & 1) {
             $1122 = ___cxa_find_matching_catch() | 0;
             $1123 = tempRet0;
             $1124 = HEAP32[$47 >> 2] | 0;
             if (!$1124) {
              $$1813 = $1122;
              $$1832 = $1123;
              break;
             }
             $1126 = HEAP32[$1067 >> 2] | 0;
             if (($1126 | 0) != ($1124 | 0)) HEAP32[$1067 >> 2] = $1126 + (~(($1126 + -4 - $1124 | 0) >>> 2) << 2);
             __ZdlPv($1124);
             $$1813 = $1122;
             $$1832 = $1123;
             break;
            }
            $1106 = HEAP32[$47 >> 2] | 0;
            if ($1106) {
             $1108 = HEAP32[$1067 >> 2] | 0;
             if (($1108 | 0) != ($1106 | 0)) HEAP32[$1067 >> 2] = $1108 + (~(($1108 + -4 - $1106 | 0) >>> 2) << 2);
             __ZdlPv($1106);
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($46);
            $1114 = HEAP32[$elements >> 2] | 0;
            if (!$1114) {
             $$12 = $1103;
             label = 372;
             break L90;
            }
            $1116 = HEAP32[$843 >> 2] | 0;
            if (($1116 | 0) != ($1114 | 0)) HEAP32[$843 >> 2] = $1116 + (~(($1116 + -4 - $1114 | 0) >>> 2) << 2);
            __ZdlPv($1114);
            $$12 = $1103;
            label = 372;
            break L90;
           } while (0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($46);
           $$19 = $$1813;
           $$1933 = $$1832;
           break L122;
           break;
          }
         case 316:
          {
           $989 = $ss2 + 64 | 0;
           $990 = $ss2 + 8 | 0;
           HEAP32[$990 >> 2] = 792;
           $991 = $ss2 + 12 | 0;
           HEAP32[$ss2 >> 2] = 940;
           HEAP32[$989 >> 2] = 960;
           HEAP32[$ss2 + 4 >> 2] = 0;
           __THREW__ = 0;
           invoke_vii(41, $ss2 + 64 | 0, $991 | 0);
           $994 = __THREW__;
           __THREW__ = 0;
           if ($994 & 1) {
            $1006 = ___cxa_find_matching_catch() | 0;
            $$0$i352 = tempRet0;
            $$01$i351 = $1006;
           } else {
            HEAP32[$ss2 + 136 >> 2] = 0;
            HEAP32[$ss2 + 140 >> 2] = -1;
            HEAP32[$ss2 >> 2] = 772;
            HEAP32[$989 >> 2] = 812;
            HEAP32[$990 >> 2] = 792;
            __THREW__ = 0;
            invoke_vi(179, $991 | 0);
            $998 = __THREW__;
            __THREW__ = 0;
            do if ($998 & 1) {
             $1008 = ___cxa_find_matching_catch() | 0;
             $eh$lpad$body$i349$index82Z2D = tempRet0;
             $eh$lpad$body$i349$indexZ2D = $1008;
            } else {
             HEAP32[$991 >> 2] = 1104;
             $1000 = $ss2 + 44 | 0;
             HEAP32[$1000 + 0 >> 2] = 0;
             HEAP32[$1000 + 4 >> 2] = 0;
             HEAP32[$1000 + 8 >> 2] = 0;
             HEAP32[$1000 + 12 >> 2] = 0;
             HEAP32[$ss2 + 60 >> 2] = 24;
             HEAP32[$11 + 0 >> 2] = 0;
             HEAP32[$11 + 4 >> 2] = 0;
             HEAP32[$11 + 8 >> 2] = 0;
             __THREW__ = 0;
             invoke_vii(42, $991 | 0, $11 | 0);
             $1002 = __THREW__;
             __THREW__ = 0;
             if ($1002 & 1) {
              $1004 = ___cxa_find_matching_catch() | 0;
              $1005 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1000);
              __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($991);
              $eh$lpad$body$i349$index82Z2D = $1005;
              $eh$lpad$body$i349$indexZ2D = $1004;
              break;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
             __THREW__ = 0;
             invoke_iiii(25, $ss2 + 8 | 0, 36552, 43) | 0;
             $1011 = __THREW__;
             __THREW__ = 0;
             L177 : do if ($1011 & 1) {
              $1026 = ___cxa_find_matching_catch() | 0;
              $$17 = $1026;
              $$1731 = tempRet0;
             } else {
              $1013 = ___cxa_allocate_exception(40) | 0;
              __THREW__ = 0;
              invoke_vii(43, $44 | 0, $991 | 0);
              $1014 = __THREW__;
              __THREW__ = 0;
              L179 : do if ($1014 & 1) {
               $1028 = ___cxa_find_matching_catch() | 0;
               $$1612558 = $1028;
               $$1630557 = tempRet0;
              } else {
               __THREW__ = 0;
               invoke_vii(40, $1013 | 0, $240 | 0);
               $1016 = __THREW__;
               __THREW__ = 0;
               do if ($1016 & 1) $$03 = 1; else {
                $1018 = $1013 + 12 | 0;
                HEAP32[$1018 + 0 >> 2] = HEAP32[$141 + 0 >> 2];
                HEAP32[$1018 + 4 >> 2] = HEAP32[$141 + 4 >> 2];
                HEAP32[$1018 + 8 >> 2] = HEAP32[$141 + 8 >> 2];
                HEAP32[$1018 + 12 >> 2] = HEAP32[$141 + 12 >> 2];
                __THREW__ = 0;
                invoke_vii(40, $1013 + 28 | 0, $44 | 0);
                $1020 = __THREW__;
                __THREW__ = 0;
                if ($1020 & 1) {
                 $1022 = ___cxa_find_matching_catch() | 0;
                 $1023 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1013);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($44);
                 $$1612558 = $1022;
                 $$1630557 = $1023;
                 break L179;
                }
                __THREW__ = 0;
                invoke_viii(4, $1013 | 0, 48, 178);
                $1024 = __THREW__;
                __THREW__ = 0;
                if ($1024 & 1) {
                 $$03 = 0;
                 break;
                }
               } while (0);
               $1030 = ___cxa_find_matching_catch() | 0;
               $1031 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($44);
               if ($$03) {
                $$1612558 = $1030;
                $$1630557 = $1031;
               } else {
                $$17 = $1030;
                $$1731 = $1031;
                break L177;
               }
              } while (0);
              ___cxa_free_exception($1013 | 0);
              $$17 = $$1612558;
              $$1731 = $$1630557;
             } while (0);
             HEAP32[$ss2 >> 2] = 772;
             HEAP32[$ss2 + 64 >> 2] = 812;
             HEAP32[$990 >> 2] = 792;
             HEAP32[$991 >> 2] = 1104;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1000);
             __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($991);
             __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($989);
             $$19 = $$17;
             $$1933 = $$1731;
             break L122;
            } while (0);
            $$0$i352 = $eh$lpad$body$i349$index82Z2D;
            $$01$i351 = $eh$lpad$body$i349$indexZ2D;
           }
           __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($989);
           $eh$lpad$body316$index72Z2D = $$0$i352;
           $eh$lpad$body316$indexZ2D = $$01$i351;
           label = 309;
           break L122;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 308) {
         $952 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body316$index72Z2D = tempRet0;
         $eh$lpad$body316$indexZ2D = $952;
         label = 309;
        }
        if ((label | 0) == 309) {
         $$19 = $eh$lpad$body316$indexZ2D;
         $$1933 = $eh$lpad$body316$index72Z2D;
        }
        $1132 = HEAP32[$elements >> 2] | 0;
        if (!$1132) {
         $$20 = $$19;
         $$2034 = $$1933;
         break;
        }
        $1134 = HEAP32[$843 >> 2] | 0;
        if (($1134 | 0) != ($1132 | 0)) HEAP32[$843 >> 2] = $1134 + (~(($1134 + -4 - $1132 | 0) >>> 2) << 2);
        __ZdlPv($1132);
        $$20 = $$19;
        $$2034 = $$1933;
        break;
       };
       HEAP32[$l + 0 >> 2] = 0;
       HEAP32[$l + 4 >> 2] = 0;
       HEAP32[$l + 8 >> 2] = 0;
       HEAP32[$l + 12 >> 2] = 0;
       HEAP32[$l + 16 >> 2] = 0;
       HEAP32[$l + 20 >> 2] = 0;
       HEAP32[$l + 24 >> 2] = 0;
       $this$idx$val$idx$val$i76 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $255 = $this$idx$val$idx$val$i76 + 8 | 0;
       HEAP32[$23 >> 2] = HEAP32[$255 >> 2];
       $257 = $23 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $257 | 0, $this$idx$val$idx$val$i76 + 12 | 0);
       $259 = __THREW__;
       __THREW__ = 0;
       do if ($259 & 1) label = 140; else {
        HEAP32[$23 >> 2] = HEAP32[$255 >> 2];
        $262 = $23 + 16 | 0;
        __THREW__ = 0;
        invoke_vii(40, $262 | 0, $this$idx$val$idx$val$i76 + 24 | 0);
        $264 = __THREW__;
        __THREW__ = 0;
        if ($264 & 1) {
         $266 = ___cxa_find_matching_catch() | 0;
         $267 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($257);
         $eh$lpad$body79$index16Z2D = $267;
         $eh$lpad$body79$indexZ2D = $266;
         label = 141;
         break;
        }
        $268 = $23 + 28 | 0;
        $269 = $this$idx$val$idx$val$i76 + 36 | 0;
        HEAP32[$268 + 0 >> 2] = HEAP32[$269 + 0 >> 2];
        HEAP32[$268 + 4 >> 2] = HEAP32[$269 + 4 >> 2];
        HEAP32[$268 + 8 >> 2] = HEAP32[$269 + 8 >> 2];
        HEAP32[$268 + 12 >> 2] = HEAP32[$269 + 12 >> 2];
        HEAP32[$23 >> 2] = HEAP32[$255 >> 2];
        $271 = HEAP32[$this >> 2] | 0;
        $273 = HEAP32[$271 + 4 >> 2] | 0;
        $274 = $273 + 4 | 0;
        $276 = HEAP32[$273 >> 2] | 0;
        HEAP32[$276 + 4 >> 2] = HEAP32[$274 >> 2];
        HEAP32[HEAP32[$274 >> 2] >> 2] = $276;
        $279 = $271 + 8 | 0;
        HEAP32[$279 >> 2] = (HEAP32[$279 >> 2] | 0) + -1;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($273 + 24 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($273 + 12 | 0);
        __ZdlPv($273);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($262);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($257);
        __THREW__ = 0;
        invoke_viiii(13, $id_token | 0, $this | 0, 11, 0);
        $284 = __THREW__;
        __THREW__ = 0;
        if ($284 & 1) label = 140; else {
         $286 = $this + 4 | 0;
         $287 = HEAP32[$286 >> 2] | 0;
         $288 = $id_token + 4 | 0;
         __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i, $287, $288);
         $290 = HEAP32[$it$i >> 2] | 0;
         L261 : do if (($290 | 0) == ($287 + 4 | 0)) {
          __THREW__ = 0;
          $294 = invoke_ii(67, 12) | 0;
          $295 = __THREW__;
          __THREW__ = 0;
          do if (!($295 & 1)) {
           __THREW__ = 0;
           invoke_vii(40, $294 | 0, $288 | 0);
           $297 = __THREW__;
           __THREW__ = 0;
           if ($297 & 1) {
            $302 = ___cxa_find_matching_catch() | 0;
            $303 = tempRet0;
            __ZdlPv($294);
            $eh$lpad$body84$index22Z2D = $303;
            $eh$lpad$body84$indexZ2D = $302;
            label = 143;
            break L261;
           }
           __THREW__ = 0;
           $299 = invoke_iii(23, $287 | 0, $288 | 0) | 0;
           $300 = __THREW__;
           __THREW__ = 0;
           if ($300 & 1) break;
           HEAP32[$299 >> 2] = $294;
           $308 = $294;
           label = 61;
           break L261;
          } while (0);
          $561 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body84$index22Z2D = tempRet0;
          $eh$lpad$body84$indexZ2D = $561;
          label = 143;
         } else {
          $308 = HEAP32[$290 + 28 >> 2] | 0;
          label = 61;
         } while (0);
         do if ((label | 0) == 61) {
          __THREW__ = 0;
          $304 = invoke_ii(67, 4) | 0;
          $305 = __THREW__;
          __THREW__ = 0;
          if ($305 & 1) {
           $314 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body84$index22Z2D = tempRet0;
           $eh$lpad$body84$indexZ2D = $314;
           label = 143;
           break;
          }
          $307 = ($304 | 0) == 0;
          if ($307) $310 = 0; else {
           HEAP32[$304 >> 2] = $308;
           $310 = $304;
          }
          $309 = $310 + 4 | 0;
          $311 = HEAP32[$286 >> 2] | 0;
          __THREW__ = 0;
          invoke_vii(40, $24 | 0, $l | 0);
          $312 = __THREW__;
          __THREW__ = 0;
          L279 : do if ($312 & 1) label = 144; else {
           $316 = $24 + 12 | 0;
           $317 = $l + 12 | 0;
           HEAP32[$316 + 0 >> 2] = HEAP32[$317 + 0 >> 2];
           HEAP32[$316 + 4 >> 2] = HEAP32[$317 + 4 >> 2];
           HEAP32[$316 + 8 >> 2] = HEAP32[$317 + 8 >> 2];
           HEAP32[$316 + 12 >> 2] = HEAP32[$317 + 12 >> 2];
           $318 = HEAP32[$286 >> 2] | 0;
           __THREW__ = 0;
           invoke_viii(3, $25 | 0, 33912, 3);
           $319 = __THREW__;
           __THREW__ = 0;
           if ($319 & 1) {
            $565 = ___cxa_find_matching_catch() | 0;
            $$216 = tempRet0;
            $$29 = $565;
           } else {
            __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i91, $318, $25);
            $322 = HEAP32[$it$i91 >> 2] | 0;
            do if (($322 | 0) == ($318 + 4 | 0)) {
             __THREW__ = 0;
             $326 = invoke_ii(67, 12) | 0;
             $327 = __THREW__;
             __THREW__ = 0;
             if ($327 & 1) {
              label = 147;
              break;
             }
             __THREW__ = 0;
             invoke_vii(40, $326 | 0, $25 | 0);
             $329 = __THREW__;
             __THREW__ = 0;
             if ($329 & 1) {
              $334 = ___cxa_find_matching_catch() | 0;
              $335 = tempRet0;
              __ZdlPv($326);
              $eh$lpad$body98$index34Z2D = $335;
              $eh$lpad$body98$indexZ2D = $334;
              break;
             }
             __THREW__ = 0;
             $331 = invoke_iii(23, $318 | 0, $25 | 0) | 0;
             $332 = __THREW__;
             __THREW__ = 0;
             if ($332 & 1) {
              label = 147;
              break;
             }
             HEAP32[$331 >> 2] = $326;
             $$0$i94 = $326;
             label = 74;
            } else {
             $$0$i94 = HEAP32[$322 + 28 >> 2] | 0;
             label = 74;
            } while (0);
            do if ((label | 0) == 74) {
             __THREW__ = 0;
             $336 = invoke_ii(67, 56) | 0;
             $337 = __THREW__;
             __THREW__ = 0;
             if ($337 & 1) {
              label = 147;
              break;
             }
             HEAP32[$336 >> 2] = 34168;
             __THREW__ = 0;
             invoke_vii(40, $336 + 4 | 0, $24 | 0);
             $340 = __THREW__;
             __THREW__ = 0;
             if ($340 & 1) {
              $360 = ___cxa_find_matching_catch() | 0;
              $361 = tempRet0;
              __ZdlPv($336);
              $eh$lpad$body98$index34Z2D = $361;
              $eh$lpad$body98$indexZ2D = $360;
              break;
             }
             $342 = $336 + 16 | 0;
             HEAP32[$342 + 0 >> 2] = HEAP32[$316 + 0 >> 2];
             HEAP32[$342 + 4 >> 2] = HEAP32[$316 + 4 >> 2];
             HEAP32[$342 + 8 >> 2] = HEAP32[$316 + 8 >> 2];
             HEAP32[$342 + 12 >> 2] = HEAP32[$316 + 12 >> 2];
             HEAP32[$336 + 32 >> 2] = 20;
             HEAP32[$336 + 36 >> 2] = 0;
             HEAP32[$336 + 40 >> 2] = 0;
             HEAP32[$336 + 44 >> 2] = 0;
             HEAP32[$336 >> 2] = 35960;
             HEAP32[$336 + 48 >> 2] = $$0$i94;
             HEAP32[$336 + 52 >> 2] = $$0$i94;
             HEAP32[$15 >> 2] = $336;
             $349 = $311 + 16 | 0;
             $350 = HEAP32[$349 >> 2] | 0;
             if ($350 >>> 0 < (HEAP32[$311 + 20 >> 2] | 0) >>> 0) {
              if (!$350) $356 = 0; else {
               HEAP32[$350 >> 2] = $336;
               $356 = HEAP32[$349 >> 2] | 0;
              }
              HEAP32[$349 >> 2] = $356 + 4;
             } else {
              __THREW__ = 0;
              invoke_vii(51, $311 + 12 | 0, $15 | 0);
              $358 = __THREW__;
              __THREW__ = 0;
              if ($358 & 1) {
               label = 147;
               break;
              }
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($24);
             $362 = HEAP32[$286 >> 2] | 0;
             __THREW__ = 0;
             invoke_vii(40, $26 | 0, $210 + 4 | 0);
             $364 = __THREW__;
             __THREW__ = 0;
             if ($364 & 1) {
              label = 144;
              break L279;
             }
             $366 = $26 + 12 | 0;
             $367 = $210 + 16 | 0;
             HEAP32[$366 + 0 >> 2] = HEAP32[$367 + 0 >> 2];
             HEAP32[$366 + 4 >> 2] = HEAP32[$367 + 4 >> 2];
             HEAP32[$366 + 8 >> 2] = HEAP32[$367 + 8 >> 2];
             HEAP32[$366 + 12 >> 2] = HEAP32[$367 + 12 >> 2];
             HEAP32[$27 >> 2] = 0;
             $368 = $27 + 4 | 0;
             HEAP32[$368 >> 2] = 0;
             $369 = $27 + 8 | 0;
             HEAP32[$369 >> 2] = 0;
             $371 = $304;
             $372 = $309 - $371 | 0;
             $373 = $372 >> 2;
             L305 : do if (!$373) {
              $610 = $309;
              label = 95;
             } else {
              if ($373 >>> 0 > 1073741823) {
               __THREW__ = 0;
               invoke_vi(181, $27 | 0);
               $376 = __THREW__;
               __THREW__ = 0;
               if (!($376 & 1)) label = 86;
              } else label = 86;
              do if ((label | 0) == 86) {
               __THREW__ = 0;
               $378 = invoke_ii(67, $372 | 0) | 0;
               $379 = __THREW__;
               __THREW__ = 0;
               if ($379 & 1) break;
               HEAP32[$368 >> 2] = $378;
               HEAP32[$27 >> 2] = $378;
               HEAP32[$369 >> 2] = $378 + ($373 << 2);
               if (($304 | 0) == ($309 | 0)) {
                $610 = $304;
                label = 95;
                break L305;
               } else {
                $$01$i$i107 = $304;
                $383 = $378;
               }
               while (1) {
                if (!$383) $387 = 0; else {
                 HEAP32[$383 >> 2] = HEAP32[$$01$i$i107 >> 2];
                 $387 = HEAP32[$368 >> 2] | 0;
                }
                $383 = $387 + 4 | 0;
                HEAP32[$368 >> 2] = $383;
                if (($$01$i$i107 | 0) == ($310 | 0)) {
                 $610 = $309;
                 label = 95;
                 break L305;
                } else $$01$i$i107 = $$01$i$i107 + 4 | 0;
               }
              } while (0);
              $390 = ___cxa_find_matching_catch() | 0;
              $391 = tempRet0;
              $392 = HEAP32[$27 >> 2] | 0;
              if ($392) {
               $394 = HEAP32[$368 >> 2] | 0;
               if (($394 | 0) != ($392 | 0)) HEAP32[$368 >> 2] = $394 + (~(($394 + -4 - $392 | 0) >>> 2) << 2);
               __ZdlPv($392);
              }
              $$3 = $390;
              $$317 = $391;
             } while (0);
             do if ((label | 0) == 95) {
              __THREW__ = 0;
              $400 = invoke_iiiii(6, $362 | 0, $26 | 0, $27 | 0, $210 | 0) | 0;
              $401 = __THREW__;
              __THREW__ = 0;
              if ($401 & 1) {
               $569 = ___cxa_find_matching_catch() | 0;
               $570 = tempRet0;
               $571 = HEAP32[$27 >> 2] | 0;
               if (!$571) {
                $$3 = $569;
                $$317 = $570;
                break;
               }
               $573 = HEAP32[$368 >> 2] | 0;
               if (($573 | 0) != ($571 | 0)) HEAP32[$368 >> 2] = $573 + (~(($573 + -4 - $571 | 0) >>> 2) << 2);
               __ZdlPv($571);
               $$3 = $569;
               $$317 = $570;
               break;
              }
              $403 = HEAP32[$27 >> 2] | 0;
              if ($403) {
               $405 = HEAP32[$368 >> 2] | 0;
               if (($405 | 0) != ($403 | 0)) HEAP32[$368 >> 2] = $405 + (~(($405 + -4 - $403 | 0) >>> 2) << 2);
               __ZdlPv($403);
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
              __THREW__ = 0;
              invoke_viiii(13, $28 | 0, $this | 0, 23, 0);
              $411 = __THREW__;
              __THREW__ = 0;
              if ($411 & 1) {
               label = 144;
               break L279;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28 + 16 | 0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28 + 4 | 0);
              __THREW__ = 0;
              $415 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
              $416 = __THREW__;
              __THREW__ = 0;
              if ($416 & 1) {
               label = 144;
               break L279;
              }
              $this$idx$val$idx$val$i125 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
              $418 = $this$idx$val$idx$val$i125 + 8 | 0;
              HEAP32[$maybe_if >> 2] = HEAP32[$418 >> 2];
              $420 = $maybe_if + 4 | 0;
              __THREW__ = 0;
              invoke_vii(40, $420 | 0, $this$idx$val$idx$val$i125 + 12 | 0);
              $422 = __THREW__;
              __THREW__ = 0;
              if ($422 & 1) {
               label = 144;
               break L279;
              }
              HEAP32[$maybe_if >> 2] = HEAP32[$418 >> 2];
              $425 = $maybe_if + 16 | 0;
              __THREW__ = 0;
              invoke_vii(40, $425 | 0, $this$idx$val$idx$val$i125 + 24 | 0);
              $427 = __THREW__;
              __THREW__ = 0;
              if ($427 & 1) {
               $429 = ___cxa_find_matching_catch() | 0;
               $430 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($420);
               $eh$lpad$body128$index28Z2D = $430;
               $eh$lpad$body128$indexZ2D = $429;
               label = 145;
               break L279;
              }
              $431 = $maybe_if + 28 | 0;
              $432 = $this$idx$val$idx$val$i125 + 36 | 0;
              HEAP32[$431 + 0 >> 2] = HEAP32[$432 + 0 >> 2];
              HEAP32[$431 + 4 >> 2] = HEAP32[$432 + 4 >> 2];
              HEAP32[$431 + 8 >> 2] = HEAP32[$432 + 8 >> 2];
              HEAP32[$431 + 12 >> 2] = HEAP32[$432 + 12 >> 2];
              HEAP32[$maybe_if >> 2] = HEAP32[$418 >> 2];
              $434 = HEAP32[$this >> 2] | 0;
              $436 = HEAP32[$434 + 4 >> 2] | 0;
              $437 = $436 + 4 | 0;
              $439 = HEAP32[$436 >> 2] | 0;
              HEAP32[$439 + 4 >> 2] = HEAP32[$437 >> 2];
              HEAP32[HEAP32[$437 >> 2] >> 2] = $439;
              $442 = $434 + 8 | 0;
              HEAP32[$442 >> 2] = (HEAP32[$442 >> 2] | 0) + -1;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($436 + 24 | 0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($436 + 12 | 0);
              __ZdlPv($436);
              $447 = HEAP32[$maybe_if >> 2] | 0;
              L345 : do if (($447 | 0) == 20) {
               __THREW__ = 0;
               $597 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
               $598 = __THREW__;
               __THREW__ = 0;
               if ($598 & 1) {
                label = 156;
                break;
               }
               __THREW__ = 0;
               invoke_viiii(13, $last | 0, $this | 0, 3, 0);
               $600 = __THREW__;
               __THREW__ = 0;
               if ($600 & 1) {
                label = 156;
                break;
               }
               $602 = HEAP32[$286 >> 2] | 0;
               __THREW__ = 0;
               invoke_vii(40, $33 | 0, $597 + 4 | 0);
               $604 = __THREW__;
               __THREW__ = 0;
               L349 : do if ($604 & 1) label = 225; else {
                $606 = $33 + 12 | 0;
                $607 = $597 + 16 | 0;
                HEAP32[$606 + 0 >> 2] = HEAP32[$607 + 0 >> 2];
                HEAP32[$606 + 4 >> 2] = HEAP32[$607 + 4 >> 2];
                HEAP32[$606 + 8 >> 2] = HEAP32[$607 + 8 >> 2];
                HEAP32[$606 + 12 >> 2] = HEAP32[$607 + 12 >> 2];
                HEAP32[$34 >> 2] = 0;
                $608 = $34 + 4 | 0;
                HEAP32[$608 >> 2] = 0;
                $609 = $34 + 8 | 0;
                HEAP32[$609 >> 2] = 0;
                $612 = $610 - $371 | 0;
                $613 = $612 >> 2;
                L351 : do if (!$613) label = 185; else {
                 if ($613 >>> 0 > 1073741823) {
                  __THREW__ = 0;
                  invoke_vi(181, $34 | 0);
                  $616 = __THREW__;
                  __THREW__ = 0;
                  if (!($616 & 1)) label = 176;
                 } else label = 176;
                 do if ((label | 0) == 176) {
                  __THREW__ = 0;
                  $618 = invoke_ii(67, $612 | 0) | 0;
                  $619 = __THREW__;
                  __THREW__ = 0;
                  if ($619 & 1) break;
                  HEAP32[$608 >> 2] = $618;
                  HEAP32[$34 >> 2] = $618;
                  HEAP32[$609 >> 2] = $618 + ($613 << 2);
                  if (($304 | 0) == ($610 | 0)) {
                   label = 185;
                   break L351;
                  } else {
                   $$01$i$i199 = $304;
                   $623 = $618;
                  }
                  while (1) {
                   if (!$623) $627 = 0; else {
                    HEAP32[$623 >> 2] = HEAP32[$$01$i$i199 >> 2];
                    $627 = HEAP32[$608 >> 2] | 0;
                   }
                   $623 = $627 + 4 | 0;
                   HEAP32[$608 >> 2] = $623;
                   $$01$i$i199 = $$01$i$i199 + 4 | 0;
                   if (($$01$i$i199 | 0) == ($610 | 0)) {
                    label = 185;
                    break L351;
                   }
                  }
                 } while (0);
                 $630 = ___cxa_find_matching_catch() | 0;
                 $631 = tempRet0;
                 $632 = HEAP32[$34 >> 2] | 0;
                 if ($632) {
                  $634 = HEAP32[$608 >> 2] | 0;
                  if (($634 | 0) != ($632 | 0)) HEAP32[$608 >> 2] = $634 + (~(($634 + -4 - $632 | 0) >>> 2) << 2);
                  __ZdlPv($632);
                 }
                 $$6 = $630;
                 $$620 = $631;
                } while (0);
                do if ((label | 0) == 185) {
                 __THREW__ = 0;
                 $640 = invoke_iiiii(6, $602 | 0, $33 | 0, $34 | 0, $597 | 0) | 0;
                 $641 = __THREW__;
                 __THREW__ = 0;
                 if ($641 & 1) {
                  $766 = ___cxa_find_matching_catch() | 0;
                  $767 = tempRet0;
                  $768 = HEAP32[$34 >> 2] | 0;
                  if (!$768) {
                   $$6 = $766;
                   $$620 = $767;
                   break;
                  }
                  $770 = HEAP32[$608 >> 2] | 0;
                  if (($770 | 0) != ($768 | 0)) HEAP32[$608 >> 2] = $770 + (~(($770 + -4 - $768 | 0) >>> 2) << 2);
                  __ZdlPv($768);
                  $$6 = $766;
                  $$620 = $767;
                  break;
                 }
                 $643 = HEAP32[$34 >> 2] | 0;
                 if ($643) {
                  $645 = HEAP32[$608 >> 2] | 0;
                  if (($645 | 0) != ($643 | 0)) HEAP32[$608 >> 2] = $645 + (~(($645 + -4 - $643 | 0) >>> 2) << 2);
                  __ZdlPv($643);
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($33);
                 $651 = HEAP32[$286 >> 2] | 0;
                 __THREW__ = 0;
                 invoke_vii(40, $35 | 0, $l | 0);
                 $652 = __THREW__;
                 __THREW__ = 0;
                 if ($652 & 1) {
                  label = 225;
                  break L349;
                 }
                 $654 = $35 + 12 | 0;
                 HEAP32[$654 + 0 >> 2] = HEAP32[$317 + 0 >> 2];
                 HEAP32[$654 + 4 >> 2] = HEAP32[$317 + 4 >> 2];
                 HEAP32[$654 + 8 >> 2] = HEAP32[$317 + 8 >> 2];
                 HEAP32[$654 + 12 >> 2] = HEAP32[$317 + 12 >> 2];
                 __THREW__ = 0;
                 $655 = invoke_iiii(30, $651 | 0, $35 | 0, 36488) | 0;
                 $656 = __THREW__;
                 __THREW__ = 0;
                 if ($656 & 1) {
                  $776 = ___cxa_find_matching_catch() | 0;
                  $777 = tempRet0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($35);
                  $$9 = $776;
                  $$923 = $777;
                  break L349;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($35);
                 $658 = HEAP32[$286 >> 2] | 0;
                 __THREW__ = 0;
                 invoke_vii(40, $36 | 0, $l | 0);
                 $659 = __THREW__;
                 __THREW__ = 0;
                 if ($659 & 1) {
                  label = 225;
                  break L349;
                 }
                 $661 = $36 + 12 | 0;
                 HEAP32[$661 + 0 >> 2] = HEAP32[$317 + 0 >> 2];
                 HEAP32[$661 + 4 >> 2] = HEAP32[$317 + 4 >> 2];
                 HEAP32[$661 + 8 >> 2] = HEAP32[$317 + 8 >> 2];
                 HEAP32[$661 + 12 >> 2] = HEAP32[$317 + 12 >> 2];
                 __THREW__ = 0;
                 $662 = invoke_ii(67, 56) | 0;
                 $663 = __THREW__;
                 __THREW__ = 0;
                 do if ($663 & 1) label = 234; else {
                  HEAP32[$662 >> 2] = 34168;
                  __THREW__ = 0;
                  invoke_vii(40, $662 + 4 | 0, $36 | 0);
                  $666 = __THREW__;
                  __THREW__ = 0;
                  if ($666 & 1) {
                   $686 = ___cxa_find_matching_catch() | 0;
                   $687 = tempRet0;
                   __ZdlPv($662);
                   $eh$lpad$body227$index57Z2D = $687;
                   $eh$lpad$body227$indexZ2D = $686;
                   break;
                  }
                  $668 = $662 + 16 | 0;
                  HEAP32[$668 + 0 >> 2] = HEAP32[$661 + 0 >> 2];
                  HEAP32[$668 + 4 >> 2] = HEAP32[$661 + 4 >> 2];
                  HEAP32[$668 + 8 >> 2] = HEAP32[$661 + 8 >> 2];
                  HEAP32[$668 + 12 >> 2] = HEAP32[$661 + 12 >> 2];
                  HEAP32[$662 + 32 >> 2] = 9;
                  HEAP32[$662 + 36 >> 2] = 0;
                  HEAP32[$662 + 40 >> 2] = 0;
                  HEAP32[$662 + 44 >> 2] = 0;
                  HEAP32[$662 >> 2] = 36360;
                  HEAP32[$662 + 48 >> 2] = $336;
                  HEAP32[$662 + 52 >> 2] = $655;
                  HEAP32[$13 >> 2] = $662;
                  $675 = $658 + 16 | 0;
                  $676 = HEAP32[$675 >> 2] | 0;
                  if ($676 >>> 0 < (HEAP32[$658 + 20 >> 2] | 0) >>> 0) {
                   if (!$676) $682 = 0; else {
                    HEAP32[$676 >> 2] = $662;
                    $682 = HEAP32[$675 >> 2] | 0;
                   }
                   HEAP32[$675 >> 2] = $682 + 4;
                  } else {
                   __THREW__ = 0;
                   invoke_vii(51, $658 + 12 | 0, $13 | 0);
                   $684 = __THREW__;
                   __THREW__ = 0;
                   if ($684 & 1) {
                    label = 234;
                    break;
                   }
                  }
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($36);
                  __THREW__ = 0;
                  $688 = invoke_ii(67, 12) | 0;
                  $689 = __THREW__;
                  __THREW__ = 0;
                  if ($689 & 1) {
                   $692 = ___cxa_find_matching_catch() | 0;
                   $eh$lpad$body243$index52Z2D = tempRet0;
                   $eh$lpad$body243$indexZ2D = $692;
                   label = 226;
                   break L349;
                  }
                  $691 = ($688 | 0) == 0;
                  if ($691) $1868 = 0; else {
                   HEAP32[$688 >> 2] = $640;
                   $1868 = $688;
                  }
                  HEAP32[$1868 + 4 >> 2] = $400;
                  HEAP32[$1868 + 8 >> 2] = $415;
                  $719 = $1868 + 12 | 0;
                  $750 = HEAP32[$286 >> 2] | 0;
                  __THREW__ = 0;
                  invoke_vii(40, $37 | 0, $70 | 0);
                  $1870 = __THREW__;
                  __THREW__ = 0;
                  if ($1870 & 1) {
                   $780 = ___cxa_find_matching_catch() | 0;
                   $$8 = $780;
                   $$822 = tempRet0;
                  } else {
                   $696 = $76;
                   $701 = HEAP32[$696 + 4 >> 2] | 0;
                   $702 = $37 + 12 | 0;
                   HEAP32[$702 >> 2] = HEAP32[$696 >> 2];
                   HEAP32[$702 + 4 >> 2] = $701;
                   $707 = $last + 36 | 0;
                   $712 = HEAP32[$707 + 4 >> 2] | 0;
                   $713 = $37 + 20 | 0;
                   HEAP32[$713 >> 2] = HEAP32[$707 >> 2];
                   HEAP32[$713 + 4 >> 2] = $712;
                   HEAP32[$38 >> 2] = 0;
                   $717 = $38 + 4 | 0;
                   HEAP32[$717 >> 2] = 0;
                   $718 = $38 + 8 | 0;
                   HEAP32[$718 >> 2] = 0;
                   $722 = $719 - $688 | 0;
                   $723 = $722 >> 2;
                   L410 : do if (!$723) label = 217; else {
                    if ($723 >>> 0 > 1073741823) {
                     __THREW__ = 0;
                     invoke_vi(181, $38 | 0);
                     $726 = __THREW__;
                     __THREW__ = 0;
                     if (!($726 & 1)) label = 208;
                    } else label = 208;
                    do if ((label | 0) == 208) {
                     __THREW__ = 0;
                     $728 = invoke_ii(67, $722 | 0) | 0;
                     $729 = __THREW__;
                     __THREW__ = 0;
                     if ($729 & 1) break;
                     HEAP32[$717 >> 2] = $728;
                     HEAP32[$38 >> 2] = $728;
                     HEAP32[$718 >> 2] = $728 + ($723 << 2);
                     if (($688 | 0) == ($719 | 0)) {
                      label = 217;
                      break L410;
                     } else {
                      $$01$i$i248 = $688;
                      $733 = $728;
                     }
                     while (1) {
                      if (!$733) $737 = 0; else {
                       HEAP32[$733 >> 2] = HEAP32[$$01$i$i248 >> 2];
                       $737 = HEAP32[$717 >> 2] | 0;
                      }
                      $733 = $737 + 4 | 0;
                      HEAP32[$717 >> 2] = $733;
                      $$01$i$i248 = $$01$i$i248 + 4 | 0;
                      if (($$01$i$i248 | 0) == ($719 | 0)) {
                       label = 217;
                       break L410;
                      }
                     }
                    } while (0);
                    $740 = ___cxa_find_matching_catch() | 0;
                    $741 = tempRet0;
                    $742 = HEAP32[$38 >> 2] | 0;
                    if ($742) {
                     $744 = HEAP32[$717 >> 2] | 0;
                     if (($744 | 0) != ($742 | 0)) HEAP32[$717 >> 2] = $744 + (~(($744 + -4 - $742 | 0) >>> 2) << 2);
                     __ZdlPv($742);
                    }
                    $$7 = $740;
                    $$721 = $741;
                   } while (0);
                   do if ((label | 0) == 217) {
                    __THREW__ = 0;
                    $751 = invoke_iiiii(7, $750 | 0, $37 | 0, $662 | 0, $38 | 0) | 0;
                    $752 = __THREW__;
                    __THREW__ = 0;
                    if ($752 & 1) {
                     $782 = ___cxa_find_matching_catch() | 0;
                     $783 = tempRet0;
                     $784 = HEAP32[$38 >> 2] | 0;
                     if (!$784) {
                      $$7 = $782;
                      $$721 = $783;
                      break;
                     }
                     $786 = HEAP32[$717 >> 2] | 0;
                     if (($786 | 0) != ($784 | 0)) HEAP32[$717 >> 2] = $786 + (~(($786 + -4 - $784 | 0) >>> 2) << 2);
                     __ZdlPv($784);
                     $$7 = $782;
                     $$721 = $783;
                     break;
                    }
                    $754 = HEAP32[$38 >> 2] | 0;
                    if ($754) {
                     $756 = HEAP32[$717 >> 2] | 0;
                     if (($756 | 0) != ($754 | 0)) HEAP32[$717 >> 2] = $756 + (~(($756 + -4 - $754 | 0) >>> 2) << 2);
                     __ZdlPv($754);
                    }
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($37);
                    if (!$691) __ZdlPv($688);
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($last + 16 | 0);
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($last + 4 | 0);
                    $$pn = $751;
                    label = 266;
                    break L345;
                   } while (0);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($37);
                   $$8 = $$7;
                   $$822 = $$721;
                  }
                  if ($691) {
                   $$9 = $$8;
                   $$923 = $$822;
                   break L349;
                  }
                  __ZdlPv($688);
                  $$9 = $$8;
                  $$923 = $$822;
                  break L349;
                 } while (0);
                 if ((label | 0) == 234) {
                  $778 = ___cxa_find_matching_catch() | 0;
                  $eh$lpad$body227$index57Z2D = tempRet0;
                  $eh$lpad$body227$indexZ2D = $778;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($36);
                 $$9 = $eh$lpad$body227$indexZ2D;
                 $$923 = $eh$lpad$body227$index57Z2D;
                 break L349;
                } while (0);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($33);
                $$9 = $$6;
                $$923 = $$620;
               } while (0);
               if ((label | 0) == 225) {
                $764 = ___cxa_find_matching_catch() | 0;
                $eh$lpad$body243$index52Z2D = tempRet0;
                $eh$lpad$body243$indexZ2D = $764;
                label = 226;
               }
               if ((label | 0) == 226) {
                $$9 = $eh$lpad$body243$indexZ2D;
                $$923 = $eh$lpad$body243$index52Z2D;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($last + 16 | 0);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($last + 4 | 0);
               $$1210 = $$9;
               $$1226 = $$923;
              } else if (($447 | 0) == 3) {
               $448 = HEAP32[$286 >> 2] | 0;
               __THREW__ = 0;
               invoke_vii(40, $29 | 0, $l | 0);
               $449 = __THREW__;
               __THREW__ = 0;
               if ($449 & 1) {
                label = 156;
                break;
               }
               $451 = $29 + 12 | 0;
               HEAP32[$451 + 0 >> 2] = HEAP32[$317 + 0 >> 2];
               HEAP32[$451 + 4 >> 2] = HEAP32[$317 + 4 >> 2];
               HEAP32[$451 + 8 >> 2] = HEAP32[$317 + 8 >> 2];
               HEAP32[$451 + 12 >> 2] = HEAP32[$317 + 12 >> 2];
               __THREW__ = 0;
               $452 = invoke_iiii(30, $448 | 0, $29 | 0, 36480) | 0;
               $453 = __THREW__;
               __THREW__ = 0;
               if ($453 & 1) {
                $581 = ___cxa_find_matching_catch() | 0;
                $582 = tempRet0;
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
                $$1210 = $581;
                $$1226 = $582;
                break;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
               $455 = HEAP32[$286 >> 2] | 0;
               __THREW__ = 0;
               invoke_vii(40, $30 | 0, $l | 0);
               $456 = __THREW__;
               __THREW__ = 0;
               if ($456 & 1) {
                label = 156;
                break;
               }
               $458 = $30 + 12 | 0;
               HEAP32[$458 + 0 >> 2] = HEAP32[$317 + 0 >> 2];
               HEAP32[$458 + 4 >> 2] = HEAP32[$317 + 4 >> 2];
               HEAP32[$458 + 8 >> 2] = HEAP32[$317 + 8 >> 2];
               HEAP32[$458 + 12 >> 2] = HEAP32[$317 + 12 >> 2];
               __THREW__ = 0;
               $459 = invoke_ii(67, 56) | 0;
               $460 = __THREW__;
               __THREW__ = 0;
               do if ($460 & 1) label = 159; else {
                HEAP32[$459 >> 2] = 34168;
                __THREW__ = 0;
                invoke_vii(40, $459 + 4 | 0, $30 | 0);
                $463 = __THREW__;
                __THREW__ = 0;
                if ($463 & 1) {
                 $483 = ___cxa_find_matching_catch() | 0;
                 $484 = tempRet0;
                 __ZdlPv($459);
                 $eh$lpad$body139$index47Z2D = $484;
                 $eh$lpad$body139$indexZ2D = $483;
                 break;
                }
                $465 = $459 + 16 | 0;
                HEAP32[$465 + 0 >> 2] = HEAP32[$458 + 0 >> 2];
                HEAP32[$465 + 4 >> 2] = HEAP32[$458 + 4 >> 2];
                HEAP32[$465 + 8 >> 2] = HEAP32[$458 + 8 >> 2];
                HEAP32[$465 + 12 >> 2] = HEAP32[$458 + 12 >> 2];
                HEAP32[$459 + 32 >> 2] = 9;
                HEAP32[$459 + 36 >> 2] = 0;
                HEAP32[$459 + 40 >> 2] = 0;
                HEAP32[$459 + 44 >> 2] = 0;
                HEAP32[$459 >> 2] = 36360;
                HEAP32[$459 + 48 >> 2] = $336;
                HEAP32[$459 + 52 >> 2] = $452;
                HEAP32[$14 >> 2] = $459;
                $472 = $455 + 16 | 0;
                $473 = HEAP32[$472 >> 2] | 0;
                if ($473 >>> 0 < (HEAP32[$455 + 20 >> 2] | 0) >>> 0) {
                 if (!$473) $479 = 0; else {
                  HEAP32[$473 >> 2] = $459;
                  $479 = HEAP32[$472 >> 2] | 0;
                 }
                 HEAP32[$472 >> 2] = $479 + 4;
                } else {
                 __THREW__ = 0;
                 invoke_vii(51, $455 + 12 | 0, $14 | 0);
                 $481 = __THREW__;
                 __THREW__ = 0;
                 if ($481 & 1) {
                  label = 159;
                  break;
                 }
                }
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($30);
                __THREW__ = 0;
                $485 = invoke_ii(67, 8) | 0;
                $486 = __THREW__;
                __THREW__ = 0;
                if ($486 & 1) {
                 $489 = ___cxa_find_matching_catch() | 0;
                 $eh$lpad$body151$index41Z2D = tempRet0;
                 $eh$lpad$body151$indexZ2D = $489;
                 label = 157;
                 break L345;
                }
                $488 = ($485 | 0) == 0;
                if ($488) $1864 = 0; else {
                 HEAP32[$485 >> 2] = $400;
                 $1864 = $485;
                }
                HEAP32[$1864 + 4 >> 2] = $415;
                $516 = $1864 + 8 | 0;
                $547 = HEAP32[$286 >> 2] | 0;
                __THREW__ = 0;
                invoke_vii(40, $31 | 0, $70 | 0);
                $1865 = __THREW__;
                __THREW__ = 0;
                if ($1865 & 1) {
                 $585 = ___cxa_find_matching_catch() | 0;
                 $$5 = $585;
                 $$519 = tempRet0;
                } else {
                 $493 = $76;
                 $498 = HEAP32[$493 + 4 >> 2] | 0;
                 $499 = $31 + 12 | 0;
                 HEAP32[$499 >> 2] = HEAP32[$493 >> 2];
                 HEAP32[$499 + 4 >> 2] = $498;
                 $504 = $maybe_if + 36 | 0;
                 $509 = HEAP32[$504 + 4 >> 2] | 0;
                 $510 = $31 + 20 | 0;
                 HEAP32[$510 >> 2] = HEAP32[$504 >> 2];
                 HEAP32[$510 + 4 >> 2] = $509;
                 HEAP32[$32 >> 2] = 0;
                 $514 = $32 + 4 | 0;
                 HEAP32[$514 >> 2] = 0;
                 $515 = $32 + 8 | 0;
                 HEAP32[$515 >> 2] = 0;
                 $519 = $516 - $485 | 0;
                 $520 = $519 >> 2;
                 L516 : do if (!$520) label = 133; else {
                  if ($520 >>> 0 > 1073741823) {
                   __THREW__ = 0;
                   invoke_vi(181, $32 | 0);
                   $523 = __THREW__;
                   __THREW__ = 0;
                   if (!($523 & 1)) label = 124;
                  } else label = 124;
                  do if ((label | 0) == 124) {
                   __THREW__ = 0;
                   $525 = invoke_ii(67, $519 | 0) | 0;
                   $526 = __THREW__;
                   __THREW__ = 0;
                   if ($526 & 1) break;
                   HEAP32[$514 >> 2] = $525;
                   HEAP32[$32 >> 2] = $525;
                   HEAP32[$515 >> 2] = $525 + ($520 << 2);
                   if (($485 | 0) == ($516 | 0)) {
                    label = 133;
                    break L516;
                   } else {
                    $$01$i$i155 = $485;
                    $530 = $525;
                   }
                   while (1) {
                    if (!$530) $534 = 0; else {
                     HEAP32[$530 >> 2] = HEAP32[$$01$i$i155 >> 2];
                     $534 = HEAP32[$514 >> 2] | 0;
                    }
                    $530 = $534 + 4 | 0;
                    HEAP32[$514 >> 2] = $530;
                    $$01$i$i155 = $$01$i$i155 + 4 | 0;
                    if (($$01$i$i155 | 0) == ($516 | 0)) {
                     label = 133;
                     break L516;
                    }
                   }
                  } while (0);
                  $537 = ___cxa_find_matching_catch() | 0;
                  $538 = tempRet0;
                  $539 = HEAP32[$32 >> 2] | 0;
                  if ($539) {
                   $541 = HEAP32[$514 >> 2] | 0;
                   if (($541 | 0) != ($539 | 0)) HEAP32[$514 >> 2] = $541 + (~(($541 + -4 - $539 | 0) >>> 2) << 2);
                   __ZdlPv($539);
                  }
                  $$4 = $537;
                  $$418 = $538;
                 } while (0);
                 do if ((label | 0) == 133) {
                  __THREW__ = 0;
                  $548 = invoke_iiiii(7, $547 | 0, $31 | 0, $459 | 0, $32 | 0) | 0;
                  $549 = __THREW__;
                  __THREW__ = 0;
                  if ($549 & 1) {
                   $587 = ___cxa_find_matching_catch() | 0;
                   $588 = tempRet0;
                   $589 = HEAP32[$32 >> 2] | 0;
                   if (!$589) {
                    $$4 = $587;
                    $$418 = $588;
                    break;
                   }
                   $591 = HEAP32[$514 >> 2] | 0;
                   if (($591 | 0) != ($589 | 0)) HEAP32[$514 >> 2] = $591 + (~(($591 + -4 - $589 | 0) >>> 2) << 2);
                   __ZdlPv($589);
                   $$4 = $587;
                   $$418 = $588;
                   break;
                  }
                  $551 = HEAP32[$32 >> 2] | 0;
                  if ($551) {
                   $553 = HEAP32[$514 >> 2] | 0;
                   if (($553 | 0) != ($551 | 0)) HEAP32[$514 >> 2] = $553 + (~(($553 + -4 - $551 | 0) >>> 2) << 2);
                   __ZdlPv($551);
                  }
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($31);
                  if ($488) {
                   $$pn = $548;
                   label = 266;
                   break L345;
                  }
                  __ZdlPv($485);
                  $$pn = $548;
                  label = 266;
                  break L345;
                 } while (0);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($31);
                 $$5 = $$4;
                 $$519 = $$418;
                }
                if ($488) {
                 $$1210 = $$5;
                 $$1226 = $$519;
                 break L345;
                }
                __ZdlPv($485);
                $$1210 = $$5;
                $$1226 = $$519;
                break L345;
               } while (0);
               if ((label | 0) == 159) {
                $583 = ___cxa_find_matching_catch() | 0;
                $eh$lpad$body139$index47Z2D = tempRet0;
                $eh$lpad$body139$indexZ2D = $583;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($30);
               $$1210 = $eh$lpad$body139$indexZ2D;
               $$1226 = $eh$lpad$body139$index47Z2D;
              } else {
               $794 = $ss + 64 | 0;
               $795 = $ss + 8 | 0;
               HEAP32[$795 >> 2] = 792;
               $796 = $ss + 12 | 0;
               HEAP32[$ss >> 2] = 940;
               HEAP32[$794 >> 2] = 960;
               HEAP32[$ss + 4 >> 2] = 0;
               __THREW__ = 0;
               invoke_vii(41, $ss + 64 | 0, $796 | 0);
               $799 = __THREW__;
               __THREW__ = 0;
               if ($799 & 1) {
                $811 = ___cxa_find_matching_catch() | 0;
                $$0$i292 = tempRet0;
                $$01$i = $811;
               } else {
                HEAP32[$ss + 136 >> 2] = 0;
                HEAP32[$ss + 140 >> 2] = -1;
                HEAP32[$ss >> 2] = 772;
                HEAP32[$794 >> 2] = 812;
                HEAP32[$795 >> 2] = 792;
                __THREW__ = 0;
                invoke_vi(179, $796 | 0);
                $803 = __THREW__;
                __THREW__ = 0;
                do if ($803 & 1) {
                 $813 = ___cxa_find_matching_catch() | 0;
                 $eh$lpad$body$i$index62Z2D = tempRet0;
                 $eh$lpad$body$i$indexZ2D = $813;
                } else {
                 HEAP32[$796 >> 2] = 1104;
                 $805 = $ss + 44 | 0;
                 HEAP32[$805 + 0 >> 2] = 0;
                 HEAP32[$805 + 4 >> 2] = 0;
                 HEAP32[$805 + 8 >> 2] = 0;
                 HEAP32[$805 + 12 >> 2] = 0;
                 HEAP32[$ss + 60 >> 2] = 24;
                 HEAP32[$12 + 0 >> 2] = 0;
                 HEAP32[$12 + 4 >> 2] = 0;
                 HEAP32[$12 + 8 >> 2] = 0;
                 __THREW__ = 0;
                 invoke_vii(42, $796 | 0, $12 | 0);
                 $807 = __THREW__;
                 __THREW__ = 0;
                 if ($807 & 1) {
                  $809 = ___cxa_find_matching_catch() | 0;
                  $810 = tempRet0;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($805);
                  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($796);
                  $eh$lpad$body$i$index62Z2D = $810;
                  $eh$lpad$body$i$indexZ2D = $809;
                  break;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
                 __THREW__ = 0;
                 $816 = invoke_iiii(25, $ss + 8 | 0, 36504, 40) | 0;
                 $817 = __THREW__;
                 __THREW__ = 0;
                 L469 : do if ($817 & 1) label = 261; else {
                  __THREW__ = 0;
                  invoke_vii(52, $816 | 0, $maybe_if | 0);
                  $819 = __THREW__;
                  __THREW__ = 0;
                  if ($819 & 1) {
                   label = 261;
                   break;
                  }
                  $821 = ___cxa_allocate_exception(40) | 0;
                  __THREW__ = 0;
                  invoke_vii(43, $39 | 0, $796 | 0);
                  $822 = __THREW__;
                  __THREW__ = 0;
                  L472 : do if ($822 & 1) {
                   $836 = ___cxa_find_matching_catch() | 0;
                   $$1024553 = tempRet0;
                   $$10554 = $836;
                  } else {
                   __THREW__ = 0;
                   invoke_vii(40, $821 | 0, $240 | 0);
                   $824 = __THREW__;
                   __THREW__ = 0;
                   do if ($824 & 1) $$05 = 1; else {
                    $826 = $821 + 12 | 0;
                    HEAP32[$826 + 0 >> 2] = HEAP32[$141 + 0 >> 2];
                    HEAP32[$826 + 4 >> 2] = HEAP32[$141 + 4 >> 2];
                    HEAP32[$826 + 8 >> 2] = HEAP32[$141 + 8 >> 2];
                    HEAP32[$826 + 12 >> 2] = HEAP32[$141 + 12 >> 2];
                    __THREW__ = 0;
                    invoke_vii(40, $821 + 28 | 0, $39 | 0);
                    $828 = __THREW__;
                    __THREW__ = 0;
                    if ($828 & 1) {
                     $830 = ___cxa_find_matching_catch() | 0;
                     $831 = tempRet0;
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($821);
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($39);
                     $$1024553 = $831;
                     $$10554 = $830;
                     break L472;
                    }
                    __THREW__ = 0;
                    invoke_viii(4, $821 | 0, 48, 178);
                    $832 = __THREW__;
                    __THREW__ = 0;
                    if ($832 & 1) {
                     $$05 = 0;
                     break;
                    }
                   } while (0);
                   $838 = ___cxa_find_matching_catch() | 0;
                   $839 = tempRet0;
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($39);
                   if ($$05) {
                    $$1024553 = $839;
                    $$10554 = $838;
                   } else {
                    $$11 = $838;
                    $$1125 = $839;
                    break L469;
                   }
                  } while (0);
                  ___cxa_free_exception($821 | 0);
                  $$11 = $$10554;
                  $$1125 = $$1024553;
                 } while (0);
                 if ((label | 0) == 261) {
                  $834 = ___cxa_find_matching_catch() | 0;
                  $$11 = $834;
                  $$1125 = tempRet0;
                 }
                 HEAP32[$ss >> 2] = 772;
                 HEAP32[$ss + 64 >> 2] = 812;
                 HEAP32[$795 >> 2] = 792;
                 HEAP32[$796 >> 2] = 1104;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($805);
                 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($796);
                 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($794);
                 $$1210 = $$11;
                 $$1226 = $$1125;
                 break L345;
                } while (0);
                $$0$i292 = $eh$lpad$body$i$index62Z2D;
                $$01$i = $eh$lpad$body$i$indexZ2D;
               }
               __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($794);
               $eh$lpad$body151$index41Z2D = $$0$i292;
               $eh$lpad$body151$indexZ2D = $$01$i;
               label = 157;
              } while (0);
              if ((label | 0) == 156) {
               $579 = ___cxa_find_matching_catch() | 0;
               $eh$lpad$body151$index41Z2D = tempRet0;
               $eh$lpad$body151$indexZ2D = $579;
               label = 157;
              } else if ((label | 0) == 266) {
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($425);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($420);
               if (!$307) __ZdlPv($304);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($id_token + 16 | 0);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($288);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($l);
               $$12 = $$pn;
               label = 372;
               break L90;
              }
              if ((label | 0) == 157) {
               $$1210 = $eh$lpad$body151$indexZ2D;
               $$1226 = $eh$lpad$body151$index41Z2D;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($425);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($420);
              $$13 = $$1210;
              $$1327 = $$1226;
              break L279;
             } while (0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
             $$13 = $$3;
             $$1327 = $$317;
             break L279;
            } while (0);
            if ((label | 0) == 147) {
             $567 = ___cxa_find_matching_catch() | 0;
             $eh$lpad$body98$index34Z2D = tempRet0;
             $eh$lpad$body98$indexZ2D = $567;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
            $$216 = $eh$lpad$body98$index34Z2D;
            $$29 = $eh$lpad$body98$indexZ2D;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($24);
           $$13 = $$29;
           $$1327 = $$216;
          } while (0);
          if ((label | 0) == 144) {
           $563 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body128$index28Z2D = tempRet0;
           $eh$lpad$body128$indexZ2D = $563;
           label = 145;
          }
          if ((label | 0) == 145) {
           $$13 = $eh$lpad$body128$indexZ2D;
           $$1327 = $eh$lpad$body128$index28Z2D;
          }
          if ($307) {
           $$1411 = $$13;
           $$1428 = $$1327;
           break;
          }
          __ZdlPv($304);
          $$1411 = $$13;
          $$1428 = $$1327;
         } while (0);
         if ((label | 0) == 143) {
          $$1411 = $eh$lpad$body84$indexZ2D;
          $$1428 = $eh$lpad$body84$index22Z2D;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($id_token + 16 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($288);
         $$15 = $$1411;
         $$1529 = $$1428;
        }
       } while (0);
       if ((label | 0) == 140) {
        $559 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body79$index16Z2D = tempRet0;
        $eh$lpad$body79$indexZ2D = $559;
        label = 141;
       }
       if ((label | 0) == 141) {
        $$15 = $eh$lpad$body79$indexZ2D;
        $$1529 = $eh$lpad$body79$index16Z2D;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($l);
       $$20 = $$15;
       $$2034 = $$1529;
      }
     }
    } while (0);
    if ((label | 0) == 32) {
     $206 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body60$index10Z2D = tempRet0;
     $eh$lpad$body60$indexZ2D = $206;
     label = 33;
    } else if ((label | 0) == 372) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($135);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($130);
     $$2 = $$12;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    }
    if ((label | 0) == 33) {
     $$20 = $eh$lpad$body60$indexZ2D;
     $$2034 = $eh$lpad$body60$index10Z2D;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($135);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($130);
    $$28 = $$20;
    $$2842 = $$2034;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 12:
  {
   $1148 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $49 | 0, $70 | 0);
   $1149 = __THREW__;
   __THREW__ = 0;
   if ($1149 & 1) label = 20; else {
    $1152 = $49 + 12 | 0;
    $1153 = $76;
    $1158 = HEAP32[$1153 + 4 >> 2] | 0;
    $1159 = $1152;
    HEAP32[$1159 >> 2] = HEAP32[$1153 >> 2];
    HEAP32[$1159 + 4 >> 2] = $1158;
    $1164 = $tok + 36 | 0;
    $1169 = HEAP32[$1164 + 4 >> 2] | 0;
    $1170 = $49 + 20 | 0;
    HEAP32[$1170 >> 2] = HEAP32[$1164 >> 2];
    HEAP32[$1170 + 4 >> 2] = $1169;
    if (!(HEAP8[$67 >> 0] & 1)) $1180 = $67 + 1 | 0; else $1180 = HEAP32[$tok + 12 >> 2] | 0;
    $1181 = +_strtod($1180, 0);
    __THREW__ = 0;
    $1182 = invoke_ii(67, 56) | 0;
    $1183 = __THREW__;
    __THREW__ = 0;
    do if ($1183 & 1) label = 390; else {
     HEAP32[$1182 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1182 + 4 | 0, $49 | 0);
     $1186 = __THREW__;
     __THREW__ = 0;
     if ($1186 & 1) {
      $1205 = ___cxa_find_matching_catch() | 0;
      $1206 = tempRet0;
      __ZdlPv($1182);
      $eh$lpad$body410$index87Z2D = $1206;
      $eh$lpad$body410$indexZ2D = $1205;
      break;
     }
     $1188 = $1182 + 16 | 0;
     HEAP32[$1188 + 0 >> 2] = HEAP32[$1152 + 0 >> 2];
     HEAP32[$1188 + 4 >> 2] = HEAP32[$1152 + 4 >> 2];
     HEAP32[$1188 + 8 >> 2] = HEAP32[$1152 + 8 >> 2];
     HEAP32[$1188 + 12 >> 2] = HEAP32[$1152 + 12 >> 2];
     HEAP32[$1182 + 32 >> 2] = 13;
     HEAP32[$1182 + 36 >> 2] = 0;
     HEAP32[$1182 + 40 >> 2] = 0;
     HEAP32[$1182 + 44 >> 2] = 0;
     HEAP32[$1182 >> 2] = 36728;
     HEAPF64[$1182 + 48 >> 3] = $1181;
     HEAP32[$10 >> 2] = $1182;
     $1194 = $1148 + 16 | 0;
     $1195 = HEAP32[$1194 >> 2] | 0;
     if ($1195 >>> 0 < (HEAP32[$1148 + 20 >> 2] | 0) >>> 0) {
      if (!$1195) $1201 = 0; else {
       HEAP32[$1195 >> 2] = $1182;
       $1201 = HEAP32[$1194 >> 2] | 0;
      }
      HEAP32[$1194 >> 2] = $1201 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1148 + 12 | 0, $10 | 0);
      $1203 = __THREW__;
      __THREW__ = 0;
      if ($1203 & 1) {
       label = 390;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($49);
     $$2 = $1182;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 390) {
     $1207 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body410$index87Z2D = tempRet0;
     $eh$lpad$body410$indexZ2D = $1207;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($49);
    $$28 = $eh$lpad$body410$indexZ2D;
    $$2842 = $eh$lpad$body410$index87Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 17:
  {
   $1246 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $52 | 0, $70 | 0);
   $1247 = __THREW__;
   __THREW__ = 0;
   if ($1247 & 1) label = 20; else {
    $1250 = $52 + 12 | 0;
    $1251 = $76;
    $1256 = HEAP32[$1251 + 4 >> 2] | 0;
    $1257 = $1250;
    HEAP32[$1257 >> 2] = HEAP32[$1251 >> 2];
    HEAP32[$1257 + 4 >> 2] = $1256;
    $1262 = $tok + 36 | 0;
    $1267 = HEAP32[$1262 + 4 >> 2] | 0;
    $1268 = $52 + 20 | 0;
    HEAP32[$1268 >> 2] = HEAP32[$1262 >> 2];
    HEAP32[$1268 + 4 >> 2] = $1267;
    __THREW__ = 0;
    $1272 = invoke_ii(67, 52) | 0;
    $1273 = __THREW__;
    __THREW__ = 0;
    do if ($1273 & 1) label = 409; else {
     HEAP32[$1272 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1272 + 4 | 0, $52 | 0);
     $1276 = __THREW__;
     __THREW__ = 0;
     if ($1276 & 1) {
      $1295 = ___cxa_find_matching_catch() | 0;
      $1296 = tempRet0;
      __ZdlPv($1272);
      $eh$lpad$body420$index92Z2D = $1296;
      $eh$lpad$body420$indexZ2D = $1295;
      break;
     }
     $1278 = $1272 + 16 | 0;
     HEAP32[$1278 + 0 >> 2] = HEAP32[$1250 + 0 >> 2];
     HEAP32[$1278 + 4 >> 2] = HEAP32[$1250 + 4 >> 2];
     HEAP32[$1278 + 8 >> 2] = HEAP32[$1250 + 8 >> 2];
     HEAP32[$1278 + 12 >> 2] = HEAP32[$1250 + 12 >> 2];
     HEAP32[$1272 + 32 >> 2] = 11;
     HEAP32[$1272 + 36 >> 2] = 0;
     HEAP32[$1272 + 40 >> 2] = 0;
     HEAP32[$1272 + 44 >> 2] = 0;
     HEAP32[$1272 >> 2] = 36712;
     HEAP8[$1272 + 48 >> 0] = 0;
     HEAP32[$9 >> 2] = $1272;
     $1284 = $1246 + 16 | 0;
     $1285 = HEAP32[$1284 >> 2] | 0;
     if ($1285 >>> 0 < (HEAP32[$1246 + 20 >> 2] | 0) >>> 0) {
      if (!$1285) $1291 = 0; else {
       HEAP32[$1285 >> 2] = $1272;
       $1291 = HEAP32[$1284 >> 2] | 0;
      }
      HEAP32[$1284 >> 2] = $1291 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1246 + 12 | 0, $9 | 0);
      $1293 = __THREW__;
      __THREW__ = 0;
      if ($1293 & 1) {
       label = 409;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($52);
     $$2 = $1272;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 409) {
     $1297 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body420$index92Z2D = tempRet0;
     $eh$lpad$body420$indexZ2D = $1297;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($52);
    $$28 = $eh$lpad$body420$indexZ2D;
    $$2842 = $eh$lpad$body420$index92Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 25:
  {
   $1354 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $54 | 0, $70 | 0);
   $1355 = __THREW__;
   __THREW__ = 0;
   if ($1355 & 1) label = 20; else {
    $1358 = $54 + 12 | 0;
    $1359 = $76;
    $1364 = HEAP32[$1359 + 4 >> 2] | 0;
    $1365 = $1358;
    HEAP32[$1365 >> 2] = HEAP32[$1359 >> 2];
    HEAP32[$1365 + 4 >> 2] = $1364;
    $1370 = $tok + 36 | 0;
    $1375 = HEAP32[$1370 + 4 >> 2] | 0;
    $1376 = $54 + 20 | 0;
    HEAP32[$1376 >> 2] = HEAP32[$1370 >> 2];
    HEAP32[$1376 + 4 >> 2] = $1375;
    __THREW__ = 0;
    $1380 = invoke_ii(67, 48) | 0;
    $1381 = __THREW__;
    __THREW__ = 0;
    do if ($1381 & 1) label = 433; else {
     HEAP32[$1380 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1380 + 4 | 0, $54 | 0);
     $1384 = __THREW__;
     __THREW__ = 0;
     if ($1384 & 1) {
      $1402 = ___cxa_find_matching_catch() | 0;
      $1403 = tempRet0;
      __ZdlPv($1380);
      $eh$lpad$body437$index102Z2D = $1403;
      $eh$lpad$body437$indexZ2D = $1402;
      break;
     }
     $1386 = $1380 + 16 | 0;
     HEAP32[$1386 + 0 >> 2] = HEAP32[$1358 + 0 >> 2];
     HEAP32[$1386 + 4 >> 2] = HEAP32[$1358 + 4 >> 2];
     HEAP32[$1386 + 8 >> 2] = HEAP32[$1358 + 8 >> 2];
     HEAP32[$1386 + 12 >> 2] = HEAP32[$1358 + 12 >> 2];
     HEAP32[$1380 + 32 >> 2] = 12;
     HEAP32[$1380 + 36 >> 2] = 0;
     HEAP32[$1380 + 40 >> 2] = 0;
     HEAP32[$1380 + 44 >> 2] = 0;
     HEAP32[$1380 >> 2] = 36880;
     HEAP32[$7 >> 2] = $1380;
     $1391 = $1354 + 16 | 0;
     $1392 = HEAP32[$1391 >> 2] | 0;
     if ($1392 >>> 0 < (HEAP32[$1354 + 20 >> 2] | 0) >>> 0) {
      if (!$1392) $1398 = 0; else {
       HEAP32[$1392 >> 2] = $1380;
       $1398 = HEAP32[$1391 >> 2] | 0;
      }
      HEAP32[$1391 >> 2] = $1398 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1354 + 12 | 0, $7 | 0);
      $1400 = __THREW__;
      __THREW__ = 0;
      if ($1400 & 1) {
       label = 433;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($54);
     $$2 = $1380;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 433) {
     $1404 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body437$index102Z2D = tempRet0;
     $eh$lpad$body437$indexZ2D = $1404;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($54);
    $$28 = $eh$lpad$body437$indexZ2D;
    $$2842 = $eh$lpad$body437$index102Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 30:
  {
   $1300 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $53 | 0, $70 | 0);
   $1301 = __THREW__;
   __THREW__ = 0;
   if ($1301 & 1) label = 20; else {
    $1304 = $53 + 12 | 0;
    $1305 = $76;
    $1310 = HEAP32[$1305 + 4 >> 2] | 0;
    $1311 = $1304;
    HEAP32[$1311 >> 2] = HEAP32[$1305 >> 2];
    HEAP32[$1311 + 4 >> 2] = $1310;
    $1316 = $tok + 36 | 0;
    $1321 = HEAP32[$1316 + 4 >> 2] | 0;
    $1322 = $53 + 20 | 0;
    HEAP32[$1322 >> 2] = HEAP32[$1316 >> 2];
    HEAP32[$1322 + 4 >> 2] = $1321;
    __THREW__ = 0;
    $1326 = invoke_ii(67, 52) | 0;
    $1327 = __THREW__;
    __THREW__ = 0;
    do if ($1327 & 1) label = 421; else {
     HEAP32[$1326 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1326 + 4 | 0, $53 | 0);
     $1330 = __THREW__;
     __THREW__ = 0;
     if ($1330 & 1) {
      $1349 = ___cxa_find_matching_catch() | 0;
      $1350 = tempRet0;
      __ZdlPv($1326);
      $eh$lpad$body428$index97Z2D = $1350;
      $eh$lpad$body428$indexZ2D = $1349;
      break;
     }
     $1332 = $1326 + 16 | 0;
     HEAP32[$1332 + 0 >> 2] = HEAP32[$1304 + 0 >> 2];
     HEAP32[$1332 + 4 >> 2] = HEAP32[$1304 + 4 >> 2];
     HEAP32[$1332 + 8 >> 2] = HEAP32[$1304 + 8 >> 2];
     HEAP32[$1332 + 12 >> 2] = HEAP32[$1304 + 12 >> 2];
     HEAP32[$1326 + 32 >> 2] = 11;
     HEAP32[$1326 + 36 >> 2] = 0;
     HEAP32[$1326 + 40 >> 2] = 0;
     HEAP32[$1326 + 44 >> 2] = 0;
     HEAP32[$1326 >> 2] = 36712;
     HEAP8[$1326 + 48 >> 0] = 1;
     HEAP32[$8 >> 2] = $1326;
     $1338 = $1300 + 16 | 0;
     $1339 = HEAP32[$1338 >> 2] | 0;
     if ($1339 >>> 0 < (HEAP32[$1300 + 20 >> 2] | 0) >>> 0) {
      if (!$1339) $1345 = 0; else {
       HEAP32[$1339 >> 2] = $1326;
       $1345 = HEAP32[$1338 >> 2] | 0;
      }
      HEAP32[$1338 >> 2] = $1345 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1300 + 12 | 0, $8 | 0);
      $1347 = __THREW__;
      __THREW__ = 0;
      if ($1347 & 1) {
       label = 421;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($53);
     $$2 = $1326;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 421) {
     $1351 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body428$index97Z2D = tempRet0;
     $eh$lpad$body428$indexZ2D = $1351;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($53);
    $$28 = $eh$lpad$body428$indexZ2D;
    $$2842 = $eh$lpad$body428$index97Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 21:
  {
   __THREW__ = 0;
   invoke_viiii(13, $file | 0, $this | 0, 14, 0);
   $1406 = __THREW__;
   __THREW__ = 0;
   if ($1406 & 1) label = 20; else {
    $1409 = HEAP32[$this + 4 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $55 | 0, $70 | 0);
    $1410 = __THREW__;
    __THREW__ = 0;
    if ($1410 & 1) {
     $1476 = ___cxa_find_matching_catch() | 0;
     $$23 = $1476;
     $$2337 = tempRet0;
     $$pre$phiZ2D = $file + 4 | 0;
    } else {
     $1413 = $55 + 12 | 0;
     $1414 = $76;
     $1419 = HEAP32[$1414 + 4 >> 2] | 0;
     $1420 = $1413;
     HEAP32[$1420 >> 2] = HEAP32[$1414 >> 2];
     HEAP32[$1420 + 4 >> 2] = $1419;
     $1425 = $file + 36 | 0;
     $1430 = HEAP32[$1425 + 4 >> 2] | 0;
     $1431 = $55 + 20 | 0;
     HEAP32[$1431 >> 2] = HEAP32[$1425 >> 2];
     HEAP32[$1431 + 4 >> 2] = $1430;
     $1435 = $file + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $56 | 0, $1435 | 0);
     $1436 = __THREW__;
     __THREW__ = 0;
     if ($1436 & 1) {
      $1478 = ___cxa_find_matching_catch() | 0;
      $$22 = $1478;
      $$2236 = tempRet0;
     } else {
      __THREW__ = 0;
      $1438 = invoke_ii(67, 60) | 0;
      $1439 = __THREW__;
      __THREW__ = 0;
      L692 : do if ($1439 & 1) label = 456; else {
       HEAP32[$1438 >> 2] = 34168;
       $1441 = $1438 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $1441 | 0, $55 | 0);
       $1442 = __THREW__;
       __THREW__ = 0;
       do if ($1442 & 1) {
        $1473 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body521$index107Z2D = tempRet0;
        $eh$lpad$body521$indexZ2D = $1473;
       } else {
        $1444 = $1438 + 16 | 0;
        HEAP32[$1444 + 0 >> 2] = HEAP32[$1413 + 0 >> 2];
        HEAP32[$1444 + 4 >> 2] = HEAP32[$1413 + 4 >> 2];
        HEAP32[$1444 + 8 >> 2] = HEAP32[$1413 + 8 >> 2];
        HEAP32[$1444 + 12 >> 2] = HEAP32[$1413 + 12 >> 2];
        HEAP32[$1438 + 32 >> 2] = 7;
        $1446 = $1438 + 36 | 0;
        HEAP32[$1446 >> 2] = 0;
        $1447 = $1438 + 40 | 0;
        HEAP32[$1447 >> 2] = 0;
        HEAP32[$1438 + 44 >> 2] = 0;
        HEAP32[$1438 >> 2] = 36696;
        __THREW__ = 0;
        invoke_vii(40, $1438 + 48 | 0, $56 | 0);
        $1450 = __THREW__;
        __THREW__ = 0;
        if ($1450 & 1) {
         $1452 = ___cxa_find_matching_catch() | 0;
         $1453 = tempRet0;
         HEAP32[$1438 >> 2] = 34168;
         $1454 = HEAP32[$1446 >> 2] | 0;
         if ($1454) {
          $1456 = HEAP32[$1447 >> 2] | 0;
          if (($1456 | 0) != ($1454 | 0)) HEAP32[$1447 >> 2] = $1456 + (~(($1456 + -4 - $1454 | 0) >>> 2) << 2);
          __ZdlPv($1454);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1441);
         $eh$lpad$body521$index107Z2D = $1453;
         $eh$lpad$body521$indexZ2D = $1452;
         break;
        }
        HEAP32[$6 >> 2] = $1438;
        $1462 = $1409 + 16 | 0;
        $1463 = HEAP32[$1462 >> 2] | 0;
        if ($1463 >>> 0 < (HEAP32[$1409 + 20 >> 2] | 0) >>> 0) {
         if (!$1463) $1469 = 0; else {
          HEAP32[$1463 >> 2] = $1438;
          $1469 = HEAP32[$1462 >> 2] | 0;
         }
         HEAP32[$1462 >> 2] = $1469 + 4;
        } else {
         __THREW__ = 0;
         invoke_vii(51, $1409 + 12 | 0, $6 | 0);
         $1471 = __THREW__;
         __THREW__ = 0;
         if ($1471 & 1) {
          label = 456;
          break L692;
         }
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($56);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($55);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($file + 16 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1435);
        $$2 = $1438;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
        STACKTOP = sp;
        return $$2 | 0;
       } while (0);
       __ZdlPv($1438);
       $eh$lpad$body445$index112Z2D = $eh$lpad$body521$index107Z2D;
       $eh$lpad$body445$indexZ2D = $eh$lpad$body521$indexZ2D;
      } while (0);
      if ((label | 0) == 456) {
       $1480 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body445$index112Z2D = tempRet0;
       $eh$lpad$body445$indexZ2D = $1480;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($56);
      $$22 = $eh$lpad$body445$indexZ2D;
      $$2236 = $eh$lpad$body445$index112Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($55);
     $$23 = $$22;
     $$2337 = $$2236;
     $$pre$phiZ2D = $1435;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($file + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($$pre$phiZ2D);
    $$28 = $$23;
    $$2842 = $$2337;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 6:
  {
   if (!$obj_level) {
    $1561 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $59 | 0, 36600, 26);
    $1562 = __THREW__;
    __THREW__ = 0;
    do if ($1562 & 1) {
     $1574 = ___cxa_find_matching_catch() | 0;
     $$2640561 = tempRet0;
     $$26562 = $1574;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $1561 | 0, $70 | 0);
     $1564 = __THREW__;
     __THREW__ = 0;
     if ($1564 & 1) $$0 = 1; else {
      $1566 = $1561 + 12 | 0;
      HEAP32[$1566 + 0 >> 2] = HEAP32[$76 + 0 >> 2];
      HEAP32[$1566 + 4 >> 2] = HEAP32[$76 + 4 >> 2];
      HEAP32[$1566 + 8 >> 2] = HEAP32[$76 + 8 >> 2];
      HEAP32[$1566 + 12 >> 2] = HEAP32[$76 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1561 + 28 | 0, $59 | 0);
      $1568 = __THREW__;
      __THREW__ = 0;
      if ($1568 & 1) {
       $1570 = ___cxa_find_matching_catch() | 0;
       $1571 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1561);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($59);
       $$2640561 = $1571;
       $$26562 = $1570;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $1561 | 0, 48, 178);
      $1572 = __THREW__;
      __THREW__ = 0;
      if ($1572 & 1) $$0 = 0; else {}
     }
     $1576 = ___cxa_find_matching_catch() | 0;
     $1577 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($59);
     if ($$0) {
      $$2640561 = $1577;
      $$26562 = $1576;
     } else {
      $$28 = $1576;
      $$2842 = $1577;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
      ___resumeException($$28 | 0);
     }
    } while (0);
    ___cxa_free_exception($1561 | 0);
    $$28 = $$26562;
    $$2842 = $$2640561;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   $1578 = $this + 4 | 0;
   $1579 = HEAP32[$1578 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $60 | 0, $70 | 0);
   $1580 = __THREW__;
   __THREW__ = 0;
   if ($1580 & 1) label = 20; else {
    $1583 = $60 + 12 | 0;
    $1584 = $76;
    $1589 = HEAP32[$1584 + 4 >> 2] | 0;
    $1590 = $1583;
    HEAP32[$1590 >> 2] = HEAP32[$1584 >> 2];
    HEAP32[$1590 + 4 >> 2] = $1589;
    $1595 = $tok + 36 | 0;
    $1600 = HEAP32[$1595 + 4 >> 2] | 0;
    $1601 = $60 + 20 | 0;
    HEAP32[$1601 >> 2] = HEAP32[$1595 >> 2];
    HEAP32[$1601 + 4 >> 2] = $1600;
    $1605 = HEAP32[$1578 >> 2] | 0;
    __THREW__ = 0;
    invoke_viii(3, $61 | 0, 35984, 1);
    $1606 = __THREW__;
    __THREW__ = 0;
    if ($1606 & 1) {
     $1649 = ___cxa_find_matching_catch() | 0;
     $$27 = $1649;
     $$2741 = tempRet0;
    } else {
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i464, $1605, $61);
     $1609 = HEAP32[$it$i464 >> 2] | 0;
     do if (($1609 | 0) == ($1605 + 4 | 0)) {
      __THREW__ = 0;
      $1613 = invoke_ii(67, 12) | 0;
      $1614 = __THREW__;
      __THREW__ = 0;
      if ($1614 & 1) label = 513; else {
       __THREW__ = 0;
       invoke_vii(40, $1613 | 0, $61 | 0);
       $1616 = __THREW__;
       __THREW__ = 0;
       if ($1616 & 1) {
        $1621 = ___cxa_find_matching_catch() | 0;
        $1622 = tempRet0;
        __ZdlPv($1613);
        $eh$lpad$body471$index128Z2D = $1622;
        $eh$lpad$body471$indexZ2D = $1621;
        break;
       }
       __THREW__ = 0;
       $1618 = invoke_iii(23, $1605 | 0, $61 | 0) | 0;
       $1619 = __THREW__;
       __THREW__ = 0;
       if ($1619 & 1) label = 513; else {
        HEAP32[$1618 >> 2] = $1613;
        $$0$i467 = $1613;
        label = 503;
       }
      }
     } else {
      $$0$i467 = HEAP32[$1609 + 28 >> 2] | 0;
      label = 503;
     } while (0);
     do if ((label | 0) == 503) {
      __THREW__ = 0;
      $1623 = invoke_ii(67, 56) | 0;
      $1624 = __THREW__;
      __THREW__ = 0;
      if ($1624 & 1) label = 513; else {
       HEAP32[$1623 >> 2] = 34168;
       __THREW__ = 0;
       invoke_vii(40, $1623 + 4 | 0, $60 | 0);
       $1627 = __THREW__;
       __THREW__ = 0;
       if ($1627 & 1) {
        $1647 = ___cxa_find_matching_catch() | 0;
        $1648 = tempRet0;
        __ZdlPv($1623);
        $eh$lpad$body471$index128Z2D = $1648;
        $eh$lpad$body471$indexZ2D = $1647;
        break;
       }
       $1629 = $1623 + 16 | 0;
       HEAP32[$1629 + 0 >> 2] = HEAP32[$1583 + 0 >> 2];
       HEAP32[$1629 + 4 >> 2] = HEAP32[$1583 + 4 >> 2];
       HEAP32[$1629 + 8 >> 2] = HEAP32[$1583 + 8 >> 2];
       HEAP32[$1629 + 12 >> 2] = HEAP32[$1583 + 12 >> 2];
       HEAP32[$1623 + 32 >> 2] = 20;
       HEAP32[$1623 + 36 >> 2] = 0;
       HEAP32[$1623 + 40 >> 2] = 0;
       HEAP32[$1623 + 44 >> 2] = 0;
       HEAP32[$1623 >> 2] = 35960;
       HEAP32[$1623 + 48 >> 2] = $$0$i467;
       HEAP32[$1623 + 52 >> 2] = $$0$i467;
       HEAP32[$4 >> 2] = $1623;
       $1636 = $1579 + 16 | 0;
       $1637 = HEAP32[$1636 >> 2] | 0;
       if ($1637 >>> 0 < (HEAP32[$1579 + 20 >> 2] | 0) >>> 0) {
        if (!$1637) $1643 = 0; else {
         HEAP32[$1637 >> 2] = $1623;
         $1643 = HEAP32[$1636 >> 2] | 0;
        }
        HEAP32[$1636 >> 2] = $1643 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $1579 + 12 | 0, $4 | 0);
        $1645 = __THREW__;
        __THREW__ = 0;
        if ($1645 & 1) {
         label = 513;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($61);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($60);
       $$2 = $1623;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
       STACKTOP = sp;
       return $$2 | 0;
      }
     } while (0);
     if ((label | 0) == 513) {
      $1651 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body471$index128Z2D = tempRet0;
      $eh$lpad$body471$indexZ2D = $1651;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($61);
     $$27 = $eh$lpad$body471$indexZ2D;
     $$2741 = $eh$lpad$body471$index128Z2D;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($60);
    $$28 = $$27;
    $$2842 = $$2741;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 11:
  {
   $1653 = $this + 4 | 0;
   $1654 = HEAP32[$1653 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $62 | 0, $70 | 0);
   $1655 = __THREW__;
   __THREW__ = 0;
   if ($1655 & 1) label = 20; else {
    $1658 = $62 + 12 | 0;
    $1659 = $76;
    $1664 = HEAP32[$1659 + 4 >> 2] | 0;
    $1665 = $1658;
    HEAP32[$1665 >> 2] = HEAP32[$1659 >> 2];
    HEAP32[$1665 + 4 >> 2] = $1664;
    $1670 = $tok + 36 | 0;
    $1675 = HEAP32[$1670 + 4 >> 2] | 0;
    $1676 = $62 + 20 | 0;
    HEAP32[$1676 >> 2] = HEAP32[$1670 >> 2];
    HEAP32[$1676 + 4 >> 2] = $1675;
    $1680 = HEAP32[$1653 >> 2] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i482, $1680, $67);
    $1682 = HEAP32[$it$i482 >> 2] | 0;
    do if (($1682 | 0) == ($1680 + 4 | 0)) {
     __THREW__ = 0;
     $1686 = invoke_ii(67, 12) | 0;
     $1687 = __THREW__;
     __THREW__ = 0;
     if ($1687 & 1) label = 533; else {
      __THREW__ = 0;
      invoke_vii(40, $1686 | 0, $67 | 0);
      $1689 = __THREW__;
      __THREW__ = 0;
      if ($1689 & 1) {
       $1694 = ___cxa_find_matching_catch() | 0;
       $1695 = tempRet0;
       __ZdlPv($1686);
       $eh$lpad$body489$index135Z2D = $1695;
       $eh$lpad$body489$indexZ2D = $1694;
       break;
      }
      __THREW__ = 0;
      $1691 = invoke_iii(23, $1680 | 0, $67 | 0) | 0;
      $1692 = __THREW__;
      __THREW__ = 0;
      if ($1692 & 1) label = 533; else {
       HEAP32[$1691 >> 2] = $1686;
       $$0$i485 = $1686;
       label = 524;
      }
     }
    } else {
     $$0$i485 = HEAP32[$1682 + 28 >> 2] | 0;
     label = 524;
    } while (0);
    do if ((label | 0) == 524) {
     __THREW__ = 0;
     $1696 = invoke_ii(67, 56) | 0;
     $1697 = __THREW__;
     __THREW__ = 0;
     if ($1697 & 1) label = 533; else {
      HEAP32[$1696 >> 2] = 34168;
      __THREW__ = 0;
      invoke_vii(40, $1696 + 4 | 0, $62 | 0);
      $1700 = __THREW__;
      __THREW__ = 0;
      if ($1700 & 1) {
       $1720 = ___cxa_find_matching_catch() | 0;
       $1721 = tempRet0;
       __ZdlPv($1696);
       $eh$lpad$body489$index135Z2D = $1721;
       $eh$lpad$body489$indexZ2D = $1720;
       break;
      }
      $1702 = $1696 + 16 | 0;
      HEAP32[$1702 + 0 >> 2] = HEAP32[$1658 + 0 >> 2];
      HEAP32[$1702 + 4 >> 2] = HEAP32[$1658 + 4 >> 2];
      HEAP32[$1702 + 8 >> 2] = HEAP32[$1658 + 8 >> 2];
      HEAP32[$1702 + 12 >> 2] = HEAP32[$1658 + 12 >> 2];
      HEAP32[$1696 + 32 >> 2] = 20;
      HEAP32[$1696 + 36 >> 2] = 0;
      HEAP32[$1696 + 40 >> 2] = 0;
      HEAP32[$1696 + 44 >> 2] = 0;
      HEAP32[$1696 >> 2] = 35960;
      HEAP32[$1696 + 48 >> 2] = $$0$i485;
      HEAP32[$1696 + 52 >> 2] = $$0$i485;
      HEAP32[$3 >> 2] = $1696;
      $1709 = $1654 + 16 | 0;
      $1710 = HEAP32[$1709 >> 2] | 0;
      if ($1710 >>> 0 < (HEAP32[$1654 + 20 >> 2] | 0) >>> 0) {
       if (!$1710) $1716 = 0; else {
        HEAP32[$1710 >> 2] = $1696;
        $1716 = HEAP32[$1709 >> 2] | 0;
       }
       HEAP32[$1709 >> 2] = $1716 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1654 + 12 | 0, $3 | 0);
       $1718 = __THREW__;
       __THREW__ = 0;
       if ($1718 & 1) {
        label = 533;
        break;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($62);
      $$2 = $1696;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
      STACKTOP = sp;
      return $$2 | 0;
     }
    } while (0);
    if ((label | 0) == 533) {
     $1722 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body489$index135Z2D = tempRet0;
     $eh$lpad$body489$indexZ2D = $1722;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($62);
    $$28 = $eh$lpad$body489$indexZ2D;
    $$2842 = $eh$lpad$body489$index135Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 29:
  {
   $1778 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $64 | 0, $70 | 0);
   $1779 = __THREW__;
   __THREW__ = 0;
   if ($1779 & 1) label = 20; else {
    $1782 = $64 + 12 | 0;
    $1783 = $76;
    $1788 = HEAP32[$1783 + 4 >> 2] | 0;
    $1789 = $1782;
    HEAP32[$1789 >> 2] = HEAP32[$1783 >> 2];
    HEAP32[$1789 + 4 >> 2] = $1788;
    $1794 = $tok + 36 | 0;
    $1799 = HEAP32[$1794 + 4 >> 2] | 0;
    $1800 = $64 + 20 | 0;
    HEAP32[$1800 >> 2] = HEAP32[$1794 >> 2];
    HEAP32[$1800 + 4 >> 2] = $1799;
    __THREW__ = 0;
    $1804 = invoke_ii(67, 48) | 0;
    $1805 = __THREW__;
    __THREW__ = 0;
    do if ($1805 & 1) label = 557; else {
     HEAP32[$1804 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1804 + 4 | 0, $64 | 0);
     $1808 = __THREW__;
     __THREW__ = 0;
     if ($1808 & 1) {
      $1826 = ___cxa_find_matching_catch() | 0;
      $1827 = tempRet0;
      __ZdlPv($1804);
      $eh$lpad$body513$index146Z2D = $1827;
      $eh$lpad$body513$indexZ2D = $1826;
      break;
     }
     $1810 = $1804 + 16 | 0;
     HEAP32[$1810 + 0 >> 2] = HEAP32[$1782 + 0 >> 2];
     HEAP32[$1810 + 4 >> 2] = HEAP32[$1782 + 4 >> 2];
     HEAP32[$1810 + 8 >> 2] = HEAP32[$1782 + 8 >> 2];
     HEAP32[$1810 + 12 >> 2] = HEAP32[$1782 + 12 >> 2];
     HEAP32[$1804 + 32 >> 2] = 18;
     HEAP32[$1804 + 36 >> 2] = 0;
     HEAP32[$1804 + 40 >> 2] = 0;
     HEAP32[$1804 + 44 >> 2] = 0;
     HEAP32[$1804 >> 2] = 36344;
     HEAP32[$1 >> 2] = $1804;
     $1815 = $1778 + 16 | 0;
     $1816 = HEAP32[$1815 >> 2] | 0;
     if ($1816 >>> 0 < (HEAP32[$1778 + 20 >> 2] | 0) >>> 0) {
      if (!$1816) $1822 = 0; else {
       HEAP32[$1816 >> 2] = $1804;
       $1822 = HEAP32[$1815 >> 2] | 0;
      }
      HEAP32[$1815 >> 2] = $1822 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1778 + 12 | 0, $1 | 0);
      $1824 = __THREW__;
      __THREW__ = 0;
      if ($1824 & 1) {
       label = 557;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($64);
     $$2 = $1804;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 557) {
     $1828 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body513$index146Z2D = tempRet0;
     $eh$lpad$body513$indexZ2D = $1828;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($64);
    $$28 = $eh$lpad$body513$indexZ2D;
    $$2842 = $eh$lpad$body513$index146Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 28:
  {
   $1725 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $63 | 0, $70 | 0);
   $1726 = __THREW__;
   __THREW__ = 0;
   if ($1726 & 1) label = 20; else {
    $1729 = $63 + 12 | 0;
    $1730 = $76;
    $1735 = HEAP32[$1730 + 4 >> 2] | 0;
    $1736 = $1729;
    HEAP32[$1736 >> 2] = HEAP32[$1730 >> 2];
    HEAP32[$1736 + 4 >> 2] = $1735;
    $1741 = $tok + 36 | 0;
    $1746 = HEAP32[$1741 + 4 >> 2] | 0;
    $1747 = $63 + 20 | 0;
    HEAP32[$1747 >> 2] = HEAP32[$1741 >> 2];
    HEAP32[$1747 + 4 >> 2] = $1746;
    __THREW__ = 0;
    $1751 = invoke_ii(67, 48) | 0;
    $1752 = __THREW__;
    __THREW__ = 0;
    do if ($1752 & 1) label = 545; else {
     HEAP32[$1751 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1751 + 4 | 0, $63 | 0);
     $1755 = __THREW__;
     __THREW__ = 0;
     if ($1755 & 1) {
      $1773 = ___cxa_find_matching_catch() | 0;
      $1774 = tempRet0;
      __ZdlPv($1751);
      $eh$lpad$body505$index141Z2D = $1774;
      $eh$lpad$body505$indexZ2D = $1773;
      break;
     }
     $1757 = $1751 + 16 | 0;
     HEAP32[$1757 + 0 >> 2] = HEAP32[$1729 + 0 >> 2];
     HEAP32[$1757 + 4 >> 2] = HEAP32[$1729 + 4 >> 2];
     HEAP32[$1757 + 8 >> 2] = HEAP32[$1729 + 8 >> 2];
     HEAP32[$1757 + 12 >> 2] = HEAP32[$1729 + 12 >> 2];
     HEAP32[$1751 + 32 >> 2] = 17;
     HEAP32[$1751 + 36 >> 2] = 0;
     HEAP32[$1751 + 40 >> 2] = 0;
     HEAP32[$1751 + 44 >> 2] = 0;
     HEAP32[$1751 >> 2] = 36408;
     HEAP32[$2 >> 2] = $1751;
     $1762 = $1725 + 16 | 0;
     $1763 = HEAP32[$1762 >> 2] | 0;
     if ($1763 >>> 0 < (HEAP32[$1725 + 20 >> 2] | 0) >>> 0) {
      if (!$1763) $1769 = 0; else {
       HEAP32[$1763 >> 2] = $1751;
       $1769 = HEAP32[$1762 >> 2] | 0;
      }
      HEAP32[$1762 >> 2] = $1769 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1725 + 12 | 0, $2 | 0);
      $1771 = __THREW__;
      __THREW__ = 0;
      if ($1771 & 1) {
       label = 545;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
     $$2 = $1751;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 545) {
     $1775 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body505$index141Z2D = tempRet0;
     $eh$lpad$body505$indexZ2D = $1775;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
    $$28 = $eh$lpad$body505$indexZ2D;
    $$2842 = $eh$lpad$body505$index141Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 default:
  {
   __THREW__ = 0;
   $1830 = invoke_iiii(25, 41312, 36632, 34) | 0;
   $1831 = __THREW__;
   __THREW__ = 0;
   if ($1831 & 1) label = 20; else {
    __THREW__ = 0;
    $1834 = invoke_ii(69, HEAP32[$tok >> 2] | 0) | 0;
    $1835 = __THREW__;
    __THREW__ = 0;
    if ($1835 & 1) label = 20; else {
     $1837 = _strlen($1834 | 0) | 0;
     __THREW__ = 0;
     invoke_iiii(25, $1830 | 0, $1834 | 0, $1837 | 0) | 0;
     $1838 = __THREW__;
     __THREW__ = 0;
     if ($1838 & 1) label = 20; else {
      __THREW__ = 0;
      invoke_vii(47, $0 | 0, $1830 + (HEAP32[(HEAP32[$1830 >> 2] | 0) + -12 >> 2] | 0) | 0);
      $1844 = __THREW__;
      __THREW__ = 0;
      if ($1844 & 1) label = 20; else {
       __THREW__ = 0;
       $1846 = invoke_iii(22, $0 | 0, 45800) | 0;
       $1847 = __THREW__;
       __THREW__ = 0;
       if (!($1847 & 1)) {
        __THREW__ = 0;
        $1852 = invoke_iii(HEAP32[(HEAP32[$1846 >> 2] | 0) + 28 >> 2] | 0, $1846 | 0, 10) | 0;
        $1853 = __THREW__;
        __THREW__ = 0;
        if (!($1853 & 1)) {
         __ZNSt3__16localeD2Ev($0);
         __THREW__ = 0;
         invoke_iii(27, $1830 | 0, $1852 | 0) | 0;
         $1857 = __THREW__;
         __THREW__ = 0;
         if ($1857 & 1) {
          label = 20;
          break L4;
         }
         __THREW__ = 0;
         invoke_ii(68, $1830 | 0) | 0;
         $1859 = __THREW__;
         __THREW__ = 0;
         if ($1859 & 1) {
          label = 20;
          break L4;
         }
         __THREW__ = 0;
         invoke_v(3);
         $1861 = __THREW__;
         __THREW__ = 0;
         if ($1861 & 1) {
          label = 20;
          break L4;
         }
        }
       }
       $1855 = ___cxa_find_matching_catch() | 0;
       $1856 = tempRet0;
       __ZNSt3__16localeD2Ev($0);
       $eh$lpad$body53$index3Z2D = $1856;
       $eh$lpad$body53$indexZ2D = $1855;
      }
     }
    }
   }
  }
 } while (0);
 if ((label | 0) == 20) {
  $126 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body53$index3Z2D = tempRet0;
  $eh$lpad$body53$indexZ2D = $126;
 }
 $$28 = $eh$lpad$body53$indexZ2D;
 $$2842 = $eh$lpad$body53$index3Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($67);
 ___resumeException($$28 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_16Parser5parseEij($this, $precedence, $obj_level) {
 $this = $this | 0;
 $precedence = $precedence | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i201 = 0, $$0$i233 = 0, $$0$i272 = 0, $$0$i336 = 0, $$0$i450 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i246 = 0, $$01$i$i398 = 0, $$01$i200 = 0, $$01$i232 = 0, $$01$i271 = 0, $$01$i335 = 0, $$02467 = 0, $$03466 = 0, $$042 = 0, $$044 = 0, $$046 = 0, $$046$lpad$bodyZZ2D = 0, $$049 = 0, $$051 = 0, $$1 = 0, $$10 = 0, $$1019 = 0, $$11 = 0, $$110 = 0, $$1120 = 0, $$12 = 0, $$1221 = 0, $$1322479 = 0, $$13480 = 0, $$14 = 0, $$1423 = 0, $$147 = 0, $$15 = 0, $$1524 = 0, $$16 = 0, $$1625 = 0, $$1726483 = 0, $$17484 = 0, $$18 = 0, $$1827 = 0, $$19 = 0, $$1928 = 0, $$2 = 0, $$20 = 0, $$2029 = 0, $$21 = 0, $$211 = 0, $$2130 = 0, $$22 = 0, $$2231 = 0, $$23 = 0, $$2332 = 0, $$24 = 0, $$2433 = 0, $$25 = 0, $$2534 = 0, $$26 = 0, $$2635 = 0, $$27 = 0, $$2736 = 0, $$28 = 0, $$2837 = 0, $$29 = 0, $$2938 = 0, $$3 = 0, $$30 = 0, $$3039 = 0, $$31 = 0, $$312 = 0, $$3140 = 0, $$4 = 0, $$413 = 0, $$514470 = 0, $$5471 = 0, $$6 = 0, $$615 = 0, $$7 = 0, $$716 = 0, $$817474 = 0, $$8475 = 0, $$9 = 0, $$918 = 0, $$byval_copy = 0, $$lcssa823 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $1001 = 0, $1002 = 0, $1008 = 0, $1010 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1016 = 0, $1019 = 0, $1020 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1082 = 0, $1086 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1095 = 0, $1099 = 0, $11 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1106 = 0, $1107 = 0, $1110 = 0, $1114 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $112 = 0, $1120 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1132 = 0, $1136 = 0, $1138 = 0, $1140 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1146 = 0, $1149 = 0, $1150 = 0, $1152 = 0, $1154 = 0, $1156 = 0, $1159 = 0, $1161 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1168 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1182 = 0, $1183 = 0, $1185 = 0, $1187 = 0, $119 = 0, $1190 = 0, $1192 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1199 = 0, $12 = 0, $1201 = 0, $1203 = 0, $1205 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $1211 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1217 = 0, $1219 = 0, $1224 = 0, $1227 = 0, $1231 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1237 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1242 = 0, $1245 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1254 = 0, $1256 = 0, $1257 = 0, $1259 = 0, $1264 = 0, $1265 = 0, $1269 = 0, $1274 = 0, $1275 = 0, $1279 = 0, $1280 = 0, $1283 = 0, $1285 = 0, $129 = 0, $1291 = 0, $1293 = 0, $1294 = 0, $13 = 0, $130 = 0, $1300 = 0, $1302 = 0, $1304 = 0, $1305 = 0, $1310 = 0, $1312 = 0, $1314 = 0, $1315 = 0, $1317 = 0, $1322 = 0, $1323 = 0, $1327 = 0, $1332 = 0, $1333 = 0, $1337 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1342 = 0, $1343 = 0, $1345 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1355 = 0, $1360 = 0, $1361 = 0, $1365 = 0, $1366 = 0, $1369 = 0, $1371 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1385 = 0, $1387 = 0, $1389 = 0, $1390 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1399 = 0, $14 = 0, $140 = 0, $1401 = 0, $1403 = 0, $1404 = 0, $1406 = 0, $1411 = 0, $1412 = 0, $1416 = 0, $1421 = 0, $1422 = 0, $1430 = 0, $1431 = 0, $1434 = 0, $1436 = 0, $1437 = 0, $1440 = 0, $1441 = 0, $1443 = 0, $1447 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1454 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1463 = 0, $1465 = 0, $147 = 0, $1471 = 0, $1473 = 0, $1481 = 0, $1482 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1489 = 0, $1495 = 0, $1497 = 0, $15 = 0, $1503 = 0, $1505 = 0, $1506 = 0, $1508 = 0, $1513 = 0, $1514 = 0, $1518 = 0, $1523 = 0, $1524 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1533 = 0, $1535 = 0, $1543 = 0, $1544 = 0, $155 = 0, $1550 = 0, $1552 = 0, $1554 = 0, $1555 = 0, $1558 = 0, $1562 = 0, $1563 = 0, $1565 = 0, $1566 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1572 = 0, $1576 = 0, $1577 = 0, $1579 = 0, $158 = 0, $1581 = 0, $1582 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $159 = 0, $1590 = 0, $1592 = 0, $1599 = 0, $16 = 0, $1600 = 0, $1606 = 0, $1608 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1615 = 0, $1616 = 0, $1618 = 0, $1619 = 0, $1621 = 0, $1622 = 0, $1625 = 0, $1627 = 0, $163 = 0, $1634 = 0, $1635 = 0, $1641 = 0, $1643 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1654 = 0, $1659 = 0, $1660 = 0, $1664 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1674 = 0, $1677 = 0, $1678 = 0, $1681 = 0, $1683 = 0, $1684 = 0, $1688 = 0, $169 = 0, $1692 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1699 = 0, $17 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1709 = 0, $1711 = 0, $1717 = 0, $172 = 0, $1721 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1729 = 0, $1730 = 0, $1731 = 0, $1733 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1742 = 0, $1744 = 0, $1745 = 0, $1748 = 0, $1753 = 0, $1754 = 0, $1758 = 0, $176 = 0, $1763 = 0, $1764 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1771 = 0, $1772 = 0, $1774 = 0, $178 = 0, $1781 = 0, $1783 = 0, $1784 = 0, $179 = 0, $1790 = 0, $1792 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1799 = 0, $18 = 0, $1800 = 0, $1803 = 0, $1805 = 0, $181 = 0, $1812 = 0, $1813 = 0, $1819 = 0, $1821 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1827 = 0, $183 = 0, $1830 = 0, $1831 = 0, $184 = 0, $186 = 0, $189 = 0, $19 = 0, $194 = 0, $195 = 0, $197 = 0, $2 = 0, $20 = 0, $201 = 0, $202 = 0, $204 = 0, $206 = 0, $208 = 0, $21 = 0, $211 = 0, $213 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $221 = 0, $223 = 0, $225 = 0, $228 = 0, $23 = 0, $230 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $237 = 0, $239 = 0, $24 = 0, $240 = 0, $242 = 0, $245 = 0, $25 = 0, $250 = 0, $251 = 0, $253 = 0, $254 = 0, $255 = 0, $258 = 0, $259 = 0, $26 = 0, $264 = 0, $265 = 0, $27 = 0, $270 = 0, $275 = 0, $276 = 0, $28 = 0, $280 = 0, $281 = 0, $284 = 0, $286 = 0, $29 = 0, $291 = 0, $292 = 0, $298 = 0, $3 = 0, $30 = 0, $300 = 0, $302 = 0, $303 = 0, $304 = 0, $306 = 0, $307 = 0, $31 = 0, $310 = 0, $311 = 0, $316 = 0, $317 = 0, $32 = 0, $322 = 0, $327 = 0, $328 = 0, $33 = 0, $332 = 0, $333 = 0, $336 = 0, $338 = 0, $34 = 0, $346 = 0, $347 = 0, $35 = 0, $353 = 0, $355 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $361 = 0, $363 = 0, $365 = 0, $368 = 0, $37 = 0, $370 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $377 = 0, $379 = 0, $38 = 0, $380 = 0, $382 = 0, $385 = 0, $39 = 0, $390 = 0, $392 = 0, $394 = 0, $397 = 0, $399 = 0, $4 = 0, $40 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $406 = 0, $408 = 0, $409 = 0, $41 = 0, $411 = 0, $414 = 0, $42 = 0, $421 = 0, $423 = 0, $425 = 0, $429 = 0, $43 = 0, $430 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $437 = 0, $438 = 0, $44 = 0, $440 = 0, $442 = 0, $443 = 0, $444 = 0, $446 = 0, $447 = 0, $448 = 0, $45 = 0, $451 = 0, $455 = 0, $457 = 0, $459 = 0, $46 = 0, $461 = 0, $462 = 0, $463 = 0, $465 = 0, $468 = 0, $469 = 0, $47 = 0, $471 = 0, $473 = 0, $474 = 0, $477 = 0, $479 = 0, $48 = 0, $480 = 0, $482 = 0, $484 = 0, $485 = 0, $486 = 0, $488 = 0, $49 = 0, $490 = 0, $492 = 0, $494 = 0, $496 = 0, $497 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $506 = 0, $507 = 0, $51 = 0, $512 = 0, $513 = 0, $517 = 0, $52 = 0, $522 = 0, $523 = 0, $528 = 0, $53 = 0, $533 = 0, $534 = 0, $538 = 0, $539 = 0, $54 = 0, $544 = 0, $545 = 0, $548 = 0, $55 = 0, $550 = 0, $551 = 0, $554 = 0, $555 = 0, $557 = 0, $56 = 0, $561 = 0, $564 = 0, $565 = 0, $566 = 0, $568 = 0, $57 = 0, $574 = 0, $575 = 0, $577 = 0, $579 = 0, $58 = 0, $585 = 0, $587 = 0, $59 = 0, $593 = 0, $595 = 0, $6 = 0, $60 = 0, $601 = 0, $602 = 0, $603 = 0, $605 = 0, $61 = 0, $611 = 0, $613 = 0, $619 = 0, $621 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $632 = 0, $636 = 0, $638 = 0, $640 = 0, $642 = 0, $643 = 0, $644 = 0, $646 = 0, $649 = 0, $650 = 0, $652 = 0, $654 = 0, $655 = 0, $657 = 0, $659 = 0, $66 = 0, $661 = 0, $663 = 0, $664 = 0, $665 = 0, $667 = 0, $669 = 0, $671 = 0, $672 = 0, $674 = 0, $676 = 0, $678 = 0, $68 = 0, $681 = 0, $683 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $690 = 0, $692 = 0, $693 = 0, $695 = 0, $698 = 0, $7 = 0, $70 = 0, $703 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $711 = 0, $714 = 0, $718 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $724 = 0, $726 = 0, $727 = 0, $729 = 0, $73 = 0, $732 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $743 = 0, $747 = 0, $749 = 0, $75 = 0, $751 = 0, $753 = 0, $754 = 0, $755 = 0, $757 = 0, $760 = 0, $761 = 0, $763 = 0, $765 = 0, $766 = 0, $768 = 0, $77 = 0, $770 = 0, $772 = 0, $774 = 0, $775 = 0, $776 = 0, $778 = 0, $780 = 0, $782 = 0, $784 = 0, $786 = 0, $787 = 0, $79 = 0, $790 = 0, $791 = 0, $794 = 0, $795 = 0, $799 = 0, $8 = 0, $804 = 0, $805 = 0, $810 = 0, $815 = 0, $816 = 0, $82 = 0, $820 = 0, $822 = 0, $823 = 0, $826 = 0, $827 = 0, $830 = 0, $832 = 0, $835 = 0, $839 = 0, $84 = 0, $840 = 0, $842 = 0, $844 = 0, $845 = 0, $851 = 0, $853 = 0, $855 = 0, $856 = 0, $859 = 0, $86 = 0, $860 = 0, $862 = 0, $866 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $873 = 0, $877 = 0, $879 = 0, $88 = 0, $881 = 0, $883 = 0, $884 = 0, $885 = 0, $887 = 0, $89 = 0, $890 = 0, $891 = 0, $893 = 0, $9 = 0, $903 = 0, $904 = 0, $905 = 0, $907 = 0, $908 = 0, $91 = 0, $910 = 0, $912 = 0, $914 = 0, $916 = 0, $917 = 0, $918 = 0, $920 = 0, $922 = 0, $924 = 0, $925 = 0, $928 = 0, $929 = 0, $93 = 0, $931 = 0, $933 = 0, $936 = 0, $938 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $945 = 0, $947 = 0, $948 = 0, $950 = 0, $953 = 0, $958 = 0, $959 = 0, $96 = 0, $962 = 0, $963 = 0, $966 = 0, $967 = 0, $972 = 0, $973 = 0, $978 = 0, $983 = 0, $984 = 0, $988 = 0, $989 = 0, $99 = 0, $992 = 0, $994 = 0, $args = 0, $begin = 0, $binds = 0, $bop = 0, $branch_false$0 = 0, $delim = 0, $eh$lpad$body$i$index50Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i198$index62Z2D = 0, $eh$lpad$body$i198$indexZ2D = 0, $eh$lpad$body$i230$index67Z2D = 0, $eh$lpad$body$i230$indexZ2D = 0, $eh$lpad$body$i269$index84Z2D = 0, $eh$lpad$body$i269$indexZ2D = 0, $eh$lpad$body$i333$index94Z2D = 0, $eh$lpad$body$i333$indexZ2D = 0, $eh$lpad$body$index151Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body118$index40Z2D = 0, $eh$lpad$body118$indexZ2D = 0, $eh$lpad$body126$index45Z2D = 0, $eh$lpad$body126$indexZ2D = 0, $eh$lpad$body151$index56Z2D = 0, $eh$lpad$body151$indexZ2D = 0, $eh$lpad$body227$index73Z2D = 0, $eh$lpad$body227$indexZ2D = 0, $eh$lpad$body266$index79Z2D = 0, $eh$lpad$body266$indexZ2D = 0, $eh$lpad$body302$index89Z2D = 0, $eh$lpad$body302$indexZ2D = 0, $eh$lpad$body316$index129Z2D = 0, $eh$lpad$body316$indexZ2D = 0, $eh$lpad$body344$index99Z2D = 0, $eh$lpad$body344$indexZ2D = 0, $eh$lpad$body351$index104Z2D = 0, $eh$lpad$body351$indexZ2D = 0, $eh$lpad$body357$index109Z2D = 0, $eh$lpad$body357$indexZ2D = 0, $eh$lpad$body372$index141Z2D = 0, $eh$lpad$body372$indexZ2D = 0, $eh$lpad$body379$index114Z2D = 0, $eh$lpad$body379$indexZ2D = 0, $eh$lpad$body389$index119Z2D = 0, $eh$lpad$body389$indexZ2D = 0, $eh$lpad$body442$index124Z2D = 0, $eh$lpad$body442$indexZ2D = 0, $eh$lpad$body454$index135Z2D = 0, $eh$lpad$body454$indexZ2D = 0, $eh$lpad$body66$index146Z2D = 0, $eh$lpad$body66$indexZ2D = 0, $eh$lpad$body76$index16Z2D = 0, $eh$lpad$body76$indexZ2D = 0, $eh$lpad$body84$index35Z2D = 0, $eh$lpad$body84$indexZ2D = 0, $end = 0, $end10 = 0, $end9 = 0, $field = 0, $invert$0$off0 = 0, $it$i448 = 0, $l = 0, $lhs$1 = 0, $next = 0, $obj = 0, $op = 0, $op7 = 0, $params = 0, $params_asts = 0, $ss = 0, $ss1 = 0, $ss2 = 0, $ss4 = 0, $ss6 = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i100 = 0, $this$idx$val$idx$val$i130 = 0, $this$idx$val$idx$val$i138 = 0, $this$idx$val$idx$val$i216 = 0, $this$idx$val$idx$val$i224 = 0, $this$idx$val$idx$val$i288 = 0, $this$idx$val$idx$val$i362 = 0, $this$idx$val$idx$val$i88 = 0, $this$idx53$val$idx$val = 0, $this$idx54$val$idx$val = 0, $this$idx55$val$idx$val = 0, $this$idx56$val$idx$val = 0, $this$idx57$val$idx$val = 0, $this$idx58$val$idx$val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2544 | 0;
 $$byval_copy = sp + 2536 | 0;
 $it$i448 = sp + 2532 | 0;
 $0 = sp + 2528 | 0;
 $1 = sp + 2524 | 0;
 $2 = sp + 2520 | 0;
 $3 = sp + 2516 | 0;
 $4 = sp + 2504 | 0;
 $5 = sp + 2500 | 0;
 $6 = sp + 2488 | 0;
 $7 = sp + 2484 | 0;
 $8 = sp + 2480 | 0;
 $9 = sp + 2476 | 0;
 $10 = sp + 2464 | 0;
 $11 = sp + 2452 | 0;
 $12 = sp + 2440 | 0;
 $13 = sp + 2436 | 0;
 $14 = sp + 2432 | 0;
 $15 = sp + 2428 | 0;
 $16 = sp + 2424 | 0;
 $17 = sp + 2420 | 0;
 $begin = sp + 2376 | 0;
 $18 = sp + 2332 | 0;
 $19 = sp + 2304 | 0;
 $20 = sp + 2260 | 0;
 $21 = sp + 2216 | 0;
 $22 = sp + 2172 | 0;
 $23 = sp + 2128 | 0;
 $24 = sp + 2100 | 0;
 $25 = sp + 2072 | 0;
 $26 = sp + 2028 | 0;
 $next = sp + 1984 | 0;
 $params_asts = sp + 1972 | 0;
 $27 = sp + 1928 | 0;
 $28 = sp + 1916 | 0;
 $params = sp + 1904 | 0;
 $ss = sp + 1760 | 0;
 $29 = sp + 1744 | 0;
 $30 = sp + 1716 | 0;
 $31 = sp + 1704 | 0;
 $ss1 = sp + 1560 | 0;
 $32 = sp + 1548 | 0;
 $33 = sp + 1504 | 0;
 $binds = sp + 1492 | 0;
 $delim = sp + 1448 | 0;
 $ss2 = sp + 1304 | 0;
 $34 = sp + 1288 | 0;
 $35 = sp + 1260 | 0;
 $36 = sp + 1248 | 0;
 $ss4 = sp + 1104 | 0;
 $37 = sp + 1088 | 0;
 $op = sp + 1044 | 0;
 $38 = sp + 1016 | 0;
 $bop = sp + 1012 | 0;
 $39 = sp + 968 | 0;
 $40 = sp + 924 | 0;
 $41 = sp + 880 | 0;
 $ss6 = sp + 736 | 0;
 $42 = sp + 688 | 0;
 $43 = sp + 644 | 0;
 $44 = sp + 632 | 0;
 $op7 = sp + 588 | 0;
 $end = sp + 544 | 0;
 $45 = sp + 516 | 0;
 $field = sp + 472 | 0;
 $46 = sp + 444 | 0;
 $47 = sp + 432 | 0;
 $48 = sp + 404 | 0;
 $args = sp + 392 | 0;
 $end9 = sp + 348 | 0;
 $49 = sp + 336 | 0;
 $50 = sp + 308 | 0;
 $51 = sp + 296 | 0;
 $obj = sp + 292 | 0;
 $end10 = sp + 248 | 0;
 $52 = sp + 220 | 0;
 $l = sp + 192 | 0;
 $53 = sp + 164 | 0;
 $54 = sp + 152 | 0;
 $55 = sp + 124 | 0;
 $56 = sp + 96 | 0;
 $57 = sp + 68 | 0;
 $58 = sp + 56 | 0;
 $59 = sp + 28 | 0;
 $60 = sp;
 $this$idx58$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $61 = $this$idx58$val$idx$val + 8 | 0;
 HEAP32[$begin >> 2] = HEAP32[$61 >> 2];
 $63 = $begin + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($63, $this$idx58$val$idx$val + 12 | 0);
 HEAP32[$begin >> 2] = HEAP32[$61 >> 2];
 $66 = $begin + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $66 | 0, $this$idx58$val$idx$val + 24 | 0);
 $68 = __THREW__;
 __THREW__ = 0;
 if ($68 & 1) {
  $70 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
  ___resumeException($70 | 0);
 }
 $72 = $begin + 28 | 0;
 $73 = $this$idx58$val$idx$val + 36 | 0;
 HEAP32[$72 + 0 >> 2] = HEAP32[$73 + 0 >> 2];
 HEAP32[$72 + 4 >> 2] = HEAP32[$73 + 4 >> 2];
 HEAP32[$72 + 8 >> 2] = HEAP32[$73 + 8 >> 2];
 HEAP32[$72 + 12 >> 2] = HEAP32[$73 + 12 >> 2];
 $74 = HEAP32[$61 >> 2] | 0;
 HEAP32[$begin >> 2] = $74;
 L4 : do switch ($74 | 0) {
 case 19:
  {
   $this$idx$val$idx$val$i130 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $361 = $this$idx$val$idx$val$i130 + 8 | 0;
   HEAP32[$26 >> 2] = HEAP32[$361 >> 2];
   $363 = $26 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $363 | 0, $this$idx$val$idx$val$i130 + 12 | 0);
   $365 = __THREW__;
   __THREW__ = 0;
   if ($365 & 1) label = 19; else {
    HEAP32[$26 >> 2] = HEAP32[$361 >> 2];
    $368 = $26 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $368 | 0, $this$idx$val$idx$val$i130 + 24 | 0);
    $370 = __THREW__;
    __THREW__ = 0;
    if ($370 & 1) {
     $372 = ___cxa_find_matching_catch() | 0;
     $373 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($363);
     $eh$lpad$body76$index16Z2D = $373;
     $eh$lpad$body76$indexZ2D = $372;
     break L4;
    }
    $374 = $26 + 28 | 0;
    $375 = $this$idx$val$idx$val$i130 + 36 | 0;
    HEAP32[$374 + 0 >> 2] = HEAP32[$375 + 0 >> 2];
    HEAP32[$374 + 4 >> 2] = HEAP32[$375 + 4 >> 2];
    HEAP32[$374 + 8 >> 2] = HEAP32[$375 + 8 >> 2];
    HEAP32[$374 + 12 >> 2] = HEAP32[$375 + 12 >> 2];
    HEAP32[$26 >> 2] = HEAP32[$361 >> 2];
    $377 = HEAP32[$this >> 2] | 0;
    $379 = HEAP32[$377 + 4 >> 2] | 0;
    $380 = $379 + 4 | 0;
    $382 = HEAP32[$379 >> 2] | 0;
    HEAP32[$382 + 4 >> 2] = HEAP32[$380 >> 2];
    HEAP32[HEAP32[$380 >> 2] >> 2] = $382;
    $385 = $377 + 8 | 0;
    HEAP32[$385 >> 2] = (HEAP32[$385 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($379 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($379 + 12 | 0);
    __ZdlPv($379);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($368);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($363);
    $this$idx$val$idx$val$i138 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $390 = $this$idx$val$idx$val$i138 + 8 | 0;
    HEAP32[$next >> 2] = HEAP32[$390 >> 2];
    $392 = $next + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $392 | 0, $this$idx$val$idx$val$i138 + 12 | 0);
    $394 = __THREW__;
    __THREW__ = 0;
    if ($394 & 1) label = 19; else {
     HEAP32[$next >> 2] = HEAP32[$390 >> 2];
     $397 = $next + 16 | 0;
     __THREW__ = 0;
     invoke_vii(40, $397 | 0, $this$idx$val$idx$val$i138 + 24 | 0);
     $399 = __THREW__;
     __THREW__ = 0;
     if ($399 & 1) {
      $401 = ___cxa_find_matching_catch() | 0;
      $402 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($392);
      $eh$lpad$body76$index16Z2D = $402;
      $eh$lpad$body76$indexZ2D = $401;
      break L4;
     }
     $403 = $next + 28 | 0;
     $404 = $this$idx$val$idx$val$i138 + 36 | 0;
     HEAP32[$403 + 0 >> 2] = HEAP32[$404 + 0 >> 2];
     HEAP32[$403 + 4 >> 2] = HEAP32[$404 + 4 >> 2];
     HEAP32[$403 + 8 >> 2] = HEAP32[$404 + 8 >> 2];
     HEAP32[$403 + 12 >> 2] = HEAP32[$404 + 12 >> 2];
     HEAP32[$next >> 2] = HEAP32[$390 >> 2];
     $406 = HEAP32[$this >> 2] | 0;
     $408 = HEAP32[$406 + 4 >> 2] | 0;
     $409 = $408 + 4 | 0;
     $411 = HEAP32[$408 >> 2] | 0;
     HEAP32[$411 + 4 >> 2] = HEAP32[$409 >> 2];
     HEAP32[HEAP32[$409 >> 2] >> 2] = $411;
     $414 = $406 + 8 | 0;
     HEAP32[$414 >> 2] = (HEAP32[$414 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($408 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($408 + 12 | 0);
     __ZdlPv($408);
     L14 : do if ((HEAP32[$next >> 2] | 0) == 8) {
      HEAP32[$params_asts >> 2] = 0;
      $421 = $params_asts + 4 | 0;
      HEAP32[$421 >> 2] = 0;
      HEAP32[$params_asts + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_viii(3, $28 | 0, 35760, 18);
      $423 = __THREW__;
      __THREW__ = 0;
      do if ($423 & 1) label = 74; else {
       __THREW__ = 0;
       invoke_viiiii(4, $27 | 0, $this | 0, $params_asts | 0, $28 | 0, $obj_level | 0);
       $425 = __THREW__;
       __THREW__ = 0;
       if ($425 & 1) {
        $442 = ___cxa_find_matching_catch() | 0;
        $443 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
        $$4 = $442;
        $$413 = $443;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($27 + 16 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($27 + 4 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
       __THREW__ = 0;
       $429 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
       $430 = __THREW__;
       __THREW__ = 0;
       if ($430 & 1) label = 74; else {
        HEAP32[$params >> 2] = 0;
        $432 = $params + 4 | 0;
        HEAP32[$432 >> 2] = 0;
        $433 = $params + 8 | 0;
        HEAP32[$433 >> 2] = 0;
        $434 = HEAP32[$params_asts >> 2] | 0;
        $435 = HEAP32[$421 >> 2] | 0;
        L51 : do if (($434 | 0) == ($435 | 0)) label = 106; else {
         $438 = $434;
         while (1) {
          $437 = HEAP32[$438 >> 2] | 0;
          if (!$437) {
           $$lcssa823 = 0;
           break;
          }
          $444 = ___dynamic_cast($437, 34e3, 35104, 0) | 0;
          if (!$444) {
           $$lcssa823 = $437;
           break;
          }
          $499 = $444 + 48 | 0;
          $500 = HEAP32[$432 >> 2] | 0;
          if (($500 | 0) == (HEAP32[$433 >> 2] | 0)) {
           __THREW__ = 0;
           invoke_vii(55, $params | 0, $499 | 0);
           $507 = __THREW__;
           __THREW__ = 0;
           if ($507 & 1) {
            label = 92;
            break;
           }
          } else {
           if (!$500) $506 = 0; else {
            HEAP32[$500 >> 2] = HEAP32[$499 >> 2];
            $506 = HEAP32[$432 >> 2] | 0;
           }
           HEAP32[$432 >> 2] = $506 + 4;
          }
          $438 = $438 + 4 | 0;
          if (($438 | 0) == ($435 | 0)) {
           label = 106;
           break L51;
          }
         }
         if ((label | 0) == 92) {
          $488 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body151$index56Z2D = tempRet0;
          $eh$lpad$body151$indexZ2D = $488;
          label = 94;
          break;
         }
         $446 = $ss + 64 | 0;
         $447 = $ss + 8 | 0;
         HEAP32[$447 >> 2] = 792;
         $448 = $ss + 12 | 0;
         HEAP32[$ss >> 2] = 940;
         HEAP32[$446 >> 2] = 960;
         HEAP32[$ss + 4 >> 2] = 0;
         __THREW__ = 0;
         invoke_vii(41, $ss + 64 | 0, $448 | 0);
         $451 = __THREW__;
         __THREW__ = 0;
         if ($451 & 1) {
          $463 = ___cxa_find_matching_catch() | 0;
          $$0$i = tempRet0;
          $$01$i = $463;
         } else {
          HEAP32[$ss + 136 >> 2] = 0;
          HEAP32[$ss + 140 >> 2] = -1;
          HEAP32[$ss >> 2] = 772;
          HEAP32[$446 >> 2] = 812;
          HEAP32[$447 >> 2] = 792;
          __THREW__ = 0;
          invoke_vi(179, $448 | 0);
          $455 = __THREW__;
          __THREW__ = 0;
          do if ($455 & 1) {
           $465 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body$i$index50Z2D = tempRet0;
           $eh$lpad$body$i$indexZ2D = $465;
          } else {
           HEAP32[$448 >> 2] = 1104;
           $457 = $ss + 44 | 0;
           HEAP32[$457 + 0 >> 2] = 0;
           HEAP32[$457 + 4 >> 2] = 0;
           HEAP32[$457 + 8 >> 2] = 0;
           HEAP32[$457 + 12 >> 2] = 0;
           HEAP32[$ss + 60 >> 2] = 24;
           HEAP32[$12 + 0 >> 2] = 0;
           HEAP32[$12 + 4 >> 2] = 0;
           HEAP32[$12 + 8 >> 2] = 0;
           __THREW__ = 0;
           invoke_vii(42, $448 | 0, $12 | 0);
           $459 = __THREW__;
           __THREW__ = 0;
           if ($459 & 1) {
            $461 = ___cxa_find_matching_catch() | 0;
            $462 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($457);
            __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($448);
            $eh$lpad$body$i$index50Z2D = $462;
            $eh$lpad$body$i$indexZ2D = $461;
            break;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
           __THREW__ = 0;
           $468 = invoke_iiii(25, $ss + 8 | 0, 35784, 19) | 0;
           $469 = __THREW__;
           __THREW__ = 0;
           L75 : do if ($469 & 1) label = 95; else {
            __THREW__ = 0;
            invoke_iii(28, $468 | 0, $$lcssa823 | 0) | 0;
            $471 = __THREW__;
            __THREW__ = 0;
            if ($471 & 1) {
             label = 95;
             break;
            }
            $473 = ___cxa_allocate_exception(40) | 0;
            __THREW__ = 0;
            invoke_vii(43, $29 | 0, $448 | 0);
            $474 = __THREW__;
            __THREW__ = 0;
            L78 : do if ($474 & 1) {
             $494 = ___cxa_find_matching_catch() | 0;
             $$02467 = $494;
             $$03466 = tempRet0;
            } else {
             __THREW__ = 0;
             invoke_vii(40, $473 | 0, $$lcssa823 + 4 | 0);
             $477 = __THREW__;
             __THREW__ = 0;
             do if ($477 & 1) $$042 = 1; else {
              $479 = $473 + 12 | 0;
              $480 = $$lcssa823 + 16 | 0;
              HEAP32[$479 + 0 >> 2] = HEAP32[$480 + 0 >> 2];
              HEAP32[$479 + 4 >> 2] = HEAP32[$480 + 4 >> 2];
              HEAP32[$479 + 8 >> 2] = HEAP32[$480 + 8 >> 2];
              HEAP32[$479 + 12 >> 2] = HEAP32[$480 + 12 >> 2];
              __THREW__ = 0;
              invoke_vii(40, $473 + 28 | 0, $29 | 0);
              $482 = __THREW__;
              __THREW__ = 0;
              if ($482 & 1) {
               $484 = ___cxa_find_matching_catch() | 0;
               $485 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($473);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
               $$02467 = $484;
               $$03466 = $485;
               break L78;
              }
              __THREW__ = 0;
              invoke_viii(4, $473 | 0, 48, 178);
              $486 = __THREW__;
              __THREW__ = 0;
              if ($486 & 1) {
               $$042 = 0;
               break;
              }
             } while (0);
             $496 = ___cxa_find_matching_catch() | 0;
             $497 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
             if ($$042) {
              $$02467 = $496;
              $$03466 = $497;
             } else {
              $$1 = $496;
              $$110 = $497;
              break L75;
             }
            } while (0);
            ___cxa_free_exception($473 | 0);
            $$1 = $$02467;
            $$110 = $$03466;
           } while (0);
           if ((label | 0) == 95) {
            $492 = ___cxa_find_matching_catch() | 0;
            $$1 = $492;
            $$110 = tempRet0;
           }
           HEAP32[$ss >> 2] = 772;
           HEAP32[$ss + 64 >> 2] = 812;
           HEAP32[$447 >> 2] = 792;
           HEAP32[$448 >> 2] = 1104;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($457);
           __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($448);
           __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($446);
           $$3 = $$1;
           $$312 = $$110;
           break L51;
          } while (0);
          $$0$i = $eh$lpad$body$i$index50Z2D;
          $$01$i = $eh$lpad$body$i$indexZ2D;
         }
         __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($446);
         $eh$lpad$body151$index56Z2D = $$0$i;
         $eh$lpad$body151$indexZ2D = $$01$i;
         label = 94;
        } while (0);
        do if ((label | 0) == 106) {
         $512 = HEAP32[$this + 4 >> 2] | 0;
         __THREW__ = 0;
         invoke_vii(40, $30 | 0, $66 | 0);
         $513 = __THREW__;
         __THREW__ = 0;
         if ($513 & 1) {
          $490 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body151$index56Z2D = tempRet0;
          $eh$lpad$body151$indexZ2D = $490;
          label = 94;
          break;
         }
         $517 = $72;
         $522 = HEAP32[$517 + 4 >> 2] | 0;
         $523 = $30 + 12 | 0;
         HEAP32[$523 >> 2] = HEAP32[$517 >> 2];
         HEAP32[$523 + 4 >> 2] = $522;
         $528 = $429 + 24 | 0;
         $533 = HEAP32[$528 + 4 >> 2] | 0;
         $534 = $30 + 20 | 0;
         HEAP32[$534 >> 2] = HEAP32[$528 >> 2];
         HEAP32[$534 + 4 >> 2] = $533;
         HEAP32[$31 >> 2] = 0;
         $538 = $31 + 4 | 0;
         HEAP32[$538 >> 2] = 0;
         $539 = $31 + 8 | 0;
         HEAP32[$539 >> 2] = 0;
         $544 = (HEAP32[$432 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
         $545 = $544 >> 2;
         L99 : do if (!$545) label = 119; else {
          if ($545 >>> 0 > 1073741823) {
           __THREW__ = 0;
           invoke_vi(181, $31 | 0);
           $548 = __THREW__;
           __THREW__ = 0;
           if (!($548 & 1)) label = 110;
          } else label = 110;
          if ((label | 0) == 110) {
           __THREW__ = 0;
           $550 = invoke_ii(67, $544 | 0) | 0;
           $551 = __THREW__;
           __THREW__ = 0;
           if (!($551 & 1)) {
            HEAP32[$538 >> 2] = $550;
            HEAP32[$31 >> 2] = $550;
            HEAP32[$539 >> 2] = $550 + ($545 << 2);
            $554 = HEAP32[$params >> 2] | 0;
            $555 = HEAP32[$432 >> 2] | 0;
            if (($554 | 0) == ($555 | 0)) {
             label = 119;
             break;
            } else {
             $$01$i$i = $554;
             $557 = $550;
            }
            while (1) {
             if (!$557) $561 = 0; else {
              HEAP32[$557 >> 2] = HEAP32[$$01$i$i >> 2];
              $561 = HEAP32[$538 >> 2] | 0;
             }
             $557 = $561 + 4 | 0;
             HEAP32[$538 >> 2] = $557;
             $$01$i$i = $$01$i$i + 4 | 0;
             if (($$01$i$i | 0) == ($555 | 0)) {
              label = 119;
              break L99;
             }
            }
           }
          }
          $564 = ___cxa_find_matching_catch() | 0;
          $565 = tempRet0;
          $566 = HEAP32[$31 >> 2] | 0;
          if ($566) {
           $568 = HEAP32[$538 >> 2] | 0;
           if (($568 | 0) != ($566 | 0)) HEAP32[$538 >> 2] = $568 + (~(($568 + -4 - $566 | 0) >>> 2) << 2);
           __ZdlPv($566);
          }
          $$2 = $564;
          $$211 = $565;
         } while (0);
         do if ((label | 0) == 119) {
          __THREW__ = 0;
          $574 = invoke_iiiii(6, $512 | 0, $30 | 0, $31 | 0, $429 | 0) | 0;
          $575 = __THREW__;
          __THREW__ = 0;
          if ($575 & 1) {
           $601 = ___cxa_find_matching_catch() | 0;
           $602 = tempRet0;
           $603 = HEAP32[$31 >> 2] | 0;
           if (!$603) {
            $$2 = $601;
            $$211 = $602;
            break;
           }
           $605 = HEAP32[$538 >> 2] | 0;
           if (($605 | 0) != ($603 | 0)) HEAP32[$538 >> 2] = $605 + (~(($605 + -4 - $603 | 0) >>> 2) << 2);
           __ZdlPv($603);
           $$2 = $601;
           $$211 = $602;
           break;
          }
          $577 = HEAP32[$31 >> 2] | 0;
          if ($577) {
           $579 = HEAP32[$538 >> 2] | 0;
           if (($579 | 0) != ($577 | 0)) HEAP32[$538 >> 2] = $579 + (~(($579 + -4 - $577 | 0) >>> 2) << 2);
           __ZdlPv($577);
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($30);
          $585 = HEAP32[$params >> 2] | 0;
          if ($585) {
           $587 = HEAP32[$432 >> 2] | 0;
           if (($587 | 0) != ($585 | 0)) HEAP32[$432 >> 2] = $587 + (~(($587 + -4 - $585 | 0) >>> 2) << 2);
           __ZdlPv($585);
          }
          $593 = HEAP32[$params_asts >> 2] | 0;
          if ($593) {
           $595 = HEAP32[$421 >> 2] | 0;
           if (($595 | 0) != ($593 | 0)) HEAP32[$421 >> 2] = $595 + (~(($595 + -4 - $593 | 0) >>> 2) << 2);
           __ZdlPv($593);
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($397);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($392);
          $$0 = $574;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
          STACKTOP = sp;
          return $$0 | 0;
         } while (0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($30);
         $$3 = $$2;
         $$312 = $$211;
        } while (0);
        if ((label | 0) == 94) {
         $$3 = $eh$lpad$body151$indexZ2D;
         $$312 = $eh$lpad$body151$index56Z2D;
        }
        $611 = HEAP32[$params >> 2] | 0;
        if (!$611) {
         $$4 = $$3;
         $$413 = $$312;
        } else {
         $613 = HEAP32[$432 >> 2] | 0;
         if (($613 | 0) != ($611 | 0)) HEAP32[$432 >> 2] = $613 + (~(($613 + -4 - $611 | 0) >>> 2) << 2);
         __ZdlPv($611);
         $$4 = $$3;
         $$413 = $$312;
        }
       }
      } while (0);
      if ((label | 0) == 74) {
       $440 = ___cxa_find_matching_catch() | 0;
       $$4 = $440;
       $$413 = tempRet0;
      }
      $619 = HEAP32[$params_asts >> 2] | 0;
      if (!$619) {
       $$7 = $$4;
       $$716 = $$413;
      } else {
       $621 = HEAP32[$421 >> 2] | 0;
       if (($621 | 0) != ($619 | 0)) HEAP32[$421 >> 2] = $621 + (~(($621 + -4 - $619 | 0) >>> 2) << 2);
       __ZdlPv($619);
       $$7 = $$4;
       $$716 = $$413;
      }
     } else {
      $627 = $ss1 + 64 | 0;
      $628 = $ss1 + 8 | 0;
      HEAP32[$628 >> 2] = 792;
      $629 = $ss1 + 12 | 0;
      HEAP32[$ss1 >> 2] = 940;
      HEAP32[$627 >> 2] = 960;
      HEAP32[$ss1 + 4 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(41, $ss1 + 64 | 0, $629 | 0);
      $632 = __THREW__;
      __THREW__ = 0;
      if ($632 & 1) {
       $644 = ___cxa_find_matching_catch() | 0;
       $$0$i201 = tempRet0;
       $$01$i200 = $644;
      } else {
       HEAP32[$ss1 + 136 >> 2] = 0;
       HEAP32[$ss1 + 140 >> 2] = -1;
       HEAP32[$ss1 >> 2] = 772;
       HEAP32[$627 >> 2] = 812;
       HEAP32[$628 >> 2] = 792;
       __THREW__ = 0;
       invoke_vi(179, $629 | 0);
       $636 = __THREW__;
       __THREW__ = 0;
       do if ($636 & 1) {
        $646 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body$i198$index62Z2D = tempRet0;
        $eh$lpad$body$i198$indexZ2D = $646;
       } else {
        HEAP32[$629 >> 2] = 1104;
        $638 = $ss1 + 44 | 0;
        HEAP32[$638 + 0 >> 2] = 0;
        HEAP32[$638 + 4 >> 2] = 0;
        HEAP32[$638 + 8 >> 2] = 0;
        HEAP32[$638 + 12 >> 2] = 0;
        HEAP32[$ss1 + 60 >> 2] = 24;
        HEAP32[$11 + 0 >> 2] = 0;
        HEAP32[$11 + 4 >> 2] = 0;
        HEAP32[$11 + 8 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(42, $629 | 0, $11 | 0);
        $640 = __THREW__;
        __THREW__ = 0;
        if ($640 & 1) {
         $642 = ___cxa_find_matching_catch() | 0;
         $643 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($638);
         __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($629);
         $eh$lpad$body$i198$index62Z2D = $643;
         $eh$lpad$body$i198$indexZ2D = $642;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
        __THREW__ = 0;
        $649 = invoke_iiii(25, $ss1 + 8 | 0, 35808, 19) | 0;
        $650 = __THREW__;
        __THREW__ = 0;
        L23 : do if ($650 & 1) label = 162; else {
         __THREW__ = 0;
         invoke_vii(52, $649 | 0, $next | 0);
         $652 = __THREW__;
         __THREW__ = 0;
         if ($652 & 1) label = 162; else {
          $654 = ___cxa_allocate_exception(40) | 0;
          __THREW__ = 0;
          invoke_vii(43, $32 | 0, $629 | 0);
          $655 = __THREW__;
          __THREW__ = 0;
          L26 : do if ($655 & 1) {
           $669 = ___cxa_find_matching_catch() | 0;
           $$514470 = tempRet0;
           $$5471 = $669;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $654 | 0, $397 | 0);
           $657 = __THREW__;
           __THREW__ = 0;
           do if ($657 & 1) $$044 = 1; else {
            $659 = $654 + 12 | 0;
            HEAP32[$659 + 0 >> 2] = HEAP32[$403 + 0 >> 2];
            HEAP32[$659 + 4 >> 2] = HEAP32[$403 + 4 >> 2];
            HEAP32[$659 + 8 >> 2] = HEAP32[$403 + 8 >> 2];
            HEAP32[$659 + 12 >> 2] = HEAP32[$403 + 12 >> 2];
            __THREW__ = 0;
            invoke_vii(40, $654 + 28 | 0, $32 | 0);
            $661 = __THREW__;
            __THREW__ = 0;
            if ($661 & 1) {
             $663 = ___cxa_find_matching_catch() | 0;
             $664 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($654);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($32);
             $$514470 = $664;
             $$5471 = $663;
             break L26;
            }
            __THREW__ = 0;
            invoke_viii(4, $654 | 0, 48, 178);
            $665 = __THREW__;
            __THREW__ = 0;
            if ($665 & 1) {
             $$044 = 0;
             break;
            }
           } while (0);
           $671 = ___cxa_find_matching_catch() | 0;
           $672 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($32);
           if ($$044) {
            $$514470 = $672;
            $$5471 = $671;
           } else {
            $$6 = $671;
            $$615 = $672;
            break L23;
           }
          } while (0);
          ___cxa_free_exception($654 | 0);
          $$6 = $$5471;
          $$615 = $$514470;
         }
        } while (0);
        if ((label | 0) == 162) {
         $667 = ___cxa_find_matching_catch() | 0;
         $$6 = $667;
         $$615 = tempRet0;
        }
        HEAP32[$ss1 >> 2] = 772;
        HEAP32[$ss1 + 64 >> 2] = 812;
        HEAP32[$628 >> 2] = 792;
        HEAP32[$629 >> 2] = 1104;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($638);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($629);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($627);
        $$7 = $$6;
        $$716 = $$615;
        break L14;
       } while (0);
       $$0$i201 = $eh$lpad$body$i198$index62Z2D;
       $$01$i200 = $eh$lpad$body$i198$indexZ2D;
      }
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($627);
      $$7 = $$01$i200;
      $$716 = $$0$i201;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($397);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($392);
     $$31 = $$7;
     $$3140 = $$716;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
     ___resumeException($$31 | 0);
    }
   }
   break;
  }
 case 20:
  {
   $this$idx$val$idx$val$i88 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $165 = $this$idx$val$idx$val$i88 + 8 | 0;
   HEAP32[$20 >> 2] = HEAP32[$165 >> 2];
   $167 = $20 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $167 | 0, $this$idx$val$idx$val$i88 + 12 | 0);
   $169 = __THREW__;
   __THREW__ = 0;
   if ($169 & 1) label = 19; else {
    HEAP32[$20 >> 2] = HEAP32[$165 >> 2];
    $172 = $20 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $172 | 0, $this$idx$val$idx$val$i88 + 24 | 0);
    $174 = __THREW__;
    __THREW__ = 0;
    if ($174 & 1) {
     $176 = ___cxa_find_matching_catch() | 0;
     $177 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($167);
     $eh$lpad$body76$index16Z2D = $177;
     $eh$lpad$body76$indexZ2D = $176;
     break L4;
    }
    $178 = $20 + 28 | 0;
    $179 = $this$idx$val$idx$val$i88 + 36 | 0;
    HEAP32[$178 + 0 >> 2] = HEAP32[$179 + 0 >> 2];
    HEAP32[$178 + 4 >> 2] = HEAP32[$179 + 4 >> 2];
    HEAP32[$178 + 8 >> 2] = HEAP32[$179 + 8 >> 2];
    HEAP32[$178 + 12 >> 2] = HEAP32[$179 + 12 >> 2];
    HEAP32[$20 >> 2] = HEAP32[$165 >> 2];
    $181 = HEAP32[$this >> 2] | 0;
    $183 = HEAP32[$181 + 4 >> 2] | 0;
    $184 = $183 + 4 | 0;
    $186 = HEAP32[$183 >> 2] | 0;
    HEAP32[$186 + 4 >> 2] = HEAP32[$184 >> 2];
    HEAP32[HEAP32[$184 >> 2] >> 2] = $186;
    $189 = $181 + 8 | 0;
    HEAP32[$189 >> 2] = (HEAP32[$189 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($183 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($183 + 12 | 0);
    __ZdlPv($183);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($172);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($167);
    __THREW__ = 0;
    $194 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
    $195 = __THREW__;
    __THREW__ = 0;
    if ($195 & 1) label = 19; else {
     __THREW__ = 0;
     invoke_viiii(13, $21 | 0, $this | 0, 27, 0);
     $197 = __THREW__;
     __THREW__ = 0;
     if ($197 & 1) label = 19; else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($21 + 16 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($21 + 4 | 0);
      __THREW__ = 0;
      $201 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
      $202 = __THREW__;
      __THREW__ = 0;
      if ($202 & 1) label = 19; else {
       $this$idx57$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $204 = $this$idx57$val$idx$val + 8 | 0;
       HEAP32[$22 >> 2] = HEAP32[$204 >> 2];
       $206 = $22 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $206 | 0, $this$idx57$val$idx$val + 12 | 0);
       $208 = __THREW__;
       __THREW__ = 0;
       if ($208 & 1) label = 19; else {
        HEAP32[$22 >> 2] = HEAP32[$204 >> 2];
        $211 = $22 + 16 | 0;
        __THREW__ = 0;
        invoke_vii(40, $211 | 0, $this$idx57$val$idx$val + 24 | 0);
        $213 = __THREW__;
        __THREW__ = 0;
        if ($213 & 1) {
         $215 = ___cxa_find_matching_catch() | 0;
         $216 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($206);
         $eh$lpad$body76$index16Z2D = $216;
         $eh$lpad$body76$indexZ2D = $215;
         break L4;
        }
        $217 = $22 + 28 | 0;
        $218 = $this$idx57$val$idx$val + 36 | 0;
        HEAP32[$217 + 0 >> 2] = HEAP32[$218 + 0 >> 2];
        HEAP32[$217 + 4 >> 2] = HEAP32[$218 + 4 >> 2];
        HEAP32[$217 + 8 >> 2] = HEAP32[$218 + 8 >> 2];
        HEAP32[$217 + 12 >> 2] = HEAP32[$218 + 12 >> 2];
        $219 = HEAP32[$204 >> 2] | 0;
        HEAP32[$22 >> 2] = $219;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($211);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($206);
        L176 : do if (($219 | 0) == 15) {
         $this$idx$val$idx$val$i100 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $221 = $this$idx$val$idx$val$i100 + 8 | 0;
         HEAP32[$23 >> 2] = HEAP32[$221 >> 2];
         $223 = $23 + 4 | 0;
         __THREW__ = 0;
         invoke_vii(40, $223 | 0, $this$idx$val$idx$val$i100 + 12 | 0);
         $225 = __THREW__;
         __THREW__ = 0;
         if ($225 & 1) {
          label = 19;
          break L4;
         }
         HEAP32[$23 >> 2] = HEAP32[$221 >> 2];
         $228 = $23 + 16 | 0;
         __THREW__ = 0;
         invoke_vii(40, $228 | 0, $this$idx$val$idx$val$i100 + 24 | 0);
         $230 = __THREW__;
         __THREW__ = 0;
         if ($230 & 1) {
          $232 = ___cxa_find_matching_catch() | 0;
          $233 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($223);
          $eh$lpad$body76$index16Z2D = $233;
          $eh$lpad$body76$indexZ2D = $232;
          break L4;
         }
         $234 = $23 + 28 | 0;
         $235 = $this$idx$val$idx$val$i100 + 36 | 0;
         HEAP32[$234 + 0 >> 2] = HEAP32[$235 + 0 >> 2];
         HEAP32[$234 + 4 >> 2] = HEAP32[$235 + 4 >> 2];
         HEAP32[$234 + 8 >> 2] = HEAP32[$235 + 8 >> 2];
         HEAP32[$234 + 12 >> 2] = HEAP32[$235 + 12 >> 2];
         HEAP32[$23 >> 2] = HEAP32[$221 >> 2];
         $237 = HEAP32[$this >> 2] | 0;
         $239 = HEAP32[$237 + 4 >> 2] | 0;
         $240 = $239 + 4 | 0;
         $242 = HEAP32[$239 >> 2] | 0;
         HEAP32[$242 + 4 >> 2] = HEAP32[$240 >> 2];
         HEAP32[HEAP32[$240 >> 2] >> 2] = $242;
         $245 = $237 + 8 | 0;
         HEAP32[$245 >> 2] = (HEAP32[$245 >> 2] | 0) + -1;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($239 + 24 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($239 + 12 | 0);
         __ZdlPv($239);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($228);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($223);
         __THREW__ = 0;
         $250 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
         $251 = __THREW__;
         __THREW__ = 0;
         if ($251 & 1) {
          label = 19;
          break L4;
         }
         $$pre$phiZ2D = $this + 4 | 0;
         $branch_false$0 = $250;
        } else {
         $253 = $this + 4 | 0;
         $254 = HEAP32[$253 >> 2] | 0;
         __THREW__ = 0;
         invoke_vii(40, $24 | 0, $66 | 0);
         $255 = __THREW__;
         __THREW__ = 0;
         if ($255 & 1) {
          label = 19;
          break L4;
         }
         $258 = $24 + 12 | 0;
         $259 = $72;
         $264 = HEAP32[$259 + 4 >> 2] | 0;
         $265 = $258;
         HEAP32[$265 >> 2] = HEAP32[$259 >> 2];
         HEAP32[$265 + 4 >> 2] = $264;
         $270 = $201 + 24 | 0;
         $275 = HEAP32[$270 + 4 >> 2] | 0;
         $276 = $24 + 20 | 0;
         HEAP32[$276 >> 2] = HEAP32[$270 >> 2];
         HEAP32[$276 + 4 >> 2] = $275;
         __THREW__ = 0;
         $280 = invoke_ii(67, 48) | 0;
         $281 = __THREW__;
         __THREW__ = 0;
         do if ($281 & 1) label = 48; else {
          HEAP32[$280 >> 2] = 34168;
          __THREW__ = 0;
          invoke_vii(40, $280 + 4 | 0, $24 | 0);
          $284 = __THREW__;
          __THREW__ = 0;
          if ($284 & 1) {
           $302 = ___cxa_find_matching_catch() | 0;
           $303 = tempRet0;
           __ZdlPv($280);
           $eh$lpad$body118$index40Z2D = $303;
           $eh$lpad$body118$indexZ2D = $302;
           break;
          }
          $286 = $280 + 16 | 0;
          HEAP32[$286 + 0 >> 2] = HEAP32[$258 + 0 >> 2];
          HEAP32[$286 + 4 >> 2] = HEAP32[$258 + 4 >> 2];
          HEAP32[$286 + 8 >> 2] = HEAP32[$258 + 8 >> 2];
          HEAP32[$286 + 12 >> 2] = HEAP32[$258 + 12 >> 2];
          HEAP32[$280 + 32 >> 2] = 12;
          HEAP32[$280 + 36 >> 2] = 0;
          HEAP32[$280 + 40 >> 2] = 0;
          HEAP32[$280 + 44 >> 2] = 0;
          HEAP32[$280 >> 2] = 36880;
          HEAP32[$14 >> 2] = $280;
          $291 = $254 + 16 | 0;
          $292 = HEAP32[$291 >> 2] | 0;
          if ($292 >>> 0 < (HEAP32[$254 + 20 >> 2] | 0) >>> 0) {
           if (!$292) $298 = 0; else {
            HEAP32[$292 >> 2] = $280;
            $298 = HEAP32[$291 >> 2] | 0;
           }
           HEAP32[$291 >> 2] = $298 + 4;
          } else {
           __THREW__ = 0;
           invoke_vii(51, $254 + 12 | 0, $14 | 0);
           $300 = __THREW__;
           __THREW__ = 0;
           if ($300 & 1) {
            label = 48;
            break;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($24);
          $$pre$phiZ2D = $253;
          $branch_false$0 = $280;
          break L176;
         } while (0);
         if ((label | 0) == 48) {
          $304 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body118$index40Z2D = tempRet0;
          $eh$lpad$body118$indexZ2D = $304;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($24);
         $$31 = $eh$lpad$body118$indexZ2D;
         $$3140 = $eh$lpad$body118$index40Z2D;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
         ___resumeException($$31 | 0);
        } while (0);
        $306 = HEAP32[$$pre$phiZ2D >> 2] | 0;
        __THREW__ = 0;
        invoke_vii(40, $25 | 0, $66 | 0);
        $307 = __THREW__;
        __THREW__ = 0;
        if ($307 & 1) label = 19; else {
         $310 = $25 + 12 | 0;
         $311 = $72;
         $316 = HEAP32[$311 + 4 >> 2] | 0;
         $317 = $310;
         HEAP32[$317 >> 2] = HEAP32[$311 >> 2];
         HEAP32[$317 + 4 >> 2] = $316;
         $322 = $branch_false$0 + 24 | 0;
         $327 = HEAP32[$322 + 4 >> 2] | 0;
         $328 = $25 + 20 | 0;
         HEAP32[$328 >> 2] = HEAP32[$322 >> 2];
         HEAP32[$328 + 4 >> 2] = $327;
         __THREW__ = 0;
         $332 = invoke_ii(67, 60) | 0;
         $333 = __THREW__;
         __THREW__ = 0;
         do if ($333 & 1) label = 60; else {
          HEAP32[$332 >> 2] = 34168;
          __THREW__ = 0;
          invoke_vii(40, $332 + 4 | 0, $25 | 0);
          $336 = __THREW__;
          __THREW__ = 0;
          if ($336 & 1) {
           $357 = ___cxa_find_matching_catch() | 0;
           $358 = tempRet0;
           __ZdlPv($332);
           $eh$lpad$body126$index45Z2D = $358;
           $eh$lpad$body126$indexZ2D = $357;
           break;
          }
          $338 = $332 + 16 | 0;
          HEAP32[$338 + 0 >> 2] = HEAP32[$310 + 0 >> 2];
          HEAP32[$338 + 4 >> 2] = HEAP32[$310 + 4 >> 2];
          HEAP32[$338 + 8 >> 2] = HEAP32[$310 + 8 >> 2];
          HEAP32[$338 + 12 >> 2] = HEAP32[$310 + 12 >> 2];
          HEAP32[$332 + 32 >> 2] = 4;
          HEAP32[$332 + 36 >> 2] = 0;
          HEAP32[$332 + 40 >> 2] = 0;
          HEAP32[$332 + 44 >> 2] = 0;
          HEAP32[$332 >> 2] = 36864;
          HEAP32[$332 + 48 >> 2] = $194;
          HEAP32[$332 + 52 >> 2] = $201;
          HEAP32[$332 + 56 >> 2] = $branch_false$0;
          HEAP32[$13 >> 2] = $332;
          $346 = $306 + 16 | 0;
          $347 = HEAP32[$346 >> 2] | 0;
          if ($347 >>> 0 < (HEAP32[$306 + 20 >> 2] | 0) >>> 0) {
           if (!$347) $353 = 0; else {
            HEAP32[$347 >> 2] = $332;
            $353 = HEAP32[$346 >> 2] | 0;
           }
           HEAP32[$346 >> 2] = $353 + 4;
          } else {
           __THREW__ = 0;
           invoke_vii(51, $306 + 12 | 0, $13 | 0);
           $355 = __THREW__;
           __THREW__ = 0;
           if ($355 & 1) {
            label = 60;
            break;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
          $$0 = $332;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
          STACKTOP = sp;
          return $$0 | 0;
         } while (0);
         if ((label | 0) == 60) {
          $359 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body126$index45Z2D = tempRet0;
          $eh$lpad$body126$indexZ2D = $359;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
         $$31 = $eh$lpad$body126$indexZ2D;
         $$3140 = $eh$lpad$body126$index45Z2D;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
         ___resumeException($$31 | 0);
        }
       }
      }
     }
    }
   }
   break;
  }
 case 24:
  {
   $this$idx$val$idx$val$i216 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $674 = $this$idx$val$idx$val$i216 + 8 | 0;
   HEAP32[$33 >> 2] = HEAP32[$674 >> 2];
   $676 = $33 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $676 | 0, $this$idx$val$idx$val$i216 + 12 | 0);
   $678 = __THREW__;
   __THREW__ = 0;
   if ($678 & 1) label = 19; else {
    HEAP32[$33 >> 2] = HEAP32[$674 >> 2];
    $681 = $33 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $681 | 0, $this$idx$val$idx$val$i216 + 24 | 0);
    $683 = __THREW__;
    __THREW__ = 0;
    if ($683 & 1) {
     $685 = ___cxa_find_matching_catch() | 0;
     $686 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($676);
     $eh$lpad$body76$index16Z2D = $686;
     $eh$lpad$body76$indexZ2D = $685;
     break L4;
    }
    $687 = $33 + 28 | 0;
    $688 = $this$idx$val$idx$val$i216 + 36 | 0;
    HEAP32[$687 + 0 >> 2] = HEAP32[$688 + 0 >> 2];
    HEAP32[$687 + 4 >> 2] = HEAP32[$688 + 4 >> 2];
    HEAP32[$687 + 8 >> 2] = HEAP32[$688 + 8 >> 2];
    HEAP32[$687 + 12 >> 2] = HEAP32[$688 + 12 >> 2];
    HEAP32[$33 >> 2] = HEAP32[$674 >> 2];
    $690 = HEAP32[$this >> 2] | 0;
    $692 = HEAP32[$690 + 4 >> 2] | 0;
    $693 = $692 + 4 | 0;
    $695 = HEAP32[$692 >> 2] | 0;
    HEAP32[$695 + 4 >> 2] = HEAP32[$693 >> 2];
    HEAP32[HEAP32[$693 >> 2] >> 2] = $695;
    $698 = $690 + 8 | 0;
    HEAP32[$698 >> 2] = (HEAP32[$698 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($692 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($692 + 12 | 0);
    __ZdlPv($692);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($681);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($676);
    $703 = $binds + 4 | 0;
    HEAP32[$703 >> 2] = 0;
    HEAP32[$binds + 8 >> 2] = 0;
    $705 = $binds + 4 | 0;
    HEAP32[$binds >> 2] = $705;
    $706 = $delim + 4 | 0;
    $707 = $delim + 16 | 0;
    $708 = $delim + 28 | 0;
    while (1) {
     __THREW__ = 0;
     invoke_viii(6, $this | 0, $binds | 0, $obj_level | 0);
     $709 = __THREW__;
     __THREW__ = 0;
     if ($709 & 1) {
      label = 191;
      break;
     }
     $this$idx$val$idx$val$i224 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $711 = $this$idx$val$idx$val$i224 + 8 | 0;
     HEAP32[$delim >> 2] = HEAP32[$711 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $706 | 0, $this$idx$val$idx$val$i224 + 12 | 0);
     $714 = __THREW__;
     __THREW__ = 0;
     if ($714 & 1) {
      label = 191;
      break;
     }
     HEAP32[$delim >> 2] = HEAP32[$711 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $707 | 0, $this$idx$val$idx$val$i224 + 24 | 0);
     $718 = __THREW__;
     __THREW__ = 0;
     if ($718 & 1) {
      label = 175;
      break;
     }
     $722 = $this$idx$val$idx$val$i224 + 36 | 0;
     HEAP32[$708 + 0 >> 2] = HEAP32[$722 + 0 >> 2];
     HEAP32[$708 + 4 >> 2] = HEAP32[$722 + 4 >> 2];
     HEAP32[$708 + 8 >> 2] = HEAP32[$722 + 8 >> 2];
     HEAP32[$708 + 12 >> 2] = HEAP32[$722 + 12 >> 2];
     HEAP32[$delim >> 2] = HEAP32[$711 >> 2];
     $724 = HEAP32[$this >> 2] | 0;
     $726 = HEAP32[$724 + 4 >> 2] | 0;
     $727 = $726 + 4 | 0;
     $729 = HEAP32[$726 >> 2] | 0;
     HEAP32[$729 + 4 >> 2] = HEAP32[$727 >> 2];
     HEAP32[HEAP32[$727 >> 2] >> 2] = $729;
     $732 = $724 + 8 | 0;
     HEAP32[$732 >> 2] = (HEAP32[$732 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($726 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($726 + 12 | 0);
     __ZdlPv($726);
     $737 = HEAP32[$delim >> 2] | 0;
     if (!(($737 | 0) == 5 | ($737 | 0) == 10)) {
      label = 177;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($707);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($706);
     if (($737 | 0) == 10) {
      label = 201;
      break;
     }
    }
    do if ((label | 0) == 175) {
     $720 = ___cxa_find_matching_catch() | 0;
     $721 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($706);
     $eh$lpad$body227$index73Z2D = $721;
     $eh$lpad$body227$indexZ2D = $720;
     label = 193;
    } else if ((label | 0) == 177) {
     $738 = $ss2 + 64 | 0;
     $739 = $ss2 + 8 | 0;
     HEAP32[$739 >> 2] = 792;
     $740 = $ss2 + 12 | 0;
     HEAP32[$ss2 >> 2] = 940;
     HEAP32[$738 >> 2] = 960;
     HEAP32[$ss2 + 4 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $ss2 + 64 | 0, $740 | 0);
     $743 = __THREW__;
     __THREW__ = 0;
     L272 : do if ($743 & 1) {
      $755 = ___cxa_find_matching_catch() | 0;
      $$0$i233 = tempRet0;
      $$01$i232 = $755;
      label = 194;
     } else {
      HEAP32[$ss2 + 136 >> 2] = 0;
      HEAP32[$ss2 + 140 >> 2] = -1;
      HEAP32[$ss2 >> 2] = 772;
      HEAP32[$738 >> 2] = 812;
      HEAP32[$739 >> 2] = 792;
      __THREW__ = 0;
      invoke_vi(179, $740 | 0);
      $747 = __THREW__;
      __THREW__ = 0;
      do if ($747 & 1) {
       $757 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body$i230$index67Z2D = tempRet0;
       $eh$lpad$body$i230$indexZ2D = $757;
      } else {
       HEAP32[$740 >> 2] = 1104;
       $749 = $ss2 + 44 | 0;
       HEAP32[$749 + 0 >> 2] = 0;
       HEAP32[$749 + 4 >> 2] = 0;
       HEAP32[$749 + 8 >> 2] = 0;
       HEAP32[$749 + 12 >> 2] = 0;
       HEAP32[$ss2 + 60 >> 2] = 24;
       HEAP32[$10 + 0 >> 2] = 0;
       HEAP32[$10 + 4 >> 2] = 0;
       HEAP32[$10 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(42, $740 | 0, $10 | 0);
       $751 = __THREW__;
       __THREW__ = 0;
       if ($751 & 1) {
        $753 = ___cxa_find_matching_catch() | 0;
        $754 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($749);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($740);
        $eh$lpad$body$i230$index67Z2D = $754;
        $eh$lpad$body$i230$indexZ2D = $753;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
       __THREW__ = 0;
       $760 = invoke_iiii(25, $ss2 + 8 | 0, 35832, 24) | 0;
       $761 = __THREW__;
       __THREW__ = 0;
       L280 : do if ($761 & 1) label = 195; else {
        __THREW__ = 0;
        invoke_vii(52, $760 | 0, $delim | 0);
        $763 = __THREW__;
        __THREW__ = 0;
        if ($763 & 1) label = 195; else {
         $765 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $34 | 0, $740 | 0);
         $766 = __THREW__;
         __THREW__ = 0;
         do if ($766 & 1) {
          $784 = ___cxa_find_matching_catch() | 0;
          $$817474 = tempRet0;
          $$8475 = $784;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $765 | 0, $707 | 0);
          $768 = __THREW__;
          __THREW__ = 0;
          if ($768 & 1) $$049 = 1; else {
           $770 = $765 + 12 | 0;
           HEAP32[$770 + 0 >> 2] = HEAP32[$708 + 0 >> 2];
           HEAP32[$770 + 4 >> 2] = HEAP32[$708 + 4 >> 2];
           HEAP32[$770 + 8 >> 2] = HEAP32[$708 + 8 >> 2];
           HEAP32[$770 + 12 >> 2] = HEAP32[$708 + 12 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $765 + 28 | 0, $34 | 0);
           $772 = __THREW__;
           __THREW__ = 0;
           if ($772 & 1) {
            $774 = ___cxa_find_matching_catch() | 0;
            $775 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($765);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($34);
            $$817474 = $775;
            $$8475 = $774;
            break;
           }
           __THREW__ = 0;
           invoke_viii(4, $765 | 0, 48, 178);
           $776 = __THREW__;
           __THREW__ = 0;
           if ($776 & 1) $$049 = 0; else {}
          }
          $786 = ___cxa_find_matching_catch() | 0;
          $787 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($34);
          if ($$049) {
           $$817474 = $787;
           $$8475 = $786;
          } else {
           $$9 = $786;
           $$918 = $787;
           break L280;
          }
         } while (0);
         ___cxa_free_exception($765 | 0);
         $$9 = $$8475;
         $$918 = $$817474;
        }
       } while (0);
       if ((label | 0) == 195) {
        $782 = ___cxa_find_matching_catch() | 0;
        $$9 = $782;
        $$918 = tempRet0;
       }
       HEAP32[$ss2 >> 2] = 772;
       HEAP32[$ss2 + 64 >> 2] = 812;
       HEAP32[$739 >> 2] = 792;
       HEAP32[$740 >> 2] = 1104;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($749);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($740);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($738);
       $$10 = $$9;
       $$1019 = $$918;
       break L272;
      } while (0);
      $$0$i233 = $eh$lpad$body$i230$index67Z2D;
      $$01$i232 = $eh$lpad$body$i230$indexZ2D;
      label = 194;
     } while (0);
     if ((label | 0) == 194) {
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($738);
      $$10 = $$01$i232;
      $$1019 = $$0$i233;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($707);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($706);
     $$12 = $$10;
     $$1221 = $$1019;
    } else if ((label | 0) == 191) {
     $778 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body227$index73Z2D = tempRet0;
     $eh$lpad$body227$indexZ2D = $778;
     label = 193;
    } else if ((label | 0) == 201) {
     __THREW__ = 0;
     $790 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $791 = __THREW__;
     __THREW__ = 0;
     if (!($791 & 1)) {
      $794 = HEAP32[$this + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $35 | 0, $66 | 0);
      $795 = __THREW__;
      __THREW__ = 0;
      if (!($795 & 1)) {
       $799 = $72;
       $804 = HEAP32[$799 + 4 >> 2] | 0;
       $805 = $35 + 12 | 0;
       HEAP32[$805 >> 2] = HEAP32[$799 >> 2];
       HEAP32[$805 + 4 >> 2] = $804;
       $810 = $790 + 24 | 0;
       $815 = HEAP32[$810 + 4 >> 2] | 0;
       $816 = $35 + 20 | 0;
       HEAP32[$816 >> 2] = HEAP32[$810 >> 2];
       HEAP32[$816 + 4 >> 2] = $815;
       $820 = $36 + 4 | 0;
       HEAP32[$820 >> 2] = 0;
       HEAP32[$36 + 8 >> 2] = 0;
       $822 = $36 + 4 | 0;
       HEAP32[$36 >> 2] = $822;
       $823 = HEAP32[$binds >> 2] | 0;
       L237 : do if (($823 | 0) == ($705 | 0)) label = 211; else {
        $826 = $823;
        while (1) {
         HEAP32[$8 >> 2] = $822;
         __THREW__ = 0;
         HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$8 + 0 >> 2];
         invoke_viiii(11, $9 | 0, $36 | 0, $$byval_copy | 0, $826 + 16 | 0);
         $827 = __THREW__;
         __THREW__ = 0;
         if ($827 & 1) break;
         $830 = HEAP32[$826 + 4 >> 2] | 0;
         if (!$830) {
          $$0$i$i$i$i$i = $826;
          while (1) {
           $835 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
           if ((HEAP32[$835 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
            $$01$i$i$i$i$i = $835;
            break;
           } else $$0$i$i$i$i$i = $835;
          }
         } else {
          $$0$i$i$i$i$i$i = $830;
          while (1) {
           $832 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
           if (!$832) {
            $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i = $832;
          }
         }
         if (($$01$i$i$i$i$i | 0) == ($705 | 0)) {
          label = 211;
          break L237;
         } else $826 = $$01$i$i$i$i$i;
        }
        $859 = ___cxa_find_matching_catch() | 0;
        $860 = tempRet0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($36, HEAP32[$820 >> 2] | 0);
        $$11 = $859;
        $$1120 = $860;
       } while (0);
       if ((label | 0) == 211) {
        __THREW__ = 0;
        $839 = invoke_ii(67, 64) | 0;
        $840 = __THREW__;
        __THREW__ = 0;
        do if ($840 & 1) label = 222; else {
         __THREW__ = 0;
         invoke_viiii(12, $839 | 0, $35 | 0, $36 | 0, $790 | 0);
         $842 = __THREW__;
         __THREW__ = 0;
         if ($842 & 1) {
          $855 = ___cxa_find_matching_catch() | 0;
          $856 = tempRet0;
          __ZdlPv($839);
          $eh$lpad$body266$index79Z2D = $856;
          $eh$lpad$body266$indexZ2D = $855;
          break;
         }
         HEAP32[$7 >> 2] = $839;
         $844 = $794 + 16 | 0;
         $845 = HEAP32[$844 >> 2] | 0;
         if ($845 >>> 0 < (HEAP32[$794 + 20 >> 2] | 0) >>> 0) {
          if (!$845) $851 = 0; else {
           HEAP32[$845 >> 2] = $839;
           $851 = HEAP32[$844 >> 2] | 0;
          }
          HEAP32[$844 >> 2] = $851 + 4;
         } else {
          __THREW__ = 0;
          invoke_vii(51, $794 + 12 | 0, $7 | 0);
          $853 = __THREW__;
          __THREW__ = 0;
          if ($853 & 1) {
           label = 222;
           break;
          }
         }
         __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($36, HEAP32[$820 >> 2] | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($35);
         __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($binds, HEAP32[$703 >> 2] | 0);
         $$0 = $839;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
         STACKTOP = sp;
         return $$0 | 0;
        } while (0);
        if ((label | 0) == 222) {
         $862 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body266$index79Z2D = tempRet0;
         $eh$lpad$body266$indexZ2D = $862;
        }
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($36, HEAP32[$820 >> 2] | 0);
        $$11 = $eh$lpad$body266$indexZ2D;
        $$1120 = $eh$lpad$body266$index79Z2D;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($35);
       $$12 = $$11;
       $$1221 = $$1120;
       break;
      }
     }
     $780 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body227$index73Z2D = tempRet0;
     $eh$lpad$body227$indexZ2D = $780;
     label = 193;
    } while (0);
    if ((label | 0) == 193) {
     $$12 = $eh$lpad$body227$indexZ2D;
     $$1221 = $eh$lpad$body227$index73Z2D;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($binds, HEAP32[$703 >> 2] | 0);
    $$31 = $$12;
    $$3140 = $$1221;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
    ___resumeException($$31 | 0);
   }
   break;
  }
 case 13:
  {
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($$byval_copy, 1264, $63);
   $866 = HEAP32[$$byval_copy >> 2] | 0;
   if (($866 | 0) != (1268 | 0)) {
    $928 = HEAP32[$866 + 28 >> 2] | 0;
    if (!$precedence) {
     label = 270;
     break L4;
    } else if (($precedence | 0) != 4) {
     label = 271;
     break L4;
    }
    $this$idx$val$idx$val$i288 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $929 = $this$idx$val$idx$val$i288 + 8 | 0;
    HEAP32[$op >> 2] = HEAP32[$929 >> 2];
    $931 = $op + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $931 | 0, $this$idx$val$idx$val$i288 + 12 | 0);
    $933 = __THREW__;
    __THREW__ = 0;
    if ($933 & 1) {
     label = 19;
     break L4;
    }
    HEAP32[$op >> 2] = HEAP32[$929 >> 2];
    $936 = $op + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $936 | 0, $this$idx$val$idx$val$i288 + 24 | 0);
    $938 = __THREW__;
    __THREW__ = 0;
    if ($938 & 1) {
     $940 = ___cxa_find_matching_catch() | 0;
     $941 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($931);
     $eh$lpad$body76$index16Z2D = $941;
     $eh$lpad$body76$indexZ2D = $940;
     break L4;
    }
    $942 = $op + 28 | 0;
    $943 = $this$idx$val$idx$val$i288 + 36 | 0;
    HEAP32[$942 + 0 >> 2] = HEAP32[$943 + 0 >> 2];
    HEAP32[$942 + 4 >> 2] = HEAP32[$943 + 4 >> 2];
    HEAP32[$942 + 8 >> 2] = HEAP32[$943 + 8 >> 2];
    HEAP32[$942 + 12 >> 2] = HEAP32[$943 + 12 >> 2];
    HEAP32[$op >> 2] = HEAP32[$929 >> 2];
    $945 = HEAP32[$this >> 2] | 0;
    $947 = HEAP32[$945 + 4 >> 2] | 0;
    $948 = $947 + 4 | 0;
    $950 = HEAP32[$947 >> 2] | 0;
    HEAP32[$950 + 4 >> 2] = HEAP32[$948 >> 2];
    HEAP32[HEAP32[$948 >> 2] >> 2] = $950;
    $953 = $945 + 8 | 0;
    HEAP32[$953 >> 2] = (HEAP32[$953 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($947 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($947 + 12 | 0);
    __ZdlPv($947);
    __THREW__ = 0;
    $958 = invoke_iiii(28, $this | 0, 4, $obj_level | 0) | 0;
    $959 = __THREW__;
    __THREW__ = 0;
    if ($959 & 1) label = 265; else {
     $962 = HEAP32[$this + 4 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $38 | 0, $936 | 0);
     $963 = __THREW__;
     __THREW__ = 0;
     if ($963 & 1) label = 265; else {
      $966 = $38 + 12 | 0;
      $967 = $942;
      $972 = HEAP32[$967 + 4 >> 2] | 0;
      $973 = $966;
      HEAP32[$973 >> 2] = HEAP32[$967 >> 2];
      HEAP32[$973 + 4 >> 2] = $972;
      $978 = $958 + 24 | 0;
      $983 = HEAP32[$978 + 4 >> 2] | 0;
      $984 = $38 + 20 | 0;
      HEAP32[$984 >> 2] = HEAP32[$978 >> 2];
      HEAP32[$984 + 4 >> 2] = $983;
      __THREW__ = 0;
      $988 = invoke_ii(67, 56) | 0;
      $989 = __THREW__;
      __THREW__ = 0;
      do if ($989 & 1) label = 266; else {
       HEAP32[$988 >> 2] = 34168;
       __THREW__ = 0;
       invoke_vii(40, $988 + 4 | 0, $38 | 0);
       $992 = __THREW__;
       __THREW__ = 0;
       if ($992 & 1) {
        $1012 = ___cxa_find_matching_catch() | 0;
        $1013 = tempRet0;
        __ZdlPv($988);
        $eh$lpad$body302$index89Z2D = $1013;
        $eh$lpad$body302$indexZ2D = $1012;
        break;
       }
       $994 = $988 + 16 | 0;
       HEAP32[$994 + 0 >> 2] = HEAP32[$966 + 0 >> 2];
       HEAP32[$994 + 4 >> 2] = HEAP32[$966 + 4 >> 2];
       HEAP32[$994 + 8 >> 2] = HEAP32[$966 + 8 >> 2];
       HEAP32[$994 + 12 >> 2] = HEAP32[$966 + 12 >> 2];
       HEAP32[$988 + 32 >> 2] = 19;
       HEAP32[$988 + 36 >> 2] = 0;
       HEAP32[$988 + 40 >> 2] = 0;
       HEAP32[$988 + 44 >> 2] = 0;
       HEAP32[$988 >> 2] = 36760;
       HEAP32[$988 + 48 >> 2] = $928;
       HEAP32[$988 + 52 >> 2] = $958;
       HEAP32[$5 >> 2] = $988;
       $1001 = $962 + 16 | 0;
       $1002 = HEAP32[$1001 >> 2] | 0;
       if ($1002 >>> 0 < (HEAP32[$962 + 20 >> 2] | 0) >>> 0) {
        if (!$1002) $1008 = 0; else {
         HEAP32[$1002 >> 2] = $988;
         $1008 = HEAP32[$1001 >> 2] | 0;
        }
        HEAP32[$1001 >> 2] = $1008 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $962 + 12 | 0, $5 | 0);
        $1010 = __THREW__;
        __THREW__ = 0;
        if ($1010 & 1) {
         label = 266;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($38);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($936);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($931);
       $$0 = $988;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
       STACKTOP = sp;
       return $$0 | 0;
      } while (0);
      if ((label | 0) == 266) {
       $1016 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body302$index89Z2D = tempRet0;
       $eh$lpad$body302$indexZ2D = $1016;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($38);
      $$15 = $eh$lpad$body302$indexZ2D;
      $$1524 = $eh$lpad$body302$index89Z2D;
     }
    }
    if ((label | 0) == 265) {
     $1014 = ___cxa_find_matching_catch() | 0;
     $$15 = $1014;
     $$1524 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($936);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($931);
    $$31 = $$15;
    $$3140 = $$1524;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
    ___resumeException($$31 | 0);
   }
   $868 = $ss4 + 64 | 0;
   $869 = $ss4 + 8 | 0;
   HEAP32[$869 >> 2] = 792;
   $870 = $ss4 + 12 | 0;
   HEAP32[$ss4 >> 2] = 940;
   HEAP32[$868 >> 2] = 960;
   HEAP32[$ss4 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss4 + 64 | 0, $870 | 0);
   $873 = __THREW__;
   __THREW__ = 0;
   if ($873 & 1) {
    $885 = ___cxa_find_matching_catch() | 0;
    $$0$i272 = tempRet0;
    $$01$i271 = $885;
   } else {
    HEAP32[$ss4 + 136 >> 2] = 0;
    HEAP32[$ss4 + 140 >> 2] = -1;
    HEAP32[$ss4 >> 2] = 772;
    HEAP32[$868 >> 2] = 812;
    HEAP32[$869 >> 2] = 792;
    __THREW__ = 0;
    invoke_vi(179, $870 | 0);
    $877 = __THREW__;
    __THREW__ = 0;
    do if ($877 & 1) {
     $887 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i269$index84Z2D = tempRet0;
     $eh$lpad$body$i269$indexZ2D = $887;
    } else {
     HEAP32[$870 >> 2] = 1104;
     $879 = $ss4 + 44 | 0;
     HEAP32[$879 + 0 >> 2] = 0;
     HEAP32[$879 + 4 >> 2] = 0;
     HEAP32[$879 + 8 >> 2] = 0;
     HEAP32[$879 + 12 >> 2] = 0;
     HEAP32[$ss4 + 60 >> 2] = 24;
     HEAP32[$6 + 0 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $870 | 0, $6 | 0);
     $881 = __THREW__;
     __THREW__ = 0;
     if ($881 & 1) {
      $883 = ___cxa_find_matching_catch() | 0;
      $884 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($879);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($870);
      $eh$lpad$body$i269$index84Z2D = $884;
      $eh$lpad$body$i269$indexZ2D = $883;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
     __THREW__ = 0;
     $890 = invoke_iiii(25, $ss4 + 8 | 0, 35864, 22) | 0;
     $891 = __THREW__;
     __THREW__ = 0;
     L345 : do if ($891 & 1) label = 245; else {
      $893 = HEAP8[$63 >> 0] | 0;
      if (!($893 & 1)) {
       $903 = $63 + 1 | 0;
       $904 = ($893 & 255) >>> 1;
      } else {
       $903 = HEAP32[$begin + 12 >> 2] | 0;
       $904 = HEAP32[$begin + 8 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $890 | 0, $903 | 0, $904 | 0) | 0;
      $905 = __THREW__;
      __THREW__ = 0;
      if ($905 & 1) label = 245; else {
       $907 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $37 | 0, $870 | 0);
       $908 = __THREW__;
       __THREW__ = 0;
       do if ($908 & 1) {
        $922 = ___cxa_find_matching_catch() | 0;
        $$1322479 = tempRet0;
        $$13480 = $922;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $907 | 0, $66 | 0);
        $910 = __THREW__;
        __THREW__ = 0;
        if ($910 & 1) $$051 = 1; else {
         $912 = $907 + 12 | 0;
         HEAP32[$912 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
         HEAP32[$912 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
         HEAP32[$912 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
         HEAP32[$912 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $907 + 28 | 0, $37 | 0);
         $914 = __THREW__;
         __THREW__ = 0;
         if ($914 & 1) {
          $916 = ___cxa_find_matching_catch() | 0;
          $917 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($907);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($37);
          $$1322479 = $917;
          $$13480 = $916;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $907 | 0, 48, 178);
         $918 = __THREW__;
         __THREW__ = 0;
         if ($918 & 1) $$051 = 0; else {}
        }
        $924 = ___cxa_find_matching_catch() | 0;
        $925 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($37);
        if ($$051) {
         $$1322479 = $925;
         $$13480 = $924;
        } else {
         $$14 = $924;
         $$1423 = $925;
         break L345;
        }
       } while (0);
       ___cxa_free_exception($907 | 0);
       $$14 = $$13480;
       $$1423 = $$1322479;
      }
     } while (0);
     if ((label | 0) == 245) {
      $920 = ___cxa_find_matching_catch() | 0;
      $$14 = $920;
      $$1423 = tempRet0;
     }
     HEAP32[$ss4 >> 2] = 772;
     HEAP32[$ss4 + 64 >> 2] = 812;
     HEAP32[$869 >> 2] = 792;
     HEAP32[$870 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($879);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($870);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($868);
     $$31 = $$14;
     $$3140 = $$1423;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
     ___resumeException($$31 | 0);
    } while (0);
    $$0$i272 = $eh$lpad$body$i269$index84Z2D;
    $$01$i271 = $eh$lpad$body$i269$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($868);
   $eh$lpad$body76$index16Z2D = $$0$i272;
   $eh$lpad$body76$indexZ2D = $$01$i271;
   break;
  }
 case 16:
  {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $75 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$18 >> 2] = HEAP32[$75 >> 2];
   $77 = $18 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $77 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $79 = __THREW__;
   __THREW__ = 0;
   if ($79 & 1) label = 19; else {
    HEAP32[$18 >> 2] = HEAP32[$75 >> 2];
    $82 = $18 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $82 | 0, $this$idx$val$idx$val$i + 24 | 0);
    $84 = __THREW__;
    __THREW__ = 0;
    if ($84 & 1) {
     $86 = ___cxa_find_matching_catch() | 0;
     $87 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($77);
     $eh$lpad$body76$index16Z2D = $87;
     $eh$lpad$body76$indexZ2D = $86;
     break L4;
    }
    $88 = $18 + 28 | 0;
    $89 = $this$idx$val$idx$val$i + 36 | 0;
    HEAP32[$88 + 0 >> 2] = HEAP32[$89 + 0 >> 2];
    HEAP32[$88 + 4 >> 2] = HEAP32[$89 + 4 >> 2];
    HEAP32[$88 + 8 >> 2] = HEAP32[$89 + 8 >> 2];
    HEAP32[$88 + 12 >> 2] = HEAP32[$89 + 12 >> 2];
    HEAP32[$18 >> 2] = HEAP32[$75 >> 2];
    $91 = HEAP32[$this >> 2] | 0;
    $93 = HEAP32[$91 + 4 >> 2] | 0;
    $94 = $93 + 4 | 0;
    $96 = HEAP32[$93 >> 2] | 0;
    HEAP32[$96 + 4 >> 2] = HEAP32[$94 >> 2];
    HEAP32[HEAP32[$94 >> 2] >> 2] = $96;
    $99 = $91 + 8 | 0;
    HEAP32[$99 >> 2] = (HEAP32[$99 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($93 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($93 + 12 | 0);
    __ZdlPv($93);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($82);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($77);
    __THREW__ = 0;
    $104 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
    $105 = __THREW__;
    __THREW__ = 0;
    if ($105 & 1) label = 19; else {
     $108 = HEAP32[$this + 4 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $19 | 0, $66 | 0);
     $109 = __THREW__;
     __THREW__ = 0;
     if ($109 & 1) label = 19; else {
      $112 = $19 + 12 | 0;
      $113 = $72;
      $118 = HEAP32[$113 + 4 >> 2] | 0;
      $119 = $112;
      HEAP32[$119 >> 2] = HEAP32[$113 >> 2];
      HEAP32[$119 + 4 >> 2] = $118;
      $124 = $104 + 24 | 0;
      $129 = HEAP32[$124 + 4 >> 2] | 0;
      $130 = $19 + 20 | 0;
      HEAP32[$130 >> 2] = HEAP32[$124 >> 2];
      HEAP32[$130 + 4 >> 2] = $129;
      __THREW__ = 0;
      $134 = invoke_ii(67, 52) | 0;
      $135 = __THREW__;
      __THREW__ = 0;
      do if ($135 & 1) label = 21; else {
       HEAP32[$134 >> 2] = 34168;
       __THREW__ = 0;
       invoke_vii(40, $134 + 4 | 0, $19 | 0);
       $138 = __THREW__;
       __THREW__ = 0;
       if ($138 & 1) {
        $157 = ___cxa_find_matching_catch() | 0;
        $158 = tempRet0;
        __ZdlPv($134);
        $eh$lpad$body84$index35Z2D = $158;
        $eh$lpad$body84$indexZ2D = $157;
        break;
       }
       $140 = $134 + 16 | 0;
       HEAP32[$140 + 0 >> 2] = HEAP32[$112 + 0 >> 2];
       HEAP32[$140 + 4 >> 2] = HEAP32[$112 + 4 >> 2];
       HEAP32[$140 + 8 >> 2] = HEAP32[$112 + 8 >> 2];
       HEAP32[$140 + 12 >> 2] = HEAP32[$112 + 12 >> 2];
       HEAP32[$134 + 32 >> 2] = 5;
       HEAP32[$134 + 36 >> 2] = 0;
       HEAP32[$134 + 40 >> 2] = 0;
       HEAP32[$134 + 44 >> 2] = 0;
       HEAP32[$134 >> 2] = 36952;
       HEAP32[$134 + 48 >> 2] = $104;
       HEAP32[$15 >> 2] = $134;
       $146 = $108 + 16 | 0;
       $147 = HEAP32[$146 >> 2] | 0;
       if ($147 >>> 0 < (HEAP32[$108 + 20 >> 2] | 0) >>> 0) {
        if (!$147) $153 = 0; else {
         HEAP32[$147 >> 2] = $134;
         $153 = HEAP32[$146 >> 2] | 0;
        }
        HEAP32[$146 >> 2] = $153 + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(51, $108 + 12 | 0, $15 | 0);
        $155 = __THREW__;
        __THREW__ = 0;
        if ($155 & 1) {
         label = 21;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
       $$0 = $134;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
       STACKTOP = sp;
       return $$0 | 0;
      } while (0);
      if ((label | 0) == 21) {
       $163 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body84$index35Z2D = tempRet0;
       $eh$lpad$body84$indexZ2D = $163;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
      $$31 = $eh$lpad$body84$indexZ2D;
      $$3140 = $eh$lpad$body84$index35Z2D;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
      ___resumeException($$31 | 0);
     }
    }
   }
   break;
  }
 default:
  if (!$precedence) label = 270; else label = 271;
 } while (0);
 L395 : do if ((label | 0) == 270) {
  __THREW__ = 0;
  $1019 = invoke_iii(30, $this | 0, $obj_level | 0) | 0;
  $1020 = __THREW__;
  __THREW__ = 0;
  if ($1020 & 1) label = 19; else {
   $$0 = $1019;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else if ((label | 0) == 271) {
  $1022 = $precedence + -1 | 0;
  __THREW__ = 0;
  $1023 = invoke_iiii(28, $this | 0, $1022 | 0, $obj_level | 0) | 0;
  $1024 = __THREW__;
  __THREW__ = 0;
  if ($1024 & 1) label = 19; else {
   $1026 = $39 + 4 | 0;
   $1027 = $39 + 16 | 0;
   $1028 = $39 + 28 | 0;
   $1029 = $40 + 4 | 0;
   $1030 = $40 + 16 | 0;
   $1031 = $40 + 28 | 0;
   $1032 = ($precedence | 0) == 5;
   $1033 = $41 + 4 | 0;
   $1034 = $41 + 16 | 0;
   $1035 = $41 + 28 | 0;
   $1036 = $op7 + 4 | 0;
   $1037 = $op7 + 16 | 0;
   $1038 = $op7 + 28 | 0;
   $1039 = $this + 4 | 0;
   $1040 = $53 + 12 | 0;
   $1041 = $l + 12 | 0;
   $1042 = $55 + 12 | 0;
   $1043 = $56 + 12 | 0;
   $1044 = $57 + 12 | 0;
   $1045 = $57 + 20 | 0;
   $1046 = $58 + 4 | 0;
   $1047 = $58 + 8 | 0;
   $1048 = $59 + 12 | 0;
   $1049 = $59 + 20 | 0;
   $1050 = $60 + 12 | 0;
   $1051 = $end + 36 | 0;
   $1052 = $45 + 12 | 0;
   $1053 = $45 + 20 | 0;
   $1054 = $end + 16 | 0;
   $1055 = $end + 4 | 0;
   $1056 = $field + 16 | 0;
   $1057 = $field + 36 | 0;
   $1058 = $field + 28 | 0;
   $1059 = $46 + 12 | 0;
   $1060 = $46 + 20 | 0;
   $1061 = $field + 4 | 0;
   $1062 = $48 + 12 | 0;
   $1063 = $48 + 20 | 0;
   $1064 = $args + 4 | 0;
   $1065 = $args + 8 | 0;
   $1066 = $end9 + 36 | 0;
   $1067 = $50 + 12 | 0;
   $1068 = $50 + 20 | 0;
   $1069 = $51 + 4 | 0;
   $1070 = $51 + 8 | 0;
   $1071 = $end9 + 16 | 0;
   $1072 = $end9 + 4 | 0;
   $1073 = $end10 + 36 | 0;
   $1074 = $52 + 12 | 0;
   $1075 = $52 + 20 | 0;
   $1076 = $end10 + 16 | 0;
   $1077 = $end10 + 4 | 0;
   $1078 = ($precedence | 0) == 2;
   $1291 = $1023;
   L400 : while (1) {
    HEAP32[$bop >> 2] = 2;
    $this$idx56$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $1079 = $this$idx56$val$idx$val + 8 | 0;
    HEAP32[$39 >> 2] = HEAP32[$1079 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1026 | 0, $this$idx56$val$idx$val + 12 | 0);
    $1082 = __THREW__;
    __THREW__ = 0;
    if ($1082 & 1) {
     label = 18;
     break;
    }
    HEAP32[$39 >> 2] = HEAP32[$1079 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1027 | 0, $this$idx56$val$idx$val + 24 | 0);
    $1086 = __THREW__;
    __THREW__ = 0;
    if ($1086 & 1) {
     label = 275;
     break;
    }
    $1090 = $this$idx56$val$idx$val + 36 | 0;
    HEAP32[$1028 + 0 >> 2] = HEAP32[$1090 + 0 >> 2];
    HEAP32[$1028 + 4 >> 2] = HEAP32[$1090 + 4 >> 2];
    HEAP32[$1028 + 8 >> 2] = HEAP32[$1090 + 8 >> 2];
    HEAP32[$1028 + 12 >> 2] = HEAP32[$1090 + 12 >> 2];
    $1091 = HEAP32[$1079 >> 2] | 0;
    HEAP32[$39 >> 2] = $1091;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1027);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1026);
    L404 : do switch ($1091 | 0) {
    case 13:
     {
      $this$idx55$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1092 = $this$idx55$val$idx$val + 8 | 0;
      HEAP32[$40 >> 2] = HEAP32[$1092 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1029 | 0, $this$idx55$val$idx$val + 12 | 0);
      $1095 = __THREW__;
      __THREW__ = 0;
      if ($1095 & 1) {
       label = 18;
       break L400;
      }
      HEAP32[$40 >> 2] = HEAP32[$1092 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1030 | 0, $this$idx55$val$idx$val + 24 | 0);
      $1099 = __THREW__;
      __THREW__ = 0;
      if ($1099 & 1) {
       label = 279;
       break L400;
      }
      $1103 = $this$idx55$val$idx$val + 36 | 0;
      HEAP32[$1031 + 0 >> 2] = HEAP32[$1103 + 0 >> 2];
      HEAP32[$1031 + 4 >> 2] = HEAP32[$1103 + 4 >> 2];
      HEAP32[$1031 + 8 >> 2] = HEAP32[$1103 + 8 >> 2];
      HEAP32[$1031 + 12 >> 2] = HEAP32[$1103 + 12 >> 2];
      HEAP32[$40 >> 2] = HEAP32[$1092 >> 2];
      $1106 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($1029, 35888) | 0) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1030);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1029);
      if ($1106) if ($1032) {
       $1742 = 2;
       break L404;
      } else {
       $$0 = $1291;
       label = 521;
       break L400;
      }
      $this$idx54$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1107 = $this$idx54$val$idx$val + 8 | 0;
      HEAP32[$41 >> 2] = HEAP32[$1107 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1033 | 0, $this$idx54$val$idx$val + 12 | 0);
      $1110 = __THREW__;
      __THREW__ = 0;
      if ($1110 & 1) {
       label = 18;
       break L400;
      }
      HEAP32[$41 >> 2] = HEAP32[$1107 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1034 | 0, $this$idx54$val$idx$val + 24 | 0);
      $1114 = __THREW__;
      __THREW__ = 0;
      if ($1114 & 1) {
       label = 284;
       break L400;
      }
      $1118 = $this$idx54$val$idx$val + 36 | 0;
      HEAP32[$1035 + 0 >> 2] = HEAP32[$1118 + 0 >> 2];
      HEAP32[$1035 + 4 >> 2] = HEAP32[$1118 + 4 >> 2];
      HEAP32[$1035 + 8 >> 2] = HEAP32[$1118 + 8 >> 2];
      HEAP32[$1035 + 12 >> 2] = HEAP32[$1118 + 12 >> 2];
      HEAP32[$41 >> 2] = HEAP32[$1107 >> 2];
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($$byval_copy, 1280, $1033);
      $1120 = HEAP32[$$byval_copy >> 2] | 0;
      if (($1120 | 0) == (1284 | 0)) {
       label = 287;
       break L400;
      }
      $1123 = HEAP32[$1120 + 28 >> 2] | 0;
      HEAP32[$bop >> 2] = $1123;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1034);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1033);
      __THREW__ = 0;
      $1124 = invoke_iii(31, 1248, $bop | 0) | 0;
      $1125 = __THREW__;
      __THREW__ = 0;
      if ($1125 & 1) {
       label = 18;
       break L400;
      }
      if ((HEAP32[$1124 >> 2] | 0) == ($precedence | 0)) $1742 = $1123; else {
       $$0 = $1291;
       label = 521;
       break L400;
      }
      break;
     }
    case 0:
    case 8:
    case 2:
    case 7:
     {
      if ($1078) $1742 = 2; else {
       $$0 = $1291;
       label = 521;
       break L400;
      }
      break;
     }
    default:
     {
      $$0 = $1291;
      label = 521;
      break L400;
     }
    } while (0);
    $this$idx$val$idx$val$i362 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $1224 = $this$idx$val$idx$val$i362 + 8 | 0;
    HEAP32[$op7 >> 2] = HEAP32[$1224 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1036 | 0, $this$idx$val$idx$val$i362 + 12 | 0);
    $1227 = __THREW__;
    __THREW__ = 0;
    if ($1227 & 1) {
     label = 18;
     break;
    }
    HEAP32[$op7 >> 2] = HEAP32[$1224 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1037 | 0, $this$idx$val$idx$val$i362 + 24 | 0);
    $1231 = __THREW__;
    __THREW__ = 0;
    if ($1231 & 1) {
     label = 326;
     break;
    }
    $1235 = $this$idx$val$idx$val$i362 + 36 | 0;
    HEAP32[$1038 + 0 >> 2] = HEAP32[$1235 + 0 >> 2];
    HEAP32[$1038 + 4 >> 2] = HEAP32[$1235 + 4 >> 2];
    HEAP32[$1038 + 8 >> 2] = HEAP32[$1235 + 8 >> 2];
    HEAP32[$1038 + 12 >> 2] = HEAP32[$1235 + 12 >> 2];
    HEAP32[$op7 >> 2] = HEAP32[$1224 >> 2];
    $1237 = HEAP32[$this >> 2] | 0;
    $1239 = HEAP32[$1237 + 4 >> 2] | 0;
    $1240 = $1239 + 4 | 0;
    $1242 = HEAP32[$1239 >> 2] | 0;
    HEAP32[$1242 + 4 >> 2] = HEAP32[$1240 >> 2];
    HEAP32[HEAP32[$1240 >> 2] >> 2] = $1242;
    $1245 = $1237 + 8 | 0;
    HEAP32[$1245 >> 2] = (HEAP32[$1245 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1239 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1239 + 12 | 0);
    __ZdlPv($1239);
    $1250 = HEAP32[$op7 >> 2] | 0;
    do if (($1250 | 0) == 2) {
     __THREW__ = 0;
     $1251 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $1252 = __THREW__;
     __THREW__ = 0;
     if ($1252 & 1) {
      label = 340;
      break L400;
     }
     __THREW__ = 0;
     invoke_viiii(13, $end | 0, $this | 0, 3, 0);
     $1254 = __THREW__;
     __THREW__ = 0;
     if ($1254 & 1) {
      label = 340;
      break L400;
     }
     $1256 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $45 | 0, $66 | 0);
     $1257 = __THREW__;
     __THREW__ = 0;
     if ($1257 & 1) {
      label = 341;
      break L400;
     }
     $1259 = $72;
     $1264 = HEAP32[$1259 + 4 >> 2] | 0;
     $1265 = $1052;
     HEAP32[$1265 >> 2] = HEAP32[$1259 >> 2];
     HEAP32[$1265 + 4 >> 2] = $1264;
     $1269 = $1051;
     $1274 = HEAP32[$1269 + 4 >> 2] | 0;
     $1275 = $1053;
     HEAP32[$1275 >> 2] = HEAP32[$1269 >> 2];
     HEAP32[$1275 + 4 >> 2] = $1274;
     __THREW__ = 0;
     $1279 = invoke_ii(67, 56) | 0;
     $1280 = __THREW__;
     __THREW__ = 0;
     if ($1280 & 1) {
      label = 342;
      break L400;
     }
     HEAP32[$1279 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1279 + 4 | 0, $45 | 0);
     $1283 = __THREW__;
     __THREW__ = 0;
     if ($1283 & 1) {
      label = 338;
      break L400;
     }
     $1285 = $1279 + 16 | 0;
     HEAP32[$1285 + 0 >> 2] = HEAP32[$1052 + 0 >> 2];
     HEAP32[$1285 + 4 >> 2] = HEAP32[$1052 + 4 >> 2];
     HEAP32[$1285 + 8 >> 2] = HEAP32[$1052 + 8 >> 2];
     HEAP32[$1285 + 12 >> 2] = HEAP32[$1052 + 12 >> 2];
     HEAP32[$1279 + 32 >> 2] = 9;
     HEAP32[$1279 + 36 >> 2] = 0;
     HEAP32[$1279 + 40 >> 2] = 0;
     HEAP32[$1279 + 44 >> 2] = 0;
     HEAP32[$1279 >> 2] = 36360;
     HEAP32[$1279 + 48 >> 2] = $1291;
     HEAP32[$1279 + 52 >> 2] = $1251;
     HEAP32[$2 >> 2] = $1279;
     $1293 = $1256 + 16 | 0;
     $1294 = HEAP32[$1293 >> 2] | 0;
     if ($1294 >>> 0 < (HEAP32[$1256 + 20 >> 2] | 0) >>> 0) {
      if (!$1294) $1300 = 0; else {
       HEAP32[$1294 >> 2] = $1279;
       $1300 = HEAP32[$1293 >> 2] | 0;
      }
      HEAP32[$1293 >> 2] = $1300 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1256 + 12 | 0, $2 | 0);
      $1302 = __THREW__;
      __THREW__ = 0;
      if ($1302 & 1) {
       label = 342;
       break L400;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($45);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1054);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1055);
     $lhs$1 = $1279;
    } else if (($1250 | 0) == 7) {
     __THREW__ = 0;
     invoke_viiii(13, $field | 0, $this | 0, 11, 0);
     $1312 = __THREW__;
     __THREW__ = 0;
     if ($1312 & 1) {
      label = 340;
      break L400;
     }
     $1314 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $46 | 0, $1056 | 0);
     $1315 = __THREW__;
     __THREW__ = 0;
     if ($1315 & 1) {
      label = 359;
      break L400;
     }
     $1317 = $1058;
     $1322 = HEAP32[$1317 + 4 >> 2] | 0;
     $1323 = $1059;
     HEAP32[$1323 >> 2] = HEAP32[$1317 >> 2];
     HEAP32[$1323 + 4 >> 2] = $1322;
     $1327 = $1057;
     $1332 = HEAP32[$1327 + 4 >> 2] | 0;
     $1333 = $1060;
     HEAP32[$1333 >> 2] = HEAP32[$1327 >> 2];
     HEAP32[$1333 + 4 >> 2] = $1332;
     __THREW__ = 0;
     invoke_vii(40, $47 | 0, $1061 | 0);
     $1337 = __THREW__;
     __THREW__ = 0;
     if ($1337 & 1) {
      label = 360;
      break L400;
     }
     __THREW__ = 0;
     $1339 = invoke_iiii(27, $1314 | 0, $46 | 0, $47 | 0) | 0;
     $1340 = __THREW__;
     __THREW__ = 0;
     if ($1340 & 1) {
      label = 361;
      break L400;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($47);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($46);
     $1342 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $48 | 0, $66 | 0);
     $1343 = __THREW__;
     __THREW__ = 0;
     if ($1343 & 1) {
      label = 359;
      break L400;
     }
     $1345 = $72;
     $1350 = HEAP32[$1345 + 4 >> 2] | 0;
     $1351 = $1062;
     HEAP32[$1351 >> 2] = HEAP32[$1345 >> 2];
     HEAP32[$1351 + 4 >> 2] = $1350;
     $1355 = $1057;
     $1360 = HEAP32[$1355 + 4 >> 2] | 0;
     $1361 = $1063;
     HEAP32[$1361 >> 2] = HEAP32[$1355 >> 2];
     HEAP32[$1361 + 4 >> 2] = $1360;
     __THREW__ = 0;
     $1365 = invoke_ii(67, 56) | 0;
     $1366 = __THREW__;
     __THREW__ = 0;
     if ($1366 & 1) {
      label = 363;
      break L400;
     }
     HEAP32[$1365 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1365 + 4 | 0, $48 | 0);
     $1369 = __THREW__;
     __THREW__ = 0;
     if ($1369 & 1) {
      label = 357;
      break L400;
     }
     $1371 = $1365 + 16 | 0;
     HEAP32[$1371 + 0 >> 2] = HEAP32[$1062 + 0 >> 2];
     HEAP32[$1371 + 4 >> 2] = HEAP32[$1062 + 4 >> 2];
     HEAP32[$1371 + 8 >> 2] = HEAP32[$1062 + 8 >> 2];
     HEAP32[$1371 + 12 >> 2] = HEAP32[$1062 + 12 >> 2];
     HEAP32[$1365 + 32 >> 2] = 9;
     HEAP32[$1365 + 36 >> 2] = 0;
     HEAP32[$1365 + 40 >> 2] = 0;
     HEAP32[$1365 + 44 >> 2] = 0;
     HEAP32[$1365 >> 2] = 36360;
     HEAP32[$1365 + 48 >> 2] = $1291;
     HEAP32[$1365 + 52 >> 2] = $1339;
     HEAP32[$1 >> 2] = $1365;
     $1378 = $1342 + 16 | 0;
     $1379 = HEAP32[$1378 >> 2] | 0;
     if ($1379 >>> 0 < (HEAP32[$1342 + 20 >> 2] | 0) >>> 0) {
      if (!$1379) $1385 = 0; else {
       HEAP32[$1379 >> 2] = $1365;
       $1385 = HEAP32[$1378 >> 2] | 0;
      }
      HEAP32[$1378 >> 2] = $1385 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1342 + 12 | 0, $1 | 0);
      $1387 = __THREW__;
      __THREW__ = 0;
      if ($1387 & 1) {
       label = 363;
       break L400;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($48);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1056);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1061);
     $lhs$1 = $1365;
    } else if (($1250 | 0) == 8) {
     HEAP32[$args >> 2] = 0;
     HEAP32[$1064 >> 2] = 0;
     HEAP32[$1065 >> 2] = 0;
     __THREW__ = 0;
     invoke_viii(3, $49 | 0, 35920, 17);
     $1399 = __THREW__;
     __THREW__ = 0;
     if ($1399 & 1) {
      label = 390;
      break L400;
     }
     __THREW__ = 0;
     invoke_viiiii(4, $end9 | 0, $this | 0, $args | 0, $49 | 0, $obj_level | 0);
     $1401 = __THREW__;
     __THREW__ = 0;
     if ($1401 & 1) {
      label = 391;
      break L400;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($49);
     $1403 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $50 | 0, $66 | 0);
     $1404 = __THREW__;
     __THREW__ = 0;
     if ($1404 & 1) {
      label = 392;
      break L400;
     }
     $1406 = $72;
     $1411 = HEAP32[$1406 + 4 >> 2] | 0;
     $1412 = $1067;
     HEAP32[$1412 >> 2] = HEAP32[$1406 >> 2];
     HEAP32[$1412 + 4 >> 2] = $1411;
     $1416 = $1066;
     $1421 = HEAP32[$1416 + 4 >> 2] | 0;
     $1422 = $1068;
     HEAP32[$1422 >> 2] = HEAP32[$1416 >> 2];
     HEAP32[$1422 + 4 >> 2] = $1421;
     HEAP32[$51 >> 2] = 0;
     HEAP32[$1069 >> 2] = 0;
     HEAP32[$1070 >> 2] = 0;
     $1430 = (HEAP32[$1064 >> 2] | 0) - (HEAP32[$args >> 2] | 0) | 0;
     $1431 = $1430 >> 2;
     if ($1431) {
      if ($1431 >>> 0 > 1073741823) {
       __THREW__ = 0;
       invoke_vi(181, $51 | 0);
       $1434 = __THREW__;
       __THREW__ = 0;
       if ($1434 & 1) {
        label = 377;
        break L400;
       }
      }
      __THREW__ = 0;
      $1436 = invoke_ii(67, $1430 | 0) | 0;
      $1437 = __THREW__;
      __THREW__ = 0;
      if ($1437 & 1) {
       label = 377;
       break L400;
      }
      HEAP32[$1069 >> 2] = $1436;
      HEAP32[$51 >> 2] = $1436;
      HEAP32[$1070 >> 2] = $1436 + ($1431 << 2);
      $1440 = HEAP32[$args >> 2] | 0;
      $1441 = HEAP32[$1064 >> 2] | 0;
      if (($1440 | 0) != ($1441 | 0)) {
       $$01$i$i398 = $1440;
       $1443 = $1436;
       do {
        if (!$1443) $1447 = 0; else {
         HEAP32[$1443 >> 2] = HEAP32[$$01$i$i398 >> 2];
         $1447 = HEAP32[$1069 >> 2] | 0;
        }
        $1443 = $1447 + 4 | 0;
        HEAP32[$1069 >> 2] = $1443;
        $$01$i$i398 = $$01$i$i398 + 4 | 0;
       } while (($$01$i$i398 | 0) != ($1441 | 0));
      }
     }
     __THREW__ = 0;
     $1460 = invoke_iiiii(7, $1403 | 0, $50 | 0, $1291 | 0, $51 | 0) | 0;
     $1461 = __THREW__;
     __THREW__ = 0;
     if ($1461 & 1) {
      label = 394;
      break L400;
     }
     $1463 = HEAP32[$51 >> 2] | 0;
     if ($1463) {
      $1465 = HEAP32[$1069 >> 2] | 0;
      if (($1465 | 0) != ($1463 | 0)) HEAP32[$1069 >> 2] = $1465 + (~(($1465 + -4 - $1463 | 0) >>> 2) << 2);
      __ZdlPv($1463);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($50);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1071);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1072);
     $1471 = HEAP32[$args >> 2] | 0;
     if (!$1471) $lhs$1 = $1460; else {
      $1473 = HEAP32[$1064 >> 2] | 0;
      if (($1473 | 0) != ($1471 | 0)) HEAP32[$1064 >> 2] = $1473 + (~(($1473 + -4 - $1471 | 0) >>> 2) << 2);
      __ZdlPv($1471);
      $lhs$1 = $1460;
     }
    } else if (!$1250) {
     __THREW__ = 0;
     invoke_viiiii(5, $end10 | 0, $this | 0, $obj | 0, $op7 | 0, $obj_level | 0);
     $1503 = __THREW__;
     __THREW__ = 0;
     if ($1503 & 1) {
      label = 340;
      break L400;
     }
     $1505 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $52 | 0, $66 | 0);
     $1506 = __THREW__;
     __THREW__ = 0;
     if ($1506 & 1) {
      label = 415;
      break L400;
     }
     $1508 = $72;
     $1513 = HEAP32[$1508 + 4 >> 2] | 0;
     $1514 = $1074;
     HEAP32[$1514 >> 2] = HEAP32[$1508 >> 2];
     HEAP32[$1514 + 4 >> 2] = $1513;
     $1518 = $1073;
     $1523 = HEAP32[$1518 + 4 >> 2] | 0;
     $1524 = $1075;
     HEAP32[$1524 >> 2] = HEAP32[$1518 >> 2];
     HEAP32[$1524 + 4 >> 2] = $1523;
     $1528 = HEAP32[$obj >> 2] | 0;
     __THREW__ = 0;
     $1529 = invoke_ii(67, 60) | 0;
     $1530 = __THREW__;
     __THREW__ = 0;
     if ($1530 & 1) {
      label = 416;
      break L400;
     }
     HEAP32[$1529 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1529 + 4 | 0, $52 | 0);
     $1533 = __THREW__;
     __THREW__ = 0;
     if ($1533 & 1) {
      label = 413;
      break L400;
     }
     $1535 = $1529 + 16 | 0;
     HEAP32[$1535 + 0 >> 2] = HEAP32[$1074 + 0 >> 2];
     HEAP32[$1535 + 4 >> 2] = HEAP32[$1074 + 4 >> 2];
     HEAP32[$1535 + 8 >> 2] = HEAP32[$1074 + 8 >> 2];
     HEAP32[$1535 + 12 >> 2] = HEAP32[$1074 + 12 >> 2];
     HEAP32[$1529 + 32 >> 2] = 2;
     HEAP32[$1529 + 36 >> 2] = 0;
     HEAP32[$1529 + 40 >> 2] = 0;
     HEAP32[$1529 + 44 >> 2] = 0;
     HEAP32[$1529 >> 2] = 35976;
     HEAP32[$1529 + 48 >> 2] = $1291;
     HEAP32[$1529 + 52 >> 2] = 2;
     HEAP32[$1529 + 56 >> 2] = $1528;
     HEAP32[$0 >> 2] = $1529;
     $1543 = $1505 + 16 | 0;
     $1544 = HEAP32[$1543 >> 2] | 0;
     if ($1544 >>> 0 < (HEAP32[$1505 + 20 >> 2] | 0) >>> 0) {
      if (!$1544) $1550 = 0; else {
       HEAP32[$1544 >> 2] = $1529;
       $1550 = HEAP32[$1543 >> 2] | 0;
      }
      HEAP32[$1543 >> 2] = $1550 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1505 + 12 | 0, $0 | 0);
      $1552 = __THREW__;
      __THREW__ = 0;
      if ($1552 & 1) {
       label = 416;
       break L400;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($52);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1076);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1077);
     $lhs$1 = $1529;
    } else {
     if (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($1036, 35888) | 0) {
      __THREW__ = 0;
      $1739 = invoke_iiii(28, $this | 0, $1022 | 0, $obj_level | 0) | 0;
      $1740 = __THREW__;
      __THREW__ = 0;
      if ($1740 & 1) {
       label = 340;
       break L400;
      }
      if (($1742 | 0) == 11) {
       HEAP32[$bop >> 2] = 10;
       $1781 = 10;
       $invert$0$off0 = 1;
      } else {
       $1781 = $1742;
       $invert$0$off0 = 0;
      }
      $1744 = HEAP32[$1039 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $59 | 0, $66 | 0);
      $1745 = __THREW__;
      __THREW__ = 0;
      if ($1745 & 1) {
       label = 340;
       break L400;
      }
      $1748 = $72;
      $1753 = HEAP32[$1748 + 4 >> 2] | 0;
      $1754 = $1048;
      HEAP32[$1754 >> 2] = HEAP32[$1748 >> 2];
      HEAP32[$1754 + 4 >> 2] = $1753;
      $1758 = $1739 + 24 | 0;
      $1763 = HEAP32[$1758 + 4 >> 2] | 0;
      $1764 = $1049;
      HEAP32[$1764 >> 2] = HEAP32[$1758 >> 2];
      HEAP32[$1764 + 4 >> 2] = $1763;
      __THREW__ = 0;
      $1768 = invoke_ii(67, 60) | 0;
      $1769 = __THREW__;
      __THREW__ = 0;
      if ($1769 & 1) {
       label = 515;
       break L400;
      }
      HEAP32[$1768 >> 2] = 34168;
      $1771 = $1768 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $1771 | 0, $59 | 0);
      $1772 = __THREW__;
      __THREW__ = 0;
      if ($1772 & 1) {
       label = 503;
       break L400;
      }
      $1774 = $1768 + 16 | 0;
      HEAP32[$1774 + 0 >> 2] = HEAP32[$1048 + 0 >> 2];
      HEAP32[$1774 + 4 >> 2] = HEAP32[$1048 + 4 >> 2];
      HEAP32[$1774 + 8 >> 2] = HEAP32[$1048 + 8 >> 2];
      HEAP32[$1774 + 12 >> 2] = HEAP32[$1048 + 12 >> 2];
      HEAP32[$1768 + 32 >> 2] = 2;
      HEAP32[$1768 + 36 >> 2] = 0;
      HEAP32[$1768 + 40 >> 2] = 0;
      HEAP32[$1768 + 44 >> 2] = 0;
      HEAP32[$1768 >> 2] = 35976;
      HEAP32[$1768 + 48 >> 2] = $1291;
      HEAP32[$1768 + 52 >> 2] = $1781;
      HEAP32[$1768 + 56 >> 2] = $1739;
      HEAP32[$16 >> 2] = $1768;
      $1783 = $1744 + 16 | 0;
      $1784 = HEAP32[$1783 >> 2] | 0;
      if ($1784 >>> 0 < (HEAP32[$1744 + 20 >> 2] | 0) >>> 0) {
       if (!$1784) $1790 = 0; else {
        HEAP32[$1784 >> 2] = $1768;
        $1790 = HEAP32[$1783 >> 2] | 0;
       }
       HEAP32[$1783 >> 2] = $1790 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1744 + 12 | 0, $16 | 0);
       $1792 = __THREW__;
       __THREW__ = 0;
       if ($1792 & 1) {
        label = 515;
        break L400;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($59);
      if (!$invert$0$off0) {
       $lhs$1 = $1768;
       break;
      }
      $1796 = HEAP32[$1039 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $60 | 0, $1771 | 0);
      $1797 = __THREW__;
      __THREW__ = 0;
      if ($1797 & 1) {
       label = 340;
       break L400;
      };
      HEAP32[$1050 + 0 >> 2] = HEAP32[$1774 + 0 >> 2];
      HEAP32[$1050 + 4 >> 2] = HEAP32[$1774 + 4 >> 2];
      HEAP32[$1050 + 8 >> 2] = HEAP32[$1774 + 8 >> 2];
      HEAP32[$1050 + 12 >> 2] = HEAP32[$1774 + 12 >> 2];
      __THREW__ = 0;
      $1799 = invoke_ii(67, 56) | 0;
      $1800 = __THREW__;
      __THREW__ = 0;
      if ($1800 & 1) {
       label = 517;
       break L400;
      }
      HEAP32[$1799 >> 2] = 34168;
      __THREW__ = 0;
      invoke_vii(40, $1799 + 4 | 0, $60 | 0);
      $1803 = __THREW__;
      __THREW__ = 0;
      if ($1803 & 1) {
       label = 513;
       break L400;
      }
      $1805 = $1799 + 16 | 0;
      HEAP32[$1805 + 0 >> 2] = HEAP32[$1050 + 0 >> 2];
      HEAP32[$1805 + 4 >> 2] = HEAP32[$1050 + 4 >> 2];
      HEAP32[$1805 + 8 >> 2] = HEAP32[$1050 + 8 >> 2];
      HEAP32[$1805 + 12 >> 2] = HEAP32[$1050 + 12 >> 2];
      HEAP32[$1799 + 32 >> 2] = 19;
      HEAP32[$1799 + 36 >> 2] = 0;
      HEAP32[$1799 + 40 >> 2] = 0;
      HEAP32[$1799 + 44 >> 2] = 0;
      HEAP32[$1799 >> 2] = 36760;
      HEAP32[$1799 + 48 >> 2] = 0;
      HEAP32[$1799 + 52 >> 2] = $1768;
      HEAP32[$17 >> 2] = $1799;
      $1812 = $1796 + 16 | 0;
      $1813 = HEAP32[$1812 >> 2] | 0;
      if ($1813 >>> 0 < (HEAP32[$1796 + 20 >> 2] | 0) >>> 0) {
       if (!$1813) $1819 = 0; else {
        HEAP32[$1813 >> 2] = $1799;
        $1819 = HEAP32[$1812 >> 2] | 0;
       }
       HEAP32[$1812 >> 2] = $1819 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1796 + 12 | 0, $17 | 0);
       $1821 = __THREW__;
       __THREW__ = 0;
       if ($1821 & 1) {
        label = 517;
        break L400;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($60);
      $lhs$1 = $1799;
      break;
     }
     __THREW__ = 0;
     $1562 = invoke_iiii(28, $this | 0, $1022 | 0, $obj_level | 0) | 0;
     $1563 = __THREW__;
     __THREW__ = 0;
     if ($1563 & 1) {
      label = 340;
      break L400;
     };
     HEAP32[$l + 0 >> 2] = 0;
     HEAP32[$l + 4 >> 2] = 0;
     HEAP32[$l + 8 >> 2] = 0;
     HEAP32[$l + 12 >> 2] = 0;
     HEAP32[$l + 16 >> 2] = 0;
     HEAP32[$l + 20 >> 2] = 0;
     HEAP32[$l + 24 >> 2] = 0;
     $1565 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $53 | 0, $l | 0);
     $1566 = __THREW__;
     __THREW__ = 0;
     if ($1566 & 1) {
      label = 473;
      break L400;
     };
     HEAP32[$1040 + 0 >> 2] = HEAP32[$1041 + 0 >> 2];
     HEAP32[$1040 + 4 >> 2] = HEAP32[$1041 + 4 >> 2];
     HEAP32[$1040 + 8 >> 2] = HEAP32[$1041 + 8 >> 2];
     HEAP32[$1040 + 12 >> 2] = HEAP32[$1041 + 12 >> 2];
     $1568 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_viii(3, $54 | 0, 33912, 3);
     $1569 = __THREW__;
     __THREW__ = 0;
     if ($1569 & 1) {
      label = 475;
      break L400;
     }
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i448, $1568, $54);
     $1572 = HEAP32[$it$i448 >> 2] | 0;
     if (($1572 | 0) == ($1568 + 4 | 0)) {
      __THREW__ = 0;
      $1576 = invoke_ii(67, 12) | 0;
      $1577 = __THREW__;
      __THREW__ = 0;
      if ($1577 & 1) {
       label = 476;
       break L400;
      }
      __THREW__ = 0;
      invoke_vii(40, $1576 | 0, $54 | 0);
      $1579 = __THREW__;
      __THREW__ = 0;
      if ($1579 & 1) {
       label = 429;
       break L400;
      }
      __THREW__ = 0;
      $1581 = invoke_iii(23, $1568 | 0, $54 | 0) | 0;
      $1582 = __THREW__;
      __THREW__ = 0;
      if ($1582 & 1) {
       label = 476;
       break L400;
      }
      HEAP32[$1581 >> 2] = $1576;
      $$0$i450 = $1576;
     } else $$0$i450 = HEAP32[$1572 + 28 >> 2] | 0;
     __THREW__ = 0;
     $1586 = invoke_ii(67, 56) | 0;
     $1587 = __THREW__;
     __THREW__ = 0;
     if ($1587 & 1) {
      label = 476;
      break L400;
     }
     HEAP32[$1586 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1586 + 4 | 0, $53 | 0);
     $1590 = __THREW__;
     __THREW__ = 0;
     if ($1590 & 1) {
      label = 437;
      break L400;
     }
     $1592 = $1586 + 16 | 0;
     HEAP32[$1592 + 0 >> 2] = HEAP32[$1040 + 0 >> 2];
     HEAP32[$1592 + 4 >> 2] = HEAP32[$1040 + 4 >> 2];
     HEAP32[$1592 + 8 >> 2] = HEAP32[$1040 + 8 >> 2];
     HEAP32[$1592 + 12 >> 2] = HEAP32[$1040 + 12 >> 2];
     HEAP32[$1586 + 32 >> 2] = 20;
     HEAP32[$1586 + 36 >> 2] = 0;
     HEAP32[$1586 + 40 >> 2] = 0;
     HEAP32[$1586 + 44 >> 2] = 0;
     HEAP32[$1586 >> 2] = 35960;
     HEAP32[$1586 + 48 >> 2] = $$0$i450;
     HEAP32[$1586 + 52 >> 2] = $$0$i450;
     HEAP32[$$byval_copy >> 2] = $1586;
     $1599 = $1565 + 16 | 0;
     $1600 = HEAP32[$1599 >> 2] | 0;
     if ($1600 >>> 0 < (HEAP32[$1565 + 20 >> 2] | 0) >>> 0) {
      if (!$1600) $1606 = 0; else {
       HEAP32[$1600 >> 2] = $1586;
       $1606 = HEAP32[$1599 >> 2] | 0;
      }
      HEAP32[$1599 >> 2] = $1606 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1565 + 12 | 0, $$byval_copy | 0);
      $1608 = __THREW__;
      __THREW__ = 0;
      if ($1608 & 1) {
       label = 476;
       break L400;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($54);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($53);
     $1612 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $55 | 0, $l | 0);
     $1613 = __THREW__;
     __THREW__ = 0;
     if ($1613 & 1) {
      label = 473;
      break L400;
     };
     HEAP32[$1042 + 0 >> 2] = HEAP32[$1041 + 0 >> 2];
     HEAP32[$1042 + 4 >> 2] = HEAP32[$1041 + 4 >> 2];
     HEAP32[$1042 + 8 >> 2] = HEAP32[$1041 + 8 >> 2];
     HEAP32[$1042 + 12 >> 2] = HEAP32[$1041 + 12 >> 2];
     __THREW__ = 0;
     $1615 = invoke_iiii(30, $1612 | 0, $55 | 0, 35944) | 0;
     $1616 = __THREW__;
     __THREW__ = 0;
     if ($1616 & 1) {
      label = 479;
      break L400;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($55);
     $1618 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $56 | 0, $l | 0);
     $1619 = __THREW__;
     __THREW__ = 0;
     if ($1619 & 1) {
      label = 473;
      break L400;
     };
     HEAP32[$1043 + 0 >> 2] = HEAP32[$1041 + 0 >> 2];
     HEAP32[$1043 + 4 >> 2] = HEAP32[$1041 + 4 >> 2];
     HEAP32[$1043 + 8 >> 2] = HEAP32[$1041 + 8 >> 2];
     HEAP32[$1043 + 12 >> 2] = HEAP32[$1041 + 12 >> 2];
     __THREW__ = 0;
     $1621 = invoke_ii(67, 56) | 0;
     $1622 = __THREW__;
     __THREW__ = 0;
     if ($1622 & 1) {
      label = 480;
      break L400;
     }
     HEAP32[$1621 >> 2] = 34168;
     __THREW__ = 0;
     invoke_vii(40, $1621 + 4 | 0, $56 | 0);
     $1625 = __THREW__;
     __THREW__ = 0;
     if ($1625 & 1) {
      label = 448;
      break L400;
     }
     $1627 = $1621 + 16 | 0;
     HEAP32[$1627 + 0 >> 2] = HEAP32[$1043 + 0 >> 2];
     HEAP32[$1627 + 4 >> 2] = HEAP32[$1043 + 4 >> 2];
     HEAP32[$1627 + 8 >> 2] = HEAP32[$1043 + 8 >> 2];
     HEAP32[$1627 + 12 >> 2] = HEAP32[$1043 + 12 >> 2];
     HEAP32[$1621 + 32 >> 2] = 9;
     HEAP32[$1621 + 36 >> 2] = 0;
     HEAP32[$1621 + 40 >> 2] = 0;
     HEAP32[$1621 + 44 >> 2] = 0;
     HEAP32[$1621 >> 2] = 36360;
     HEAP32[$1621 + 48 >> 2] = $1586;
     HEAP32[$1621 + 52 >> 2] = $1615;
     HEAP32[$3 >> 2] = $1621;
     $1634 = $1618 + 16 | 0;
     $1635 = HEAP32[$1634 >> 2] | 0;
     if ($1635 >>> 0 < (HEAP32[$1618 + 20 >> 2] | 0) >>> 0) {
      if (!$1635) $1641 = 0; else {
       HEAP32[$1635 >> 2] = $1621;
       $1641 = HEAP32[$1634 >> 2] | 0;
      }
      HEAP32[$1634 >> 2] = $1641 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $1618 + 12 | 0, $3 | 0);
      $1643 = __THREW__;
      __THREW__ = 0;
      if ($1643 & 1) {
       label = 480;
       break L400;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($56);
     __THREW__ = 0;
     $1647 = invoke_ii(67, 8) | 0;
     $1648 = __THREW__;
     __THREW__ = 0;
     if ($1648 & 1) {
      label = 452;
      break L400;
     }
     $1650 = ($1647 | 0) == 0;
     if ($1650) $1830 = 0; else {
      HEAP32[$1647 >> 2] = $1291;
      $1830 = $1647;
     }
     HEAP32[$1830 + 4 >> 2] = $1562;
     $1674 = $1830 + 8 | 0;
     $1705 = HEAP32[$1039 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $57 | 0, $66 | 0);
     $1831 = __THREW__;
     __THREW__ = 0;
     if ($1831 & 1) {
      label = 482;
      break L400;
     }
     $1654 = $72;
     $1659 = HEAP32[$1654 + 4 >> 2] | 0;
     $1660 = $1044;
     HEAP32[$1660 >> 2] = HEAP32[$1654 >> 2];
     HEAP32[$1660 + 4 >> 2] = $1659;
     $1664 = $1562 + 24 | 0;
     $1669 = HEAP32[$1664 + 4 >> 2] | 0;
     $1670 = $1045;
     HEAP32[$1670 >> 2] = HEAP32[$1664 >> 2];
     HEAP32[$1670 + 4 >> 2] = $1669;
     HEAP32[$58 >> 2] = 0;
     HEAP32[$1046 >> 2] = 0;
     HEAP32[$1047 >> 2] = 0;
     $1677 = $1674 - $1647 | 0;
     $1678 = $1677 >> 2;
     do if ($1678) {
      if ($1678 >>> 0 > 1073741823) {
       __THREW__ = 0;
       invoke_vi(181, $58 | 0);
       $1681 = __THREW__;
       __THREW__ = 0;
       if ($1681 & 1) {
        label = 461;
        break L400;
       }
      }
      __THREW__ = 0;
      $1683 = invoke_ii(67, $1677 | 0) | 0;
      $1684 = __THREW__;
      __THREW__ = 0;
      if ($1684 & 1) {
       label = 461;
       break L400;
      }
      HEAP32[$1046 >> 2] = $1683;
      HEAP32[$58 >> 2] = $1683;
      HEAP32[$1047 >> 2] = $1683 + ($1678 << 2);
      if (($1647 | 0) == ($1674 | 0)) break; else {
       $$01$i$i246 = $1647;
       $1688 = $1683;
      }
      do {
       if (!$1688) $1692 = 0; else {
        HEAP32[$1688 >> 2] = HEAP32[$$01$i$i246 >> 2];
        $1692 = HEAP32[$1046 >> 2] | 0;
       }
       $1688 = $1692 + 4 | 0;
       HEAP32[$1046 >> 2] = $1688;
       $$01$i$i246 = $$01$i$i246 + 4 | 0;
      } while (($$01$i$i246 | 0) != ($1674 | 0));
     } while (0);
     __THREW__ = 0;
     $1706 = invoke_iiiii(7, $1705 | 0, $57 | 0, $1621 | 0, $58 | 0) | 0;
     $1707 = __THREW__;
     __THREW__ = 0;
     if ($1707 & 1) {
      label = 484;
      break L400;
     }
     $1709 = HEAP32[$58 >> 2] | 0;
     if ($1709) {
      $1711 = HEAP32[$1046 >> 2] | 0;
      if (($1711 | 0) != ($1709 | 0)) HEAP32[$1046 >> 2] = $1711 + (~(($1711 + -4 - $1709 | 0) >>> 2) << 2);
      __ZdlPv($1709);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($57);
     if (!$1650) __ZdlPv($1647);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($l);
     $lhs$1 = $1706;
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1037);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1036);
    $1291 = $lhs$1;
   }
   switch (label | 0) {
   case 18:
    {
     $159 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body76$index16Z2D = tempRet0;
     $eh$lpad$body76$indexZ2D = $159;
     break L395;
     break;
    }
   case 275:
    {
     $1088 = ___cxa_find_matching_catch() | 0;
     $1089 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1026);
     $eh$lpad$body76$index16Z2D = $1089;
     $eh$lpad$body76$indexZ2D = $1088;
     break L395;
     break;
    }
   case 279:
    {
     $1101 = ___cxa_find_matching_catch() | 0;
     $1102 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1029);
     $eh$lpad$body76$index16Z2D = $1102;
     $eh$lpad$body76$indexZ2D = $1101;
     break L395;
     break;
    }
   case 284:
    {
     $1116 = ___cxa_find_matching_catch() | 0;
     $1117 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1033);
     $eh$lpad$body76$index16Z2D = $1117;
     $eh$lpad$body76$indexZ2D = $1116;
     break L395;
     break;
    }
   case 287:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1034);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1033);
     $1127 = $ss6 + 64 | 0;
     $1128 = $ss6 + 8 | 0;
     HEAP32[$1128 >> 2] = 792;
     $1129 = $ss6 + 12 | 0;
     HEAP32[$ss6 >> 2] = 940;
     HEAP32[$1127 >> 2] = 960;
     HEAP32[$ss6 + 4 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $ss6 + 64 | 0, $1129 | 0);
     $1132 = __THREW__;
     __THREW__ = 0;
     if ($1132 & 1) {
      $1144 = ___cxa_find_matching_catch() | 0;
      $$0$i336 = tempRet0;
      $$01$i335 = $1144;
     } else {
      HEAP32[$ss6 + 136 >> 2] = 0;
      HEAP32[$ss6 + 140 >> 2] = -1;
      HEAP32[$ss6 >> 2] = 772;
      HEAP32[$1127 >> 2] = 812;
      HEAP32[$1128 >> 2] = 792;
      __THREW__ = 0;
      invoke_vi(179, $1129 | 0);
      $1136 = __THREW__;
      __THREW__ = 0;
      do if ($1136 & 1) {
       $1146 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body$i333$index94Z2D = tempRet0;
       $eh$lpad$body$i333$indexZ2D = $1146;
      } else {
       HEAP32[$1129 >> 2] = 1104;
       $1138 = $ss6 + 44 | 0;
       HEAP32[$1138 + 0 >> 2] = 0;
       HEAP32[$1138 + 4 >> 2] = 0;
       HEAP32[$1138 + 8 >> 2] = 0;
       HEAP32[$1138 + 12 >> 2] = 0;
       HEAP32[$ss6 + 60 >> 2] = 24;
       HEAP32[$4 + 0 >> 2] = 0;
       HEAP32[$4 + 4 >> 2] = 0;
       HEAP32[$4 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(42, $1129 | 0, $4 | 0);
       $1140 = __THREW__;
       __THREW__ = 0;
       if ($1140 & 1) {
        $1142 = ___cxa_find_matching_catch() | 0;
        $1143 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1138);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1129);
        $eh$lpad$body$i333$index94Z2D = $1143;
        $eh$lpad$body$i333$indexZ2D = $1142;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
       __THREW__ = 0;
       $1149 = invoke_iiii(25, $ss6 + 8 | 0, 35896, 23) | 0;
       $1150 = __THREW__;
       __THREW__ = 0;
       L586 : do if ($1150 & 1) label = 311; else {
        $this$idx53$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1152 = $this$idx53$val$idx$val + 8 | 0;
        HEAP32[$42 >> 2] = HEAP32[$1152 >> 2];
        $1154 = $42 + 4 | 0;
        __THREW__ = 0;
        invoke_vii(40, $1154 | 0, $this$idx53$val$idx$val + 12 | 0);
        $1156 = __THREW__;
        __THREW__ = 0;
        if ($1156 & 1) label = 311; else {
         HEAP32[$42 >> 2] = HEAP32[$1152 >> 2];
         $1159 = $42 + 16 | 0;
         __THREW__ = 0;
         invoke_vii(40, $1159 | 0, $this$idx53$val$idx$val + 24 | 0);
         $1161 = __THREW__;
         __THREW__ = 0;
         if ($1161 & 1) {
          $1163 = ___cxa_find_matching_catch() | 0;
          $1164 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1154);
          $eh$lpad$body344$index99Z2D = $1164;
          $eh$lpad$body344$indexZ2D = $1163;
          label = 312;
          break;
         }
         $1165 = $42 + 28 | 0;
         $1166 = $this$idx53$val$idx$val + 36 | 0;
         HEAP32[$1165 + 0 >> 2] = HEAP32[$1166 + 0 >> 2];
         HEAP32[$1165 + 4 >> 2] = HEAP32[$1166 + 4 >> 2];
         HEAP32[$1165 + 8 >> 2] = HEAP32[$1166 + 8 >> 2];
         HEAP32[$1165 + 12 >> 2] = HEAP32[$1166 + 12 >> 2];
         HEAP32[$42 >> 2] = HEAP32[$1152 >> 2];
         $1168 = HEAP8[$1154 >> 0] | 0;
         if (!($1168 & 1)) {
          $1178 = $1154 + 1 | 0;
          $1179 = ($1168 & 255) >>> 1;
         } else {
          $1178 = HEAP32[$42 + 12 >> 2] | 0;
          $1179 = HEAP32[$42 + 8 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $1149 | 0, $1178 | 0, $1179 | 0) | 0;
         $1180 = __THREW__;
         __THREW__ = 0;
         if ($1180 & 1) {
          $1213 = ___cxa_find_matching_catch() | 0;
          $1214 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1159);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1154);
          $$18 = $1213;
          $$1827 = $1214;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1159);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1154);
         $1182 = ___cxa_allocate_exception(40) | 0;
         $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $1183 = $this$idx$val$idx$val + 8 | 0;
         HEAP32[$43 >> 2] = HEAP32[$1183 >> 2];
         $1185 = $43 + 4 | 0;
         __THREW__ = 0;
         invoke_vii(40, $1185 | 0, $this$idx$val$idx$val + 12 | 0);
         $1187 = __THREW__;
         __THREW__ = 0;
         do if ($1187 & 1) {
          $1215 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body351$index104Z2D = tempRet0;
          $eh$lpad$body351$indexZ2D = $1215;
          label = 315;
         } else {
          HEAP32[$43 >> 2] = HEAP32[$1183 >> 2];
          $1190 = $43 + 16 | 0;
          __THREW__ = 0;
          invoke_vii(40, $1190 | 0, $this$idx$val$idx$val + 24 | 0);
          $1192 = __THREW__;
          __THREW__ = 0;
          if ($1192 & 1) {
           $1194 = ___cxa_find_matching_catch() | 0;
           $1195 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1185);
           $eh$lpad$body351$index104Z2D = $1195;
           $eh$lpad$body351$indexZ2D = $1194;
           label = 315;
           break;
          }
          $1196 = $43 + 28 | 0;
          $1197 = $this$idx$val$idx$val + 36 | 0;
          HEAP32[$1196 + 0 >> 2] = HEAP32[$1197 + 0 >> 2];
          HEAP32[$1196 + 4 >> 2] = HEAP32[$1197 + 4 >> 2];
          HEAP32[$1196 + 8 >> 2] = HEAP32[$1197 + 8 >> 2];
          HEAP32[$1196 + 12 >> 2] = HEAP32[$1197 + 12 >> 2];
          HEAP32[$43 >> 2] = HEAP32[$1183 >> 2];
          __THREW__ = 0;
          invoke_vii(43, $44 | 0, $1129 | 0);
          $1199 = __THREW__;
          __THREW__ = 0;
          if ($1199 & 1) {
           $1217 = ___cxa_find_matching_catch() | 0;
           $$147 = 1;
           $$16 = $1217;
           $$1625 = tempRet0;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $1182 | 0, $1190 | 0);
           $1201 = __THREW__;
           __THREW__ = 0;
           do if ($1201 & 1) {
            $$046 = 1;
            label = 317;
           } else {
            $1203 = $1182 + 12 | 0;
            HEAP32[$1203 + 0 >> 2] = HEAP32[$1196 + 0 >> 2];
            HEAP32[$1203 + 4 >> 2] = HEAP32[$1196 + 4 >> 2];
            HEAP32[$1203 + 8 >> 2] = HEAP32[$1196 + 8 >> 2];
            HEAP32[$1203 + 12 >> 2] = HEAP32[$1196 + 12 >> 2];
            __THREW__ = 0;
            invoke_vii(40, $1182 + 28 | 0, $44 | 0);
            $1205 = __THREW__;
            __THREW__ = 0;
            if ($1205 & 1) {
             $1207 = ___cxa_find_matching_catch() | 0;
             $1208 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1182);
             $$046$lpad$bodyZZ2D = 1;
             $eh$lpad$body357$index109Z2D = $1208;
             $eh$lpad$body357$indexZ2D = $1207;
             break;
            }
            __THREW__ = 0;
            invoke_viii(4, $1182 | 0, 48, 178);
            $1209 = __THREW__;
            __THREW__ = 0;
            if ($1209 & 1) {
             $$046 = 0;
             label = 317;
             break;
            }
           } while (0);
           if ((label | 0) == 317) {
            $1219 = ___cxa_find_matching_catch() | 0;
            $$046$lpad$bodyZZ2D = $$046;
            $eh$lpad$body357$index109Z2D = tempRet0;
            $eh$lpad$body357$indexZ2D = $1219;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($44);
           $$147 = $$046$lpad$bodyZZ2D;
           $$16 = $eh$lpad$body357$indexZ2D;
           $$1625 = $eh$lpad$body357$index109Z2D;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1190);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1185);
          if ($$147) {
           $$1726483 = $$1625;
           $$17484 = $$16;
          } else {
           $$18 = $$16;
           $$1827 = $$1625;
           break L586;
          }
         } while (0);
         if ((label | 0) == 315) {
          $$1726483 = $eh$lpad$body351$index104Z2D;
          $$17484 = $eh$lpad$body351$indexZ2D;
         }
         ___cxa_free_exception($1182 | 0);
         $$18 = $$17484;
         $$1827 = $$1726483;
        }
       } while (0);
       if ((label | 0) == 311) {
        $1211 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body344$index99Z2D = tempRet0;
        $eh$lpad$body344$indexZ2D = $1211;
        label = 312;
       }
       if ((label | 0) == 312) {
        $$18 = $eh$lpad$body344$indexZ2D;
        $$1827 = $eh$lpad$body344$index99Z2D;
       }
       HEAP32[$ss6 >> 2] = 772;
       HEAP32[$ss6 + 64 >> 2] = 812;
       HEAP32[$1128 >> 2] = 792;
       HEAP32[$1129 >> 2] = 1104;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1138);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1129);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1127);
       $$31 = $$18;
       $$3140 = $$1827;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
       ___resumeException($$31 | 0);
      } while (0);
      $$0$i336 = $eh$lpad$body$i333$index94Z2D;
      $$01$i335 = $eh$lpad$body$i333$indexZ2D;
     }
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1127);
     $eh$lpad$body76$index16Z2D = $$0$i336;
     $eh$lpad$body76$indexZ2D = $$01$i335;
     break L395;
     break;
    }
   case 326:
    {
     $1233 = ___cxa_find_matching_catch() | 0;
     $1234 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1036);
     $eh$lpad$body76$index16Z2D = $1234;
     $eh$lpad$body76$indexZ2D = $1233;
     break L395;
     break;
    }
   case 338:
    {
     $1304 = ___cxa_find_matching_catch() | 0;
     $1305 = tempRet0;
     __ZdlPv($1279);
     $eh$lpad$body379$index114Z2D = $1305;
     $eh$lpad$body379$indexZ2D = $1304;
     label = 343;
     break;
    }
   case 340:
    {
     $$30 = ___cxa_find_matching_catch() | 0;
     $$3039 = tempRet0;
     break;
    }
   case 341:
    {
     $$19 = ___cxa_find_matching_catch() | 0;
     $$1928 = tempRet0;
     label = 344;
     break;
    }
   case 342:
    {
     $1310 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body379$index114Z2D = tempRet0;
     $eh$lpad$body379$indexZ2D = $1310;
     label = 343;
     break;
    }
   case 357:
    {
     $1389 = ___cxa_find_matching_catch() | 0;
     $1390 = tempRet0;
     __ZdlPv($1365);
     $eh$lpad$body389$index119Z2D = $1390;
     $eh$lpad$body389$indexZ2D = $1389;
     label = 364;
     break;
    }
   case 359:
    {
     $$21 = ___cxa_find_matching_catch() | 0;
     $$2130 = tempRet0;
     label = 365;
     break;
    }
   case 360:
    {
     $$20 = ___cxa_find_matching_catch() | 0;
     $$2029 = tempRet0;
     label = 362;
     break;
    }
   case 361:
    {
     $1395 = ___cxa_find_matching_catch() | 0;
     $1396 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($47);
     $$20 = $1395;
     $$2029 = $1396;
     label = 362;
     break;
    }
   case 363:
    {
     $1397 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body389$index119Z2D = tempRet0;
     $eh$lpad$body389$indexZ2D = $1397;
     label = 364;
     break;
    }
   case 377:
    {
     $1450 = ___cxa_find_matching_catch() | 0;
     $1451 = tempRet0;
     $1452 = HEAP32[$51 >> 2] | 0;
     if ($1452) {
      $1454 = HEAP32[$1069 >> 2] | 0;
      if (($1454 | 0) != ($1452 | 0)) HEAP32[$1069 >> 2] = $1454 + (~(($1454 + -4 - $1452 | 0) >>> 2) << 2);
      __ZdlPv($1452);
     }
     $$22 = $1450;
     $$2231 = $1451;
     label = 398;
     break;
    }
   case 390:
    {
     $$24 = ___cxa_find_matching_catch() | 0;
     $$2433 = tempRet0;
     label = 400;
     break;
    }
   case 391:
    {
     $1481 = ___cxa_find_matching_catch() | 0;
     $1482 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($49);
     $$24 = $1481;
     $$2433 = $1482;
     label = 400;
     break;
    }
   case 392:
    {
     $$23 = ___cxa_find_matching_catch() | 0;
     $$2332 = tempRet0;
     label = 399;
     break;
    }
   case 394:
    {
     $1485 = ___cxa_find_matching_catch() | 0;
     $1486 = tempRet0;
     $1487 = HEAP32[$51 >> 2] | 0;
     if (!$1487) {
      $$22 = $1485;
      $$2231 = $1486;
      label = 398;
     } else {
      $1489 = HEAP32[$1069 >> 2] | 0;
      if (($1489 | 0) != ($1487 | 0)) HEAP32[$1069 >> 2] = $1489 + (~(($1489 + -4 - $1487 | 0) >>> 2) << 2);
      __ZdlPv($1487);
      $$22 = $1485;
      $$2231 = $1486;
      label = 398;
     }
     break;
    }
   case 413:
    {
     $1554 = ___cxa_find_matching_catch() | 0;
     $1555 = tempRet0;
     __ZdlPv($1529);
     $eh$lpad$body442$index124Z2D = $1555;
     $eh$lpad$body442$indexZ2D = $1554;
     label = 417;
     break;
    }
   case 415:
    {
     $$25 = ___cxa_find_matching_catch() | 0;
     $$2534 = tempRet0;
     label = 418;
     break;
    }
   case 416:
    {
     $1558 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body442$index124Z2D = tempRet0;
     $eh$lpad$body442$indexZ2D = $1558;
     label = 417;
     break;
    }
   case 429:
    {
     $1584 = ___cxa_find_matching_catch() | 0;
     $1585 = tempRet0;
     __ZdlPv($1576);
     $eh$lpad$body454$index135Z2D = $1585;
     $eh$lpad$body454$indexZ2D = $1584;
     label = 477;
     break;
    }
   case 437:
    {
     $1610 = ___cxa_find_matching_catch() | 0;
     $1611 = tempRet0;
     __ZdlPv($1586);
     $eh$lpad$body454$index135Z2D = $1611;
     $eh$lpad$body454$indexZ2D = $1610;
     label = 477;
     break;
    }
   case 448:
    {
     $1645 = ___cxa_find_matching_catch() | 0;
     $1646 = tempRet0;
     __ZdlPv($1621);
     $eh$lpad$body372$index141Z2D = $1646;
     $eh$lpad$body372$indexZ2D = $1645;
     label = 481;
     break;
    }
   case 452:
    {
     $1651 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body316$index129Z2D = tempRet0;
     $eh$lpad$body316$indexZ2D = $1651;
     label = 474;
     break;
    }
   case 461:
    {
     $1695 = ___cxa_find_matching_catch() | 0;
     $1696 = tempRet0;
     $1697 = HEAP32[$58 >> 2] | 0;
     if ($1697) {
      $1699 = HEAP32[$1046 >> 2] | 0;
      if (($1699 | 0) != ($1697 | 0)) HEAP32[$1046 >> 2] = $1699 + (~(($1699 + -4 - $1697 | 0) >>> 2) << 2);
      __ZdlPv($1697);
     }
     $$27 = $1695;
     $$2736 = $1696;
     label = 488;
     break;
    }
   case 473:
    {
     $1717 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body316$index129Z2D = tempRet0;
     $eh$lpad$body316$indexZ2D = $1717;
     label = 474;
     break;
    }
   case 475:
    {
     $$26 = ___cxa_find_matching_catch() | 0;
     $$2635 = tempRet0;
     label = 478;
     break;
    }
   case 476:
    {
     $1721 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body454$index135Z2D = tempRet0;
     $eh$lpad$body454$indexZ2D = $1721;
     label = 477;
     break;
    }
   case 479:
    {
     $1723 = ___cxa_find_matching_catch() | 0;
     $1724 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($55);
     $$29 = $1723;
     $$2938 = $1724;
     label = 491;
     break;
    }
   case 480:
    {
     $1725 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body372$index141Z2D = tempRet0;
     $eh$lpad$body372$indexZ2D = $1725;
     label = 481;
     break;
    }
   case 482:
    {
     $$28 = ___cxa_find_matching_catch() | 0;
     $$2837 = tempRet0;
     label = 489;
     break;
    }
   case 484:
    {
     $1729 = ___cxa_find_matching_catch() | 0;
     $1730 = tempRet0;
     $1731 = HEAP32[$58 >> 2] | 0;
     if (!$1731) {
      $$27 = $1729;
      $$2736 = $1730;
      label = 488;
     } else {
      $1733 = HEAP32[$1046 >> 2] | 0;
      if (($1733 | 0) != ($1731 | 0)) HEAP32[$1046 >> 2] = $1733 + (~(($1733 + -4 - $1731 | 0) >>> 2) << 2);
      __ZdlPv($1731);
      $$27 = $1729;
      $$2736 = $1730;
      label = 488;
     }
     break;
    }
   case 503:
    {
     $1794 = ___cxa_find_matching_catch() | 0;
     $1795 = tempRet0;
     __ZdlPv($1768);
     $eh$lpad$body66$index146Z2D = $1795;
     $eh$lpad$body66$indexZ2D = $1794;
     label = 516;
     break;
    }
   case 513:
    {
     $1823 = ___cxa_find_matching_catch() | 0;
     $1824 = tempRet0;
     __ZdlPv($1799);
     $eh$lpad$body$index151Z2D = $1824;
     $eh$lpad$body$indexZ2D = $1823;
     label = 518;
     break;
    }
   case 515:
    {
     $1825 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body66$index146Z2D = tempRet0;
     $eh$lpad$body66$indexZ2D = $1825;
     label = 516;
     break;
    }
   case 517:
    {
     $1827 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index151Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $1827;
     label = 518;
     break;
    }
   case 521:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
     STACKTOP = sp;
     return $$0 | 0;
    }
   }
   switch (label | 0) {
   case 343:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($45);
     $$19 = $eh$lpad$body379$indexZ2D;
     $$1928 = $eh$lpad$body379$index114Z2D;
     label = 344;
     break;
    }
   case 362:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($46);
     $$21 = $$20;
     $$2130 = $$2029;
     label = 365;
     break;
    }
   case 364:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($48);
     $$21 = $eh$lpad$body389$indexZ2D;
     $$2130 = $eh$lpad$body389$index119Z2D;
     label = 365;
     break;
    }
   case 398:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($50);
     $$23 = $$22;
     $$2332 = $$2231;
     label = 399;
     break;
    }
   case 417:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($52);
     $$25 = $eh$lpad$body442$indexZ2D;
     $$2534 = $eh$lpad$body442$index124Z2D;
     label = 418;
     break;
    }
   case 474:
    {
     $$29 = $eh$lpad$body316$indexZ2D;
     $$2938 = $eh$lpad$body316$index129Z2D;
     label = 491;
     break;
    }
   case 477:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($54);
     $$26 = $eh$lpad$body454$indexZ2D;
     $$2635 = $eh$lpad$body454$index135Z2D;
     label = 478;
     break;
    }
   case 481:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($56);
     $$29 = $eh$lpad$body372$indexZ2D;
     $$2938 = $eh$lpad$body372$index141Z2D;
     label = 491;
     break;
    }
   case 488:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($57);
     $$28 = $$27;
     $$2837 = $$2736;
     label = 489;
     break;
    }
   case 516:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($59);
     $$30 = $eh$lpad$body66$indexZ2D;
     $$3039 = $eh$lpad$body66$index146Z2D;
     break;
    }
   case 518:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($60);
     $$30 = $eh$lpad$body$indexZ2D;
     $$3039 = $eh$lpad$body$index151Z2D;
     break;
    }
   }
   if ((label | 0) == 344) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1054);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1055);
    $$30 = $$19;
    $$3039 = $$1928;
   } else if ((label | 0) == 365) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1056);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1061);
    $$30 = $$21;
    $$3039 = $$2130;
   } else if ((label | 0) == 399) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1071);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1072);
    $$24 = $$23;
    $$2433 = $$2332;
    label = 400;
   } else if ((label | 0) == 418) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1076);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1077);
    $$30 = $$25;
    $$3039 = $$2534;
   } else if ((label | 0) == 478) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($53);
    $$29 = $$26;
    $$2938 = $$2635;
    label = 491;
   } else if ((label | 0) == 489) if ($1650) {
    $$29 = $$28;
    $$2938 = $$2837;
    label = 491;
   } else {
    __ZdlPv($1647);
    $$29 = $$28;
    $$2938 = $$2837;
    label = 491;
   }
   if ((label | 0) == 400) {
    $1495 = HEAP32[$args >> 2] | 0;
    if (!$1495) {
     $$30 = $$24;
     $$3039 = $$2433;
    } else {
     $1497 = HEAP32[$1064 >> 2] | 0;
     if (($1497 | 0) != ($1495 | 0)) HEAP32[$1064 >> 2] = $1497 + (~(($1497 + -4 - $1495 | 0) >>> 2) << 2);
     __ZdlPv($1495);
     $$30 = $$24;
     $$3039 = $$2433;
    }
   } else if ((label | 0) == 491) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($l);
    $$30 = $$29;
    $$3039 = $$2938;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1037);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1036);
   $$31 = $$30;
   $$3140 = $$3039;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
   ___resumeException($$31 | 0);
  }
 } while (0);
 if ((label | 0) == 19) {
  $161 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body76$index16Z2D = tempRet0;
  $eh$lpad$body76$indexZ2D = $161;
 }
 $$31 = $eh$lpad$body76$indexZ2D;
 $$3140 = $eh$lpad$body76$index16Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($66);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($63);
 ___resumeException($$31 | 0);
 return 0;
}
function __ZN12_GLOBAL__N_16Parser20parseObjectRemainderERP3ASTRK5Tokenj($agg$result, $this, $obj, $tok, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $obj = $obj | 0;
 $tok = $tok | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i125 = 0, $$0$i$i$i$i$i127 = 0, $$0$i156 = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i129 = 0, $$030 = 0, $$033 = 0, $$035 = 0, $$037 = 0, $$039 = 0, $$04 = 0, $$040 = 0, $$042 = 0, $$1019350 = 0, $$10351 = 0, $$110 = 0, $$1120355 = 0, $$11356 = 0, $$12 = 0, $$1221 = 0, $$123 = 0, $$13 = 0, $$1322 = 0, $$14 = 0, $$1423 = 0, $$16 = 0, $$1625 = 0, $$1827362 = 0, $$18363 = 0, $$19 = 0, $$1928 = 0, $$2 = 0, $$20 = 0, $$2029 = 0, $$211 = 0, $$312334 = 0, $$3335 = 0, $$413338 = 0, $$4339 = 0, $$5 = 0, $$514 = 0, $$615342 = 0, $$6343 = 0, $$716346 = 0, $$7347 = 0, $$8 = 0, $$817 = 0, $$9 = 0, $$918 = 0, $$byval_copy = 0, $$byval_copy102 = 0, $$byval_copy105 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1002 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1015 = 0, $1017 = 0, $1018 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1023 = 0, $1025 = 0, $1027 = 0, $1028 = 0, $103 = 0, $1030 = 0, $1032 = 0, $1033 = 0, $1036 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1043 = 0, $1047 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1054 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1063 = 0, $1065 = 0, $107 = 0, $1071 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1079 = 0, $108 = 0, $1085 = 0, $1086 = 0, $1088 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1093 = 0, $1094 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $11 = 0, $110 = 0, $1101 = 0, $1103 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1115 = 0, $1117 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1125 = 0, $1127 = 0, $113 = 0, $1134 = 0, $1135 = 0, $114 = 0, $1141 = 0, $1143 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1157 = 0, $1159 = 0, $116 = 0, $1167 = 0, $1168 = 0, $117 = 0, $1174 = 0, $1176 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1186 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1193 = 0, $1195 = 0, $1197 = 0, $12 = 0, $120 = 0, $1203 = 0, $1205 = 0, $1206 = 0, $1208 = 0, $121 = 0, $1210 = 0, $1212 = 0, $1215 = 0, $1219 = 0, $122 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1226 = 0, $1229 = 0, $123 = 0, $1233 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1239 = 0, $124 = 0, $1241 = 0, $1242 = 0, $1244 = 0, $1247 = 0, $125 = 0, $1252 = 0, $1255 = 0, $1259 = 0, $126 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1266 = 0, $1269 = 0, $127 = 0, $1273 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1279 = 0, $128 = 0, $1281 = 0, $1282 = 0, $1284 = 0, $1287 = 0, $129 = 0, $1292 = 0, $1293 = 0, $1295 = 0, $1296 = 0, $13 = 0, $130 = 0, $1300 = 0, $1303 = 0, $1307 = 0, $1308 = 0, $131 = 0, $1310 = 0, $1312 = 0, $1314 = 0, $1316 = 0, $1317 = 0, $132 = 0, $1321 = 0, $1323 = 0, $1325 = 0, $133 = 0, $1332 = 0, $1336 = 0, $1338 = 0, $134 = 0, $1340 = 0, $1347 = 0, $1348 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $184 = 0, $188 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $194 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $203 = 0, $205 = 0, $206 = 0, $21 = 0, $211 = 0, $212 = 0, $218 = 0, $22 = 0, $220 = 0, $222 = 0, $223 = 0, $224 = 0, $227 = 0, $229 = 0, $23 = 0, $232 = 0, $233 = 0, $235 = 0, $237 = 0, $238 = 0, $24 = 0, $244 = 0, $246 = 0, $249 = 0, $25 = 0, $253 = 0, $255 = 0, $257 = 0, $259 = 0, $26 = 0, $261 = 0, $264 = 0, $268 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $274 = 0, $276 = 0, $277 = 0, $279 = 0, $28 = 0, $282 = 0, $287 = 0, $289 = 0, $29 = 0, $292 = 0, $296 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $302 = 0, $304 = 0, $305 = 0, $307 = 0, $31 = 0, $310 = 0, $32 = 0, $320 = 0, $328 = 0, $33 = 0, $332 = 0, $336 = 0, $338 = 0, $34 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $349 = 0, $35 = 0, $351 = 0, $352 = 0, $355 = 0, $356 = 0, $359 = 0, $36 = 0, $361 = 0, $364 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $372 = 0, $374 = 0, $375 = 0, $38 = 0, $381 = 0, $383 = 0, $385 = 0, $386 = 0, $388 = 0, $389 = 0, $39 = 0, $395 = 0, $399 = 0, $4 = 0, $40 = 0, $406 = 0, $407 = 0, $409 = 0, $41 = 0, $412 = 0, $413 = 0, $415 = 0, $42 = 0, $420 = 0, $421 = 0, $425 = 0, $43 = 0, $430 = 0, $431 = 0, $435 = 0, $437 = 0, $438 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $444 = 0, $45 = 0, $451 = 0, $452 = 0, $455 = 0, $457 = 0, $459 = 0, $46 = 0, $466 = 0, $467 = 0, $469 = 0, $47 = 0, $471 = 0, $472 = 0, $478 = 0, $48 = 0, $480 = 0, $482 = 0, $483 = 0, $486 = 0, $488 = 0, $49 = 0, $490 = 0, $497 = 0, $5 = 0, $50 = 0, $500 = 0, $502 = 0, $504 = 0, $51 = 0, $511 = 0, $515 = 0, $517 = 0, $519 = 0, $52 = 0, $528 = 0, $53 = 0, $530 = 0, $532 = 0, $54 = 0, $541 = 0, $542 = 0, $544 = 0, $546 = 0, $548 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $554 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $561 = 0, $563 = 0, $565 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $571 = 0, $573 = 0, $574 = 0, $575 = 0, $577 = 0, $579 = 0, $58 = 0, $581 = 0, $584 = 0, $586 = 0, $588 = 0, $589 = 0, $59 = 0, $592 = 0, $593 = 0, $596 = 0, $598 = 0, $6 = 0, $60 = 0, $601 = 0, $605 = 0, $606 = 0, $608 = 0, $610 = 0, $611 = 0, $617 = 0, $619 = 0, $621 = 0, $622 = 0, $624 = 0, $625 = 0, $627 = 0, $63 = 0, $631 = 0, $632 = 0, $634 = 0, $636 = 0, $638 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $644 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $651 = 0, $653 = 0, $655 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $661 = 0, $663 = 0, $664 = 0, $665 = 0, $667 = 0, $669 = 0, $67 = 0, $673 = 0, $674 = 0, $676 = 0, $678 = 0, $679 = 0, $681 = 0, $682 = 0, $683 = 0, $685 = 0, $686 = 0, $688 = 0, $69 = 0, $690 = 0, $691 = 0, $693 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $703 = 0, $708 = 0, $709 = 0, $71 = 0, $713 = 0, $714 = 0, $717 = 0, $719 = 0, $72 = 0, $728 = 0, $729 = 0, $73 = 0, $735 = 0, $737 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $746 = 0, $748 = 0, $749 = 0, $75 = 0, $751 = 0, $753 = 0, $755 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $761 = 0, $763 = 0, $764 = 0, $765 = 0, $768 = 0, $77 = 0, $772 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $779 = 0, $78 = 0, $782 = 0, $786 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $792 = 0, $794 = 0, $795 = 0, $797 = 0, $8 = 0, $80 = 0, $800 = 0, $805 = 0, $807 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $813 = 0, $814 = 0, $815 = 0, $818 = 0, $82 = 0, $822 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $829 = 0, $83 = 0, $832 = 0, $836 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $843 = 0, $844 = 0, $847 = 0, $85 = 0, $851 = 0, $853 = 0, $854 = 0, $855 = 0, $86 = 0, $861 = 0, $865 = 0, $868 = 0, $87 = 0, $872 = 0, $874 = 0, $875 = 0, $876 = 0, $878 = 0, $88 = 0, $880 = 0, $881 = 0, $883 = 0, $886 = 0, $89 = 0, $891 = 0, $893 = 0, $895 = 0, $897 = 0, $9 = 0, $90 = 0, $900 = 0, $904 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $911 = 0, $914 = 0, $918 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $924 = 0, $926 = 0, $927 = 0, $929 = 0, $93 = 0, $932 = 0, $937 = 0, $94 = 0, $940 = 0, $944 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $951 = 0, $954 = 0, $958 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $964 = 0, $966 = 0, $967 = 0, $969 = 0, $97 = 0, $972 = 0, $977 = 0, $98 = 0, $981 = 0, $982 = 0, $989 = 0, $99 = 0, $990 = 0, $996 = 0, $998 = 0, $__f$01$i$i = 0, $__f$01$i$i$i = 0, $__f$01$i$i102 = 0, $__f$01$i$i105 = 0, $__f$01$i$i328 = 0, $__f$01$i$i331 = 0, $__f$01$i$i99 = 0, $__nd$0$in$i$i = 0, $__parent$i = 0, $__r$0$i = 0, $eh$lpad$body$index9Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body139$index47Z2D = 0, $eh$lpad$body139$indexZ2D = 0, $eh$lpad$body160$index52Z2D = 0, $eh$lpad$body160$indexZ2D = 0, $eh$lpad$body169$index57Z2D = 0, $eh$lpad$body169$indexZ2D = 0, $eh$lpad$body178$index63Z2D = 0, $eh$lpad$body178$indexZ2D = 0, $eh$lpad$body193$index75Z2D = 0, $eh$lpad$body193$indexZ2D = 0, $eh$lpad$body197$index86Z2D = 0, $eh$lpad$body197$indexZ2D = 0, $eh$lpad$body273$index92Z2D = 0, $eh$lpad$body273$indexZ2D = 0, $eh$lpad$body287$index98Z2D = 0, $eh$lpad$body287$indexZ2D = 0, $eh$lpad$body62$index14Z2D = 0, $eh$lpad$body62$indexZ2D = 0, $eh$lpad$body67$index3Z2D = 0, $eh$lpad$body67$indexZ2D = 0, $eh$lpad$body74$index23Z2D = 0, $eh$lpad$body74$indexZ2D = 0, $eh$lpad$body86$index37Z2D = 0, $eh$lpad$body86$indexZ2D = 0, $eh$lpad$body97$index42Z2D = 0, $eh$lpad$body97$indexZ2D = 0, $fields = 0, $got_comma$0$off0 = 0, $got_comma$1$off0 = 0, $got_comma$2$off0 = 0, $id_tok = 0, $is_method$0$off0 = 0, $it$i = 0, $it$i153 = 0, $last = 0, $last_was_local$0$off0 = 0, $last_was_local$2$off0 = 0, $let_binds = 0, $literal_fields = 0, $lpad$phi$index = 0, $lpad$phi$index32 = 0, $next = 0, $plus_loc = 0, $plus_sugar$0$off0 = 0, $r = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i182 = 0, $this$idx$val$idx$val$i208 = 0, $this$idx$val$idx$val$i220 = 0, $this$idx$val$idx$val$i232 = 0, $this$idx$val$idx$val$i308 = 0, $this$idx$val$idx$val$i320 = 0, $this$idx$val$idx$val$i71 = 0, $this$idx51$val$idx$val = 0, $this$idx52$val$idx$val = 0, $this$idx53$val$idx$val = 0, $this$idx54$val$idx$val = 0, $this$idx55$val$idx$val = 0, $this$idx56$val$idx$val = 0, $this$idx57$val$idx$val = 0, $value$0 = 0, label = 0, sp = 0, $__f$01$i$i$looptemp = 0, $__f$01$i$i99$looptemp = 0, $__f$01$i$i$i$looptemp = 0, $__f$01$i$i328$looptemp = 0, $__f$01$i$i102$looptemp = 0, $__f$01$i$i105$looptemp = 0, $__f$01$i$i331$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1632 | 0;
 $$byval_copy105 = sp + 1624 | 0;
 $$byval_copy102 = sp + 1620 | 0;
 $$byval_copy = sp + 1616 | 0;
 $0 = sp + 1608 | 0;
 $1 = sp + 1604 | 0;
 $it$i153 = sp + 1600 | 0;
 $2 = sp + 1596 | 0;
 $3 = sp + 1592 | 0;
 $4 = sp + 1588 | 0;
 $5 = sp + 1584 | 0;
 $6 = sp + 1580 | 0;
 $7 = sp + 1576 | 0;
 $8 = sp + 1572 | 0;
 $9 = sp + 1568 | 0;
 $10 = sp + 1564 | 0;
 $11 = sp + 1560 | 0;
 $12 = sp + 1556 | 0;
 $__parent$i = sp + 1552 | 0;
 $13 = sp + 1548 | 0;
 $it$i = sp + 1544 | 0;
 $literal_fields = sp + 1532 | 0;
 $fields = sp + 1520 | 0;
 $let_binds = sp + 1508 | 0;
 $14 = sp + 1496 | 0;
 $15 = sp + 1468 | 0;
 $next = sp + 1424 | 0;
 $16 = sp + 1380 | 0;
 $r = sp + 1368 | 0;
 $17 = sp + 1340 | 0;
 $18 = sp + 1328 | 0;
 $19 = sp + 1300 | 0;
 $20 = sp + 1288 | 0;
 $21 = sp + 1276 | 0;
 $22 = sp + 1264 | 0;
 $23 = sp + 1236 | 0;
 $24 = sp + 1224 | 0;
 $25 = sp + 1212 | 0;
 $26 = sp + 1200 | 0;
 $id_tok = sp + 1156 | 0;
 $27 = sp + 1112 | 0;
 $last = sp + 1068 | 0;
 $28 = sp + 1040 | 0;
 $29 = sp + 1028 | 0;
 $30 = sp + 984 | 0;
 $31 = sp + 940 | 0;
 $32 = sp + 928 | 0;
 $33 = sp + 916 | 0;
 $plus_loc = sp + 888 | 0;
 $34 = sp + 844 | 0;
 $35 = sp + 800 | 0;
 $36 = sp + 756 | 0;
 $37 = sp + 712 | 0;
 $38 = sp + 668 | 0;
 $39 = sp + 624 | 0;
 $40 = sp + 580 | 0;
 $41 = sp + 536 | 0;
 $42 = sp + 492 | 0;
 $43 = sp + 480 | 0;
 $44 = sp + 452 | 0;
 $45 = sp + 440 | 0;
 $46 = sp + 412 | 0;
 $47 = sp + 400 | 0;
 $48 = sp + 372 | 0;
 $49 = sp + 360 | 0;
 $50 = sp + 332 | 0;
 $51 = sp + 304 | 0;
 $52 = sp + 276 | 0;
 $53 = sp + 232 | 0;
 $54 = sp + 188 | 0;
 $55 = sp + 144 | 0;
 $56 = sp + 100 | 0;
 $57 = sp + 56 | 0;
 $58 = sp + 12 | 0;
 $59 = sp;
 $60 = $literal_fields + 4 | 0;
 HEAP32[$60 >> 2] = 0;
 HEAP32[$literal_fields + 8 >> 2] = 0;
 HEAP32[$literal_fields >> 2] = $literal_fields + 4;
 HEAP32[$fields >> 2] = $fields;
 $63 = $fields + 4 | 0;
 HEAP32[$63 >> 2] = $fields;
 $64 = $fields + 8 | 0;
 HEAP32[$64 >> 2] = 0;
 $65 = $let_binds + 4 | 0;
 HEAP32[$65 >> 2] = 0;
 $66 = $let_binds + 8 | 0;
 HEAP32[$66 >> 2] = 0;
 $67 = $let_binds + 4 | 0;
 HEAP32[$let_binds >> 2] = $67;
 $69 = $this + 4 | 0;
 L1 : do if (!$obj_level) {
  $180 = HEAP32[$69 >> 2] | 0;
  __THREW__ = 0;
  invoke_viii(3, $14 | 0, 35984, 1);
  $181 = __THREW__;
  __THREW__ = 0;
  if ($181 & 1) {
   $255 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body67$index3Z2D = tempRet0;
   $eh$lpad$body67$indexZ2D = $255;
   label = 36;
   break;
  }
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i, $180, $14);
  $184 = HEAP32[$it$i >> 2] | 0;
  L6 : do if (($184 | 0) == ($180 + 4 | 0)) {
   __THREW__ = 0;
   $188 = invoke_ii(67, 12) | 0;
   $189 = __THREW__;
   __THREW__ = 0;
   do if ($189 & 1) label = 37; else {
    __THREW__ = 0;
    invoke_vii(40, $188 | 0, $14 | 0);
    $191 = __THREW__;
    __THREW__ = 0;
    if ($191 & 1) {
     $196 = ___cxa_find_matching_catch() | 0;
     $197 = tempRet0;
     __ZdlPv($188);
     $eh$lpad$body$index9Z2D = $197;
     $eh$lpad$body$indexZ2D = $196;
     break;
    }
    __THREW__ = 0;
    $193 = invoke_iii(23, $180 | 0, $14 | 0) | 0;
    $194 = __THREW__;
    __THREW__ = 0;
    if ($194 & 1) label = 37; else {
     HEAP32[$193 >> 2] = $188;
     $$0$i = $188;
     break L6;
    }
   } while (0);
   if ((label | 0) == 37) {
    $257 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index9Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $257;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
   $$20 = $eh$lpad$body$indexZ2D;
   $$2029 = $eh$lpad$body$index9Z2D;
   break L1;
  } else $$0$i = HEAP32[$184 + 28 >> 2] | 0; while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
  $198 = HEAP32[$69 >> 2] | 0;
  HEAP32[$15 + 0 >> 2] = 0;
  HEAP32[$15 + 4 >> 2] = 0;
  HEAP32[$15 + 8 >> 2] = 0;
  HEAP32[$15 + 12 >> 2] = 0;
  HEAP32[$15 + 16 >> 2] = 0;
  HEAP32[$15 + 20 >> 2] = 0;
  HEAP32[$15 + 24 >> 2] = 0;
  __THREW__ = 0;
  $199 = invoke_ii(67, 48) | 0;
  $200 = __THREW__;
  __THREW__ = 0;
  do if ($200 & 1) label = 39; else {
   HEAP32[$199 >> 2] = 34168;
   __THREW__ = 0;
   invoke_vii(40, $199 + 4 | 0, $15 | 0);
   $203 = __THREW__;
   __THREW__ = 0;
   if ($203 & 1) {
    $222 = ___cxa_find_matching_catch() | 0;
    $223 = tempRet0;
    __ZdlPv($199);
    $$pre$phiZ2D = $15;
    $eh$lpad$body62$index14Z2D = $223;
    $eh$lpad$body62$indexZ2D = $222;
    break;
   }
   $205 = $199 + 16 | 0;
   $206 = $15 + 12 | 0;
   HEAP32[$205 + 0 >> 2] = HEAP32[$206 + 0 >> 2];
   HEAP32[$205 + 4 >> 2] = HEAP32[$206 + 4 >> 2];
   HEAP32[$205 + 8 >> 2] = HEAP32[$206 + 8 >> 2];
   HEAP32[$205 + 12 >> 2] = HEAP32[$206 + 12 >> 2];
   HEAP32[$199 + 32 >> 2] = 17;
   HEAP32[$199 + 36 >> 2] = 0;
   HEAP32[$199 + 40 >> 2] = 0;
   HEAP32[$199 + 44 >> 2] = 0;
   HEAP32[$199 >> 2] = 36408;
   HEAP32[$13 >> 2] = $199;
   $211 = $198 + 16 | 0;
   $212 = HEAP32[$211 >> 2] | 0;
   if ($212 >>> 0 < (HEAP32[$198 + 20 >> 2] | 0) >>> 0) {
    if (!$212) $218 = 0; else {
     HEAP32[$212 >> 2] = $199;
     $218 = HEAP32[$211 >> 2] | 0;
    }
    HEAP32[$211 >> 2] = $218 + 4;
   } else {
    __THREW__ = 0;
    invoke_vii(51, $198 + 12 | 0, $13 | 0);
    $220 = __THREW__;
    __THREW__ = 0;
    if ($220 & 1) {
     label = 39;
     break;
    }
   }
   $224 = HEAP32[$65 >> 2] | 0;
   do if (!$224) {
    HEAP32[$__parent$i >> 2] = $67;
    $$0$i$i = $67;
    $244 = $67;
   } else {
    $__nd$0$in$i$i = $224;
    while (1) {
     $227 = HEAP32[$__nd$0$in$i$i + 16 >> 2] | 0;
     if ($$0$i >>> 0 < $227 >>> 0) {
      $229 = HEAP32[$__nd$0$in$i$i >> 2] | 0;
      if (!$229) {
       label = 22;
       break;
      } else {
       $__nd$0$in$i$i = $229;
       continue;
      }
     }
     if ($227 >>> 0 >= $$0$i >>> 0) {
      label = 26;
      break;
     }
     $232 = $__nd$0$in$i$i + 4 | 0;
     $233 = HEAP32[$232 >> 2] | 0;
     if (!$233) {
      label = 25;
      break;
     } else $__nd$0$in$i$i = $233;
    }
    if ((label | 0) == 22) {
     HEAP32[$__parent$i >> 2] = $__nd$0$in$i$i;
     $$0$i$i = $__nd$0$in$i$i;
     $244 = $__nd$0$in$i$i;
     break;
    } else if ((label | 0) == 25) {
     HEAP32[$__parent$i >> 2] = $__nd$0$in$i$i;
     $$0$i$i = $232;
     $244 = $__nd$0$in$i$i;
     break;
    } else if ((label | 0) == 26) {
     HEAP32[$__parent$i >> 2] = $__nd$0$in$i$i;
     $$0$i$i = $__parent$i;
     $244 = $__nd$0$in$i$i;
     break;
    }
   } while (0);
   $235 = HEAP32[$$0$i$i >> 2] | 0;
   if (!$235) {
    __THREW__ = 0;
    $237 = invoke_ii(67, 24) | 0;
    $238 = __THREW__;
    __THREW__ = 0;
    if ($238 & 1) {
     label = 39;
     break;
    }
    HEAP32[$237 + 16 >> 2] = $$0$i;
    HEAP32[$237 + 20 >> 2] = 0;
    HEAP32[$237 >> 2] = 0;
    HEAP32[$237 + 4 >> 2] = 0;
    HEAP32[$237 + 8 >> 2] = $244;
    HEAP32[$$0$i$i >> 2] = $237;
    $246 = HEAP32[HEAP32[$let_binds >> 2] >> 2] | 0;
    if (!$246) $249 = $237; else {
     HEAP32[$let_binds >> 2] = $246;
     $249 = HEAP32[$$0$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$65 >> 2] | 0, $249);
    HEAP32[$66 >> 2] = (HEAP32[$66 >> 2] | 0) + 1;
    $__r$0$i = $237;
   } else $__r$0$i = $235;
   HEAP32[$__r$0$i + 20 >> 2] = $199;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
   label = 2;
   break L1;
  } while (0);
  if ((label | 0) == 39) {
   $259 = ___cxa_find_matching_catch() | 0;
   $$pre$phiZ2D = $15;
   $eh$lpad$body62$index14Z2D = tempRet0;
   $eh$lpad$body62$indexZ2D = $259;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($$pre$phiZ2D);
  $$20 = $eh$lpad$body62$indexZ2D;
  $$2029 = $eh$lpad$body62$index14Z2D;
 } else label = 2; while (0);
 L54 : do if ((label | 0) == 2) {
  $70 = $next + 4 | 0;
  $71 = $next + 16 | 0;
  $72 = $next + 28 | 0;
  $73 = $30 + 4 | 0;
  $74 = $30 + 16 | 0;
  $75 = $30 + 28 | 0;
  $76 = $31 + 4 | 0;
  $77 = $31 + 16 | 0;
  $78 = $31 + 28 | 0;
  $79 = $32 + 4 | 0;
  $80 = $32 + 8 | 0;
  $81 = $34 + 4 | 0;
  $82 = $34 + 16 | 0;
  $83 = $34 + 28 | 0;
  $84 = $35 + 4 | 0;
  $85 = $35 + 16 | 0;
  $86 = $35 + 28 | 0;
  $87 = $36 + 4 | 0;
  $88 = $36 + 16 | 0;
  $89 = $36 + 28 | 0;
  $90 = $36 + 16 | 0;
  $91 = $plus_loc + 1 | 0;
  $92 = $plus_loc + 12 | 0;
  $93 = $37 + 4 | 0;
  $94 = $37 + 16 | 0;
  $95 = $37 + 28 | 0;
  $96 = $plus_loc + 8 | 0;
  $97 = $plus_loc + 4 | 0;
  $98 = $38 + 16 | 0;
  $99 = $38 + 4 | 0;
  $100 = $39 + 4 | 0;
  $101 = $39 + 16 | 0;
  $102 = $39 + 28 | 0;
  $103 = $40 + 4 | 0;
  $104 = $40 + 16 | 0;
  $105 = $40 + 28 | 0;
  $106 = $41 + 4 | 0;
  $107 = $41 + 16 | 0;
  $108 = $41 + 28 | 0;
  $109 = $42 + 4 | 0;
  $110 = $42 + 16 | 0;
  $111 = $42 + 28 | 0;
  $112 = $0 + 4 | 0;
  $113 = $44 + 12 | 0;
  $114 = $obj_level + 1 | 0;
  $115 = $46 + 12 | 0;
  $116 = $47 + 4 | 0;
  $117 = $47 + 8 | 0;
  $118 = $48 + 12 | 0;
  $119 = $50 + 12 | 0;
  $120 = $51 + 12 | 0;
  $121 = $52 + 12 | 0;
  $122 = $53 + 16 | 0;
  $123 = $53 + 4 | 0;
  $124 = $54 + 16 | 0;
  $125 = $54 + 4 | 0;
  $126 = $55 + 4 | 0;
  $127 = $55 + 16 | 0;
  $128 = $55 + 28 | 0;
  $129 = $56 + 4 | 0;
  $130 = $56 + 16 | 0;
  $131 = $56 + 28 | 0;
  $132 = $57 + 4 | 0;
  $133 = $57 + 16 | 0;
  $134 = $57 + 28 | 0;
  $135 = $58 + 4 | 0;
  $136 = $58 + 16 | 0;
  $137 = $58 + 28 | 0;
  $138 = $r + 4 | 0;
  $139 = $r + 8 | 0;
  $140 = $tok + 16 | 0;
  $141 = $next + 36 | 0;
  $142 = $tok + 28 | 0;
  $143 = $19 + 12 | 0;
  $144 = $19 + 20 | 0;
  $145 = $20 + 4 | 0;
  $146 = $20 + 8 | 0;
  $147 = $agg$result + 4 | 0;
  $148 = $agg$result + 16 | 0;
  $149 = $next + 16 | 0;
  $150 = $agg$result + 28 | 0;
  $151 = $17 + 12 | 0;
  $152 = $18 + 4 | 0;
  $153 = $18 + 8 | 0;
  $154 = $18 + 4 | 0;
  $155 = $id_tok + 4 | 0;
  $156 = $27 + 16 | 0;
  $157 = $27 + 4 | 0;
  $158 = $last + 36 | 0;
  $159 = $28 + 12 | 0;
  $160 = $28 + 20 | 0;
  $161 = $last + 4 | 0;
  $162 = $last + 16 | 0;
  $163 = $last + 28 | 0;
  $164 = $last + 16 | 0;
  $165 = $id_tok + 16 | 0;
  $166 = $23 + 12 | 0;
  $167 = $24 + 4 | 0;
  $168 = $24 + 8 | 0;
  $169 = $24 + 4 | 0;
  $170 = $16 + 4 | 0;
  $171 = $16 + 16 | 0;
  $172 = $16 + 28 | 0;
  $173 = $70 + 1 | 0;
  $174 = $16 + 16 | 0;
  $175 = $149 + 1 | 0;
  $176 = $next + 24 | 0;
  $177 = $next + 20 | 0;
  $178 = $next + 12 | 0;
  $179 = $next + 8 | 0;
  $got_comma$0$off0 = 1;
  $last_was_local$0$off0 = 0;
  L56 : while (1) {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $261 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$next >> 2] = HEAP32[$261 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $70 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $264 = __THREW__;
   __THREW__ = 0;
   if ($264 & 1) {
    label = 34;
    break;
   }
   HEAP32[$next >> 2] = HEAP32[$261 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $71 | 0, $this$idx$val$idx$val$i + 24 | 0);
   $268 = __THREW__;
   __THREW__ = 0;
   if ($268 & 1) {
    label = 43;
    break;
   }
   $272 = $this$idx$val$idx$val$i + 36 | 0;
   HEAP32[$72 + 0 >> 2] = HEAP32[$272 + 0 >> 2];
   HEAP32[$72 + 4 >> 2] = HEAP32[$272 + 4 >> 2];
   HEAP32[$72 + 8 >> 2] = HEAP32[$272 + 8 >> 2];
   HEAP32[$72 + 12 >> 2] = HEAP32[$272 + 12 >> 2];
   HEAP32[$next >> 2] = HEAP32[$261 >> 2];
   $274 = HEAP32[$this >> 2] | 0;
   $276 = HEAP32[$274 + 4 >> 2] | 0;
   $277 = $276 + 4 | 0;
   $279 = HEAP32[$276 >> 2] | 0;
   HEAP32[$279 + 4 >> 2] = HEAP32[$277 >> 2];
   HEAP32[HEAP32[$277 >> 2] >> 2] = $279;
   $282 = $274 + 8 | 0;
   HEAP32[$282 >> 2] = (HEAP32[$282 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($276 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($276 + 12 | 0);
   __ZdlPv($276);
   if ($got_comma$0$off0) label = 62; else {
    $287 = HEAP32[$next >> 2] | 0;
    if (($287 | 0) == 5) {
     $this$idx$val$idx$val$i71 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $289 = $this$idx$val$idx$val$i71 + 8 | 0;
     HEAP32[$16 >> 2] = HEAP32[$289 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $170 | 0, $this$idx$val$idx$val$i71 + 12 | 0);
     $292 = __THREW__;
     __THREW__ = 0;
     if ($292 & 1) {
      label = 60;
      break;
     }
     HEAP32[$16 >> 2] = HEAP32[$289 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $171 | 0, $this$idx$val$idx$val$i71 + 24 | 0);
     $296 = __THREW__;
     __THREW__ = 0;
     if ($296 & 1) {
      label = 48;
      break;
     }
     $300 = $this$idx$val$idx$val$i71 + 36 | 0;
     HEAP32[$172 + 0 >> 2] = HEAP32[$300 + 0 >> 2];
     HEAP32[$172 + 4 >> 2] = HEAP32[$300 + 4 >> 2];
     HEAP32[$172 + 8 >> 2] = HEAP32[$300 + 8 >> 2];
     HEAP32[$172 + 12 >> 2] = HEAP32[$300 + 12 >> 2];
     HEAP32[$16 >> 2] = HEAP32[$289 >> 2];
     $302 = HEAP32[$this >> 2] | 0;
     $304 = HEAP32[$302 + 4 >> 2] | 0;
     $305 = $304 + 4 | 0;
     $307 = HEAP32[$304 >> 2] | 0;
     HEAP32[$307 + 4 >> 2] = HEAP32[$305 >> 2];
     HEAP32[HEAP32[$305 >> 2] >> 2] = $307;
     $310 = $302 + 8 | 0;
     HEAP32[$310 >> 2] = (HEAP32[$310 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($304 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($304 + 12 | 0);
     __ZdlPv($304);
     HEAP32[$next >> 2] = HEAP32[$16 >> 2];
     if (!(HEAP8[$70 >> 0] & 1)) {
      HEAP8[$173 >> 0] = 0;
      HEAP8[$70 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$178 >> 2] >> 0] = 0;
      HEAP32[$179 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $70 | 0, 0);
     $320 = __THREW__;
     __THREW__ = 0;
     if ($320 & 1) {
      label = 53;
      break;
     };
     HEAP32[$70 + 0 >> 2] = HEAP32[$170 + 0 >> 2];
     HEAP32[$70 + 4 >> 2] = HEAP32[$170 + 4 >> 2];
     HEAP32[$70 + 8 >> 2] = HEAP32[$170 + 8 >> 2];
     HEAP32[$170 + 0 >> 2] = 0;
     HEAP32[$170 + 4 >> 2] = 0;
     HEAP32[$170 + 8 >> 2] = 0;
     if (!(HEAP8[$149 >> 0] & 1)) {
      HEAP8[$175 >> 0] = 0;
      HEAP8[$149 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$176 >> 2] >> 0] = 0;
      HEAP32[$177 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $149 | 0, 0);
     $328 = __THREW__;
     __THREW__ = 0;
     if ($328 & 1) {
      label = 58;
      break;
     };
     HEAP32[$149 + 0 >> 2] = HEAP32[$174 + 0 >> 2];
     HEAP32[$149 + 4 >> 2] = HEAP32[$174 + 4 >> 2];
     HEAP32[$149 + 8 >> 2] = HEAP32[$174 + 8 >> 2];
     HEAP32[$174 + 0 >> 2] = 0;
     HEAP32[$174 + 4 >> 2] = 0;
     HEAP32[$174 + 8 >> 2] = 0;
     HEAP32[$72 + 0 >> 2] = HEAP32[$172 + 0 >> 2];
     HEAP32[$72 + 4 >> 2] = HEAP32[$172 + 4 >> 2];
     HEAP32[$72 + 8 >> 2] = HEAP32[$172 + 8 >> 2];
     HEAP32[$72 + 12 >> 2] = HEAP32[$172 + 12 >> 2];
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($171);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($170);
     label = 62;
    } else {
     $1348 = $287;
     $got_comma$1$off0 = 0;
    }
   }
   if ((label | 0) == 62) {
    label = 0;
    $1348 = HEAP32[$next >> 2] | 0;
    $got_comma$1$off0 = 1;
   }
   do if (($1348 | 0) == 18) {
    if ((HEAP32[$64 >> 2] | 0) != 1) {
     label = 123;
     break L56;
    }
    if ($last_was_local$0$off0) {
     label = 132;
     break L56;
    }
    $575 = HEAP32[$63 >> 2] | 0;
    $577 = HEAP32[$575 + 8 >> 2] | 0;
    $579 = HEAP32[$575 + 12 >> 2] | 0;
    $581 = HEAP32[$575 + 16 >> 2] | 0;
    if (!(HEAP32[$66 >> 2] | 0)) $value$0 = $581; else {
     $584 = HEAP32[$69 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $23 | 0, $581 + 4 | 0);
     $586 = __THREW__;
     __THREW__ = 0;
     if ($586 & 1) {
      label = 60;
      break L56;
     }
     $588 = $581 + 16 | 0;
     HEAP32[$166 + 0 >> 2] = HEAP32[$588 + 0 >> 2];
     HEAP32[$166 + 4 >> 2] = HEAP32[$588 + 4 >> 2];
     HEAP32[$166 + 8 >> 2] = HEAP32[$588 + 8 >> 2];
     HEAP32[$166 + 12 >> 2] = HEAP32[$588 + 12 >> 2];
     HEAP32[$167 >> 2] = 0;
     HEAP32[$168 >> 2] = 0;
     HEAP32[$24 >> 2] = $169;
     $589 = HEAP32[$let_binds >> 2] | 0;
     if (($589 | 0) != ($67 | 0)) {
      $592 = $589;
      while (1) {
       HEAP32[$3 >> 2] = $169;
       __THREW__ = 0;
       HEAP32[$$byval_copy105 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
       invoke_viiii(11, $4 | 0, $24 | 0, $$byval_copy105 | 0, $592 + 16 | 0);
       $593 = __THREW__;
       __THREW__ = 0;
       if ($593 & 1) {
        label = 158;
        break L56;
       }
       $596 = HEAP32[$592 + 4 >> 2] | 0;
       if (!$596) {
        $$0$i$i$i$i$i127 = $592;
        while (1) {
         $601 = HEAP32[$$0$i$i$i$i$i127 + 8 >> 2] | 0;
         if ((HEAP32[$601 >> 2] | 0) == ($$0$i$i$i$i$i127 | 0)) {
          $$01$i$i$i$i$i129 = $601;
          break;
         } else $$0$i$i$i$i$i127 = $601;
        }
       } else {
        $$0$i$i$i$i$i$i125 = $596;
        while (1) {
         $598 = HEAP32[$$0$i$i$i$i$i$i125 >> 2] | 0;
         if (!$598) {
          $$01$i$i$i$i$i129 = $$0$i$i$i$i$i$i125;
          break;
         } else $$0$i$i$i$i$i$i125 = $598;
        }
       }
       if (($$01$i$i$i$i$i129 | 0) == ($67 | 0)) break; else $592 = $$01$i$i$i$i$i129;
      }
     }
     __THREW__ = 0;
     $605 = invoke_ii(67, 64) | 0;
     $606 = __THREW__;
     __THREW__ = 0;
     if ($606 & 1) {
      label = 159;
      break L56;
     }
     __THREW__ = 0;
     invoke_viiii(12, $605 | 0, $23 | 0, $24 | 0, $581 | 0);
     $608 = __THREW__;
     __THREW__ = 0;
     if ($608 & 1) {
      label = 156;
      break L56;
     }
     HEAP32[$2 >> 2] = $605;
     $610 = $584 + 16 | 0;
     $611 = HEAP32[$610 >> 2] | 0;
     if ($611 >>> 0 < (HEAP32[$584 + 20 >> 2] | 0) >>> 0) {
      if (!$611) $617 = 0; else {
       HEAP32[$611 >> 2] = $605;
       $617 = HEAP32[$610 >> 2] | 0;
      }
      HEAP32[$610 >> 2] = $617 + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(51, $584 + 12 | 0, $2 | 0);
      $619 = __THREW__;
      __THREW__ = 0;
      if ($619 & 1) {
       label = 159;
       break L56;
      }
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($24, HEAP32[$167 >> 2] | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23);
     $value$0 = $605;
    }
    if ($579) {
     label = 163;
     break L56;
    }
    if ($got_comma$1$off0) {
     label = 172;
     break L56;
    }
    __THREW__ = 0;
    invoke_viiii(13, $id_tok | 0, $this | 0, 11, 0);
    $665 = __THREW__;
    __THREW__ = 0;
    if ($665 & 1) {
     label = 60;
     break L56;
    }
    $667 = HEAP32[$69 >> 2] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i153, $667, $155);
    $669 = HEAP32[$it$i153 >> 2] | 0;
    if (($669 | 0) == ($667 + 4 | 0)) {
     __THREW__ = 0;
     $673 = invoke_ii(67, 12) | 0;
     $674 = __THREW__;
     __THREW__ = 0;
     if ($674 & 1) {
      label = 201;
      break L56;
     }
     __THREW__ = 0;
     invoke_vii(40, $673 | 0, $155 | 0);
     $676 = __THREW__;
     __THREW__ = 0;
     if ($676 & 1) {
      label = 187;
      break L56;
     }
     __THREW__ = 0;
     $678 = invoke_iii(23, $667 | 0, $155 | 0) | 0;
     $679 = __THREW__;
     __THREW__ = 0;
     if ($679 & 1) {
      label = 201;
      break L56;
     }
     HEAP32[$678 >> 2] = $673;
     $$0$i156 = $673;
    } else $$0$i156 = HEAP32[$669 + 28 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(13, $27 | 0, $this | 0, 23, 0);
    $683 = __THREW__;
    __THREW__ = 0;
    if ($683 & 1) {
     label = 201;
     break L56;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($156);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($157);
    __THREW__ = 0;
    $685 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
    $686 = __THREW__;
    __THREW__ = 0;
    if ($686 & 1) {
     label = 201;
     break L56;
    }
    __THREW__ = 0;
    invoke_viiii(13, $last | 0, $this | 0, 1, 0);
    $688 = __THREW__;
    __THREW__ = 0;
    if ($688 & 1) {
     label = 201;
     break L56;
    }
    $690 = HEAP32[$69 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $28 | 0, $140 | 0);
    $691 = __THREW__;
    __THREW__ = 0;
    if ($691 & 1) {
     label = 203;
     break L56;
    }
    $693 = $142;
    $698 = HEAP32[$693 + 4 >> 2] | 0;
    $699 = $159;
    HEAP32[$699 >> 2] = HEAP32[$693 >> 2];
    HEAP32[$699 + 4 >> 2] = $698;
    $703 = $158;
    $708 = HEAP32[$703 + 4 >> 2] | 0;
    $709 = $160;
    HEAP32[$709 >> 2] = HEAP32[$703 >> 2];
    HEAP32[$709 + 4 >> 2] = $708;
    __THREW__ = 0;
    $713 = invoke_ii(67, 64) | 0;
    $714 = __THREW__;
    __THREW__ = 0;
    if ($714 & 1) {
     label = 204;
     break L56;
    }
    HEAP32[$713 >> 2] = 34168;
    __THREW__ = 0;
    invoke_vii(40, $713 + 4 | 0, $28 | 0);
    $717 = __THREW__;
    __THREW__ = 0;
    if ($717 & 1) {
     label = 199;
     break L56;
    }
    $719 = $713 + 16 | 0;
    HEAP32[$719 + 0 >> 2] = HEAP32[$159 + 0 >> 2];
    HEAP32[$719 + 4 >> 2] = HEAP32[$159 + 4 >> 2];
    HEAP32[$719 + 8 >> 2] = HEAP32[$159 + 8 >> 2];
    HEAP32[$719 + 12 >> 2] = HEAP32[$159 + 12 >> 2];
    HEAP32[$713 + 32 >> 2] = 16;
    HEAP32[$713 + 36 >> 2] = 0;
    HEAP32[$713 + 40 >> 2] = 0;
    HEAP32[$713 + 44 >> 2] = 0;
    HEAP32[$713 >> 2] = 36376;
    HEAP32[$713 + 48 >> 2] = $577;
    HEAP32[$713 + 52 >> 2] = $value$0;
    HEAP32[$713 + 56 >> 2] = $$0$i156;
    HEAP32[$713 + 60 >> 2] = $685;
    HEAP32[$1 >> 2] = $713;
    $728 = $690 + 16 | 0;
    $729 = HEAP32[$728 >> 2] | 0;
    if ($729 >>> 0 < (HEAP32[$690 + 20 >> 2] | 0) >>> 0) {
     if (!$729) $735 = 0; else {
      HEAP32[$729 >> 2] = $713;
      $735 = HEAP32[$728 >> 2] | 0;
     }
     HEAP32[$728 >> 2] = $735 + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(51, $690 + 12 | 0, $1 | 0);
     $737 = __THREW__;
     __THREW__ = 0;
     if ($737 & 1) {
      label = 204;
      break L56;
     }
    }
    HEAP32[$obj >> 2] = $713;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
    $741 = HEAP32[$last >> 2] | 0;
    HEAP32[$147 + 0 >> 2] = HEAP32[$161 + 0 >> 2];
    HEAP32[$147 + 4 >> 2] = HEAP32[$161 + 4 >> 2];
    HEAP32[$147 + 8 >> 2] = HEAP32[$161 + 8 >> 2];
    HEAP32[$161 + 0 >> 2] = 0;
    HEAP32[$161 + 4 >> 2] = 0;
    HEAP32[$161 + 8 >> 2] = 0;
    HEAP32[$148 + 0 >> 2] = HEAP32[$162 + 0 >> 2];
    HEAP32[$148 + 4 >> 2] = HEAP32[$162 + 4 >> 2];
    HEAP32[$148 + 8 >> 2] = HEAP32[$162 + 8 >> 2];
    HEAP32[$162 + 0 >> 2] = 0;
    HEAP32[$162 + 4 >> 2] = 0;
    HEAP32[$162 + 8 >> 2] = 0;
    HEAP32[$150 + 0 >> 2] = HEAP32[$163 + 0 >> 2];
    HEAP32[$150 + 4 >> 2] = HEAP32[$163 + 4 >> 2];
    HEAP32[$150 + 8 >> 2] = HEAP32[$163 + 8 >> 2];
    HEAP32[$150 + 12 >> 2] = HEAP32[$163 + 12 >> 2];
    HEAP32[$agg$result >> 2] = $741;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($164);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($161);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($165);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($155);
    $$039 = 0;
    $got_comma$2$off0 = 0;
    $last_was_local$2$off0 = 0;
   } else if (($1348 | 0) == 1) {
    HEAP32[$r >> 2] = $r;
    HEAP32[$138 >> 2] = $r;
    HEAP32[$139 >> 2] = 0;
    $336 = HEAP32[$63 >> 2] | 0;
    if (!(HEAP32[$66 >> 2] | 0)) {
     HEAP32[$9 >> 2] = $r;
     HEAP32[$10 >> 2] = $336;
     HEAP32[$11 >> 2] = $fields;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$9 + 0 >> 2];
     HEAP32[$$byval_copy102 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
     HEAP32[$$byval_copy105 + 0 >> 2] = HEAP32[$11 + 0 >> 2];
     invoke_viiiiii(18, $12 | 0, $r | 0, $$byval_copy | 0, $$byval_copy102 | 0, $$byval_copy105 | 0, 0);
     $338 = __THREW__;
     __THREW__ = 0;
     if ($338 & 1) {
      label = 68;
      break L56;
     }
    } else if (($336 | 0) != ($fields | 0)) {
     $346 = $336;
     do {
      $344 = HEAP32[$69 >> 2] | 0;
      $345 = $346 + 16 | 0;
      $347 = HEAP32[$345 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $17 | 0, $347 + 4 | 0);
      $349 = __THREW__;
      __THREW__ = 0;
      if ($349 & 1) {
       label = 67;
       break L56;
      }
      $351 = $347 + 16 | 0;
      HEAP32[$151 + 0 >> 2] = HEAP32[$351 + 0 >> 2];
      HEAP32[$151 + 4 >> 2] = HEAP32[$351 + 4 >> 2];
      HEAP32[$151 + 8 >> 2] = HEAP32[$351 + 8 >> 2];
      HEAP32[$151 + 12 >> 2] = HEAP32[$351 + 12 >> 2];
      HEAP32[$152 >> 2] = 0;
      HEAP32[$153 >> 2] = 0;
      HEAP32[$18 >> 2] = $154;
      $352 = HEAP32[$let_binds >> 2] | 0;
      if (($352 | 0) != ($67 | 0)) {
       $355 = $352;
       while (1) {
        HEAP32[$7 >> 2] = $154;
        __THREW__ = 0;
        HEAP32[$$byval_copy105 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
        invoke_viiii(11, $8 | 0, $18 | 0, $$byval_copy105 | 0, $355 + 16 | 0);
        $356 = __THREW__;
        __THREW__ = 0;
        if ($356 & 1) {
         label = 88;
         break L56;
        }
        $359 = HEAP32[$355 + 4 >> 2] | 0;
        if (!$359) {
         $$0$i$i$i$i$i = $355;
         while (1) {
          $364 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
          if ((HEAP32[$364 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
           $$01$i$i$i$i$i = $364;
           break;
          } else $$0$i$i$i$i$i = $364;
         }
        } else {
         $$0$i$i$i$i$i$i = $359;
         while (1) {
          $361 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
          if (!$361) {
           $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i = $361;
         }
        }
        if (($$01$i$i$i$i$i | 0) == ($67 | 0)) break; else $355 = $$01$i$i$i$i$i;
       }
      }
      $368 = HEAP32[$345 >> 2] | 0;
      __THREW__ = 0;
      $369 = invoke_ii(67, 64) | 0;
      $370 = __THREW__;
      __THREW__ = 0;
      if ($370 & 1) {
       label = 89;
       break L56;
      }
      __THREW__ = 0;
      invoke_viiii(12, $369 | 0, $17 | 0, $18 | 0, $368 | 0);
      $372 = __THREW__;
      __THREW__ = 0;
      if ($372 & 1) {
       label = 85;
       break L56;
      }
      HEAP32[$6 >> 2] = $369;
      $374 = $344 + 16 | 0;
      $375 = HEAP32[$374 >> 2] | 0;
      if ($375 >>> 0 < (HEAP32[$344 + 20 >> 2] | 0) >>> 0) {
       if (!$375) $381 = 0; else {
        HEAP32[$375 >> 2] = $369;
        $381 = HEAP32[$374 >> 2] | 0;
       }
       HEAP32[$374 >> 2] = $381 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $344 + 12 | 0, $6 | 0);
       $383 = __THREW__;
       __THREW__ = 0;
       if ($383 & 1) {
        label = 89;
        break L56;
       }
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($18, HEAP32[$152 >> 2] | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
      __THREW__ = 0;
      $388 = invoke_ii(67, 20) | 0;
      $389 = __THREW__;
      __THREW__ = 0;
      if ($389 & 1) {
       label = 67;
       break L56;
      }
      $395 = HEAP32[$346 + 12 >> 2] | 0;
      HEAP32[$388 + 8 >> 2] = HEAP32[$346 + 8 >> 2];
      HEAP32[$388 + 12 >> 2] = $395;
      HEAP32[$388 + 16 >> 2] = $369;
      HEAP32[$388 + 4 >> 2] = $r;
      $399 = HEAP32[$r >> 2] | 0;
      HEAP32[$388 >> 2] = $399;
      HEAP32[$399 + 4 >> 2] = $388;
      HEAP32[$r >> 2] = $388;
      HEAP32[$139 >> 2] = (HEAP32[$139 >> 2] | 0) + 1;
      $346 = HEAP32[$346 + 4 >> 2] | 0;
     } while (($346 | 0) != ($fields | 0));
    }
    $412 = HEAP32[$69 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $19 | 0, $140 | 0);
    $413 = __THREW__;
    __THREW__ = 0;
    if ($413 & 1) {
     label = 68;
     break L56;
    }
    $415 = $142;
    $420 = HEAP32[$415 + 4 >> 2] | 0;
    $421 = $143;
    HEAP32[$421 >> 2] = HEAP32[$415 >> 2];
    HEAP32[$421 + 4 >> 2] = $420;
    $425 = $141;
    $430 = HEAP32[$425 + 4 >> 2] | 0;
    $431 = $144;
    HEAP32[$431 >> 2] = HEAP32[$425 >> 2];
    HEAP32[$431 + 4 >> 2] = $430;
    HEAP32[$20 >> 2] = $20;
    HEAP32[$145 >> 2] = $20;
    HEAP32[$146 >> 2] = 0;
    $435 = HEAP32[$138 >> 2] | 0;
    if (($435 | 0) != ($r | 0)) {
     $441 = $435;
     do {
      __THREW__ = 0;
      $437 = invoke_ii(67, 20) | 0;
      $438 = __THREW__;
      __THREW__ = 0;
      if ($438 & 1) {
       label = 96;
       break L56;
      }
      $440 = $441 + 8 | 0;
      $442 = $437 + 8 | 0;
      HEAP32[$442 + 0 >> 2] = HEAP32[$440 + 0 >> 2];
      HEAP32[$442 + 4 >> 2] = HEAP32[$440 + 4 >> 2];
      HEAP32[$442 + 8 >> 2] = HEAP32[$440 + 8 >> 2];
      HEAP32[$437 + 4 >> 2] = $20;
      $444 = HEAP32[$20 >> 2] | 0;
      HEAP32[$437 >> 2] = $444;
      HEAP32[$444 + 4 >> 2] = $437;
      HEAP32[$20 >> 2] = $437;
      HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + 1;
      $441 = HEAP32[$441 + 4 >> 2] | 0;
     } while (($441 | 0) != ($r | 0));
    }
    __THREW__ = 0;
    $466 = invoke_ii(67, 60) | 0;
    $467 = __THREW__;
    __THREW__ = 0;
    if ($467 & 1) {
     label = 114;
     break L56;
    }
    __THREW__ = 0;
    invoke_viii(8, $466 | 0, $19 | 0, $20 | 0);
    $469 = __THREW__;
    __THREW__ = 0;
    if ($469 & 1) {
     label = 106;
     break L56;
    }
    HEAP32[$5 >> 2] = $466;
    $471 = $412 + 16 | 0;
    $472 = HEAP32[$471 >> 2] | 0;
    if ($472 >>> 0 < (HEAP32[$412 + 20 >> 2] | 0) >>> 0) {
     if (!$472) $478 = 0; else {
      HEAP32[$472 >> 2] = $466;
      $478 = HEAP32[$471 >> 2] | 0;
     }
     HEAP32[$471 >> 2] = $478 + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(51, $412 + 12 | 0, $5 | 0);
     $480 = __THREW__;
     __THREW__ = 0;
     if ($480 & 1) {
      label = 114;
      break L56;
     }
    }
    HEAP32[$obj >> 2] = $466;
    if (HEAP32[$146 >> 2] | 0) {
     $486 = HEAP32[$145 >> 2] | 0;
     $488 = (HEAP32[$20 >> 2] | 0) + 4 | 0;
     $490 = HEAP32[$486 >> 2] | 0;
     HEAP32[$490 + 4 >> 2] = HEAP32[$488 >> 2];
     HEAP32[HEAP32[$488 >> 2] >> 2] = $490;
     HEAP32[$146 >> 2] = 0;
     if (($486 | 0) != ($20 | 0)) {
      $__f$01$i$i = $486;
      do {
       $__f$01$i$i$looptemp = $__f$01$i$i;
       $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i$looptemp);
      } while (($__f$01$i$i | 0) != ($20 | 0));
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
    $497 = HEAP32[$next >> 2] | 0;
    HEAP32[$147 + 0 >> 2] = HEAP32[$70 + 0 >> 2];
    HEAP32[$147 + 4 >> 2] = HEAP32[$70 + 4 >> 2];
    HEAP32[$147 + 8 >> 2] = HEAP32[$70 + 8 >> 2];
    HEAP32[$70 + 0 >> 2] = 0;
    HEAP32[$70 + 4 >> 2] = 0;
    HEAP32[$70 + 8 >> 2] = 0;
    HEAP32[$148 + 0 >> 2] = HEAP32[$149 + 0 >> 2];
    HEAP32[$148 + 4 >> 2] = HEAP32[$149 + 4 >> 2];
    HEAP32[$148 + 8 >> 2] = HEAP32[$149 + 8 >> 2];
    HEAP32[$149 + 0 >> 2] = 0;
    HEAP32[$149 + 4 >> 2] = 0;
    HEAP32[$149 + 8 >> 2] = 0;
    HEAP32[$150 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
    HEAP32[$150 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
    HEAP32[$150 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
    HEAP32[$150 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
    HEAP32[$agg$result >> 2] = $497;
    if (!(HEAP32[$139 >> 2] | 0)) {
     $$039 = 0;
     $got_comma$2$off0 = $got_comma$1$off0;
     $last_was_local$2$off0 = $last_was_local$0$off0;
    } else {
     $500 = HEAP32[$138 >> 2] | 0;
     $502 = (HEAP32[$r >> 2] | 0) + 4 | 0;
     $504 = HEAP32[$500 >> 2] | 0;
     HEAP32[$504 + 4 >> 2] = HEAP32[$502 >> 2];
     HEAP32[HEAP32[$502 >> 2] >> 2] = $504;
     HEAP32[$139 >> 2] = 0;
     if (($500 | 0) == ($r | 0)) {
      $$039 = 0;
      $got_comma$2$off0 = $got_comma$1$off0;
      $last_was_local$2$off0 = $last_was_local$0$off0;
     } else {
      $__f$01$i$i99 = $500;
      do {
       $__f$01$i$i99$looptemp = $__f$01$i$i99;
       $__f$01$i$i99 = HEAP32[$__f$01$i$i99 + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i99$looptemp);
      } while (($__f$01$i$i99 | 0) != ($r | 0));
      $$039 = 0;
      $got_comma$2$off0 = $got_comma$1$off0;
      $last_was_local$2$off0 = $last_was_local$0$off0;
     }
    }
   } else {
    if (!$got_comma$1$off0) {
     label = 209;
     break L56;
    }
    if (($1348 | 0) == 14 | ($1348 | 0) == 11) {
     $this$idx57$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $765 = $this$idx57$val$idx$val + 8 | 0;
     HEAP32[$30 >> 2] = HEAP32[$765 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $73 | 0, $this$idx57$val$idx$val + 12 | 0);
     $768 = __THREW__;
     __THREW__ = 0;
     if ($768 & 1) {
      label = 228;
      break L56;
     }
     HEAP32[$30 >> 2] = HEAP32[$765 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $74 | 0, $this$idx57$val$idx$val + 24 | 0);
     $772 = __THREW__;
     __THREW__ = 0;
     if ($772 & 1) {
      label = 220;
      break L56;
     }
     $776 = $this$idx57$val$idx$val + 36 | 0;
     HEAP32[$75 + 0 >> 2] = HEAP32[$776 + 0 >> 2];
     HEAP32[$75 + 4 >> 2] = HEAP32[$776 + 4 >> 2];
     HEAP32[$75 + 8 >> 2] = HEAP32[$776 + 8 >> 2];
     HEAP32[$75 + 12 >> 2] = HEAP32[$776 + 12 >> 2];
     $777 = HEAP32[$765 >> 2] | 0;
     HEAP32[$30 >> 2] = $777;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($74);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($73);
     if (($777 | 0) == 8) {
      $this$idx$val$idx$val$i182 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $779 = $this$idx$val$idx$val$i182 + 8 | 0;
      HEAP32[$31 >> 2] = HEAP32[$779 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $76 | 0, $this$idx$val$idx$val$i182 + 12 | 0);
      $782 = __THREW__;
      __THREW__ = 0;
      if ($782 & 1) {
       label = 228;
       break L56;
      }
      HEAP32[$31 >> 2] = HEAP32[$779 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $77 | 0, $this$idx$val$idx$val$i182 + 24 | 0);
      $786 = __THREW__;
      __THREW__ = 0;
      if ($786 & 1) {
       label = 224;
       break L56;
      }
      $790 = $this$idx$val$idx$val$i182 + 36 | 0;
      HEAP32[$78 + 0 >> 2] = HEAP32[$790 + 0 >> 2];
      HEAP32[$78 + 4 >> 2] = HEAP32[$790 + 4 >> 2];
      HEAP32[$78 + 8 >> 2] = HEAP32[$790 + 8 >> 2];
      HEAP32[$78 + 12 >> 2] = HEAP32[$790 + 12 >> 2];
      HEAP32[$31 >> 2] = HEAP32[$779 >> 2];
      $792 = HEAP32[$this >> 2] | 0;
      $794 = HEAP32[$792 + 4 >> 2] | 0;
      $795 = $794 + 4 | 0;
      $797 = HEAP32[$794 >> 2] | 0;
      HEAP32[$797 + 4 >> 2] = HEAP32[$795 >> 2];
      HEAP32[HEAP32[$795 >> 2] >> 2] = $797;
      $800 = $792 + 8 | 0;
      HEAP32[$800 >> 2] = (HEAP32[$800 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($794 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($794 + 12 | 0);
      __ZdlPv($794);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($77);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($76);
      __THREW__ = 0;
      invoke_viii(3, $33 | 0, 36232, 16);
      $805 = __THREW__;
      __THREW__ = 0;
      if ($805 & 1) {
       label = 228;
       break L56;
      }
      __THREW__ = 0;
      invoke_viiii(15, $32 | 0, $this | 0, $33 | 0, $obj_level | 0);
      $807 = __THREW__;
      __THREW__ = 0;
      if ($807 & 1) {
       label = 230;
       break L56;
      }
      $809 = HEAP32[$32 >> 2] | 0;
      $810 = HEAP32[$79 >> 2] | 0;
      HEAP32[$80 >> 2] = 0;
      HEAP32[$79 >> 2] = 0;
      HEAP32[$32 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($33);
      $1028 = $810;
      $1030 = $809;
      $is_method$0$off0 = 1;
     } else {
      $1028 = 0;
      $1030 = 0;
      $is_method$0$off0 = 0;
     };
     HEAP32[$plus_loc + 0 >> 2] = 0;
     HEAP32[$plus_loc + 4 >> 2] = 0;
     HEAP32[$plus_loc + 8 >> 2] = 0;
     HEAP32[$plus_loc + 12 >> 2] = 0;
     HEAP32[$plus_loc + 16 >> 2] = 0;
     HEAP32[$plus_loc + 20 >> 2] = 0;
     HEAP32[$plus_loc + 24 >> 2] = 0;
     $this$idx56$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $815 = $this$idx56$val$idx$val + 8 | 0;
     HEAP32[$34 >> 2] = HEAP32[$815 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $81 | 0, $this$idx56$val$idx$val + 12 | 0);
     $818 = __THREW__;
     __THREW__ = 0;
     if ($818 & 1) {
      label = 251;
      break L56;
     }
     HEAP32[$34 >> 2] = HEAP32[$815 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $82 | 0, $this$idx56$val$idx$val + 24 | 0);
     $822 = __THREW__;
     __THREW__ = 0;
     if ($822 & 1) {
      label = 233;
      break L56;
     }
     $826 = $this$idx56$val$idx$val + 36 | 0;
     HEAP32[$83 + 0 >> 2] = HEAP32[$826 + 0 >> 2];
     HEAP32[$83 + 4 >> 2] = HEAP32[$826 + 4 >> 2];
     HEAP32[$83 + 8 >> 2] = HEAP32[$826 + 8 >> 2];
     HEAP32[$83 + 12 >> 2] = HEAP32[$826 + 12 >> 2];
     $827 = HEAP32[$815 >> 2] | 0;
     HEAP32[$34 >> 2] = $827;
     if (($827 | 0) == 13) {
      $this$idx55$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $829 = $this$idx55$val$idx$val + 8 | 0;
      HEAP32[$35 >> 2] = HEAP32[$829 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $84 | 0, $this$idx55$val$idx$val + 12 | 0);
      $832 = __THREW__;
      __THREW__ = 0;
      if ($832 & 1) {
       label = 253;
       break L56;
      }
      HEAP32[$35 >> 2] = HEAP32[$829 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $85 | 0, $this$idx55$val$idx$val + 24 | 0);
      $836 = __THREW__;
      __THREW__ = 0;
      if ($836 & 1) {
       label = 237;
       break L56;
      }
      $840 = $this$idx55$val$idx$val + 36 | 0;
      HEAP32[$86 + 0 >> 2] = HEAP32[$840 + 0 >> 2];
      HEAP32[$86 + 4 >> 2] = HEAP32[$840 + 4 >> 2];
      HEAP32[$86 + 8 >> 2] = HEAP32[$840 + 8 >> 2];
      HEAP32[$86 + 12 >> 2] = HEAP32[$840 + 12 >> 2];
      HEAP32[$35 >> 2] = HEAP32[$829 >> 2];
      $843 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($84, 35152) | 0) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($85);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($84);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($82);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($81);
      if ($843) {
       $this$idx54$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $844 = $this$idx54$val$idx$val + 8 | 0;
       HEAP32[$36 >> 2] = HEAP32[$844 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $87 | 0, $this$idx54$val$idx$val + 12 | 0);
       $847 = __THREW__;
       __THREW__ = 0;
       if ($847 & 1) {
        label = 251;
        break L56;
       }
       HEAP32[$36 >> 2] = HEAP32[$844 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $88 | 0, $this$idx54$val$idx$val + 24 | 0);
       $851 = __THREW__;
       __THREW__ = 0;
       if ($851 & 1) {
        label = 241;
        break L56;
       }
       $855 = $this$idx54$val$idx$val + 36 | 0;
       HEAP32[$89 + 0 >> 2] = HEAP32[$855 + 0 >> 2];
       HEAP32[$89 + 4 >> 2] = HEAP32[$855 + 4 >> 2];
       HEAP32[$89 + 8 >> 2] = HEAP32[$855 + 8 >> 2];
       HEAP32[$89 + 12 >> 2] = HEAP32[$855 + 12 >> 2];
       HEAP32[$36 >> 2] = HEAP32[$844 >> 2];
       if (!(HEAP8[$plus_loc >> 0] & 1)) {
        HEAP8[$91 >> 0] = 0;
        HEAP8[$plus_loc >> 0] = 0;
       } else {
        HEAP8[HEAP32[$96 >> 2] >> 0] = 0;
        HEAP32[$97 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $plus_loc | 0, 0);
       $861 = __THREW__;
       __THREW__ = 0;
       if ($861 & 1) {
        label = 246;
        break L56;
       };
       HEAP32[$plus_loc + 0 >> 2] = HEAP32[$90 + 0 >> 2];
       HEAP32[$plus_loc + 4 >> 2] = HEAP32[$90 + 4 >> 2];
       HEAP32[$plus_loc + 8 >> 2] = HEAP32[$90 + 8 >> 2];
       HEAP32[$90 + 0 >> 2] = 0;
       HEAP32[$90 + 4 >> 2] = 0;
       HEAP32[$90 + 8 >> 2] = 0;
       HEAP32[$92 + 0 >> 2] = HEAP32[$89 + 0 >> 2];
       HEAP32[$92 + 4 >> 2] = HEAP32[$89 + 4 >> 2];
       HEAP32[$92 + 8 >> 2] = HEAP32[$89 + 8 >> 2];
       HEAP32[$92 + 12 >> 2] = HEAP32[$89 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($88);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($87);
       $this$idx$val$idx$val$i208 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $865 = $this$idx$val$idx$val$i208 + 8 | 0;
       HEAP32[$37 >> 2] = HEAP32[$865 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $93 | 0, $this$idx$val$idx$val$i208 + 12 | 0);
       $868 = __THREW__;
       __THREW__ = 0;
       if ($868 & 1) {
        label = 251;
        break L56;
       }
       HEAP32[$37 >> 2] = HEAP32[$865 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $94 | 0, $this$idx$val$idx$val$i208 + 24 | 0);
       $872 = __THREW__;
       __THREW__ = 0;
       if ($872 & 1) {
        label = 249;
        break L56;
       }
       $876 = $this$idx$val$idx$val$i208 + 36 | 0;
       HEAP32[$95 + 0 >> 2] = HEAP32[$876 + 0 >> 2];
       HEAP32[$95 + 4 >> 2] = HEAP32[$876 + 4 >> 2];
       HEAP32[$95 + 8 >> 2] = HEAP32[$876 + 8 >> 2];
       HEAP32[$95 + 12 >> 2] = HEAP32[$876 + 12 >> 2];
       HEAP32[$37 >> 2] = HEAP32[$865 >> 2];
       $878 = HEAP32[$this >> 2] | 0;
       $880 = HEAP32[$878 + 4 >> 2] | 0;
       $881 = $880 + 4 | 0;
       $883 = HEAP32[$880 >> 2] | 0;
       HEAP32[$883 + 4 >> 2] = HEAP32[$881 >> 2];
       HEAP32[HEAP32[$881 >> 2] >> 2] = $883;
       $886 = $878 + 8 | 0;
       HEAP32[$886 >> 2] = (HEAP32[$886 >> 2] | 0) + -1;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($880 + 24 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($880 + 12 | 0);
       __ZdlPv($880);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($94);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($93);
       $plus_sugar$0$off0 = 1;
      } else $plus_sugar$0$off0 = 0;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($82);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($81);
      $plus_sugar$0$off0 = 0;
     }
     __THREW__ = 0;
     invoke_viiii(13, $38 | 0, $this | 0, 4, 0);
     $895 = __THREW__;
     __THREW__ = 0;
     if ($895 & 1) {
      label = 251;
      break L56;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($98);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($99);
     $this$idx53$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $897 = $this$idx53$val$idx$val + 8 | 0;
     HEAP32[$39 >> 2] = HEAP32[$897 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $100 | 0, $this$idx53$val$idx$val + 12 | 0);
     $900 = __THREW__;
     __THREW__ = 0;
     if ($900 & 1) {
      label = 251;
      break L56;
     }
     HEAP32[$39 >> 2] = HEAP32[$897 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $101 | 0, $this$idx53$val$idx$val + 24 | 0);
     $904 = __THREW__;
     __THREW__ = 0;
     if ($904 & 1) {
      label = 259;
      break L56;
     }
     $908 = $this$idx53$val$idx$val + 36 | 0;
     HEAP32[$102 + 0 >> 2] = HEAP32[$908 + 0 >> 2];
     HEAP32[$102 + 4 >> 2] = HEAP32[$908 + 4 >> 2];
     HEAP32[$102 + 8 >> 2] = HEAP32[$908 + 8 >> 2];
     HEAP32[$102 + 12 >> 2] = HEAP32[$908 + 12 >> 2];
     $909 = HEAP32[$897 >> 2] | 0;
     HEAP32[$39 >> 2] = $909;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($101);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($100);
     do if (($909 | 0) == 4) {
      $this$idx$val$idx$val$i220 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $911 = $this$idx$val$idx$val$i220 + 8 | 0;
      HEAP32[$40 >> 2] = HEAP32[$911 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $103 | 0, $this$idx$val$idx$val$i220 + 12 | 0);
      $914 = __THREW__;
      __THREW__ = 0;
      if ($914 & 1) {
       label = 251;
       break L56;
      }
      HEAP32[$40 >> 2] = HEAP32[$911 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $104 | 0, $this$idx$val$idx$val$i220 + 24 | 0);
      $918 = __THREW__;
      __THREW__ = 0;
      if ($918 & 1) {
       label = 263;
       break L56;
      }
      $922 = $this$idx$val$idx$val$i220 + 36 | 0;
      HEAP32[$105 + 0 >> 2] = HEAP32[$922 + 0 >> 2];
      HEAP32[$105 + 4 >> 2] = HEAP32[$922 + 4 >> 2];
      HEAP32[$105 + 8 >> 2] = HEAP32[$922 + 8 >> 2];
      HEAP32[$105 + 12 >> 2] = HEAP32[$922 + 12 >> 2];
      HEAP32[$40 >> 2] = HEAP32[$911 >> 2];
      $924 = HEAP32[$this >> 2] | 0;
      $926 = HEAP32[$924 + 4 >> 2] | 0;
      $927 = $926 + 4 | 0;
      $929 = HEAP32[$926 >> 2] | 0;
      HEAP32[$929 + 4 >> 2] = HEAP32[$927 >> 2];
      HEAP32[HEAP32[$927 >> 2] >> 2] = $929;
      $932 = $924 + 8 | 0;
      HEAP32[$932 >> 2] = (HEAP32[$932 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($926 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($926 + 12 | 0);
      __ZdlPv($926);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($104);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($103);
      $this$idx52$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $937 = $this$idx52$val$idx$val + 8 | 0;
      HEAP32[$41 >> 2] = HEAP32[$937 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $106 | 0, $this$idx52$val$idx$val + 12 | 0);
      $940 = __THREW__;
      __THREW__ = 0;
      if ($940 & 1) {
       label = 251;
       break L56;
      }
      HEAP32[$41 >> 2] = HEAP32[$937 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $107 | 0, $this$idx52$val$idx$val + 24 | 0);
      $944 = __THREW__;
      __THREW__ = 0;
      if ($944 & 1) {
       label = 266;
       break L56;
      }
      $948 = $this$idx52$val$idx$val + 36 | 0;
      HEAP32[$108 + 0 >> 2] = HEAP32[$948 + 0 >> 2];
      HEAP32[$108 + 4 >> 2] = HEAP32[$948 + 4 >> 2];
      HEAP32[$108 + 8 >> 2] = HEAP32[$948 + 8 >> 2];
      HEAP32[$108 + 12 >> 2] = HEAP32[$948 + 12 >> 2];
      $949 = HEAP32[$937 >> 2] | 0;
      HEAP32[$41 >> 2] = $949;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($107);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($106);
      if (($949 | 0) != 4) {
       $1193 = 1;
       break;
      }
      $this$idx$val$idx$val$i232 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $951 = $this$idx$val$idx$val$i232 + 8 | 0;
      HEAP32[$42 >> 2] = HEAP32[$951 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $109 | 0, $this$idx$val$idx$val$i232 + 12 | 0);
      $954 = __THREW__;
      __THREW__ = 0;
      if ($954 & 1) {
       label = 251;
       break L56;
      }
      HEAP32[$42 >> 2] = HEAP32[$951 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $110 | 0, $this$idx$val$idx$val$i232 + 24 | 0);
      $958 = __THREW__;
      __THREW__ = 0;
      if ($958 & 1) {
       label = 270;
       break L56;
      }
      $962 = $this$idx$val$idx$val$i232 + 36 | 0;
      HEAP32[$111 + 0 >> 2] = HEAP32[$962 + 0 >> 2];
      HEAP32[$111 + 4 >> 2] = HEAP32[$962 + 4 >> 2];
      HEAP32[$111 + 8 >> 2] = HEAP32[$962 + 8 >> 2];
      HEAP32[$111 + 12 >> 2] = HEAP32[$962 + 12 >> 2];
      HEAP32[$42 >> 2] = HEAP32[$951 >> 2];
      $964 = HEAP32[$this >> 2] | 0;
      $966 = HEAP32[$964 + 4 >> 2] | 0;
      $967 = $966 + 4 | 0;
      $969 = HEAP32[$966 >> 2] | 0;
      HEAP32[$969 + 4 >> 2] = HEAP32[$967 >> 2];
      HEAP32[HEAP32[$967 >> 2] >> 2] = $969;
      $972 = $964 + 8 | 0;
      HEAP32[$972 >> 2] = (HEAP32[$972 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($966 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($966 + 12 | 0);
      __ZdlPv($966);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($110);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($109);
      $1193 = 2;
     } else $1193 = 0; while (0);
     __THREW__ = 0;
     invoke_viii(9, $0 | 0, $literal_fields | 0, $70 | 0);
     $977 = __THREW__;
     __THREW__ = 0;
     if ($977 & 1) {
      label = 251;
      break L56;
     }
     if (!(HEAP8[$112 >> 0] | 0)) {
      label = 274;
      break L56;
     }
     $1012 = HEAP32[$69 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $44 | 0, $71 | 0);
     $1013 = __THREW__;
     __THREW__ = 0;
     if ($1013 & 1) {
      label = 251;
      break L56;
     };
     HEAP32[$113 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
     HEAP32[$113 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
     HEAP32[$113 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
     HEAP32[$113 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $45 | 0, $70 | 0);
     $1015 = __THREW__;
     __THREW__ = 0;
     if ($1015 & 1) {
      label = 310;
      break L56;
     }
     __THREW__ = 0;
     $1017 = invoke_iiii(27, $1012 | 0, $44 | 0, $45 | 0) | 0;
     $1018 = __THREW__;
     __THREW__ = 0;
     if ($1018 & 1) {
      label = 311;
      break L56;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($45);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($44);
     __THREW__ = 0;
     $1020 = invoke_iiii(28, $this | 0, 15, $114 | 0) | 0;
     $1021 = __THREW__;
     __THREW__ = 0;
     if ($1021 & 1) {
      label = 251;
      break L56;
     }
     if ($is_method$0$off0) {
      $1023 = HEAP32[$69 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $46 | 0, $1020 + 4 | 0);
      $1025 = __THREW__;
      __THREW__ = 0;
      if ($1025 & 1) {
       label = 251;
       break L56;
      }
      $1027 = $1020 + 16 | 0;
      HEAP32[$115 + 0 >> 2] = HEAP32[$1027 + 0 >> 2];
      HEAP32[$115 + 4 >> 2] = HEAP32[$1027 + 4 >> 2];
      HEAP32[$115 + 8 >> 2] = HEAP32[$1027 + 8 >> 2];
      HEAP32[$115 + 12 >> 2] = HEAP32[$1027 + 12 >> 2];
      HEAP32[$47 >> 2] = 0;
      HEAP32[$116 >> 2] = 0;
      HEAP32[$117 >> 2] = 0;
      $1032 = $1028 - $1030 | 0;
      $1033 = $1032 >> 2;
      do if ($1033) {
       if ($1033 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(181, $47 | 0);
        $1036 = __THREW__;
        __THREW__ = 0;
        if ($1036 & 1) {
         label = 300;
         break L56;
        }
       }
       __THREW__ = 0;
       $1038 = invoke_ii(67, $1032 | 0) | 0;
       $1039 = __THREW__;
       __THREW__ = 0;
       if ($1039 & 1) {
        label = 300;
        break L56;
       }
       HEAP32[$116 >> 2] = $1038;
       HEAP32[$47 >> 2] = $1038;
       HEAP32[$117 >> 2] = $1038 + ($1033 << 2);
       if (($1030 | 0) == ($1028 | 0)) break; else {
        $$01$i$i = $1030;
        $1043 = $1038;
       }
       do {
        if (!$1043) $1047 = 0; else {
         HEAP32[$1043 >> 2] = HEAP32[$$01$i$i >> 2];
         $1047 = HEAP32[$116 >> 2] | 0;
        }
        $1043 = $1047 + 4 | 0;
        HEAP32[$116 >> 2] = $1043;
        $$01$i$i = $$01$i$i + 4 | 0;
       } while (($$01$i$i | 0) != ($1028 | 0));
      } while (0);
      __THREW__ = 0;
      $1060 = invoke_iiiii(6, $1023 | 0, $46 | 0, $47 | 0, $1020 | 0) | 0;
      $1061 = __THREW__;
      __THREW__ = 0;
      if ($1061 & 1) {
       label = 314;
       break L56;
      }
      $1063 = HEAP32[$47 >> 2] | 0;
      if ($1063) {
       $1065 = HEAP32[$116 >> 2] | 0;
       if (($1065 | 0) != ($1063 | 0)) HEAP32[$116 >> 2] = $1065 + (~(($1065 + -4 - $1063 | 0) >>> 2) << 2);
       __ZdlPv($1063);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($46);
      $1149 = $1060;
     } else $1149 = $1020;
     if ($plus_sugar$0$off0) {
      $1085 = HEAP32[$69 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $48 | 0, $plus_loc | 0);
      $1086 = __THREW__;
      __THREW__ = 0;
      if ($1086 & 1) {
       label = 251;
       break L56;
      };
      HEAP32[$118 + 0 >> 2] = HEAP32[$92 + 0 >> 2];
      HEAP32[$118 + 4 >> 2] = HEAP32[$92 + 4 >> 2];
      HEAP32[$118 + 8 >> 2] = HEAP32[$92 + 8 >> 2];
      HEAP32[$118 + 12 >> 2] = HEAP32[$92 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $49 | 0, $70 | 0);
      $1088 = __THREW__;
      __THREW__ = 0;
      if ($1088 & 1) {
       label = 350;
       break L56;
      }
      __THREW__ = 0;
      $1090 = invoke_iiii(27, $1085 | 0, $48 | 0, $49 | 0) | 0;
      $1091 = __THREW__;
      __THREW__ = 0;
      if ($1091 & 1) {
       label = 351;
       break L56;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($49);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($48);
      $1093 = HEAP32[$69 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $50 | 0, $plus_loc | 0);
      $1094 = __THREW__;
      __THREW__ = 0;
      if ($1094 & 1) {
       label = 251;
       break L56;
      };
      HEAP32[$119 + 0 >> 2] = HEAP32[$92 + 0 >> 2];
      HEAP32[$119 + 4 >> 2] = HEAP32[$92 + 4 >> 2];
      HEAP32[$119 + 8 >> 2] = HEAP32[$92 + 8 >> 2];
      HEAP32[$119 + 12 >> 2] = HEAP32[$92 + 12 >> 2];
      $1096 = HEAP32[$69 >> 2] | 0;
      HEAP32[$51 + 0 >> 2] = 0;
      HEAP32[$51 + 4 >> 2] = 0;
      HEAP32[$51 + 8 >> 2] = 0;
      HEAP32[$51 + 12 >> 2] = 0;
      HEAP32[$51 + 16 >> 2] = 0;
      HEAP32[$51 + 20 >> 2] = 0;
      HEAP32[$51 + 24 >> 2] = 0;
      __THREW__ = 0;
      $1097 = invoke_ii(67, 48) | 0;
      $1098 = __THREW__;
      __THREW__ = 0;
      if ($1098 & 1) {
       label = 353;
       break L56;
      }
      HEAP32[$1097 >> 2] = 34168;
      __THREW__ = 0;
      invoke_vii(40, $1097 + 4 | 0, $51 | 0);
      $1101 = __THREW__;
      __THREW__ = 0;
      if ($1101 & 1) {
       label = 331;
       break L56;
      }
      $1103 = $1097 + 16 | 0;
      HEAP32[$1103 + 0 >> 2] = HEAP32[$120 + 0 >> 2];
      HEAP32[$1103 + 4 >> 2] = HEAP32[$120 + 4 >> 2];
      HEAP32[$1103 + 8 >> 2] = HEAP32[$120 + 8 >> 2];
      HEAP32[$1103 + 12 >> 2] = HEAP32[$120 + 12 >> 2];
      HEAP32[$1097 + 32 >> 2] = 18;
      HEAP32[$1097 + 36 >> 2] = 0;
      HEAP32[$1097 + 40 >> 2] = 0;
      HEAP32[$1097 + 44 >> 2] = 0;
      HEAP32[$1097 >> 2] = 36344;
      HEAP32[$$byval_copy >> 2] = $1097;
      $1108 = $1096 + 16 | 0;
      $1109 = HEAP32[$1108 >> 2] | 0;
      if ($1109 >>> 0 < (HEAP32[$1096 + 20 >> 2] | 0) >>> 0) {
       if (!$1109) $1115 = 0; else {
        HEAP32[$1109 >> 2] = $1097;
        $1115 = HEAP32[$1108 >> 2] | 0;
       }
       HEAP32[$1108 >> 2] = $1115 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1096 + 12 | 0, $$byval_copy | 0);
       $1117 = __THREW__;
       __THREW__ = 0;
       if ($1117 & 1) {
        label = 353;
        break L56;
       }
      }
      __THREW__ = 0;
      $1121 = invoke_ii(67, 56) | 0;
      $1122 = __THREW__;
      __THREW__ = 0;
      if ($1122 & 1) {
       label = 353;
       break L56;
      }
      HEAP32[$1121 >> 2] = 34168;
      __THREW__ = 0;
      invoke_vii(40, $1121 + 4 | 0, $50 | 0);
      $1125 = __THREW__;
      __THREW__ = 0;
      if ($1125 & 1) {
       label = 339;
       break L56;
      }
      $1127 = $1121 + 16 | 0;
      HEAP32[$1127 + 0 >> 2] = HEAP32[$119 + 0 >> 2];
      HEAP32[$1127 + 4 >> 2] = HEAP32[$119 + 4 >> 2];
      HEAP32[$1127 + 8 >> 2] = HEAP32[$119 + 8 >> 2];
      HEAP32[$1127 + 12 >> 2] = HEAP32[$119 + 12 >> 2];
      HEAP32[$1121 + 32 >> 2] = 9;
      HEAP32[$1121 + 36 >> 2] = 0;
      HEAP32[$1121 + 40 >> 2] = 0;
      HEAP32[$1121 + 44 >> 2] = 0;
      HEAP32[$1121 >> 2] = 36360;
      HEAP32[$1121 + 48 >> 2] = $1097;
      HEAP32[$1121 + 52 >> 2] = $1090;
      HEAP32[$$byval_copy102 >> 2] = $1121;
      $1134 = $1093 + 16 | 0;
      $1135 = HEAP32[$1134 >> 2] | 0;
      if ($1135 >>> 0 < (HEAP32[$1093 + 20 >> 2] | 0) >>> 0) {
       if (!$1135) $1141 = 0; else {
        HEAP32[$1135 >> 2] = $1121;
        $1141 = HEAP32[$1134 >> 2] | 0;
       }
       HEAP32[$1134 >> 2] = $1141 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1093 + 12 | 0, $$byval_copy102 | 0);
       $1143 = __THREW__;
       __THREW__ = 0;
       if ($1143 & 1) {
        label = 353;
        break L56;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($51);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($50);
      $1147 = HEAP32[$69 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $52 | 0, $1149 + 4 | 0);
      $1150 = __THREW__;
      __THREW__ = 0;
      if ($1150 & 1) {
       label = 251;
       break L56;
      }
      $1152 = $1149 + 16 | 0;
      HEAP32[$121 + 0 >> 2] = HEAP32[$1152 + 0 >> 2];
      HEAP32[$121 + 4 >> 2] = HEAP32[$1152 + 4 >> 2];
      HEAP32[$121 + 8 >> 2] = HEAP32[$1152 + 8 >> 2];
      HEAP32[$121 + 12 >> 2] = HEAP32[$1152 + 12 >> 2];
      __THREW__ = 0;
      $1153 = invoke_ii(67, 60) | 0;
      $1154 = __THREW__;
      __THREW__ = 0;
      if ($1154 & 1) {
       label = 355;
       break L56;
      }
      HEAP32[$1153 >> 2] = 34168;
      __THREW__ = 0;
      invoke_vii(40, $1153 + 4 | 0, $52 | 0);
      $1157 = __THREW__;
      __THREW__ = 0;
      if ($1157 & 1) {
       label = 348;
       break L56;
      }
      $1159 = $1153 + 16 | 0;
      HEAP32[$1159 + 0 >> 2] = HEAP32[$121 + 0 >> 2];
      HEAP32[$1159 + 4 >> 2] = HEAP32[$121 + 4 >> 2];
      HEAP32[$1159 + 8 >> 2] = HEAP32[$121 + 8 >> 2];
      HEAP32[$1159 + 12 >> 2] = HEAP32[$121 + 12 >> 2];
      HEAP32[$1153 + 32 >> 2] = 2;
      HEAP32[$1153 + 36 >> 2] = 0;
      HEAP32[$1153 + 40 >> 2] = 0;
      HEAP32[$1153 + 44 >> 2] = 0;
      HEAP32[$1153 >> 2] = 35976;
      HEAP32[$1153 + 48 >> 2] = $1121;
      HEAP32[$1153 + 52 >> 2] = 2;
      HEAP32[$1153 + 56 >> 2] = $1149;
      HEAP32[$$byval_copy105 >> 2] = $1153;
      $1167 = $1147 + 16 | 0;
      $1168 = HEAP32[$1167 >> 2] | 0;
      if ($1168 >>> 0 < (HEAP32[$1147 + 20 >> 2] | 0) >>> 0) {
       if (!$1168) $1174 = 0; else {
        HEAP32[$1168 >> 2] = $1153;
        $1174 = HEAP32[$1167 >> 2] | 0;
       }
       HEAP32[$1167 >> 2] = $1174 + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(51, $1147 + 12 | 0, $$byval_copy105 | 0);
       $1176 = __THREW__;
       __THREW__ = 0;
       if ($1176 & 1) {
        label = 355;
        break L56;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($52);
      $1195 = $1153;
     } else $1195 = $1149;
     __THREW__ = 0;
     $1188 = invoke_ii(67, 20) | 0;
     $1189 = __THREW__;
     __THREW__ = 0;
     if ($1189 & 1) {
      label = 251;
      break L56;
     }
     HEAP32[$1188 + 8 >> 2] = $1017;
     HEAP32[$1188 + 12 >> 2] = $1193;
     HEAP32[$1188 + 16 >> 2] = $1195;
     HEAP32[$1188 + 4 >> 2] = $fields;
     $1197 = HEAP32[$fields >> 2] | 0;
     HEAP32[$1188 >> 2] = $1197;
     HEAP32[$1197 + 4 >> 2] = $1188;
     HEAP32[$fields >> 2] = $1188;
     HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($plus_loc);
     if (!$1030) {
      $$039 = 1;
      $got_comma$2$off0 = 0;
      $last_was_local$2$off0 = 0;
      break;
     }
     __ZdlPv($1030);
     $$039 = 1;
     $got_comma$2$off0 = 0;
     $last_was_local$2$off0 = 0;
     break;
    } else if (($1348 | 0) == 24) {
     __THREW__ = 0;
     invoke_viii(6, $this | 0, $let_binds | 0, $obj_level | 0);
     $1203 = __THREW__;
     __THREW__ = 0;
     if ($1203 & 1) {
      label = 60;
      break L56;
     } else {
      $$039 = 1;
      $got_comma$2$off0 = 0;
      $last_was_local$2$off0 = 1;
      break;
     }
    } else if (($1348 | 0) == 2) {
     __THREW__ = 0;
     $1205 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $1206 = __THREW__;
     __THREW__ = 0;
     if ($1206 & 1) {
      label = 60;
      break L56;
     }
     __THREW__ = 0;
     invoke_viiii(13, $53 | 0, $this | 0, 3, 0);
     $1208 = __THREW__;
     __THREW__ = 0;
     if ($1208 & 1) {
      label = 60;
      break L56;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($122);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($123);
     __THREW__ = 0;
     invoke_viiii(13, $54 | 0, $this | 0, 4, 0);
     $1210 = __THREW__;
     __THREW__ = 0;
     if ($1210 & 1) {
      label = 60;
      break L56;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($124);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($125);
     $this$idx51$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $1212 = $this$idx51$val$idx$val + 8 | 0;
     HEAP32[$55 >> 2] = HEAP32[$1212 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $126 | 0, $this$idx51$val$idx$val + 12 | 0);
     $1215 = __THREW__;
     __THREW__ = 0;
     if ($1215 & 1) {
      label = 60;
      break L56;
     }
     HEAP32[$55 >> 2] = HEAP32[$1212 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $127 | 0, $this$idx51$val$idx$val + 24 | 0);
     $1219 = __THREW__;
     __THREW__ = 0;
     if ($1219 & 1) {
      label = 368;
      break L56;
     }
     $1223 = $this$idx51$val$idx$val + 36 | 0;
     HEAP32[$128 + 0 >> 2] = HEAP32[$1223 + 0 >> 2];
     HEAP32[$128 + 4 >> 2] = HEAP32[$1223 + 4 >> 2];
     HEAP32[$128 + 8 >> 2] = HEAP32[$1223 + 8 >> 2];
     HEAP32[$128 + 12 >> 2] = HEAP32[$1223 + 12 >> 2];
     $1224 = HEAP32[$1212 >> 2] | 0;
     HEAP32[$55 >> 2] = $1224;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($127);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($126);
     do if (($1224 | 0) == 4) {
      $this$idx$val$idx$val$i308 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1226 = $this$idx$val$idx$val$i308 + 8 | 0;
      HEAP32[$56 >> 2] = HEAP32[$1226 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $129 | 0, $this$idx$val$idx$val$i308 + 12 | 0);
      $1229 = __THREW__;
      __THREW__ = 0;
      if ($1229 & 1) {
       label = 60;
       break L56;
      }
      HEAP32[$56 >> 2] = HEAP32[$1226 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $130 | 0, $this$idx$val$idx$val$i308 + 24 | 0);
      $1233 = __THREW__;
      __THREW__ = 0;
      if ($1233 & 1) {
       label = 372;
       break L56;
      }
      $1237 = $this$idx$val$idx$val$i308 + 36 | 0;
      HEAP32[$131 + 0 >> 2] = HEAP32[$1237 + 0 >> 2];
      HEAP32[$131 + 4 >> 2] = HEAP32[$1237 + 4 >> 2];
      HEAP32[$131 + 8 >> 2] = HEAP32[$1237 + 8 >> 2];
      HEAP32[$131 + 12 >> 2] = HEAP32[$1237 + 12 >> 2];
      HEAP32[$56 >> 2] = HEAP32[$1226 >> 2];
      $1239 = HEAP32[$this >> 2] | 0;
      $1241 = HEAP32[$1239 + 4 >> 2] | 0;
      $1242 = $1241 + 4 | 0;
      $1244 = HEAP32[$1241 >> 2] | 0;
      HEAP32[$1244 + 4 >> 2] = HEAP32[$1242 >> 2];
      HEAP32[HEAP32[$1242 >> 2] >> 2] = $1244;
      $1247 = $1239 + 8 | 0;
      HEAP32[$1247 >> 2] = (HEAP32[$1247 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1241 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1241 + 12 | 0);
      __ZdlPv($1241);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($130);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($129);
      $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1252 = $this$idx$val$idx$val + 8 | 0;
      HEAP32[$57 >> 2] = HEAP32[$1252 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $132 | 0, $this$idx$val$idx$val + 12 | 0);
      $1255 = __THREW__;
      __THREW__ = 0;
      if ($1255 & 1) {
       label = 60;
       break L56;
      }
      HEAP32[$57 >> 2] = HEAP32[$1252 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $133 | 0, $this$idx$val$idx$val + 24 | 0);
      $1259 = __THREW__;
      __THREW__ = 0;
      if ($1259 & 1) {
       label = 375;
       break L56;
      }
      $1263 = $this$idx$val$idx$val + 36 | 0;
      HEAP32[$134 + 0 >> 2] = HEAP32[$1263 + 0 >> 2];
      HEAP32[$134 + 4 >> 2] = HEAP32[$1263 + 4 >> 2];
      HEAP32[$134 + 8 >> 2] = HEAP32[$1263 + 8 >> 2];
      HEAP32[$134 + 12 >> 2] = HEAP32[$1263 + 12 >> 2];
      $1264 = HEAP32[$1252 >> 2] | 0;
      HEAP32[$57 >> 2] = $1264;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($133);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($132);
      if (($1264 | 0) != 4) {
       $1300 = 1;
       break;
      }
      $this$idx$val$idx$val$i320 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1266 = $this$idx$val$idx$val$i320 + 8 | 0;
      HEAP32[$58 >> 2] = HEAP32[$1266 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $135 | 0, $this$idx$val$idx$val$i320 + 12 | 0);
      $1269 = __THREW__;
      __THREW__ = 0;
      if ($1269 & 1) {
       label = 60;
       break L56;
      }
      HEAP32[$58 >> 2] = HEAP32[$1266 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $136 | 0, $this$idx$val$idx$val$i320 + 24 | 0);
      $1273 = __THREW__;
      __THREW__ = 0;
      if ($1273 & 1) {
       label = 379;
       break L56;
      }
      $1277 = $this$idx$val$idx$val$i320 + 36 | 0;
      HEAP32[$137 + 0 >> 2] = HEAP32[$1277 + 0 >> 2];
      HEAP32[$137 + 4 >> 2] = HEAP32[$1277 + 4 >> 2];
      HEAP32[$137 + 8 >> 2] = HEAP32[$1277 + 8 >> 2];
      HEAP32[$137 + 12 >> 2] = HEAP32[$1277 + 12 >> 2];
      HEAP32[$58 >> 2] = HEAP32[$1266 >> 2];
      $1279 = HEAP32[$this >> 2] | 0;
      $1281 = HEAP32[$1279 + 4 >> 2] | 0;
      $1282 = $1281 + 4 | 0;
      $1284 = HEAP32[$1281 >> 2] | 0;
      HEAP32[$1284 + 4 >> 2] = HEAP32[$1282 >> 2];
      HEAP32[HEAP32[$1282 >> 2] >> 2] = $1284;
      $1287 = $1279 + 8 | 0;
      HEAP32[$1287 >> 2] = (HEAP32[$1287 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1281 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1281 + 12 | 0);
      __ZdlPv($1281);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($136);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($135);
      $1300 = 2;
     } else $1300 = 0; while (0);
     __THREW__ = 0;
     $1292 = invoke_iiii(28, $this | 0, 15, $114 | 0) | 0;
     $1293 = __THREW__;
     __THREW__ = 0;
     if ($1293 & 1) {
      label = 60;
      break L56;
     }
     __THREW__ = 0;
     $1295 = invoke_ii(67, 20) | 0;
     $1296 = __THREW__;
     __THREW__ = 0;
     if ($1296 & 1) {
      label = 60;
      break L56;
     }
     HEAP32[$1295 + 8 >> 2] = $1205;
     HEAP32[$1295 + 12 >> 2] = $1300;
     HEAP32[$1295 + 16 >> 2] = $1292;
     HEAP32[$1295 + 4 >> 2] = $fields;
     $1303 = HEAP32[$fields >> 2] | 0;
     HEAP32[$1295 >> 2] = $1303;
     HEAP32[$1303 + 4 >> 2] = $1295;
     HEAP32[$fields >> 2] = $1295;
     HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 1;
     $$039 = 1;
     $got_comma$2$off0 = 0;
     $last_was_local$2$off0 = 0;
     break;
    } else {
     label = 384;
     break L56;
    }
   } while (0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($71);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
   if ($$039) {
    $got_comma$0$off0 = $got_comma$2$off0;
    $last_was_local$0$off0 = $last_was_local$2$off0;
   } else {
    label = 392;
    break;
   }
  }
  L313 : switch (label | 0) {
  case 34:
   {
    $253 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body67$index3Z2D = tempRet0;
    $eh$lpad$body67$indexZ2D = $253;
    label = 36;
    break L54;
    break;
   }
  case 43:
   {
    $270 = ___cxa_find_matching_catch() | 0;
    $271 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
    $eh$lpad$body67$index3Z2D = $271;
    $eh$lpad$body67$indexZ2D = $270;
    label = 36;
    break L54;
    break;
   }
  case 48:
   {
    $298 = ___cxa_find_matching_catch() | 0;
    $299 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($170);
    $eh$lpad$body74$index23Z2D = $299;
    $eh$lpad$body74$indexZ2D = $298;
    label = 61;
    break;
   }
  case 53:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 58:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 60:
   {
    $332 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body74$index23Z2D = tempRet0;
    $eh$lpad$body74$indexZ2D = $332;
    label = 61;
    break;
   }
  case 67:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index32 = tempRet0;
    label = 69;
    break;
   }
  case 68:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index32 = tempRet0;
    label = 69;
    break;
   }
  case 85:
   {
    $385 = ___cxa_find_matching_catch() | 0;
    $386 = tempRet0;
    __ZdlPv($369);
    $eh$lpad$body86$index37Z2D = $386;
    $eh$lpad$body86$indexZ2D = $385;
    label = 90;
    break;
   }
  case 88:
   {
    $406 = ___cxa_find_matching_catch() | 0;
    $407 = tempRet0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($18, HEAP32[$152 >> 2] | 0);
    $$01 = $406;
    $$04 = $407;
    label = 91;
    break;
   }
  case 89:
   {
    $409 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body86$index37Z2D = tempRet0;
    $eh$lpad$body86$indexZ2D = $409;
    label = 90;
    break;
   }
  case 96:
   {
    $451 = ___cxa_find_matching_catch() | 0;
    $452 = tempRet0;
    if (HEAP32[$146 >> 2] | 0) {
     $455 = HEAP32[$145 >> 2] | 0;
     $457 = (HEAP32[$20 >> 2] | 0) + 4 | 0;
     $459 = HEAP32[$455 >> 2] | 0;
     HEAP32[$459 + 4 >> 2] = HEAP32[$457 >> 2];
     HEAP32[HEAP32[$457 >> 2] >> 2] = $459;
     HEAP32[$146 >> 2] = 0;
     if (($455 | 0) != ($20 | 0)) {
      $__f$01$i$i$i = $455;
      do {
       $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
       $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i$i$looptemp);
      } while (($__f$01$i$i$i | 0) != ($20 | 0));
     }
    }
    $$110 = $452;
    $$12 = $451;
    label = 118;
    break;
   }
  case 106:
   {
    $482 = ___cxa_find_matching_catch() | 0;
    $483 = tempRet0;
    __ZdlPv($466);
    $eh$lpad$body97$index42Z2D = $483;
    $eh$lpad$body97$indexZ2D = $482;
    label = 115;
    break;
   }
  case 114:
   {
    $511 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body97$index42Z2D = tempRet0;
    $eh$lpad$body97$indexZ2D = $511;
    label = 115;
    break;
   }
  case 123:
   {
    $541 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $21 | 0, 35992, 54);
    $542 = __THREW__;
    __THREW__ = 0;
    do if ($542 & 1) {
     $554 = ___cxa_find_matching_catch() | 0;
     $$312334 = tempRet0;
     $$3335 = $554;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $541 | 0, $71 | 0);
     $544 = __THREW__;
     __THREW__ = 0;
     if ($544 & 1) $$040 = 1; else {
      $546 = $541 + 12 | 0;
      HEAP32[$546 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
      HEAP32[$546 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
      HEAP32[$546 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
      HEAP32[$546 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $541 + 28 | 0, $21 | 0);
      $548 = __THREW__;
      __THREW__ = 0;
      if ($548 & 1) {
       $550 = ___cxa_find_matching_catch() | 0;
       $551 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($541);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($21);
       $$312334 = $551;
       $$3335 = $550;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $541 | 0, 48, 178);
      $552 = __THREW__;
      __THREW__ = 0;
      if ($552 & 1) $$040 = 0; else {}
     }
     $556 = ___cxa_find_matching_catch() | 0;
     $557 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($21);
     if ($$040) {
      $$312334 = $557;
      $$3335 = $556;
     } else {
      $$19 = $556;
      $$1928 = $557;
      break L313;
     }
    } while (0);
    ___cxa_free_exception($541 | 0);
    $$19 = $$3335;
    $$1928 = $$312334;
    break;
   }
  case 132:
   {
    $558 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $22 | 0, 36048, 52);
    $559 = __THREW__;
    __THREW__ = 0;
    do if ($559 & 1) {
     $571 = ___cxa_find_matching_catch() | 0;
     $$413338 = tempRet0;
     $$4339 = $571;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $558 | 0, $71 | 0);
     $561 = __THREW__;
     __THREW__ = 0;
     if ($561 & 1) $$042 = 1; else {
      $563 = $558 + 12 | 0;
      HEAP32[$563 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
      HEAP32[$563 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
      HEAP32[$563 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
      HEAP32[$563 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $558 + 28 | 0, $22 | 0);
      $565 = __THREW__;
      __THREW__ = 0;
      if ($565 & 1) {
       $567 = ___cxa_find_matching_catch() | 0;
       $568 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($558);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
       $$413338 = $568;
       $$4339 = $567;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $558 | 0, 48, 178);
      $569 = __THREW__;
      __THREW__ = 0;
      if ($569 & 1) $$042 = 0; else {}
     }
     $573 = ___cxa_find_matching_catch() | 0;
     $574 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
     if ($$042) {
      $$413338 = $574;
      $$4339 = $573;
     } else {
      $$19 = $573;
      $$1928 = $574;
      break L313;
     }
    } while (0);
    ___cxa_free_exception($558 | 0);
    $$19 = $$4339;
    $$1928 = $$413338;
    break;
   }
  case 156:
   {
    $621 = ___cxa_find_matching_catch() | 0;
    $622 = tempRet0;
    __ZdlPv($605);
    $eh$lpad$body139$index47Z2D = $622;
    $eh$lpad$body139$indexZ2D = $621;
    label = 160;
    break;
   }
  case 158:
   {
    $624 = ___cxa_find_matching_catch() | 0;
    $625 = tempRet0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($24, HEAP32[$167 >> 2] | 0);
    $$5 = $624;
    $$514 = $625;
    label = 161;
    break;
   }
  case 159:
   {
    $627 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body139$index47Z2D = tempRet0;
    $eh$lpad$body139$indexZ2D = $627;
    label = 160;
    break;
   }
  case 163:
   {
    $631 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $25 | 0, 36104, 48);
    $632 = __THREW__;
    __THREW__ = 0;
    do if ($632 & 1) {
     $644 = ___cxa_find_matching_catch() | 0;
     $$615342 = tempRet0;
     $$6343 = $644;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $631 | 0, $71 | 0);
     $634 = __THREW__;
     __THREW__ = 0;
     if ($634 & 1) $$037 = 1; else {
      $636 = $631 + 12 | 0;
      HEAP32[$636 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
      HEAP32[$636 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
      HEAP32[$636 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
      HEAP32[$636 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $631 + 28 | 0, $25 | 0);
      $638 = __THREW__;
      __THREW__ = 0;
      if ($638 & 1) {
       $640 = ___cxa_find_matching_catch() | 0;
       $641 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($631);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
       $$615342 = $641;
       $$6343 = $640;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $631 | 0, 48, 178);
      $642 = __THREW__;
      __THREW__ = 0;
      if ($642 & 1) $$037 = 0; else {}
     }
     $646 = ___cxa_find_matching_catch() | 0;
     $647 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
     if ($$037) {
      $$615342 = $647;
      $$6343 = $646;
     } else {
      $$19 = $646;
      $$1928 = $647;
      break L313;
     }
    } while (0);
    ___cxa_free_exception($631 | 0);
    $$19 = $$6343;
    $$1928 = $$615342;
    break;
   }
  case 172:
   {
    $648 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $26 | 0, 36160, 28);
    $649 = __THREW__;
    __THREW__ = 0;
    do if ($649 & 1) {
     $661 = ___cxa_find_matching_catch() | 0;
     $$716346 = tempRet0;
     $$7347 = $661;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $648 | 0, $71 | 0);
     $651 = __THREW__;
     __THREW__ = 0;
     if ($651 & 1) $$035 = 1; else {
      $653 = $648 + 12 | 0;
      HEAP32[$653 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
      HEAP32[$653 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
      HEAP32[$653 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
      HEAP32[$653 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $648 + 28 | 0, $26 | 0);
      $655 = __THREW__;
      __THREW__ = 0;
      if ($655 & 1) {
       $657 = ___cxa_find_matching_catch() | 0;
       $658 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($648);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
       $$716346 = $658;
       $$7347 = $657;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $648 | 0, 48, 178);
      $659 = __THREW__;
      __THREW__ = 0;
      if ($659 & 1) $$035 = 0; else {}
     }
     $663 = ___cxa_find_matching_catch() | 0;
     $664 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
     if ($$035) {
      $$716346 = $664;
      $$7347 = $663;
     } else {
      $$19 = $663;
      $$1928 = $664;
      break L313;
     }
    } while (0);
    ___cxa_free_exception($648 | 0);
    $$19 = $$7347;
    $$1928 = $$716346;
    break;
   }
  case 187:
   {
    $681 = ___cxa_find_matching_catch() | 0;
    $682 = tempRet0;
    __ZdlPv($673);
    $eh$lpad$body160$index52Z2D = $682;
    $eh$lpad$body160$indexZ2D = $681;
    label = 202;
    break;
   }
  case 199:
   {
    $739 = ___cxa_find_matching_catch() | 0;
    $740 = tempRet0;
    __ZdlPv($713);
    $eh$lpad$body169$index57Z2D = $740;
    $eh$lpad$body169$indexZ2D = $739;
    label = 205;
    break;
   }
  case 201:
   {
    $742 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body160$index52Z2D = tempRet0;
    $eh$lpad$body160$indexZ2D = $742;
    label = 202;
    break;
   }
  case 203:
   {
    $$8 = ___cxa_find_matching_catch() | 0;
    $$817 = tempRet0;
    label = 206;
    break;
   }
  case 204:
   {
    $746 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body169$index57Z2D = tempRet0;
    $eh$lpad$body169$indexZ2D = $746;
    label = 205;
    break;
   }
  case 209:
   {
    $748 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $29 | 0, 36192, 35);
    $749 = __THREW__;
    __THREW__ = 0;
    do if ($749 & 1) {
     $761 = ___cxa_find_matching_catch() | 0;
     $$1019350 = tempRet0;
     $$10351 = $761;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $748 | 0, $71 | 0);
     $751 = __THREW__;
     __THREW__ = 0;
     if ($751 & 1) $$033 = 1; else {
      $753 = $748 + 12 | 0;
      HEAP32[$753 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
      HEAP32[$753 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
      HEAP32[$753 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
      HEAP32[$753 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $748 + 28 | 0, $29 | 0);
      $755 = __THREW__;
      __THREW__ = 0;
      if ($755 & 1) {
       $757 = ___cxa_find_matching_catch() | 0;
       $758 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($748);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
       $$1019350 = $758;
       $$10351 = $757;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $748 | 0, 48, 178);
      $759 = __THREW__;
      __THREW__ = 0;
      if ($759 & 1) $$033 = 0; else {}
     }
     $763 = ___cxa_find_matching_catch() | 0;
     $764 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
     if ($$033) {
      $$1019350 = $764;
      $$10351 = $763;
     } else {
      $$19 = $763;
      $$1928 = $764;
      break L313;
     }
    } while (0);
    ___cxa_free_exception($748 | 0);
    $$19 = $$10351;
    $$1928 = $$1019350;
    break;
   }
  case 220:
   {
    $774 = ___cxa_find_matching_catch() | 0;
    $775 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($73);
    $eh$lpad$body178$index63Z2D = $775;
    $eh$lpad$body178$indexZ2D = $774;
    label = 229;
    break;
   }
  case 224:
   {
    $788 = ___cxa_find_matching_catch() | 0;
    $789 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($76);
    $eh$lpad$body178$index63Z2D = $789;
    $eh$lpad$body178$indexZ2D = $788;
    label = 229;
    break;
   }
  case 228:
   {
    $811 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body178$index63Z2D = tempRet0;
    $eh$lpad$body178$indexZ2D = $811;
    label = 229;
    break;
   }
  case 230:
   {
    $813 = ___cxa_find_matching_catch() | 0;
    $814 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($33);
    $$19 = $813;
    $$1928 = $814;
    break;
   }
  case 233:
   {
    $824 = ___cxa_find_matching_catch() | 0;
    $825 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($81);
    $eh$lpad$body193$index75Z2D = $825;
    $eh$lpad$body193$indexZ2D = $824;
    label = 252;
    break;
   }
  case 237:
   {
    $838 = ___cxa_find_matching_catch() | 0;
    $839 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($84);
    $eh$lpad$body197$index86Z2D = $839;
    $eh$lpad$body197$indexZ2D = $838;
    label = 254;
    break;
   }
  case 241:
   {
    $853 = ___cxa_find_matching_catch() | 0;
    $854 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($87);
    $eh$lpad$body193$index75Z2D = $854;
    $eh$lpad$body193$indexZ2D = $853;
    label = 252;
    break;
   }
  case 246:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 249:
   {
    $874 = ___cxa_find_matching_catch() | 0;
    $875 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($93);
    $eh$lpad$body193$index75Z2D = $875;
    $eh$lpad$body193$indexZ2D = $874;
    label = 252;
    break;
   }
  case 251:
   {
    $891 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body193$index75Z2D = tempRet0;
    $eh$lpad$body193$indexZ2D = $891;
    label = 252;
    break;
   }
  case 253:
   {
    $893 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body197$index86Z2D = tempRet0;
    $eh$lpad$body197$indexZ2D = $893;
    label = 254;
    break;
   }
  case 259:
   {
    $906 = ___cxa_find_matching_catch() | 0;
    $907 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($100);
    $eh$lpad$body193$index75Z2D = $907;
    $eh$lpad$body193$indexZ2D = $906;
    label = 252;
    break;
   }
  case 263:
   {
    $920 = ___cxa_find_matching_catch() | 0;
    $921 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($103);
    $eh$lpad$body193$index75Z2D = $921;
    $eh$lpad$body193$indexZ2D = $920;
    label = 252;
    break;
   }
  case 266:
   {
    $946 = ___cxa_find_matching_catch() | 0;
    $947 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($106);
    $eh$lpad$body193$index75Z2D = $947;
    $eh$lpad$body193$indexZ2D = $946;
    label = 252;
    break;
   }
  case 270:
   {
    $960 = ___cxa_find_matching_catch() | 0;
    $961 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($109);
    $eh$lpad$body193$index75Z2D = $961;
    $eh$lpad$body193$indexZ2D = $960;
    label = 252;
    break;
   }
  case 274:
   {
    $981 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$43 + 0 >> 2] = 0;
    HEAP32[$43 + 4 >> 2] = 0;
    HEAP32[$43 + 8 >> 2] = 0;
    $982 = HEAP8[$70 >> 0] | 0;
    if (!($982 & 1)) $989 = ($982 & 255) >>> 1; else $989 = HEAP32[$179 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(14, $43 | 0, 36256, 17, $989 + 17 | 0);
    $990 = __THREW__;
    __THREW__ = 0;
    do if ($990 & 1) label = 283; else {
     __THREW__ = 0;
     invoke_iiii(31, $43 | 0, ((HEAP8[$70 >> 0] & 1) == 0 ? $173 : HEAP32[$178 >> 2] | 0) | 0, $989 | 0) | 0;
     $996 = __THREW__;
     __THREW__ = 0;
     if ($996 & 1) label = 283; else {
      __THREW__ = 0;
      invoke_vii(40, $981 | 0, $71 | 0);
      $998 = __THREW__;
      __THREW__ = 0;
      if ($998 & 1) $$030 = 1; else {
       $1000 = $981 + 12 | 0;
       HEAP32[$1000 + 0 >> 2] = HEAP32[$72 + 0 >> 2];
       HEAP32[$1000 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
       HEAP32[$1000 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
       HEAP32[$1000 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $981 + 28 | 0, $43 | 0);
       $1002 = __THREW__;
       __THREW__ = 0;
       if ($1002 & 1) {
        $1004 = ___cxa_find_matching_catch() | 0;
        $1005 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($981);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
        $$1120355 = $1005;
        $$11356 = $1004;
        break;
       }
       __THREW__ = 0;
       invoke_viii(4, $981 | 0, 48, 178);
       $1006 = __THREW__;
       __THREW__ = 0;
       if ($1006 & 1) $$030 = 0; else {}
      }
      $1010 = ___cxa_find_matching_catch() | 0;
      $1011 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
      if ($$030) {
       $$1120355 = $1011;
       $$11356 = $1010;
      } else {
       $$16 = $1010;
       $$1625 = $1011;
       label = 360;
       break L313;
      }
     }
    } while (0);
    if ((label | 0) == 283) {
     $1008 = ___cxa_find_matching_catch() | 0;
     $1009 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     $$1120355 = $1009;
     $$11356 = $1008;
    }
    ___cxa_free_exception($981 | 0);
    $$16 = $$11356;
    $$1625 = $$1120355;
    label = 360;
    break;
   }
  case 300:
   {
    $1050 = ___cxa_find_matching_catch() | 0;
    $1051 = tempRet0;
    $1052 = HEAP32[$47 >> 2] | 0;
    if ($1052) {
     $1054 = HEAP32[$116 >> 2] | 0;
     if (($1054 | 0) != ($1052 | 0)) HEAP32[$116 >> 2] = $1054 + (~(($1054 + -4 - $1052 | 0) >>> 2) << 2);
     __ZdlPv($1052);
    }
    $$13 = $1050;
    $$1322 = $1051;
    label = 318;
    break;
   }
  case 310:
   {
    $1071 = ___cxa_find_matching_catch() | 0;
    $$1221 = tempRet0;
    $$123 = $1071;
    label = 312;
    break;
   }
  case 311:
   {
    $1073 = ___cxa_find_matching_catch() | 0;
    $1074 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($45);
    $$1221 = $1074;
    $$123 = $1073;
    label = 312;
    break;
   }
  case 314:
   {
    $1075 = ___cxa_find_matching_catch() | 0;
    $1076 = tempRet0;
    $1077 = HEAP32[$47 >> 2] | 0;
    if (!$1077) {
     $$13 = $1075;
     $$1322 = $1076;
     label = 318;
    } else {
     $1079 = HEAP32[$116 >> 2] | 0;
     if (($1079 | 0) != ($1077 | 0)) HEAP32[$116 >> 2] = $1079 + (~(($1079 + -4 - $1077 | 0) >>> 2) << 2);
     __ZdlPv($1077);
     $$13 = $1075;
     $$1322 = $1076;
     label = 318;
    }
    break;
   }
  case 331:
   {
    $1119 = ___cxa_find_matching_catch() | 0;
    $1120 = tempRet0;
    __ZdlPv($1097);
    $eh$lpad$body273$index92Z2D = $1120;
    $eh$lpad$body273$indexZ2D = $1119;
    label = 354;
    break;
   }
  case 339:
   {
    $1145 = ___cxa_find_matching_catch() | 0;
    $1146 = tempRet0;
    __ZdlPv($1121);
    $eh$lpad$body273$index92Z2D = $1146;
    $eh$lpad$body273$indexZ2D = $1145;
    label = 354;
    break;
   }
  case 348:
   {
    $1178 = ___cxa_find_matching_catch() | 0;
    $1179 = tempRet0;
    __ZdlPv($1153);
    $eh$lpad$body287$index98Z2D = $1179;
    $eh$lpad$body287$indexZ2D = $1178;
    label = 356;
    break;
   }
  case 350:
   {
    $$14 = ___cxa_find_matching_catch() | 0;
    $$1423 = tempRet0;
    label = 352;
    break;
   }
  case 351:
   {
    $1182 = ___cxa_find_matching_catch() | 0;
    $1183 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($49);
    $$14 = $1182;
    $$1423 = $1183;
    label = 352;
    break;
   }
  case 353:
   {
    $1184 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body273$index92Z2D = tempRet0;
    $eh$lpad$body273$indexZ2D = $1184;
    label = 354;
    break;
   }
  case 355:
   {
    $1186 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body287$index98Z2D = tempRet0;
    $eh$lpad$body287$indexZ2D = $1186;
    label = 356;
    break;
   }
  case 368:
   {
    $1221 = ___cxa_find_matching_catch() | 0;
    $1222 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($126);
    $eh$lpad$body74$index23Z2D = $1222;
    $eh$lpad$body74$indexZ2D = $1221;
    label = 61;
    break;
   }
  case 372:
   {
    $1235 = ___cxa_find_matching_catch() | 0;
    $1236 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($129);
    $eh$lpad$body74$index23Z2D = $1236;
    $eh$lpad$body74$indexZ2D = $1235;
    label = 61;
    break;
   }
  case 375:
   {
    $1261 = ___cxa_find_matching_catch() | 0;
    $1262 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($132);
    $eh$lpad$body74$index23Z2D = $1262;
    $eh$lpad$body74$indexZ2D = $1261;
    label = 61;
    break;
   }
  case 379:
   {
    $1275 = ___cxa_find_matching_catch() | 0;
    $1276 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($135);
    $eh$lpad$body74$index23Z2D = $1276;
    $eh$lpad$body74$indexZ2D = $1275;
    label = 61;
    break;
   }
  case 384:
   {
    $1307 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $59 | 0, 36280, 24);
    $1308 = __THREW__;
    __THREW__ = 0;
    if ($1308 & 1) {
     $1314 = ___cxa_find_matching_catch() | 0;
     $$1827362 = tempRet0;
     $$18363 = $1314;
    } else {
     __THREW__ = 0;
     invoke_viii(7, $1307 | 0, $next | 0, $59 | 0);
     $1310 = __THREW__;
     __THREW__ = 0;
     if ($1310 & 1) $$0 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $1307 | 0, 48, 178);
      $1312 = __THREW__;
      __THREW__ = 0;
      if ($1312 & 1) $$0 = 0; else {}
     }
     $1316 = ___cxa_find_matching_catch() | 0;
     $1317 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($59);
     if ($$0) {
      $$1827362 = $1317;
      $$18363 = $1316;
     } else {
      $$19 = $1316;
      $$1928 = $1317;
      break;
     }
    }
    ___cxa_free_exception($1307 | 0);
    $$19 = $$18363;
    $$1928 = $$1827362;
    break;
   }
  case 392:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($let_binds, HEAP32[$65 >> 2] | 0);
    if (!(HEAP32[$64 >> 2] | 0)) {
     $1332 = HEAP32[$60 >> 2] | 0;
     __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1332);
     STACKTOP = sp;
     return;
    }
    $1321 = HEAP32[$63 >> 2] | 0;
    $1323 = (HEAP32[$fields >> 2] | 0) + 4 | 0;
    $1325 = HEAP32[$1321 >> 2] | 0;
    HEAP32[$1325 + 4 >> 2] = HEAP32[$1323 >> 2];
    HEAP32[HEAP32[$1323 >> 2] >> 2] = $1325;
    HEAP32[$64 >> 2] = 0;
    if (($1321 | 0) == ($fields | 0)) {
     $1332 = HEAP32[$60 >> 2] | 0;
     __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1332);
     STACKTOP = sp;
     return;
    } else $__f$01$i$i328 = $1321;
    do {
     $__f$01$i$i328$looptemp = $__f$01$i$i328;
     $__f$01$i$i328 = HEAP32[$__f$01$i$i328 + 4 >> 2] | 0;
     __ZdlPv($__f$01$i$i328$looptemp);
    } while (($__f$01$i$i328 | 0) != ($fields | 0));
    $1332 = HEAP32[$60 >> 2] | 0;
    __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1332);
    STACKTOP = sp;
    return;
   }
  }
  switch (label | 0) {
  case 61:
   {
    $$19 = $eh$lpad$body74$indexZ2D;
    $$1928 = $eh$lpad$body74$index23Z2D;
    break;
   }
  case 69:
   {
    $$2 = $lpad$phi$index;
    $$211 = $lpad$phi$index32;
    label = 119;
    break;
   }
  case 90:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($18, HEAP32[$152 >> 2] | 0);
    $$01 = $eh$lpad$body86$indexZ2D;
    $$04 = $eh$lpad$body86$index37Z2D;
    label = 91;
    break;
   }
  case 115:
   {
    if (!(HEAP32[$146 >> 2] | 0)) {
     $$110 = $eh$lpad$body97$index42Z2D;
     $$12 = $eh$lpad$body97$indexZ2D;
     label = 118;
    } else {
     $515 = HEAP32[$145 >> 2] | 0;
     $517 = (HEAP32[$20 >> 2] | 0) + 4 | 0;
     $519 = HEAP32[$515 >> 2] | 0;
     HEAP32[$519 + 4 >> 2] = HEAP32[$517 >> 2];
     HEAP32[HEAP32[$517 >> 2] >> 2] = $519;
     HEAP32[$146 >> 2] = 0;
     if (($515 | 0) == ($20 | 0)) {
      $$110 = $eh$lpad$body97$index42Z2D;
      $$12 = $eh$lpad$body97$indexZ2D;
      label = 118;
     } else {
      $__f$01$i$i102 = $515;
      do {
       $__f$01$i$i102$looptemp = $__f$01$i$i102;
       $__f$01$i$i102 = HEAP32[$__f$01$i$i102 + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i102$looptemp);
      } while (($__f$01$i$i102 | 0) != ($20 | 0));
      $$110 = $eh$lpad$body97$index42Z2D;
      $$12 = $eh$lpad$body97$indexZ2D;
      label = 118;
     }
    }
    break;
   }
  case 160:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($24, HEAP32[$167 >> 2] | 0);
    $$5 = $eh$lpad$body139$indexZ2D;
    $$514 = $eh$lpad$body139$index47Z2D;
    label = 161;
    break;
   }
  case 202:
   {
    $$9 = $eh$lpad$body160$indexZ2D;
    $$918 = $eh$lpad$body160$index52Z2D;
    label = 207;
    break;
   }
  case 205:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
    $$8 = $eh$lpad$body169$indexZ2D;
    $$817 = $eh$lpad$body169$index57Z2D;
    label = 206;
    break;
   }
  case 229:
   {
    $$19 = $eh$lpad$body178$indexZ2D;
    $$1928 = $eh$lpad$body178$index63Z2D;
    break;
   }
  case 252:
   {
    $$16 = $eh$lpad$body193$indexZ2D;
    $$1625 = $eh$lpad$body193$index75Z2D;
    label = 360;
    break;
   }
  case 254:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($82);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($81);
    $$16 = $eh$lpad$body197$indexZ2D;
    $$1625 = $eh$lpad$body197$index86Z2D;
    label = 360;
    break;
   }
  case 312:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($44);
    $$16 = $$123;
    $$1625 = $$1221;
    label = 360;
    break;
   }
  case 318:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($46);
    $$16 = $$13;
    $$1625 = $$1322;
    label = 360;
    break;
   }
  case 352:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($48);
    $$16 = $$14;
    $$1625 = $$1423;
    label = 360;
    break;
   }
  case 354:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($51);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($50);
    $$16 = $eh$lpad$body273$indexZ2D;
    $$1625 = $eh$lpad$body273$index92Z2D;
    label = 360;
    break;
   }
  case 356:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($52);
    $$16 = $eh$lpad$body287$indexZ2D;
    $$1625 = $eh$lpad$body287$index98Z2D;
    label = 360;
    break;
   }
  }
  if ((label | 0) == 91) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
   $$2 = $$01;
   $$211 = $$04;
   label = 119;
  } else if ((label | 0) == 118) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
   $$2 = $$12;
   $$211 = $$110;
   label = 119;
  } else if ((label | 0) == 161) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23);
   $$19 = $$5;
   $$1928 = $$514;
  } else if ((label | 0) == 206) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($164);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($161);
   $$9 = $$8;
   $$918 = $$817;
   label = 207;
  } else if ((label | 0) == 360) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($plus_loc);
   if (!$1030) {
    $$19 = $$16;
    $$1928 = $$1625;
   } else {
    __ZdlPv($1030);
    $$19 = $$16;
    $$1928 = $$1625;
   }
  }
  if ((label | 0) == 119) if (!(HEAP32[$139 >> 2] | 0)) {
   $$19 = $$2;
   $$1928 = $$211;
  } else {
   $528 = HEAP32[$138 >> 2] | 0;
   $530 = (HEAP32[$r >> 2] | 0) + 4 | 0;
   $532 = HEAP32[$528 >> 2] | 0;
   HEAP32[$532 + 4 >> 2] = HEAP32[$530 >> 2];
   HEAP32[HEAP32[$530 >> 2] >> 2] = $532;
   HEAP32[$139 >> 2] = 0;
   if (($528 | 0) == ($r | 0)) {
    $$19 = $$2;
    $$1928 = $$211;
   } else {
    $__f$01$i$i105 = $528;
    do {
     $__f$01$i$i105$looptemp = $__f$01$i$i105;
     $__f$01$i$i105 = HEAP32[$__f$01$i$i105 + 4 >> 2] | 0;
     __ZdlPv($__f$01$i$i105$looptemp);
    } while (($__f$01$i$i105 | 0) != ($r | 0));
    $$19 = $$2;
    $$1928 = $$211;
   }
  } else if ((label | 0) == 207) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($165);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($155);
   $$19 = $$9;
   $$1928 = $$918;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($71);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($70);
  $$20 = $$19;
  $$2029 = $$1928;
 } while (0);
 if ((label | 0) == 36) {
  $$20 = $eh$lpad$body67$indexZ2D;
  $$2029 = $eh$lpad$body67$index3Z2D;
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($let_binds, HEAP32[$65 >> 2] | 0);
 if (!(HEAP32[$64 >> 2] | 0)) {
  $1347 = HEAP32[$60 >> 2] | 0;
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1347);
  ___resumeException($$20 | 0);
 }
 $1336 = HEAP32[$63 >> 2] | 0;
 $1338 = (HEAP32[$fields >> 2] | 0) + 4 | 0;
 $1340 = HEAP32[$1336 >> 2] | 0;
 HEAP32[$1340 + 4 >> 2] = HEAP32[$1338 >> 2];
 HEAP32[HEAP32[$1338 >> 2] >> 2] = $1340;
 HEAP32[$64 >> 2] = 0;
 if (($1336 | 0) == ($fields | 0)) {
  $1347 = HEAP32[$60 >> 2] | 0;
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1347);
  ___resumeException($$20 | 0);
 } else $__f$01$i$i331 = $1336;
 do {
  $__f$01$i$i331$looptemp = $__f$01$i$i331;
  $__f$01$i$i331 = HEAP32[$__f$01$i$i331 + 4 >> 2] | 0;
  __ZdlPv($__f$01$i$i331$looptemp);
 } while (($__f$01$i$i331 | 0) != ($fields | 0));
 $1347 = HEAP32[$60 >> 2] | 0;
 __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1347);
 ___resumeException($$20 | 0);
}

function __Z20jsonnet_builtin_declm($agg$result, $builtin) {
 $agg$result = $agg$result | 0;
 $builtin = $builtin | 0;
 var $$0 = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i112 = 0, $$01$i$i134 = 0, $$01$i$i156 = 0, $$01$i$i178 = 0, $$01$i$i200 = 0, $$01$i$i222 = 0, $$01$i$i244 = 0, $$01$i$i266 = 0, $$01$i$i289 = 0, $$01$i$i312 = 0, $$01$i$i334 = 0, $$01$i$i356 = 0, $$01$i$i378 = 0, $$01$i$i400 = 0, $$01$i$i422 = 0, $$01$i$i444 = 0, $$01$i$i46 = 0, $$01$i$i466 = 0, $$01$i$i488 = 0, $$01$i$i511 = 0, $$01$i$i533 = 0, $$01$i$i555 = 0, $$01$i$i68 = 0, $$01$i$i90 = 0, $$02 = 0, $$03 = 0, $$035 = 0, $$036 = 0, $$037 = 0, $$1 = 0, $$10 = 0, $$11 = 0, $$110 = 0, $$12 = 0, $$1221 = 0, $$13 = 0, $$1322 = 0, $$14 = 0, $$15 = 0, $$16 = 0, $$17 = 0, $$18 = 0, $$19 = 0, $$2 = 0, $$20 = 0, $$21 = 0, $$22 = 0, $$2231 = 0, $$23 = 0, $$24 = 0, $$25 = 0, $$2534 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$sink$index17 = 0, $$sink778$index27 = 0, $$sink779$index37 = 0, $$sink780$index47 = 0, $$sink781$index57 = 0, $$sink782$index67 = 0, $$sink783$index77 = 0, $$sink784$index87 = 0, $$sink785$index97 = 0, $$sink786$index107 = 0, $$sink787$index127 = 0, $$sink788$index137 = 0, $$sink789$index147 = 0, $$sink790$index157 = 0, $$sink791$index167 = 0, $$sink792$index177 = 0, $$sink793$index187 = 0, $$sink794$index197 = 0, $$sink795$index212 = 0, $$sink796$index222 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $107 = 0, $11 = 0, $110 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $119 = 0, $12 = 0, $120 = 0, $122 = 0, $125 = 0, $128 = 0, $13 = 0, $130 = 0, $132 = 0, $134 = 0, $136 = 0, $137 = 0, $14 = 0, $140 = 0, $141 = 0, $143 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $152 = 0, $153 = 0, $155 = 0, $158 = 0, $16 = 0, $161 = 0, $163 = 0, $165 = 0, $167 = 0, $169 = 0, $17 = 0, $170 = 0, $173 = 0, $174 = 0, $176 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $185 = 0, $186 = 0, $188 = 0, $19 = 0, $191 = 0, $194 = 0, $196 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $202 = 0, $203 = 0, $206 = 0, $207 = 0, $209 = 0, $21 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $218 = 0, $219 = 0, $22 = 0, $221 = 0, $224 = 0, $227 = 0, $229 = 0, $23 = 0, $231 = 0, $233 = 0, $235 = 0, $236 = 0, $239 = 0, $24 = 0, $240 = 0, $242 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $25 = 0, $251 = 0, $252 = 0, $254 = 0, $257 = 0, $26 = 0, $260 = 0, $262 = 0, $264 = 0, $266 = 0, $268 = 0, $269 = 0, $272 = 0, $273 = 0, $275 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $284 = 0, $285 = 0, $287 = 0, $29 = 0, $290 = 0, $293 = 0, $295 = 0, $297 = 0, $299 = 0, $3 = 0, $301 = 0, $302 = 0, $305 = 0, $306 = 0, $308 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $317 = 0, $318 = 0, $32 = 0, $320 = 0, $323 = 0, $326 = 0, $328 = 0, $33 = 0, $330 = 0, $332 = 0, $334 = 0, $335 = 0, $338 = 0, $339 = 0, $34 = 0, $341 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $35 = 0, $350 = 0, $351 = 0, $353 = 0, $356 = 0, $359 = 0, $361 = 0, $363 = 0, $365 = 0, $367 = 0, $368 = 0, $371 = 0, $372 = 0, $374 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $383 = 0, $384 = 0, $386 = 0, $389 = 0, $39 = 0, $392 = 0, $394 = 0, $396 = 0, $398 = 0, $4 = 0, $400 = 0, $401 = 0, $404 = 0, $405 = 0, $407 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $416 = 0, $417 = 0, $419 = 0, $422 = 0, $425 = 0, $427 = 0, $429 = 0, $431 = 0, $433 = 0, $434 = 0, $437 = 0, $438 = 0, $44 = 0, $440 = 0, $442 = 0, $443 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $452 = 0, $453 = 0, $455 = 0, $458 = 0, $461 = 0, $463 = 0, $465 = 0, $467 = 0, $469 = 0, $47 = 0, $470 = 0, $473 = 0, $475 = 0, $476 = 0, $479 = 0, $482 = 0, $484 = 0, $485 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $494 = 0, $495 = 0, $497 = 0, $5 = 0, $500 = 0, $503 = 0, $505 = 0, $507 = 0, $509 = 0, $51 = 0, $511 = 0, $512 = 0, $515 = 0, $517 = 0, $518 = 0, $521 = 0, $524 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $533 = 0, $534 = 0, $536 = 0, $539 = 0, $542 = 0, $544 = 0, $546 = 0, $548 = 0, $55 = 0, $550 = 0, $551 = 0, $554 = 0, $555 = 0, $557 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $566 = 0, $567 = 0, $569 = 0, $572 = 0, $575 = 0, $577 = 0, $579 = 0, $581 = 0, $583 = 0, $584 = 0, $587 = 0, $588 = 0, $59 = 0, $590 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $599 = 0, $6 = 0, $600 = 0, $602 = 0, $605 = 0, $608 = 0, $61 = 0, $610 = 0, $612 = 0, $614 = 0, $616 = 0, $617 = 0, $62 = 0, $620 = 0, $621 = 0, $623 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $632 = 0, $633 = 0, $635 = 0, $638 = 0, $641 = 0, $643 = 0, $645 = 0, $647 = 0, $649 = 0, $65 = 0, $650 = 0, $653 = 0, $654 = 0, $656 = 0, $658 = 0, $659 = 0, $660 = 0, $661 = 0, $662 = 0, $665 = 0, $666 = 0, $668 = 0, $671 = 0, $674 = 0, $676 = 0, $678 = 0, $68 = 0, $680 = 0, $682 = 0, $683 = 0, $686 = 0, $687 = 0, $689 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $701 = 0, $704 = 0, $707 = 0, $709 = 0, $71 = 0, $711 = 0, $713 = 0, $715 = 0, $716 = 0, $719 = 0, $720 = 0, $722 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $73 = 0, $731 = 0, $732 = 0, $734 = 0, $737 = 0, $74 = 0, $740 = 0, $742 = 0, $744 = 0, $746 = 0, $748 = 0, $749 = 0, $75 = 0, $752 = 0, $753 = 0, $755 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $764 = 0, $765 = 0, $767 = 0, $77 = 0, $770 = 0, $773 = 0, $775 = 0, $777 = 0, $779 = 0, $781 = 0, $782 = 0, $785 = 0, $786 = 0, $788 = 0, $790 = 0, $791 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $803 = 0, $806 = 0, $809 = 0, $81 = 0, $811 = 0, $813 = 0, $815 = 0, $817 = 0, $818 = 0, $821 = 0, $823 = 0, $824 = 0, $827 = 0, $83 = 0, $830 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $839 = 0, $840 = 0, $842 = 0, $845 = 0, $848 = 0, $850 = 0, $852 = 0, $854 = 0, $856 = 0, $857 = 0, $86 = 0, $860 = 0, $861 = 0, $863 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $872 = 0, $873 = 0, $875 = 0, $878 = 0, $881 = 0, $883 = 0, $885 = 0, $887 = 0, $889 = 0, $89 = 0, $890 = 0, $893 = 0, $894 = 0, $897 = 0, $9 = 0, $902 = 0, $903 = 0, $908 = 0, $909 = 0, $91 = 0, $911 = 0, $912 = 0, $93 = 0, $95 = 0, $97 = 0, $98 = 0, $lpad$phi$i$index = 0, $lpad$phi$i$index2 = 0, $lpad$phi$i120$index = 0, $lpad$phi$i120$index32 = 0, $lpad$phi$i142$index = 0, $lpad$phi$i142$index42 = 0, $lpad$phi$i164$index = 0, $lpad$phi$i164$index52 = 0, $lpad$phi$i186$index = 0, $lpad$phi$i186$index62 = 0, $lpad$phi$i208$index = 0, $lpad$phi$i208$index72 = 0, $lpad$phi$i230$index = 0, $lpad$phi$i230$index82 = 0, $lpad$phi$i252$index = 0, $lpad$phi$i252$index92 = 0, $lpad$phi$i274$index = 0, $lpad$phi$i274$index102 = 0, $lpad$phi$i297$index = 0, $lpad$phi$i297$index112 = 0, $lpad$phi$i320$index = 0, $lpad$phi$i320$index117 = 0, $lpad$phi$i342$index = 0, $lpad$phi$i342$index122 = 0, $lpad$phi$i364$index = 0, $lpad$phi$i364$index132 = 0, $lpad$phi$i386$index = 0, $lpad$phi$i386$index142 = 0, $lpad$phi$i408$index = 0, $lpad$phi$i408$index152 = 0, $lpad$phi$i430$index = 0, $lpad$phi$i430$index162 = 0, $lpad$phi$i452$index = 0, $lpad$phi$i452$index172 = 0, $lpad$phi$i474$index = 0, $lpad$phi$i474$index182 = 0, $lpad$phi$i496$index = 0, $lpad$phi$i496$index192 = 0, $lpad$phi$i519$index = 0, $lpad$phi$i519$index202 = 0, $lpad$phi$i54$index = 0, $lpad$phi$i54$index7 = 0, $lpad$phi$i541$index = 0, $lpad$phi$i541$index207 = 0, $lpad$phi$i563$index = 0, $lpad$phi$i563$index217 = 0, $lpad$phi$i76$index = 0, $lpad$phi$i76$index12 = 0, $lpad$phi$i98$index = 0, $lpad$phi$i98$index22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368 | 0;
 $0 = sp + 360 | 0;
 $1 = sp + 336 | 0;
 $2 = sp + 312 | 0;
 $3 = sp + 300 | 0;
 $4 = sp + 288 | 0;
 $5 = sp + 276 | 0;
 $6 = sp + 264 | 0;
 $7 = sp + 252 | 0;
 $8 = sp + 240 | 0;
 $9 = sp + 228 | 0;
 $10 = sp + 216 | 0;
 $11 = sp + 204 | 0;
 $12 = sp + 192 | 0;
 $13 = sp + 168 | 0;
 $14 = sp + 144 | 0;
 $15 = sp + 132 | 0;
 $16 = sp + 120 | 0;
 $17 = sp + 108 | 0;
 $18 = sp + 96 | 0;
 $19 = sp + 84 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 60 | 0;
 $22 = sp + 48 | 0;
 $23 = sp + 24 | 0;
 $24 = sp + 12 | 0;
 $25 = sp;
 do switch ($builtin | 0) {
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1328, 3);
   __THREW__ = 0;
   invoke_viii(3, $2 | 0, 1336, 1);
   $68 = __THREW__;
   __THREW__ = 0;
   if ($68 & 1) {
    $$035 = $2;
    label = 38;
   } else {
    $70 = $2 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $70 | 0, 1344, 1);
    $71 = __THREW__;
    __THREW__ = 0;
    if ($71 & 1) {
     $$035 = $70;
     label = 38;
    } else {
     $73 = $agg$result + 12 | 0;
     HEAP32[$73 >> 2] = 0;
     $74 = $agg$result + 16 | 0;
     HEAP32[$74 >> 2] = 0;
     $75 = $agg$result + 20 | 0;
     HEAP32[$75 >> 2] = 0;
     __THREW__ = 0;
     $76 = invoke_ii(67, 24) | 0;
     $77 = __THREW__;
     __THREW__ = 0;
     do if ($77 & 1) {
      $91 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i54$index = $91;
      $lpad$phi$i54$index7 = tempRet0;
     } else {
      HEAP32[$74 >> 2] = $76;
      HEAP32[$73 >> 2] = $76;
      HEAP32[$75 >> 2] = $76 + 24;
      $80 = $2 + 24 | 0;
      $$01$i$i46 = $2;
      $81 = $76;
      do {
       if (!$81) $86 = 0; else {
        __THREW__ = 0;
        invoke_vii(40, $81 | 0, $$01$i$i46 | 0);
        $83 = __THREW__;
        __THREW__ = 0;
        if ($83 & 1) {
         label = 30;
         break;
        }
        $86 = HEAP32[$74 >> 2] | 0;
       }
       $81 = $86 + 12 | 0;
       HEAP32[$74 >> 2] = $81;
       $$01$i$i46 = $$01$i$i46 + 12 | 0;
      } while (($$01$i$i46 | 0) != ($80 | 0));
      if ((label | 0) == 30) {
       $89 = ___cxa_find_matching_catch() | 0;
       $lpad$phi$i54$index = $89;
       $lpad$phi$i54$index7 = tempRet0;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2 + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
      STACKTOP = sp;
      return;
     } while (0);
     $93 = HEAP32[$73 >> 2] | 0;
     if ($93) {
      $95 = HEAP32[$74 >> 2] | 0;
      if (($95 | 0) == ($93 | 0)) $101 = $93; else {
       $98 = $95;
       do {
        $97 = $98 + -12 | 0;
        HEAP32[$74 >> 2] = $97;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($97);
        $98 = HEAP32[$74 >> 2] | 0;
       } while (($98 | 0) != ($93 | 0));
       $101 = HEAP32[$73 >> 2] | 0;
      }
      __ZdlPv($101);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
     $$1 = $lpad$phi$i54$index;
     $$110 = $lpad$phi$i54$index7;
    }
   }
   if ((label | 0) == 38) {
    $103 = ___cxa_find_matching_catch() | 0;
    $104 = tempRet0;
    if (($2 | 0) == ($$035 | 0)) {
     $$1 = $103;
     $$110 = $104;
    } else {
     $107 = $$035;
     do {
      $107 = $107 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($107);
     } while (($107 | 0) != ($2 | 0));
     $$1 = $103;
     $$110 = $104;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$1;
   $$2534 = $$110;
   ___resumeException($$25 | 0);
   break;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1296, 9);
   __THREW__ = 0;
   invoke_viii(3, $1 | 0, 1312, 2);
   $26 = __THREW__;
   __THREW__ = 0;
   if ($26 & 1) {
    $$0 = $1;
    label = 18;
   } else {
    $28 = $1 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $28 | 0, 1320, 4);
    $29 = __THREW__;
    __THREW__ = 0;
    if ($29 & 1) {
     $$0 = $28;
     label = 18;
    } else {
     $31 = $agg$result + 12 | 0;
     HEAP32[$31 >> 2] = 0;
     $32 = $agg$result + 16 | 0;
     HEAP32[$32 >> 2] = 0;
     $33 = $agg$result + 20 | 0;
     HEAP32[$33 >> 2] = 0;
     __THREW__ = 0;
     $34 = invoke_ii(67, 24) | 0;
     $35 = __THREW__;
     __THREW__ = 0;
     do if ($35 & 1) {
      $49 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i$index = $49;
      $lpad$phi$i$index2 = tempRet0;
     } else {
      HEAP32[$32 >> 2] = $34;
      HEAP32[$31 >> 2] = $34;
      HEAP32[$33 >> 2] = $34 + 24;
      $38 = $1 + 24 | 0;
      $$01$i$i = $1;
      $39 = $34;
      do {
       if (!$39) $44 = 0; else {
        __THREW__ = 0;
        invoke_vii(40, $39 | 0, $$01$i$i | 0);
        $41 = __THREW__;
        __THREW__ = 0;
        if ($41 & 1) {
         label = 10;
         break;
        }
        $44 = HEAP32[$32 >> 2] | 0;
       }
       $39 = $44 + 12 | 0;
       HEAP32[$32 >> 2] = $39;
       $$01$i$i = $$01$i$i + 12 | 0;
      } while (($$01$i$i | 0) != ($38 | 0));
      if ((label | 0) == 10) {
       $47 = ___cxa_find_matching_catch() | 0;
       $lpad$phi$i$index = $47;
       $lpad$phi$i$index2 = tempRet0;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1 + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
      STACKTOP = sp;
      return;
     } while (0);
     $51 = HEAP32[$31 >> 2] | 0;
     if ($51) {
      $53 = HEAP32[$32 >> 2] | 0;
      if (($53 | 0) == ($51 | 0)) $59 = $51; else {
       $56 = $53;
       do {
        $55 = $56 + -12 | 0;
        HEAP32[$32 >> 2] = $55;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($55);
        $56 = HEAP32[$32 >> 2] | 0;
       } while (($56 | 0) != ($51 | 0));
       $59 = HEAP32[$31 >> 2] | 0;
      }
      __ZdlPv($59);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
     $$01 = $lpad$phi$i$index;
     $$03 = $lpad$phi$i$index2;
    }
   }
   if ((label | 0) == 18) {
    $61 = ___cxa_find_matching_catch() | 0;
    $62 = tempRet0;
    if (($1 | 0) == ($$0 | 0)) {
     $$01 = $61;
     $$03 = $62;
    } else {
     $65 = $$0;
     do {
      $65 = $65 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($65);
     } while (($65 | 0) != ($1 | 0));
     $$01 = $61;
     $$03 = $62;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$01;
   $$2534 = $$03;
   ___resumeException($$25 | 0);
   break;
  }
 case 18:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1536, 3);
   __THREW__ = 0;
   invoke_viii(3, $19 | 0, 1344, 1);
   $656 = __THREW__;
   __THREW__ = 0;
   if ($656 & 1) {
    $687 = ___cxa_find_matching_catch() | 0;
    $$18 = $687;
    $$sink791$index167 = tempRet0;
   } else {
    $658 = $agg$result + 12 | 0;
    HEAP32[$658 >> 2] = 0;
    $659 = $agg$result + 16 | 0;
    HEAP32[$659 >> 2] = 0;
    $660 = $agg$result + 20 | 0;
    HEAP32[$660 >> 2] = 0;
    __THREW__ = 0;
    $661 = invoke_ii(67, 12) | 0;
    $662 = __THREW__;
    __THREW__ = 0;
    do if ($662 & 1) {
     $676 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i430$index = $676;
     $lpad$phi$i430$index162 = tempRet0;
    } else {
     HEAP32[$659 >> 2] = $661;
     HEAP32[$658 >> 2] = $661;
     HEAP32[$660 >> 2] = $661 + 12;
     $665 = $19 + 12 | 0;
     $$01$i$i422 = $19;
     $666 = $661;
     do {
      if (!$666) $671 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $666 | 0, $$01$i$i422 | 0);
       $668 = __THREW__;
       __THREW__ = 0;
       if ($668 & 1) {
        label = 341;
        break;
       }
       $671 = HEAP32[$659 >> 2] | 0;
      }
      $666 = $671 + 12 | 0;
      HEAP32[$659 >> 2] = $666;
      $$01$i$i422 = $$01$i$i422 + 12 | 0;
     } while (($$01$i$i422 | 0) != ($665 | 0));
     if ((label | 0) == 341) {
      $674 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i430$index = $674;
      $lpad$phi$i430$index162 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
     STACKTOP = sp;
     return;
    } while (0);
    $678 = HEAP32[$658 >> 2] | 0;
    if ($678) {
     $680 = HEAP32[$659 >> 2] | 0;
     if (($680 | 0) == ($678 | 0)) $686 = $678; else {
      $683 = $680;
      do {
       $682 = $683 + -12 | 0;
       HEAP32[$659 >> 2] = $682;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($682);
       $683 = HEAP32[$659 >> 2] | 0;
      } while (($683 | 0) != ($678 | 0));
      $686 = HEAP32[$658 >> 2] | 0;
     }
     __ZdlPv($686);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
    $$18 = $lpad$phi$i430$index;
    $$sink791$index167 = $lpad$phi$i430$index162;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$18;
   $$2534 = $$sink791$index167;
   ___resumeException($$25 | 0);
   break;
  }
 case 19:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1544, 3);
   __THREW__ = 0;
   invoke_viii(3, $20 | 0, 1344, 1);
   $689 = __THREW__;
   __THREW__ = 0;
   if ($689 & 1) {
    $720 = ___cxa_find_matching_catch() | 0;
    $$19 = $720;
    $$sink792$index177 = tempRet0;
   } else {
    $691 = $agg$result + 12 | 0;
    HEAP32[$691 >> 2] = 0;
    $692 = $agg$result + 16 | 0;
    HEAP32[$692 >> 2] = 0;
    $693 = $agg$result + 20 | 0;
    HEAP32[$693 >> 2] = 0;
    __THREW__ = 0;
    $694 = invoke_ii(67, 12) | 0;
    $695 = __THREW__;
    __THREW__ = 0;
    do if ($695 & 1) {
     $709 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i452$index = $709;
     $lpad$phi$i452$index172 = tempRet0;
    } else {
     HEAP32[$692 >> 2] = $694;
     HEAP32[$691 >> 2] = $694;
     HEAP32[$693 >> 2] = $694 + 12;
     $698 = $20 + 12 | 0;
     $$01$i$i444 = $20;
     $699 = $694;
     do {
      if (!$699) $704 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $699 | 0, $$01$i$i444 | 0);
       $701 = __THREW__;
       __THREW__ = 0;
       if ($701 & 1) {
        label = 359;
        break;
       }
       $704 = HEAP32[$692 >> 2] | 0;
      }
      $699 = $704 + 12 | 0;
      HEAP32[$692 >> 2] = $699;
      $$01$i$i444 = $$01$i$i444 + 12 | 0;
     } while (($$01$i$i444 | 0) != ($698 | 0));
     if ((label | 0) == 359) {
      $707 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i452$index = $707;
      $lpad$phi$i452$index172 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
     STACKTOP = sp;
     return;
    } while (0);
    $711 = HEAP32[$691 >> 2] | 0;
    if ($711) {
     $713 = HEAP32[$692 >> 2] | 0;
     if (($713 | 0) == ($711 | 0)) $719 = $711; else {
      $716 = $713;
      do {
       $715 = $716 + -12 | 0;
       HEAP32[$692 >> 2] = $715;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($715);
       $716 = HEAP32[$692 >> 2] | 0;
      } while (($716 | 0) != ($711 | 0));
      $719 = HEAP32[$691 >> 2] | 0;
     }
     __ZdlPv($719);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
    $$19 = $lpad$phi$i452$index;
    $$sink792$index177 = $lpad$phi$i452$index172;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$19;
   $$2534 = $$sink792$index177;
   ___resumeException($$25 | 0);
   break;
  }
 case 21:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1568, 8);
   __THREW__ = 0;
   invoke_viii(3, $22 | 0, 1344, 1);
   $755 = __THREW__;
   __THREW__ = 0;
   if ($755 & 1) {
    $786 = ___cxa_find_matching_catch() | 0;
    $$21 = $786;
    $$sink794$index197 = tempRet0;
   } else {
    $757 = $agg$result + 12 | 0;
    HEAP32[$757 >> 2] = 0;
    $758 = $agg$result + 16 | 0;
    HEAP32[$758 >> 2] = 0;
    $759 = $agg$result + 20 | 0;
    HEAP32[$759 >> 2] = 0;
    __THREW__ = 0;
    $760 = invoke_ii(67, 12) | 0;
    $761 = __THREW__;
    __THREW__ = 0;
    do if ($761 & 1) {
     $775 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i496$index = $775;
     $lpad$phi$i496$index192 = tempRet0;
    } else {
     HEAP32[$758 >> 2] = $760;
     HEAP32[$757 >> 2] = $760;
     HEAP32[$759 >> 2] = $760 + 12;
     $764 = $22 + 12 | 0;
     $$01$i$i488 = $22;
     $765 = $760;
     do {
      if (!$765) $770 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $765 | 0, $$01$i$i488 | 0);
       $767 = __THREW__;
       __THREW__ = 0;
       if ($767 & 1) {
        label = 395;
        break;
       }
       $770 = HEAP32[$758 >> 2] | 0;
      }
      $765 = $770 + 12 | 0;
      HEAP32[$758 >> 2] = $765;
      $$01$i$i488 = $$01$i$i488 + 12 | 0;
     } while (($$01$i$i488 | 0) != ($764 | 0));
     if ((label | 0) == 395) {
      $773 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i496$index = $773;
      $lpad$phi$i496$index192 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
     STACKTOP = sp;
     return;
    } while (0);
    $777 = HEAP32[$757 >> 2] | 0;
    if ($777) {
     $779 = HEAP32[$758 >> 2] | 0;
     if (($779 | 0) == ($777 | 0)) $785 = $777; else {
      $782 = $779;
      do {
       $781 = $782 + -12 | 0;
       HEAP32[$758 >> 2] = $781;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($781);
       $782 = HEAP32[$758 >> 2] | 0;
      } while (($782 | 0) != ($777 | 0));
      $785 = HEAP32[$757 >> 2] | 0;
     }
     __ZdlPv($785);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
    $$21 = $lpad$phi$i496$index;
    $$sink794$index197 = $lpad$phi$i496$index192;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$21;
   $$2534 = $$sink794$index197;
   ___resumeException($$25 | 0);
   break;
  }
 case 20:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1552, 8);
   __THREW__ = 0;
   invoke_viii(3, $21 | 0, 1344, 1);
   $722 = __THREW__;
   __THREW__ = 0;
   if ($722 & 1) {
    $753 = ___cxa_find_matching_catch() | 0;
    $$20 = $753;
    $$sink793$index187 = tempRet0;
   } else {
    $724 = $agg$result + 12 | 0;
    HEAP32[$724 >> 2] = 0;
    $725 = $agg$result + 16 | 0;
    HEAP32[$725 >> 2] = 0;
    $726 = $agg$result + 20 | 0;
    HEAP32[$726 >> 2] = 0;
    __THREW__ = 0;
    $727 = invoke_ii(67, 12) | 0;
    $728 = __THREW__;
    __THREW__ = 0;
    do if ($728 & 1) {
     $742 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i474$index = $742;
     $lpad$phi$i474$index182 = tempRet0;
    } else {
     HEAP32[$725 >> 2] = $727;
     HEAP32[$724 >> 2] = $727;
     HEAP32[$726 >> 2] = $727 + 12;
     $731 = $21 + 12 | 0;
     $$01$i$i466 = $21;
     $732 = $727;
     do {
      if (!$732) $737 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $732 | 0, $$01$i$i466 | 0);
       $734 = __THREW__;
       __THREW__ = 0;
       if ($734 & 1) {
        label = 377;
        break;
       }
       $737 = HEAP32[$725 >> 2] | 0;
      }
      $732 = $737 + 12 | 0;
      HEAP32[$725 >> 2] = $732;
      $$01$i$i466 = $$01$i$i466 + 12 | 0;
     } while (($$01$i$i466 | 0) != ($731 | 0));
     if ((label | 0) == 377) {
      $740 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i474$index = $740;
      $lpad$phi$i474$index182 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($21);
     STACKTOP = sp;
     return;
    } while (0);
    $744 = HEAP32[$724 >> 2] | 0;
    if ($744) {
     $746 = HEAP32[$725 >> 2] | 0;
     if (($746 | 0) == ($744 | 0)) $752 = $744; else {
      $749 = $746;
      do {
       $748 = $749 + -12 | 0;
       HEAP32[$725 >> 2] = $748;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($748);
       $749 = HEAP32[$725 >> 2] | 0;
      } while (($749 | 0) != ($744 | 0));
      $752 = HEAP32[$724 >> 2] | 0;
     }
     __ZdlPv($752);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($21);
    $$20 = $lpad$phi$i474$index;
    $$sink793$index187 = $lpad$phi$i474$index182;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$20;
   $$2534 = $$sink793$index187;
   ___resumeException($$25 | 0);
   break;
  }
 case 7:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1392, 3);
   __THREW__ = 0;
   invoke_viii(3, $8 | 0, 1336, 1);
   $275 = __THREW__;
   __THREW__ = 0;
   if ($275 & 1) {
    $306 = ___cxa_find_matching_catch() | 0;
    $$7 = $306;
    $$sink782$index67 = tempRet0;
   } else {
    $277 = $agg$result + 12 | 0;
    HEAP32[$277 >> 2] = 0;
    $278 = $agg$result + 16 | 0;
    HEAP32[$278 >> 2] = 0;
    $279 = $agg$result + 20 | 0;
    HEAP32[$279 >> 2] = 0;
    __THREW__ = 0;
    $280 = invoke_ii(67, 12) | 0;
    $281 = __THREW__;
    __THREW__ = 0;
    do if ($281 & 1) {
     $295 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i186$index = $295;
     $lpad$phi$i186$index62 = tempRet0;
    } else {
     HEAP32[$278 >> 2] = $280;
     HEAP32[$277 >> 2] = $280;
     HEAP32[$279 >> 2] = $280 + 12;
     $284 = $8 + 12 | 0;
     $$01$i$i178 = $8;
     $285 = $280;
     do {
      if (!$285) $290 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $285 | 0, $$01$i$i178 | 0);
       $287 = __THREW__;
       __THREW__ = 0;
       if ($287 & 1) {
        label = 139;
        break;
       }
       $290 = HEAP32[$278 >> 2] | 0;
      }
      $285 = $290 + 12 | 0;
      HEAP32[$278 >> 2] = $285;
      $$01$i$i178 = $$01$i$i178 + 12 | 0;
     } while (($$01$i$i178 | 0) != ($284 | 0));
     if ((label | 0) == 139) {
      $293 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i186$index = $293;
      $lpad$phi$i186$index62 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
     STACKTOP = sp;
     return;
    } while (0);
    $297 = HEAP32[$277 >> 2] | 0;
    if ($297) {
     $299 = HEAP32[$278 >> 2] | 0;
     if (($299 | 0) == ($297 | 0)) $305 = $297; else {
      $302 = $299;
      do {
       $301 = $302 + -12 | 0;
       HEAP32[$278 >> 2] = $301;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($301);
       $302 = HEAP32[$278 >> 2] | 0;
      } while (($302 | 0) != ($297 | 0));
      $305 = HEAP32[$277 >> 2] | 0;
     }
     __ZdlPv($305);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
    $$7 = $lpad$phi$i186$index;
    $$sink782$index67 = $lpad$phi$i186$index62;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$7;
   $$2534 = $$sink782$index67;
   ___resumeException($$25 | 0);
   break;
  }
 case 5:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1376, 3);
   __THREW__ = 0;
   invoke_viii(3, $6 | 0, 1336, 1);
   $209 = __THREW__;
   __THREW__ = 0;
   if ($209 & 1) {
    $240 = ___cxa_find_matching_catch() | 0;
    $$5 = $240;
    $$sink780$index47 = tempRet0;
   } else {
    $211 = $agg$result + 12 | 0;
    HEAP32[$211 >> 2] = 0;
    $212 = $agg$result + 16 | 0;
    HEAP32[$212 >> 2] = 0;
    $213 = $agg$result + 20 | 0;
    HEAP32[$213 >> 2] = 0;
    __THREW__ = 0;
    $214 = invoke_ii(67, 12) | 0;
    $215 = __THREW__;
    __THREW__ = 0;
    do if ($215 & 1) {
     $229 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i142$index = $229;
     $lpad$phi$i142$index42 = tempRet0;
    } else {
     HEAP32[$212 >> 2] = $214;
     HEAP32[$211 >> 2] = $214;
     HEAP32[$213 >> 2] = $214 + 12;
     $218 = $6 + 12 | 0;
     $$01$i$i134 = $6;
     $219 = $214;
     do {
      if (!$219) $224 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $219 | 0, $$01$i$i134 | 0);
       $221 = __THREW__;
       __THREW__ = 0;
       if ($221 & 1) {
        label = 103;
        break;
       }
       $224 = HEAP32[$212 >> 2] | 0;
      }
      $219 = $224 + 12 | 0;
      HEAP32[$212 >> 2] = $219;
      $$01$i$i134 = $$01$i$i134 + 12 | 0;
     } while (($$01$i$i134 | 0) != ($218 | 0));
     if ((label | 0) == 103) {
      $227 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i142$index = $227;
      $lpad$phi$i142$index42 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
     STACKTOP = sp;
     return;
    } while (0);
    $231 = HEAP32[$211 >> 2] | 0;
    if ($231) {
     $233 = HEAP32[$212 >> 2] | 0;
     if (($233 | 0) == ($231 | 0)) $239 = $231; else {
      $236 = $233;
      do {
       $235 = $236 + -12 | 0;
       HEAP32[$212 >> 2] = $235;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($235);
       $236 = HEAP32[$212 >> 2] | 0;
      } while (($236 | 0) != ($231 | 0));
      $239 = HEAP32[$211 >> 2] | 0;
     }
     __ZdlPv($239);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
    $$5 = $lpad$phi$i142$index;
    $$sink780$index47 = $lpad$phi$i142$index42;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$5;
   $$2534 = $$sink780$index47;
   ___resumeException($$25 | 0);
   break;
  }
 case 8:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1400, 4);
   __THREW__ = 0;
   invoke_viii(3, $9 | 0, 1336, 1);
   $308 = __THREW__;
   __THREW__ = 0;
   if ($308 & 1) {
    $339 = ___cxa_find_matching_catch() | 0;
    $$8 = $339;
    $$sink783$index77 = tempRet0;
   } else {
    $310 = $agg$result + 12 | 0;
    HEAP32[$310 >> 2] = 0;
    $311 = $agg$result + 16 | 0;
    HEAP32[$311 >> 2] = 0;
    $312 = $agg$result + 20 | 0;
    HEAP32[$312 >> 2] = 0;
    __THREW__ = 0;
    $313 = invoke_ii(67, 12) | 0;
    $314 = __THREW__;
    __THREW__ = 0;
    do if ($314 & 1) {
     $328 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i208$index = $328;
     $lpad$phi$i208$index72 = tempRet0;
    } else {
     HEAP32[$311 >> 2] = $313;
     HEAP32[$310 >> 2] = $313;
     HEAP32[$312 >> 2] = $313 + 12;
     $317 = $9 + 12 | 0;
     $$01$i$i200 = $9;
     $318 = $313;
     do {
      if (!$318) $323 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $318 | 0, $$01$i$i200 | 0);
       $320 = __THREW__;
       __THREW__ = 0;
       if ($320 & 1) {
        label = 157;
        break;
       }
       $323 = HEAP32[$311 >> 2] | 0;
      }
      $318 = $323 + 12 | 0;
      HEAP32[$311 >> 2] = $318;
      $$01$i$i200 = $$01$i$i200 + 12 | 0;
     } while (($$01$i$i200 | 0) != ($317 | 0));
     if ((label | 0) == 157) {
      $326 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i208$index = $326;
      $lpad$phi$i208$index72 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
     STACKTOP = sp;
     return;
    } while (0);
    $330 = HEAP32[$310 >> 2] | 0;
    if ($330) {
     $332 = HEAP32[$311 >> 2] | 0;
     if (($332 | 0) == ($330 | 0)) $338 = $330; else {
      $335 = $332;
      do {
       $334 = $335 + -12 | 0;
       HEAP32[$311 >> 2] = $334;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($334);
       $335 = HEAP32[$311 >> 2] | 0;
      } while (($335 | 0) != ($330 | 0));
      $338 = HEAP32[$310 >> 2] | 0;
     }
     __ZdlPv($338);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
    $$8 = $lpad$phi$i208$index;
    $$sink783$index77 = $lpad$phi$i208$index72;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$8;
   $$2534 = $$sink783$index77;
   ___resumeException($$25 | 0);
   break;
  }
 case 11:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1424, 4);
   __THREW__ = 0;
   invoke_viii(3, $12 | 0, 1336, 1);
   $407 = __THREW__;
   __THREW__ = 0;
   if ($407 & 1) {
    $438 = ___cxa_find_matching_catch() | 0;
    $$11 = $438;
    $$sink786$index107 = tempRet0;
   } else {
    $409 = $agg$result + 12 | 0;
    HEAP32[$409 >> 2] = 0;
    $410 = $agg$result + 16 | 0;
    HEAP32[$410 >> 2] = 0;
    $411 = $agg$result + 20 | 0;
    HEAP32[$411 >> 2] = 0;
    __THREW__ = 0;
    $412 = invoke_ii(67, 12) | 0;
    $413 = __THREW__;
    __THREW__ = 0;
    do if ($413 & 1) {
     $427 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i274$index = $427;
     $lpad$phi$i274$index102 = tempRet0;
    } else {
     HEAP32[$410 >> 2] = $412;
     HEAP32[$409 >> 2] = $412;
     HEAP32[$411 >> 2] = $412 + 12;
     $416 = $12 + 12 | 0;
     $$01$i$i266 = $12;
     $417 = $412;
     do {
      if (!$417) $422 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $417 | 0, $$01$i$i266 | 0);
       $419 = __THREW__;
       __THREW__ = 0;
       if ($419 & 1) {
        label = 211;
        break;
       }
       $422 = HEAP32[$410 >> 2] | 0;
      }
      $417 = $422 + 12 | 0;
      HEAP32[$410 >> 2] = $417;
      $$01$i$i266 = $$01$i$i266 + 12 | 0;
     } while (($$01$i$i266 | 0) != ($416 | 0));
     if ((label | 0) == 211) {
      $425 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i274$index = $425;
      $lpad$phi$i274$index102 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
     STACKTOP = sp;
     return;
    } while (0);
    $429 = HEAP32[$409 >> 2] | 0;
    if ($429) {
     $431 = HEAP32[$410 >> 2] | 0;
     if (($431 | 0) == ($429 | 0)) $437 = $429; else {
      $434 = $431;
      do {
       $433 = $434 + -12 | 0;
       HEAP32[$410 >> 2] = $433;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($433);
       $434 = HEAP32[$410 >> 2] | 0;
      } while (($434 | 0) != ($429 | 0));
      $437 = HEAP32[$409 >> 2] | 0;
     }
     __ZdlPv($437);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
    $$11 = $lpad$phi$i274$index;
    $$sink786$index107 = $lpad$phi$i274$index102;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$11;
   $$2534 = $$sink786$index107;
   ___resumeException($$25 | 0);
   break;
  }
 case 12:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1432, 6);
   __THREW__ = 0;
   invoke_viii(3, $13 | 0, 1320, 4);
   $440 = __THREW__;
   __THREW__ = 0;
   if ($440 & 1) {
    $$037 = $13;
    label = 238;
   } else {
    $442 = $13 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $442 | 0, 1440, 3);
    $443 = __THREW__;
    __THREW__ = 0;
    if ($443 & 1) {
     $$037 = $442;
     label = 238;
    } else {
     $445 = $agg$result + 12 | 0;
     HEAP32[$445 >> 2] = 0;
     $446 = $agg$result + 16 | 0;
     HEAP32[$446 >> 2] = 0;
     $447 = $agg$result + 20 | 0;
     HEAP32[$447 >> 2] = 0;
     __THREW__ = 0;
     $448 = invoke_ii(67, 24) | 0;
     $449 = __THREW__;
     __THREW__ = 0;
     do if ($449 & 1) {
      $463 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i297$index = $463;
      $lpad$phi$i297$index112 = tempRet0;
     } else {
      HEAP32[$446 >> 2] = $448;
      HEAP32[$445 >> 2] = $448;
      HEAP32[$447 >> 2] = $448 + 24;
      $452 = $13 + 24 | 0;
      $$01$i$i289 = $13;
      $453 = $448;
      do {
       if (!$453) $458 = 0; else {
        __THREW__ = 0;
        invoke_vii(40, $453 | 0, $$01$i$i289 | 0);
        $455 = __THREW__;
        __THREW__ = 0;
        if ($455 & 1) {
         label = 230;
         break;
        }
        $458 = HEAP32[$446 >> 2] | 0;
       }
       $453 = $458 + 12 | 0;
       HEAP32[$446 >> 2] = $453;
       $$01$i$i289 = $$01$i$i289 + 12 | 0;
      } while (($$01$i$i289 | 0) != ($452 | 0));
      if ((label | 0) == 230) {
       $461 = ___cxa_find_matching_catch() | 0;
       $lpad$phi$i297$index = $461;
       $lpad$phi$i297$index112 = tempRet0;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13 + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
      STACKTOP = sp;
      return;
     } while (0);
     $465 = HEAP32[$445 >> 2] | 0;
     if ($465) {
      $467 = HEAP32[$446 >> 2] | 0;
      if (($467 | 0) == ($465 | 0)) $473 = $465; else {
       $470 = $467;
       do {
        $469 = $470 + -12 | 0;
        HEAP32[$446 >> 2] = $469;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($469);
        $470 = HEAP32[$446 >> 2] | 0;
       } while (($470 | 0) != ($465 | 0));
       $473 = HEAP32[$445 >> 2] | 0;
      }
      __ZdlPv($473);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
     $$12 = $lpad$phi$i297$index;
     $$1221 = $lpad$phi$i297$index112;
    }
   }
   if ((label | 0) == 238) {
    $475 = ___cxa_find_matching_catch() | 0;
    $476 = tempRet0;
    if (($13 | 0) == ($$037 | 0)) {
     $$12 = $475;
     $$1221 = $476;
    } else {
     $479 = $$037;
     do {
      $479 = $479 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($479);
     } while (($479 | 0) != ($13 | 0));
     $$12 = $475;
     $$1221 = $476;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$12;
   $$2534 = $$1221;
   ___resumeException($$25 | 0);
   break;
  }
 case 13:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1448, 9);
   __THREW__ = 0;
   invoke_viii(3, $14 | 0, 1464, 3);
   $482 = __THREW__;
   __THREW__ = 0;
   if ($482 & 1) {
    $$036 = $14;
    label = 258;
   } else {
    $484 = $14 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $484 | 0, 1472, 1);
    $485 = __THREW__;
    __THREW__ = 0;
    if ($485 & 1) {
     $$036 = $484;
     label = 258;
    } else {
     $487 = $agg$result + 12 | 0;
     HEAP32[$487 >> 2] = 0;
     $488 = $agg$result + 16 | 0;
     HEAP32[$488 >> 2] = 0;
     $489 = $agg$result + 20 | 0;
     HEAP32[$489 >> 2] = 0;
     __THREW__ = 0;
     $490 = invoke_ii(67, 24) | 0;
     $491 = __THREW__;
     __THREW__ = 0;
     do if ($491 & 1) {
      $505 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i320$index = $505;
      $lpad$phi$i320$index117 = tempRet0;
     } else {
      HEAP32[$488 >> 2] = $490;
      HEAP32[$487 >> 2] = $490;
      HEAP32[$489 >> 2] = $490 + 24;
      $494 = $14 + 24 | 0;
      $$01$i$i312 = $14;
      $495 = $490;
      do {
       if (!$495) $500 = 0; else {
        __THREW__ = 0;
        invoke_vii(40, $495 | 0, $$01$i$i312 | 0);
        $497 = __THREW__;
        __THREW__ = 0;
        if ($497 & 1) {
         label = 250;
         break;
        }
        $500 = HEAP32[$488 >> 2] | 0;
       }
       $495 = $500 + 12 | 0;
       HEAP32[$488 >> 2] = $495;
       $$01$i$i312 = $$01$i$i312 + 12 | 0;
      } while (($$01$i$i312 | 0) != ($494 | 0));
      if ((label | 0) == 250) {
       $503 = ___cxa_find_matching_catch() | 0;
       $lpad$phi$i320$index = $503;
       $lpad$phi$i320$index117 = tempRet0;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14 + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
      STACKTOP = sp;
      return;
     } while (0);
     $507 = HEAP32[$487 >> 2] | 0;
     if ($507) {
      $509 = HEAP32[$488 >> 2] | 0;
      if (($509 | 0) == ($507 | 0)) $515 = $507; else {
       $512 = $509;
       do {
        $511 = $512 + -12 | 0;
        HEAP32[$488 >> 2] = $511;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($511);
        $512 = HEAP32[$488 >> 2] | 0;
       } while (($512 | 0) != ($507 | 0));
       $515 = HEAP32[$487 >> 2] | 0;
      }
      __ZdlPv($515);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
     $$13 = $lpad$phi$i320$index;
     $$1322 = $lpad$phi$i320$index117;
    }
   }
   if ((label | 0) == 258) {
    $517 = ___cxa_find_matching_catch() | 0;
    $518 = tempRet0;
    if (($14 | 0) == ($$036 | 0)) {
     $$13 = $517;
     $$1322 = $518;
    } else {
     $521 = $$036;
     do {
      $521 = $521 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($521);
     } while (($521 | 0) != ($14 | 0));
     $$13 = $517;
     $$1322 = $518;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$13;
   $$2534 = $$1322;
   ___resumeException($$25 | 0);
   break;
  }
 case 14:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1480, 6);
   __THREW__ = 0;
   invoke_viii(3, $15 | 0, 1336, 1);
   $524 = __THREW__;
   __THREW__ = 0;
   if ($524 & 1) {
    $555 = ___cxa_find_matching_catch() | 0;
    $$14 = $555;
    $$sink787$index127 = tempRet0;
   } else {
    $526 = $agg$result + 12 | 0;
    HEAP32[$526 >> 2] = 0;
    $527 = $agg$result + 16 | 0;
    HEAP32[$527 >> 2] = 0;
    $528 = $agg$result + 20 | 0;
    HEAP32[$528 >> 2] = 0;
    __THREW__ = 0;
    $529 = invoke_ii(67, 12) | 0;
    $530 = __THREW__;
    __THREW__ = 0;
    do if ($530 & 1) {
     $544 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i342$index = $544;
     $lpad$phi$i342$index122 = tempRet0;
    } else {
     HEAP32[$527 >> 2] = $529;
     HEAP32[$526 >> 2] = $529;
     HEAP32[$528 >> 2] = $529 + 12;
     $533 = $15 + 12 | 0;
     $$01$i$i334 = $15;
     $534 = $529;
     do {
      if (!$534) $539 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $534 | 0, $$01$i$i334 | 0);
       $536 = __THREW__;
       __THREW__ = 0;
       if ($536 & 1) {
        label = 269;
        break;
       }
       $539 = HEAP32[$527 >> 2] | 0;
      }
      $534 = $539 + 12 | 0;
      HEAP32[$527 >> 2] = $534;
      $$01$i$i334 = $$01$i$i334 + 12 | 0;
     } while (($$01$i$i334 | 0) != ($533 | 0));
     if ((label | 0) == 269) {
      $542 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i342$index = $542;
      $lpad$phi$i342$index122 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
     STACKTOP = sp;
     return;
    } while (0);
    $546 = HEAP32[$526 >> 2] | 0;
    if ($546) {
     $548 = HEAP32[$527 >> 2] | 0;
     if (($548 | 0) == ($546 | 0)) $554 = $546; else {
      $551 = $548;
      do {
       $550 = $551 + -12 | 0;
       HEAP32[$527 >> 2] = $550;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($550);
       $551 = HEAP32[$527 >> 2] | 0;
      } while (($551 | 0) != ($546 | 0));
      $554 = HEAP32[$526 >> 2] | 0;
     }
     __ZdlPv($554);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
    $$14 = $lpad$phi$i342$index;
    $$sink787$index127 = $lpad$phi$i342$index122;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$14;
   $$2534 = $$sink787$index127;
   ___resumeException($$25 | 0);
   break;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1352, 5);
   __THREW__ = 0;
   invoke_viii(3, $3 | 0, 1336, 1);
   $110 = __THREW__;
   __THREW__ = 0;
   if ($110 & 1) {
    $141 = ___cxa_find_matching_catch() | 0;
    $$2 = $141;
    $$sink$index17 = tempRet0;
   } else {
    $112 = $agg$result + 12 | 0;
    HEAP32[$112 >> 2] = 0;
    $113 = $agg$result + 16 | 0;
    HEAP32[$113 >> 2] = 0;
    $114 = $agg$result + 20 | 0;
    HEAP32[$114 >> 2] = 0;
    __THREW__ = 0;
    $115 = invoke_ii(67, 12) | 0;
    $116 = __THREW__;
    __THREW__ = 0;
    do if ($116 & 1) {
     $130 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i76$index = $130;
     $lpad$phi$i76$index12 = tempRet0;
    } else {
     HEAP32[$113 >> 2] = $115;
     HEAP32[$112 >> 2] = $115;
     HEAP32[$114 >> 2] = $115 + 12;
     $119 = $3 + 12 | 0;
     $$01$i$i68 = $3;
     $120 = $115;
     do {
      if (!$120) $125 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $120 | 0, $$01$i$i68 | 0);
       $122 = __THREW__;
       __THREW__ = 0;
       if ($122 & 1) {
        label = 49;
        break;
       }
       $125 = HEAP32[$113 >> 2] | 0;
      }
      $120 = $125 + 12 | 0;
      HEAP32[$113 >> 2] = $120;
      $$01$i$i68 = $$01$i$i68 + 12 | 0;
     } while (($$01$i$i68 | 0) != ($119 | 0));
     if ((label | 0) == 49) {
      $128 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i76$index = $128;
      $lpad$phi$i76$index12 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
     STACKTOP = sp;
     return;
    } while (0);
    $132 = HEAP32[$112 >> 2] | 0;
    if ($132) {
     $134 = HEAP32[$113 >> 2] | 0;
     if (($134 | 0) == ($132 | 0)) $140 = $132; else {
      $137 = $134;
      do {
       $136 = $137 + -12 | 0;
       HEAP32[$113 >> 2] = $136;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($136);
       $137 = HEAP32[$113 >> 2] | 0;
      } while (($137 | 0) != ($132 | 0));
      $140 = HEAP32[$112 >> 2] | 0;
     }
     __ZdlPv($140);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
    $$2 = $lpad$phi$i76$index;
    $$sink$index17 = $lpad$phi$i76$index12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$2;
   $$2534 = $$sink$index17;
   ___resumeException($$25 | 0);
   break;
  }
 case 15:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1488, 12);
   __THREW__ = 0;
   invoke_viii(3, $16 | 0, 1464, 3);
   $557 = __THREW__;
   __THREW__ = 0;
   if ($557 & 1) {
    $588 = ___cxa_find_matching_catch() | 0;
    $$15 = $588;
    $$sink788$index137 = tempRet0;
   } else {
    $559 = $agg$result + 12 | 0;
    HEAP32[$559 >> 2] = 0;
    $560 = $agg$result + 16 | 0;
    HEAP32[$560 >> 2] = 0;
    $561 = $agg$result + 20 | 0;
    HEAP32[$561 >> 2] = 0;
    __THREW__ = 0;
    $562 = invoke_ii(67, 12) | 0;
    $563 = __THREW__;
    __THREW__ = 0;
    do if ($563 & 1) {
     $577 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i364$index = $577;
     $lpad$phi$i364$index132 = tempRet0;
    } else {
     HEAP32[$560 >> 2] = $562;
     HEAP32[$559 >> 2] = $562;
     HEAP32[$561 >> 2] = $562 + 12;
     $566 = $16 + 12 | 0;
     $$01$i$i356 = $16;
     $567 = $562;
     do {
      if (!$567) $572 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $567 | 0, $$01$i$i356 | 0);
       $569 = __THREW__;
       __THREW__ = 0;
       if ($569 & 1) {
        label = 287;
        break;
       }
       $572 = HEAP32[$560 >> 2] | 0;
      }
      $567 = $572 + 12 | 0;
      HEAP32[$560 >> 2] = $567;
      $$01$i$i356 = $$01$i$i356 + 12 | 0;
     } while (($$01$i$i356 | 0) != ($566 | 0));
     if ((label | 0) == 287) {
      $575 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i364$index = $575;
      $lpad$phi$i364$index132 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
     STACKTOP = sp;
     return;
    } while (0);
    $579 = HEAP32[$559 >> 2] | 0;
    if ($579) {
     $581 = HEAP32[$560 >> 2] | 0;
     if (($581 | 0) == ($579 | 0)) $587 = $579; else {
      $584 = $581;
      do {
       $583 = $584 + -12 | 0;
       HEAP32[$560 >> 2] = $583;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($583);
       $584 = HEAP32[$560 >> 2] | 0;
      } while (($584 | 0) != ($579 | 0));
      $587 = HEAP32[$559 >> 2] | 0;
     }
     __ZdlPv($587);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
    $$15 = $lpad$phi$i364$index;
    $$sink788$index137 = $lpad$phi$i364$index132;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$15;
   $$2534 = $$sink788$index137;
   ___resumeException($$25 | 0);
   break;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1504, 9);
   __THREW__ = 0;
   invoke_viii(3, $17 | 0, 1520, 3);
   $590 = __THREW__;
   __THREW__ = 0;
   if ($590 & 1) {
    $621 = ___cxa_find_matching_catch() | 0;
    $$16 = $621;
    $$sink789$index147 = tempRet0;
   } else {
    $592 = $agg$result + 12 | 0;
    HEAP32[$592 >> 2] = 0;
    $593 = $agg$result + 16 | 0;
    HEAP32[$593 >> 2] = 0;
    $594 = $agg$result + 20 | 0;
    HEAP32[$594 >> 2] = 0;
    __THREW__ = 0;
    $595 = invoke_ii(67, 12) | 0;
    $596 = __THREW__;
    __THREW__ = 0;
    do if ($596 & 1) {
     $610 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i386$index = $610;
     $lpad$phi$i386$index142 = tempRet0;
    } else {
     HEAP32[$593 >> 2] = $595;
     HEAP32[$592 >> 2] = $595;
     HEAP32[$594 >> 2] = $595 + 12;
     $599 = $17 + 12 | 0;
     $$01$i$i378 = $17;
     $600 = $595;
     do {
      if (!$600) $605 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $600 | 0, $$01$i$i378 | 0);
       $602 = __THREW__;
       __THREW__ = 0;
       if ($602 & 1) {
        label = 305;
        break;
       }
       $605 = HEAP32[$593 >> 2] | 0;
      }
      $600 = $605 + 12 | 0;
      HEAP32[$593 >> 2] = $600;
      $$01$i$i378 = $$01$i$i378 + 12 | 0;
     } while (($$01$i$i378 | 0) != ($599 | 0));
     if ((label | 0) == 305) {
      $608 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i386$index = $608;
      $lpad$phi$i386$index142 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
     STACKTOP = sp;
     return;
    } while (0);
    $612 = HEAP32[$592 >> 2] | 0;
    if ($612) {
     $614 = HEAP32[$593 >> 2] | 0;
     if (($614 | 0) == ($612 | 0)) $620 = $612; else {
      $617 = $614;
      do {
       $616 = $617 + -12 | 0;
       HEAP32[$593 >> 2] = $616;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($616);
       $617 = HEAP32[$593 >> 2] | 0;
      } while (($617 | 0) != ($612 | 0));
      $620 = HEAP32[$592 >> 2] | 0;
     }
     __ZdlPv($620);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
    $$16 = $lpad$phi$i386$index;
    $$sink789$index147 = $lpad$phi$i386$index142;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$16;
   $$2534 = $$sink789$index147;
   ___resumeException($$25 | 0);
   break;
  }
 case 17:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1528, 4);
   __THREW__ = 0;
   invoke_viii(3, $18 | 0, 1344, 1);
   $623 = __THREW__;
   __THREW__ = 0;
   if ($623 & 1) {
    $654 = ___cxa_find_matching_catch() | 0;
    $$17 = $654;
    $$sink790$index157 = tempRet0;
   } else {
    $625 = $agg$result + 12 | 0;
    HEAP32[$625 >> 2] = 0;
    $626 = $agg$result + 16 | 0;
    HEAP32[$626 >> 2] = 0;
    $627 = $agg$result + 20 | 0;
    HEAP32[$627 >> 2] = 0;
    __THREW__ = 0;
    $628 = invoke_ii(67, 12) | 0;
    $629 = __THREW__;
    __THREW__ = 0;
    do if ($629 & 1) {
     $643 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i408$index = $643;
     $lpad$phi$i408$index152 = tempRet0;
    } else {
     HEAP32[$626 >> 2] = $628;
     HEAP32[$625 >> 2] = $628;
     HEAP32[$627 >> 2] = $628 + 12;
     $632 = $18 + 12 | 0;
     $$01$i$i400 = $18;
     $633 = $628;
     do {
      if (!$633) $638 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $633 | 0, $$01$i$i400 | 0);
       $635 = __THREW__;
       __THREW__ = 0;
       if ($635 & 1) {
        label = 323;
        break;
       }
       $638 = HEAP32[$626 >> 2] | 0;
      }
      $633 = $638 + 12 | 0;
      HEAP32[$626 >> 2] = $633;
      $$01$i$i400 = $$01$i$i400 + 12 | 0;
     } while (($$01$i$i400 | 0) != ($632 | 0));
     if ((label | 0) == 323) {
      $641 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i408$index = $641;
      $lpad$phi$i408$index152 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($18);
     STACKTOP = sp;
     return;
    } while (0);
    $645 = HEAP32[$625 >> 2] | 0;
    if ($645) {
     $647 = HEAP32[$626 >> 2] | 0;
     if (($647 | 0) == ($645 | 0)) $653 = $645; else {
      $650 = $647;
      do {
       $649 = $650 + -12 | 0;
       HEAP32[$626 >> 2] = $649;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($649);
       $650 = HEAP32[$626 >> 2] | 0;
      } while (($650 | 0) != ($645 | 0));
      $653 = HEAP32[$625 >> 2] | 0;
     }
     __ZdlPv($653);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($18);
    $$17 = $lpad$phi$i408$index;
    $$sink790$index157 = $lpad$phi$i408$index152;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$17;
   $$2534 = $$sink790$index157;
   ___resumeException($$25 | 0);
   break;
  }
 case 4:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1368, 4);
   __THREW__ = 0;
   invoke_viii(3, $5 | 0, 1336, 1);
   $176 = __THREW__;
   __THREW__ = 0;
   if ($176 & 1) {
    $207 = ___cxa_find_matching_catch() | 0;
    $$4 = $207;
    $$sink779$index37 = tempRet0;
   } else {
    $178 = $agg$result + 12 | 0;
    HEAP32[$178 >> 2] = 0;
    $179 = $agg$result + 16 | 0;
    HEAP32[$179 >> 2] = 0;
    $180 = $agg$result + 20 | 0;
    HEAP32[$180 >> 2] = 0;
    __THREW__ = 0;
    $181 = invoke_ii(67, 12) | 0;
    $182 = __THREW__;
    __THREW__ = 0;
    do if ($182 & 1) {
     $196 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i120$index = $196;
     $lpad$phi$i120$index32 = tempRet0;
    } else {
     HEAP32[$179 >> 2] = $181;
     HEAP32[$178 >> 2] = $181;
     HEAP32[$180 >> 2] = $181 + 12;
     $185 = $5 + 12 | 0;
     $$01$i$i112 = $5;
     $186 = $181;
     do {
      if (!$186) $191 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $186 | 0, $$01$i$i112 | 0);
       $188 = __THREW__;
       __THREW__ = 0;
       if ($188 & 1) {
        label = 85;
        break;
       }
       $191 = HEAP32[$179 >> 2] | 0;
      }
      $186 = $191 + 12 | 0;
      HEAP32[$179 >> 2] = $186;
      $$01$i$i112 = $$01$i$i112 + 12 | 0;
     } while (($$01$i$i112 | 0) != ($185 | 0));
     if ((label | 0) == 85) {
      $194 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i120$index = $194;
      $lpad$phi$i120$index32 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
     STACKTOP = sp;
     return;
    } while (0);
    $198 = HEAP32[$178 >> 2] | 0;
    if ($198) {
     $200 = HEAP32[$179 >> 2] | 0;
     if (($200 | 0) == ($198 | 0)) $206 = $198; else {
      $203 = $200;
      do {
       $202 = $203 + -12 | 0;
       HEAP32[$179 >> 2] = $202;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($202);
       $203 = HEAP32[$179 >> 2] | 0;
      } while (($203 | 0) != ($198 | 0));
      $206 = HEAP32[$178 >> 2] | 0;
     }
     __ZdlPv($206);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
    $$4 = $lpad$phi$i120$index;
    $$sink779$index37 = $lpad$phi$i120$index32;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$4;
   $$2534 = $$sink779$index37;
   ___resumeException($$25 | 0);
   break;
  }
 case 3:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1360, 4);
   __THREW__ = 0;
   invoke_viii(3, $4 | 0, 1336, 1);
   $143 = __THREW__;
   __THREW__ = 0;
   if ($143 & 1) {
    $174 = ___cxa_find_matching_catch() | 0;
    $$3 = $174;
    $$sink778$index27 = tempRet0;
   } else {
    $145 = $agg$result + 12 | 0;
    HEAP32[$145 >> 2] = 0;
    $146 = $agg$result + 16 | 0;
    HEAP32[$146 >> 2] = 0;
    $147 = $agg$result + 20 | 0;
    HEAP32[$147 >> 2] = 0;
    __THREW__ = 0;
    $148 = invoke_ii(67, 12) | 0;
    $149 = __THREW__;
    __THREW__ = 0;
    do if ($149 & 1) {
     $163 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i98$index = $163;
     $lpad$phi$i98$index22 = tempRet0;
    } else {
     HEAP32[$146 >> 2] = $148;
     HEAP32[$145 >> 2] = $148;
     HEAP32[$147 >> 2] = $148 + 12;
     $152 = $4 + 12 | 0;
     $$01$i$i90 = $4;
     $153 = $148;
     do {
      if (!$153) $158 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $153 | 0, $$01$i$i90 | 0);
       $155 = __THREW__;
       __THREW__ = 0;
       if ($155 & 1) {
        label = 67;
        break;
       }
       $158 = HEAP32[$146 >> 2] | 0;
      }
      $153 = $158 + 12 | 0;
      HEAP32[$146 >> 2] = $153;
      $$01$i$i90 = $$01$i$i90 + 12 | 0;
     } while (($$01$i$i90 | 0) != ($152 | 0));
     if ((label | 0) == 67) {
      $161 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i98$index = $161;
      $lpad$phi$i98$index22 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
     STACKTOP = sp;
     return;
    } while (0);
    $165 = HEAP32[$145 >> 2] | 0;
    if ($165) {
     $167 = HEAP32[$146 >> 2] | 0;
     if (($167 | 0) == ($165 | 0)) $173 = $165; else {
      $170 = $167;
      do {
       $169 = $170 + -12 | 0;
       HEAP32[$146 >> 2] = $169;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($169);
       $170 = HEAP32[$146 >> 2] | 0;
      } while (($170 | 0) != ($165 | 0));
      $173 = HEAP32[$145 >> 2] | 0;
     }
     __ZdlPv($173);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
    $$3 = $lpad$phi$i98$index;
    $$sink778$index27 = $lpad$phi$i98$index22;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$3;
   $$2534 = $$sink778$index27;
   ___resumeException($$25 | 0);
   break;
  }
 case 10:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1416, 4);
   __THREW__ = 0;
   invoke_viii(3, $11 | 0, 1336, 1);
   $374 = __THREW__;
   __THREW__ = 0;
   if ($374 & 1) {
    $405 = ___cxa_find_matching_catch() | 0;
    $$10 = $405;
    $$sink785$index97 = tempRet0;
   } else {
    $376 = $agg$result + 12 | 0;
    HEAP32[$376 >> 2] = 0;
    $377 = $agg$result + 16 | 0;
    HEAP32[$377 >> 2] = 0;
    $378 = $agg$result + 20 | 0;
    HEAP32[$378 >> 2] = 0;
    __THREW__ = 0;
    $379 = invoke_ii(67, 12) | 0;
    $380 = __THREW__;
    __THREW__ = 0;
    do if ($380 & 1) {
     $394 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i252$index = $394;
     $lpad$phi$i252$index92 = tempRet0;
    } else {
     HEAP32[$377 >> 2] = $379;
     HEAP32[$376 >> 2] = $379;
     HEAP32[$378 >> 2] = $379 + 12;
     $383 = $11 + 12 | 0;
     $$01$i$i244 = $11;
     $384 = $379;
     do {
      if (!$384) $389 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $384 | 0, $$01$i$i244 | 0);
       $386 = __THREW__;
       __THREW__ = 0;
       if ($386 & 1) {
        label = 193;
        break;
       }
       $389 = HEAP32[$377 >> 2] | 0;
      }
      $384 = $389 + 12 | 0;
      HEAP32[$377 >> 2] = $384;
      $$01$i$i244 = $$01$i$i244 + 12 | 0;
     } while (($$01$i$i244 | 0) != ($383 | 0));
     if ((label | 0) == 193) {
      $392 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i252$index = $392;
      $lpad$phi$i252$index92 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
     STACKTOP = sp;
     return;
    } while (0);
    $396 = HEAP32[$376 >> 2] | 0;
    if ($396) {
     $398 = HEAP32[$377 >> 2] | 0;
     if (($398 | 0) == ($396 | 0)) $404 = $396; else {
      $401 = $398;
      do {
       $400 = $401 + -12 | 0;
       HEAP32[$377 >> 2] = $400;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($400);
       $401 = HEAP32[$377 >> 2] | 0;
      } while (($401 | 0) != ($396 | 0));
      $404 = HEAP32[$376 >> 2] | 0;
     }
     __ZdlPv($404);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
    $$10 = $lpad$phi$i252$index;
    $$sink785$index97 = $lpad$phi$i252$index92;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$10;
   $$2534 = $$sink785$index97;
   ___resumeException($$25 | 0);
   break;
  }
 case 9:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1408, 4);
   __THREW__ = 0;
   invoke_viii(3, $10 | 0, 1336, 1);
   $341 = __THREW__;
   __THREW__ = 0;
   if ($341 & 1) {
    $372 = ___cxa_find_matching_catch() | 0;
    $$9 = $372;
    $$sink784$index87 = tempRet0;
   } else {
    $343 = $agg$result + 12 | 0;
    HEAP32[$343 >> 2] = 0;
    $344 = $agg$result + 16 | 0;
    HEAP32[$344 >> 2] = 0;
    $345 = $agg$result + 20 | 0;
    HEAP32[$345 >> 2] = 0;
    __THREW__ = 0;
    $346 = invoke_ii(67, 12) | 0;
    $347 = __THREW__;
    __THREW__ = 0;
    do if ($347 & 1) {
     $361 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i230$index = $361;
     $lpad$phi$i230$index82 = tempRet0;
    } else {
     HEAP32[$344 >> 2] = $346;
     HEAP32[$343 >> 2] = $346;
     HEAP32[$345 >> 2] = $346 + 12;
     $350 = $10 + 12 | 0;
     $$01$i$i222 = $10;
     $351 = $346;
     do {
      if (!$351) $356 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $351 | 0, $$01$i$i222 | 0);
       $353 = __THREW__;
       __THREW__ = 0;
       if ($353 & 1) {
        label = 175;
        break;
       }
       $356 = HEAP32[$344 >> 2] | 0;
      }
      $351 = $356 + 12 | 0;
      HEAP32[$344 >> 2] = $351;
      $$01$i$i222 = $$01$i$i222 + 12 | 0;
     } while (($$01$i$i222 | 0) != ($350 | 0));
     if ((label | 0) == 175) {
      $359 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i230$index = $359;
      $lpad$phi$i230$index82 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
     STACKTOP = sp;
     return;
    } while (0);
    $363 = HEAP32[$343 >> 2] | 0;
    if ($363) {
     $365 = HEAP32[$344 >> 2] | 0;
     if (($365 | 0) == ($363 | 0)) $371 = $363; else {
      $368 = $365;
      do {
       $367 = $368 + -12 | 0;
       HEAP32[$344 >> 2] = $367;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($367);
       $368 = HEAP32[$344 >> 2] | 0;
      } while (($368 | 0) != ($363 | 0));
      $371 = HEAP32[$343 >> 2] | 0;
     }
     __ZdlPv($371);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
    $$9 = $lpad$phi$i230$index;
    $$sink784$index87 = $lpad$phi$i230$index82;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$9;
   $$2534 = $$sink784$index87;
   ___resumeException($$25 | 0);
   break;
  }
 case 6:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1384, 3);
   __THREW__ = 0;
   invoke_viii(3, $7 | 0, 1336, 1);
   $242 = __THREW__;
   __THREW__ = 0;
   if ($242 & 1) {
    $273 = ___cxa_find_matching_catch() | 0;
    $$6 = $273;
    $$sink781$index57 = tempRet0;
   } else {
    $244 = $agg$result + 12 | 0;
    HEAP32[$244 >> 2] = 0;
    $245 = $agg$result + 16 | 0;
    HEAP32[$245 >> 2] = 0;
    $246 = $agg$result + 20 | 0;
    HEAP32[$246 >> 2] = 0;
    __THREW__ = 0;
    $247 = invoke_ii(67, 12) | 0;
    $248 = __THREW__;
    __THREW__ = 0;
    do if ($248 & 1) {
     $262 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i164$index = $262;
     $lpad$phi$i164$index52 = tempRet0;
    } else {
     HEAP32[$245 >> 2] = $247;
     HEAP32[$244 >> 2] = $247;
     HEAP32[$246 >> 2] = $247 + 12;
     $251 = $7 + 12 | 0;
     $$01$i$i156 = $7;
     $252 = $247;
     do {
      if (!$252) $257 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $252 | 0, $$01$i$i156 | 0);
       $254 = __THREW__;
       __THREW__ = 0;
       if ($254 & 1) {
        label = 121;
        break;
       }
       $257 = HEAP32[$245 >> 2] | 0;
      }
      $252 = $257 + 12 | 0;
      HEAP32[$245 >> 2] = $252;
      $$01$i$i156 = $$01$i$i156 + 12 | 0;
     } while (($$01$i$i156 | 0) != ($251 | 0));
     if ((label | 0) == 121) {
      $260 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i164$index = $260;
      $lpad$phi$i164$index52 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
     STACKTOP = sp;
     return;
    } while (0);
    $264 = HEAP32[$244 >> 2] | 0;
    if ($264) {
     $266 = HEAP32[$245 >> 2] | 0;
     if (($266 | 0) == ($264 | 0)) $272 = $264; else {
      $269 = $266;
      do {
       $268 = $269 + -12 | 0;
       HEAP32[$245 >> 2] = $268;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($268);
       $269 = HEAP32[$245 >> 2] | 0;
      } while (($269 | 0) != ($264 | 0));
      $272 = HEAP32[$244 >> 2] | 0;
     }
     __ZdlPv($272);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
    $$6 = $lpad$phi$i164$index;
    $$sink781$index57 = $lpad$phi$i164$index52;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$6;
   $$2534 = $$sink781$index57;
   ___resumeException($$25 | 0);
   break;
  }
 case 22:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1584, 6);
   __THREW__ = 0;
   invoke_viii(3, $23 | 0, 1592, 1);
   $788 = __THREW__;
   __THREW__ = 0;
   if ($788 & 1) {
    $$02 = $23;
    label = 422;
   } else {
    $790 = $23 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $790 | 0, 1600, 1);
    $791 = __THREW__;
    __THREW__ = 0;
    if ($791 & 1) {
     $$02 = $790;
     label = 422;
    } else {
     $793 = $agg$result + 12 | 0;
     HEAP32[$793 >> 2] = 0;
     $794 = $agg$result + 16 | 0;
     HEAP32[$794 >> 2] = 0;
     $795 = $agg$result + 20 | 0;
     HEAP32[$795 >> 2] = 0;
     __THREW__ = 0;
     $796 = invoke_ii(67, 24) | 0;
     $797 = __THREW__;
     __THREW__ = 0;
     do if ($797 & 1) {
      $811 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i519$index = $811;
      $lpad$phi$i519$index202 = tempRet0;
     } else {
      HEAP32[$794 >> 2] = $796;
      HEAP32[$793 >> 2] = $796;
      HEAP32[$795 >> 2] = $796 + 24;
      $800 = $23 + 24 | 0;
      $$01$i$i511 = $23;
      $801 = $796;
      do {
       if (!$801) $806 = 0; else {
        __THREW__ = 0;
        invoke_vii(40, $801 | 0, $$01$i$i511 | 0);
        $803 = __THREW__;
        __THREW__ = 0;
        if ($803 & 1) {
         label = 414;
         break;
        }
        $806 = HEAP32[$794 >> 2] | 0;
       }
       $801 = $806 + 12 | 0;
       HEAP32[$794 >> 2] = $801;
       $$01$i$i511 = $$01$i$i511 + 12 | 0;
      } while (($$01$i$i511 | 0) != ($800 | 0));
      if ((label | 0) == 414) {
       $809 = ___cxa_find_matching_catch() | 0;
       $lpad$phi$i519$index = $809;
       $lpad$phi$i519$index202 = tempRet0;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23 + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23);
      STACKTOP = sp;
      return;
     } while (0);
     $813 = HEAP32[$793 >> 2] | 0;
     if ($813) {
      $815 = HEAP32[$794 >> 2] | 0;
      if (($815 | 0) == ($813 | 0)) $821 = $813; else {
       $818 = $815;
       do {
        $817 = $818 + -12 | 0;
        HEAP32[$794 >> 2] = $817;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($817);
        $818 = HEAP32[$794 >> 2] | 0;
       } while (($818 | 0) != ($813 | 0));
       $821 = HEAP32[$793 >> 2] | 0;
      }
      __ZdlPv($821);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23);
     $$22 = $lpad$phi$i519$index;
     $$2231 = $lpad$phi$i519$index202;
    }
   }
   if ((label | 0) == 422) {
    $823 = ___cxa_find_matching_catch() | 0;
    $824 = tempRet0;
    if (($23 | 0) == ($$02 | 0)) {
     $$22 = $823;
     $$2231 = $824;
    } else {
     $827 = $$02;
     do {
      $827 = $827 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($827);
     } while (($827 | 0) != ($23 | 0));
     $$22 = $823;
     $$2231 = $824;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$22;
   $$2534 = $$2231;
   ___resumeException($$25 | 0);
   break;
  }
 case 23:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1608, 5);
   __THREW__ = 0;
   invoke_viii(3, $24 | 0, 1336, 1);
   $830 = __THREW__;
   __THREW__ = 0;
   if ($830 & 1) {
    $861 = ___cxa_find_matching_catch() | 0;
    $$23 = $861;
    $$sink795$index212 = tempRet0;
   } else {
    $832 = $agg$result + 12 | 0;
    HEAP32[$832 >> 2] = 0;
    $833 = $agg$result + 16 | 0;
    HEAP32[$833 >> 2] = 0;
    $834 = $agg$result + 20 | 0;
    HEAP32[$834 >> 2] = 0;
    __THREW__ = 0;
    $835 = invoke_ii(67, 12) | 0;
    $836 = __THREW__;
    __THREW__ = 0;
    do if ($836 & 1) {
     $850 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i541$index = $850;
     $lpad$phi$i541$index207 = tempRet0;
    } else {
     HEAP32[$833 >> 2] = $835;
     HEAP32[$832 >> 2] = $835;
     HEAP32[$834 >> 2] = $835 + 12;
     $839 = $24 + 12 | 0;
     $$01$i$i533 = $24;
     $840 = $835;
     do {
      if (!$840) $845 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $840 | 0, $$01$i$i533 | 0);
       $842 = __THREW__;
       __THREW__ = 0;
       if ($842 & 1) {
        label = 433;
        break;
       }
       $845 = HEAP32[$833 >> 2] | 0;
      }
      $840 = $845 + 12 | 0;
      HEAP32[$833 >> 2] = $840;
      $$01$i$i533 = $$01$i$i533 + 12 | 0;
     } while (($$01$i$i533 | 0) != ($839 | 0));
     if ((label | 0) == 433) {
      $848 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i541$index = $848;
      $lpad$phi$i541$index207 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($24);
     STACKTOP = sp;
     return;
    } while (0);
    $852 = HEAP32[$832 >> 2] | 0;
    if ($852) {
     $854 = HEAP32[$833 >> 2] | 0;
     if (($854 | 0) == ($852 | 0)) $860 = $852; else {
      $857 = $854;
      do {
       $856 = $857 + -12 | 0;
       HEAP32[$833 >> 2] = $856;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($856);
       $857 = HEAP32[$833 >> 2] | 0;
      } while (($857 | 0) != ($852 | 0));
      $860 = HEAP32[$832 >> 2] | 0;
     }
     __ZdlPv($860);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($24);
    $$23 = $lpad$phi$i541$index;
    $$sink795$index212 = $lpad$phi$i541$index207;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$23;
   $$2534 = $$sink795$index212;
   ___resumeException($$25 | 0);
   break;
  }
 case 24:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 1616, 6);
   __THREW__ = 0;
   invoke_viii(3, $25 | 0, 1336, 1);
   $863 = __THREW__;
   __THREW__ = 0;
   if ($863 & 1) {
    $894 = ___cxa_find_matching_catch() | 0;
    $$24 = $894;
    $$sink796$index222 = tempRet0;
   } else {
    $865 = $agg$result + 12 | 0;
    HEAP32[$865 >> 2] = 0;
    $866 = $agg$result + 16 | 0;
    HEAP32[$866 >> 2] = 0;
    $867 = $agg$result + 20 | 0;
    HEAP32[$867 >> 2] = 0;
    __THREW__ = 0;
    $868 = invoke_ii(67, 12) | 0;
    $869 = __THREW__;
    __THREW__ = 0;
    do if ($869 & 1) {
     $883 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i563$index = $883;
     $lpad$phi$i563$index217 = tempRet0;
    } else {
     HEAP32[$866 >> 2] = $868;
     HEAP32[$865 >> 2] = $868;
     HEAP32[$867 >> 2] = $868 + 12;
     $872 = $25 + 12 | 0;
     $$01$i$i555 = $25;
     $873 = $868;
     do {
      if (!$873) $878 = 0; else {
       __THREW__ = 0;
       invoke_vii(40, $873 | 0, $$01$i$i555 | 0);
       $875 = __THREW__;
       __THREW__ = 0;
       if ($875 & 1) {
        label = 451;
        break;
       }
       $878 = HEAP32[$866 >> 2] | 0;
      }
      $873 = $878 + 12 | 0;
      HEAP32[$866 >> 2] = $873;
      $$01$i$i555 = $$01$i$i555 + 12 | 0;
     } while (($$01$i$i555 | 0) != ($872 | 0));
     if ((label | 0) == 451) {
      $881 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i563$index = $881;
      $lpad$phi$i563$index217 = tempRet0;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
     STACKTOP = sp;
     return;
    } while (0);
    $885 = HEAP32[$865 >> 2] | 0;
    if ($885) {
     $887 = HEAP32[$866 >> 2] | 0;
     if (($887 | 0) == ($885 | 0)) $893 = $885; else {
      $890 = $887;
      do {
       $889 = $890 + -12 | 0;
       HEAP32[$866 >> 2] = $889;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($889);
       $890 = HEAP32[$866 >> 2] | 0;
      } while (($890 | 0) != ($885 | 0));
      $893 = HEAP32[$865 >> 2] | 0;
     }
     __ZdlPv($893);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
    $$24 = $lpad$phi$i563$index;
    $$sink796$index222 = $lpad$phi$i563$index217;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
   $$25 = $$24;
   $$2534 = $$sink796$index222;
   ___resumeException($$25 | 0);
   break;
  }
 default:
  {
   $897 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 1624, 47) | 0, $builtin) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $897 + (HEAP32[(HEAP32[$897 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $902 = invoke_iii(22, $0 | 0, 45800) | 0;
   $903 = __THREW__;
   __THREW__ = 0;
   if ($903 & 1) {
    $911 = ___cxa_find_matching_catch() | 0;
    $912 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($911 | 0);
   }
   __THREW__ = 0;
   $908 = invoke_iii(HEAP32[(HEAP32[$902 >> 2] | 0) + 28 >> 2] | 0, $902 | 0, 10) | 0;
   $909 = __THREW__;
   __THREW__ = 0;
   if ($909 & 1) {
    $911 = ___cxa_find_matching_catch() | 0;
    $912 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($911 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($897, $908) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($897) | 0;
    _abort();
   }
  }
 } while (0);
}

function __ZL15static_analysisP3ASTbRKNSt3__13setIPK10IdentifierNS1_4lessIS5_EENS1_9allocatorIS5_EEEE($agg$result, $ast_, $in_object, $vars) {
 $agg$result = $agg$result | 0;
 $ast_ = $ast_ | 0;
 $in_object = $in_object | 0;
 $vars = $vars | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i132 = 0, $$0$i$i$i$i$i$i190 = 0, $$0$i$i$i$i$i105 = 0, $$0$i$i$i$i$i134 = 0, $$0$i$i$i$i$i169 = 0, $$0$i$i$i$i$i192 = 0, $$0$i$i$i$i$i82 = 0, $$0$i$i$i$i107 = 0, $$0$i$i$i$i115 = 0, $$0$i$i$i$i142 = 0, $$0$i$i$i$i171 = 0, $$0$i$i$i$i96 = 0, $$0$i$i$i117 = 0, $$0$i$i$i144 = 0, $$0$i$i$i97 = 0, $$0$i$i65 = 0, $$0$i$i73 = 0, $$0$ph5$i$i$i = 0, $$0$ph5$i$i$i$i = 0, $$0$ph5$i$i$i$i129 = 0, $$0$ph5$i$i$i$i187 = 0, $$0$ph5$i$i$i161 = 0, $$0$ph7$i$i$i = 0, $$0$ph7$i$i$i$i = 0, $$0$ph7$i$i$i$i123 = 0, $$0$ph7$i$i$i$i181 = 0, $$0$ph7$i$i$i155 = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i136 = 0, $$01$i$i$i$i$i194 = 0, $$01$i$i$i$i109 = 0, $$01$i$i$i$i173 = 0, $$01$i$i$i119 = 0, $$01$i$i$i146 = 0, $$01$ph6$i$in$i$i = 0, $$01$ph6$i$in$i$i$i = 0, $$01$ph6$i$in$i$i$i124 = 0, $$01$ph6$i$in$i$i$i182 = 0, $$01$ph6$i$in$i$i156 = 0, $$013$i$in$i$i = 0, $$013$i$in$i$i$i = 0, $$013$i$in$i$i$i126 = 0, $$013$i$in$i$i$i184 = 0, $$013$i$in$i$i158 = 0, $$014 = 0, $$016 = 0, $$018 = 0, $$02 = 0, $$0230 = 0, $$04229 = 0, $$1 = 0, $$15 = 0, $$2 = 0, $$26 = 0, $$3 = 0, $$37 = 0, $$4 = 0, $$48 = 0, $$5 = 0, $$59 = 0, $$610239 = 0, $$6240 = 0, $$711243 = 0, $$7244 = 0, $$812250 = 0, $$8251 = 0, $$9 = 0, $$913 = 0, $$byval_copy34 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $107 = 0, $109 = 0, $11 = 0, $113 = 0, $114 = 0, $117 = 0, $118 = 0, $12 = 0, $122 = 0, $126 = 0, $128 = 0, $13 = 0, $134 = 0, $136 = 0, $14 = 0, $142 = 0, $144 = 0, $148 = 0, $149 = 0, $15 = 0, $152 = 0, $153 = 0, $156 = 0, $157 = 0, $16 = 0, $160 = 0, $164 = 0, $166 = 0, $17 = 0, $170 = 0, $171 = 0, $174 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $187 = 0, $188 = 0, $19 = 0, $192 = 0, $196 = 0, $199 = 0, $2 = 0, $20 = 0, $203 = 0, $205 = 0, $208 = 0, $21 = 0, $212 = 0, $213 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $23 = 0, $233 = 0, $239 = 0, $24 = 0, $240 = 0, $248 = 0, $249 = 0, $25 = 0, $257 = 0, $258 = 0, $26 = 0, $261 = 0, $263 = 0, $264 = 0, $266 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $272 = 0, $274 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $281 = 0, $283 = 0, $286 = 0, $287 = 0, $29 = 0, $291 = 0, $292 = 0, $297 = 0, $299 = 0, $3 = 0, $30 = 0, $302 = 0, $305 = 0, $308 = 0, $31 = 0, $310 = 0, $313 = 0, $314 = 0, $318 = 0, $319 = 0, $324 = 0, $326 = 0, $329 = 0, $33 = 0, $332 = 0, $336 = 0, $338 = 0, $339 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $354 = 0, $361 = 0, $363 = 0, $366 = 0, $37 = 0, $375 = 0, $376 = 0, $379 = 0, $389 = 0, $39 = 0, $393 = 0, $395 = 0, $4 = 0, $401 = 0, $403 = 0, $407 = 0, $408 = 0, $411 = 0, $412 = 0, $415 = 0, $417 = 0, $420 = 0, $421 = 0, $422 = 0, $425 = 0, $426 = 0, $429 = 0, $431 = 0, $434 = 0, $438 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $446 = 0, $447 = 0, $448 = 0, $451 = 0, $452 = 0, $456 = 0, $46 = 0, $460 = 0, $463 = 0, $467 = 0, $469 = 0, $472 = 0, $476 = 0, $477 = 0, $479 = 0, $48 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $486 = 0, $488 = 0, $490 = 0, $492 = 0, $496 = 0, $498 = 0, $5 = 0, $50 = 0, $501 = 0, $505 = 0, $507 = 0, $509 = 0, $51 = 0, $511 = 0, $512 = 0, $516 = 0, $518 = 0, $522 = 0, $524 = 0, $527 = 0, $528 = 0, $53 = 0, $535 = 0, $542 = 0, $544 = 0, $547 = 0, $555 = 0, $557 = 0, $560 = 0, $564 = 0, $565 = 0, $568 = 0, $58 = 0, $580 = 0, $582 = 0, $584 = 0, $586 = 0, $587 = 0, $589 = 0, $592 = 0, $593 = 0, $595 = 0, $598 = 0, $6 = 0, $60 = 0, $600 = 0, $606 = 0, $607 = 0, $609 = 0, $610 = 0, $612 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $625 = 0, $626 = 0, $630 = 0, $634 = 0, $637 = 0, $64 = 0, $641 = 0, $643 = 0, $646 = 0, $650 = 0, $651 = 0, $653 = 0, $654 = 0, $658 = 0, $66 = 0, $660 = 0, $666 = 0, $668 = 0, $672 = 0, $674 = 0, $68 = 0, $681 = 0, $688 = 0, $69 = 0, $690 = 0, $693 = 0, $7 = 0, $702 = 0, $704 = 0, $709 = 0, $711 = 0, $712 = 0, $715 = 0, $716 = 0, $719 = 0, $72 = 0, $720 = 0, $725 = 0, $726 = 0, $729 = 0, $73 = 0, $731 = 0, $732 = 0, $734 = 0, $736 = 0, $737 = 0, $738 = 0, $740 = 0, $742 = 0, $743 = 0, $745 = 0, $746 = 0, $749 = 0, $75 = 0, $751 = 0, $752 = 0, $754 = 0, $756 = 0, $757 = 0, $758 = 0, $760 = 0, $762 = 0, $763 = 0, $764 = 0, $768 = 0, $770 = 0, $774 = 0, $775 = 0, $778 = 0, $78 = 0, $780 = 0, $782 = 0, $783 = 0, $785 = 0, $792 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $808 = 0, $809 = 0, $817 = 0, $818 = 0, $82 = 0, $821 = 0, $823 = 0, $824 = 0, $826 = 0, $828 = 0, $829 = 0, $830 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $838 = 0, $839 = 0, $84 = 0, $841 = 0, $842 = 0, $848 = 0, $85 = 0, $850 = 0, $851 = 0, $856 = 0, $857 = 0, $859 = 0, $860 = 0, $861 = 0, $863 = 0, $865 = 0, $867 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $873 = 0, $874 = 0, $875 = 0, $880 = 0, $881 = 0, $884 = 0, $886 = 0, $889 = 0, $893 = 0, $9 = 0, $92 = 0, $93 = 0, $95 = 0, $99 = 0, $__nd$0$in$i$i = 0, $__nd$0$in$i$i71 = 0, $__parent$i = 0, $__parent$i$i$i = 0, $__parent$i$i$i162 = 0, $__parent$i$i$i98 = 0, $__parent$i69 = 0, $ast_vars = 0, $eh$lpad$body$index8Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body112$index24Z2D = 0, $eh$lpad$body112$indexZ2D = 0, $fv = 0, $fvs = 0, $id = 0, $lpad$phi288$index = 0, $lpad$phi288$index29 = 0, $lpad$phi324$index = 0, $lpad$phi324$index19 = 0, $new_vars = 0, $new_vars21 = 0, $new_vars35 = 0, $params = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 $$byval_copy34 = sp + 416 | 0;
 $__parent$i$i$i162 = sp + 412 | 0;
 $0 = sp + 408 | 0;
 $__parent$i$i$i98 = sp + 404 | 0;
 $1 = sp + 400 | 0;
 $2 = sp + 392 | 0;
 $3 = sp + 384 | 0;
 $__parent$i69 = sp + 380 | 0;
 $__parent$i = sp + 376 | 0;
 $4 = sp + 372 | 0;
 $__parent$i$i$i = sp + 368 | 0;
 $5 = sp + 364 | 0;
 $6 = sp + 352 | 0;
 $7 = sp + 340 | 0;
 $8 = sp + 328 | 0;
 $9 = sp + 316 | 0;
 $10 = sp + 304 | 0;
 $11 = sp + 292 | 0;
 $12 = sp + 280 | 0;
 $13 = sp + 268 | 0;
 $14 = sp + 256 | 0;
 $new_vars = sp + 244 | 0;
 $params = sp + 232 | 0;
 $15 = sp + 220 | 0;
 $fv = sp + 208 | 0;
 $16 = sp + 196 | 0;
 $17 = sp + 184 | 0;
 $ast_vars = sp + 172 | 0;
 $new_vars21 = sp + 160 | 0;
 $fvs = sp + 148 | 0;
 $18 = sp + 136 | 0;
 $19 = sp + 124 | 0;
 $20 = sp + 112 | 0;
 $21 = sp + 100 | 0;
 $new_vars35 = sp + 88 | 0;
 $22 = sp + 76 | 0;
 $23 = sp + 64 | 0;
 $24 = sp + 52 | 0;
 $25 = sp + 40 | 0;
 $26 = sp + 28 | 0;
 $27 = sp + 16 | 0;
 $28 = sp + 4 | 0;
 $id = sp;
 $29 = $agg$result + 4 | 0;
 HEAP32[$29 >> 2] = 0;
 $30 = $agg$result + 8 | 0;
 HEAP32[$30 >> 2] = 0;
 $31 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $31;
 L1 : do if (!$ast_) label = 327; else {
  $33 = ___dynamic_cast($ast_, 34e3, 34248, 0) | 0;
  L3 : do if (!$33) {
   $75 = ___dynamic_cast($ast_, 34e3, 34304, 0) | 0;
   if ($75) {
    $78 = HEAP32[$75 + 48 >> 2] | 0;
    $80 = HEAP32[$75 + 52 >> 2] | 0;
    if (($78 | 0) == ($80 | 0)) break;
    $82 = $8 + 4 | 0;
    $84 = $78;
    while (1) {
     __THREW__ = 0;
     invoke_viiii(16, $8 | 0, HEAP32[$84 >> 2] | 0, $in_object | 0, $vars | 0);
     $85 = __THREW__;
     __THREW__ = 0;
     if ($85 & 1) {
      label = 12;
      break;
     }
     __THREW__ = 0;
     invoke_vii(57, $agg$result | 0, $8 | 0);
     $87 = __THREW__;
     __THREW__ = 0;
     if ($87 & 1) break;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($8, HEAP32[$82 >> 2] | 0);
     $84 = $84 + 4 | 0;
     if (($84 | 0) == ($80 | 0)) break L3;
    }
    if ((label | 0) == 12) {
     $62 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index8Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $62;
     break L1;
    }
    $92 = ___cxa_find_matching_catch() | 0;
    $93 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($8, HEAP32[$82 >> 2] | 0);
    $$9 = $92;
    $$913 = $93;
    $893 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
    ___resumeException($$9 | 0);
   }
   $95 = ___dynamic_cast($ast_, 34e3, 34352, 0) | 0;
   if ($95) {
    __THREW__ = 0;
    invoke_viiii(16, $9 | 0, HEAP32[$95 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
    $99 = __THREW__;
    __THREW__ = 0;
    if ($99 & 1) {
     label = 14;
     break L1;
    }
    __THREW__ = 0;
    invoke_vii(57, $agg$result | 0, $9 | 0);
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     $113 = ___cxa_find_matching_catch() | 0;
     $114 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($9, HEAP32[$9 + 4 >> 2] | 0);
     $$9 = $113;
     $$913 = $114;
     $893 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
     ___resumeException($$9 | 0);
    }
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($9, HEAP32[$9 + 4 >> 2] | 0);
    __THREW__ = 0;
    invoke_viiii(16, $10 | 0, HEAP32[$95 + 56 >> 2] | 0, $in_object | 0, $vars | 0);
    $107 = __THREW__;
    __THREW__ = 0;
    if ($107 & 1) {
     label = 14;
     break L1;
    }
    __THREW__ = 0;
    invoke_vii(57, $agg$result | 0, $10 | 0);
    $109 = __THREW__;
    __THREW__ = 0;
    if (!($109 & 1)) {
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($10, HEAP32[$10 + 4 >> 2] | 0);
     break;
    }
    $117 = ___cxa_find_matching_catch() | 0;
    $118 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($10, HEAP32[$10 + 4 >> 2] | 0);
    $$9 = $117;
    $$913 = $118;
    $893 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
    ___resumeException($$9 | 0);
   }
   if (!(___dynamic_cast($ast_, 34e3, 34144, 0) | 0)) {
    $122 = ___dynamic_cast($ast_, 34e3, 34440, 0) | 0;
    if ($122) {
     __THREW__ = 0;
     invoke_viiii(16, $11 | 0, HEAP32[$122 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
     $126 = __THREW__;
     __THREW__ = 0;
     if ($126 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(57, $agg$result | 0, $11 | 0);
     $128 = __THREW__;
     __THREW__ = 0;
     if ($128 & 1) {
      $148 = ___cxa_find_matching_catch() | 0;
      $149 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($11, HEAP32[$11 + 4 >> 2] | 0);
      $$9 = $148;
      $$913 = $149;
      $893 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
      ___resumeException($$9 | 0);
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($11, HEAP32[$11 + 4 >> 2] | 0);
     __THREW__ = 0;
     invoke_viiii(16, $12 | 0, HEAP32[$122 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(57, $agg$result | 0, $12 | 0);
     $136 = __THREW__;
     __THREW__ = 0;
     if ($136 & 1) {
      $152 = ___cxa_find_matching_catch() | 0;
      $153 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($12, HEAP32[$12 + 4 >> 2] | 0);
      $$9 = $152;
      $$913 = $153;
      $893 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
      ___resumeException($$9 | 0);
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($12, HEAP32[$12 + 4 >> 2] | 0);
     __THREW__ = 0;
     invoke_viiii(16, $13 | 0, HEAP32[$122 + 56 >> 2] | 0, $in_object | 0, $vars | 0);
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(57, $agg$result | 0, $13 | 0);
     $144 = __THREW__;
     __THREW__ = 0;
     if (!($144 & 1)) {
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($13, HEAP32[$13 + 4 >> 2] | 0);
      break;
     }
     $156 = ___cxa_find_matching_catch() | 0;
     $157 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($13, HEAP32[$13 + 4 >> 2] | 0);
     $$9 = $156;
     $$913 = $157;
     $893 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
     ___resumeException($$9 | 0);
    }
    $160 = ___dynamic_cast($ast_, 34e3, 34488, 0) | 0;
    if ($160) {
     __THREW__ = 0;
     invoke_viiii(16, $14 | 0, HEAP32[$160 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
     $164 = __THREW__;
     __THREW__ = 0;
     if ($164 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(57, $agg$result | 0, $14 | 0);
     $166 = __THREW__;
     __THREW__ = 0;
     if (!($166 & 1)) {
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($14, HEAP32[$14 + 4 >> 2] | 0);
      break;
     }
     $170 = ___cxa_find_matching_catch() | 0;
     $171 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($14, HEAP32[$14 + 4 >> 2] | 0);
     $$9 = $170;
     $$913 = $171;
     $893 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
     ___resumeException($$9 | 0);
    }
    $174 = ___dynamic_cast($ast_, 34e3, 34528, 0) | 0;
    if ($174) {
     $176 = $new_vars + 4 | 0;
     HEAP32[$176 >> 2] = 0;
     $177 = $new_vars + 8 | 0;
     HEAP32[$177 >> 2] = 0;
     $178 = $new_vars + 4 | 0;
     HEAP32[$new_vars >> 2] = $178;
     $179 = HEAP32[$vars >> 2] | 0;
     $180 = $vars + 4 | 0;
     L74 : do if (($179 | 0) != ($180 | 0)) {
      $183 = $179;
      while (1) {
       $182 = $183 + 16 | 0;
       HEAP32[$5 >> 2] = $178;
       HEAP32[$$byval_copy34 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
       $184 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars, $$byval_copy34, $__parent$i$i$i, $182) | 0;
       if (!(HEAP32[$184 >> 2] | 0)) {
        __THREW__ = 0;
        $187 = invoke_ii(67, 20) | 0;
        $188 = __THREW__;
        __THREW__ = 0;
        if ($188 & 1) break;
        HEAP32[$187 + 16 >> 2] = HEAP32[$182 >> 2];
        $192 = HEAP32[$__parent$i$i$i >> 2] | 0;
        HEAP32[$187 >> 2] = 0;
        HEAP32[$187 + 4 >> 2] = 0;
        HEAP32[$187 + 8 >> 2] = $192;
        HEAP32[$184 >> 2] = $187;
        $196 = HEAP32[HEAP32[$new_vars >> 2] >> 2] | 0;
        if (!$196) $199 = $187; else {
         HEAP32[$new_vars >> 2] = $196;
         $199 = HEAP32[$184 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$176 >> 2] | 0, $199);
        HEAP32[$177 >> 2] = (HEAP32[$177 >> 2] | 0) + 1;
       }
       $203 = HEAP32[$183 + 4 >> 2] | 0;
       if (!$203) {
        $$0$i$i$i$i = $183;
        while (1) {
         $208 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$208 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
          $$01$i$i$i$i = $208;
          break;
         } else $$0$i$i$i$i = $208;
        }
       } else {
        $$0$i$i$i$i$i = $203;
        while (1) {
         $205 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
         if (!$205) {
          $$01$i$i$i$i = $$0$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i = $205;
        }
       }
       if (($$01$i$i$i$i | 0) == ($180 | 0)) break L74; else $183 = $$01$i$i$i$i;
      }
      $212 = ___cxa_find_matching_catch() | 0;
      $213 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$176 >> 2] | 0);
      $eh$lpad$body$index8Z2D = $213;
      $eh$lpad$body$indexZ2D = $212;
      break L1;
     } while (0);
     $215 = $params + 4 | 0;
     HEAP32[$215 >> 2] = 0;
     $216 = $params + 8 | 0;
     HEAP32[$216 >> 2] = 0;
     $217 = $params + 4 | 0;
     HEAP32[$params >> 2] = $217;
     $218 = $174 + 48 | 0;
     $219 = HEAP32[$218 >> 2] | 0;
     $220 = $174 + 52 | 0;
     $221 = HEAP32[$220 >> 2] | 0;
     L94 : do if (($219 | 0) == ($221 | 0)) label = 121; else {
      $224 = $219;
      $225 = 0;
      L96 : while (1) {
       $223 = HEAP32[$224 >> 2] | 0;
       $226 = ($225 | 0) == 0;
       do if ($226) label = 99; else {
        $$0$ph7$i$i$i = $217;
        $$01$ph6$i$in$i$i = $225;
        L99 : while (1) {
         $$013$i$in$i$i = $$01$ph6$i$in$i$i;
         while (1) {
          if ((HEAP32[$$013$i$in$i$i + 16 >> 2] | 0) >>> 0 >= $223 >>> 0) break;
          $233 = HEAP32[$$013$i$in$i$i + 4 >> 2] | 0;
          if (!$233) {
           $$0$ph5$i$i$i = $$0$ph7$i$i$i;
           break L99;
          } else $$013$i$in$i$i = $233;
         }
         $$01$ph6$i$in$i$i = HEAP32[$$013$i$in$i$i >> 2] | 0;
         if (!$$01$ph6$i$in$i$i) {
          $$0$ph5$i$i$i = $$013$i$in$i$i;
          break;
         } else $$0$ph7$i$i$i = $$013$i$in$i$i;
        }
        if (($$0$ph5$i$i$i | 0) != ($217 | 0)) if ($223 >>> 0 >= (HEAP32[$$0$ph5$i$i$i + 16 >> 2] | 0) >>> 0) break L96;
        if ($226) label = 99; else {
         $__nd$0$in$i$i = $225;
         while (1) {
          $281 = HEAP32[$__nd$0$in$i$i + 16 >> 2] | 0;
          if ($223 >>> 0 < $281 >>> 0) {
           $283 = HEAP32[$__nd$0$in$i$i >> 2] | 0;
           if (!$283) {
            label = 94;
            break;
           } else {
            $__nd$0$in$i$i = $283;
            continue;
           }
          }
          if ($281 >>> 0 >= $223 >>> 0) {
           label = 98;
           break;
          }
          $286 = $__nd$0$in$i$i + 4 | 0;
          $287 = HEAP32[$286 >> 2] | 0;
          if (!$287) {
           label = 97;
           break;
          } else $__nd$0$in$i$i = $287;
         }
         if ((label | 0) == 94) {
          label = 0;
          HEAP32[$__parent$i >> 2] = $__nd$0$in$i$i;
          $$0$i$i65 = $__nd$0$in$i$i;
          $297 = $__nd$0$in$i$i;
          break;
         } else if ((label | 0) == 97) {
          label = 0;
          HEAP32[$__parent$i >> 2] = $__nd$0$in$i$i;
          $$0$i$i65 = $286;
          $297 = $__nd$0$in$i$i;
          break;
         } else if ((label | 0) == 98) {
          label = 0;
          HEAP32[$__parent$i >> 2] = $__nd$0$in$i$i;
          $$0$i$i65 = $__parent$i;
          $297 = $__nd$0$in$i$i;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 99) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $217;
        $$0$i$i65 = $217;
        $297 = $217;
       }
       if (!(HEAP32[$$0$i$i65 >> 2] | 0)) {
        __THREW__ = 0;
        $291 = invoke_ii(67, 20) | 0;
        $292 = __THREW__;
        __THREW__ = 0;
        if ($292 & 1) {
         label = 85;
         break;
        }
        HEAP32[$291 + 16 >> 2] = $223;
        HEAP32[$291 >> 2] = 0;
        HEAP32[$291 + 4 >> 2] = 0;
        HEAP32[$291 + 8 >> 2] = $297;
        HEAP32[$$0$i$i65 >> 2] = $291;
        $299 = HEAP32[HEAP32[$params >> 2] >> 2] | 0;
        if (!$299) $302 = $291; else {
         HEAP32[$params >> 2] = $299;
         $302 = HEAP32[$$0$i$i65 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$215 >> 2] | 0, $302);
        HEAP32[$216 >> 2] = (HEAP32[$216 >> 2] | 0) + 1;
       }
       $305 = HEAP32[$176 >> 2] | 0;
       do if (!$305) {
        HEAP32[$__parent$i69 >> 2] = $178;
        $$0$i$i73 = $178;
        $324 = $178;
       } else {
        $__nd$0$in$i$i71 = $305;
        while (1) {
         $308 = HEAP32[$__nd$0$in$i$i71 + 16 >> 2] | 0;
         if ($223 >>> 0 < $308 >>> 0) {
          $310 = HEAP32[$__nd$0$in$i$i71 >> 2] | 0;
          if (!$310) {
           label = 108;
           break;
          } else {
           $__nd$0$in$i$i71 = $310;
           continue;
          }
         }
         if ($308 >>> 0 >= $223 >>> 0) {
          label = 112;
          break;
         }
         $313 = $__nd$0$in$i$i71 + 4 | 0;
         $314 = HEAP32[$313 >> 2] | 0;
         if (!$314) {
          label = 111;
          break;
         } else $__nd$0$in$i$i71 = $314;
        }
        if ((label | 0) == 108) {
         label = 0;
         HEAP32[$__parent$i69 >> 2] = $__nd$0$in$i$i71;
         $$0$i$i73 = $__nd$0$in$i$i71;
         $324 = $__nd$0$in$i$i71;
         break;
        } else if ((label | 0) == 111) {
         label = 0;
         HEAP32[$__parent$i69 >> 2] = $__nd$0$in$i$i71;
         $$0$i$i73 = $313;
         $324 = $__nd$0$in$i$i71;
         break;
        } else if ((label | 0) == 112) {
         label = 0;
         HEAP32[$__parent$i69 >> 2] = $__nd$0$in$i$i71;
         $$0$i$i73 = $__parent$i69;
         $324 = $__nd$0$in$i$i71;
         break;
        }
       } while (0);
       if (!(HEAP32[$$0$i$i73 >> 2] | 0)) {
        __THREW__ = 0;
        $318 = invoke_ii(67, 20) | 0;
        $319 = __THREW__;
        __THREW__ = 0;
        if ($319 & 1) {
         label = 85;
         break;
        }
        HEAP32[$318 + 16 >> 2] = $223;
        HEAP32[$318 >> 2] = 0;
        HEAP32[$318 + 4 >> 2] = 0;
        HEAP32[$318 + 8 >> 2] = $324;
        HEAP32[$$0$i$i73 >> 2] = $318;
        $326 = HEAP32[HEAP32[$new_vars >> 2] >> 2] | 0;
        if (!$326) $329 = $318; else {
         HEAP32[$new_vars >> 2] = $326;
         $329 = HEAP32[$$0$i$i73 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$176 >> 2] | 0, $329);
        HEAP32[$177 >> 2] = (HEAP32[$177 >> 2] | 0) + 1;
       }
       $332 = $224 + 4 | 0;
       if (($332 | 0) == ($221 | 0)) {
        label = 121;
        break L94;
       }
       $224 = $332;
       $225 = HEAP32[$215 >> 2] | 0;
      }
      if ((label | 0) == 85) {
       $272 = ___cxa_find_matching_catch() | 0;
       $lpad$phi324$index = $272;
       $lpad$phi324$index19 = tempRet0;
       label = 87;
       break;
      }
      $239 = ___cxa_allocate_exception(40) | 0;
      HEAP32[$15 + 0 >> 2] = 0;
      HEAP32[$15 + 4 >> 2] = 0;
      HEAP32[$15 + 8 >> 2] = 0;
      $240 = HEAP8[$223 >> 0] | 0;
      if (!($240 & 1)) $248 = ($240 & 255) >>> 1; else $248 = HEAP32[$223 + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_viiii(14, $15 | 0, 36960, 30, $248 + 30 | 0);
      $249 = __THREW__;
      __THREW__ = 0;
      L157 : do if ($249 & 1) label = 88; else {
       if (!(HEAP8[$223 >> 0] & 1)) $257 = $223 + 1 | 0; else $257 = HEAP32[$223 + 8 >> 2] | 0;
       __THREW__ = 0;
       invoke_iiii(31, $15 | 0, $257 | 0, $248 | 0) | 0;
       $258 = __THREW__;
       __THREW__ = 0;
       if ($258 & 1) label = 88; else {
        __THREW__ = 0;
        invoke_vii(40, $239 | 0, $ast_ + 4 | 0);
        $261 = __THREW__;
        __THREW__ = 0;
        do if ($261 & 1) $$014 = 1; else {
         $263 = $239 + 12 | 0;
         $264 = $ast_ + 16 | 0;
         HEAP32[$263 + 0 >> 2] = HEAP32[$264 + 0 >> 2];
         HEAP32[$263 + 4 >> 2] = HEAP32[$264 + 4 >> 2];
         HEAP32[$263 + 8 >> 2] = HEAP32[$264 + 8 >> 2];
         HEAP32[$263 + 12 >> 2] = HEAP32[$264 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $239 + 28 | 0, $15 | 0);
         $266 = __THREW__;
         __THREW__ = 0;
         if ($266 & 1) {
          $268 = ___cxa_find_matching_catch() | 0;
          $269 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($239);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
          $$0230 = $268;
          $$04229 = $269;
          break L157;
         }
         __THREW__ = 0;
         invoke_viii(4, $239 | 0, 48, 178);
         $270 = __THREW__;
         __THREW__ = 0;
         if ($270 & 1) {
          $$014 = 0;
          break;
         }
        } while (0);
        $278 = ___cxa_find_matching_catch() | 0;
        $279 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
        if ($$014) {
         $$0230 = $278;
         $$04229 = $279;
        } else {
         $$1 = $278;
         $$15 = $279;
         break L94;
        }
       }
      } while (0);
      if ((label | 0) == 88) {
       $276 = ___cxa_find_matching_catch() | 0;
       $277 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
       $$0230 = $276;
       $$04229 = $277;
      }
      ___cxa_free_exception($239 | 0);
      $$1 = $$0230;
      $$15 = $$04229;
     } while (0);
     do if ((label | 0) == 121) {
      __THREW__ = 0;
      invoke_viiii(16, $fv | 0, HEAP32[$174 + 60 >> 2] | 0, $in_object | 0, $new_vars | 0);
      $336 = __THREW__;
      __THREW__ = 0;
      if ($336 & 1) {
       $274 = ___cxa_find_matching_catch() | 0;
       $lpad$phi324$index = $274;
       $lpad$phi324$index19 = tempRet0;
       label = 87;
       break;
      }
      $338 = HEAP32[$218 >> 2] | 0;
      $339 = HEAP32[$220 >> 2] | 0;
      if (($338 | 0) != ($339 | 0)) {
       $341 = $fv + 4 | 0;
       $342 = $fv + 4 | 0;
       $343 = $fv + 8 | 0;
       $345 = $338;
       do {
        $344 = HEAP32[$345 >> 2] | 0;
        $346 = HEAP32[$341 >> 2] | 0;
        do if ($346) {
         $$0$ph7$i$i$i$i = $342;
         $$01$ph6$i$in$i$i$i = $346;
         L184 : while (1) {
          $$013$i$in$i$i$i = $$01$ph6$i$in$i$i$i;
          while (1) {
           if ((HEAP32[$$013$i$in$i$i$i + 16 >> 2] | 0) >>> 0 >= $344 >>> 0) break;
           $354 = HEAP32[$$013$i$in$i$i$i + 4 >> 2] | 0;
           if (!$354) {
            $$0$ph5$i$i$i$i = $$0$ph7$i$i$i$i;
            break L184;
           } else $$013$i$in$i$i$i = $354;
          }
          $$01$ph6$i$in$i$i$i = HEAP32[$$013$i$in$i$i$i >> 2] | 0;
          if (!$$01$ph6$i$in$i$i$i) {
           $$0$ph5$i$i$i$i = $$013$i$in$i$i$i;
           break;
          } else $$0$ph7$i$i$i$i = $$013$i$in$i$i$i;
         }
         if (($$0$ph5$i$i$i$i | 0) == ($342 | 0)) break;
         if ($344 >>> 0 < (HEAP32[$$0$ph5$i$i$i$i + 16 >> 2] | 0) >>> 0) break;
         $361 = HEAP32[$$0$ph5$i$i$i$i + 4 >> 2] | 0;
         if (!$361) {
          $$0$i$i$i$i$i82 = $$0$ph5$i$i$i$i;
          while (1) {
           $366 = HEAP32[$$0$i$i$i$i$i82 + 8 >> 2] | 0;
           if ((HEAP32[$366 >> 2] | 0) == ($$0$i$i$i$i$i82 | 0)) {
            $$01$i$i$i$i$i = $366;
            break;
           } else $$0$i$i$i$i$i82 = $366;
          }
         } else {
          $$0$i$i$i$i$i$i = $361;
          while (1) {
           $363 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
           if (!$363) {
            $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i = $363;
          }
         }
         if ((HEAP32[$fv >> 2] | 0) == ($$0$ph5$i$i$i$i | 0)) HEAP32[$fv >> 2] = $$01$i$i$i$i$i;
         HEAP32[$343 >> 2] = (HEAP32[$343 >> 2] | 0) + -1;
         __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($346, $$0$ph5$i$i$i$i);
         __ZdlPv($$0$ph5$i$i$i$i);
        } while (0);
        $345 = $345 + 4 | 0;
       } while (($345 | 0) != ($339 | 0));
      }
      __THREW__ = 0;
      invoke_vii(57, $agg$result | 0, $fv | 0);
      $379 = __THREW__;
      __THREW__ = 0;
      if ($379 & 1) {
       $375 = ___cxa_find_matching_catch() | 0;
       $376 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fv, HEAP32[$fv + 4 >> 2] | 0);
       $$1 = $375;
       $$15 = $376;
       break;
      } else {
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fv, HEAP32[$fv + 4 >> 2] | 0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($params, HEAP32[$215 >> 2] | 0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$176 >> 2] | 0);
       break L3;
      }
     } while (0);
     if ((label | 0) == 87) {
      $$1 = $lpad$phi324$index;
      $$15 = $lpad$phi324$index19;
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($params, HEAP32[$215 >> 2] | 0);
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$176 >> 2] | 0);
     $$9 = $$1;
     $$913 = $$15;
     $893 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
     ___resumeException($$9 | 0);
    }
    if (!(___dynamic_cast($ast_, 34e3, 34576, 0) | 0)) if (!(___dynamic_cast($ast_, 34e3, 34616, 0) | 0)) {
     $389 = ___dynamic_cast($ast_, 34e3, 34656, 0) | 0;
     if ($389) {
      __THREW__ = 0;
      invoke_viiii(16, $16 | 0, HEAP32[$389 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
      $393 = __THREW__;
      __THREW__ = 0;
      if ($393 & 1) {
       label = 14;
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(57, $agg$result | 0, $16 | 0);
      $395 = __THREW__;
      __THREW__ = 0;
      if ($395 & 1) {
       $407 = ___cxa_find_matching_catch() | 0;
       $408 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($16, HEAP32[$16 + 4 >> 2] | 0);
       $$9 = $407;
       $$913 = $408;
       $893 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
       ___resumeException($$9 | 0);
      }
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($16, HEAP32[$16 + 4 >> 2] | 0);
      __THREW__ = 0;
      invoke_viiii(16, $17 | 0, HEAP32[$389 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
      $401 = __THREW__;
      __THREW__ = 0;
      if ($401 & 1) {
       label = 14;
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(57, $agg$result | 0, $17 | 0);
      $403 = __THREW__;
      __THREW__ = 0;
      if (!($403 & 1)) {
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($17, HEAP32[$17 + 4 >> 2] | 0);
       break;
      }
      $411 = ___cxa_find_matching_catch() | 0;
      $412 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($17, HEAP32[$17 + 4 >> 2] | 0);
      $$9 = $411;
      $$913 = $412;
      $893 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
      ___resumeException($$9 | 0);
     }
     $415 = ___dynamic_cast($ast_, 34e3, 34016, 0) | 0;
     if ($415) {
      $417 = $ast_vars + 4 | 0;
      HEAP32[$417 >> 2] = 0;
      HEAP32[$ast_vars + 8 >> 2] = 0;
      HEAP32[$ast_vars >> 2] = $ast_vars + 4;
      $420 = $415 + 48 | 0;
      $421 = HEAP32[$420 >> 2] | 0;
      $422 = $415 + 52 | 0;
      L230 : do if (($421 | 0) == ($422 | 0)) label = 164; else {
       $425 = $421;
       while (1) {
        __THREW__ = 0;
        invoke_viii(10, $2 | 0, $ast_vars | 0, $425 + 16 | 0);
        $426 = __THREW__;
        __THREW__ = 0;
        if ($426 & 1) break;
        $429 = HEAP32[$425 + 4 >> 2] | 0;
        if (!$429) {
         $$0$i$i$i97 = $425;
         while (1) {
          $434 = HEAP32[$$0$i$i$i97 + 8 >> 2] | 0;
          if ((HEAP32[$434 >> 2] | 0) == ($$0$i$i$i97 | 0)) {
           $$01$i$i$i = $434;
           break;
          } else $$0$i$i$i97 = $434;
         }
        } else {
         $$0$i$i$i$i96 = $429;
         while (1) {
          $431 = HEAP32[$$0$i$i$i$i96 >> 2] | 0;
          if (!$431) {
           $$01$i$i$i = $$0$i$i$i$i96;
           break;
          } else $$0$i$i$i$i96 = $431;
         }
        }
        if (($$01$i$i$i | 0) == ($422 | 0)) {
         label = 164;
         break L230;
        } else $425 = $$01$i$i$i;
       }
       $438 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body112$index24Z2D = tempRet0;
       $eh$lpad$body112$indexZ2D = $438;
       label = 163;
      } while (0);
      L243 : do if ((label | 0) == 164) {
       $440 = $new_vars21 + 4 | 0;
       HEAP32[$440 >> 2] = 0;
       $441 = $new_vars21 + 8 | 0;
       HEAP32[$441 >> 2] = 0;
       $442 = $new_vars21 + 4 | 0;
       HEAP32[$new_vars21 >> 2] = $442;
       $443 = HEAP32[$vars >> 2] | 0;
       $444 = $vars + 4 | 0;
       L245 : do if (($443 | 0) != ($444 | 0)) {
        $447 = $443;
        while (1) {
         $446 = $447 + 16 | 0;
         HEAP32[$1 >> 2] = $442;
         HEAP32[$$byval_copy34 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
         $448 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars21, $$byval_copy34, $__parent$i$i$i98, $446) | 0;
         if (!(HEAP32[$448 >> 2] | 0)) {
          __THREW__ = 0;
          $451 = invoke_ii(67, 20) | 0;
          $452 = __THREW__;
          __THREW__ = 0;
          if ($452 & 1) break;
          HEAP32[$451 + 16 >> 2] = HEAP32[$446 >> 2];
          $456 = HEAP32[$__parent$i$i$i98 >> 2] | 0;
          HEAP32[$451 >> 2] = 0;
          HEAP32[$451 + 4 >> 2] = 0;
          HEAP32[$451 + 8 >> 2] = $456;
          HEAP32[$448 >> 2] = $451;
          $460 = HEAP32[HEAP32[$new_vars21 >> 2] >> 2] | 0;
          if (!$460) $463 = $451; else {
           HEAP32[$new_vars21 >> 2] = $460;
           $463 = HEAP32[$448 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$440 >> 2] | 0, $463);
          HEAP32[$441 >> 2] = (HEAP32[$441 >> 2] | 0) + 1;
         }
         $467 = HEAP32[$447 + 4 >> 2] | 0;
         if (!$467) {
          $$0$i$i$i$i107 = $447;
          while (1) {
           $472 = HEAP32[$$0$i$i$i$i107 + 8 >> 2] | 0;
           if ((HEAP32[$472 >> 2] | 0) == ($$0$i$i$i$i107 | 0)) {
            $$01$i$i$i$i109 = $472;
            break;
           } else $$0$i$i$i$i107 = $472;
          }
         } else {
          $$0$i$i$i$i$i105 = $467;
          while (1) {
           $469 = HEAP32[$$0$i$i$i$i$i105 >> 2] | 0;
           if (!$469) {
            $$01$i$i$i$i109 = $$0$i$i$i$i$i105;
            break;
           } else $$0$i$i$i$i$i105 = $469;
          }
         }
         if (($$01$i$i$i$i109 | 0) == ($444 | 0)) break L245; else $447 = $$01$i$i$i$i109;
        }
        $476 = ___cxa_find_matching_catch() | 0;
        $477 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$440 >> 2] | 0);
        $eh$lpad$body112$index24Z2D = $477;
        $eh$lpad$body112$indexZ2D = $476;
        label = 163;
        break L243;
       } while (0);
       __THREW__ = 0;
       invoke_vii(57, $new_vars21 | 0, $ast_vars | 0);
       $479 = __THREW__;
       __THREW__ = 0;
       if ($479 & 1) {
        $505 = ___cxa_find_matching_catch() | 0;
        $$3 = $505;
        $$37 = tempRet0;
       } else {
        $481 = $fvs + 4 | 0;
        HEAP32[$481 >> 2] = 0;
        $482 = $fvs + 8 | 0;
        HEAP32[$482 >> 2] = 0;
        $483 = $fvs + 4 | 0;
        HEAP32[$fvs >> 2] = $483;
        $484 = HEAP32[$420 >> 2] | 0;
        L267 : do if (($484 | 0) == ($422 | 0)) label = 192; else {
         $486 = $18 + 4 | 0;
         $488 = $484;
         while (1) {
          __THREW__ = 0;
          invoke_viiii(16, $18 | 0, HEAP32[$488 + 20 >> 2] | 0, $in_object | 0, $new_vars21 | 0);
          $490 = __THREW__;
          __THREW__ = 0;
          if ($490 & 1) {
           label = 188;
           break;
          }
          __THREW__ = 0;
          invoke_vii(57, $fvs | 0, $18 | 0);
          $492 = __THREW__;
          __THREW__ = 0;
          if ($492 & 1) {
           label = 191;
           break;
          }
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($18, HEAP32[$486 >> 2] | 0);
          $496 = HEAP32[$488 + 4 >> 2] | 0;
          if (!$496) {
           $$0$i$i$i117 = $488;
           while (1) {
            $501 = HEAP32[$$0$i$i$i117 + 8 >> 2] | 0;
            if ((HEAP32[$501 >> 2] | 0) == ($$0$i$i$i117 | 0)) {
             $$01$i$i$i119 = $501;
             break;
            } else $$0$i$i$i117 = $501;
           }
          } else {
           $$0$i$i$i$i115 = $496;
           while (1) {
            $498 = HEAP32[$$0$i$i$i$i115 >> 2] | 0;
            if (!$498) {
             $$01$i$i$i119 = $$0$i$i$i$i115;
             break;
            } else $$0$i$i$i$i115 = $498;
           }
          }
          if (($$01$i$i$i119 | 0) == ($422 | 0)) {
           label = 192;
           break L267;
          } else $488 = $$01$i$i$i119;
         }
         if ((label | 0) == 188) {
          $507 = ___cxa_find_matching_catch() | 0;
          $lpad$phi288$index = $507;
          $lpad$phi288$index29 = tempRet0;
          label = 190;
          break;
         } else if ((label | 0) == 191) {
          $511 = ___cxa_find_matching_catch() | 0;
          $512 = tempRet0;
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($18, HEAP32[$486 >> 2] | 0);
          $$2 = $511;
          $$26 = $512;
          break;
         }
        } while (0);
        L283 : do if ((label | 0) == 192) {
         __THREW__ = 0;
         invoke_viiii(16, $19 | 0, HEAP32[$415 + 60 >> 2] | 0, $in_object | 0, $new_vars21 | 0);
         $516 = __THREW__;
         __THREW__ = 0;
         do if (!($516 & 1)) {
          __THREW__ = 0;
          invoke_vii(57, $fvs | 0, $19 | 0);
          $518 = __THREW__;
          __THREW__ = 0;
          if ($518 & 1) {
           $564 = ___cxa_find_matching_catch() | 0;
           $565 = tempRet0;
           __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($19, HEAP32[$19 + 4 >> 2] | 0);
           $$2 = $564;
           $$26 = $565;
           break L283;
          }
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($19, HEAP32[$19 + 4 >> 2] | 0);
          $522 = HEAP32[$420 >> 2] | 0;
          if (($522 | 0) != ($422 | 0)) {
           $527 = $522;
           while (1) {
            $524 = HEAP32[$481 >> 2] | 0;
            do if ($524) {
             $528 = HEAP32[$527 + 16 >> 2] | 0;
             $$0$ph7$i$i$i$i123 = $483;
             $$01$ph6$i$in$i$i$i124 = $524;
             L295 : while (1) {
              $$013$i$in$i$i$i126 = $$01$ph6$i$in$i$i$i124;
              while (1) {
               if ((HEAP32[$$013$i$in$i$i$i126 + 16 >> 2] | 0) >>> 0 >= $528 >>> 0) break;
               $535 = HEAP32[$$013$i$in$i$i$i126 + 4 >> 2] | 0;
               if (!$535) {
                $$0$ph5$i$i$i$i129 = $$0$ph7$i$i$i$i123;
                break L295;
               } else $$013$i$in$i$i$i126 = $535;
              }
              $$01$ph6$i$in$i$i$i124 = HEAP32[$$013$i$in$i$i$i126 >> 2] | 0;
              if (!$$01$ph6$i$in$i$i$i124) {
               $$0$ph5$i$i$i$i129 = $$013$i$in$i$i$i126;
               break;
              } else $$0$ph7$i$i$i$i123 = $$013$i$in$i$i$i126;
             }
             if (($$0$ph5$i$i$i$i129 | 0) == ($483 | 0)) break;
             if ($528 >>> 0 < (HEAP32[$$0$ph5$i$i$i$i129 + 16 >> 2] | 0) >>> 0) break;
             $542 = HEAP32[$$0$ph5$i$i$i$i129 + 4 >> 2] | 0;
             if (!$542) {
              $$0$i$i$i$i$i134 = $$0$ph5$i$i$i$i129;
              while (1) {
               $547 = HEAP32[$$0$i$i$i$i$i134 + 8 >> 2] | 0;
               if ((HEAP32[$547 >> 2] | 0) == ($$0$i$i$i$i$i134 | 0)) {
                $$01$i$i$i$i$i136 = $547;
                break;
               } else $$0$i$i$i$i$i134 = $547;
              }
             } else {
              $$0$i$i$i$i$i$i132 = $542;
              while (1) {
               $544 = HEAP32[$$0$i$i$i$i$i$i132 >> 2] | 0;
               if (!$544) {
                $$01$i$i$i$i$i136 = $$0$i$i$i$i$i$i132;
                break;
               } else $$0$i$i$i$i$i$i132 = $544;
              }
             }
             if ((HEAP32[$fvs >> 2] | 0) == ($$0$ph5$i$i$i$i129 | 0)) HEAP32[$fvs >> 2] = $$01$i$i$i$i$i136;
             HEAP32[$482 >> 2] = (HEAP32[$482 >> 2] | 0) + -1;
             __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($524, $$0$ph5$i$i$i$i129);
             __ZdlPv($$0$ph5$i$i$i$i129);
            } while (0);
            $555 = HEAP32[$527 + 4 >> 2] | 0;
            if (!$555) {
             $$0$i$i$i144 = $527;
             while (1) {
              $560 = HEAP32[$$0$i$i$i144 + 8 >> 2] | 0;
              if ((HEAP32[$560 >> 2] | 0) == ($$0$i$i$i144 | 0)) {
               $$01$i$i$i146 = $560;
               break;
              } else $$0$i$i$i144 = $560;
             }
            } else {
             $$0$i$i$i$i142 = $555;
             while (1) {
              $557 = HEAP32[$$0$i$i$i$i142 >> 2] | 0;
              if (!$557) {
               $$01$i$i$i146 = $$0$i$i$i$i142;
               break;
              } else $$0$i$i$i$i142 = $557;
             }
            }
            if (($$01$i$i$i146 | 0) == ($422 | 0)) break; else $527 = $$01$i$i$i146;
           }
          }
          __THREW__ = 0;
          invoke_vii(57, $agg$result | 0, $fvs | 0);
          $568 = __THREW__;
          __THREW__ = 0;
          if ($568 & 1) break;
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fvs, HEAP32[$481 >> 2] | 0);
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$440 >> 2] | 0);
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($ast_vars, HEAP32[$417 >> 2] | 0);
          break L3;
         } while (0);
         $509 = ___cxa_find_matching_catch() | 0;
         $lpad$phi288$index = $509;
         $lpad$phi288$index29 = tempRet0;
         label = 190;
        } while (0);
        if ((label | 0) == 190) {
         $$2 = $lpad$phi288$index;
         $$26 = $lpad$phi288$index29;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fvs, HEAP32[$481 >> 2] | 0);
        $$3 = $$2;
        $$37 = $$26;
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$440 >> 2] | 0);
       $$4 = $$3;
       $$48 = $$37;
      } while (0);
      if ((label | 0) == 163) {
       $$4 = $eh$lpad$body112$indexZ2D;
       $$48 = $eh$lpad$body112$index24Z2D;
      }
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($ast_vars, HEAP32[$417 >> 2] | 0);
      $$9 = $$4;
      $$913 = $$48;
      $893 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
      ___resumeException($$9 | 0);
     }
     if (!(___dynamic_cast($ast_, 34e3, 34720, 0) | 0)) if (!(___dynamic_cast($ast_, 34e3, 34768, 0) | 0)) if (!(___dynamic_cast($ast_, 34e3, 34208, 0) | 0)) if (!(___dynamic_cast($ast_, 34e3, 34800, 0) | 0)) {
      $580 = ___dynamic_cast($ast_, 34e3, 34832, 0) | 0;
      if ($580) {
       $582 = $580 + 48 | 0;
       $584 = HEAP32[$580 + 52 >> 2] | 0;
       if (($584 | 0) == ($582 | 0)) break;
       $586 = $20 + 4 | 0;
       $587 = $21 + 4 | 0;
       $589 = $584;
       while (1) {
        $592 = HEAP32[$589 + 16 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(16, $20 | 0, HEAP32[$589 + 8 >> 2] | 0, $in_object | 0, $vars | 0);
        $593 = __THREW__;
        __THREW__ = 0;
        if ($593 & 1) {
         label = 11;
         break;
        }
        __THREW__ = 0;
        invoke_vii(57, $agg$result | 0, $20 | 0);
        $595 = __THREW__;
        __THREW__ = 0;
        if ($595 & 1) {
         label = 233;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($20, HEAP32[$586 >> 2] | 0);
        __THREW__ = 0;
        invoke_viiii(16, $21 | 0, $592 | 0, 1, $vars | 0);
        $598 = __THREW__;
        __THREW__ = 0;
        if ($598 & 1) {
         label = 11;
         break;
        }
        __THREW__ = 0;
        invoke_vii(57, $agg$result | 0, $21 | 0);
        $600 = __THREW__;
        __THREW__ = 0;
        if ($600 & 1) {
         label = 234;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($21, HEAP32[$587 >> 2] | 0);
        $589 = HEAP32[$589 + 4 >> 2] | 0;
        if (($589 | 0) == ($582 | 0)) break L3;
       }
       if ((label | 0) == 11) {
        $60 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body$index8Z2D = tempRet0;
        $eh$lpad$body$indexZ2D = $60;
        break L1;
       } else if ((label | 0) == 233) {
        $606 = ___cxa_find_matching_catch() | 0;
        $607 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($20, HEAP32[$586 >> 2] | 0);
        $$9 = $606;
        $$913 = $607;
        $893 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
        ___resumeException($$9 | 0);
       } else if ((label | 0) == 234) {
        $609 = ___cxa_find_matching_catch() | 0;
        $610 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($21, HEAP32[$587 >> 2] | 0);
        $$9 = $609;
        $$913 = $610;
        $893 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
        ___resumeException($$9 | 0);
       }
      }
      $612 = ___dynamic_cast($ast_, 34e3, 34960, 0) | 0;
      if ($612) {
       $614 = $new_vars35 + 4 | 0;
       HEAP32[$614 >> 2] = 0;
       $615 = $new_vars35 + 8 | 0;
       HEAP32[$615 >> 2] = 0;
       $616 = $new_vars35 + 4 | 0;
       HEAP32[$new_vars35 >> 2] = $616;
       $617 = HEAP32[$vars >> 2] | 0;
       $618 = $vars + 4 | 0;
       L357 : do if (($617 | 0) != ($618 | 0)) {
        $621 = $617;
        while (1) {
         $620 = $621 + 16 | 0;
         HEAP32[$0 >> 2] = $616;
         HEAP32[$$byval_copy34 + 0 >> 2] = HEAP32[$0 + 0 >> 2];
         $622 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars35, $$byval_copy34, $__parent$i$i$i162, $620) | 0;
         if (!(HEAP32[$622 >> 2] | 0)) {
          __THREW__ = 0;
          $625 = invoke_ii(67, 20) | 0;
          $626 = __THREW__;
          __THREW__ = 0;
          if ($626 & 1) break;
          HEAP32[$625 + 16 >> 2] = HEAP32[$620 >> 2];
          $630 = HEAP32[$__parent$i$i$i162 >> 2] | 0;
          HEAP32[$625 >> 2] = 0;
          HEAP32[$625 + 4 >> 2] = 0;
          HEAP32[$625 + 8 >> 2] = $630;
          HEAP32[$622 >> 2] = $625;
          $634 = HEAP32[HEAP32[$new_vars35 >> 2] >> 2] | 0;
          if (!$634) $637 = $625; else {
           HEAP32[$new_vars35 >> 2] = $634;
           $637 = HEAP32[$622 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$614 >> 2] | 0, $637);
          HEAP32[$615 >> 2] = (HEAP32[$615 >> 2] | 0) + 1;
         }
         $641 = HEAP32[$621 + 4 >> 2] | 0;
         if (!$641) {
          $$0$i$i$i$i171 = $621;
          while (1) {
           $646 = HEAP32[$$0$i$i$i$i171 + 8 >> 2] | 0;
           if ((HEAP32[$646 >> 2] | 0) == ($$0$i$i$i$i171 | 0)) {
            $$01$i$i$i$i173 = $646;
            break;
           } else $$0$i$i$i$i171 = $646;
          }
         } else {
          $$0$i$i$i$i$i169 = $641;
          while (1) {
           $643 = HEAP32[$$0$i$i$i$i$i169 >> 2] | 0;
           if (!$643) {
            $$01$i$i$i$i173 = $$0$i$i$i$i$i169;
            break;
           } else $$0$i$i$i$i$i169 = $643;
          }
         }
         if (($$01$i$i$i$i173 | 0) == ($618 | 0)) break L357; else $621 = $$01$i$i$i$i173;
        }
        $650 = ___cxa_find_matching_catch() | 0;
        $651 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$614 >> 2] | 0);
        $eh$lpad$body$index8Z2D = $651;
        $eh$lpad$body$indexZ2D = $650;
        break L1;
       } while (0);
       $653 = $612 + 56 | 0;
       __THREW__ = 0;
       invoke_viii(10, $$byval_copy34 | 0, $new_vars35 | 0, $653 | 0);
       $654 = __THREW__;
       __THREW__ = 0;
       do if ($654 & 1) label = 272; else {
        __THREW__ = 0;
        invoke_viiii(16, $22 | 0, HEAP32[$612 + 48 >> 2] | 0, 0, $new_vars35 | 0);
        $658 = __THREW__;
        __THREW__ = 0;
        if ($658 & 1) {
         label = 272;
         break;
        }
        __THREW__ = 0;
        invoke_vii(57, $agg$result | 0, $22 | 0);
        $660 = __THREW__;
        __THREW__ = 0;
        if ($660 & 1) {
         $711 = ___cxa_find_matching_catch() | 0;
         $712 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($22, HEAP32[$22 + 4 >> 2] | 0);
         $$5 = $711;
         $$59 = $712;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($22, HEAP32[$22 + 4 >> 2] | 0);
        __THREW__ = 0;
        invoke_viiii(16, $23 | 0, HEAP32[$612 + 52 >> 2] | 0, 1, $new_vars35 | 0);
        $666 = __THREW__;
        __THREW__ = 0;
        if ($666 & 1) {
         label = 272;
         break;
        }
        __THREW__ = 0;
        invoke_vii(57, $agg$result | 0, $23 | 0);
        $668 = __THREW__;
        __THREW__ = 0;
        if ($668 & 1) {
         $715 = ___cxa_find_matching_catch() | 0;
         $716 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($23, HEAP32[$23 + 4 >> 2] | 0);
         $$5 = $715;
         $$59 = $716;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($23, HEAP32[$23 + 4 >> 2] | 0);
        $672 = HEAP32[$29 >> 2] | 0;
        do if ($672) {
         $674 = HEAP32[$653 >> 2] | 0;
         $$0$ph7$i$i$i$i181 = $31;
         $$01$ph6$i$in$i$i$i182 = $672;
         L389 : while (1) {
          $$013$i$in$i$i$i184 = $$01$ph6$i$in$i$i$i182;
          while (1) {
           if ((HEAP32[$$013$i$in$i$i$i184 + 16 >> 2] | 0) >>> 0 >= $674 >>> 0) break;
           $681 = HEAP32[$$013$i$in$i$i$i184 + 4 >> 2] | 0;
           if (!$681) {
            $$0$ph5$i$i$i$i187 = $$0$ph7$i$i$i$i181;
            break L389;
           } else $$013$i$in$i$i$i184 = $681;
          }
          $$01$ph6$i$in$i$i$i182 = HEAP32[$$013$i$in$i$i$i184 >> 2] | 0;
          if (!$$01$ph6$i$in$i$i$i182) {
           $$0$ph5$i$i$i$i187 = $$013$i$in$i$i$i184;
           break;
          } else $$0$ph7$i$i$i$i181 = $$013$i$in$i$i$i184;
         }
         if (($$0$ph5$i$i$i$i187 | 0) == ($31 | 0)) break;
         if ($674 >>> 0 < (HEAP32[$$0$ph5$i$i$i$i187 + 16 >> 2] | 0) >>> 0) break;
         $688 = HEAP32[$$0$ph5$i$i$i$i187 + 4 >> 2] | 0;
         if (!$688) {
          $$0$i$i$i$i$i192 = $$0$ph5$i$i$i$i187;
          while (1) {
           $693 = HEAP32[$$0$i$i$i$i$i192 + 8 >> 2] | 0;
           if ((HEAP32[$693 >> 2] | 0) == ($$0$i$i$i$i$i192 | 0)) {
            $$01$i$i$i$i$i194 = $693;
            break;
           } else $$0$i$i$i$i$i192 = $693;
          }
         } else {
          $$0$i$i$i$i$i$i190 = $688;
          while (1) {
           $690 = HEAP32[$$0$i$i$i$i$i$i190 >> 2] | 0;
           if (!$690) {
            $$01$i$i$i$i$i194 = $$0$i$i$i$i$i$i190;
            break;
           } else $$0$i$i$i$i$i$i190 = $690;
          }
         }
         if ((HEAP32[$agg$result >> 2] | 0) == ($$0$ph5$i$i$i$i187 | 0)) HEAP32[$agg$result >> 2] = $$01$i$i$i$i$i194;
         HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + -1;
         __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($672, $$0$ph5$i$i$i$i187);
         __ZdlPv($$0$ph5$i$i$i$i187);
        } while (0);
        __THREW__ = 0;
        invoke_viiii(16, $24 | 0, HEAP32[$612 + 60 >> 2] | 0, $in_object | 0, $vars | 0);
        $702 = __THREW__;
        __THREW__ = 0;
        if ($702 & 1) {
         label = 272;
         break;
        }
        __THREW__ = 0;
        invoke_vii(57, $agg$result | 0, $24 | 0);
        $704 = __THREW__;
        __THREW__ = 0;
        if ($704 & 1) {
         $719 = ___cxa_find_matching_catch() | 0;
         $720 = tempRet0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($24, HEAP32[$24 + 4 >> 2] | 0);
         $$5 = $719;
         $$59 = $720;
         break;
        } else {
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($24, HEAP32[$24 + 4 >> 2] | 0);
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$614 >> 2] | 0);
         break L3;
        }
       } while (0);
       if ((label | 0) == 272) {
        $709 = ___cxa_find_matching_catch() | 0;
        $$5 = $709;
        $$59 = tempRet0;
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$614 >> 2] | 0);
       $$9 = $$5;
       $$913 = $$59;
       $893 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
       ___resumeException($$9 | 0);
      }
      if (___dynamic_cast($ast_, 34e3, 35016, 0) | 0) {
       if ($in_object) break;
       $725 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_viii(3, $25 | 0, 36992, 36);
       $726 = __THREW__;
       __THREW__ = 0;
       L421 : do if ($726 & 1) {
        $740 = ___cxa_find_matching_catch() | 0;
        $$610239 = tempRet0;
        $$6240 = $740;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $725 | 0, $ast_ + 4 | 0);
        $729 = __THREW__;
        __THREW__ = 0;
        do if ($729 & 1) $$018 = 1; else {
         $731 = $725 + 12 | 0;
         $732 = $ast_ + 16 | 0;
         HEAP32[$731 + 0 >> 2] = HEAP32[$732 + 0 >> 2];
         HEAP32[$731 + 4 >> 2] = HEAP32[$732 + 4 >> 2];
         HEAP32[$731 + 8 >> 2] = HEAP32[$732 + 8 >> 2];
         HEAP32[$731 + 12 >> 2] = HEAP32[$732 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $725 + 28 | 0, $25 | 0);
         $734 = __THREW__;
         __THREW__ = 0;
         if ($734 & 1) {
          $736 = ___cxa_find_matching_catch() | 0;
          $737 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($725);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
          $$610239 = $737;
          $$6240 = $736;
          break L421;
         }
         __THREW__ = 0;
         invoke_viii(4, $725 | 0, 48, 178);
         $738 = __THREW__;
         __THREW__ = 0;
         if ($738 & 1) {
          $$018 = 0;
          break;
         }
        } while (0);
        $742 = ___cxa_find_matching_catch() | 0;
        $743 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
        if ($$018) {
         $$610239 = $743;
         $$6240 = $742;
         break;
        } else {
         $$9 = $742;
         $$913 = $743;
        }
        $893 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
        ___resumeException($$9 | 0);
       } while (0);
       ___cxa_free_exception($725 | 0);
       $$9 = $$6240;
       $$913 = $$610239;
       $893 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
       ___resumeException($$9 | 0);
      }
      if (___dynamic_cast($ast_, 34e3, 35048, 0) | 0) {
       if ($in_object) break;
       $745 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_viii(3, $26 | 0, 37032, 37);
       $746 = __THREW__;
       __THREW__ = 0;
       L438 : do if ($746 & 1) {
        $760 = ___cxa_find_matching_catch() | 0;
        $$711243 = tempRet0;
        $$7244 = $760;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $745 | 0, $ast_ + 4 | 0);
        $749 = __THREW__;
        __THREW__ = 0;
        do if ($749 & 1) $$016 = 1; else {
         $751 = $745 + 12 | 0;
         $752 = $ast_ + 16 | 0;
         HEAP32[$751 + 0 >> 2] = HEAP32[$752 + 0 >> 2];
         HEAP32[$751 + 4 >> 2] = HEAP32[$752 + 4 >> 2];
         HEAP32[$751 + 8 >> 2] = HEAP32[$752 + 8 >> 2];
         HEAP32[$751 + 12 >> 2] = HEAP32[$752 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $745 + 28 | 0, $26 | 0);
         $754 = __THREW__;
         __THREW__ = 0;
         if ($754 & 1) {
          $756 = ___cxa_find_matching_catch() | 0;
          $757 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($745);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
          $$711243 = $757;
          $$7244 = $756;
          break L438;
         }
         __THREW__ = 0;
         invoke_viii(4, $745 | 0, 48, 178);
         $758 = __THREW__;
         __THREW__ = 0;
         if ($758 & 1) {
          $$016 = 0;
          break;
         }
        } while (0);
        $762 = ___cxa_find_matching_catch() | 0;
        $763 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
        if ($$016) {
         $$711243 = $763;
         $$7244 = $762;
         break;
        } else {
         $$9 = $762;
         $$913 = $763;
        }
        $893 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
        ___resumeException($$9 | 0);
       } while (0);
       ___cxa_free_exception($745 | 0);
       $$9 = $$7244;
       $$913 = $$711243;
       $893 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
       ___resumeException($$9 | 0);
      }
      $764 = ___dynamic_cast($ast_, 34e3, 35080, 0) | 0;
      if ($764) {
       __THREW__ = 0;
       invoke_viiii(16, $27 | 0, HEAP32[$764 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
       $768 = __THREW__;
       __THREW__ = 0;
       if ($768 & 1) {
        label = 14;
        break L1;
       }
       __THREW__ = 0;
       invoke_vii(57, $agg$result | 0, $27 | 0);
       $770 = __THREW__;
       __THREW__ = 0;
       if (!($770 & 1)) {
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($27, HEAP32[$27 + 4 >> 2] | 0);
        break;
       }
       $774 = ___cxa_find_matching_catch() | 0;
       $775 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($27, HEAP32[$27 + 4 >> 2] | 0);
       $$9 = $774;
       $$913 = $775;
       $893 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
       ___resumeException($$9 | 0);
      }
      $778 = ___dynamic_cast($ast_, 34e3, 35104, 0) | 0;
      if (!$778) {
       label = 327;
       break L1;
      }
      $780 = $778 + 48 | 0;
      $782 = HEAP32[$vars + 4 >> 2] | 0;
      $783 = $vars + 4 | 0;
      do if ($782) {
       $785 = HEAP32[$780 >> 2] | 0;
       $$0$ph7$i$i$i155 = $783;
       $$01$ph6$i$in$i$i156 = $782;
       L463 : while (1) {
        $$013$i$in$i$i158 = $$01$ph6$i$in$i$i156;
        while (1) {
         if ((HEAP32[$$013$i$in$i$i158 + 16 >> 2] | 0) >>> 0 >= $785 >>> 0) break;
         $792 = HEAP32[$$013$i$in$i$i158 + 4 >> 2] | 0;
         if (!$792) {
          $$0$ph5$i$i$i161 = $$0$ph7$i$i$i155;
          break L463;
         } else $$013$i$in$i$i158 = $792;
        }
        $$01$ph6$i$in$i$i156 = HEAP32[$$013$i$in$i$i158 >> 2] | 0;
        if (!$$01$ph6$i$in$i$i156) {
         $$0$ph5$i$i$i161 = $$013$i$in$i$i158;
         break;
        } else $$0$ph7$i$i$i155 = $$013$i$in$i$i158;
       }
       if (($$0$ph5$i$i$i161 | 0) == ($783 | 0)) break;
       if ($785 >>> 0 < (HEAP32[$$0$ph5$i$i$i161 + 16 >> 2] | 0) >>> 0) break;
       __THREW__ = 0;
       invoke_viii(10, $3 | 0, $agg$result | 0, $780 | 0);
       $836 = __THREW__;
       __THREW__ = 0;
       if ($836 & 1) {
        label = 14;
        break L1;
       } else break L3;
      } while (0);
      $798 = ___cxa_allocate_exception(40) | 0;
      $799 = HEAP32[$780 >> 2] | 0;
      HEAP32[$28 + 0 >> 2] = 0;
      HEAP32[$28 + 4 >> 2] = 0;
      HEAP32[$28 + 8 >> 2] = 0;
      $800 = HEAP8[$799 >> 0] | 0;
      if (!($800 & 1)) $808 = ($800 & 255) >>> 1; else $808 = HEAP32[$799 + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_viiii(14, $28 | 0, 37072, 18, $808 + 18 | 0);
      $809 = __THREW__;
      __THREW__ = 0;
      L477 : do if ($809 & 1) label = 323; else {
       if (!(HEAP8[$799 >> 0] & 1)) $817 = $799 + 1 | 0; else $817 = HEAP32[$799 + 8 >> 2] | 0;
       __THREW__ = 0;
       invoke_iiii(31, $28 | 0, $817 | 0, $808 | 0) | 0;
       $818 = __THREW__;
       __THREW__ = 0;
       if ($818 & 1) {
        label = 323;
        break;
       }
       __THREW__ = 0;
       invoke_vii(40, $798 | 0, $778 + 4 | 0);
       $821 = __THREW__;
       __THREW__ = 0;
       do if ($821 & 1) $$02 = 1; else {
        $823 = $798 + 12 | 0;
        $824 = $778 + 16 | 0;
        HEAP32[$823 + 0 >> 2] = HEAP32[$824 + 0 >> 2];
        HEAP32[$823 + 4 >> 2] = HEAP32[$824 + 4 >> 2];
        HEAP32[$823 + 8 >> 2] = HEAP32[$824 + 8 >> 2];
        HEAP32[$823 + 12 >> 2] = HEAP32[$824 + 12 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $798 + 28 | 0, $28 | 0);
        $826 = __THREW__;
        __THREW__ = 0;
        if ($826 & 1) {
         $828 = ___cxa_find_matching_catch() | 0;
         $829 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($798);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
         $$812250 = $829;
         $$8251 = $828;
         break L477;
        }
        __THREW__ = 0;
        invoke_viii(4, $798 | 0, 48, 178);
        $830 = __THREW__;
        __THREW__ = 0;
        if ($830 & 1) {
         $$02 = 0;
         break;
        }
       } while (0);
       $834 = ___cxa_find_matching_catch() | 0;
       $835 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
       if ($$02) {
        $$812250 = $835;
        $$8251 = $834;
        break;
       } else {
        $$9 = $834;
        $$913 = $835;
       }
       $893 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
       ___resumeException($$9 | 0);
      } while (0);
      if ((label | 0) == 323) {
       $832 = ___cxa_find_matching_catch() | 0;
       $833 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
       $$812250 = $833;
       $$8251 = $832;
      }
      ___cxa_free_exception($798 | 0);
      $$9 = $$8251;
      $$913 = $$812250;
      $893 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
      ___resumeException($$9 | 0);
     }
    }
   }
  } else {
   __THREW__ = 0;
   invoke_viiii(16, $6 | 0, HEAP32[$33 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    label = 14;
    break L1;
   }
   __THREW__ = 0;
   invoke_vii(57, $agg$result | 0, $6 | 0);
   $39 = __THREW__;
   __THREW__ = 0;
   if ($39 & 1) {
    $68 = ___cxa_find_matching_catch() | 0;
    $69 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($6, HEAP32[$6 + 4 >> 2] | 0);
    $$9 = $68;
    $$913 = $69;
    $893 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
    ___resumeException($$9 | 0);
   }
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($6, HEAP32[$6 + 4 >> 2] | 0);
   $44 = HEAP32[$33 + 52 >> 2] | 0;
   $46 = HEAP32[$33 + 56 >> 2] | 0;
   if (($44 | 0) != ($46 | 0)) {
    $48 = $7 + 4 | 0;
    $50 = $44;
    while (1) {
     __THREW__ = 0;
     invoke_viiii(16, $7 | 0, HEAP32[$50 >> 2] | 0, $in_object | 0, $vars | 0);
     $51 = __THREW__;
     __THREW__ = 0;
     if ($51 & 1) {
      label = 13;
      break;
     }
     __THREW__ = 0;
     invoke_vii(57, $agg$result | 0, $7 | 0);
     $53 = __THREW__;
     __THREW__ = 0;
     if ($53 & 1) break;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($7, HEAP32[$48 >> 2] | 0);
     $50 = $50 + 4 | 0;
     if (($50 | 0) == ($46 | 0)) break L3;
    }
    if ((label | 0) == 13) {
     $64 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index8Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $64;
     break L1;
    }
    $72 = ___cxa_find_matching_catch() | 0;
    $73 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($7, HEAP32[$48 >> 2] | 0);
    $$9 = $72;
    $$913 = $73;
    $893 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
    ___resumeException($$9 | 0);
   }
  } while (0);
  $867 = HEAP32[$agg$result >> 2] | 0;
  if (($867 | 0) == ($31 | 0)) {
   STACKTOP = sp;
   return;
  }
  $869 = $ast_ + 40 | 0;
  $870 = $ast_ + 44 | 0;
  $871 = $ast_ + 36 | 0;
  $873 = $867;
  while (1) {
   $874 = HEAP32[$873 + 16 >> 2] | 0;
   HEAP32[$id >> 2] = $874;
   $875 = HEAP32[$869 >> 2] | 0;
   if (($875 | 0) == (HEAP32[$870 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_vii(55, $871 | 0, $id | 0);
    $881 = __THREW__;
    __THREW__ = 0;
    if ($881 & 1) {
     label = 10;
     break;
    }
   } else {
    if (!$875) $880 = 0; else {
     HEAP32[$875 >> 2] = $874;
     $880 = HEAP32[$869 >> 2] | 0;
    }
    HEAP32[$869 >> 2] = $880 + 4;
   }
   $884 = HEAP32[$873 + 4 >> 2] | 0;
   if (!$884) {
    $$0$i$i = $873;
    while (1) {
     $889 = HEAP32[$$0$i$i + 8 >> 2] | 0;
     if ((HEAP32[$889 >> 2] | 0) == ($$0$i$i | 0)) {
      $$01$i$i = $889;
      break;
     } else $$0$i$i = $889;
    }
   } else {
    $$0$i$i$i = $884;
    while (1) {
     $886 = HEAP32[$$0$i$i$i >> 2] | 0;
     if (!$886) {
      $$01$i$i = $$0$i$i$i;
      break;
     } else $$0$i$i$i = $886;
    }
   }
   if (($$01$i$i | 0) == ($31 | 0)) {
    label = 349;
    break;
   } else $873 = $$01$i$i;
  }
  if ((label | 0) == 10) {
   $58 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index8Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $58;
   break;
  } else if ((label | 0) == 349) {
   STACKTOP = sp;
   return;
  }
 } while (0);
 do if ((label | 0) == 327) {
  __THREW__ = 0;
  $838 = invoke_iiii(25, 41312, 37096, 29) | 0;
  $839 = __THREW__;
  __THREW__ = 0;
  if ($839 & 1) label = 14; else {
   __THREW__ = 0;
   $841 = invoke_iii(28, $838 | 0, $ast_ | 0) | 0;
   $842 = __THREW__;
   __THREW__ = 0;
   if ($842 & 1) label = 14; else {
    __THREW__ = 0;
    invoke_vii(47, $4 | 0, $841 + (HEAP32[(HEAP32[$841 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $848 = __THREW__;
    __THREW__ = 0;
    if ($848 & 1) label = 14; else {
     __THREW__ = 0;
     $850 = invoke_iii(22, $4 | 0, 45800) | 0;
     $851 = __THREW__;
     __THREW__ = 0;
     if (!($851 & 1)) {
      __THREW__ = 0;
      $856 = invoke_iii(HEAP32[(HEAP32[$850 >> 2] | 0) + 28 >> 2] | 0, $850 | 0, 10) | 0;
      $857 = __THREW__;
      __THREW__ = 0;
      if (!($857 & 1)) {
       __ZNSt3__16localeD2Ev($4);
       __THREW__ = 0;
       invoke_iii(27, $841 | 0, $856 | 0) | 0;
       $861 = __THREW__;
       __THREW__ = 0;
       if ($861 & 1) {
        label = 14;
        break;
       }
       __THREW__ = 0;
       invoke_ii(68, $841 | 0) | 0;
       $863 = __THREW__;
       __THREW__ = 0;
       if ($863 & 1) {
        label = 14;
        break;
       }
       __THREW__ = 0;
       invoke_v(3);
       $865 = __THREW__;
       __THREW__ = 0;
       if ($865 & 1) {
        label = 14;
        break;
       }
      }
     }
     $859 = ___cxa_find_matching_catch() | 0;
     $860 = tempRet0;
     __ZNSt3__16localeD2Ev($4);
     $eh$lpad$body$index8Z2D = $860;
     $eh$lpad$body$indexZ2D = $859;
    }
   }
  }
 } while (0);
 if ((label | 0) == 14) {
  $66 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index8Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $66;
 }
 $$9 = $eh$lpad$body$indexZ2D;
 $$913 = $eh$lpad$body$index8Z2D;
 $893 = HEAP32[$29 >> 2] | 0;
 __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $893);
 ___resumeException($$9 | 0);
}

function __ZL7unparsePK3AST($agg$result, $ast_) {
 $agg$result = $agg$result | 0;
 $ast_ = $ast_ | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $$4 = 0, $$45 = 0, $$5 = 0, $$56 = 0, $$6 = 0, $$67 = 0, $$7 = 0, $$78 = 0, $$8 = 0, $$89 = 0, $$9 = 0, $$910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1013 = 0, $1014 = 0, $102 = 0, $1020 = 0, $1022 = 0, $1023 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1035 = 0, $1037 = 0, $1039 = 0, $1041 = 0, $1042 = 0, $1044 = 0, $1045 = 0, $1048 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $107 = 0, $11 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $128 = 0, $129 = 0, $13 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $137 = 0, $138 = 0, $14 = 0, $141 = 0, $142 = 0, $144 = 0, $15 = 0, $151 = 0, $152 = 0, $153 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $161 = 0, $165 = 0, $168 = 0, $17 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $183 = 0, $184 = 0, $187 = 0, $188 = 0, $19 = 0, $190 = 0, $192 = 0, $194 = 0, $196 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $202 = 0, $204 = 0, $206 = 0, $208 = 0, $21 = 0, $210 = 0, $212 = 0, $214 = 0, $216 = 0, $218 = 0, $22 = 0, $220 = 0, $222 = 0, $223 = 0, $225 = 0, $226 = 0, $23 = 0, $232 = 0, $234 = 0, $235 = 0, $24 = 0, $240 = 0, $241 = 0, $243 = 0, $244 = 0, $245 = 0, $247 = 0, $249 = 0, $25 = 0, $251 = 0, $26 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $266 = 0, $267 = 0, $27 = 0, $271 = 0, $273 = 0, $28 = 0, $283 = 0, $284 = 0, $285 = 0, $287 = 0, $289 = 0, $29 = 0, $291 = 0, $292 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0, $301 = 0, $303 = 0, $304 = 0, $309 = 0, $31 = 0, $310 = 0, $312 = 0, $313 = 0, $314 = 0, $316 = 0, $318 = 0, $32 = 0, $320 = 0, $323 = 0, $324 = 0, $328 = 0, $33 = 0, $330 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $345 = 0, $346 = 0, $350 = 0, $352 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $37 = 0, $372 = 0, $374 = 0, $384 = 0, $385 = 0, $386 = 0, $388 = 0, $390 = 0, $392 = 0, $393 = 0, $394 = 0, $397 = 0, $398 = 0, $4 = 0, $402 = 0, $404 = 0, $41 = 0, $414 = 0, $415 = 0, $416 = 0, $418 = 0, $419 = 0, $420 = 0, $422 = 0, $423 = 0, $426 = 0, $428 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $436 = 0, $446 = 0, $447 = 0, $448 = 0, $45 = 0, $452 = 0, $453 = 0, $457 = 0, $459 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $473 = 0, $474 = 0, $475 = 0, $478 = 0, $479 = 0, $48 = 0, $482 = 0, $484 = 0, $49 = 0, $494 = 0, $495 = 0, $496 = 0, $498 = 0, $499 = 0, $5 = 0, $500 = 0, $503 = 0, $504 = 0, $507 = 0, $509 = 0, $51 = 0, $519 = 0, $520 = 0, $521 = 0, $523 = 0, $524 = 0, $525 = 0, $529 = 0, $532 = 0, $54 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $547 = 0, $548 = 0, $552 = 0, $554 = 0, $56 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $569 = 0, $571 = 0, $573 = 0, $574 = 0, $575 = 0, $578 = 0, $579 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $6 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $607 = 0, $608 = 0, $61 = 0, $612 = 0, $614 = 0, $621 = 0, $622 = 0, $623 = 0, $626 = 0, $628 = 0, $631 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $642 = 0, $644 = 0, $654 = 0, $655 = 0, $656 = 0, $658 = 0, $659 = 0, $660 = 0, $666 = 0, $667 = 0, $668 = 0, $670 = 0, $675 = 0, $677 = 0, $680 = 0, $683 = 0, $693 = 0, $694 = 0, $695 = 0, $697 = 0, $698 = 0, $7 = 0, $701 = 0, $703 = 0, $709 = 0, $71 = 0, $711 = 0, $713 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $732 = 0, $733 = 0, $739 = 0, $741 = 0, $742 = 0, $747 = 0, $748 = 0, $750 = 0, $751 = 0, $752 = 0, $754 = 0, $756 = 0, $757 = 0, $761 = 0, $763 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $775 = 0, $776 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $782 = 0, $783 = 0, $787 = 0, $789 = 0, $796 = 0, $797 = 0, $798 = 0, $8 = 0, $80 = 0, $803 = 0, $805 = 0, $806 = 0, $807 = 0, $809 = 0, $81 = 0, $811 = 0, $812 = 0, $813 = 0, $817 = 0, $819 = 0, $82 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $834 = 0, $835 = 0, $839 = 0, $841 = 0, $85 = 0, $851 = 0, $852 = 0, $853 = 0, $855 = 0, $856 = 0, $859 = 0, $860 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $875 = 0, $876 = 0, $880 = 0, $882 = 0, $89 = 0, $892 = 0, $893 = 0, $894 = 0, $896 = 0, $898 = 0, $9 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $906 = 0, $91 = 0, $910 = 0, $912 = 0, $915 = 0, $916 = 0, $918 = 0, $920 = 0, $922 = 0, $924 = 0, $925 = 0, $927 = 0, $928 = 0, $93 = 0, $934 = 0, $936 = 0, $937 = 0, $942 = 0, $943 = 0, $945 = 0, $946 = 0, $947 = 0, $949 = 0, $95 = 0, $951 = 0, $954 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $97 = 0, $971 = 0, $973 = 0, $98 = 0, $983 = 0, $984 = 0, $985 = 0, $987 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $995 = 0, $996 = 0, $colons$0 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index28Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body71$index15Z2D = 0, $eh$lpad$body71$indexZ2D = 0, $prefix$0302 = 0, $prefix10$0286 = 0, $prefix19$0279 = 0, $prefix2$0295 = 0, $prefix27$0270 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 488 | 0;
 $1 = sp + 484 | 0;
 $2 = sp + 480 | 0;
 $3 = sp + 476 | 0;
 $4 = sp + 472 | 0;
 $ss = sp + 328 | 0;
 $5 = sp + 312 | 0;
 $6 = sp + 300 | 0;
 $7 = sp + 288 | 0;
 $8 = sp + 276 | 0;
 $9 = sp + 264 | 0;
 $10 = sp + 252 | 0;
 $11 = sp + 240 | 0;
 $12 = sp + 228 | 0;
 $13 = sp + 216 | 0;
 $14 = sp + 204 | 0;
 $15 = sp + 192 | 0;
 $16 = sp + 180 | 0;
 $17 = sp + 168 | 0;
 $18 = sp + 156 | 0;
 $19 = sp + 144 | 0;
 $20 = sp + 132 | 0;
 $21 = sp + 120 | 0;
 $22 = sp + 108 | 0;
 $23 = sp + 96 | 0;
 $24 = sp + 84 | 0;
 $25 = sp + 72 | 0;
 $26 = sp + 60 | 0;
 $27 = sp + 48 | 0;
 $28 = sp + 36 | 0;
 $29 = sp + 24 | 0;
 $30 = sp + 12 | 0;
 $31 = sp;
 $32 = $ss + 64 | 0;
 $33 = $ss + 8 | 0;
 HEAP32[$33 >> 2] = 792;
 $34 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 940;
 HEAP32[$32 >> 2] = 960;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $34 | 0);
 $37 = __THREW__;
 __THREW__ = 0;
 if ($37 & 1) {
  $49 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $49;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 772;
 HEAP32[$32 >> 2] = 812;
 HEAP32[$33 >> 2] = 792;
 __THREW__ = 0;
 invoke_vi(179, $34 | 0);
 $41 = __THREW__;
 __THREW__ = 0;
 do if ($41 & 1) {
  $51 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $51;
 } else {
  HEAP32[$34 >> 2] = 1104;
  $43 = $ss + 44 | 0;
  HEAP32[$43 + 0 >> 2] = 0;
  HEAP32[$43 + 4 >> 2] = 0;
  HEAP32[$43 + 8 >> 2] = 0;
  HEAP32[$43 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $34 | 0, $0 | 0);
  $45 = __THREW__;
  __THREW__ = 0;
  if ($45 & 1) {
   $47 = ___cxa_find_matching_catch() | 0;
   $48 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
   $eh$lpad$body$i$index2Z2D = $48;
   $eh$lpad$body$i$indexZ2D = $47;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  L10 : do if (!$ast_) label = 342; else {
   $54 = ___dynamic_cast($ast_, 34e3, 34248, 0) | 0;
   L12 : do if (!$54) {
    $124 = ___dynamic_cast($ast_, 34e3, 34304, 0) | 0;
    if ($124) {
     $128 = HEAP32[$124 + 52 >> 2] | 0;
     $129 = HEAP32[$124 + 48 >> 2] | 0;
     $131 = $ss + 8 | 0;
     if (($128 | 0) == ($129 | 0)) {
      __THREW__ = 0;
      invoke_iiii(25, $131 | 0, 34320, 3) | 0;
      $135 = __THREW__;
      __THREW__ = 0;
      if ($135 & 1) {
       label = 24;
       break L10;
      } else break;
     }
     $132 = $7 + 1 | 0;
     $133 = $7 + 8 | 0;
     $134 = $7 + 4 | 0;
     $141 = $129;
     $prefix2$0295 = 34328;
     while (1) {
      $137 = _strlen($prefix2$0295 | 0) | 0;
      __THREW__ = 0;
      invoke_iiii(25, $131 | 0, $prefix2$0295 | 0, $137 | 0) | 0;
      $138 = __THREW__;
      __THREW__ = 0;
      if ($138 & 1) {
       label = 22;
       break;
      }
      __THREW__ = 0;
      invoke_vii(53, $7 | 0, HEAP32[$141 >> 2] | 0);
      $142 = __THREW__;
      __THREW__ = 0;
      if ($142 & 1) {
       label = 22;
       break;
      }
      $144 = HEAP8[$7 >> 0] | 0;
      if (!($144 & 1)) {
       $151 = $132;
       $152 = ($144 & 255) >>> 1;
      } else {
       $151 = HEAP32[$133 >> 2] | 0;
       $152 = HEAP32[$134 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $131 | 0, $151 | 0, $152 | 0) | 0;
      $153 = __THREW__;
      __THREW__ = 0;
      if ($153 & 1) {
       label = 47;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
      $141 = $141 + 4 | 0;
      if (($141 | 0) == ($128 | 0)) {
       label = 48;
       break;
      } else $prefix2$0295 = 34280;
     }
     if ((label | 0) == 22) {
      $91 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body71$index15Z2D = tempRet0;
      $eh$lpad$body71$indexZ2D = $91;
      break L10;
     } else if ((label | 0) == 47) {
      $157 = ___cxa_find_matching_catch() | 0;
      $158 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
      $$9 = $157;
      $$910 = $158;
      HEAP32[$ss >> 2] = 772;
      $1052 = $ss + 64 | 0;
      HEAP32[$1052 >> 2] = 812;
      HEAP32[$33 >> 2] = 792;
      HEAP32[$34 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } else if ((label | 0) == 48) {
      __THREW__ = 0;
      invoke_iiii(25, $131 | 0, 34336, 1) | 0;
      $159 = __THREW__;
      __THREW__ = 0;
      if ($159 & 1) {
       label = 24;
       break L10;
      } else break;
     }
    }
    $161 = ___dynamic_cast($ast_, 34e3, 34352, 0) | 0;
    if ($161) {
     __THREW__ = 0;
     invoke_vii(53, $8 | 0, HEAP32[$161 + 48 >> 2] | 0);
     $165 = __THREW__;
     __THREW__ = 0;
     if ($165 & 1) {
      label = 24;
      break L10;
     }
     $168 = HEAP8[$8 >> 0] | 0;
     if (!($168 & 1)) {
      $178 = $8 + 1 | 0;
      $179 = ($168 & 255) >>> 1;
     } else {
      $178 = HEAP32[$8 + 8 >> 2] | 0;
      $179 = HEAP32[$8 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $180 = invoke_iiii(25, $ss + 8 | 0, $178 | 0, $179 | 0) | 0;
     $181 = __THREW__;
     __THREW__ = 0;
     L41 : do if ($181 & 1) label = 95; else {
      __THREW__ = 0;
      $183 = invoke_iiii(25, $180 | 0, 34368, 1) | 0;
      $184 = __THREW__;
      __THREW__ = 0;
      if ($184 & 1) label = 95; else {
       $187 = HEAP32[$161 + 52 >> 2] | 0;
       do switch ($187 | 0) {
       case 6:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35264, 1);
         $200 = __THREW__;
         __THREW__ = 0;
         if ($200 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 7:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35272, 2);
         $202 = __THREW__;
         __THREW__ = 0;
         if ($202 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 13:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35320, 1);
         $214 = __THREW__;
         __THREW__ = 0;
         if ($214 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 14:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35328, 1);
         $216 = __THREW__;
         __THREW__ = 0;
         if ($216 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 15:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35336, 2);
         $218 = __THREW__;
         __THREW__ = 0;
         if ($218 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 16:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35344, 2);
         $220 = __THREW__;
         __THREW__ = 0;
         if ($220 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 11:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35304, 2);
         $210 = __THREW__;
         __THREW__ = 0;
         if ($210 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 12:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35312, 1);
         $212 = __THREW__;
         __THREW__ = 0;
         if ($212 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 0:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35232, 1);
         $188 = __THREW__;
         __THREW__ = 0;
         if ($188 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 1:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35240, 1);
         $190 = __THREW__;
         __THREW__ = 0;
         if ($190 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 3:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35160, 1);
         $194 = __THREW__;
         __THREW__ = 0;
         if ($194 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 4:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35248, 2);
         $196 = __THREW__;
         __THREW__ = 0;
         if ($196 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 2:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35152, 1);
         $192 = __THREW__;
         __THREW__ = 0;
         if ($192 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 8:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35280, 1);
         $204 = __THREW__;
         __THREW__ = 0;
         if ($204 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 5:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35256, 2);
         $198 = __THREW__;
         __THREW__ = 0;
         if ($198 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 9:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35288, 2);
         $206 = __THREW__;
         __THREW__ = 0;
         if ($206 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       case 10:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 35296, 2);
         $208 = __THREW__;
         __THREW__ = 0;
         if ($208 & 1) {
          label = 95;
          break L41;
         }
         break;
        }
       default:
        {
         __THREW__ = 0;
         $222 = invoke_iiii(25, 41312, 35352, 46) | 0;
         $223 = __THREW__;
         __THREW__ = 0;
         if ($223 & 1) {
          label = 95;
          break L41;
         }
         __THREW__ = 0;
         $225 = invoke_iii(21, $222 | 0, $187 | 0) | 0;
         $226 = __THREW__;
         __THREW__ = 0;
         if ($226 & 1) {
          label = 95;
          break L41;
         }
         __THREW__ = 0;
         invoke_vii(47, $4 | 0, $225 + (HEAP32[(HEAP32[$225 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $232 = __THREW__;
         __THREW__ = 0;
         if ($232 & 1) {
          label = 95;
          break L41;
         }
         __THREW__ = 0;
         $234 = invoke_iii(22, $4 | 0, 45800) | 0;
         $235 = __THREW__;
         __THREW__ = 0;
         do if (!($235 & 1)) {
          __THREW__ = 0;
          $240 = invoke_iii(HEAP32[(HEAP32[$234 >> 2] | 0) + 28 >> 2] | 0, $234 | 0, 10) | 0;
          $241 = __THREW__;
          __THREW__ = 0;
          if ($241 & 1) break;
          __ZNSt3__16localeD2Ev($4);
          __THREW__ = 0;
          invoke_iii(27, $225 | 0, $240 | 0) | 0;
          $245 = __THREW__;
          __THREW__ = 0;
          if ($245 & 1) {
           label = 95;
           break L41;
          }
          __THREW__ = 0;
          invoke_ii(68, $225 | 0) | 0;
          $247 = __THREW__;
          __THREW__ = 0;
          if ($247 & 1) {
           label = 95;
           break L41;
          }
          __THREW__ = 0;
          invoke_v(3);
          $249 = __THREW__;
          __THREW__ = 0;
          if ($249 & 1) {
           label = 95;
           break L41;
          }
         } while (0);
         $243 = ___cxa_find_matching_catch() | 0;
         $244 = tempRet0;
         __ZNSt3__16localeD2Ev($4);
         $eh$lpad$body$index28Z2D = $244;
         $eh$lpad$body$indexZ2D = $243;
         label = 96;
         break L41;
        }
       } while (0);
       $251 = HEAP8[$9 >> 0] | 0;
       if (!($251 & 1)) {
        $261 = $9 + 1 | 0;
        $262 = ($251 & 255) >>> 1;
       } else {
        $261 = HEAP32[$9 + 8 >> 2] | 0;
        $262 = HEAP32[$9 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       $263 = invoke_iiii(25, $183 | 0, $261 | 0, $262 | 0) | 0;
       $264 = __THREW__;
       __THREW__ = 0;
       do if ($264 & 1) label = 97; else {
        __THREW__ = 0;
        $266 = invoke_iiii(25, $263 | 0, 34368, 1) | 0;
        $267 = __THREW__;
        __THREW__ = 0;
        if ($267 & 1) label = 97; else {
         __THREW__ = 0;
         invoke_vii(53, $10 | 0, HEAP32[$161 + 56 >> 2] | 0);
         $271 = __THREW__;
         __THREW__ = 0;
         if ($271 & 1) {
          label = 97;
          break;
         }
         $273 = HEAP8[$10 >> 0] | 0;
         if (!($273 & 1)) {
          $283 = $10 + 1 | 0;
          $284 = ($273 & 255) >>> 1;
         } else {
          $283 = HEAP32[$10 + 8 >> 2] | 0;
          $284 = HEAP32[$10 + 4 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $266 | 0, $283 | 0, $284 | 0) | 0;
         $285 = __THREW__;
         __THREW__ = 0;
         if ($285 & 1) {
          $291 = ___cxa_find_matching_catch() | 0;
          $292 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
          $$0 = $291;
          $$01 = $292;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
          break L12;
         }
        }
       } while (0);
       if ((label | 0) == 97) {
        $289 = ___cxa_find_matching_catch() | 0;
        $$0 = $289;
        $$01 = tempRet0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
       $$1 = $$0;
       $$12 = $$01;
      }
     } while (0);
     if ((label | 0) == 95) {
      $287 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$index28Z2D = tempRet0;
      $eh$lpad$body$indexZ2D = $287;
      label = 96;
     }
     if ((label | 0) == 96) {
      $$1 = $eh$lpad$body$indexZ2D;
      $$12 = $eh$lpad$body$index28Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
     $$9 = $$1;
     $$910 = $$12;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 34e3, 34144, 0) | 0) {
     __THREW__ = 0;
     $294 = invoke_iiii(25, 41312, 34376, 43) | 0;
     $295 = __THREW__;
     __THREW__ = 0;
     if ($295 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(47, $3 | 0, $294 + (HEAP32[(HEAP32[$294 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $301 = __THREW__;
     __THREW__ = 0;
     if ($301 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     $303 = invoke_iii(22, $3 | 0, 45800) | 0;
     $304 = __THREW__;
     __THREW__ = 0;
     if (!($304 & 1)) {
      __THREW__ = 0;
      $309 = invoke_iii(HEAP32[(HEAP32[$303 >> 2] | 0) + 28 >> 2] | 0, $303 | 0, 10) | 0;
      $310 = __THREW__;
      __THREW__ = 0;
      if (!($310 & 1)) {
       __ZNSt3__16localeD2Ev($3);
       __THREW__ = 0;
       invoke_iii(27, $294 | 0, $309 | 0) | 0;
       $314 = __THREW__;
       __THREW__ = 0;
       if ($314 & 1) {
        label = 24;
        break L10;
       }
       __THREW__ = 0;
       invoke_ii(68, $294 | 0) | 0;
       $316 = __THREW__;
       __THREW__ = 0;
       if ($316 & 1) {
        label = 24;
        break L10;
       }
       __THREW__ = 0;
       invoke_v(3);
       $318 = __THREW__;
       __THREW__ = 0;
       if ($318 & 1) {
        label = 24;
        break L10;
       }
      }
     }
     $312 = ___cxa_find_matching_catch() | 0;
     $313 = tempRet0;
     __ZNSt3__16localeD2Ev($3);
     $eh$lpad$body71$index15Z2D = $313;
     $eh$lpad$body71$indexZ2D = $312;
     break L10;
    }
    $320 = ___dynamic_cast($ast_, 34e3, 34440, 0) | 0;
    if ($320) {
     __THREW__ = 0;
     $323 = invoke_iiii(25, $ss + 8 | 0, 34456, 3) | 0;
     $324 = __THREW__;
     __THREW__ = 0;
     if ($324 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $11 | 0, HEAP32[$320 + 48 >> 2] | 0);
     $328 = __THREW__;
     __THREW__ = 0;
     if ($328 & 1) {
      label = 24;
      break L10;
     }
     $330 = HEAP8[$11 >> 0] | 0;
     if (!($330 & 1)) {
      $340 = $11 + 1 | 0;
      $341 = ($330 & 255) >>> 1;
     } else {
      $340 = HEAP32[$11 + 8 >> 2] | 0;
      $341 = HEAP32[$11 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $342 = invoke_iiii(25, $323 | 0, $340 | 0, $341 | 0) | 0;
     $343 = __THREW__;
     __THREW__ = 0;
     if ($343 & 1) label = 131; else {
      __THREW__ = 0;
      $345 = invoke_iiii(25, $342 | 0, 34464, 6) | 0;
      $346 = __THREW__;
      __THREW__ = 0;
      if ($346 & 1) label = 131; else {
       __THREW__ = 0;
       invoke_vii(53, $12 | 0, HEAP32[$320 + 52 >> 2] | 0);
       $350 = __THREW__;
       __THREW__ = 0;
       if ($350 & 1) label = 131; else {
        $352 = HEAP8[$12 >> 0] | 0;
        if (!($352 & 1)) {
         $362 = $12 + 1 | 0;
         $363 = ($352 & 255) >>> 1;
        } else {
         $362 = HEAP32[$12 + 8 >> 2] | 0;
         $363 = HEAP32[$12 + 4 >> 2] | 0;
        }
        __THREW__ = 0;
        $364 = invoke_iiii(25, $345 | 0, $362 | 0, $363 | 0) | 0;
        $365 = __THREW__;
        __THREW__ = 0;
        do if ($365 & 1) label = 132; else {
         __THREW__ = 0;
         $367 = invoke_iiii(25, $364 | 0, 34472, 6) | 0;
         $368 = __THREW__;
         __THREW__ = 0;
         if ($368 & 1) {
          label = 132;
          break;
         }
         __THREW__ = 0;
         invoke_vii(53, $13 | 0, HEAP32[$320 + 56 >> 2] | 0);
         $372 = __THREW__;
         __THREW__ = 0;
         if ($372 & 1) {
          label = 132;
          break;
         }
         $374 = HEAP8[$13 >> 0] | 0;
         if (!($374 & 1)) {
          $384 = $13 + 1 | 0;
          $385 = ($374 & 255) >>> 1;
         } else {
          $384 = HEAP32[$13 + 8 >> 2] | 0;
          $385 = HEAP32[$13 + 4 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $367 | 0, $384 | 0, $385 | 0) | 0;
         $386 = __THREW__;
         __THREW__ = 0;
         if ($386 & 1) {
          $392 = ___cxa_find_matching_catch() | 0;
          $393 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
          $$2 = $392;
          $$23 = $393;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
          break L12;
         }
        } while (0);
        if ((label | 0) == 132) {
         $390 = ___cxa_find_matching_catch() | 0;
         $$2 = $390;
         $$23 = tempRet0;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
        $$3 = $$2;
        $$34 = $$23;
       }
      }
     }
     if ((label | 0) == 131) {
      $388 = ___cxa_find_matching_catch() | 0;
      $$3 = $388;
      $$34 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
     $$9 = $$3;
     $$910 = $$34;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $394 = ___dynamic_cast($ast_, 34e3, 34488, 0) | 0;
    if ($394) {
     __THREW__ = 0;
     $397 = invoke_iiii(25, $ss + 8 | 0, 34504, 6) | 0;
     $398 = __THREW__;
     __THREW__ = 0;
     if ($398 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $14 | 0, HEAP32[$394 + 48 >> 2] | 0);
     $402 = __THREW__;
     __THREW__ = 0;
     if ($402 & 1) {
      label = 24;
      break L10;
     }
     $404 = HEAP8[$14 >> 0] | 0;
     if (!($404 & 1)) {
      $414 = $14 + 1 | 0;
      $415 = ($404 & 255) >>> 1;
     } else {
      $414 = HEAP32[$14 + 8 >> 2] | 0;
      $415 = HEAP32[$14 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $397 | 0, $414 | 0, $415 | 0) | 0;
     $416 = __THREW__;
     __THREW__ = 0;
     if (!($416 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
      break;
     }
     $418 = ___cxa_find_matching_catch() | 0;
     $419 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
     $$9 = $418;
     $$910 = $419;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $420 = ___dynamic_cast($ast_, 34e3, 34528, 0) | 0;
    if ($420) {
     $422 = $ss + 8 | 0;
     __THREW__ = 0;
     invoke_iiii(25, $422 | 0, 34544, 9) | 0;
     $423 = __THREW__;
     __THREW__ = 0;
     if ($423 & 1) {
      label = 24;
      break L10;
     }
     $426 = HEAP32[$420 + 48 >> 2] | 0;
     $428 = HEAP32[$420 + 52 >> 2] | 0;
     L162 : do if (($426 | 0) != ($428 | 0)) {
      $431 = $426;
      $prefix10$0286 = 34272;
      while (1) {
       $430 = HEAP32[$431 >> 2] | 0;
       $432 = _strlen($prefix10$0286 | 0) | 0;
       __THREW__ = 0;
       $433 = invoke_iiii(25, $422 | 0, $prefix10$0286 | 0, $432 | 0) | 0;
       $434 = __THREW__;
       __THREW__ = 0;
       if ($434 & 1) break;
       $436 = HEAP8[$430 >> 0] | 0;
       if (!($436 & 1)) {
        $446 = $430 + 1 | 0;
        $447 = ($436 & 255) >>> 1;
       } else {
        $446 = HEAP32[$430 + 8 >> 2] | 0;
        $447 = HEAP32[$430 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $433 | 0, $446 | 0, $447 | 0) | 0;
       $448 = __THREW__;
       __THREW__ = 0;
       if ($448 & 1) break;
       $431 = $431 + 4 | 0;
       if (($431 | 0) == ($428 | 0)) break L162; else $prefix10$0286 = 34280;
      }
      $89 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body71$index15Z2D = tempRet0;
      $eh$lpad$body71$indexZ2D = $89;
      break L10;
     } while (0);
     __THREW__ = 0;
     $452 = invoke_iiii(25, $422 | 0, 34560, 2) | 0;
     $453 = __THREW__;
     __THREW__ = 0;
     if ($453 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $15 | 0, HEAP32[$420 + 60 >> 2] | 0);
     $457 = __THREW__;
     __THREW__ = 0;
     if ($457 & 1) {
      label = 24;
      break L10;
     }
     $459 = HEAP8[$15 >> 0] | 0;
     if (!($459 & 1)) {
      $469 = $15 + 1 | 0;
      $470 = ($459 & 255) >>> 1;
     } else {
      $469 = HEAP32[$15 + 8 >> 2] | 0;
      $470 = HEAP32[$15 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $452 | 0, $469 | 0, $470 | 0) | 0;
     $471 = __THREW__;
     __THREW__ = 0;
     if (!($471 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
      break;
     }
     $473 = ___cxa_find_matching_catch() | 0;
     $474 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
     $$9 = $473;
     $$910 = $474;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $475 = ___dynamic_cast($ast_, 34e3, 34576, 0) | 0;
    if ($475) {
     __THREW__ = 0;
     $478 = invoke_iiii(25, $ss + 8 | 0, 34592, 7) | 0;
     $479 = __THREW__;
     __THREW__ = 0;
     if ($479 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(54, $16 | 0, $475 + 48 | 0);
     $482 = __THREW__;
     __THREW__ = 0;
     if ($482 & 1) {
      label = 24;
      break L10;
     }
     $484 = HEAP8[$16 >> 0] | 0;
     if (!($484 & 1)) {
      $494 = $16 + 1 | 0;
      $495 = ($484 & 255) >>> 1;
     } else {
      $494 = HEAP32[$16 + 8 >> 2] | 0;
      $495 = HEAP32[$16 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $478 | 0, $494 | 0, $495 | 0) | 0;
     $496 = __THREW__;
     __THREW__ = 0;
     if (!($496 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
      break;
     }
     $498 = ___cxa_find_matching_catch() | 0;
     $499 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
     $$9 = $498;
     $$910 = $499;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $500 = ___dynamic_cast($ast_, 34e3, 34616, 0) | 0;
    if ($500) {
     __THREW__ = 0;
     $503 = invoke_iiii(25, $ss + 8 | 0, 34632, 10) | 0;
     $504 = __THREW__;
     __THREW__ = 0;
     if ($504 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(54, $17 | 0, $500 + 48 | 0);
     $507 = __THREW__;
     __THREW__ = 0;
     if ($507 & 1) {
      label = 24;
      break L10;
     }
     $509 = HEAP8[$17 >> 0] | 0;
     if (!($509 & 1)) {
      $519 = $17 + 1 | 0;
      $520 = ($509 & 255) >>> 1;
     } else {
      $519 = HEAP32[$17 + 8 >> 2] | 0;
      $520 = HEAP32[$17 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $503 | 0, $519 | 0, $520 | 0) | 0;
     $521 = __THREW__;
     __THREW__ = 0;
     if (!($521 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
      break;
     }
     $523 = ___cxa_find_matching_catch() | 0;
     $524 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
     $$9 = $523;
     $$910 = $524;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $525 = ___dynamic_cast($ast_, 34e3, 34656, 0) | 0;
    if ($525) {
     __THREW__ = 0;
     invoke_vii(53, $18 | 0, HEAP32[$525 + 48 >> 2] | 0);
     $529 = __THREW__;
     __THREW__ = 0;
     if ($529 & 1) {
      label = 24;
      break L10;
     }
     $532 = HEAP8[$18 >> 0] | 0;
     if (!($532 & 1)) {
      $542 = $18 + 1 | 0;
      $543 = ($532 & 255) >>> 1;
     } else {
      $542 = HEAP32[$18 + 8 >> 2] | 0;
      $543 = HEAP32[$18 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $544 = invoke_iiii(25, $ss + 8 | 0, $542 | 0, $543 | 0) | 0;
     $545 = __THREW__;
     __THREW__ = 0;
     do if ($545 & 1) label = 194; else {
      __THREW__ = 0;
      $547 = invoke_iiii(25, $544 | 0, 34328, 1) | 0;
      $548 = __THREW__;
      __THREW__ = 0;
      if ($548 & 1) {
       label = 194;
       break;
      }
      __THREW__ = 0;
      invoke_vii(53, $19 | 0, HEAP32[$525 + 52 >> 2] | 0);
      $552 = __THREW__;
      __THREW__ = 0;
      if ($552 & 1) {
       label = 194;
       break;
      }
      $554 = HEAP8[$19 >> 0] | 0;
      if (!($554 & 1)) {
       $564 = $19 + 1 | 0;
       $565 = ($554 & 255) >>> 1;
      } else {
       $564 = HEAP32[$19 + 8 >> 2] | 0;
       $565 = HEAP32[$19 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $566 = invoke_iiii(25, $547 | 0, $564 | 0, $565 | 0) | 0;
      $567 = __THREW__;
      __THREW__ = 0;
      do if (!($567 & 1)) {
       __THREW__ = 0;
       invoke_iiii(25, $566 | 0, 34336, 1) | 0;
       $569 = __THREW__;
       __THREW__ = 0;
       if ($569 & 1) break;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($18);
       break L12;
      } while (0);
      $573 = ___cxa_find_matching_catch() | 0;
      $574 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
      $$4 = $573;
      $$45 = $574;
     } while (0);
     if ((label | 0) == 194) {
      $571 = ___cxa_find_matching_catch() | 0;
      $$4 = $571;
      $$45 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($18);
     $$9 = $$4;
     $$910 = $$45;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $575 = ___dynamic_cast($ast_, 34e3, 34016, 0) | 0;
    if ($575) {
     $578 = HEAP32[$575 + 48 >> 2] | 0;
     $579 = $575 + 52 | 0;
     $581 = $ss + 8 | 0;
     L236 : do if (($578 | 0) != ($579 | 0)) {
      $582 = $20 + 1 | 0;
      $583 = $20 + 8 | 0;
      $584 = $20 + 4 | 0;
      $590 = $578;
      $prefix19$0279 = 34672;
      while (1) {
       $585 = _strlen($prefix19$0279 | 0) | 0;
       __THREW__ = 0;
       $586 = invoke_iiii(25, $581 | 0, $prefix19$0279 | 0, $585 | 0) | 0;
       $587 = __THREW__;
       __THREW__ = 0;
       if ($587 & 1) {
        label = 20;
        break;
       }
       $591 = HEAP32[$590 + 16 >> 2] | 0;
       $592 = HEAP8[$591 >> 0] | 0;
       if (!($592 & 1)) {
        $602 = $591 + 1 | 0;
        $603 = ($592 & 255) >>> 1;
       } else {
        $602 = HEAP32[$591 + 8 >> 2] | 0;
        $603 = HEAP32[$591 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       $604 = invoke_iiii(25, $586 | 0, $602 | 0, $603 | 0) | 0;
       $605 = __THREW__;
       __THREW__ = 0;
       if ($605 & 1) {
        label = 20;
        break;
       }
       __THREW__ = 0;
       $607 = invoke_iiii(25, $604 | 0, 34680, 3) | 0;
       $608 = __THREW__;
       __THREW__ = 0;
       if ($608 & 1) {
        label = 20;
        break;
       }
       __THREW__ = 0;
       invoke_vii(53, $20 | 0, HEAP32[$590 + 20 >> 2] | 0);
       $612 = __THREW__;
       __THREW__ = 0;
       if ($612 & 1) {
        label = 20;
        break;
       }
       $614 = HEAP8[$20 >> 0] | 0;
       if (!($614 & 1)) {
        $621 = $582;
        $622 = ($614 & 255) >>> 1;
       } else {
        $621 = HEAP32[$583 >> 2] | 0;
        $622 = HEAP32[$584 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $607 | 0, $621 | 0, $622 | 0) | 0;
       $623 = __THREW__;
       __THREW__ = 0;
       if ($623 & 1) break;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
       $626 = HEAP32[$590 + 4 >> 2] | 0;
       if (!$626) {
        $$0$i$i$i = $590;
        while (1) {
         $631 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$631 >> 2] | 0) == ($$0$i$i$i | 0)) {
          $$01$i$i$i = $631;
          break;
         } else $$0$i$i$i = $631;
        }
       } else {
        $$0$i$i$i$i = $626;
        while (1) {
         $628 = HEAP32[$$0$i$i$i$i >> 2] | 0;
         if (!$628) {
          $$01$i$i$i = $$0$i$i$i$i;
          break;
         } else $$0$i$i$i$i = $628;
        }
       }
       if (($$01$i$i$i | 0) == ($579 | 0)) break L236; else {
        $590 = $$01$i$i$i;
        $prefix19$0279 = 34280;
       }
      }
      if ((label | 0) == 20) {
       $87 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body71$index15Z2D = tempRet0;
       $eh$lpad$body71$indexZ2D = $87;
       break L10;
      }
      $635 = ___cxa_find_matching_catch() | 0;
      $636 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
      $$9 = $635;
      $$910 = $636;
      HEAP32[$ss >> 2] = 772;
      $1052 = $ss + 64 | 0;
      HEAP32[$1052 >> 2] = 812;
      HEAP32[$33 >> 2] = 792;
      HEAP32[$34 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     __THREW__ = 0;
     $637 = invoke_iiii(25, $581 | 0, 34688, 2) | 0;
     $638 = __THREW__;
     __THREW__ = 0;
     if ($638 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $21 | 0, HEAP32[$575 + 60 >> 2] | 0);
     $642 = __THREW__;
     __THREW__ = 0;
     if ($642 & 1) {
      label = 24;
      break L10;
     }
     $644 = HEAP8[$21 >> 0] | 0;
     if (!($644 & 1)) {
      $654 = $21 + 1 | 0;
      $655 = ($644 & 255) >>> 1;
     } else {
      $654 = HEAP32[$21 + 8 >> 2] | 0;
      $655 = HEAP32[$21 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $637 | 0, $654 | 0, $655 | 0) | 0;
     $656 = __THREW__;
     __THREW__ = 0;
     if (!($656 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($21);
      break;
     }
     $658 = ___cxa_find_matching_catch() | 0;
     $659 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($21);
     $$9 = $658;
     $$910 = $659;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $660 = ___dynamic_cast($ast_, 34e3, 34720, 0) | 0;
    if ($660) {
     $666 = (HEAP8[$660 + 48 >> 0] | 0) != 0 ? 34736 : 34744;
     $667 = _strlen($666 | 0) | 0;
     __THREW__ = 0;
     invoke_iiii(25, $ss + 8 | 0, $666 | 0, $667 | 0) | 0;
     $668 = __THREW__;
     __THREW__ = 0;
     if ($668 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $670 = ___dynamic_cast($ast_, 34e3, 34768, 0) | 0;
    if ($670) {
     __THREW__ = 0;
     invoke_iid(1, $ss + 8 | 0, +(+HEAPF64[$670 + 48 >> 3])) | 0;
     $675 = __THREW__;
     __THREW__ = 0;
     if ($675 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $677 = ___dynamic_cast($ast_, 34e3, 34208, 0) | 0;
    if ($677) {
     __THREW__ = 0;
     invoke_vii(54, $22 | 0, $677 + 48 | 0);
     $680 = __THREW__;
     __THREW__ = 0;
     if ($680 & 1) {
      label = 24;
      break L10;
     }
     $683 = HEAP8[$22 >> 0] | 0;
     if (!($683 & 1)) {
      $693 = $22 + 1 | 0;
      $694 = ($683 & 255) >>> 1;
     } else {
      $693 = HEAP32[$22 + 8 >> 2] | 0;
      $694 = HEAP32[$22 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $ss + 8 | 0, $693 | 0, $694 | 0) | 0;
     $695 = __THREW__;
     __THREW__ = 0;
     if (!($695 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
      break;
     }
     $697 = ___cxa_find_matching_catch() | 0;
     $698 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
     $$9 = $697;
     $$910 = $698;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 34e3, 34800, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(25, $ss + 8 | 0, 34816, 4) | 0;
     $701 = __THREW__;
     __THREW__ = 0;
     if ($701 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $703 = ___dynamic_cast($ast_, 34e3, 34832, 0) | 0;
    if ($703) {
     if (!(HEAP32[$703 + 56 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_iiii(25, $ss + 8 | 0, 34848, 3) | 0;
      $709 = __THREW__;
      __THREW__ = 0;
      if ($709 & 1) {
       label = 24;
       break L10;
      } else break;
     }
     $711 = $703 + 48 | 0;
     $713 = HEAP32[$703 + 52 >> 2] | 0;
     $715 = $ss + 8 | 0;
     L302 : do if (($713 | 0) != ($711 | 0)) {
      $716 = $23 + 1 | 0;
      $717 = $24 + 1 | 0;
      $718 = $24 + 8 | 0;
      $719 = $24 + 4 | 0;
      $720 = $23 + 8 | 0;
      $721 = $23 + 4 | 0;
      $726 = $713;
      $prefix27$0270 = 34856;
      while (1) {
       $722 = _strlen($prefix27$0270 | 0) | 0;
       __THREW__ = 0;
       invoke_iiii(25, $715 | 0, $prefix27$0270 | 0, $722 | 0) | 0;
       $723 = __THREW__;
       __THREW__ = 0;
       if ($723 & 1) {
        label = 19;
        break;
       }
       $725 = $726 + 12 | 0;
       $727 = HEAP32[$725 >> 2] | 0;
       if (($727 | 0) == 1) $colons$0 = 34872; else if (($727 | 0) == 2) $colons$0 = 34880; else if (!$727) $colons$0 = 34864; else {
        __THREW__ = 0;
        $728 = invoke_iiii(25, 41312, 34888, 35) | 0;
        $729 = __THREW__;
        __THREW__ = 0;
        if ($729 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        $732 = invoke_iii(21, $728 | 0, HEAP32[$725 >> 2] | 0) | 0;
        $733 = __THREW__;
        __THREW__ = 0;
        if ($733 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        invoke_vii(47, $0 | 0, $732 + (HEAP32[(HEAP32[$732 >> 2] | 0) + -12 >> 2] | 0) | 0);
        $739 = __THREW__;
        __THREW__ = 0;
        if ($739 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        $741 = invoke_iii(22, $0 | 0, 45800) | 0;
        $742 = __THREW__;
        __THREW__ = 0;
        if ($742 & 1) {
         label = 253;
         break;
        }
        __THREW__ = 0;
        $747 = invoke_iii(HEAP32[(HEAP32[$741 >> 2] | 0) + 28 >> 2] | 0, $741 | 0, 10) | 0;
        $748 = __THREW__;
        __THREW__ = 0;
        if ($748 & 1) {
         label = 253;
         break;
        }
        __ZNSt3__16localeD2Ev($0);
        __THREW__ = 0;
        invoke_iii(27, $732 | 0, $747 | 0) | 0;
        $752 = __THREW__;
        __THREW__ = 0;
        if ($752 & 1) {
         label = 19;
         break;
        }
        __THREW__ = 0;
        invoke_ii(68, $732 | 0) | 0;
        $754 = __THREW__;
        __THREW__ = 0;
        if ($754 & 1) {
         label = 19;
         break;
        } else $colons$0 = 0;
       }
       __THREW__ = 0;
       $756 = invoke_iiii(25, $715 | 0, 34328, 1) | 0;
       $757 = __THREW__;
       __THREW__ = 0;
       if ($757 & 1) {
        label = 19;
        break;
       }
       __THREW__ = 0;
       invoke_vii(53, $23 | 0, HEAP32[$726 + 8 >> 2] | 0);
       $761 = __THREW__;
       __THREW__ = 0;
       if ($761 & 1) {
        label = 19;
        break;
       }
       $763 = HEAP8[$23 >> 0] | 0;
       if (!($763 & 1)) {
        $770 = $716;
        $771 = ($763 & 255) >>> 1;
       } else {
        $770 = HEAP32[$720 >> 2] | 0;
        $771 = HEAP32[$721 >> 2] | 0;
       }
       __THREW__ = 0;
       $772 = invoke_iiii(25, $756 | 0, $770 | 0, $771 | 0) | 0;
       $773 = __THREW__;
       __THREW__ = 0;
       if ($773 & 1) {
        label = 271;
        break;
       }
       __THREW__ = 0;
       $775 = invoke_iiii(25, $772 | 0, 34336, 1) | 0;
       $776 = __THREW__;
       __THREW__ = 0;
       if ($776 & 1) {
        label = 271;
        break;
       }
       $778 = _strlen($colons$0 | 0) | 0;
       __THREW__ = 0;
       $779 = invoke_iiii(25, $775 | 0, $colons$0 | 0, $778 | 0) | 0;
       $780 = __THREW__;
       __THREW__ = 0;
       if ($780 & 1) {
        label = 271;
        break;
       }
       __THREW__ = 0;
       $782 = invoke_iiii(25, $779 | 0, 34368, 1) | 0;
       $783 = __THREW__;
       __THREW__ = 0;
       if ($783 & 1) {
        label = 271;
        break;
       }
       __THREW__ = 0;
       invoke_vii(53, $24 | 0, HEAP32[$726 + 16 >> 2] | 0);
       $787 = __THREW__;
       __THREW__ = 0;
       if ($787 & 1) {
        label = 271;
        break;
       }
       $789 = HEAP8[$24 >> 0] | 0;
       if (!($789 & 1)) {
        $796 = $717;
        $797 = ($789 & 255) >>> 1;
       } else {
        $796 = HEAP32[$718 >> 2] | 0;
        $797 = HEAP32[$719 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $782 | 0, $796 | 0, $797 | 0) | 0;
       $798 = __THREW__;
       __THREW__ = 0;
       if ($798 & 1) {
        label = 272;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($24);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23);
       $726 = HEAP32[$726 + 4 >> 2] | 0;
       if (($726 | 0) == ($711 | 0)) break L302; else $prefix27$0270 = 34280;
      }
      if ((label | 0) == 19) {
       $85 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body71$index15Z2D = tempRet0;
       $eh$lpad$body71$indexZ2D = $85;
       break L10;
      } else if ((label | 0) == 253) {
       $750 = ___cxa_find_matching_catch() | 0;
       $751 = tempRet0;
       __ZNSt3__16localeD2Ev($0);
       $eh$lpad$body71$index15Z2D = $751;
       $eh$lpad$body71$indexZ2D = $750;
       break L10;
      } else if ((label | 0) == 271) {
       $803 = ___cxa_find_matching_catch() | 0;
       $$5 = $803;
       $$56 = tempRet0;
      } else if ((label | 0) == 272) {
       $805 = ___cxa_find_matching_catch() | 0;
       $806 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($24);
       $$5 = $805;
       $$56 = $806;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($23);
      $$9 = $$5;
      $$910 = $$56;
      HEAP32[$ss >> 2] = 772;
      $1052 = $ss + 64 | 0;
      HEAP32[$1052 >> 2] = 812;
      HEAP32[$33 >> 2] = 792;
      HEAP32[$34 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     __THREW__ = 0;
     invoke_iiii(25, $715 | 0, 34928, 1) | 0;
     $807 = __THREW__;
     __THREW__ = 0;
     if ($807 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $809 = ___dynamic_cast($ast_, 34e3, 34960, 0) | 0;
    if ($809) {
     $811 = $ss + 8 | 0;
     __THREW__ = 0;
     $812 = invoke_iiii(25, $811 | 0, 34976, 2) | 0;
     $813 = __THREW__;
     __THREW__ = 0;
     if ($813 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(53, $25 | 0, HEAP32[$809 + 48 >> 2] | 0);
     $817 = __THREW__;
     __THREW__ = 0;
     if ($817 & 1) {
      label = 24;
      break L10;
     }
     $819 = HEAP8[$25 >> 0] | 0;
     if (!($819 & 1)) {
      $829 = $25 + 1 | 0;
      $830 = ($819 & 255) >>> 1;
     } else {
      $829 = HEAP32[$25 + 8 >> 2] | 0;
      $830 = HEAP32[$25 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $831 = invoke_iiii(25, $812 | 0, $829 | 0, $830 | 0) | 0;
     $832 = __THREW__;
     __THREW__ = 0;
     do if ($832 & 1) label = 300; else {
      __THREW__ = 0;
      $834 = invoke_iiii(25, $831 | 0, 34984, 3) | 0;
      $835 = __THREW__;
      __THREW__ = 0;
      if ($835 & 1) {
       label = 300;
       break;
      }
      __THREW__ = 0;
      invoke_vii(53, $26 | 0, HEAP32[$809 + 52 >> 2] | 0);
      $839 = __THREW__;
      __THREW__ = 0;
      if ($839 & 1) {
       label = 300;
       break;
      }
      $841 = HEAP8[$26 >> 0] | 0;
      if (!($841 & 1)) {
       $851 = $26 + 1 | 0;
       $852 = ($841 & 255) >>> 1;
      } else {
       $851 = HEAP32[$26 + 8 >> 2] | 0;
       $852 = HEAP32[$26 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $834 | 0, $851 | 0, $852 | 0) | 0;
      $853 = __THREW__;
      __THREW__ = 0;
      if ($853 & 1) {
       $900 = ___cxa_find_matching_catch() | 0;
       $901 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
       $$6 = $900;
       $$67 = $901;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
      __THREW__ = 0;
      $855 = invoke_iiii(25, $811 | 0, 34992, 5) | 0;
      $856 = __THREW__;
      __THREW__ = 0;
      if ($856 & 1) {
       label = 24;
       break L10;
      }
      $859 = HEAP32[$809 + 56 >> 2] | 0;
      $860 = HEAP8[$859 >> 0] | 0;
      if (!($860 & 1)) {
       $870 = $859 + 1 | 0;
       $871 = ($860 & 255) >>> 1;
      } else {
       $870 = HEAP32[$859 + 8 >> 2] | 0;
       $871 = HEAP32[$859 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $872 = invoke_iiii(25, $855 | 0, $870 | 0, $871 | 0) | 0;
      $873 = __THREW__;
      __THREW__ = 0;
      if ($873 & 1) {
       label = 24;
       break L10;
      }
      __THREW__ = 0;
      $875 = invoke_iiii(25, $872 | 0, 35e3, 4) | 0;
      $876 = __THREW__;
      __THREW__ = 0;
      if ($876 & 1) {
       label = 24;
       break L10;
      }
      __THREW__ = 0;
      invoke_vii(53, $27 | 0, HEAP32[$809 + 60 >> 2] | 0);
      $880 = __THREW__;
      __THREW__ = 0;
      if ($880 & 1) {
       label = 24;
       break L10;
      }
      $882 = HEAP8[$27 >> 0] | 0;
      if (!($882 & 1)) {
       $892 = $27 + 1 | 0;
       $893 = ($882 & 255) >>> 1;
      } else {
       $892 = HEAP32[$27 + 8 >> 2] | 0;
       $893 = HEAP32[$27 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $875 | 0, $892 | 0, $893 | 0) | 0;
      $894 = __THREW__;
      __THREW__ = 0;
      if (!($894 & 1)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($27);
       __THREW__ = 0;
       invoke_iiii(25, $811 | 0, 34928, 1) | 0;
       $896 = __THREW__;
       __THREW__ = 0;
       if ($896 & 1) {
        label = 24;
        break L10;
       } else break L12;
      }
      $902 = ___cxa_find_matching_catch() | 0;
      $903 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($27);
      $$9 = $902;
      $$910 = $903;
      HEAP32[$ss >> 2] = 772;
      $1052 = $ss + 64 | 0;
      HEAP32[$1052 >> 2] = 812;
      HEAP32[$33 >> 2] = 792;
      HEAP32[$34 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     if ((label | 0) == 300) {
      $898 = ___cxa_find_matching_catch() | 0;
      $$6 = $898;
      $$67 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($25);
     $$9 = $$6;
     $$910 = $$67;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 34e3, 35016, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(25, $ss + 8 | 0, 35032, 4) | 0;
     $906 = __THREW__;
     __THREW__ = 0;
     if ($906 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    if (___dynamic_cast($ast_, 34e3, 35048, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(25, $ss + 8 | 0, 35064, 5) | 0;
     $910 = __THREW__;
     __THREW__ = 0;
     if ($910 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $912 = ___dynamic_cast($ast_, 34e3, 35080, 0) | 0;
    if (!$912) {
     $991 = ___dynamic_cast($ast_, 34e3, 35104, 0) | 0;
     if (!$991) {
      label = 342;
      break L10;
     }
     $995 = HEAP32[$991 + 48 >> 2] | 0;
     $996 = HEAP8[$995 >> 0] | 0;
     if (!($996 & 1)) {
      $1006 = $995 + 1 | 0;
      $1007 = ($996 & 255) >>> 1;
     } else {
      $1006 = HEAP32[$995 + 8 >> 2] | 0;
      $1007 = HEAP32[$995 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $ss + 8 | 0, $1006 | 0, $1007 | 0) | 0;
     $1008 = __THREW__;
     __THREW__ = 0;
     if ($1008 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $915 = HEAP32[$912 + 48 >> 2] | 0;
    if (($915 | 0) == 2) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 35152, 1);
     $916 = __THREW__;
     __THREW__ = 0;
     if ($916 & 1) {
      label = 24;
      break L10;
     }
    } else if (($915 | 0) == 3) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 35160, 1);
     $918 = __THREW__;
     __THREW__ = 0;
     if ($918 & 1) {
      label = 24;
      break L10;
     }
    } else if (($915 | 0) == 1) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 35168, 1);
     $920 = __THREW__;
     __THREW__ = 0;
     if ($920 & 1) {
      label = 24;
      break L10;
     }
    } else if (!$915) {
     __THREW__ = 0;
     invoke_viii(3, $28 | 0, 35176, 1);
     $922 = __THREW__;
     __THREW__ = 0;
     if ($922 & 1) {
      label = 24;
      break L10;
     }
    } else {
     __THREW__ = 0;
     $924 = invoke_iiii(25, 41312, 35184, 45) | 0;
     $925 = __THREW__;
     __THREW__ = 0;
     if ($925 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     $927 = invoke_iii(21, $924 | 0, $915 | 0) | 0;
     $928 = __THREW__;
     __THREW__ = 0;
     if ($928 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     invoke_vii(47, $1 | 0, $927 + (HEAP32[(HEAP32[$927 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $934 = __THREW__;
     __THREW__ = 0;
     if ($934 & 1) {
      label = 24;
      break L10;
     }
     __THREW__ = 0;
     $936 = invoke_iii(22, $1 | 0, 45800) | 0;
     $937 = __THREW__;
     __THREW__ = 0;
     do if (!($937 & 1)) {
      __THREW__ = 0;
      $942 = invoke_iii(HEAP32[(HEAP32[$936 >> 2] | 0) + 28 >> 2] | 0, $936 | 0, 10) | 0;
      $943 = __THREW__;
      __THREW__ = 0;
      if ($943 & 1) break;
      __ZNSt3__16localeD2Ev($1);
      __THREW__ = 0;
      invoke_iii(27, $927 | 0, $942 | 0) | 0;
      $947 = __THREW__;
      __THREW__ = 0;
      if ($947 & 1) {
       label = 24;
       break L10;
      }
      __THREW__ = 0;
      invoke_ii(68, $927 | 0) | 0;
      $949 = __THREW__;
      __THREW__ = 0;
      if ($949 & 1) {
       label = 24;
       break L10;
      }
      __THREW__ = 0;
      invoke_v(3);
      $951 = __THREW__;
      __THREW__ = 0;
      if ($951 & 1) {
       label = 24;
       break L10;
      }
     } while (0);
     $945 = ___cxa_find_matching_catch() | 0;
     $946 = tempRet0;
     __ZNSt3__16localeD2Ev($1);
     $eh$lpad$body71$index15Z2D = $946;
     $eh$lpad$body71$indexZ2D = $945;
     break L10;
    }
    $954 = HEAP8[$28 >> 0] | 0;
    if (!($954 & 1)) {
     $964 = $28 + 1 | 0;
     $965 = ($954 & 255) >>> 1;
    } else {
     $964 = HEAP32[$28 + 8 >> 2] | 0;
     $965 = HEAP32[$28 + 4 >> 2] | 0;
    }
    __THREW__ = 0;
    $966 = invoke_iiii(25, $ss + 8 | 0, $964 | 0, $965 | 0) | 0;
    $967 = __THREW__;
    __THREW__ = 0;
    do if ($967 & 1) label = 334; else {
     __THREW__ = 0;
     invoke_vii(53, $29 | 0, HEAP32[$912 + 52 >> 2] | 0);
     $971 = __THREW__;
     __THREW__ = 0;
     if ($971 & 1) {
      label = 334;
      break;
     }
     $973 = HEAP8[$29 >> 0] | 0;
     if (!($973 & 1)) {
      $983 = $29 + 1 | 0;
      $984 = ($973 & 255) >>> 1;
     } else {
      $983 = HEAP32[$29 + 8 >> 2] | 0;
      $984 = HEAP32[$29 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $966 | 0, $983 | 0, $984 | 0) | 0;
     $985 = __THREW__;
     __THREW__ = 0;
     if ($985 & 1) {
      $989 = ___cxa_find_matching_catch() | 0;
      $990 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
      $$7 = $989;
      $$78 = $990;
      break;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
      break L12;
     }
    } while (0);
    if ((label | 0) == 334) {
     $987 = ___cxa_find_matching_catch() | 0;
     $$7 = $987;
     $$78 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
    $$9 = $$7;
    $$910 = $$78;
    HEAP32[$ss >> 2] = 772;
    $1052 = $ss + 64 | 0;
    HEAP32[$1052 >> 2] = 812;
    HEAP32[$33 >> 2] = 792;
    HEAP32[$34 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
    ___resumeException($$9 | 0);
   } else {
    $56 = $ss + 8 | 0;
    __THREW__ = 0;
    invoke_vii(53, $5 | 0, HEAP32[$54 + 48 >> 2] | 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break L10;
    }
    $61 = HEAP8[$5 >> 0] | 0;
    if (!($61 & 1)) {
     $71 = $5 + 1 | 0;
     $72 = ($61 & 255) >>> 1;
    } else {
     $71 = HEAP32[$5 + 8 >> 2] | 0;
     $72 = HEAP32[$5 + 4 >> 2] | 0;
    }
    __THREW__ = 0;
    invoke_iiii(25, $56 | 0, $71 | 0, $72 | 0) | 0;
    $73 = __THREW__;
    __THREW__ = 0;
    if ($73 & 1) {
     $97 = ___cxa_find_matching_catch() | 0;
     $98 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
     $$9 = $97;
     $$910 = $98;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
    $77 = HEAP32[$54 + 56 >> 2] | 0;
    $78 = HEAP32[$54 + 52 >> 2] | 0;
    if (($77 | 0) == ($78 | 0)) {
     __THREW__ = 0;
     invoke_iiii(25, $56 | 0, 34264, 2) | 0;
     $83 = __THREW__;
     __THREW__ = 0;
     if ($83 & 1) {
      label = 24;
      break L10;
     } else break;
    }
    $80 = $6 + 1 | 0;
    $81 = $6 + 8 | 0;
    $82 = $6 + 4 | 0;
    $100 = $78;
    $prefix$0302 = 34272;
    while (1) {
     $99 = HEAP32[$100 >> 2] | 0;
     $101 = _strlen($prefix$0302 | 0) | 0;
     __THREW__ = 0;
     $102 = invoke_iiii(25, $56 | 0, $prefix$0302 | 0, $101 | 0) | 0;
     $103 = __THREW__;
     __THREW__ = 0;
     if ($103 & 1) {
      label = 23;
      break;
     }
     __THREW__ = 0;
     invoke_vii(53, $6 | 0, $99 | 0);
     $105 = __THREW__;
     __THREW__ = 0;
     if ($105 & 1) {
      label = 23;
      break;
     }
     $107 = HEAP8[$6 >> 0] | 0;
     if (!($107 & 1)) {
      $114 = $80;
      $115 = ($107 & 255) >>> 1;
     } else {
      $114 = HEAP32[$81 >> 2] | 0;
      $115 = HEAP32[$82 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $102 | 0, $114 | 0, $115 | 0) | 0;
     $116 = __THREW__;
     __THREW__ = 0;
     if ($116 & 1) {
      label = 34;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
     $100 = $100 + 4 | 0;
     if (($100 | 0) == ($77 | 0)) {
      label = 35;
      break;
     } else $prefix$0302 = 34280;
    }
    if ((label | 0) == 23) {
     $93 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body71$index15Z2D = tempRet0;
     $eh$lpad$body71$indexZ2D = $93;
     break L10;
    } else if ((label | 0) == 34) {
     $120 = ___cxa_find_matching_catch() | 0;
     $121 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
     $$9 = $120;
     $$910 = $121;
     HEAP32[$ss >> 2] = 772;
     $1052 = $ss + 64 | 0;
     HEAP32[$1052 >> 2] = 812;
     HEAP32[$33 >> 2] = 792;
     HEAP32[$34 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    } else if ((label | 0) == 35) {
     __THREW__ = 0;
     invoke_iiii(25, $56 | 0, 34288, 1) | 0;
     $122 = __THREW__;
     __THREW__ = 0;
     if ($122 & 1) {
      label = 24;
      break L10;
     } else break;
    }
   } while (0);
   __THREW__ = 0;
   invoke_vii(43, $31 | 0, $34 | 0);
   $1039 = __THREW__;
   __THREW__ = 0;
   if ($1039 & 1) label = 24; else {
    __THREW__ = 0;
    $1041 = invoke_iiii(29, $31 | 0, 0, 34272) | 0;
    $1042 = __THREW__;
    __THREW__ = 0;
    do if ($1042 & 1) {
     $1048 = ___cxa_find_matching_catch() | 0;
     $$8 = $1048;
     $$89 = tempRet0;
    } else {
     HEAP32[$30 + 0 >> 2] = HEAP32[$1041 + 0 >> 2];
     HEAP32[$30 + 4 >> 2] = HEAP32[$1041 + 4 >> 2];
     HEAP32[$30 + 8 >> 2] = HEAP32[$1041 + 8 >> 2];
     HEAP32[$1041 + 0 >> 2] = 0;
     HEAP32[$1041 + 4 >> 2] = 0;
     HEAP32[$1041 + 8 >> 2] = 0;
     __THREW__ = 0;
     $1044 = invoke_iii(29, $30 | 0, 34288) | 0;
     $1045 = __THREW__;
     __THREW__ = 0;
     if ($1045 & 1) {
      $1050 = ___cxa_find_matching_catch() | 0;
      $1051 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($30);
      $$8 = $1050;
      $$89 = $1051;
      break;
     } else {
      HEAP32[$agg$result + 0 >> 2] = HEAP32[$1044 + 0 >> 2];
      HEAP32[$agg$result + 4 >> 2] = HEAP32[$1044 + 4 >> 2];
      HEAP32[$agg$result + 8 >> 2] = HEAP32[$1044 + 8 >> 2];
      HEAP32[$1044 + 0 >> 2] = 0;
      HEAP32[$1044 + 4 >> 2] = 0;
      HEAP32[$1044 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($30);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($31);
      HEAP32[$ss >> 2] = 772;
      HEAP32[$ss + 64 >> 2] = 812;
      HEAP32[$33 >> 2] = 792;
      HEAP32[$34 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      STACKTOP = sp;
      return;
     }
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($31);
    $$9 = $$8;
    $$910 = $$89;
    HEAP32[$ss >> 2] = 772;
    $1052 = $ss + 64 | 0;
    HEAP32[$1052 >> 2] = 812;
    HEAP32[$33 >> 2] = 792;
    HEAP32[$34 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
    ___resumeException($$9 | 0);
   }
  } while (0);
  do if ((label | 0) == 342) {
   __THREW__ = 0;
   $1010 = invoke_iiii(25, 41312, 35120, 29) | 0;
   $1011 = __THREW__;
   __THREW__ = 0;
   if ($1011 & 1) label = 24; else {
    __THREW__ = 0;
    $1013 = invoke_iii(28, $1010 | 0, $ast_ | 0) | 0;
    $1014 = __THREW__;
    __THREW__ = 0;
    if ($1014 & 1) label = 24; else {
     __THREW__ = 0;
     invoke_vii(47, $2 | 0, $1013 + (HEAP32[(HEAP32[$1013 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $1020 = __THREW__;
     __THREW__ = 0;
     if ($1020 & 1) label = 24; else {
      __THREW__ = 0;
      $1022 = invoke_iii(22, $2 | 0, 45800) | 0;
      $1023 = __THREW__;
      __THREW__ = 0;
      if (!($1023 & 1)) {
       __THREW__ = 0;
       $1028 = invoke_iii(HEAP32[(HEAP32[$1022 >> 2] | 0) + 28 >> 2] | 0, $1022 | 0, 10) | 0;
       $1029 = __THREW__;
       __THREW__ = 0;
       if (!($1029 & 1)) {
        __ZNSt3__16localeD2Ev($2);
        __THREW__ = 0;
        invoke_iii(27, $1013 | 0, $1028 | 0) | 0;
        $1033 = __THREW__;
        __THREW__ = 0;
        if ($1033 & 1) {
         label = 24;
         break;
        }
        __THREW__ = 0;
        invoke_ii(68, $1013 | 0) | 0;
        $1035 = __THREW__;
        __THREW__ = 0;
        if ($1035 & 1) {
         label = 24;
         break;
        }
        __THREW__ = 0;
        invoke_v(3);
        $1037 = __THREW__;
        __THREW__ = 0;
        if ($1037 & 1) {
         label = 24;
         break;
        }
       }
      }
      $1031 = ___cxa_find_matching_catch() | 0;
      $1032 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $eh$lpad$body71$index15Z2D = $1032;
      $eh$lpad$body71$indexZ2D = $1031;
     }
    }
   }
  } while (0);
  if ((label | 0) == 24) {
   $95 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body71$index15Z2D = tempRet0;
   $eh$lpad$body71$indexZ2D = $95;
  }
  $$9 = $eh$lpad$body71$indexZ2D;
  $$910 = $eh$lpad$body71$index15Z2D;
  HEAP32[$ss >> 2] = 772;
  $1052 = $ss + 64 | 0;
  HEAP32[$1052 >> 2] = 812;
  HEAP32[$33 >> 2] = 792;
  HEAP32[$34 >> 2] = 1104;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($43);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
  ___resumeException($$9 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
 ___resumeException($$01$i | 0);
}

function _printf_core($f, $fmt, $ap, $nl_arg, $nl_type) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 $nl_arg = $nl_arg | 0;
 $nl_type = $nl_type | 0;
 var $$$p$i = 0, $$0 = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i102$i = 0, $$0$lcssa$i109$i = 0, $$0$lcssa$i133$i = 0, $$0$lcssa$i148$i = 0, $$0$lcssa$i40 = 0, $$0$lcssa$i44$i = 0, $$0$lcssa$i45 = 0, $$0$lcssa$i47 = 0, $$0$lcssa$i51$i = 0, $$0$lcssa$i53$i = 0, $$0$lcssa$i55 = 0, $$0$lcssa$i61$i = 0, $$0$lcssa$i62 = 0, $$0$lcssa$i68$i = 0, $$0$lcssa$i69 = 0, $$0$lcssa$i74$i = 0, $$0$lcssa$i79 = 0, $$0$lcssa$i81$i = 0, $$0$lcssa$i89$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i100$i = 0, $$01$i107$i = 0, $$01$i131$i = 0, $$01$i146$i = 0, $$01$i38 = 0, $$01$i42$i = 0, $$01$i49$i = 0, $$01$i53 = 0, $$01$i59$i = 0, $$01$i60 = 0, $$01$i66$i = 0, $$01$i67 = 0, $$01$i72$i = 0, $$01$i77 = 0, $$01$i79$i = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i90$i = 0, $$010$i = 0.0, $$012$i = 0, $$016$i = 0, $$03$i42 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i84$i = 0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i117$i = 0, $$117$i = 0, $$12$i = 0, $$12$i$i = 0, $$12$i115$i = 0, $$12$i124$i = 0, $$12$i139$i = 0, $$12$i92$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$213$i = 0, $$23$i = 0, $$23$us$i = 0, $$25$i = 0.0, $$26$i = 0, $$28$i = 0, $$3$i = 0.0, $$314$i = 0, $$36$i = 0, $$4$i = 0.0, $$415$lcssa$i = 0, $$415171$i = 0, $$5189$i = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us308$i = 0, $$a$3310$i = 0, $$fl$4 = 0, $$lcssa292$i = 0, $$lcssa95 = 0, $$p$5 = 0, $$p$i = 0, $$pn$i = 0, $$pr = 0, $$pr$i = 0, $$pr151$i = 0, $$pre306$i = 0, $$z$4$us$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1002 = 0, $1006 = 0, $1007 = 0, $1011 = 0, $1013 = 0, $1016 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1025 = 0.0, $1026 = 0.0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $11 = 0, $12 = 0, $121 = 0, $122 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $131 = 0, $132 = 0, $134 = 0, $136 = 0, $138 = 0, $139 = 0, $14 = 0, $144 = 0, $147 = 0, $15 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $160 = 0, $162 = 0, $165 = 0, $166 = 0, $172 = 0, $173 = 0, $179 = 0, $180 = 0.0, $183 = 0.0, $186 = 0, $187 = 0, $194 = 0, $195 = 0, $2 = 0, $201 = 0, $213 = 0, $22 = 0, $220 = 0, $222 = 0, $226 = 0, $23 = 0, $233 = 0, $245 = 0, $247 = 0, $25 = 0, $250 = 0, $251 = 0, $26 = 0, $261 = 0, $265 = 0, $267 = 0, $269 = 0, $274 = 0, $275 = 0, $276 = 0, $28 = 0, $292 = 0, $297 = 0, $299 = 0, $3 = 0, $301 = 0, $307 = 0, $31 = 0, $315 = 0, $32 = 0, $321 = 0, $323 = 0, $325 = 0, $330 = 0, $333 = 0, $335 = 0, $336 = 0, $344 = 0, $346 = 0, $352 = 0, $360 = 0.0, $365 = 0, $369 = 0, $37 = 0, $376 = 0, $380 = 0, $383 = 0, $384 = 0, $39 = 0, $393 = 0, $4 = 0, $40 = 0, $401 = 0.0, $402 = 0, $405 = 0, $407 = 0, $410 = 0, $425 = 0, $428 = 0, $432 = 0, $433 = 0, $434 = 0, $45 = 0, $450 = 0, $46 = 0, $462 = 0, $465 = 0, $47 = 0, $471 = 0, $480 = 0, $486 = 0, $495 = 0, $5 = 0, $501 = 0, $51 = 0, $513 = 0, $518 = 0, $519 = 0, $52 = 0, $521 = 0, $522 = 0, $530 = 0, $537 = 0, $539 = 0, $541 = 0, $55 = 0, $550 = 0, $56 = 0, $560 = 0, $561 = 0, $563 = 0, $564 = 0, $57 = 0, $571 = 0, $573 = 0, $576 = 0, $578 = 0, $579 = 0, $580 = 0, $586 = 0, $588 = 0, $592 = 0, $597 = 0, $599 = 0, $6 = 0, $600 = 0, $601 = 0, $61 = 0, $620 = 0, $622 = 0, $625 = 0, $629 = 0, $63 = 0, $630 = 0, $637 = 0, $638 = 0, $639 = 0, $664 = 0, $665 = 0, $668 = 0, $673 = 0, $675 = 0, $682 = 0, $683 = 0, $684 = 0, $687 = 0, $688 = 0, $689 = 0, $696 = 0, $7 = 0, $706 = 0, $709 = 0, $711 = 0, $713 = 0, $715 = 0, $720 = 0, $721 = 0, $724 = 0, $726 = 0, $728 = 0, $730 = 0, $744 = 0, $749 = 0, $758 = 0, $759 = 0, $763 = 0, $766 = 0, $769 = 0, $770 = 0, $772 = 0, $776 = 0, $780 = 0, $781 = 0, $782 = 0, $798 = 0, $8 = 0, $804 = 0, $814 = 0, $819 = 0, $82 = 0, $820 = 0, $822 = 0, $823 = 0, $831 = 0, $839 = 0, $844 = 0, $849 = 0, $86 = 0, $860 = 0, $869 = 0, $874 = 0, $887 = 0, $888 = 0, $89 = 0, $899 = 0, $9 = 0, $901 = 0, $904 = 0, $92 = 0, $920 = 0, $929 = 0, $931 = 0, $933 = 0, $935 = 0, $936 = 0, $944 = 0, $952 = 0, $960 = 0, $97 = 0, $970 = 0, $972 = 0, $974 = 0, $975 = 0, $978 = 0, $982 = 0, $983 = 0, $987 = 0, $989 = 0, $99 = 0, $992 = 0, $993 = 0, $997 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1258$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3244$i = 0, $a$3244$us$i = 0, $a$5$lcssa$i = 0, $a$5218$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0, $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0, $arglist_current8 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0250$i = 0, $carry3$0238$i = 0, $carry3$0238$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $d$0249$i = 0, $d$0251$i = 0, $d$1237$i = 0, $d$1237$us$i = 0, $d$2$lcssa$i = 0, $d$2217$i = 0, $d$3$i = 0, $d$4180$i = 0, $d$5170$i = 0, $d$6188$i = 0, $e$0233$i = 0, $e$1$i = 0, $e$2213$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1195$i = 0, $estr$2$i = 0, $fl$0106 = 0, $fl$0111 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa265 = 0, $i$0160 = 0, $i$0232$i = 0, $i$03$i = 0, $i$03$i24 = 0, $i$1$lcssa$i = 0, $i$1168 = 0, $i$1225$i = 0, $i$2212$i = 0, $i$292 = 0, $i$3204$i = 0, $i$389 = 0, $isdigittmp = 0, $isdigittmp3 = 0, $isdigittmp5 = 0, $j$0224$i = 0, $j$0226$i = 0, $j$1205$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1159 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $or$cond13 = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$4264 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$0$i = 0, $re$1163$i = 0, $round$0162$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0, $s$1$i = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$us$i = 0, $s1$0$i = 0, $s7$0177$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0165$i = 0, $s9$0$i = 0, $s9$1184$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $storemerge = 0, $storemerge2104 = 0, $storemerge2110 = 0, $storemerge7 = 0, $t$0 = 0, $t$1 = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $wc = 0, $ws$0161 = 0, $ws$1169 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i114$i = 0, $y$03$i123$i = 0, $y$03$i138$i = 0, $y$03$i91$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$096 = 0, $z$1$lcssa$i = 0, $z$1257$i = 0, $z$2 = 0, $z$2$i = 0, $z$3$lcssa$i = 0, $z$3243$i = 0, $z$3243$us$i = 0, $z$4$i = 0, $z$4$us$i = 0, $z$5$i = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$ph$i = 0, label = 0, sp = 0, $432$looptemp = 0, $780$looptemp = 0, $274$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864 | 0;
 $big$i = sp + 16 | 0;
 $e2$i = sp + 8 | 0;
 $buf$i = sp + 836 | 0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824 | 0;
 $pad$i = sp + 568 | 0;
 $buf = sp + 528 | 0;
 $wc = sp;
 $mb = sp + 520 | 0;
 $1 = ($f | 0) != 0;
 $2 = $buf + 40 | 0;
 $3 = $2;
 $4 = $buf + 39 | 0;
 $5 = $wc + 4 | 0;
 $6 = $wc;
 $7 = $ebuf0$i + 12 | 0;
 $8 = $ebuf0$i + 11 | 0;
 $9 = $7;
 $10 = $9 - $0 | 0;
 $11 = -2 - $0 | 0;
 $12 = $9 + 2 | 0;
 $13 = $big$i + 288 | 0;
 $14 = $buf$i + 9 | 0;
 $15 = $14;
 $16 = $buf$i + 8 | 0;
 $1034 = 0;
 $1035 = 0;
 $23 = $fmt;
 $cnt$0 = 0;
 $l$0 = 0;
 $l10n$0 = 0;
 L1 : while (1) {
  do if (($cnt$0 | 0) > -1) if (($l$0 | 0) > (2147483647 - $cnt$0 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   $cnt$1 = -1;
   break;
  } else {
   $cnt$1 = $l$0 + $cnt$0 | 0;
   break;
  } else $cnt$1 = $cnt$0; while (0);
  $22 = HEAP8[$23 >> 0] | 0;
  if (!($22 << 24 >> 24)) {
   label = 352;
   break;
  } else {
   $1036 = $22;
   $26 = $23;
  }
  while (1) {
   if (!($1036 << 24 >> 24)) {
    $$lcssa95 = $26;
    $z$0$lcssa = $26;
    break;
   } else if ($1036 << 24 >> 24 == 37) {
    $28 = $26;
    $z$096 = $26;
    label = 9;
    break;
   }
   $25 = $26 + 1 | 0;
   $1036 = HEAP8[$25 >> 0] | 0;
   $26 = $25;
  }
  L12 : do if ((label | 0) == 9) while (1) {
   label = 0;
   if ((HEAP8[$28 + 1 >> 0] | 0) != 37) {
    $$lcssa95 = $28;
    $z$0$lcssa = $z$096;
    break L12;
   }
   $31 = $z$096 + 1 | 0;
   $32 = $28 + 2 | 0;
   if ((HEAP8[$32 >> 0] | 0) == 37) {
    $28 = $32;
    $z$096 = $31;
    label = 9;
   } else {
    $$lcssa95 = $32;
    $z$0$lcssa = $31;
    break;
   }
  } while (0);
  $37 = $z$0$lcssa - $23 | 0;
  if ($1) ___fwritex($23, $37, $f) | 0;
  if (($z$0$lcssa | 0) != ($23 | 0)) {
   $23 = $$lcssa95;
   $cnt$0 = $cnt$1;
   $l$0 = $37;
   continue;
  }
  $39 = $$lcssa95 + 1 | 0;
  $40 = HEAP8[$39 >> 0] | 0;
  $isdigittmp = ($40 << 24 >> 24) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) if ((HEAP8[$$lcssa95 + 2 >> 0] | 0) == 36) {
   $45 = $$lcssa95 + 3 | 0;
   $47 = HEAP8[$45 >> 0] | 0;
   $argpos$0 = $isdigittmp;
   $l10n$1 = 1;
   $storemerge = $45;
  } else {
   $47 = $40;
   $argpos$0 = -1;
   $l10n$1 = $l10n$0;
   $storemerge = $39;
  } else {
   $47 = $40;
   $argpos$0 = -1;
   $l10n$1 = $l10n$0;
   $storemerge = $39;
  }
  $46 = $47 << 24 >> 24;
  L25 : do if (($46 & -32 | 0) == 32) {
   $$pr = $47;
   $51 = $46;
   $fl$0111 = 0;
   $storemerge2110 = $storemerge;
   while (1) {
    $52 = 1 << $51 + -32;
    if (!($52 & 75913)) {
     $61 = $$pr;
     $fl$0106 = $fl$0111;
     $storemerge2104 = $storemerge2110;
     break L25;
    }
    $55 = $52 | $fl$0111;
    $56 = $storemerge2110 + 1 | 0;
    $57 = HEAP8[$56 >> 0] | 0;
    $51 = $57 << 24 >> 24;
    if (($51 & -32 | 0) != 32) {
     $61 = $57;
     $fl$0106 = $55;
     $storemerge2104 = $56;
     break;
    } else {
     $$pr = $57;
     $fl$0111 = $55;
     $storemerge2110 = $56;
    }
   }
  } else {
   $61 = $47;
   $fl$0106 = 0;
   $storemerge2104 = $storemerge;
  } while (0);
  do if ($61 << 24 >> 24 == 42) {
   $63 = $storemerge2104 + 1 | 0;
   $isdigittmp5 = (HEAP8[$63 >> 0] | 0) + -48 | 0;
   if ($isdigittmp5 >>> 0 < 10) if ((HEAP8[$storemerge2104 + 2 >> 0] | 0) == 36) {
    HEAP32[$nl_type + ($isdigittmp5 << 2) >> 2] = 10;
    $l10n$2 = 1;
    $storemerge7 = $storemerge2104 + 3 | 0;
    $w$0 = HEAP32[$nl_arg + ((HEAP8[$63 >> 0] | 0) + -48 << 3) >> 2] | 0;
   } else label = 24; else label = 24;
   if ((label | 0) == 24) {
    label = 0;
    if ($l10n$1) {
     $$0 = -1;
     label = 370;
     break L1;
    }
    if (!$1) {
     $97 = $63;
     $fl$1 = $fl$0106;
     $l10n$3 = 0;
     $w$1 = 0;
     break;
    }
    $arglist_current = HEAP32[$ap >> 2] | 0;
    $82 = HEAP32[$arglist_current >> 2] | 0;
    HEAP32[$ap >> 2] = $arglist_current + 4;
    $l10n$2 = 0;
    $storemerge7 = $63;
    $w$0 = $82;
   }
   if (($w$0 | 0) < 0) {
    $97 = $storemerge7;
    $fl$1 = $fl$0106 | 8192;
    $l10n$3 = $l10n$2;
    $w$1 = 0 - $w$0 | 0;
   } else {
    $97 = $storemerge7;
    $fl$1 = $fl$0106;
    $l10n$3 = $l10n$2;
    $w$1 = $w$0;
   }
  } else {
   $86 = $61 << 24 >> 24;
   if (($86 + -48 | 0) >>> 0 < 10) {
    $89 = $86;
    $92 = $storemerge2104;
    $i$03$i = 0;
    do {
     $i$03$i = $89 + -48 + ($i$03$i * 10 | 0) | 0;
     $92 = $92 + 1 | 0;
     $89 = HEAP8[$92 >> 0] | 0;
    } while (($89 + -48 | 0) >>> 0 < 10);
    if (($i$03$i | 0) < 0) {
     $$0 = -1;
     label = 370;
     break L1;
    } else {
     $97 = $92;
     $fl$1 = $fl$0106;
     $l10n$3 = $l10n$1;
     $w$1 = $i$03$i;
    }
   } else {
    $97 = $storemerge2104;
    $fl$1 = $fl$0106;
    $l10n$3 = $l10n$1;
    $w$1 = 0;
   }
  } while (0);
  L46 : do if ((HEAP8[$97 >> 0] | 0) == 46) {
   $99 = $97 + 1 | 0;
   $100 = HEAP8[$99 >> 0] | 0;
   if ($100 << 24 >> 24 != 42) {
    $122 = $100 << 24 >> 24;
    if (($122 + -48 | 0) >>> 0 < 10) {
     $125 = $122;
     $128 = $99;
     $i$03$i24 = 0;
    } else {
     $1037 = $99;
     $p$0 = 0;
     break;
    }
    while (1) {
     $126 = $125 + -48 + ($i$03$i24 * 10 | 0) | 0;
     $127 = $128 + 1 | 0;
     $125 = HEAP8[$127 >> 0] | 0;
     if (($125 + -48 | 0) >>> 0 >= 10) {
      $1037 = $127;
      $p$0 = $126;
      break L46;
     } else {
      $128 = $127;
      $i$03$i24 = $126;
     }
    }
   }
   $102 = $97 + 2 | 0;
   $isdigittmp3 = (HEAP8[$102 >> 0] | 0) + -48 | 0;
   if ($isdigittmp3 >>> 0 < 10) if ((HEAP8[$97 + 3 >> 0] | 0) == 36) {
    HEAP32[$nl_type + ($isdigittmp3 << 2) >> 2] = 10;
    $1037 = $97 + 4 | 0;
    $p$0 = HEAP32[$nl_arg + ((HEAP8[$102 >> 0] | 0) + -48 << 3) >> 2] | 0;
    break;
   }
   if ($l10n$3) {
    $$0 = -1;
    label = 370;
    break L1;
   }
   if ($1) {
    $arglist_current2 = HEAP32[$ap >> 2] | 0;
    $121 = HEAP32[$arglist_current2 >> 2] | 0;
    HEAP32[$ap >> 2] = $arglist_current2 + 4;
    $1037 = $102;
    $p$0 = $121;
   } else {
    $1037 = $102;
    $p$0 = 0;
   }
  } else {
   $1037 = $97;
   $p$0 = -1;
  } while (0);
  $132 = $1037;
  $st$0 = 0;
  while (1) {
   $131 = HEAP8[$132 >> 0] | 0;
   $134 = ($131 << 24 >> 24) + -65 | 0;
   if ($134 >>> 0 > 57) {
    $$0 = -1;
    label = 370;
    break L1;
   }
   $136 = $132 + 1 | 0;
   $138 = HEAP8[55888 + ($st$0 * 58 | 0) + $134 >> 0] | 0;
   $139 = $138 & 255;
   if (($139 + -1 | 0) >>> 0 < 8) {
    $132 = $136;
    $st$0 = $139;
   } else break;
  }
  if (!($138 << 24 >> 24)) {
   $$0 = -1;
   label = 370;
   break;
  }
  $144 = ($argpos$0 | 0) > -1;
  L65 : do if ($138 << 24 >> 24 == 19) if ($144) {
   $$0 = -1;
   label = 370;
   break L1;
  } else {
   $1038 = $1034;
   $1039 = $1035;
   label = 63;
  } else {
   if ($144) {
    HEAP32[$nl_type + ($argpos$0 << 2) >> 2] = $139;
    $147 = $nl_arg + ($argpos$0 << 3) | 0;
    $1038 = HEAP32[$147 >> 2] | 0;
    $1039 = HEAP32[$147 + 4 >> 2] | 0;
    label = 63;
    break;
   }
   if (!$1) {
    $$0 = 0;
    label = 370;
    break L1;
   }
   if (($138 & 255) > 20) {
    $187 = $131;
    $195 = $1034;
    $222 = $1035;
   } else do switch ($139 | 0) {
   case 15:
    {
     $arglist_current23 = HEAP32[$ap >> 2] | 0;
     $173 = HEAP32[$arglist_current23 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current23 + 4;
     $1040 = ((($173 & 255) << 24 >> 24 | 0) < 0) << 31 >> 31;
     $1041 = $173 << 24 >> 24;
     label = 64;
     break L65;
     break;
    }
   case 9:
    {
     $arglist_current5 = HEAP32[$ap >> 2] | 0;
     $154 = HEAP32[$arglist_current5 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current5 + 4;
     $1040 = $1035;
     $1041 = $154;
     label = 64;
     break L65;
     break;
    }
   case 13:
    {
     $arglist_current17 = HEAP32[$ap >> 2] | 0;
     $166 = HEAP32[$arglist_current17 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current17 + 4;
     $1040 = ((($166 & 65535) << 16 >> 16 | 0) < 0) << 31 >> 31;
     $1041 = $166 << 16 >> 16;
     label = 64;
     break L65;
     break;
    }
   case 17:
    {
     $arglist_current29 = HEAP32[$ap >> 2] | 0;
     HEAP32[tempDoublePtr >> 2] = HEAP32[$arglist_current29 >> 2];
     HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[$arglist_current29 + 4 >> 2];
     $180 = +HEAPF64[tempDoublePtr >> 3];
     HEAP32[$ap >> 2] = $arglist_current29 + 8;
     HEAPF64[tempDoublePtr >> 3] = $180;
     $1040 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
     $1041 = HEAP32[tempDoublePtr >> 2] | 0;
     label = 64;
     break L65;
     break;
    }
   case 11:
    {
     $arglist_current11 = HEAP32[$ap >> 2] | 0;
     $159 = HEAP32[$arglist_current11 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current11 + 4;
     $1040 = 0;
     $1041 = $159;
     label = 64;
     break L65;
     break;
    }
   case 18:
    {
     $arglist_current32 = HEAP32[$ap >> 2] | 0;
     HEAP32[tempDoublePtr >> 2] = HEAP32[$arglist_current32 >> 2];
     HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[$arglist_current32 + 4 >> 2];
     $183 = +HEAPF64[tempDoublePtr >> 3];
     HEAP32[$ap >> 2] = $arglist_current32 + 8;
     HEAPF64[tempDoublePtr >> 3] = $183;
     $1038 = HEAP32[tempDoublePtr >> 2] | 0;
     $1039 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
     label = 63;
     break L65;
     break;
    }
   case 16:
    {
     $arglist_current26 = HEAP32[$ap >> 2] | 0;
     $179 = HEAP32[$arglist_current26 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current26 + 4;
     $1040 = 0;
     $1041 = $179 & 255;
     label = 64;
     break L65;
     break;
    }
   case 14:
    {
     $arglist_current20 = HEAP32[$ap >> 2] | 0;
     $172 = HEAP32[$arglist_current20 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current20 + 4;
     $1040 = 0;
     $1041 = $172 & 65535;
     label = 64;
     break L65;
     break;
    }
   case 12:
    {
     $arglist_current14 = HEAP32[$ap >> 2] | 0;
     $160 = $arglist_current14;
     $162 = HEAP32[$160 >> 2] | 0;
     $165 = HEAP32[$160 + 4 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current14 + 8;
     $1040 = $165;
     $1041 = $162;
     label = 64;
     break L65;
     break;
    }
   case 10:
    {
     $arglist_current8 = HEAP32[$ap >> 2] | 0;
     $156 = HEAP32[$arglist_current8 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current8 + 4;
     $1040 = (($156 | 0) < 0) << 31 >> 31;
     $1041 = $156;
     label = 64;
     break L65;
     break;
    }
   default:
    {
     $1040 = $1035;
     $1041 = $1034;
     label = 64;
     break L65;
    }
   } while (0);
  } while (0);
  if ((label | 0) == 63) {
   label = 0;
   if ($1) {
    $1040 = $1039;
    $1041 = $1038;
    label = 64;
   } else {
    $1034 = $1038;
    $1035 = $1039;
    $23 = $136;
    $cnt$0 = $cnt$1;
    $l$0 = $37;
    $l10n$0 = $l10n$3;
    continue;
   }
  }
  if ((label | 0) == 64) {
   label = 0;
   $187 = HEAP8[$132 >> 0] | 0;
   $195 = $1041;
   $222 = $1040;
  }
  $186 = $187 << 24 >> 24;
  $t$0 = ($st$0 | 0) != 0 & ($186 & 15 | 0) == 3 ? $186 & -33 : $186;
  $194 = $fl$1 & -65537;
  $fl$1$ = ($fl$1 & 8192 | 0) == 0 ? $fl$1 : $194;
  L89 : do switch ($t$0 | 0) {
  case 115:
   {
    $a$1 = ($195 | 0) == 0 ? 56368 : $195;
    label = 96;
    break;
   }
  case 105:
  case 100:
   {
    if (($222 | 0) < 0) {
     $261 = _i64Subtract(0, 0, $195 | 0, $222 | 0) | 0;
     $267 = tempRet0;
     $269 = $261;
     $pl$0 = 1;
     $prefix$0 = 56352;
     label = 86;
     break L89;
    }
    if (!($fl$1$ & 2048)) {
     $265 = $fl$1$ & 1;
     $267 = $222;
     $269 = $195;
     $pl$0 = $265;
     $prefix$0 = ($265 | 0) == 0 ? 56352 : 56354;
     label = 86;
    } else {
     $267 = $222;
     $269 = $195;
     $pl$0 = 1;
     $prefix$0 = 56353;
     label = 86;
    }
    break;
   }
  case 112:
   {
    $fl$3 = $fl$1$ | 8;
    $p$1 = $p$0 >>> 0 > 8 ? $p$0 : 8;
    $t$1 = 120;
    label = 75;
    break;
   }
  case 109:
   {
    $a$1 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    label = 96;
    break;
   }
  case 67:
   {
    HEAP32[$wc >> 2] = $195;
    HEAP32[$5 >> 2] = 0;
    $1044 = $wc;
    $1045 = $6;
    $p$4264 = -1;
    label = 101;
    break;
   }
  case 110:
   {
    switch ($st$0 | 0) {
    case 0:
     {
      HEAP32[$195 >> 2] = $cnt$1;
      $1034 = $195;
      $1035 = $222;
      $23 = $136;
      $cnt$0 = $cnt$1;
      $l$0 = $37;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 1:
     {
      HEAP32[$195 >> 2] = $cnt$1;
      $1034 = $195;
      $1035 = $222;
      $23 = $136;
      $cnt$0 = $cnt$1;
      $l$0 = $37;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 4:
     {
      HEAP8[$195 >> 0] = $cnt$1;
      $1034 = $195;
      $1035 = $222;
      $23 = $136;
      $cnt$0 = $cnt$1;
      $l$0 = $37;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 6:
     {
      HEAP32[$195 >> 2] = $cnt$1;
      $1034 = $195;
      $1035 = $222;
      $23 = $136;
      $cnt$0 = $cnt$1;
      $l$0 = $37;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 7:
     {
      $213 = $195;
      HEAP32[$213 >> 2] = $cnt$1;
      HEAP32[$213 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
      $1034 = $195;
      $1035 = $222;
      $23 = $136;
      $cnt$0 = $cnt$1;
      $l$0 = $37;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 2:
     {
      $201 = $195;
      HEAP32[$201 >> 2] = $cnt$1;
      HEAP32[$201 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
      $1034 = $195;
      $1035 = $222;
      $23 = $136;
      $cnt$0 = $cnt$1;
      $l$0 = $37;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 3:
     {
      HEAP16[$195 >> 1] = $cnt$1;
      $1034 = $195;
      $1035 = $222;
      $23 = $136;
      $cnt$0 = $cnt$1;
      $l$0 = $37;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    default:
     {
      $1034 = $195;
      $1035 = $222;
      $23 = $136;
      $cnt$0 = $cnt$1;
      $l$0 = $37;
      $l10n$0 = $l10n$3;
      continue L1;
     }
    }
    break;
   }
  case 83:
   {
    $321 = $195;
    if (!$p$0) {
     $1046 = $195;
     $1047 = $321;
     $i$0$lcssa265 = 0;
     label = 106;
    } else {
     $1044 = $321;
     $1045 = $195;
     $p$4264 = $p$0;
     label = 101;
    }
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    HEAP32[tempDoublePtr >> 2] = $195;
    HEAP32[tempDoublePtr + 4 >> 2] = $222;
    $360 = +HEAPF64[tempDoublePtr >> 3];
    HEAP32[$e2$i >> 2] = 0;
    if (($222 | 0) < 0) {
     $$010$i = -$360;
     $pl$0$i = 1;
     $prefix$0$i = 56376;
    } else if (!($fl$1$ & 2048)) {
     $365 = $fl$1$ & 1;
     $$010$i = $360;
     $pl$0$i = $365;
     $prefix$0$i = ($365 | 0) == 0 ? 56377 : 56382;
    } else {
     $$010$i = $360;
     $pl$0$i = 1;
     $prefix$0$i = 56379;
    }
    HEAPF64[tempDoublePtr >> 3] = $$010$i;
    $369 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
    if (!($369 >>> 0 < 2146435072 | ($369 | 0) == 2146435072 & 0 < 0)) {
     $376 = ($t$0 & 32 | 0) != 0;
     if ($$010$i != $$010$i | 0.0 != 0.0) {
      $pl$1$i = 0;
      $s1$0$i = $376 ? 56416 : 56424;
     } else {
      $pl$1$i = $pl$0$i;
      $s1$0$i = $376 ? 56400 : 56408;
     }
     $380 = $pl$1$i + 3 | 0;
     $383 = ($w$1 | 0) > ($380 | 0);
     if (($fl$1$ & 8192 | 0) == 0 & $383) {
      $384 = $w$1 - $380 | 0;
      _memset($pad$i | 0, 32, ($384 >>> 0 > 256 ? 256 : $384) | 0) | 0;
      if ($384 >>> 0 > 255) {
       $$01$i42$i = $384;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i42$i = $$01$i42$i + -256 | 0;
       } while ($$01$i42$i >>> 0 > 255);
       $$0$lcssa$i44$i = $384 & 255;
      } else $$0$lcssa$i44$i = $384;
      ___fwritex($pad$i, $$0$lcssa$i44$i, $f) | 0;
     }
     ___fwritex($prefix$0$i, $pl$1$i, $f) | 0;
     ___fwritex($s1$0$i, 3, $f) | 0;
     if (($fl$1$ & 73728 | 0) == 8192 & $383) {
      $393 = $w$1 - $380 | 0;
      _memset($pad$i | 0, 32, ($393 >>> 0 > 256 ? 256 : $393) | 0) | 0;
      if ($393 >>> 0 > 255) {
       $$01$i49$i = $393;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i49$i = $$01$i49$i + -256 | 0;
       } while ($$01$i49$i >>> 0 > 255);
       $$0$lcssa$i51$i = $393 & 255;
      } else $$0$lcssa$i51$i = $393;
      ___fwritex($pad$i, $$0$lcssa$i51$i, $f) | 0;
     }
     $1034 = $195;
     $1035 = $222;
     $23 = $136;
     $cnt$0 = $cnt$1;
     $l$0 = $383 ? $w$1 : $380;
     $l10n$0 = $l10n$3;
     continue L1;
    }
    $401 = +_frexpl($$010$i, $e2$i) * 2.0;
    $402 = $401 != 0.0;
    if ($402) HEAP32[$e2$i >> 2] = (HEAP32[$e2$i >> 2] | 0) + -1;
    $405 = $t$0 | 32;
    if (($405 | 0) == 97) {
     $407 = $t$0 & 32;
     $prefix$0$$i = ($407 | 0) == 0 ? $prefix$0$i : $prefix$0$i + 9 | 0;
     $410 = $pl$0$i | 2;
     $re$0$i = $p$0 >>> 0 > 11 ? 0 : 12 - $p$0 | 0;
     do if (!$re$0$i) $$1$i = $401; else {
      $re$1163$i = $re$0$i;
      $round$0162$i = 8.0;
      do {
       $re$1163$i = $re$1163$i + -1 | 0;
       $round$0162$i = $round$0162$i * 16.0;
      } while (($re$1163$i | 0) != 0);
      if ((HEAP8[$prefix$0$$i >> 0] | 0) == 45) {
       $$1$i = -($round$0162$i + (-$401 - $round$0162$i));
       break;
      } else {
       $$1$i = $401 + $round$0162$i - $round$0162$i;
       break;
      }
     } while (0);
     $425 = HEAP32[$e2$i >> 2] | 0;
     $428 = ($425 | 0) < 0 ? 0 - $425 | 0 : $425;
     if (($428 | 0) < 0) {
      $$05$i$i = $7;
      $432 = $428;
      $433 = (($428 | 0) < 0) << 31 >> 31;
      while (1) {
       $434 = ___uremdi3($432 | 0, $433 | 0, 10, 0) | 0;
       $$05$i$i = $$05$i$i + -1 | 0;
       HEAP8[$$05$i$i >> 0] = $434 | 48;
       $432$looptemp = $432;
       $432 = ___udivdi3($432 | 0, $433 | 0, 10, 0) | 0;
       if (!($433 >>> 0 > 9 | ($433 | 0) == 9 & $432$looptemp >>> 0 > 4294967295)) break; else $433 = tempRet0;
      }
      $$0$lcssa$i53$i = $$05$i$i;
      $$01$lcssa$off0$i$i = $432;
     } else {
      $$0$lcssa$i53$i = $7;
      $$01$lcssa$off0$i$i = $428;
     }
     if (!$$01$lcssa$off0$i$i) $$1$lcssa$i$i = $$0$lcssa$i53$i; else {
      $$12$i$i = $$0$lcssa$i53$i;
      $y$03$i$i = $$01$lcssa$off0$i$i;
      while (1) {
       $450 = $$12$i$i + -1 | 0;
       HEAP8[$450 >> 0] = ($y$03$i$i >>> 0) % 10 | 0 | 48;
       if ($y$03$i$i >>> 0 < 10) {
        $$1$lcssa$i$i = $450;
        break;
       } else {
        $$12$i$i = $450;
        $y$03$i$i = ($y$03$i$i >>> 0) / 10 | 0;
       }
      }
     }
     if (($$1$lcssa$i$i | 0) == ($7 | 0)) {
      HEAP8[$8 >> 0] = 48;
      $estr$0$i = $8;
     } else $estr$0$i = $$1$lcssa$i$i;
     HEAP8[$estr$0$i + -1 >> 0] = (HEAP32[$e2$i >> 2] >> 31 & 2) + 43;
     $462 = $estr$0$i + -2 | 0;
     HEAP8[$462 >> 0] = $t$0 + 15;
     if (($p$0 | 0) < 1) if (!($fl$1$ & 8)) {
      $$2$us$us$i = $$1$i;
      $s$0$us$us$i = $buf$i;
      while (1) {
       $465 = ~~$$2$us$us$i;
       $471 = $s$0$us$us$i + 1 | 0;
       HEAP8[$s$0$us$us$i >> 0] = HEAPU8[56432 + $465 >> 0] | $407;
       $$2$us$us$i = ($$2$us$us$i - +($465 | 0)) * 16.0;
       if (($471 - $0 | 0) != 1 | $$2$us$us$i == 0.0) $s$1$us$us$i = $471; else {
        HEAP8[$471 >> 0] = 46;
        $s$1$us$us$i = $s$0$us$us$i + 2 | 0;
       }
       if (!($$2$us$us$i != 0.0)) {
        $s$1$lcssa$i = $s$1$us$us$i;
        break;
       } else $s$0$us$us$i = $s$1$us$us$i;
      }
     } else {
      $$2$us$i = $$1$i;
      $s$0$us$i = $buf$i;
      while (1) {
       $480 = ~~$$2$us$i;
       $486 = $s$0$us$i + 1 | 0;
       HEAP8[$s$0$us$i >> 0] = HEAPU8[56432 + $480 >> 0] | $407;
       $$2$us$i = ($$2$us$i - +($480 | 0)) * 16.0;
       if (($486 - $0 | 0) == 1) {
        HEAP8[$486 >> 0] = 46;
        $s$1$us$i = $s$0$us$i + 2 | 0;
       } else $s$1$us$i = $486;
       if (!($$2$us$i != 0.0)) {
        $s$1$lcssa$i = $s$1$us$i;
        break;
       } else $s$0$us$i = $s$1$us$i;
      }
     } else {
      $$2$i = $$1$i;
      $s$0$i = $buf$i;
      while (1) {
       $495 = ~~$$2$i;
       $501 = $s$0$i + 1 | 0;
       HEAP8[$s$0$i >> 0] = HEAPU8[56432 + $495 >> 0] | $407;
       $$2$i = ($$2$i - +($495 | 0)) * 16.0;
       if (($501 - $0 | 0) == 1) {
        HEAP8[$501 >> 0] = 46;
        $s$1$i = $s$0$i + 2 | 0;
       } else $s$1$i = $501;
       if (!($$2$i != 0.0)) {
        $s$1$lcssa$i = $s$1$i;
        break;
       } else $s$0$i = $s$1$i;
      }
     }
     $$pre306$i = $s$1$lcssa$i;
     $513 = $462;
     if (($p$0 | 0) != 0 & ($11 + $$pre306$i | 0) < ($p$0 | 0)) $l$0$i = $12 + $p$0 - $513 | 0; else $l$0$i = $10 - $513 + $$pre306$i | 0;
     $518 = $l$0$i + $410 | 0;
     $519 = $fl$1$ & 73728;
     $521 = ($w$1 | 0) > ($518 | 0);
     if (($519 | 0) == 0 & $521) {
      $522 = $w$1 - $518 | 0;
      _memset($pad$i | 0, 32, ($522 >>> 0 > 256 ? 256 : $522) | 0) | 0;
      if ($522 >>> 0 > 255) {
       $$01$i59$i = $522;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i59$i = $$01$i59$i + -256 | 0;
       } while ($$01$i59$i >>> 0 > 255);
       $$0$lcssa$i61$i = $522 & 255;
      } else $$0$lcssa$i61$i = $522;
      ___fwritex($pad$i, $$0$lcssa$i61$i, $f) | 0;
     }
     ___fwritex($prefix$0$$i, $410, $f) | 0;
     if (($519 | 0) == 65536 & $521) {
      $530 = $w$1 - $518 | 0;
      _memset($pad$i | 0, 48, ($530 >>> 0 > 256 ? 256 : $530) | 0) | 0;
      if ($530 >>> 0 > 255) {
       $$01$i66$i = $530;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i66$i = $$01$i66$i + -256 | 0;
       } while ($$01$i66$i >>> 0 > 255);
       $$0$lcssa$i68$i = $530 & 255;
      } else $$0$lcssa$i68$i = $530;
      ___fwritex($pad$i, $$0$lcssa$i68$i, $f) | 0;
     }
     $537 = $$pre306$i - $0 | 0;
     ___fwritex($buf$i, $537, $f) | 0;
     $539 = $9 - $462 | 0;
     $541 = $l$0$i - $539 - $537 | 0;
     if (($541 | 0) > 0) {
      _memset($pad$i | 0, 48, ($541 >>> 0 > 256 ? 256 : $541) | 0) | 0;
      if ($541 >>> 0 > 255) {
       $$01$i72$i = $541;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i72$i = $$01$i72$i + -256 | 0;
       } while ($$01$i72$i >>> 0 > 255);
       $$0$lcssa$i74$i = $541 & 255;
      } else $$0$lcssa$i74$i = $541;
      ___fwritex($pad$i, $$0$lcssa$i74$i, $f) | 0;
     }
     ___fwritex($462, $539, $f) | 0;
     if (($519 | 0) == 8192 & $521) {
      $550 = $w$1 - $518 | 0;
      _memset($pad$i | 0, 32, ($550 >>> 0 > 256 ? 256 : $550) | 0) | 0;
      if ($550 >>> 0 > 255) {
       $$01$i79$i = $550;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i79$i = $$01$i79$i + -256 | 0;
       } while ($$01$i79$i >>> 0 > 255);
       $$0$lcssa$i81$i = $550 & 255;
      } else $$0$lcssa$i81$i = $550;
      ___fwritex($pad$i, $$0$lcssa$i81$i, $f) | 0;
     }
     $1034 = $195;
     $1035 = $222;
     $23 = $136;
     $cnt$0 = $cnt$1;
     $l$0 = $521 ? $w$1 : $518;
     $l10n$0 = $l10n$3;
     continue L1;
    }
    $$p$i = ($p$0 | 0) < 0 ? 6 : $p$0;
    if ($402) {
     $560 = (HEAP32[$e2$i >> 2] | 0) + -28 | 0;
     HEAP32[$e2$i >> 2] = $560;
     $$3$i = $401 * 268435456.0;
     $561 = $560;
    } else {
     $$3$i = $401;
     $561 = HEAP32[$e2$i >> 2] | 0;
    }
    $$36$i = ($561 | 0) < 0 ? $big$i : $13;
    $563 = $$36$i;
    $$4$i = $$3$i;
    $z$0$i = $$36$i;
    do {
     $564 = ~~$$4$i >>> 0;
     HEAP32[$z$0$i >> 2] = $564;
     $z$0$i = $z$0$i + 4 | 0;
     $$4$i = ($$4$i - +($564 >>> 0)) * 1.0e9;
    } while ($$4$i != 0.0);
    $$pr$i = HEAP32[$e2$i >> 2] | 0;
    if (($$pr$i | 0) > 0) {
     $571 = $$pr$i;
     $a$1258$i = $$36$i;
     $z$1257$i = $z$0$i;
     while (1) {
      $573 = ($571 | 0) > 29 ? 29 : $571;
      $d$0249$i = $z$1257$i + -4 | 0;
      do if ($d$0249$i >>> 0 < $a$1258$i >>> 0) $a$2$ph$i = $a$1258$i; else {
       $carry$0250$i = 0;
       $d$0251$i = $d$0249$i;
       do {
        $576 = _bitshift64Shl(HEAP32[$d$0251$i >> 2] | 0, 0, $573 | 0) | 0;
        $578 = _i64Add($576 | 0, tempRet0 | 0, $carry$0250$i | 0, 0) | 0;
        $579 = tempRet0;
        $580 = ___uremdi3($578 | 0, $579 | 0, 1e9, 0) | 0;
        HEAP32[$d$0251$i >> 2] = $580;
        $carry$0250$i = ___udivdi3($578 | 0, $579 | 0, 1e9, 0) | 0;
        $d$0251$i = $d$0251$i + -4 | 0;
       } while ($d$0251$i >>> 0 >= $a$1258$i >>> 0);
       if (!$carry$0250$i) {
        $a$2$ph$i = $a$1258$i;
        break;
       }
       $586 = $a$1258$i + -4 | 0;
       HEAP32[$586 >> 2] = $carry$0250$i;
       $a$2$ph$i = $586;
      } while (0);
      $z$2$i = $z$1257$i;
      while (1) {
       if ($z$2$i >>> 0 <= $a$2$ph$i >>> 0) break;
       $588 = $z$2$i + -4 | 0;
       if (!(HEAP32[$588 >> 2] | 0)) $z$2$i = $588; else break;
      }
      $592 = (HEAP32[$e2$i >> 2] | 0) - $573 | 0;
      HEAP32[$e2$i >> 2] = $592;
      if (($592 | 0) > 0) {
       $571 = $592;
       $a$1258$i = $a$2$ph$i;
       $z$1257$i = $z$2$i;
      } else {
       $$pr151$i = $592;
       $a$1$lcssa$i = $a$2$ph$i;
       $z$1$lcssa$i = $z$2$i;
       break;
      }
     }
    } else {
     $$pr151$i = $$pr$i;
     $a$1$lcssa$i = $$36$i;
     $z$1$lcssa$i = $z$0$i;
    }
    L241 : do if (($$pr151$i | 0) < 0) {
     $597 = (($$p$i + 25 | 0) / 9 | 0) + 1 | 0;
     if (($405 | 0) == 102) {
      $599 = $$36$i + ($597 << 2) | 0;
      $601 = $$pr151$i;
      $a$3244$us$i = $a$1$lcssa$i;
      $z$3243$us$i = $z$1$lcssa$i;
      while (1) {
       $600 = 0 - $601 | 0;
       $$23$us$i = ($600 | 0) > 9 ? 9 : $600;
       do if ($a$3244$us$i >>> 0 < $z$3243$us$i >>> 0) {
        $622 = (1 << $$23$us$i) + -1 | 0;
        $625 = 1e9 >>> $$23$us$i;
        $carry3$0238$us$i = 0;
        $d$1237$us$i = $a$3244$us$i;
        do {
         $620 = HEAP32[$d$1237$us$i >> 2] | 0;
         HEAP32[$d$1237$us$i >> 2] = ($620 >>> $$23$us$i) + $carry3$0238$us$i;
         $carry3$0238$us$i = Math_imul($620 & $622, $625) | 0;
         $d$1237$us$i = $d$1237$us$i + 4 | 0;
        } while ($d$1237$us$i >>> 0 < $z$3243$us$i >>> 0);
        $$a$3$us$i = (HEAP32[$a$3244$us$i >> 2] | 0) == 0 ? $a$3244$us$i + 4 | 0 : $a$3244$us$i;
        if (!$carry3$0238$us$i) {
         $$a$3$us308$i = $$a$3$us$i;
         $z$4$us$i = $z$3243$us$i;
         break;
        }
        HEAP32[$z$3243$us$i >> 2] = $carry3$0238$us$i;
        $$a$3$us308$i = $$a$3$us$i;
        $z$4$us$i = $z$3243$us$i + 4 | 0;
       } else {
        $$a$3$us308$i = (HEAP32[$a$3244$us$i >> 2] | 0) == 0 ? $a$3244$us$i + 4 | 0 : $a$3244$us$i;
        $z$4$us$i = $z$3243$us$i;
       } while (0);
       $$z$4$us$i = ($z$4$us$i - $563 >> 2 | 0) > ($597 | 0) ? $599 : $z$4$us$i;
       $601 = (HEAP32[$e2$i >> 2] | 0) + $$23$us$i | 0;
       HEAP32[$e2$i >> 2] = $601;
       if (($601 | 0) >= 0) {
        $a$3$lcssa$i = $$a$3$us308$i;
        $z$3$lcssa$i = $$z$4$us$i;
        break L241;
       } else {
        $a$3244$us$i = $$a$3$us308$i;
        $z$3243$us$i = $$z$4$us$i;
       }
      }
     } else {
      $630 = $$pr151$i;
      $a$3244$i = $a$1$lcssa$i;
      $z$3243$i = $z$1$lcssa$i;
     }
     while (1) {
      $629 = 0 - $630 | 0;
      $$23$i = ($629 | 0) > 9 ? 9 : $629;
      do if ($a$3244$i >>> 0 < $z$3243$i >>> 0) {
       $637 = (1 << $$23$i) + -1 | 0;
       $638 = 1e9 >>> $$23$i;
       $carry3$0238$i = 0;
       $d$1237$i = $a$3244$i;
       do {
        $639 = HEAP32[$d$1237$i >> 2] | 0;
        HEAP32[$d$1237$i >> 2] = ($639 >>> $$23$i) + $carry3$0238$i;
        $carry3$0238$i = Math_imul($639 & $637, $638) | 0;
        $d$1237$i = $d$1237$i + 4 | 0;
       } while ($d$1237$i >>> 0 < $z$3243$i >>> 0);
       $$a$3$i = (HEAP32[$a$3244$i >> 2] | 0) == 0 ? $a$3244$i + 4 | 0 : $a$3244$i;
       if (!$carry3$0238$i) {
        $$a$3310$i = $$a$3$i;
        $z$4$i = $z$3243$i;
        break;
       }
       HEAP32[$z$3243$i >> 2] = $carry3$0238$i;
       $$a$3310$i = $$a$3$i;
       $z$4$i = $z$3243$i + 4 | 0;
      } else {
       $$a$3310$i = (HEAP32[$a$3244$i >> 2] | 0) == 0 ? $a$3244$i + 4 | 0 : $a$3244$i;
       $z$4$i = $z$3243$i;
      } while (0);
      if (($z$4$i - $$a$3310$i >> 2 | 0) > ($597 | 0)) $z$5$i = $$a$3310$i + ($597 << 2) | 0; else $z$5$i = $z$4$i;
      $630 = (HEAP32[$e2$i >> 2] | 0) + $$23$i | 0;
      HEAP32[$e2$i >> 2] = $630;
      if (($630 | 0) >= 0) {
       $a$3$lcssa$i = $$a$3310$i;
       $z$3$lcssa$i = $z$5$i;
       break;
      } else {
       $a$3244$i = $$a$3310$i;
       $z$3243$i = $z$5$i;
      }
     }
    } else {
     $a$3$lcssa$i = $a$1$lcssa$i;
     $z$3$lcssa$i = $z$1$lcssa$i;
    } while (0);
    do if ($a$3$lcssa$i >>> 0 < $z$3$lcssa$i >>> 0) {
     $664 = ($563 - $a$3$lcssa$i >> 2) * 9 | 0;
     $665 = HEAP32[$a$3$lcssa$i >> 2] | 0;
     if ($665 >>> 0 < 10) {
      $e$1$i = $664;
      break;
     } else {
      $e$0233$i = $664;
      $i$0232$i = 10;
     }
     while (1) {
      $i$0232$i = $i$0232$i * 10 | 0;
      $668 = $e$0233$i + 1 | 0;
      if ($665 >>> 0 < $i$0232$i >>> 0) {
       $e$1$i = $668;
       break;
      } else $e$0233$i = $668;
     }
    } else $e$1$i = 0; while (0);
    $673 = ($405 | 0) == 103;
    $675 = $$p$i - (($405 | 0) != 102 ? $e$1$i : 0) + (($673 & ($$p$i | 0) != 0) << 31 >> 31) | 0;
    if (($675 | 0) < ((($z$3$lcssa$i - $563 >> 2) * 9 | 0) + -9 | 0)) {
     $682 = $675 + 9216 | 0;
     $683 = ($682 | 0) / 9 | 0;
     $684 = $$36$i + ($683 + -1023 << 2) | 0;
     $j$0224$i = (($682 | 0) % 9 | 0) + 1 | 0;
     if (($j$0224$i | 0) < 9) {
      $i$1225$i = 10;
      $j$0226$i = $j$0224$i;
      while (1) {
       $687 = $i$1225$i * 10 | 0;
       $j$0226$i = $j$0226$i + 1 | 0;
       if (($j$0226$i | 0) == 9) {
        $i$1$lcssa$i = $687;
        break;
       } else $i$1225$i = $687;
      }
     } else $i$1$lcssa$i = 10;
     $688 = HEAP32[$684 >> 2] | 0;
     $689 = ($688 >>> 0) % ($i$1$lcssa$i >>> 0) | 0;
     if (!$689) if (($$36$i + ($683 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
      $a$7$i = $a$3$lcssa$i;
      $d$3$i = $684;
      $e$3$i = $e$1$i;
     } else label = 232; else label = 232;
     do if ((label | 0) == 232) {
      label = 0;
      $$25$i = ((($688 >>> 0) / ($i$1$lcssa$i >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
      $696 = ($i$1$lcssa$i | 0) / 2 | 0;
      do if ($689 >>> 0 < $696 >>> 0) $small$0$i = .5; else {
       if (($689 | 0) == ($696 | 0)) if (($$36$i + ($683 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
        $small$0$i = 1.0;
        break;
       }
       $small$0$i = 1.5;
      } while (0);
      do if (!$pl$0$i) {
       $round6$1$i = $$25$i;
       $small$1$i = $small$0$i;
      } else {
       if ((HEAP8[$prefix$0$i >> 0] | 0) != 45) {
        $round6$1$i = $$25$i;
        $small$1$i = $small$0$i;
        break;
       }
       $round6$1$i = $$25$i * -1.0;
       $small$1$i = $small$0$i * -1.0;
      } while (0);
      $706 = $688 - $689 | 0;
      HEAP32[$684 >> 2] = $706;
      if (!($round6$1$i + $small$1$i != $round6$1$i)) {
       $a$7$i = $a$3$lcssa$i;
       $d$3$i = $684;
       $e$3$i = $e$1$i;
       break;
      }
      $709 = $706 + $i$1$lcssa$i | 0;
      HEAP32[$684 >> 2] = $709;
      if ($709 >>> 0 > 999999999) {
       $a$5218$i = $a$3$lcssa$i;
       $d$2217$i = $684;
       while (1) {
        $711 = $d$2217$i + -4 | 0;
        HEAP32[$d$2217$i >> 2] = 0;
        if ($711 >>> 0 < $a$5218$i >>> 0) {
         $713 = $a$5218$i + -4 | 0;
         HEAP32[$713 >> 2] = 0;
         $a$6$i = $713;
        } else $a$6$i = $a$5218$i;
        $715 = (HEAP32[$711 >> 2] | 0) + 1 | 0;
        HEAP32[$711 >> 2] = $715;
        if ($715 >>> 0 > 999999999) {
         $a$5218$i = $a$6$i;
         $d$2217$i = $711;
        } else {
         $a$5$lcssa$i = $a$6$i;
         $d$2$lcssa$i = $711;
         break;
        }
       }
      } else {
       $a$5$lcssa$i = $a$3$lcssa$i;
       $d$2$lcssa$i = $684;
      }
      $720 = ($563 - $a$5$lcssa$i >> 2) * 9 | 0;
      $721 = HEAP32[$a$5$lcssa$i >> 2] | 0;
      if ($721 >>> 0 < 10) {
       $a$7$i = $a$5$lcssa$i;
       $d$3$i = $d$2$lcssa$i;
       $e$3$i = $720;
       break;
      } else {
       $e$2213$i = $720;
       $i$2212$i = 10;
      }
      while (1) {
       $i$2212$i = $i$2212$i * 10 | 0;
       $724 = $e$2213$i + 1 | 0;
       if ($721 >>> 0 < $i$2212$i >>> 0) {
        $a$7$i = $a$5$lcssa$i;
        $d$3$i = $d$2$lcssa$i;
        $e$3$i = $724;
        break;
       } else $e$2213$i = $724;
      }
     } while (0);
     $726 = $d$3$i + 4 | 0;
     $a$8$ph$i = $a$7$i;
     $e$4$ph$i = $e$3$i;
     $z$6$ph$i = $z$3$lcssa$i >>> 0 > $726 >>> 0 ? $726 : $z$3$lcssa$i;
    } else {
     $a$8$ph$i = $a$3$lcssa$i;
     $e$4$ph$i = $e$1$i;
     $z$6$ph$i = $z$3$lcssa$i;
    }
    $728 = 0 - $e$4$ph$i | 0;
    $z$6$i = $z$6$ph$i;
    while (1) {
     if ($z$6$i >>> 0 <= $a$8$ph$i >>> 0) {
      $$lcssa292$i = 0;
      break;
     }
     $730 = $z$6$i + -4 | 0;
     if (!(HEAP32[$730 >> 2] | 0)) $z$6$i = $730; else {
      $$lcssa292$i = 1;
      break;
     }
    }
    do if ($673) {
     $$$p$i = (($$p$i | 0) == 0 & 1) + $$p$i | 0;
     if (($$$p$i | 0) > ($e$4$ph$i | 0) & ($e$4$ph$i | 0) > -5) {
      $$016$i = $t$0 + -1 | 0;
      $$213$i = $$$p$i + -1 - $e$4$ph$i | 0;
     } else {
      $$016$i = $t$0 + -2 | 0;
      $$213$i = $$$p$i + -1 | 0;
     }
     if ($fl$1$ & 8) {
      $$117$i = $$016$i;
      $$314$i = $$213$i;
      break;
     }
     do if ($$lcssa292$i) {
      $744 = HEAP32[$z$6$i + -4 >> 2] | 0;
      if (!$744) {
       $j$2$i = 9;
       break;
      }
      if (!(($744 >>> 0) % 10 | 0)) {
       $i$3204$i = 10;
       $j$1205$i = 0;
      } else {
       $j$2$i = 0;
       break;
      }
      while (1) {
       $i$3204$i = $i$3204$i * 10 | 0;
       $749 = $j$1205$i + 1 | 0;
       if (($744 >>> 0) % ($i$3204$i >>> 0) | 0) {
        $j$2$i = $749;
        break;
       } else $j$1205$i = $749;
      }
     } else $j$2$i = 9; while (0);
     $758 = (($z$6$i - $563 >> 2) * 9 | 0) + -9 | 0;
     if (($$016$i | 32 | 0) == 102) {
      $759 = $758 - $j$2$i | 0;
      $$26$i = ($759 | 0) < 0 ? 0 : $759;
      $$117$i = $$016$i;
      $$314$i = ($$213$i | 0) < ($$26$i | 0) ? $$213$i : $$26$i;
      break;
     } else {
      $763 = $758 + $e$4$ph$i - $j$2$i | 0;
      $$28$i = ($763 | 0) < 0 ? 0 : $763;
      $$117$i = $$016$i;
      $$314$i = ($$213$i | 0) < ($$28$i | 0) ? $$213$i : $$28$i;
      break;
     }
    } else {
     $$117$i = $t$0;
     $$314$i = $$p$i;
    } while (0);
    $766 = ($$314$i | 0) != 0;
    if ($766) $770 = 1; else $770 = ($fl$1$ & 8 | 0) != 0;
    $769 = $770 & 1;
    $772 = ($$117$i | 32 | 0) == 102;
    if ($772) {
     $$pn$i = ($e$4$ph$i | 0) > 0 ? $e$4$ph$i : 0;
     $estr$2$i = 0;
    } else {
     $776 = ($e$4$ph$i | 0) < 0 ? $728 : $e$4$ph$i;
     if (($776 | 0) < 0) {
      $$05$i84$i = $7;
      $780 = $776;
      $781 = (($776 | 0) < 0) << 31 >> 31;
      while (1) {
       $782 = ___uremdi3($780 | 0, $781 | 0, 10, 0) | 0;
       $$05$i84$i = $$05$i84$i + -1 | 0;
       HEAP8[$$05$i84$i >> 0] = $782 | 48;
       $780$looptemp = $780;
       $780 = ___udivdi3($780 | 0, $781 | 0, 10, 0) | 0;
       if (!($781 >>> 0 > 9 | ($781 | 0) == 9 & $780$looptemp >>> 0 > 4294967295)) break; else $781 = tempRet0;
      }
      $$0$lcssa$i89$i = $$05$i84$i;
      $$01$lcssa$off0$i90$i = $780;
     } else {
      $$0$lcssa$i89$i = $7;
      $$01$lcssa$off0$i90$i = $776;
     }
     if (!$$01$lcssa$off0$i90$i) $estr$1$ph$i = $$0$lcssa$i89$i; else {
      $$12$i92$i = $$0$lcssa$i89$i;
      $y$03$i91$i = $$01$lcssa$off0$i90$i;
      while (1) {
       $798 = $$12$i92$i + -1 | 0;
       HEAP8[$798 >> 0] = ($y$03$i91$i >>> 0) % 10 | 0 | 48;
       if ($y$03$i91$i >>> 0 < 10) {
        $estr$1$ph$i = $798;
        break;
       } else {
        $$12$i92$i = $798;
        $y$03$i91$i = ($y$03$i91$i >>> 0) / 10 | 0;
       }
      }
     }
     if (($9 - $estr$1$ph$i | 0) < 2) {
      $estr$1195$i = $estr$1$ph$i;
      while (1) {
       $804 = $estr$1195$i + -1 | 0;
       HEAP8[$804 >> 0] = 48;
       if (($9 - $804 | 0) < 2) $estr$1195$i = $804; else {
        $estr$1$lcssa$i = $804;
        break;
       }
      }
     } else $estr$1$lcssa$i = $estr$1$ph$i;
     HEAP8[$estr$1$lcssa$i + -1 >> 0] = ($e$4$ph$i >> 31 & 2) + 43;
     $814 = $estr$1$lcssa$i + -2 | 0;
     HEAP8[$814 >> 0] = $$117$i;
     $$pn$i = $9 - $814 | 0;
     $estr$2$i = $814;
    }
    $819 = $pl$0$i + 1 + $$314$i + $769 + $$pn$i | 0;
    $820 = $fl$1$ & 73728;
    $822 = ($w$1 | 0) > ($819 | 0);
    if (($820 | 0) == 0 & $822) {
     $823 = $w$1 - $819 | 0;
     _memset($pad$i | 0, 32, ($823 >>> 0 > 256 ? 256 : $823) | 0) | 0;
     if ($823 >>> 0 > 255) {
      $$01$i100$i = $823;
      do {
       ___fwritex($pad$i, 256, $f) | 0;
       $$01$i100$i = $$01$i100$i + -256 | 0;
      } while ($$01$i100$i >>> 0 > 255);
      $$0$lcssa$i102$i = $823 & 255;
     } else $$0$lcssa$i102$i = $823;
     ___fwritex($pad$i, $$0$lcssa$i102$i, $f) | 0;
    }
    ___fwritex($prefix$0$i, $pl$0$i, $f) | 0;
    if (($820 | 0) == 65536 & $822) {
     $831 = $w$1 - $819 | 0;
     _memset($pad$i | 0, 48, ($831 >>> 0 > 256 ? 256 : $831) | 0) | 0;
     if ($831 >>> 0 > 255) {
      $$01$i107$i = $831;
      do {
       ___fwritex($pad$i, 256, $f) | 0;
       $$01$i107$i = $$01$i107$i + -256 | 0;
      } while ($$01$i107$i >>> 0 > 255);
      $$0$lcssa$i109$i = $831 & 255;
     } else $$0$lcssa$i109$i = $831;
     ___fwritex($pad$i, $$0$lcssa$i109$i, $f) | 0;
    }
    do if ($772) {
     $r$0$a$8$i = $a$8$ph$i >>> 0 > $$36$i >>> 0 ? $$36$i : $a$8$ph$i;
     $d$4180$i = $r$0$a$8$i;
     do {
      $839 = HEAP32[$d$4180$i >> 2] | 0;
      if (!$839) $$1$lcssa$i117$i = $14; else {
       $$12$i115$i = $14;
       $y$03$i114$i = $839;
       while (1) {
        $844 = $$12$i115$i + -1 | 0;
        HEAP8[$844 >> 0] = ($y$03$i114$i >>> 0) % 10 | 0 | 48;
        if ($y$03$i114$i >>> 0 < 10) {
         $$1$lcssa$i117$i = $844;
         break;
        } else {
         $$12$i115$i = $844;
         $y$03$i114$i = ($y$03$i114$i >>> 0) / 10 | 0;
        }
       }
      }
      do if (($d$4180$i | 0) == ($r$0$a$8$i | 0)) {
       if (($$1$lcssa$i117$i | 0) != ($14 | 0)) {
        $s7$1$i = $$1$lcssa$i117$i;
        break;
       }
       HEAP8[$16 >> 0] = 48;
       $s7$1$i = $16;
      } else {
       if ($$1$lcssa$i117$i >>> 0 > $buf$i >>> 0) $s7$0177$i = $$1$lcssa$i117$i; else {
        $s7$1$i = $$1$lcssa$i117$i;
        break;
       }
       while (1) {
        $849 = $s7$0177$i + -1 | 0;
        HEAP8[$849 >> 0] = 48;
        if ($849 >>> 0 > $buf$i >>> 0) $s7$0177$i = $849; else {
         $s7$1$i = $849;
         break;
        }
       }
      } while (0);
      ___fwritex($s7$1$i, $15 - $s7$1$i | 0, $f) | 0;
      $d$4180$i = $d$4180$i + 4 | 0;
     } while ($d$4180$i >>> 0 <= $$36$i >>> 0);
     if (!(($fl$1$ & 8 | 0) == 0 & ($766 ^ 1))) ___fwritex(56448, 1, $f) | 0;
     if ($d$4180$i >>> 0 < $z$6$i >>> 0 & ($$314$i | 0) > 0) {
      $$415171$i = $$314$i;
      $d$5170$i = $d$4180$i;
      while (1) {
       $860 = HEAP32[$d$5170$i >> 2] | 0;
       if (!$860) {
        $s8$0165$i = $14;
        label = 301;
       } else {
        $$12$i124$i = $14;
        $y$03$i123$i = $860;
        while (1) {
         $$12$i124$i = $$12$i124$i + -1 | 0;
         HEAP8[$$12$i124$i >> 0] = ($y$03$i123$i >>> 0) % 10 | 0 | 48;
         if ($y$03$i123$i >>> 0 < 10) break; else $y$03$i123$i = ($y$03$i123$i >>> 0) / 10 | 0;
        }
        if ($$12$i124$i >>> 0 > $buf$i >>> 0) {
         $s8$0165$i = $$12$i124$i;
         label = 301;
        } else $s8$0$lcssa$i = $$12$i124$i;
       }
       if ((label | 0) == 301) while (1) {
        label = 0;
        $869 = $s8$0165$i + -1 | 0;
        HEAP8[$869 >> 0] = 48;
        if ($869 >>> 0 > $buf$i >>> 0) {
         $s8$0165$i = $869;
         label = 301;
        } else {
         $s8$0$lcssa$i = $869;
         break;
        }
       }
       ___fwritex($s8$0$lcssa$i, ($$415171$i | 0) > 9 ? 9 : $$415171$i, $f) | 0;
       $d$5170$i = $d$5170$i + 4 | 0;
       $874 = $$415171$i + -9 | 0;
       if (!($d$5170$i >>> 0 < $z$6$i >>> 0 & ($874 | 0) > 0)) {
        $$415$lcssa$i = $874;
        break;
       } else $$415171$i = $874;
      }
     } else $$415$lcssa$i = $$314$i;
     if (($$415$lcssa$i | 0) <= 0) break;
     _memset($pad$i | 0, 48, ($$415$lcssa$i >>> 0 > 256 ? 256 : $$415$lcssa$i) | 0) | 0;
     if ($$415$lcssa$i >>> 0 > 255) {
      $$01$i131$i = $$415$lcssa$i;
      do {
       ___fwritex($pad$i, 256, $f) | 0;
       $$01$i131$i = $$01$i131$i + -256 | 0;
      } while ($$01$i131$i >>> 0 > 255);
      $$0$lcssa$i133$i = $$415$lcssa$i & 255;
     } else $$0$lcssa$i133$i = $$415$lcssa$i;
     ___fwritex($pad$i, $$0$lcssa$i133$i, $f) | 0;
    } else {
     $z$6$$i = $$lcssa292$i ? $z$6$i : $a$8$ph$i + 4 | 0;
     do if (($$314$i | 0) > -1) {
      $887 = ($fl$1$ & 8 | 0) == 0;
      $$5189$i = $$314$i;
      $d$6188$i = $a$8$ph$i;
      do {
       $888 = HEAP32[$d$6188$i >> 2] | 0;
       if (!$888) label = 313; else {
        $$12$i139$i = $14;
        $y$03$i138$i = $888;
        while (1) {
         $$12$i139$i = $$12$i139$i + -1 | 0;
         HEAP8[$$12$i139$i >> 0] = ($y$03$i138$i >>> 0) % 10 | 0 | 48;
         if ($y$03$i138$i >>> 0 < 10) break; else $y$03$i138$i = ($y$03$i138$i >>> 0) / 10 | 0;
        }
        if (($$12$i139$i | 0) == ($14 | 0)) label = 313; else $s9$0$i = $$12$i139$i;
       }
       if ((label | 0) == 313) {
        label = 0;
        HEAP8[$16 >> 0] = 48;
        $s9$0$i = $16;
       }
       do if (($d$6188$i | 0) == ($a$8$ph$i | 0)) {
        $901 = $s9$0$i + 1 | 0;
        ___fwritex($s9$0$i, 1, $f) | 0;
        if (($$5189$i | 0) < 1 & $887) {
         $s9$2$i = $901;
         break;
        }
        ___fwritex(56448, 1, $f) | 0;
        $s9$2$i = $901;
       } else {
        if ($s9$0$i >>> 0 > $buf$i >>> 0) $s9$1184$i = $s9$0$i; else {
         $s9$2$i = $s9$0$i;
         break;
        }
        while (1) {
         $899 = $s9$1184$i + -1 | 0;
         HEAP8[$899 >> 0] = 48;
         if ($899 >>> 0 > $buf$i >>> 0) $s9$1184$i = $899; else {
          $s9$2$i = $899;
          break;
         }
        }
       } while (0);
       $904 = $15 - $s9$2$i | 0;
       ___fwritex($s9$2$i, ($$5189$i | 0) > ($904 | 0) ? $904 : $$5189$i, $f) | 0;
       $$5189$i = $$5189$i - $904 | 0;
       $d$6188$i = $d$6188$i + 4 | 0;
      } while ($d$6188$i >>> 0 < $z$6$$i >>> 0 & ($$5189$i | 0) > -1);
      if (($$5189$i | 0) <= 0) break;
      _memset($pad$i | 0, 48, ($$5189$i >>> 0 > 256 ? 256 : $$5189$i) | 0) | 0;
      if ($$5189$i >>> 0 > 255) {
       $$01$i146$i = $$5189$i;
       do {
        ___fwritex($pad$i, 256, $f) | 0;
        $$01$i146$i = $$01$i146$i + -256 | 0;
       } while ($$01$i146$i >>> 0 > 255);
       $$0$lcssa$i148$i = $$5189$i & 255;
      } else $$0$lcssa$i148$i = $$5189$i;
      ___fwritex($pad$i, $$0$lcssa$i148$i, $f) | 0;
     } while (0);
     ___fwritex($estr$2$i, $9 - $estr$2$i | 0, $f) | 0;
    } while (0);
    if (($820 | 0) == 8192 & $822) {
     $920 = $w$1 - $819 | 0;
     _memset($pad$i | 0, 32, ($920 >>> 0 > 256 ? 256 : $920) | 0) | 0;
     if ($920 >>> 0 > 255) {
      $$01$i$i = $920;
      do {
       ___fwritex($pad$i, 256, $f) | 0;
       $$01$i$i = $$01$i$i + -256 | 0;
      } while ($$01$i$i >>> 0 > 255);
      $$0$lcssa$i$i = $920 & 255;
     } else $$0$lcssa$i$i = $920;
     ___fwritex($pad$i, $$0$lcssa$i$i, $f) | 0;
    }
    $1034 = $195;
    $1035 = $222;
    $23 = $136;
    $cnt$0 = $cnt$1;
    $l$0 = $822 ? $w$1 : $819;
    $l10n$0 = $l10n$3;
    continue L1;
    break;
   }
  case 88:
  case 120:
   {
    $fl$3 = $fl$1$;
    $p$1 = $p$0;
    $t$1 = $t$0;
    label = 75;
    break;
   }
  case 111:
   {
    $245 = ($195 | 0) == 0 & ($222 | 0) == 0;
    if ($245) $$0$lcssa$i45 = $2; else {
     $$03$i42 = $2;
     $247 = $195;
     $251 = $222;
     while (1) {
      $250 = $$03$i42 + -1 | 0;
      HEAP8[$250 >> 0] = $247 & 7 | 48;
      $247 = _bitshift64Lshr($247 | 0, $251 | 0, 3) | 0;
      $251 = tempRet0;
      if (($247 | 0) == 0 & ($251 | 0) == 0) {
       $$0$lcssa$i45 = $250;
       break;
      } else $$03$i42 = $250;
     }
    }
    $or$cond13 = ($fl$1$ & 8 | 0) == 0 | $245;
    $297 = $195;
    $299 = $222;
    $a$0 = $$0$lcssa$i45;
    $fl$4 = $fl$1$;
    $p$2 = $p$0;
    $pl$1 = $or$cond13 & 1 ^ 1;
    $prefix$1 = $or$cond13 ? 56352 : 56357;
    label = 91;
    break;
   }
  case 99:
   {
    HEAP8[$4 >> 0] = $195;
    $1042 = $195;
    $1043 = $222;
    $a$2 = $4;
    $fl$6 = $194;
    $p$5 = 1;
    $pl$2 = 0;
    $prefix$2 = 56352;
    $z$2 = $2;
    break;
   }
  case 117:
   {
    $267 = $222;
    $269 = $195;
    $pl$0 = 0;
    $prefix$0 = 56352;
    label = 86;
    break;
   }
  default:
   {
    $1042 = $195;
    $1043 = $222;
    $a$2 = $23;
    $fl$6 = $fl$1$;
    $p$5 = $p$0;
    $pl$2 = 0;
    $prefix$2 = 56352;
    $z$2 = $2;
   }
  } while (0);
  do if ((label | 0) == 75) {
   label = 0;
   $220 = $t$1 & 32;
   if (($195 | 0) == 0 & ($222 | 0) == 0) {
    $297 = $195;
    $299 = $222;
    $a$0 = $2;
    $fl$4 = $fl$3;
    $p$2 = $p$1;
    $pl$1 = 0;
    $prefix$1 = 56352;
    label = 91;
   } else {
    $$012$i = $2;
    $226 = $195;
    $233 = $222;
    do {
     $$012$i = $$012$i + -1 | 0;
     HEAP8[$$012$i >> 0] = HEAPU8[56432 + ($226 & 15) >> 0] | $220;
     $226 = _bitshift64Lshr($226 | 0, $233 | 0, 4) | 0;
     $233 = tempRet0;
    } while (!(($226 | 0) == 0 & ($233 | 0) == 0));
    if (!($fl$3 & 8)) {
     $297 = $195;
     $299 = $222;
     $a$0 = $$012$i;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 0;
     $prefix$1 = 56352;
     label = 91;
    } else {
     $297 = $195;
     $299 = $222;
     $a$0 = $$012$i;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 2;
     $prefix$1 = 56352 + ($t$1 >> 4) | 0;
     label = 91;
    }
   }
  } else if ((label | 0) == 86) {
   label = 0;
   if ($267 >>> 0 > 0 | ($267 | 0) == 0 & $269 >>> 0 > 4294967295) {
    $$05$i = $2;
    $274 = $269;
    $275 = $267;
    while (1) {
     $276 = ___uremdi3($274 | 0, $275 | 0, 10, 0) | 0;
     $$05$i = $$05$i + -1 | 0;
     HEAP8[$$05$i >> 0] = $276 | 48;
     $274$looptemp = $274;
     $274 = ___udivdi3($274 | 0, $275 | 0, 10, 0) | 0;
     if (!($275 >>> 0 > 9 | ($275 | 0) == 9 & $274$looptemp >>> 0 > 4294967295)) break; else $275 = tempRet0;
    }
    $$0$lcssa$i47 = $$05$i;
    $$01$lcssa$off0$i = $274;
   } else {
    $$0$lcssa$i47 = $2;
    $$01$lcssa$off0$i = $269;
   }
   if (!$$01$lcssa$off0$i) {
    $297 = $269;
    $299 = $267;
    $a$0 = $$0$lcssa$i47;
    $fl$4 = $fl$1$;
    $p$2 = $p$0;
    $pl$1 = $pl$0;
    $prefix$1 = $prefix$0;
    label = 91;
   } else {
    $$12$i = $$0$lcssa$i47;
    $y$03$i = $$01$lcssa$off0$i;
    while (1) {
     $292 = $$12$i + -1 | 0;
     HEAP8[$292 >> 0] = ($y$03$i >>> 0) % 10 | 0 | 48;
     if ($y$03$i >>> 0 < 10) {
      $297 = $269;
      $299 = $267;
      $a$0 = $292;
      $fl$4 = $fl$1$;
      $p$2 = $p$0;
      $pl$1 = $pl$0;
      $prefix$1 = $prefix$0;
      label = 91;
      break;
     } else {
      $$12$i = $292;
      $y$03$i = ($y$03$i >>> 0) / 10 | 0;
     }
    }
   }
  } else if ((label | 0) == 96) {
   label = 0;
   $315 = _memchr($a$1, 0, $p$0) | 0;
   if (!$315) {
    $1042 = $195;
    $1043 = $222;
    $a$2 = $a$1;
    $fl$6 = $194;
    $p$5 = $p$0;
    $pl$2 = 0;
    $prefix$2 = 56352;
    $z$2 = $a$1 + $p$0 | 0;
    break;
   } else {
    $1042 = $195;
    $1043 = $222;
    $a$2 = $a$1;
    $fl$6 = $194;
    $p$5 = $315 - $a$1 | 0;
    $pl$2 = 0;
    $prefix$2 = 56352;
    $z$2 = $315;
    break;
   }
  } else if ((label | 0) == 101) {
   label = 0;
   $i$0160 = 0;
   $l$1159 = 0;
   $ws$0161 = $1044;
   while (1) {
    $323 = HEAP32[$ws$0161 >> 2] | 0;
    if (!$323) {
     $i$0$lcssa = $i$0160;
     $l$2 = $l$1159;
     break;
    }
    $325 = _wctomb($mb, $323) | 0;
    if (($325 | 0) < 0 | $325 >>> 0 > ($p$4264 - $i$0160 | 0) >>> 0) {
     $i$0$lcssa = $i$0160;
     $l$2 = $325;
     break;
    }
    $330 = $325 + $i$0160 | 0;
    if ($p$4264 >>> 0 > $330 >>> 0) {
     $i$0160 = $330;
     $l$1159 = $325;
     $ws$0161 = $ws$0161 + 4 | 0;
    } else {
     $i$0$lcssa = $330;
     $l$2 = $325;
     break;
    }
   }
   if (($l$2 | 0) < 0) {
    $$0 = -1;
    label = 370;
    break L1;
   } else {
    $1046 = $1045;
    $1047 = $1044;
    $i$0$lcssa265 = $i$0$lcssa;
    label = 106;
   }
  } while (0);
  if ((label | 0) == 91) {
   label = 0;
   $$fl$4 = ($p$2 | 0) > -1 ? $fl$4 & -65537 : $fl$4;
   $301 = ($297 | 0) != 0 | ($299 | 0) != 0;
   if ($301 | ($p$2 | 0) != 0) {
    $307 = ($301 & 1 ^ 1) + ($3 - $a$0) | 0;
    $1042 = $297;
    $1043 = $299;
    $a$2 = $a$0;
    $fl$6 = $$fl$4;
    $p$5 = ($p$2 | 0) > ($307 | 0) ? $p$2 : $307;
    $pl$2 = $pl$1;
    $prefix$2 = $prefix$1;
    $z$2 = $2;
   } else {
    $1042 = $297;
    $1043 = $299;
    $a$2 = $2;
    $fl$6 = $$fl$4;
    $p$5 = 0;
    $pl$2 = $pl$1;
    $prefix$2 = $prefix$1;
    $z$2 = $2;
   }
  } else if ((label | 0) == 106) {
   label = 0;
   $333 = $fl$1$ & 73728;
   $335 = ($w$1 | 0) > ($i$0$lcssa265 | 0);
   if (($333 | 0) == 0 & $335) {
    $336 = $w$1 - $i$0$lcssa265 | 0;
    _memset($pad$i | 0, 32, ($336 >>> 0 > 256 ? 256 : $336) | 0) | 0;
    if ($336 >>> 0 > 255) {
     $$01$i60 = $336;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i60 = $$01$i60 + -256 | 0;
     } while ($$01$i60 >>> 0 > 255);
     $$0$lcssa$i62 = $336 & 255;
    } else $$0$lcssa$i62 = $336;
    ___fwritex($pad$i, $$0$lcssa$i62, $f) | 0;
   }
   L477 : do if ($i$0$lcssa265) {
    $i$1168 = 0;
    $ws$1169 = $1047;
    while (1) {
     $344 = HEAP32[$ws$1169 >> 2] | 0;
     if (!$344) break L477;
     $346 = _wctomb($mb, $344) | 0;
     $i$1168 = $346 + $i$1168 | 0;
     if (($i$1168 | 0) > ($i$0$lcssa265 | 0)) break L477;
     ___fwritex($mb, $346, $f) | 0;
     if ($i$1168 >>> 0 >= $i$0$lcssa265 >>> 0) break; else $ws$1169 = $ws$1169 + 4 | 0;
    }
   } while (0);
   if (($333 | 0) == 8192 & $335) {
    $352 = $w$1 - $i$0$lcssa265 | 0;
    _memset($pad$i | 0, 32, ($352 >>> 0 > 256 ? 256 : $352) | 0) | 0;
    if ($352 >>> 0 > 255) {
     $$01$i67 = $352;
     do {
      ___fwritex($pad$i, 256, $f) | 0;
      $$01$i67 = $$01$i67 + -256 | 0;
     } while ($$01$i67 >>> 0 > 255);
     $$0$lcssa$i69 = $352 & 255;
    } else $$0$lcssa$i69 = $352;
    ___fwritex($pad$i, $$0$lcssa$i69, $f) | 0;
   }
   $1034 = $1046;
   $1035 = $222;
   $23 = $136;
   $cnt$0 = $cnt$1;
   $l$0 = $335 ? $w$1 : $i$0$lcssa265;
   $l10n$0 = $l10n$3;
   continue;
  }
  $929 = $z$2 - $a$2 | 0;
  $$p$5 = ($p$5 | 0) < ($929 | 0) ? $929 : $p$5;
  $931 = $pl$2 + $$p$5 | 0;
  $w$2 = ($w$1 | 0) < ($931 | 0) ? $931 : $w$1;
  $933 = $fl$6 & 73728;
  $935 = ($w$2 | 0) > ($931 | 0);
  if (($933 | 0) == 0 & $935) {
   $936 = $w$2 - $931 | 0;
   _memset($pad$i | 0, 32, ($936 >>> 0 > 256 ? 256 : $936) | 0) | 0;
   if ($936 >>> 0 > 255) {
    $$01$i77 = $936;
    do {
     ___fwritex($pad$i, 256, $f) | 0;
     $$01$i77 = $$01$i77 + -256 | 0;
    } while ($$01$i77 >>> 0 > 255);
    $$0$lcssa$i79 = $936 & 255;
   } else $$0$lcssa$i79 = $936;
   ___fwritex($pad$i, $$0$lcssa$i79, $f) | 0;
  }
  ___fwritex($prefix$2, $pl$2, $f) | 0;
  if (($933 | 0) == 65536 & $935) {
   $944 = $w$2 - $931 | 0;
   _memset($pad$i | 0, 48, ($944 >>> 0 > 256 ? 256 : $944) | 0) | 0;
   if ($944 >>> 0 > 255) {
    $$01$i53 = $944;
    do {
     ___fwritex($pad$i, 256, $f) | 0;
     $$01$i53 = $$01$i53 + -256 | 0;
    } while ($$01$i53 >>> 0 > 255);
    $$0$lcssa$i55 = $944 & 255;
   } else $$0$lcssa$i55 = $944;
   ___fwritex($pad$i, $$0$lcssa$i55, $f) | 0;
  }
  if (($$p$5 | 0) > ($929 | 0)) {
   $952 = $$p$5 - $929 | 0;
   _memset($pad$i | 0, 48, ($952 >>> 0 > 256 ? 256 : $952) | 0) | 0;
   if ($952 >>> 0 > 255) {
    $$01$i38 = $952;
    do {
     ___fwritex($pad$i, 256, $f) | 0;
     $$01$i38 = $$01$i38 + -256 | 0;
    } while ($$01$i38 >>> 0 > 255);
    $$0$lcssa$i40 = $952 & 255;
   } else $$0$lcssa$i40 = $952;
   ___fwritex($pad$i, $$0$lcssa$i40, $f) | 0;
  }
  ___fwritex($a$2, $929, $f) | 0;
  if (!(($933 | 0) == 8192 & $935)) {
   $1034 = $1042;
   $1035 = $1043;
   $23 = $136;
   $cnt$0 = $cnt$1;
   $l$0 = $w$2;
   $l10n$0 = $l10n$3;
   continue;
  }
  $960 = $w$2 - $931 | 0;
  _memset($pad$i | 0, 32, ($960 >>> 0 > 256 ? 256 : $960) | 0) | 0;
  if ($960 >>> 0 > 255) {
   $$01$i = $960;
   do {
    ___fwritex($pad$i, 256, $f) | 0;
    $$01$i = $$01$i + -256 | 0;
   } while ($$01$i >>> 0 > 255);
   $$0$lcssa$i = $960 & 255;
  } else $$0$lcssa$i = $960;
  ___fwritex($pad$i, $$0$lcssa$i, $f) | 0;
  $1034 = $1042;
  $1035 = $1043;
  $23 = $136;
  $cnt$0 = $cnt$1;
  $l$0 = $w$2;
  $l10n$0 = $l10n$3;
 }
 if ((label | 0) == 352) {
  if ($f) {
   $$0 = $cnt$1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if (!$l10n$0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else $i$292 = 1;
  while (1) {
   $970 = HEAP32[$nl_type + ($i$292 << 2) >> 2] | 0;
   if (!$970) {
    $i$389 = $i$292;
    break;
   }
   $972 = $nl_arg + ($i$292 << 3) | 0;
   L541 : do if ($970 >>> 0 <= 20) do switch ($970 | 0) {
   case 16:
    {
     $arglist_current56 = HEAP32[$ap >> 2] | 0;
     $1020 = HEAP32[$arglist_current56 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current56 + 4;
     $1021 = $972;
     HEAP32[$1021 >> 2] = $1020 & 255;
     HEAP32[$1021 + 4 >> 2] = 0;
     break L541;
     break;
    }
   case 17:
    {
     $arglist_current59 = HEAP32[$ap >> 2] | 0;
     HEAP32[tempDoublePtr >> 2] = HEAP32[$arglist_current59 >> 2];
     HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[$arglist_current59 + 4 >> 2];
     $1025 = +HEAPF64[tempDoublePtr >> 3];
     HEAP32[$ap >> 2] = $arglist_current59 + 8;
     HEAPF64[$972 >> 3] = $1025;
     break L541;
     break;
    }
   case 18:
    {
     $arglist_current62 = HEAP32[$ap >> 2] | 0;
     HEAP32[tempDoublePtr >> 2] = HEAP32[$arglist_current62 >> 2];
     HEAP32[tempDoublePtr + 4 >> 2] = HEAP32[$arglist_current62 + 4 >> 2];
     $1026 = +HEAPF64[tempDoublePtr >> 3];
     HEAP32[$ap >> 2] = $arglist_current62 + 8;
     HEAPF64[$972 >> 3] = $1026;
     break L541;
     break;
    }
   case 11:
    {
     $arglist_current41 = HEAP32[$ap >> 2] | 0;
     $982 = HEAP32[$arglist_current41 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current41 + 4;
     $983 = $972;
     HEAP32[$983 >> 2] = $982;
     HEAP32[$983 + 4 >> 2] = 0;
     break L541;
     break;
    }
   case 15:
    {
     $arglist_current53 = HEAP32[$ap >> 2] | 0;
     $1011 = HEAP32[$arglist_current53 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current53 + 4;
     $1013 = ($1011 & 255) << 24 >> 24;
     $1016 = $972;
     HEAP32[$1016 >> 2] = $1013;
     HEAP32[$1016 + 4 >> 2] = (($1013 | 0) < 0) << 31 >> 31;
     break L541;
     break;
    }
   case 10:
    {
     $arglist_current38 = HEAP32[$ap >> 2] | 0;
     $975 = HEAP32[$arglist_current38 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current38 + 4;
     $978 = $972;
     HEAP32[$978 >> 2] = $975;
     HEAP32[$978 + 4 >> 2] = (($975 | 0) < 0) << 31 >> 31;
     break L541;
     break;
    }
   case 14:
    {
     $arglist_current50 = HEAP32[$ap >> 2] | 0;
     $1006 = HEAP32[$arglist_current50 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current50 + 4;
     $1007 = $972;
     HEAP32[$1007 >> 2] = $1006 & 65535;
     HEAP32[$1007 + 4 >> 2] = 0;
     break L541;
     break;
    }
   case 12:
    {
     $arglist_current44 = HEAP32[$ap >> 2] | 0;
     $987 = $arglist_current44;
     $989 = HEAP32[$987 >> 2] | 0;
     $992 = HEAP32[$987 + 4 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current44 + 8;
     $993 = $972;
     HEAP32[$993 >> 2] = $989;
     HEAP32[$993 + 4 >> 2] = $992;
     break L541;
     break;
    }
   case 13:
    {
     $arglist_current47 = HEAP32[$ap >> 2] | 0;
     $997 = HEAP32[$arglist_current47 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current47 + 4;
     $999 = ($997 & 65535) << 16 >> 16;
     $1002 = $972;
     HEAP32[$1002 >> 2] = $999;
     HEAP32[$1002 + 4 >> 2] = (($999 | 0) < 0) << 31 >> 31;
     break L541;
     break;
    }
   case 9:
    {
     $arglist_current35 = HEAP32[$ap >> 2] | 0;
     $974 = HEAP32[$arglist_current35 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current35 + 4;
     HEAP32[$972 >> 2] = $974;
     break L541;
     break;
    }
   default:
    break L541;
   } while (0); while (0);
   $i$292 = $i$292 + 1 | 0;
   if (($i$292 | 0) >= 10) {
    $$0 = 1;
    label = 370;
    break;
   }
  }
  if ((label | 0) == 370) {
   STACKTOP = sp;
   return $$0 | 0;
  }
  while (1) {
   if (HEAP32[$nl_type + ($i$389 << 2) >> 2] | 0) {
    $$0 = -1;
    label = 370;
    break;
   }
   $i$389 = $i$389 + 1 | 0;
   if (($i$389 | 0) >= 10) {
    $$0 = 1;
    label = 370;
    break;
   }
  }
  if ((label | 0) == 370) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else if ((label | 0) == 370) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __Z11jsonnet_lexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKc($agg$result, $filename, $input) {
 $agg$result = $agg$result | 0;
 $filename = $filename | 0;
 $input = $input | 0;
 var $$0 = 0, $$0$i = 0, $$0$i106 = 0, $$0$i144 = 0, $$01 = 0, $$01$i = 0, $$01$i105 = 0, $$01$i143 = 0, $$011 = 0, $$013180 = 0, $$018 = 0, $$020179 = 0, $$03 = 0, $$037 = 0, $$05 = 0, $$07 = 0, $$09 = 0, $$10214 = 0, $$1030213 = 0, $$11 = 0, $$1131 = 0, $$114184 = 0, $$121183 = 0, $$1215 = 0, $$1232 = 0, $$13 = 0, $$1333 = 0, $$1416 = 0, $$1434 = 0, $$15 = 0, $$1535 = 0, $$1617 = 0, $$1636 = 0, $$2188 = 0, $$222187 = 0, $$3192 = 0, $$323191 = 0, $$4 = 0, $$424 = 0, $$5196 = 0, $$525195 = 0, $$6200 = 0, $$626199 = 0, $$7204 = 0, $$727203 = 0, $$8 = 0, $$828 = 0, $$9210 = 0, $$929209 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $105 = 0, $107 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $13 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $138 = 0, $14 = 0, $141 = 0, $146 = 0, $147 = 0, $15 = 0, $152 = 0, $157 = 0, $158 = 0, $16 = 0, $163 = 0, $165 = 0, $166 = 0, $167 = 0, $169 = 0, $17 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $176 = 0, $179 = 0, $18 = 0, $184 = 0, $185 = 0, $19 = 0, $190 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $201 = 0, $203 = 0, $204 = 0, $205 = 0, $207 = 0, $209 = 0, $21 = 0, $210 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $222 = 0, $226 = 0, $228 = 0, $230 = 0, $232 = 0, $233 = 0, $234 = 0, $236 = 0, $239 = 0, $240 = 0, $242 = 0, $243 = 0, $245 = 0, $246 = 0, $248 = 0, $25 = 0, $250 = 0, $251 = 0, $253 = 0, $256 = 0, $26 = 0, $261 = 0, $262 = 0, $267 = 0, $27 = 0, $272 = 0, $273 = 0, $278 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $284 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $297 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $302 = 0, $305 = 0, $31 = 0, $310 = 0, $311 = 0, $316 = 0, $32 = 0, $321 = 0, $322 = 0, $327 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $333 = 0, $335 = 0, $336 = 0, $339 = 0, $34 = 0, $340 = 0, $342 = 0, $345 = 0, $35 = 0, $350 = 0, $351 = 0, $356 = 0, $36 = 0, $361 = 0, $362 = 0, $367 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $373 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $382 = 0, $386 = 0, $388 = 0, $39 = 0, $390 = 0, $392 = 0, $393 = 0, $394 = 0, $396 = 0, $399 = 0, $4 = 0, $400 = 0, $404 = 0, $405 = 0, $407 = 0, $409 = 0, $410 = 0, $412 = 0, $415 = 0, $420 = 0, $421 = 0, $426 = 0, $43 = 0, $431 = 0, $432 = 0, $437 = 0, $439 = 0, $440 = 0, $441 = 0, $443 = 0, $445 = 0, $447 = 0, $448 = 0, $452 = 0, $454 = 0, $46 = 0, $460 = 0, $462 = 0, $471 = 0, $474 = 0, $478 = 0, $48 = 0, $5 = 0, $50 = 0, $511 = 0, $516 = 0, $517 = 0, $52 = 0, $520 = 0, $521 = 0, $527 = 0, $528 = 0, $532 = 0, $533 = 0, $534 = 0, $536 = 0, $539 = 0, $54 = 0, $544 = 0, $545 = 0, $550 = 0, $555 = 0, $556 = 0, $56 = 0, $561 = 0, $563 = 0, $564 = 0, $565 = 0, $567 = 0, $569 = 0, $570 = 0, $573 = 0, $574 = 0, $577 = 0, $58 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $587 = 0, $591 = 0, $593 = 0, $595 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $601 = 0, $603 = 0, $604 = 0, $609 = 0, $610 = 0, $615 = 0, $617 = 0, $619 = 0, $62 = 0, $620 = 0, $624 = 0, $625 = 0, $627 = 0, $629 = 0, $630 = 0, $632 = 0, $635 = 0, $640 = 0, $641 = 0, $646 = 0, $651 = 0, $652 = 0, $657 = 0, $659 = 0, $660 = 0, $661 = 0, $663 = 0, $665 = 0, $666 = 0, $668 = 0, $669 = 0, $675 = 0, $68 = 0, $680 = 0, $681 = 0, $685 = 0, $689 = 0, $691 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $699 = 0, $7 = 0, $700 = 0, $701 = 0, $702 = 0, $704 = 0, $716 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $722 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $73 = 0, $731 = 0, $733 = 0, $737 = 0, $738 = 0, $74 = 0, $740 = 0, $741 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $756 = 0, $76 = 0, $760 = 0, $762 = 0, $764 = 0, $765 = 0, $768 = 0, $770 = 0, $772 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $79 = 0, $8 = 0, $84 = 0, $85 = 0, $9 = 0, $90 = 0, $95 = 0, $96 = 0, $__f$01$i$i = 0, $begin = 0, $c = 0, $codepoint$0226 = 0, $data = 0, $digit$0 = 0, $eh$lpad$body$i$index15Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i103$index20Z2D = 0, $eh$lpad$body$i103$indexZ2D = 0, $eh$lpad$body$i141$index30Z2D = 0, $eh$lpad$body$i141$indexZ2D = 0, $eh$lpad$body167$index35Z2D = 0, $eh$lpad$body167$indexZ2D = 0, $eh$lpad$body175$index40Z2D = 0, $eh$lpad$body175$indexZ2D = 0, $eh$lpad$body76$index6Z2D = 0, $eh$lpad$body76$indexZ2D = 0, $i$0227 = 0, $id = 0, $kind$0 = 0, $kind$1 = 0, $line_number$0$lcssa = 0, $line_number$0309 = 0, $line_number$1 = 0, $line_number$2 = 0, $line_number$3 = 0, $line_number$5 = 0, $line_number$6 = 0, $line_start$0308 = 0, $line_start$1 = 0, $line_start$2 = 0, $line_start$3 = 0, $line_start$5 = 0, $line_start$6 = 0, $lpad$phi261$index = 0, $lpad$phi261$index25 = 0, $ss = 0, $ss4 = 0, $ss6 = 0, $storemerge39 = 0, label = 0, sp = 0, $__f$01$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 800 | 0;
 $0 = sp + 790 | 0;
 $1 = sp + 776 | 0;
 $2 = sp + 789 | 0;
 $3 = sp + 764 | 0;
 $4 = sp + 788 | 0;
 $5 = sp + 752 | 0;
 $c = sp + 748 | 0;
 $begin = sp;
 $data = sp + 736 | 0;
 $6 = sp + 724 | 0;
 $7 = sp + 712 | 0;
 $8 = sp + 700 | 0;
 $9 = sp + 688 | 0;
 $ss = sp + 544 | 0;
 $10 = sp + 528 | 0;
 $11 = sp + 516 | 0;
 $12 = sp + 504 | 0;
 $ss4 = sp + 360 | 0;
 $13 = sp + 344 | 0;
 $id = sp + 332 | 0;
 $14 = sp + 320 | 0;
 $ss6 = sp + 176 | 0;
 $15 = sp + 164 | 0;
 $16 = sp + 120 | 0;
 $17 = sp + 92 | 0;
 $18 = sp + 48 | 0;
 $19 = sp + 36 | 0;
 $20 = sp + 8 | 0;
 HEAP32[$agg$result >> 2] = $agg$result;
 $21 = $agg$result + 4 | 0;
 HEAP32[$21 >> 2] = $agg$result;
 $22 = $agg$result + 8 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$c >> 2] = $input;
 L1 : do if (!(HEAP8[$input >> 0] | 0)) {
  $726 = 0;
  $731 = 1;
  $line_number$0$lcssa = 1;
  label = 237;
 } else {
  $25 = $begin + 4 | 0;
  $26 = $17 + 12 | 0;
  $27 = $17 + 20 | 0;
  $28 = $16 + 4 | 0;
  $29 = $16 + 16 | 0;
  $30 = $16 + 28 | 0;
  $31 = $16 + 16 | 0;
  $32 = $data + 1 | 0;
  $33 = $data + 8 | 0;
  $34 = $data + 4 | 0;
  $35 = 1;
  $37 = $input;
  $line_number$0309 = 1;
  $line_start$0308 = $input;
  L3 : while (1) {
   HEAP32[$begin >> 2] = $line_number$0309;
   HEAP32[$25 >> 2] = $35;
   HEAP32[$data + 0 >> 2] = 0;
   HEAP32[$data + 4 >> 2] = 0;
   HEAP32[$data + 8 >> 2] = 0;
   $36 = HEAP8[$37 >> 0] | 0;
   $38 = $36 << 24 >> 24;
   L5 : do switch ($38 | 0) {
   case 40:
    {
     $kind$1 = 8;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 41:
    {
     $kind$1 = 9;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 59:
    {
     $kind$1 = 10;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 33:
    {
     $43 = $37 + 1 | 0;
     if ((HEAP8[$43 >> 0] | 0) == 61) {
      HEAP32[$c >> 2] = $43;
      __THREW__ = 0;
      invoke_iii(19, $data | 0, 192) | 0;
      $46 = __THREW__;
      __THREW__ = 0;
      if ($46 & 1) {
       label = 20;
       break L3;
      } else {
       $kind$1 = 13;
       $line_number$5 = $line_number$0309;
       $line_start$5 = $line_start$0308;
       label = 224;
       break L5;
      }
     } else {
      __THREW__ = 0;
      invoke_iii(19, $data | 0, 200) | 0;
      $54 = __THREW__;
      __THREW__ = 0;
      if ($54 & 1) {
       label = 20;
       break L3;
      } else {
       $kind$1 = 13;
       $line_number$5 = $line_number$0309;
       $line_start$5 = $line_start$0308;
       label = 224;
       break L5;
      }
     }
     break;
    }
   case 126:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 208) | 0;
     $56 = __THREW__;
     __THREW__ = 0;
     if ($56 & 1) {
      label = 20;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$5 = $line_number$0309;
      $line_start$5 = $line_start$0308;
      label = 224;
     }
     break;
    }
   case 43:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 216) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 20;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$5 = $line_number$0309;
      $line_start$5 = $line_start$0308;
      label = 224;
     }
     break;
    }
   case 58:
    {
     $kind$1 = 4;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 44:
    {
     $kind$1 = 5;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 36:
    {
     $kind$1 = 6;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 46:
    {
     $kind$1 = 7;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 45:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 224) | 0;
     $60 = __THREW__;
     __THREW__ = 0;
     if ($60 & 1) {
      label = 20;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$5 = $line_number$0309;
      $line_start$5 = $line_start$0308;
      label = 224;
     }
     break;
    }
   case 57:
   case 56:
   case 55:
   case 54:
   case 53:
   case 52:
   case 51:
   case 50:
   case 49:
   case 48:
    {
     __THREW__ = 0;
     invoke_viiii(10, $6 | 0, $c | 0, $filename | 0, $begin | 0);
     $62 = __THREW__;
     __THREW__ = 0;
     if ($62 & 1) {
      label = 20;
      break L3;
     }
     if (!(HEAP8[$data >> 0] & 1)) {
      HEAP8[$32 >> 0] = 0;
      HEAP8[$data >> 0] = 0;
     } else {
      HEAP8[HEAP32[$33 >> 2] >> 0] = 0;
      HEAP32[$34 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $data | 0, 0);
     $68 = __THREW__;
     __THREW__ = 0;
     if ($68 & 1) {
      label = 31;
      break L3;
     };
     HEAP32[$data + 0 >> 2] = HEAP32[$6 + 0 >> 2];
     HEAP32[$data + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$data + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     HEAP32[$6 + 0 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
     $kind$1 = 12;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 34:
    {
     $$pn = $37;
     $line_number$1 = $line_number$0309;
     $line_start$1 = $line_start$0308;
     while (1) {
      $storemerge39 = $$pn + 1 | 0;
      HEAP32[$c >> 2] = $storemerge39;
      $72 = HEAP8[$storemerge39 >> 0] | 0;
      if (!($72 << 24 >> 24)) {
       label = 34;
       break L3;
      } else if ($72 << 24 >> 24 == 34) {
       $kind$1 = 14;
       $line_number$5 = $line_number$1;
       $line_start$5 = $line_start$1;
       label = 224;
       break L5;
      }
      $111 = $72 << 24 >> 24;
      L30 : do if (($111 | 0) == 92) {
       $112 = $$pn + 2 | 0;
       HEAP32[$c >> 2] = $112;
       $113 = HEAP8[$112 >> 0] | 0;
       switch ($113 << 24 >> 24 | 0) {
       case 47:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $113 | 0);
         $119 = __THREW__;
         __THREW__ = 0;
         if ($119 & 1) {
          label = 18;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L30;
         }
         break;
        }
       case 98:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 8);
         $121 = __THREW__;
         __THREW__ = 0;
         if ($121 & 1) {
          label = 18;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L30;
         }
         break;
        }
       case 102:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 12);
         $123 = __THREW__;
         __THREW__ = 0;
         if ($123 & 1) {
          label = 18;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L30;
         }
         break;
        }
       case 110:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 10);
         $125 = __THREW__;
         __THREW__ = 0;
         if ($125 & 1) {
          label = 18;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L30;
         }
         break;
        }
       case 114:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 13);
         $127 = __THREW__;
         __THREW__ = 0;
         if ($127 & 1) {
          label = 18;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L30;
         }
         break;
        }
       case 116:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, 9);
         $129 = __THREW__;
         __THREW__ = 0;
         if ($129 & 1) {
          label = 18;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L30;
         }
         break;
        }
       case 117:
        {
         HEAP32[$c >> 2] = $$pn + 3;
         $codepoint$0226 = 0;
         $i$0227 = 0;
         do {
          $133 = HEAP8[$$pn + ($i$0227 + 3) >> 0] | 0;
          $134 = $133 & 255;
          if ($133 << 24 >> 24 == 34) {
           label = 62;
           break L3;
          } else if (!($133 << 24 >> 24)) {
           label = 54;
           break L3;
          }
          do if (($133 + -48 << 24 >> 24 & 255) < 10) $digit$0 = $134 + -48 | 0; else {
           if (($133 + -97 << 24 >> 24 & 255) < 6) {
            $digit$0 = $134 + -87 | 0;
            break;
           }
           if (($133 + -65 << 24 >> 24 & 255) >= 6) {
            label = 76;
            break L3;
           }
           $digit$0 = $134 + -55 | 0;
          } while (0);
          $codepoint$0226 = $digit$0 + ($codepoint$0226 << 4) | 0;
          $i$0227 = $i$0227 + 1 | 0;
         } while ($i$0227 >>> 0 < 4);
         if ($codepoint$0226 >>> 0 >= 128) {
          label = 101;
          break L3;
         }
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $codepoint$0226 & 255 | 0);
         $297 = __THREW__;
         __THREW__ = 0;
         if ($297 & 1) {
          label = 18;
          break L3;
         }
         HEAP32[$c >> 2] = (HEAP32[$c >> 2] | 0) + 3;
         $line_number$2 = $line_number$1;
         $line_start$2 = $line_start$1;
         break L30;
         break;
        }
       case 34:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $113 | 0);
         $115 = __THREW__;
         __THREW__ = 0;
         if ($115 & 1) {
          label = 18;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L30;
         }
         break;
        }
       case 92:
        {
         __THREW__ = 0;
         invoke_vii(44, $data | 0, $113 | 0);
         $117 = __THREW__;
         __THREW__ = 0;
         if ($117 & 1) {
          label = 18;
          break L3;
         } else {
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L30;
         }
         break;
        }
       case 0:
        {
         label = 110;
         break L3;
         break;
        }
       default:
        {
         label = 118;
         break L3;
        }
       }
      } else if (($111 | 0) == 10) {
       __THREW__ = 0;
       invoke_vii(44, $data | 0, $72 | 0);
       $452 = __THREW__;
       __THREW__ = 0;
       if ($452 & 1) {
        label = 18;
        break L3;
       } else {
        $line_number$2 = $line_number$1 + 1 | 0;
        $line_start$2 = $$pn + 2 | 0;
       }
      } else {
       __THREW__ = 0;
       invoke_vii(44, $data | 0, $72 | 0);
       $454 = __THREW__;
       __THREW__ = 0;
       if ($454 & 1) {
        label = 18;
        break L3;
       } else {
        $line_number$2 = $line_number$1;
        $line_start$2 = $line_start$1;
       }
      } while (0);
      $$pn = HEAP32[$c >> 2] | 0;
      $line_number$1 = $line_number$2;
      $line_start$1 = $line_start$2;
     }
     break;
    }
   case 10:
    {
     $line_number$6 = $line_number$0309 + 1 | 0;
     $line_start$6 = $37 + 1 | 0;
     break;
    }
   case 125:
    {
     $kind$1 = 1;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 91:
    {
     $kind$1 = 2;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 93:
    {
     $kind$1 = 3;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 123:
    {
     $kind$1 = 0;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
     break;
    }
   case 13:
   case 9:
   case 32:
    {
     $line_number$6 = $line_number$0309;
     $line_start$6 = $line_start$0308;
     break;
    }
   default:
    {
     if (($36 + -65 << 24 >> 24 & 255) >= 26) if (!(($36 + -97 << 24 >> 24 & 255) < 26 | $36 << 24 >> 24 == 95)) {
      switch ($38 | 0) {
      case 35:
      case 37:
      case 47:
      case 42:
      case 62:
      case 60:
      case 61:
      case 94:
      case 124:
      case 38:
       break;
      default:
       {
        label = 199;
        break L3;
       }
      }
      if ($36 << 24 >> 24 == 35) {
       $521 = $37;
       $783 = 35;
       while (1) {
        if ($783 << 24 >> 24 == 0 | $783 << 24 >> 24 == 10) break;
        $520 = $521 + 1 | 0;
        HEAP32[$c >> 2] = $520;
        $521 = $520;
        $783 = HEAP8[$520 >> 0] | 0;
       }
       HEAP32[$c >> 2] = $521 + -1;
       $line_number$6 = $line_number$0309;
       $line_start$6 = $line_start$0308;
       break L5;
      } else if ($36 << 24 >> 24 == 47) label = 172; else if (!($36 << 24 >> 24)) $581 = $37; else {
       $573 = $36;
       $782 = $37;
       label = 195;
      }
      do if ((label | 0) == 172) {
       label = 0;
       if ((HEAP8[$37 + 1 >> 0] | 0) == 47) {
        $517 = $37;
        $784 = 47;
        while (1) {
         if ($784 << 24 >> 24 == 0 | $784 << 24 >> 24 == 10) break;
         $516 = $517 + 1 | 0;
         HEAP32[$c >> 2] = $516;
         $517 = $516;
         $784 = HEAP8[$516 >> 0] | 0;
        }
        HEAP32[$c >> 2] = $517 + -1;
        $line_number$6 = $line_number$0309;
        $line_start$6 = $line_start$0308;
        break L5;
       }
       if ((HEAP8[$37 + 1 >> 0] | 0) != 42) if (!($36 << 24 >> 24)) {
        $581 = $37;
        break;
       } else {
        $573 = $36;
        $782 = $37;
        label = 195;
        break;
       }
       $527 = $37 + 2 | 0;
       $line_number$3 = $line_number$0309;
       $line_start$3 = $line_start$0308;
       while (1) {
        HEAP32[$c >> 2] = $527;
        $528 = HEAP8[$527 >> 0] | 0;
        if ($528 << 24 >> 24 == 42) {
         if ((HEAP8[$527 + 1 >> 0] | 0) == 47) break;
        } else if ($528 << 24 >> 24 == 10) {
         $532 = $527 + 1 | 0;
         $527 = $532;
         $line_number$3 = $line_number$3 + 1 | 0;
         $line_start$3 = $532;
         continue;
        } else if (!($528 << 24 >> 24)) {
         label = 186;
         break L3;
        }
        $527 = $527 + 1 | 0;
       }
       HEAP32[$c >> 2] = $527 + 1;
       $line_number$6 = $line_number$3;
       $line_start$6 = $line_start$3;
       break L5;
      } while (0);
      L91 : do if ((label | 0) == 195) while (1) {
       label = 0;
       switch ($573 << 24 >> 24 | 0) {
       case 35:
       case 37:
       case 47:
       case 42:
       case 62:
       case 60:
       case 61:
       case 94:
       case 124:
       case 38:
        break;
       default:
        {
         $581 = $782;
         break L91;
        }
       }
       __THREW__ = 0;
       invoke_vii(44, $data | 0, $573 | 0);
       $574 = __THREW__;
       __THREW__ = 0;
       if ($574 & 1) {
        label = 19;
        break L3;
       }
       $577 = (HEAP32[$c >> 2] | 0) + 1 | 0;
       HEAP32[$c >> 2] = $577;
       $573 = HEAP8[$577 >> 0] | 0;
       if (!($573 << 24 >> 24)) {
        $581 = $577;
        break L91;
       } else {
        $782 = $577;
        label = 195;
       }
      } while (0);
      HEAP32[$c >> 2] = $581 + -1;
      $kind$1 = 13;
      $line_number$5 = $line_number$0309;
      $line_start$5 = $line_start$0308;
      label = 224;
      break L5;
     };
     HEAP32[$id + 0 >> 2] = 0;
     HEAP32[$id + 4 >> 2] = 0;
     HEAP32[$id + 8 >> 2] = 0;
     $460 = HEAP8[$37 >> 0] | 0;
     L98 : do if (!($460 << 24 >> 24)) $478 = $37; else {
      $462 = $460;
      $781 = $37;
      while (1) {
       if (($462 + -65 << 24 >> 24 & 255) >= 26) if (!(($462 + -97 << 24 >> 24 & 255) < 26 | $462 << 24 >> 24 == 95 | ($462 + -48 << 24 >> 24 & 255) < 10)) {
        $478 = $781;
        break L98;
       }
       __THREW__ = 0;
       invoke_vii(44, $id | 0, $462 | 0);
       $471 = __THREW__;
       __THREW__ = 0;
       if ($471 & 1) {
        label = 147;
        break L3;
       }
       $474 = (HEAP32[$c >> 2] | 0) + 1 | 0;
       HEAP32[$c >> 2] = $474;
       $462 = HEAP8[$474 >> 0] | 0;
       if (!($462 << 24 >> 24)) {
        $478 = $474;
        break;
       } else $781 = $474;
      }
     } while (0);
     HEAP32[$c >> 2] = $478 + -1;
     do if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 512) | 0)) $kind$0 = 15; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 520) | 0)) $kind$0 = 16; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 528) | 0)) $kind$0 = 17; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 536) | 0)) $kind$0 = 18; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 544) | 0)) $kind$0 = 19; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 560) | 0)) $kind$0 = 20; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 568) | 0)) $kind$0 = 21; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 576) | 0)) $kind$0 = 22; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 592) | 0)) $kind$0 = 23; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 600) | 0)) $kind$0 = 24; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 608) | 0)) $kind$0 = 25; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 616) | 0)) $kind$0 = 28; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 624) | 0)) $kind$0 = 29; else {
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 632) | 0)) {
       $kind$0 = 26;
       break;
      }
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 648) | 0)) {
       $kind$0 = 27;
       break;
      }
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 656) | 0)) {
       $kind$0 = 30;
       break;
      }
      __THREW__ = 0;
      invoke_iii(20, $data | 0, $id | 0) | 0;
      $511 = __THREW__;
      __THREW__ = 0;
      if ($511 & 1) {
       label = 148;
       break L3;
      } else $kind$0 = 11;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($id);
     $kind$1 = $kind$0;
     $line_number$5 = $line_number$0309;
     $line_start$5 = $line_start$0308;
     label = 224;
    }
   } while (0);
   if ((label | 0) == 224) {
    label = 0;
    $668 = HEAP32[$c >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $17 | 0, $filename | 0);
    $669 = __THREW__;
    __THREW__ = 0;
    if ($669 & 1) {
     label = 20;
     break;
    }
    $675 = $begin;
    $680 = HEAP32[$675 + 4 >> 2] | 0;
    $681 = $26;
    HEAP32[$681 >> 2] = HEAP32[$675 >> 2];
    HEAP32[$681 + 4 >> 2] = $680;
    $685 = $27;
    HEAP32[$685 >> 2] = $line_number$5;
    HEAP32[$685 + 4 >> 2] = 1 - $line_start$5 + $668;
    HEAP32[$16 >> 2] = $kind$1;
    __THREW__ = 0;
    invoke_vii(40, $28 | 0, $data | 0);
    $689 = __THREW__;
    __THREW__ = 0;
    if ($689 & 1) {
     label = 231;
     break;
    }
    __THREW__ = 0;
    invoke_vii(40, $29 | 0, $17 | 0);
    $691 = __THREW__;
    __THREW__ = 0;
    if ($691 & 1) {
     label = 227;
     break;
    };
    HEAP32[$30 + 0 >> 2] = HEAP32[$26 + 0 >> 2];
    HEAP32[$30 + 4 >> 2] = HEAP32[$26 + 4 >> 2];
    HEAP32[$30 + 8 >> 2] = HEAP32[$26 + 8 >> 2];
    HEAP32[$30 + 12 >> 2] = HEAP32[$26 + 12 >> 2];
    __THREW__ = 0;
    $695 = invoke_ii(67, 52) | 0;
    $696 = __THREW__;
    __THREW__ = 0;
    if ($696 & 1) {
     label = 233;
     break;
    }
    $699 = HEAP32[$16 >> 2] | 0;
    $700 = $695 + 12 | 0;
    HEAP32[$700 + 0 >> 2] = HEAP32[$28 + 0 >> 2];
    HEAP32[$700 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
    HEAP32[$700 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
    HEAP32[$28 + 0 >> 2] = 0;
    HEAP32[$28 + 4 >> 2] = 0;
    HEAP32[$28 + 8 >> 2] = 0;
    $701 = $695 + 24 | 0;
    HEAP32[$701 + 0 >> 2] = HEAP32[$31 + 0 >> 2];
    HEAP32[$701 + 4 >> 2] = HEAP32[$31 + 4 >> 2];
    HEAP32[$701 + 8 >> 2] = HEAP32[$31 + 8 >> 2];
    HEAP32[$31 + 0 >> 2] = 0;
    HEAP32[$31 + 4 >> 2] = 0;
    HEAP32[$31 + 8 >> 2] = 0;
    $702 = $695 + 36 | 0;
    HEAP32[$702 + 0 >> 2] = HEAP32[$30 + 0 >> 2];
    HEAP32[$702 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
    HEAP32[$702 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
    HEAP32[$702 + 12 >> 2] = HEAP32[$30 + 12 >> 2];
    HEAP32[$695 + 8 >> 2] = $699;
    HEAP32[$695 + 4 >> 2] = $agg$result;
    $704 = HEAP32[$agg$result >> 2] | 0;
    HEAP32[$695 >> 2] = $704;
    HEAP32[$704 + 4 >> 2] = $695;
    HEAP32[$agg$result >> 2] = $695;
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
    $line_number$6 = $line_number$5;
    $line_start$6 = $line_start$5;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($data);
   $37 = (HEAP32[$c >> 2] | 0) + 1 | 0;
   HEAP32[$c >> 2] = $37;
   $35 = $37 - $line_start$6 + 1 | 0;
   if (!(HEAP8[$37 >> 0] | 0)) {
    label = 236;
    break;
   } else {
    $line_number$0309 = $line_number$6;
    $line_start$0308 = $line_start$6;
   }
  }
  L131 : switch (label | 0) {
  case 18:
   {
    $48 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body76$index6Z2D = tempRet0;
    $eh$lpad$body76$indexZ2D = $48;
    label = 21;
    break;
   }
  case 19:
   {
    $50 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body76$index6Z2D = tempRet0;
    $eh$lpad$body76$indexZ2D = $50;
    label = 21;
    break;
   }
  case 20:
   {
    $52 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body76$index6Z2D = tempRet0;
    $eh$lpad$body76$indexZ2D = $52;
    label = 21;
    break;
   }
  case 31:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 34:
   {
    $73 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $7 | 0, 232, 19);
    $74 = __THREW__;
    __THREW__ = 0;
    do if ($74 & 1) {
     $107 = ___cxa_find_matching_catch() | 0;
     $$013180 = $107;
     $$020179 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $73 | 0, $filename | 0);
     $76 = __THREW__;
     __THREW__ = 0;
     if ($76 & 1) $$037 = 1; else {
      $79 = $begin;
      $84 = HEAP32[$79 + 4 >> 2] | 0;
      $85 = $73 + 12 | 0;
      HEAP32[$85 >> 2] = HEAP32[$79 >> 2];
      HEAP32[$85 + 4 >> 2] = $84;
      $90 = $begin;
      $95 = HEAP32[$90 + 4 >> 2] | 0;
      $96 = $73 + 20 | 0;
      HEAP32[$96 >> 2] = HEAP32[$90 >> 2];
      HEAP32[$96 + 4 >> 2] = $95;
      __THREW__ = 0;
      invoke_vii(40, $73 + 28 | 0, $7 | 0);
      $101 = __THREW__;
      __THREW__ = 0;
      if ($101 & 1) {
       $103 = ___cxa_find_matching_catch() | 0;
       $104 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($73);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
       $$013180 = $103;
       $$020179 = $104;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $73 | 0, 48, 178);
      $105 = __THREW__;
      __THREW__ = 0;
      if ($105 & 1) $$037 = 0; else {}
     }
     $109 = ___cxa_find_matching_catch() | 0;
     $110 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
     if ($$037) {
      $$013180 = $109;
      $$020179 = $110;
     } else {
      $$13 = $109;
      $$1333 = $110;
      break L131;
     }
    } while (0);
    ___cxa_free_exception($73 | 0);
    $$13 = $$013180;
    $$1333 = $$020179;
    break;
   }
  case 54:
   {
    $135 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $8 | 0, 232, 19);
    $136 = __THREW__;
    __THREW__ = 0;
    do if ($136 & 1) {
     $169 = ___cxa_find_matching_catch() | 0;
     $$114184 = $169;
     $$121183 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $135 | 0, $filename | 0);
     $138 = __THREW__;
     __THREW__ = 0;
     if ($138 & 1) $$018 = 1; else {
      $141 = $begin;
      $146 = HEAP32[$141 + 4 >> 2] | 0;
      $147 = $135 + 12 | 0;
      HEAP32[$147 >> 2] = HEAP32[$141 >> 2];
      HEAP32[$147 + 4 >> 2] = $146;
      $152 = $begin;
      $157 = HEAP32[$152 + 4 >> 2] | 0;
      $158 = $135 + 20 | 0;
      HEAP32[$158 >> 2] = HEAP32[$152 >> 2];
      HEAP32[$158 + 4 >> 2] = $157;
      __THREW__ = 0;
      invoke_vii(40, $135 + 28 | 0, $8 | 0);
      $163 = __THREW__;
      __THREW__ = 0;
      if ($163 & 1) {
       $165 = ___cxa_find_matching_catch() | 0;
       $166 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($135);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
       $$114184 = $165;
       $$121183 = $166;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $135 | 0, 48, 178);
      $167 = __THREW__;
      __THREW__ = 0;
      if ($167 & 1) $$018 = 0; else {}
     }
     $171 = ___cxa_find_matching_catch() | 0;
     $172 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
     if ($$018) {
      $$114184 = $171;
      $$121183 = $172;
     } else {
      $$13 = $171;
      $$1333 = $172;
      break L131;
     }
    } while (0);
    ___cxa_free_exception($135 | 0);
    $$13 = $$114184;
    $$1333 = $$121183;
    break;
   }
  case 62:
   {
    $173 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $9 | 0, 256, 52);
    $174 = __THREW__;
    __THREW__ = 0;
    do if ($174 & 1) {
     $207 = ___cxa_find_matching_catch() | 0;
     $$2188 = $207;
     $$222187 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $173 | 0, $filename | 0);
     $176 = __THREW__;
     __THREW__ = 0;
     if ($176 & 1) $$011 = 1; else {
      $179 = $begin;
      $184 = HEAP32[$179 + 4 >> 2] | 0;
      $185 = $173 + 12 | 0;
      HEAP32[$185 >> 2] = HEAP32[$179 >> 2];
      HEAP32[$185 + 4 >> 2] = $184;
      $190 = $begin;
      $195 = HEAP32[$190 + 4 >> 2] | 0;
      $196 = $173 + 20 | 0;
      HEAP32[$196 >> 2] = HEAP32[$190 >> 2];
      HEAP32[$196 + 4 >> 2] = $195;
      __THREW__ = 0;
      invoke_vii(40, $173 + 28 | 0, $9 | 0);
      $201 = __THREW__;
      __THREW__ = 0;
      if ($201 & 1) {
       $203 = ___cxa_find_matching_catch() | 0;
       $204 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($173);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
       $$2188 = $203;
       $$222187 = $204;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $173 | 0, 48, 178);
      $205 = __THREW__;
      __THREW__ = 0;
      if ($205 & 1) $$011 = 0; else {}
     }
     $209 = ___cxa_find_matching_catch() | 0;
     $210 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
     if ($$011) {
      $$2188 = $209;
      $$222187 = $210;
     } else {
      $$13 = $209;
      $$1333 = $210;
      break L131;
     }
    } while (0);
    ___cxa_free_exception($173 | 0);
    $$13 = $$2188;
    $$1333 = $$222187;
    break;
   }
  case 76:
   {
    $217 = $ss + 64 | 0;
    $218 = $ss + 8 | 0;
    HEAP32[$218 >> 2] = 792;
    $219 = $ss + 12 | 0;
    HEAP32[$ss >> 2] = 940;
    HEAP32[$217 >> 2] = 960;
    HEAP32[$ss + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss + 64 | 0, $219 | 0);
    $222 = __THREW__;
    __THREW__ = 0;
    if ($222 & 1) {
     $234 = ___cxa_find_matching_catch() | 0;
     $$0$i = tempRet0;
     $$01$i = $234;
    } else {
     HEAP32[$ss + 136 >> 2] = 0;
     HEAP32[$ss + 140 >> 2] = -1;
     HEAP32[$ss >> 2] = 772;
     HEAP32[$217 >> 2] = 812;
     HEAP32[$218 >> 2] = 792;
     __THREW__ = 0;
     invoke_vi(179, $219 | 0);
     $226 = __THREW__;
     __THREW__ = 0;
     do if ($226 & 1) {
      $236 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index15Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $236;
     } else {
      HEAP32[$219 >> 2] = 1104;
      $228 = $ss + 44 | 0;
      HEAP32[$228 + 0 >> 2] = 0;
      HEAP32[$228 + 4 >> 2] = 0;
      HEAP32[$228 + 8 >> 2] = 0;
      HEAP32[$228 + 12 >> 2] = 0;
      HEAP32[$ss + 60 >> 2] = 24;
      HEAP32[$5 + 0 >> 2] = 0;
      HEAP32[$5 + 4 >> 2] = 0;
      HEAP32[$5 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $219 | 0, $5 | 0);
      $230 = __THREW__;
      __THREW__ = 0;
      if ($230 & 1) {
       $232 = ___cxa_find_matching_catch() | 0;
       $233 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($228);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($219);
       $eh$lpad$body$i$index15Z2D = $233;
       $eh$lpad$body$i$indexZ2D = $232;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
      __THREW__ = 0;
      $239 = invoke_iiii(25, $ss + 8 | 0, 312, 36) | 0;
      $240 = __THREW__;
      __THREW__ = 0;
      L143 : do if ($240 & 1) label = 93; else {
       __THREW__ = 0;
       $242 = invoke_iiii(25, $239 | 0, 352, 16) | 0;
       $243 = __THREW__;
       __THREW__ = 0;
       if ($243 & 1) label = 93; else {
        HEAP8[$4 >> 0] = $133;
        __THREW__ = 0;
        $245 = invoke_iiii(25, $242 | 0, $4 | 0, 1) | 0;
        $246 = __THREW__;
        __THREW__ = 0;
        if ($246 & 1) label = 93; else {
         __THREW__ = 0;
         invoke_iiii(25, $245 | 0, 376, 1) | 0;
         $248 = __THREW__;
         __THREW__ = 0;
         if ($248 & 1) label = 93; else {
          $250 = ___cxa_allocate_exception(40) | 0;
          __THREW__ = 0;
          invoke_vii(43, $10 | 0, $219 | 0);
          $251 = __THREW__;
          __THREW__ = 0;
          do if ($251 & 1) {
           $286 = ___cxa_find_matching_catch() | 0;
           $$3192 = $286;
           $$323191 = tempRet0;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $250 | 0, $filename | 0);
           $253 = __THREW__;
           __THREW__ = 0;
           if ($253 & 1) $$09 = 1; else {
            $256 = $begin;
            $261 = HEAP32[$256 + 4 >> 2] | 0;
            $262 = $250 + 12 | 0;
            HEAP32[$262 >> 2] = HEAP32[$256 >> 2];
            HEAP32[$262 + 4 >> 2] = $261;
            $267 = $begin;
            $272 = HEAP32[$267 + 4 >> 2] | 0;
            $273 = $250 + 20 | 0;
            HEAP32[$273 >> 2] = HEAP32[$267 >> 2];
            HEAP32[$273 + 4 >> 2] = $272;
            __THREW__ = 0;
            invoke_vii(40, $250 + 28 | 0, $10 | 0);
            $278 = __THREW__;
            __THREW__ = 0;
            if ($278 & 1) {
             $280 = ___cxa_find_matching_catch() | 0;
             $281 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($250);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
             $$3192 = $280;
             $$323191 = $281;
             break;
            }
            __THREW__ = 0;
            invoke_viii(4, $250 | 0, 48, 178);
            $282 = __THREW__;
            __THREW__ = 0;
            if ($282 & 1) $$09 = 0; else {}
           }
           $288 = ___cxa_find_matching_catch() | 0;
           $289 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
           if ($$09) {
            $$3192 = $288;
            $$323191 = $289;
           } else {
            $$4 = $288;
            $$424 = $289;
            break L143;
           }
          } while (0);
          ___cxa_free_exception($250 | 0);
          $$4 = $$3192;
          $$424 = $$323191;
         }
        }
       }
      } while (0);
      if ((label | 0) == 93) {
       $284 = ___cxa_find_matching_catch() | 0;
       $$4 = $284;
       $$424 = tempRet0;
      }
      HEAP32[$ss >> 2] = 772;
      HEAP32[$ss + 64 >> 2] = 812;
      HEAP32[$218 >> 2] = 792;
      HEAP32[$219 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($228);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($219);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($217);
      $$13 = $$4;
      $$1333 = $$424;
      break L131;
     } while (0);
     $$0$i = $eh$lpad$body$i$index15Z2D;
     $$01$i = $eh$lpad$body$i$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($217);
    $eh$lpad$body76$index6Z2D = $$0$i;
    $eh$lpad$body76$indexZ2D = $$01$i;
    label = 21;
    break;
   }
  case 101:
   {
    $299 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $11 | 0, 384, 29);
    $300 = __THREW__;
    __THREW__ = 0;
    do if ($300 & 1) {
     $333 = ___cxa_find_matching_catch() | 0;
     $$5196 = $333;
     $$525195 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $299 | 0, $filename | 0);
     $302 = __THREW__;
     __THREW__ = 0;
     if ($302 & 1) $$07 = 1; else {
      $305 = $begin;
      $310 = HEAP32[$305 + 4 >> 2] | 0;
      $311 = $299 + 12 | 0;
      HEAP32[$311 >> 2] = HEAP32[$305 >> 2];
      HEAP32[$311 + 4 >> 2] = $310;
      $316 = $begin;
      $321 = HEAP32[$316 + 4 >> 2] | 0;
      $322 = $299 + 20 | 0;
      HEAP32[$322 >> 2] = HEAP32[$316 >> 2];
      HEAP32[$322 + 4 >> 2] = $321;
      __THREW__ = 0;
      invoke_vii(40, $299 + 28 | 0, $11 | 0);
      $327 = __THREW__;
      __THREW__ = 0;
      if ($327 & 1) {
       $329 = ___cxa_find_matching_catch() | 0;
       $330 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($299);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
       $$5196 = $329;
       $$525195 = $330;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $299 | 0, 48, 178);
      $331 = __THREW__;
      __THREW__ = 0;
      if ($331 & 1) $$07 = 0; else {}
     }
     $335 = ___cxa_find_matching_catch() | 0;
     $336 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
     if ($$07) {
      $$5196 = $335;
      $$525195 = $336;
     } else {
      $$13 = $335;
      $$1333 = $336;
      break L131;
     }
    } while (0);
    ___cxa_free_exception($299 | 0);
    $$13 = $$5196;
    $$1333 = $$525195;
    break;
   }
  case 110:
   {
    $339 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $12 | 0, 416, 44);
    $340 = __THREW__;
    __THREW__ = 0;
    do if ($340 & 1) {
     $373 = ___cxa_find_matching_catch() | 0;
     $$6200 = $373;
     $$626199 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $339 | 0, $filename | 0);
     $342 = __THREW__;
     __THREW__ = 0;
     if ($342 & 1) $$05 = 1; else {
      $345 = $begin;
      $350 = HEAP32[$345 + 4 >> 2] | 0;
      $351 = $339 + 12 | 0;
      HEAP32[$351 >> 2] = HEAP32[$345 >> 2];
      HEAP32[$351 + 4 >> 2] = $350;
      $356 = $begin;
      $361 = HEAP32[$356 + 4 >> 2] | 0;
      $362 = $339 + 20 | 0;
      HEAP32[$362 >> 2] = HEAP32[$356 >> 2];
      HEAP32[$362 + 4 >> 2] = $361;
      __THREW__ = 0;
      invoke_vii(40, $339 + 28 | 0, $12 | 0);
      $367 = __THREW__;
      __THREW__ = 0;
      if ($367 & 1) {
       $369 = ___cxa_find_matching_catch() | 0;
       $370 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($339);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
       $$6200 = $369;
       $$626199 = $370;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $339 | 0, 48, 178);
      $371 = __THREW__;
      __THREW__ = 0;
      if ($371 & 1) $$05 = 0; else {}
     }
     $375 = ___cxa_find_matching_catch() | 0;
     $376 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
     if ($$05) {
      $$6200 = $375;
      $$626199 = $376;
     } else {
      $$13 = $375;
      $$1333 = $376;
      break L131;
     }
    } while (0);
    ___cxa_free_exception($339 | 0);
    $$13 = $$6200;
    $$1333 = $$626199;
    break;
   }
  case 118:
   {
    $377 = $ss4 + 64 | 0;
    $378 = $ss4 + 8 | 0;
    HEAP32[$378 >> 2] = 792;
    $379 = $ss4 + 12 | 0;
    HEAP32[$ss4 >> 2] = 940;
    HEAP32[$377 >> 2] = 960;
    HEAP32[$ss4 + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss4 + 64 | 0, $379 | 0);
    $382 = __THREW__;
    __THREW__ = 0;
    if ($382 & 1) {
     $394 = ___cxa_find_matching_catch() | 0;
     $$0$i106 = tempRet0;
     $$01$i105 = $394;
    } else {
     HEAP32[$ss4 + 136 >> 2] = 0;
     HEAP32[$ss4 + 140 >> 2] = -1;
     HEAP32[$ss4 >> 2] = 772;
     HEAP32[$377 >> 2] = 812;
     HEAP32[$378 >> 2] = 792;
     __THREW__ = 0;
     invoke_vi(179, $379 | 0);
     $386 = __THREW__;
     __THREW__ = 0;
     do if ($386 & 1) {
      $396 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i103$index20Z2D = tempRet0;
      $eh$lpad$body$i103$indexZ2D = $396;
     } else {
      HEAP32[$379 >> 2] = 1104;
      $388 = $ss4 + 44 | 0;
      HEAP32[$388 + 0 >> 2] = 0;
      HEAP32[$388 + 4 >> 2] = 0;
      HEAP32[$388 + 8 >> 2] = 0;
      HEAP32[$388 + 12 >> 2] = 0;
      HEAP32[$ss4 + 60 >> 2] = 24;
      HEAP32[$3 + 0 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $379 | 0, $3 | 0);
      $390 = __THREW__;
      __THREW__ = 0;
      if ($390 & 1) {
       $392 = ___cxa_find_matching_catch() | 0;
       $393 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($388);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($379);
       $eh$lpad$body$i103$index20Z2D = $393;
       $eh$lpad$body$i103$indexZ2D = $392;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
      __THREW__ = 0;
      $399 = invoke_iiii(25, $ss4 + 8 | 0, 464, 44) | 0;
      $400 = __THREW__;
      __THREW__ = 0;
      L235 : do if ($400 & 1) label = 134; else {
       HEAP8[$2 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
       __THREW__ = 0;
       $404 = invoke_iiii(25, $399 | 0, $2 | 0, 1) | 0;
       $405 = __THREW__;
       __THREW__ = 0;
       if ($405 & 1) label = 134; else {
        __THREW__ = 0;
        invoke_iiii(25, $404 | 0, 376, 1) | 0;
        $407 = __THREW__;
        __THREW__ = 0;
        if ($407 & 1) label = 134; else {
         $409 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $13 | 0, $379 | 0);
         $410 = __THREW__;
         __THREW__ = 0;
         do if ($410 & 1) {
          $445 = ___cxa_find_matching_catch() | 0;
          $$7204 = $445;
          $$727203 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $409 | 0, $filename | 0);
          $412 = __THREW__;
          __THREW__ = 0;
          if ($412 & 1) $$03 = 1; else {
           $415 = $begin;
           $420 = HEAP32[$415 + 4 >> 2] | 0;
           $421 = $409 + 12 | 0;
           HEAP32[$421 >> 2] = HEAP32[$415 >> 2];
           HEAP32[$421 + 4 >> 2] = $420;
           $426 = $begin;
           $431 = HEAP32[$426 + 4 >> 2] | 0;
           $432 = $409 + 20 | 0;
           HEAP32[$432 >> 2] = HEAP32[$426 >> 2];
           HEAP32[$432 + 4 >> 2] = $431;
           __THREW__ = 0;
           invoke_vii(40, $409 + 28 | 0, $13 | 0);
           $437 = __THREW__;
           __THREW__ = 0;
           if ($437 & 1) {
            $439 = ___cxa_find_matching_catch() | 0;
            $440 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($409);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
            $$7204 = $439;
            $$727203 = $440;
            break;
           }
           __THREW__ = 0;
           invoke_viii(4, $409 | 0, 48, 178);
           $441 = __THREW__;
           __THREW__ = 0;
           if ($441 & 1) $$03 = 0; else {}
          }
          $447 = ___cxa_find_matching_catch() | 0;
          $448 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
          if ($$03) {
           $$7204 = $447;
           $$727203 = $448;
          } else {
           $$8 = $447;
           $$828 = $448;
           break L235;
          }
         } while (0);
         ___cxa_free_exception($409 | 0);
         $$8 = $$7204;
         $$828 = $$727203;
        }
       }
      } while (0);
      if ((label | 0) == 134) {
       $443 = ___cxa_find_matching_catch() | 0;
       $$8 = $443;
       $$828 = tempRet0;
      }
      HEAP32[$ss4 >> 2] = 772;
      HEAP32[$ss4 + 64 >> 2] = 812;
      HEAP32[$378 >> 2] = 792;
      HEAP32[$379 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($388);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($379);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($377);
      $$13 = $$8;
      $$1333 = $$828;
      break L131;
     } while (0);
     $$0$i106 = $eh$lpad$body$i103$index20Z2D;
     $$01$i105 = $eh$lpad$body$i103$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($377);
    $eh$lpad$body76$index6Z2D = $$0$i106;
    $eh$lpad$body76$indexZ2D = $$01$i105;
    label = 21;
    break;
   }
  case 147:
   {
    $lpad$phi261$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi261$index25 = tempRet0;
    label = 149;
    break;
   }
  case 148:
   {
    $lpad$phi261$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi261$index25 = tempRet0;
    label = 149;
    break;
   }
  case 186:
   {
    $533 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $14 | 0, 664, 41);
    $534 = __THREW__;
    __THREW__ = 0;
    do if ($534 & 1) {
     $567 = ___cxa_find_matching_catch() | 0;
     $$9210 = $567;
     $$929209 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $533 | 0, $filename | 0);
     $536 = __THREW__;
     __THREW__ = 0;
     if ($536 & 1) $$01 = 1; else {
      $539 = $begin;
      $544 = HEAP32[$539 + 4 >> 2] | 0;
      $545 = $533 + 12 | 0;
      HEAP32[$545 >> 2] = HEAP32[$539 >> 2];
      HEAP32[$545 + 4 >> 2] = $544;
      $550 = $begin;
      $555 = HEAP32[$550 + 4 >> 2] | 0;
      $556 = $533 + 20 | 0;
      HEAP32[$556 >> 2] = HEAP32[$550 >> 2];
      HEAP32[$556 + 4 >> 2] = $555;
      __THREW__ = 0;
      invoke_vii(40, $533 + 28 | 0, $14 | 0);
      $561 = __THREW__;
      __THREW__ = 0;
      if ($561 & 1) {
       $563 = ___cxa_find_matching_catch() | 0;
       $564 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($533);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
       $$9210 = $563;
       $$929209 = $564;
       break;
      }
      __THREW__ = 0;
      invoke_viii(4, $533 | 0, 48, 178);
      $565 = __THREW__;
      __THREW__ = 0;
      if ($565 & 1) $$01 = 0; else {}
     }
     $569 = ___cxa_find_matching_catch() | 0;
     $570 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
     if ($$01) {
      $$9210 = $569;
      $$929209 = $570;
     } else {
      $$13 = $569;
      $$1333 = $570;
      break L131;
     }
    } while (0);
    ___cxa_free_exception($533 | 0);
    $$13 = $$9210;
    $$1333 = $$929209;
    break;
   }
  case 199:
   {
    $582 = $ss6 + 64 | 0;
    $583 = $ss6 + 8 | 0;
    HEAP32[$583 >> 2] = 792;
    $584 = $ss6 + 12 | 0;
    HEAP32[$ss6 >> 2] = 940;
    HEAP32[$582 >> 2] = 960;
    HEAP32[$ss6 + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss6 + 64 | 0, $584 | 0);
    $587 = __THREW__;
    __THREW__ = 0;
    if ($587 & 1) {
     $599 = ___cxa_find_matching_catch() | 0;
     $$0$i144 = tempRet0;
     $$01$i143 = $599;
    } else {
     HEAP32[$ss6 + 136 >> 2] = 0;
     HEAP32[$ss6 + 140 >> 2] = -1;
     HEAP32[$ss6 >> 2] = 772;
     HEAP32[$582 >> 2] = 812;
     HEAP32[$583 >> 2] = 792;
     __THREW__ = 0;
     invoke_vi(179, $584 | 0);
     $591 = __THREW__;
     __THREW__ = 0;
     do if ($591 & 1) {
      $601 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i141$index30Z2D = tempRet0;
      $eh$lpad$body$i141$indexZ2D = $601;
     } else {
      HEAP32[$584 >> 2] = 1104;
      $593 = $ss6 + 44 | 0;
      HEAP32[$593 + 0 >> 2] = 0;
      HEAP32[$593 + 4 >> 2] = 0;
      HEAP32[$593 + 8 >> 2] = 0;
      HEAP32[$593 + 12 >> 2] = 0;
      HEAP32[$ss6 + 60 >> 2] = 24;
      HEAP32[$1 + 0 >> 2] = 0;
      HEAP32[$1 + 4 >> 2] = 0;
      HEAP32[$1 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $584 | 0, $1 | 0);
      $595 = __THREW__;
      __THREW__ = 0;
      if ($595 & 1) {
       $597 = ___cxa_find_matching_catch() | 0;
       $598 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($593);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($584);
       $eh$lpad$body$i141$index30Z2D = $598;
       $eh$lpad$body$i141$indexZ2D = $597;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
      $603 = $ss6 + 8 | 0;
      __THREW__ = 0;
      invoke_iiii(25, $603 | 0, 712, 28) | 0;
      $604 = __THREW__;
      __THREW__ = 0;
      L279 : do if ($604 & 1) label = 211; else {
       if ((HEAP8[HEAP32[$c >> 2] >> 0] | 0) < 32) {
        __THREW__ = 0;
        $609 = invoke_iiii(25, $603 | 0, 744, 5) | 0;
        $610 = __THREW__;
        __THREW__ = 0;
        if ($610 & 1) {
         label = 211;
         break;
        }
        __THREW__ = 0;
        invoke_iii(21, $609 | 0, HEAP8[HEAP32[$c >> 2] >> 0] | 0) | 0;
        $615 = __THREW__;
        __THREW__ = 0;
        if ($615 & 1) {
         label = 211;
         break;
        }
       } else {
        __THREW__ = 0;
        $619 = invoke_iiii(25, $603 | 0, 376, 1) | 0;
        $620 = __THREW__;
        __THREW__ = 0;
        if ($620 & 1) {
         label = 211;
         break;
        }
        HEAP8[$0 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
        __THREW__ = 0;
        $624 = invoke_iiii(25, $619 | 0, $0 | 0, 1) | 0;
        $625 = __THREW__;
        __THREW__ = 0;
        if ($625 & 1) {
         label = 211;
         break;
        }
        __THREW__ = 0;
        invoke_iiii(25, $624 | 0, 376, 1) | 0;
        $627 = __THREW__;
        __THREW__ = 0;
        if ($627 & 1) {
         label = 211;
         break;
        }
       }
       $629 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $15 | 0, $584 | 0);
       $630 = __THREW__;
       __THREW__ = 0;
       do if ($630 & 1) {
        $663 = ___cxa_find_matching_catch() | 0;
        $$10214 = $663;
        $$1030213 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $629 | 0, $filename | 0);
        $632 = __THREW__;
        __THREW__ = 0;
        if ($632 & 1) $$0 = 1; else {
         $635 = $begin;
         $640 = HEAP32[$635 + 4 >> 2] | 0;
         $641 = $629 + 12 | 0;
         HEAP32[$641 >> 2] = HEAP32[$635 >> 2];
         HEAP32[$641 + 4 >> 2] = $640;
         $646 = $begin;
         $651 = HEAP32[$646 + 4 >> 2] | 0;
         $652 = $629 + 20 | 0;
         HEAP32[$652 >> 2] = HEAP32[$646 >> 2];
         HEAP32[$652 + 4 >> 2] = $651;
         __THREW__ = 0;
         invoke_vii(40, $629 + 28 | 0, $15 | 0);
         $657 = __THREW__;
         __THREW__ = 0;
         if ($657 & 1) {
          $659 = ___cxa_find_matching_catch() | 0;
          $660 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($629);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
          $$10214 = $659;
          $$1030213 = $660;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $629 | 0, 48, 178);
         $661 = __THREW__;
         __THREW__ = 0;
         if ($661 & 1) $$0 = 0; else {}
        }
        $665 = ___cxa_find_matching_catch() | 0;
        $666 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
        if ($$0) {
         $$10214 = $665;
         $$1030213 = $666;
        } else {
         $$11 = $665;
         $$1131 = $666;
         break L279;
        }
       } while (0);
       ___cxa_free_exception($629 | 0);
       $$11 = $$10214;
       $$1131 = $$1030213;
      } while (0);
      if ((label | 0) == 211) {
       $617 = ___cxa_find_matching_catch() | 0;
       $$11 = $617;
       $$1131 = tempRet0;
      }
      HEAP32[$ss6 >> 2] = 772;
      HEAP32[$ss6 + 64 >> 2] = 812;
      HEAP32[$583 >> 2] = 792;
      HEAP32[$584 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($593);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($584);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($582);
      $$13 = $$11;
      $$1333 = $$1131;
      break L131;
     } while (0);
     $$0$i144 = $eh$lpad$body$i141$index30Z2D;
     $$01$i143 = $eh$lpad$body$i141$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($582);
    $eh$lpad$body76$index6Z2D = $$0$i144;
    $eh$lpad$body76$indexZ2D = $$01$i143;
    label = 21;
    break;
   }
  case 227:
   {
    $693 = ___cxa_find_matching_catch() | 0;
    $694 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
    $eh$lpad$body167$index35Z2D = $694;
    $eh$lpad$body167$indexZ2D = $693;
    label = 232;
    break;
   }
  case 231:
   {
    $716 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body167$index35Z2D = tempRet0;
    $eh$lpad$body167$indexZ2D = $716;
    label = 232;
    break;
   }
  case 233:
   {
    $718 = ___cxa_find_matching_catch() | 0;
    $719 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($29);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($28);
    $$1215 = $718;
    $$1232 = $719;
    label = 234;
    break;
   }
  case 236:
   {
    $726 = 0;
    $731 = $35;
    $line_number$0$lcssa = $line_number$6;
    label = 237;
    break L1;
    break;
   }
  }
  if ((label | 0) == 21) {
   $$13 = $eh$lpad$body76$indexZ2D;
   $$1333 = $eh$lpad$body76$index6Z2D;
  } else if ((label | 0) == 149) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($id);
   $$13 = $lpad$phi261$index;
   $$1333 = $lpad$phi261$index25;
  } else if ((label | 0) == 232) {
   $$1215 = $eh$lpad$body167$indexZ2D;
   $$1232 = $eh$lpad$body167$index35Z2D;
   label = 234;
  }
  if ((label | 0) == 234) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
   $$13 = $$1215;
   $$1333 = $$1232;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($data);
  $$1617 = $$13;
  $$1636 = $$1333;
 } while (0);
 do if ((label | 0) == 237) {
  __THREW__ = 0;
  invoke_viii(3, $19 | 0, 752, 0);
  $720 = __THREW__;
  __THREW__ = 0;
  if ($720 & 1) {
   $39 = ___cxa_find_matching_catch() | 0;
   $$1617 = $39;
   $$1636 = tempRet0;
   break;
  }
  __THREW__ = 0;
  invoke_vii(40, $20 | 0, $filename | 0);
  $722 = __THREW__;
  __THREW__ = 0;
  if ($722 & 1) {
   $760 = ___cxa_find_matching_catch() | 0;
   $$15 = $760;
   $$1535 = tempRet0;
  } else {
   $724 = $20 + 12 | 0;
   $725 = $726 | $line_number$0$lcssa;
   $727 = $724;
   HEAP32[$727 >> 2] = $725;
   HEAP32[$727 + 4 >> 2] = $731;
   $733 = $20 + 20 | 0;
   HEAP32[$733 >> 2] = $725;
   HEAP32[$733 + 4 >> 2] = $731;
   HEAP32[$18 >> 2] = 31;
   $737 = $18 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $737 | 0, $19 | 0);
   $738 = __THREW__;
   __THREW__ = 0;
   do if ($738 & 1) {
    $762 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body175$index40Z2D = tempRet0;
    $eh$lpad$body175$indexZ2D = $762;
    label = 246;
   } else {
    $740 = $18 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $740 | 0, $20 | 0);
    $741 = __THREW__;
    __THREW__ = 0;
    if ($741 & 1) {
     $743 = ___cxa_find_matching_catch() | 0;
     $744 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($737);
     $eh$lpad$body175$index40Z2D = $744;
     $eh$lpad$body175$indexZ2D = $743;
     label = 246;
     break;
    }
    $745 = $18 + 28 | 0;
    HEAP32[$745 + 0 >> 2] = HEAP32[$724 + 0 >> 2];
    HEAP32[$745 + 4 >> 2] = HEAP32[$724 + 4 >> 2];
    HEAP32[$745 + 8 >> 2] = HEAP32[$724 + 8 >> 2];
    HEAP32[$745 + 12 >> 2] = HEAP32[$724 + 12 >> 2];
    __THREW__ = 0;
    $746 = invoke_ii(67, 52) | 0;
    $747 = __THREW__;
    __THREW__ = 0;
    if ($747 & 1) {
     $764 = ___cxa_find_matching_catch() | 0;
     $765 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($740);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($737);
     $$1416 = $764;
     $$1434 = $765;
     break;
    } else {
     $750 = HEAP32[$18 >> 2] | 0;
     $751 = $746 + 12 | 0;
     HEAP32[$751 + 0 >> 2] = HEAP32[$737 + 0 >> 2];
     HEAP32[$751 + 4 >> 2] = HEAP32[$737 + 4 >> 2];
     HEAP32[$751 + 8 >> 2] = HEAP32[$737 + 8 >> 2];
     HEAP32[$737 + 0 >> 2] = 0;
     HEAP32[$737 + 4 >> 2] = 0;
     HEAP32[$737 + 8 >> 2] = 0;
     $752 = $746 + 24 | 0;
     $753 = $18 + 16 | 0;
     HEAP32[$752 + 0 >> 2] = HEAP32[$753 + 0 >> 2];
     HEAP32[$752 + 4 >> 2] = HEAP32[$753 + 4 >> 2];
     HEAP32[$752 + 8 >> 2] = HEAP32[$753 + 8 >> 2];
     HEAP32[$753 + 0 >> 2] = 0;
     HEAP32[$753 + 4 >> 2] = 0;
     HEAP32[$753 + 8 >> 2] = 0;
     $754 = $746 + 36 | 0;
     HEAP32[$754 + 0 >> 2] = HEAP32[$745 + 0 >> 2];
     HEAP32[$754 + 4 >> 2] = HEAP32[$745 + 4 >> 2];
     HEAP32[$754 + 8 >> 2] = HEAP32[$745 + 8 >> 2];
     HEAP32[$754 + 12 >> 2] = HEAP32[$745 + 12 >> 2];
     HEAP32[$746 + 8 >> 2] = $750;
     HEAP32[$746 + 4 >> 2] = $agg$result;
     $756 = HEAP32[$agg$result >> 2] | 0;
     HEAP32[$746 >> 2] = $756;
     HEAP32[$756 + 4 >> 2] = $746;
     HEAP32[$agg$result >> 2] = $746;
     HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($740);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($737);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 246) {
    $$1416 = $eh$lpad$body175$indexZ2D;
    $$1434 = $eh$lpad$body175$index40Z2D;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
   $$15 = $$1416;
   $$1535 = $$1434;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
  $$1617 = $$15;
  $$1636 = $$1535;
 } while (0);
 if (!(HEAP32[$22 >> 2] | 0)) ___resumeException($$1617 | 0);
 $768 = HEAP32[$21 >> 2] | 0;
 $770 = (HEAP32[$agg$result >> 2] | 0) + 4 | 0;
 $772 = HEAP32[$768 >> 2] | 0;
 HEAP32[$772 + 4 >> 2] = HEAP32[$770 >> 2];
 HEAP32[HEAP32[$770 >> 2] >> 2] = $772;
 HEAP32[$22 >> 2] = 0;
 if (($768 | 0) == ($agg$result | 0)) ___resumeException($$1617 | 0); else $__f$01$i$i = $768;
 do {
  $__f$01$i$i$looptemp = $__f$01$i$i;
  $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__f$01$i$i$looptemp + 24 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__f$01$i$i$looptemp + 12 | 0);
  __ZdlPv($__f$01$i$i$looptemp);
 } while (($__f$01$i$i | 0) != ($agg$result | 0));
 ___resumeException($$1617 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10makeObjectINS_16HeapSimpleObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEENS4_IS7_NS2_5FieldESB_NSC_INSD_ISE_SI_EEEEEEEEENS_5ValueEDpT0_($agg$result, $this, $args, $args1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i11 = 0, $$0$i$i$i$i$i$i$i$i$i11$i = 0, $$0$i$i$i$i$i$i$i$i$i11$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i3$i$i = 0, $$0$i$i$i$i$i$i$i$i$i33 = 0, $$0$i$i$i$i$i$i$i$i$i33$i = 0, $$0$i$i$i$i$i$i$i$i13 = 0, $$0$i$i$i$i$i$i$i$i13$i = 0, $$0$i$i$i$i$i$i$i$i13$i$i$i = 0, $$0$i$i$i$i$i$i$i$i35$i = 0, $$0$i$i$i$i$i$i$i$i36 = 0, $$0$i$i$i$i$i$i28 = 0, $$0$i$i$i$i$i$i28$i = 0, $$0$i$i$i$i$i$i28$i$i$i = 0, $$0$i$i$i$i$i$i34 = 0, $$0$i$i$i$i$i$i34$i = 0, $$0$i$i$i$i$i$i4$i$i = 0, $$0$i$i$i$i$i30 = 0, $$0$i$i$i$i$i30$i = 0, $$0$i$i$i$i$i30$i$i$i = 0, $$0$i$i$i$i1$i$i = 0, $$0$i$i$i$i1$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i$i = 0, $$0$i$i$i$i1$i$i23 = 0, $$0$i$i$i$i1$i$i23$i = 0, $$0$i$i$i$i1$i$i23$i$i$i = 0, $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i15 = 0, $$01$i$i$i$i$i$i$i$i15$i = 0, $$01$i$i$i$i$i$i$i$i15$i$i$i = 0, $$01$i$i$i$i$i$i$i$i39 = 0, $$01$i$i$i$i$i32 = 0, $$01$i$i$i$i$i32$i = 0, $$01$i$i$i$i$i32$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i4 = 0, $$idx$val$i$i4$i = 0, $$idx$val$i$i4$i$i$i = 0, $$idx$val$i15$i$i = 0, $$idx$val$i15$i$i$i = 0, $$idx$val$i15$i$i$i$i = 0, $$idx$val$i15$i$i$i$i$i = 0, $$idx$val$i15$i$i7 = 0, $$idx$val$i15$i$i7$i = 0, $$idx$val$i15$i$i7$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i21 = 0, $$idx2$val$i23$i$i$i$i$i$i21$i = 0, $$idx2$val$i23$i$i$i$i$i$i21$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa$i$i = 0, $$pre$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i9 = 0, $$pre$i$i$i$i$i$i9$i = 0, $$pre$i$i$i$i$i$i9$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $105 = 0, $107 = 0, $11 = 0, $111 = 0, $113 = 0, $116 = 0, $122 = 0, $124 = 0, $127 = 0, $131 = 0, $132 = 0, $133 = 0, $135 = 0, $136 = 0, $140 = 0, $142 = 0, $145 = 0, $146 = 0, $15 = 0, $150 = 0, $152 = 0, $154 = 0, $157 = 0, $163 = 0, $167 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $177 = 0, $179 = 0, $182 = 0, $188 = 0, $190 = 0, $193 = 0, $197 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $204 = 0, $205 = 0, $207 = 0, $208 = 0, $21 = 0, $210 = 0, $212 = 0, $215 = 0, $221 = 0, $225 = 0, $228 = 0, $229 = 0, $231 = 0, $235 = 0, $237 = 0, $240 = 0, $246 = 0, $248 = 0, $25 = 0, $251 = 0, $255 = 0, $256 = 0, $258 = 0, $259 = 0, $260 = 0, $262 = 0, $263 = 0, $265 = 0, $266 = 0, $268 = 0, $27 = 0, $270 = 0, $273 = 0, $279 = 0, $283 = 0, $286 = 0, $287 = 0, $289 = 0, $29 = 0, $293 = 0, $295 = 0, $298 = 0, $3 = 0, $304 = 0, $306 = 0, $309 = 0, $313 = 0, $314 = 0, $315 = 0, $317 = 0, $318 = 0, $32 = 0, $322 = 0, $324 = 0, $327 = 0, $328 = 0, $332 = 0, $334 = 0, $336 = 0, $339 = 0, $345 = 0, $349 = 0, $352 = 0, $353 = 0, $355 = 0, $359 = 0, $361 = 0, $364 = 0, $370 = 0, $372 = 0, $375 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $383 = 0, $384 = 0, $386 = 0, $387 = 0, $389 = 0, $391 = 0, $394 = 0, $4 = 0, $400 = 0, $404 = 0, $407 = 0, $408 = 0, $410 = 0, $414 = 0, $416 = 0, $419 = 0, $42 = 0, $425 = 0, $427 = 0, $430 = 0, $434 = 0, $435 = 0, $437 = 0, $438 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $449 = 0, $45 = 0, $450 = 0, $455 = 0, $457 = 0, $46 = 0, $460 = 0, $461 = 0, $467 = 0, $469 = 0, $472 = 0, $475 = 0, $476 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $483 = 0, $484 = 0, $488 = 0, $490 = 0, $492 = 0, $493 = 0, $496 = 0, $5 = 0, $503 = 0, $506 = 0, $512 = 0, $517 = 0, $52 = 0, $520 = 0, $528 = 0, $531 = 0, $534 = 0, $538 = 0, $54 = 0, $547 = 0, $552 = 0, $554 = 0, $558 = 0, $560 = 0, $561 = 0, $563 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $573 = 0, $576 = 0, $577 = 0, $6 = 0, $63 = 0, $65 = 0, $68 = 0, $7 = 0, $72 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $83 = 0, $84 = 0, $86 = 0, $88 = 0, $91 = 0, $97 = 0, $__nd$0$in$i21$i$i$i$i$i$i = 0, $__nd$0$in$i21$i$i$i$i$i$i$i = 0, $__nd$0$in$i21$i$i$i$i$i$i$i$i = 0, $__nd$0$in$i21$i$i$i$i$i$i$i$i$i = 0, $__nd$0$in$i21$i$i$i$i$i$i19 = 0, $__nd$0$in$i21$i$i$i$i$i$i19$i = 0, $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i = 0, $__parent$i$i$i$i$i2$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i$i$i = 0, $eh$lpad$body39$i$index2Z2D = 0, $eh$lpad$body39$i$indexZ2D = 0, $eh$lpad$body43$index8Z2D = 0, $eh$lpad$body43$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx$val$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $__parent$i$i$i$i$i2$i$i$i = sp + 60 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 36 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 HEAP32[$agg$result + 0 >> 2] = HEAP32[10142];
 HEAP32[$agg$result + 4 >> 2] = HEAP32[10143];
 HEAP32[$agg$result + 8 >> 2] = HEAP32[10144];
 HEAP32[$agg$result + 12 >> 2] = HEAP32[10145];
 HEAP32[$agg$result >> 2] = 18;
 $5 = $3 + 4 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $3 + 8 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $3 + 4 | 0;
 HEAP32[$3 >> 2] = $7;
 $$idx$val$i$i = HEAP32[$args >> 2] | 0;
 $8 = $args + 4 | 0;
 L1 : do if (($$idx$val$i$i | 0) != ($8 | 0)) {
  $$idx$val$i15$i$i = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $10 = invoke_ii(67, 24) | 0;
   $11 = __THREW__;
   __THREW__ = 0;
   if ($11 & 1) break;
   $15 = $$idx$val$i15$i$i + 16 | 0;
   $17 = HEAP32[$15 >> 2] | 0;
   $20 = HEAP32[$15 + 4 >> 2] | 0;
   $21 = $10 + 16 | 0;
   HEAP32[$21 >> 2] = $17;
   HEAP32[$21 + 4 >> 2] = $20;
   $25 = $17;
   $$pre$i$i$i$i$i$i = HEAP32[$7 >> 2] | 0;
   do if ((HEAP32[$3 >> 2] | 0) == ($7 | 0)) {
    $38 = $7;
    label = 9;
   } else {
    $27 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($27) {
     $$0$i$i$i$i$i$i$i$i = $7;
     while (1) {
      $32 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$32 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $32; else {
       $$01$i$i$i$i$i$i$i$i = $32;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $29 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$29) {
       $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $29;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $25 >>> 0) {
     $38 = $$01$i$i$i$i$i$i$i$i;
     label = 9;
    } else {
     if ($27) {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $7;
      $$0$i$i$i$i1$i$i = $7;
      $52 = $7;
      break;
     } else $__nd$0$in$i21$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i23$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i + 16 >> 2] | 0;
      if ($25 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i >>> 0) {
       $42 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i >> 2] | 0;
       if (!$42) {
        label = 15;
        break;
       } else {
        $__nd$0$in$i21$i$i$i$i$i$i = $42;
        continue;
       }
      }
      if ($$idx2$val$i23$i$i$i$i$i$i >>> 0 >= $25 >>> 0) {
       label = 19;
       break;
      }
      $45 = $__nd$0$in$i21$i$i$i$i$i$i + 4 | 0;
      $46 = HEAP32[$45 >> 2] | 0;
      if (!$46) {
       label = 18;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i = $46;
     }
     if ((label | 0) == 15) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $__nd$0$in$i21$i$i$i$i$i$i;
      $52 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 18) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $45;
      $52 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 19) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $__parent$i$i$i$i$i2$i$i$i;
      $52 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 9) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $7;
     $$0$i$i$i$i1$i$i = $7;
     $52 = $7;
     break;
    } else {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $38;
     $$0$i$i$i$i1$i$i = $38 + 4 | 0;
     $52 = $38;
     break;
    }
   } while (0);
   $48 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
   if (!$48) {
    HEAP32[$10 >> 2] = 0;
    HEAP32[$10 + 4 >> 2] = 0;
    HEAP32[$10 + 8 >> 2] = $52;
    HEAP32[$$0$i$i$i$i1$i$i >> 2] = $10;
    $54 = HEAP32[HEAP32[$3 >> 2] >> 2] | 0;
    if (!$54) $57 = $10; else {
     HEAP32[$3 >> 2] = $54;
     $57 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$5 >> 2] | 0, $57);
    HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
   } else if (!(($48 | 0) == ($10 | 0) | ($10 | 0) == 0)) __ZdlPv($10);
   $63 = HEAP32[$$idx$val$i15$i$i + 4 >> 2] | 0;
   if (!$63) {
    $$0$i$i$i$i$i = $$idx$val$i15$i$i;
    while (1) {
     $68 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$68 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $68;
      break;
     } else $$0$i$i$i$i$i = $68;
    }
   } else {
    $$0$i$i$i$i$i$i = $63;
    while (1) {
     $65 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$65) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $65;
    }
   }
   if (($$01$i$i$i$i$i | 0) == ($8 | 0)) break L1; else $$idx$val$i15$i$i = $$01$i$i$i$i$i;
  }
  $72 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$5 >> 2] | 0);
  ___resumeException($72 | 0);
 } while (0);
 $75 = $4 + 4 | 0;
 HEAP32[$75 >> 2] = 0;
 $76 = $4 + 8 | 0;
 HEAP32[$76 >> 2] = 0;
 $77 = $4 + 4 | 0;
 HEAP32[$4 >> 2] = $77;
 $$idx$val$i$i4 = HEAP32[$args1 >> 2] | 0;
 $78 = $args1 + 4 | 0;
 L50 : do if (($$idx$val$i$i4 | 0) != ($78 | 0)) {
  $$idx$val$i15$i$i7 = $$idx$val$i$i4;
  while (1) {
   __THREW__ = 0;
   $80 = invoke_ii(67, 28) | 0;
   $81 = __THREW__;
   __THREW__ = 0;
   if ($81 & 1) break;
   $83 = $$idx$val$i15$i$i7 + 16 | 0;
   $84 = $80 + 16 | 0;
   HEAP32[$84 + 0 >> 2] = HEAP32[$83 + 0 >> 2];
   HEAP32[$84 + 4 >> 2] = HEAP32[$83 + 4 >> 2];
   HEAP32[$84 + 8 >> 2] = HEAP32[$83 + 8 >> 2];
   $$pre$i$i$i$i$i$i9 = HEAP32[$77 >> 2] | 0;
   do if ((HEAP32[$4 >> 2] | 0) == ($77 | 0)) {
    $97 = $77;
    label = 41;
   } else {
    $86 = ($$pre$i$i$i$i$i$i9 | 0) == 0;
    if ($86) {
     $$0$i$i$i$i$i$i$i$i13 = $77;
     while (1) {
      $91 = HEAP32[$$0$i$i$i$i$i$i$i$i13 + 8 >> 2] | 0;
      if ((HEAP32[$91 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13 | 0)) $$0$i$i$i$i$i$i$i$i13 = $91; else {
       $$01$i$i$i$i$i$i$i$i15 = $91;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i11 = $$pre$i$i$i$i$i$i9;
     while (1) {
      $88 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11 + 4 >> 2] | 0;
      if (!$88) {
       $$01$i$i$i$i$i$i$i$i15 = $$0$i$i$i$i$i$i$i$i$i11;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i11 = $88;
     }
    }
    $__v$idx14$val$i$i$i$i$i$i = HEAP32[$84 >> 2] | 0;
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i15 + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i >>> 0) {
     $97 = $$01$i$i$i$i$i$i$i$i15;
     label = 41;
    } else {
     if ($86) {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $77;
      $$0$i$i$i$i1$i$i23 = $77;
      $111 = $77;
      break;
     } else $__nd$0$in$i21$i$i$i$i$i$i19 = $$pre$i$i$i$i$i$i9;
     while (1) {
      $$idx2$val$i23$i$i$i$i$i$i21 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i19 + 16 >> 2] | 0;
      if ($__v$idx14$val$i$i$i$i$i$i >>> 0 < $$idx2$val$i23$i$i$i$i$i$i21 >>> 0) {
       $101 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i19 >> 2] | 0;
       if (!$101) {
        label = 47;
        break;
       } else {
        $__nd$0$in$i21$i$i$i$i$i$i19 = $101;
        continue;
       }
      }
      if ($$idx2$val$i23$i$i$i$i$i$i21 >>> 0 >= $__v$idx14$val$i$i$i$i$i$i >>> 0) {
       label = 51;
       break;
      }
      $104 = $__nd$0$in$i21$i$i$i$i$i$i19 + 4 | 0;
      $105 = HEAP32[$104 >> 2] | 0;
      if (!$105) {
       label = 50;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i19 = $105;
     }
     if ((label | 0) == 47) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i19;
      $$0$i$i$i$i1$i$i23 = $__nd$0$in$i21$i$i$i$i$i$i19;
      $111 = $__nd$0$in$i21$i$i$i$i$i$i19;
      break;
     } else if ((label | 0) == 50) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i19;
      $$0$i$i$i$i1$i$i23 = $104;
      $111 = $__nd$0$in$i21$i$i$i$i$i$i19;
      break;
     } else if ((label | 0) == 51) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i19;
      $$0$i$i$i$i1$i$i23 = $__parent$i$i$i$i$i2$i$i$i;
      $111 = $__nd$0$in$i21$i$i$i$i$i$i19;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 41) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i9) {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $77;
     $$0$i$i$i$i1$i$i23 = $77;
     $111 = $77;
     break;
    } else {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $97;
     $$0$i$i$i$i1$i$i23 = $97 + 4 | 0;
     $111 = $97;
     break;
    }
   } while (0);
   $107 = HEAP32[$$0$i$i$i$i1$i$i23 >> 2] | 0;
   if (!$107) {
    HEAP32[$80 >> 2] = 0;
    HEAP32[$80 + 4 >> 2] = 0;
    HEAP32[$80 + 8 >> 2] = $111;
    HEAP32[$$0$i$i$i$i1$i$i23 >> 2] = $80;
    $113 = HEAP32[HEAP32[$4 >> 2] >> 2] | 0;
    if (!$113) $116 = $80; else {
     HEAP32[$4 >> 2] = $113;
     $116 = HEAP32[$$0$i$i$i$i1$i$i23 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$75 >> 2] | 0, $116);
    HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 1;
   } else if (!(($107 | 0) == ($80 | 0) | ($80 | 0) == 0)) __ZdlPv($80);
   $122 = HEAP32[$$idx$val$i15$i$i7 + 4 >> 2] | 0;
   if (!$122) {
    $$0$i$i$i$i$i30 = $$idx$val$i15$i$i7;
    while (1) {
     $127 = HEAP32[$$0$i$i$i$i$i30 + 8 >> 2] | 0;
     if ((HEAP32[$127 >> 2] | 0) == ($$0$i$i$i$i$i30 | 0)) {
      $$01$i$i$i$i$i32 = $127;
      break;
     } else $$0$i$i$i$i$i30 = $127;
    }
   } else {
    $$0$i$i$i$i$i$i28 = $122;
    while (1) {
     $124 = HEAP32[$$0$i$i$i$i$i$i28 >> 2] | 0;
     if (!$124) {
      $$01$i$i$i$i$i32 = $$0$i$i$i$i$i$i28;
      break;
     } else $$0$i$i$i$i$i$i28 = $124;
    }
   }
   if (($$01$i$i$i$i$i32 | 0) == ($78 | 0)) break L50; else $$idx$val$i15$i$i7 = $$01$i$i$i$i$i32;
  }
  $570 = ___cxa_find_matching_catch() | 0;
  $571 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, HEAP32[$75 >> 2] | 0);
  $$0 = $571;
  $$01 = $570;
  $576 = HEAP32[$5 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $576);
  ___resumeException($$01 | 0);
 } while (0);
 $131 = $1 + 4 | 0;
 HEAP32[$131 >> 2] = 0;
 $132 = $1 + 8 | 0;
 HEAP32[$132 >> 2] = 0;
 $133 = $1 + 4 | 0;
 HEAP32[$1 >> 2] = $133;
 $$idx$val$i$i$i = HEAP32[$3 >> 2] | 0;
 L100 : do if (($$idx$val$i$i$i | 0) == ($7 | 0)) label = 96; else {
  $$idx$val$i15$i$i$i = $$idx$val$i$i$i;
  while (1) {
   __THREW__ = 0;
   $135 = invoke_ii(67, 24) | 0;
   $136 = __THREW__;
   __THREW__ = 0;
   if ($136 & 1) break;
   $140 = $$idx$val$i15$i$i$i + 16 | 0;
   $142 = HEAP32[$140 >> 2] | 0;
   $145 = HEAP32[$140 + 4 >> 2] | 0;
   $146 = $135 + 16 | 0;
   HEAP32[$146 >> 2] = $142;
   HEAP32[$146 + 4 >> 2] = $145;
   $150 = $142;
   $$pre$i$i$i$i$i$i$i = HEAP32[$133 >> 2] | 0;
   do if ((HEAP32[$1 >> 2] | 0) == ($133 | 0)) {
    $163 = $133;
    label = 72;
   } else {
    $152 = ($$pre$i$i$i$i$i$i$i | 0) == 0;
    if ($152) {
     $$0$i$i$i$i$i$i$i$i$i33 = $133;
     while (1) {
      $157 = HEAP32[$$0$i$i$i$i$i$i$i$i$i33 + 8 >> 2] | 0;
      if ((HEAP32[$157 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i33 | 0)) $$0$i$i$i$i$i$i$i$i$i33 = $157; else {
       $$01$i$i$i$i$i$i$i$i$i = $157;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $154 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$154) {
       $$01$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i$i = $154;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $150 >>> 0) {
     $163 = $$01$i$i$i$i$i$i$i$i$i;
     label = 72;
    } else {
     if ($152) {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $133;
      $$0$i$i$i$i1$i$i$i = $133;
      $177 = $133;
      break;
     } else $__nd$0$in$i21$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i23$i$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i + 16 >> 2] | 0;
      if ($150 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i$i >>> 0) {
       $167 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i >> 2] | 0;
       if (!$167) {
        label = 78;
        break;
       } else {
        $__nd$0$in$i21$i$i$i$i$i$i$i = $167;
        continue;
       }
      }
      if ($$idx2$val$i23$i$i$i$i$i$i$i >>> 0 >= $150 >>> 0) {
       label = 82;
       break;
      }
      $170 = $__nd$0$in$i21$i$i$i$i$i$i$i + 4 | 0;
      $171 = HEAP32[$170 >> 2] | 0;
      if (!$171) {
       label = 81;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i$i = $171;
     }
     if ((label | 0) == 78) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i$i = $__nd$0$in$i21$i$i$i$i$i$i$i;
      $177 = $__nd$0$in$i21$i$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 81) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i$i = $170;
      $177 = $__nd$0$in$i21$i$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 82) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i$i = $__parent$i$i$i$i$i2$i$i$i;
      $177 = $__nd$0$in$i21$i$i$i$i$i$i$i;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 72) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i$i) {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $133;
     $$0$i$i$i$i1$i$i$i = $133;
     $177 = $133;
     break;
    } else {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $163;
     $$0$i$i$i$i1$i$i$i = $163 + 4 | 0;
     $177 = $163;
     break;
    }
   } while (0);
   $173 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
   if (!$173) {
    HEAP32[$135 >> 2] = 0;
    HEAP32[$135 + 4 >> 2] = 0;
    HEAP32[$135 + 8 >> 2] = $177;
    HEAP32[$$0$i$i$i$i1$i$i$i >> 2] = $135;
    $179 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
    if (!$179) $182 = $135; else {
     HEAP32[$1 >> 2] = $179;
     $182 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$131 >> 2] | 0, $182);
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + 1;
   } else if (!(($173 | 0) == ($135 | 0) | ($135 | 0) == 0)) __ZdlPv($135);
   $188 = HEAP32[$$idx$val$i15$i$i$i + 4 >> 2] | 0;
   if (!$188) {
    $$0$i$i$i$i$i$i34 = $$idx$val$i15$i$i$i;
    while (1) {
     $193 = HEAP32[$$0$i$i$i$i$i$i34 + 8 >> 2] | 0;
     if ((HEAP32[$193 >> 2] | 0) == ($$0$i$i$i$i$i$i34 | 0)) {
      $$01$i$i$i$i$i$i = $193;
      break;
     } else $$0$i$i$i$i$i$i34 = $193;
    }
   } else {
    $$0$i$i$i$i$i$i$i = $188;
    while (1) {
     $190 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
     if (!$190) {
      $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i$i = $190;
    }
   }
   if (($$01$i$i$i$i$i$i | 0) == ($7 | 0)) {
    label = 96;
    break L100;
   } else $$idx$val$i15$i$i$i = $$01$i$i$i$i$i$i;
  }
  $197 = ___cxa_find_matching_catch() | 0;
  $198 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$131 >> 2] | 0);
  $eh$lpad$body43$index8Z2D = $198;
  $eh$lpad$body43$indexZ2D = $197;
 } while (0);
 L148 : do if ((label | 0) == 96) {
  $200 = $2 + 4 | 0;
  HEAP32[$200 >> 2] = 0;
  $201 = $2 + 8 | 0;
  HEAP32[$201 >> 2] = 0;
  $202 = $2 + 4 | 0;
  HEAP32[$2 >> 2] = $202;
  $$idx$val$i$i4$i = HEAP32[$4 >> 2] | 0;
  L150 : do if (($$idx$val$i$i4$i | 0) == ($77 | 0)) label = 127; else {
   $$idx$val$i15$i$i7$i = $$idx$val$i$i4$i;
   while (1) {
    __THREW__ = 0;
    $204 = invoke_ii(67, 28) | 0;
    $205 = __THREW__;
    __THREW__ = 0;
    if ($205 & 1) break;
    $207 = $$idx$val$i15$i$i7$i + 16 | 0;
    $208 = $204 + 16 | 0;
    HEAP32[$208 + 0 >> 2] = HEAP32[$207 + 0 >> 2];
    HEAP32[$208 + 4 >> 2] = HEAP32[$207 + 4 >> 2];
    HEAP32[$208 + 8 >> 2] = HEAP32[$207 + 8 >> 2];
    $$pre$i$i$i$i$i$i9$i = HEAP32[$202 >> 2] | 0;
    do if ((HEAP32[$2 >> 2] | 0) == ($202 | 0)) {
     $221 = $202;
     label = 104;
    } else {
     $210 = ($$pre$i$i$i$i$i$i9$i | 0) == 0;
     if ($210) {
      $$0$i$i$i$i$i$i$i$i13$i = $202;
      while (1) {
       $215 = HEAP32[$$0$i$i$i$i$i$i$i$i13$i + 8 >> 2] | 0;
       if ((HEAP32[$215 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13$i | 0)) $$0$i$i$i$i$i$i$i$i13$i = $215; else {
        $$01$i$i$i$i$i$i$i$i15$i = $215;
        break;
       }
      }
     } else {
      $$0$i$i$i$i$i$i$i$i$i11$i = $$pre$i$i$i$i$i$i9$i;
      while (1) {
       $212 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11$i + 4 >> 2] | 0;
       if (!$212) {
        $$01$i$i$i$i$i$i$i$i15$i = $$0$i$i$i$i$i$i$i$i$i11$i;
        break;
       } else $$0$i$i$i$i$i$i$i$i$i11$i = $212;
      }
     }
     $__v$idx14$val$i$i$i$i$i$i$i = HEAP32[$208 >> 2] | 0;
     if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i >>> 0) {
      $221 = $$01$i$i$i$i$i$i$i$i15$i;
      label = 104;
     } else {
      if ($210) {
       HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $202;
       $$0$i$i$i$i1$i$i23$i = $202;
       $235 = $202;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i19$i = $$pre$i$i$i$i$i$i9$i;
      while (1) {
       $$idx2$val$i23$i$i$i$i$i$i21$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i19$i + 16 >> 2] | 0;
       if ($__v$idx14$val$i$i$i$i$i$i$i >>> 0 < $$idx2$val$i23$i$i$i$i$i$i21$i >>> 0) {
        $225 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i19$i >> 2] | 0;
        if (!$225) {
         label = 110;
         break;
        } else {
         $__nd$0$in$i21$i$i$i$i$i$i19$i = $225;
         continue;
        }
       }
       if ($$idx2$val$i23$i$i$i$i$i$i21$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i >>> 0) {
        label = 114;
        break;
       }
       $228 = $__nd$0$in$i21$i$i$i$i$i$i19$i + 4 | 0;
       $229 = HEAP32[$228 >> 2] | 0;
       if (!$229) {
        label = 113;
        break;
       } else $__nd$0$in$i21$i$i$i$i$i$i19$i = $229;
      }
      if ((label | 0) == 110) {
       label = 0;
       HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i19$i;
       $$0$i$i$i$i1$i$i23$i = $__nd$0$in$i21$i$i$i$i$i$i19$i;
       $235 = $__nd$0$in$i21$i$i$i$i$i$i19$i;
       break;
      } else if ((label | 0) == 113) {
       label = 0;
       HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i19$i;
       $$0$i$i$i$i1$i$i23$i = $228;
       $235 = $__nd$0$in$i21$i$i$i$i$i$i19$i;
       break;
      } else if ((label | 0) == 114) {
       label = 0;
       HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i19$i;
       $$0$i$i$i$i1$i$i23$i = $__parent$i$i$i$i$i2$i$i$i;
       $235 = $__nd$0$in$i21$i$i$i$i$i$i19$i;
       break;
      }
     }
    } while (0);
    do if ((label | 0) == 104) {
     label = 0;
     if (!$$pre$i$i$i$i$i$i9$i) {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $202;
      $$0$i$i$i$i1$i$i23$i = $202;
      $235 = $202;
      break;
     } else {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $221;
      $$0$i$i$i$i1$i$i23$i = $221 + 4 | 0;
      $235 = $221;
      break;
     }
    } while (0);
    $231 = HEAP32[$$0$i$i$i$i1$i$i23$i >> 2] | 0;
    if (!$231) {
     HEAP32[$204 >> 2] = 0;
     HEAP32[$204 + 4 >> 2] = 0;
     HEAP32[$204 + 8 >> 2] = $235;
     HEAP32[$$0$i$i$i$i1$i$i23$i >> 2] = $204;
     $237 = HEAP32[HEAP32[$2 >> 2] >> 2] | 0;
     if (!$237) $240 = $204; else {
      HEAP32[$2 >> 2] = $237;
      $240 = HEAP32[$$0$i$i$i$i1$i$i23$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$200 >> 2] | 0, $240);
     HEAP32[$201 >> 2] = (HEAP32[$201 >> 2] | 0) + 1;
    } else if (!(($231 | 0) == ($204 | 0) | ($204 | 0) == 0)) __ZdlPv($204);
    $246 = HEAP32[$$idx$val$i15$i$i7$i + 4 >> 2] | 0;
    if (!$246) {
     $$0$i$i$i$i$i30$i = $$idx$val$i15$i$i7$i;
     while (1) {
      $251 = HEAP32[$$0$i$i$i$i$i30$i + 8 >> 2] | 0;
      if ((HEAP32[$251 >> 2] | 0) == ($$0$i$i$i$i$i30$i | 0)) {
       $$01$i$i$i$i$i32$i = $251;
       break;
      } else $$0$i$i$i$i$i30$i = $251;
     }
    } else {
     $$0$i$i$i$i$i$i28$i = $246;
     while (1) {
      $248 = HEAP32[$$0$i$i$i$i$i$i28$i >> 2] | 0;
      if (!$248) {
       $$01$i$i$i$i$i32$i = $$0$i$i$i$i$i$i28$i;
       break;
      } else $$0$i$i$i$i$i$i28$i = $248;
     }
    }
    if (($$01$i$i$i$i$i32$i | 0) == ($77 | 0)) {
     label = 127;
     break L150;
    } else $$idx$val$i15$i$i7$i = $$01$i$i$i$i$i32$i;
   }
   $560 = ___cxa_find_matching_catch() | 0;
   $561 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$200 >> 2] | 0);
   $$0$i = $561;
   $$01$i = $560;
  } while (0);
  if ((label | 0) == 127) {
   __THREW__ = 0;
   $255 = invoke_ii(67, 32) | 0;
   $256 = __THREW__;
   __THREW__ = 0;
   L200 : do if ($256 & 1) label = 259; else {
    $258 = $0 + 4 | 0;
    HEAP32[$258 >> 2] = 0;
    $259 = $0 + 8 | 0;
    HEAP32[$259 >> 2] = 0;
    $260 = $0 + 4 | 0;
    HEAP32[$0 >> 2] = $260;
    $$idx$val$i$i$i$i = HEAP32[$2 >> 2] | 0;
    L202 : do if (($$idx$val$i$i$i$i | 0) == ($202 | 0)) label = 159; else {
     $$idx$val$i15$i$i$i$i = $$idx$val$i$i$i$i;
     while (1) {
      __THREW__ = 0;
      $262 = invoke_ii(67, 28) | 0;
      $263 = __THREW__;
      __THREW__ = 0;
      if ($263 & 1) break;
      $265 = $$idx$val$i15$i$i$i$i + 16 | 0;
      $266 = $262 + 16 | 0;
      HEAP32[$266 + 0 >> 2] = HEAP32[$265 + 0 >> 2];
      HEAP32[$266 + 4 >> 2] = HEAP32[$265 + 4 >> 2];
      HEAP32[$266 + 8 >> 2] = HEAP32[$265 + 8 >> 2];
      $$pre$i$i$i$i$i$i$i$i = HEAP32[$260 >> 2] | 0;
      do if ((HEAP32[$0 >> 2] | 0) == ($260 | 0)) {
       $279 = $260;
       label = 136;
      } else {
       $268 = ($$pre$i$i$i$i$i$i$i$i | 0) == 0;
       if ($268) {
        $$0$i$i$i$i$i$i$i$i$i33$i = $260;
        while (1) {
         $273 = HEAP32[$$0$i$i$i$i$i$i$i$i$i33$i + 8 >> 2] | 0;
         if ((HEAP32[$273 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i33$i | 0)) $$0$i$i$i$i$i$i$i$i$i33$i = $273; else {
          $$01$i$i$i$i$i$i$i$i$i$i = $273;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $270 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
         if (!$270) {
          $$01$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i = $270;
        }
       }
       $__v$idx14$val$i$i$i$i$i$i$i$i = HEAP32[$266 >> 2] | 0;
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
        $279 = $$01$i$i$i$i$i$i$i$i$i$i;
        label = 136;
       } else {
        if ($268) {
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $260;
         $$0$i$i$i$i1$i$i$i$i = $260;
         $293 = $260;
         break;
        } else $__nd$0$in$i21$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i23$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i + 16 >> 2] | 0;
         if ($__v$idx14$val$i$i$i$i$i$i$i$i >>> 0 < $$idx2$val$i23$i$i$i$i$i$i$i$i >>> 0) {
          $283 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i >> 2] | 0;
          if (!$283) {
           label = 142;
           break;
          } else {
           $__nd$0$in$i21$i$i$i$i$i$i$i$i = $283;
           continue;
          }
         }
         if ($$idx2$val$i23$i$i$i$i$i$i$i$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
          label = 146;
          break;
         }
         $286 = $__nd$0$in$i21$i$i$i$i$i$i$i$i + 4 | 0;
         $287 = HEAP32[$286 >> 2] | 0;
         if (!$287) {
          label = 145;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i$i$i = $287;
        }
        if ((label | 0) == 142) {
         label = 0;
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i$i = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         $293 = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         break;
        } else if ((label | 0) == 145) {
         label = 0;
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i$i = $286;
         $293 = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         break;
        } else if ((label | 0) == 146) {
         label = 0;
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i$i = $__parent$i$i$i$i$i2$i$i$i;
         $293 = $__nd$0$in$i21$i$i$i$i$i$i$i$i;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 136) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i) {
        HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $260;
        $$0$i$i$i$i1$i$i$i$i = $260;
        $293 = $260;
        break;
       } else {
        HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $279;
        $$0$i$i$i$i1$i$i$i$i = $279 + 4 | 0;
        $293 = $279;
        break;
       }
      } while (0);
      $289 = HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] | 0;
      if (!$289) {
       HEAP32[$262 >> 2] = 0;
       HEAP32[$262 + 4 >> 2] = 0;
       HEAP32[$262 + 8 >> 2] = $293;
       HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] = $262;
       $295 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
       if (!$295) $298 = $262; else {
        HEAP32[$0 >> 2] = $295;
        $298 = HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$258 >> 2] | 0, $298);
       HEAP32[$259 >> 2] = (HEAP32[$259 >> 2] | 0) + 1;
      } else if (!(($289 | 0) == ($262 | 0) | ($262 | 0) == 0)) __ZdlPv($262);
      $304 = HEAP32[$$idx$val$i15$i$i$i$i + 4 >> 2] | 0;
      if (!$304) {
       $$0$i$i$i$i$i$i34$i = $$idx$val$i15$i$i$i$i;
       while (1) {
        $309 = HEAP32[$$0$i$i$i$i$i$i34$i + 8 >> 2] | 0;
        if ((HEAP32[$309 >> 2] | 0) == ($$0$i$i$i$i$i$i34$i | 0)) {
         $$01$i$i$i$i$i$i$i = $309;
         break;
        } else $$0$i$i$i$i$i$i34$i = $309;
       }
      } else {
       $$0$i$i$i$i$i$i$i$i36 = $304;
       while (1) {
        $306 = HEAP32[$$0$i$i$i$i$i$i$i$i36 >> 2] | 0;
        if (!$306) {
         $$01$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i36;
         break;
        } else $$0$i$i$i$i$i$i$i$i36 = $306;
       }
      }
      if (($$01$i$i$i$i$i$i$i | 0) == ($202 | 0)) {
       label = 159;
       break L202;
      } else $$idx$val$i15$i$i$i$i = $$01$i$i$i$i$i$i$i;
     }
     $492 = ___cxa_find_matching_catch() | 0;
     $493 = tempRet0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$258 >> 2] | 0);
     $$0$i$i = $493;
     $$01$i$i = $492;
    } while (0);
    if ((label | 0) == 159) {
     HEAP32[$255 >> 2] = 40592;
     $313 = $255 + 8 | 0;
     $314 = $255 + 12 | 0;
     HEAP32[$314 >> 2] = 0;
     $315 = $255 + 16 | 0;
     HEAP32[$315 >> 2] = 0;
     HEAP32[$313 >> 2] = $314;
     $$idx$val$i$i$i$i$i = HEAP32[$1 >> 2] | 0;
     L252 : do if (($$idx$val$i$i$i$i$i | 0) == ($133 | 0)) label = 190; else {
      $$idx$val$i15$i$i$i$i$i = $$idx$val$i$i$i$i$i;
      while (1) {
       __THREW__ = 0;
       $317 = invoke_ii(67, 24) | 0;
       $318 = __THREW__;
       __THREW__ = 0;
       if ($318 & 1) break;
       $322 = $$idx$val$i15$i$i$i$i$i + 16 | 0;
       $324 = HEAP32[$322 >> 2] | 0;
       $327 = HEAP32[$322 + 4 >> 2] | 0;
       $328 = $317 + 16 | 0;
       HEAP32[$328 >> 2] = $324;
       HEAP32[$328 + 4 >> 2] = $327;
       $332 = $324;
       $$pre$i$i$i$i$i$i$i$i$i = HEAP32[$314 >> 2] | 0;
       do if ((HEAP32[$313 >> 2] | 0) == ($314 | 0)) {
        $345 = $314;
        label = 167;
       } else {
        $334 = ($$pre$i$i$i$i$i$i$i$i$i | 0) == 0;
        if ($334) {
         $$0$i$i$i$i$i$i$i$i$i3$i$i = $314;
         while (1) {
          $339 = HEAP32[$$0$i$i$i$i$i$i$i$i$i3$i$i + 8 >> 2] | 0;
          if ((HEAP32[$339 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i3$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i3$i$i = $339; else {
           $$01$i$i$i$i$i$i$i$i$i$i$i = $339;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
         while (1) {
          $336 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
          if (!$336) {
           $$01$i$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i$i$i$i = $336;
         }
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $332 >>> 0) {
         $345 = $$01$i$i$i$i$i$i$i$i$i$i$i;
         label = 167;
        } else {
         if ($334) {
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $314;
          $$0$i$i$i$i1$i$i$i$i$i = $314;
          $359 = $314;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
         while (1) {
          $$idx2$val$i23$i$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0;
          if ($332 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i$i$i$i >>> 0) {
           $349 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i$i >> 2] | 0;
           if (!$349) {
            label = 173;
            break;
           } else {
            $__nd$0$in$i21$i$i$i$i$i$i$i$i$i = $349;
            continue;
           }
          }
          if ($$idx2$val$i23$i$i$i$i$i$i$i$i$i >>> 0 >= $332 >>> 0) {
           label = 177;
           break;
          }
          $352 = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i + 4 | 0;
          $353 = HEAP32[$352 >> 2] | 0;
          if (!$353) {
           label = 176;
           break;
          } else $__nd$0$in$i21$i$i$i$i$i$i$i$i$i = $353;
         }
         if ((label | 0) == 173) {
          label = 0;
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
          $$0$i$i$i$i1$i$i$i$i$i = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
          $359 = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
          break;
         } else if ((label | 0) == 176) {
          label = 0;
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
          $$0$i$i$i$i1$i$i$i$i$i = $352;
          $359 = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
          break;
         } else if ((label | 0) == 177) {
          label = 0;
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
          $$0$i$i$i$i1$i$i$i$i$i = $__parent$i$i$i$i$i2$i$i$i;
          $359 = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 167) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i$i$i$i) {
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $314;
         $$0$i$i$i$i1$i$i$i$i$i = $314;
         $359 = $314;
         break;
        } else {
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $345;
         $$0$i$i$i$i1$i$i$i$i$i = $345 + 4 | 0;
         $359 = $345;
         break;
        }
       } while (0);
       $355 = HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] | 0;
       if (!$355) {
        HEAP32[$317 >> 2] = 0;
        HEAP32[$317 + 4 >> 2] = 0;
        HEAP32[$317 + 8 >> 2] = $359;
        HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] = $317;
        $361 = HEAP32[HEAP32[$313 >> 2] >> 2] | 0;
        if (!$361) $364 = $317; else {
         HEAP32[$313 >> 2] = $361;
         $364 = HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$314 >> 2] | 0, $364);
        HEAP32[$315 >> 2] = (HEAP32[$315 >> 2] | 0) + 1;
       } else if (!(($355 | 0) == ($317 | 0) | ($317 | 0) == 0)) __ZdlPv($317);
       $370 = HEAP32[$$idx$val$i15$i$i$i$i$i + 4 >> 2] | 0;
       if (!$370) {
        $$0$i$i$i$i$i$i4$i$i = $$idx$val$i15$i$i$i$i$i;
        while (1) {
         $375 = HEAP32[$$0$i$i$i$i$i$i4$i$i + 8 >> 2] | 0;
         if ((HEAP32[$375 >> 2] | 0) == ($$0$i$i$i$i$i$i4$i$i | 0)) {
          $$01$i$i$i$i$i$i$i$i39 = $375;
          break;
         } else $$0$i$i$i$i$i$i4$i$i = $375;
        }
       } else {
        $$0$i$i$i$i$i$i$i$i35$i = $370;
        while (1) {
         $372 = HEAP32[$$0$i$i$i$i$i$i$i$i35$i >> 2] | 0;
         if (!$372) {
          $$01$i$i$i$i$i$i$i$i39 = $$0$i$i$i$i$i$i$i$i35$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i35$i = $372;
        }
       }
       if (($$01$i$i$i$i$i$i$i$i39 | 0) == ($133 | 0)) {
        label = 190;
        break L252;
       } else $$idx$val$i15$i$i$i$i$i = $$01$i$i$i$i$i$i$i$i39;
      }
      $434 = ___cxa_find_matching_catch() | 0;
      $435 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($313, HEAP32[$314 >> 2] | 0);
      $$0$i$i$i = $435;
      $$01$i$i$i = $434;
     } while (0);
     L300 : do if ((label | 0) == 190) {
      $379 = $255 + 20 | 0;
      $380 = $255 + 24 | 0;
      HEAP32[$380 >> 2] = 0;
      $381 = $255 + 28 | 0;
      HEAP32[$381 >> 2] = 0;
      HEAP32[$379 >> 2] = $380;
      $$idx$val$i$i4$i$i$i = HEAP32[$0 >> 2] | 0;
      L302 : do if (($$idx$val$i$i4$i$i$i | 0) != ($260 | 0)) {
       $$idx$val$i15$i$i7$i$i$i = $$idx$val$i$i4$i$i$i;
       while (1) {
        __THREW__ = 0;
        $383 = invoke_ii(67, 28) | 0;
        $384 = __THREW__;
        __THREW__ = 0;
        if ($384 & 1) break;
        $386 = $$idx$val$i15$i$i7$i$i$i + 16 | 0;
        $387 = $383 + 16 | 0;
        HEAP32[$387 + 0 >> 2] = HEAP32[$386 + 0 >> 2];
        HEAP32[$387 + 4 >> 2] = HEAP32[$386 + 4 >> 2];
        HEAP32[$387 + 8 >> 2] = HEAP32[$386 + 8 >> 2];
        $$pre$i$i$i$i$i$i9$i$i$i = HEAP32[$380 >> 2] | 0;
        do if ((HEAP32[$379 >> 2] | 0) == ($380 | 0)) {
         $400 = $380;
         label = 198;
        } else {
         $389 = ($$pre$i$i$i$i$i$i9$i$i$i | 0) == 0;
         if ($389) {
          $$0$i$i$i$i$i$i$i$i13$i$i$i = $380;
          while (1) {
           $394 = HEAP32[$$0$i$i$i$i$i$i$i$i13$i$i$i + 8 >> 2] | 0;
           if ((HEAP32[$394 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i13$i$i$i = $394; else {
            $$01$i$i$i$i$i$i$i$i15$i$i$i = $394;
            break;
           }
          }
         } else {
          $$0$i$i$i$i$i$i$i$i$i11$i$i$i = $$pre$i$i$i$i$i$i9$i$i$i;
          while (1) {
           $391 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11$i$i$i + 4 >> 2] | 0;
           if (!$391) {
            $$01$i$i$i$i$i$i$i$i15$i$i$i = $$0$i$i$i$i$i$i$i$i$i11$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i11$i$i$i = $391;
          }
         }
         $__v$idx14$val$i$i$i$i$i$i$i$i$i = HEAP32[$387 >> 2] | 0;
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i$i$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
          $400 = $$01$i$i$i$i$i$i$i$i15$i$i$i;
          label = 198;
         } else {
          if ($389) {
           HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $380;
           $$0$i$i$i$i1$i$i23$i$i$i = $380;
           $414 = $380;
           break;
          } else $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i = $$pre$i$i$i$i$i$i9$i$i$i;
          while (1) {
           $$idx2$val$i23$i$i$i$i$i$i21$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i19$i$i$i + 16 >> 2] | 0;
           if ($__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0 < $$idx2$val$i23$i$i$i$i$i$i21$i$i$i >>> 0) {
            $404 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i19$i$i$i >> 2] | 0;
            if (!$404) {
             label = 204;
             break;
            } else {
             $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i = $404;
             continue;
            }
           }
           if ($$idx2$val$i23$i$i$i$i$i$i21$i$i$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
            label = 208;
            break;
           }
           $407 = $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i + 4 | 0;
           $408 = HEAP32[$407 >> 2] | 0;
           if (!$408) {
            label = 207;
            break;
           } else $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i = $408;
          }
          if ((label | 0) == 204) {
           label = 0;
           HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i;
           $$0$i$i$i$i1$i$i23$i$i$i = $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i;
           $414 = $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i;
           break;
          } else if ((label | 0) == 207) {
           label = 0;
           HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i;
           $$0$i$i$i$i1$i$i23$i$i$i = $407;
           $414 = $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i;
           break;
          } else if ((label | 0) == 208) {
           label = 0;
           HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i;
           $$0$i$i$i$i1$i$i23$i$i$i = $__parent$i$i$i$i$i2$i$i$i;
           $414 = $__nd$0$in$i21$i$i$i$i$i$i19$i$i$i;
           break;
          }
         }
        } while (0);
        do if ((label | 0) == 198) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i9$i$i$i) {
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $380;
          $$0$i$i$i$i1$i$i23$i$i$i = $380;
          $414 = $380;
          break;
         } else {
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $400;
          $$0$i$i$i$i1$i$i23$i$i$i = $400 + 4 | 0;
          $414 = $400;
          break;
         }
        } while (0);
        $410 = HEAP32[$$0$i$i$i$i1$i$i23$i$i$i >> 2] | 0;
        if (!$410) {
         HEAP32[$383 >> 2] = 0;
         HEAP32[$383 + 4 >> 2] = 0;
         HEAP32[$383 + 8 >> 2] = $414;
         HEAP32[$$0$i$i$i$i1$i$i23$i$i$i >> 2] = $383;
         $416 = HEAP32[HEAP32[$379 >> 2] >> 2] | 0;
         if (!$416) $419 = $383; else {
          HEAP32[$379 >> 2] = $416;
          $419 = HEAP32[$$0$i$i$i$i1$i$i23$i$i$i >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$380 >> 2] | 0, $419);
         HEAP32[$381 >> 2] = (HEAP32[$381 >> 2] | 0) + 1;
        } else if (!(($410 | 0) == ($383 | 0) | ($383 | 0) == 0)) __ZdlPv($383);
        $425 = HEAP32[$$idx$val$i15$i$i7$i$i$i + 4 >> 2] | 0;
        if (!$425) {
         $$0$i$i$i$i$i30$i$i$i = $$idx$val$i15$i$i7$i$i$i;
         while (1) {
          $430 = HEAP32[$$0$i$i$i$i$i30$i$i$i + 8 >> 2] | 0;
          if ((HEAP32[$430 >> 2] | 0) == ($$0$i$i$i$i$i30$i$i$i | 0)) {
           $$01$i$i$i$i$i32$i$i$i = $430;
           break;
          } else $$0$i$i$i$i$i30$i$i$i = $430;
         }
        } else {
         $$0$i$i$i$i$i$i28$i$i$i = $425;
         while (1) {
          $427 = HEAP32[$$0$i$i$i$i$i$i28$i$i$i >> 2] | 0;
          if (!$427) {
           $$01$i$i$i$i$i32$i$i$i = $$0$i$i$i$i$i$i28$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i28$i$i$i = $427;
         }
        }
        if (($$01$i$i$i$i$i32$i$i$i | 0) == ($260 | 0)) break L302; else $$idx$val$i15$i$i7$i$i$i = $$01$i$i$i$i$i32$i$i$i;
       }
       $437 = ___cxa_find_matching_catch() | 0;
       $438 = tempRet0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($379, HEAP32[$380 >> 2] | 0);
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($313, HEAP32[$314 >> 2] | 0);
       $$0$i$i$i = $438;
       $$01$i$i$i = $437;
       break L300;
      } while (0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$258 >> 2] | 0);
      $442 = $this + 20 | 0;
      $443 = $this + 24 | 0;
      $444 = HEAP32[$443 >> 2] | 0;
      $445 = $this + 28 | 0;
      $446 = HEAP32[$445 >> 2] | 0;
      if ($444 >>> 0 < $446 >>> 0) {
       if (!$444) $450 = 0; else {
        HEAP32[$444 >> 2] = $255;
        $450 = HEAP32[$443 >> 2] | 0;
       }
       $449 = $450 + 4 | 0;
       HEAP32[$443 >> 2] = $449;
       $$idx$pre$phi$i$iZZ2D = $442;
       $$idx2$val$i$i = $449;
      } else {
       $this$idx2$val$i$i$i$i = HEAP32[$442 >> 2] | 0;
       $455 = ($444 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
       if ($455 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(181, $442 | 0);
        $457 = __THREW__;
        __THREW__ = 0;
        if ($457 & 1) {
         label = 259;
         break L200;
        }
        $$idx1$val$i$i$i$i$i$i = HEAP32[$445 >> 2] | 0;
        $this$idx$val$i$i$i$i = HEAP32[$442 >> 2] | 0;
       } else {
        $$idx1$val$i$i$i$i$i$i = $446;
        $this$idx$val$i$i$i$i = $this$idx2$val$i$i$i$i;
       }
       $460 = $this$idx$val$i$i$i$i;
       $461 = $$idx1$val$i$i$i$i$i$i - $460 | 0;
       if ($461 >> 2 >>> 0 < 536870911) {
        $467 = $461 >> 1;
        $469 = $467 >>> 0 < $455 >>> 0 ? $455 : $467;
        $472 = (HEAP32[$443 >> 2] | 0) - $460 >> 2;
        if (!$469) {
         $$0$i8$i$i$i$i = 0;
         $479 = 0;
         $480 = $472;
        } else {
         $$0$i7$i$i$i$i = $469;
         $577 = $472;
         label = 233;
        }
       } else {
        $$0$i7$i$i$i$i = 1073741823;
        $577 = (HEAP32[$443 >> 2] | 0) - $460 >> 2;
        label = 233;
       }
       if ((label | 0) == 233) {
        __THREW__ = 0;
        $475 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
        $476 = __THREW__;
        __THREW__ = 0;
        if ($476 & 1) {
         label = 259;
         break L200;
        }
        $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
        $479 = $475;
        $480 = $577;
       }
       $478 = $479 + ($480 << 2) | 0;
       if ($478) HEAP32[$478 >> 2] = $255;
       $483 = $479 + ($480 + 1 << 2) | 0;
       $484 = HEAP32[$442 >> 2] | 0;
       $488 = (HEAP32[$443 >> 2] | 0) - $484 | 0;
       $490 = $479 + ($480 - ($488 >> 2) << 2) | 0;
       _memcpy($490 | 0, $484 | 0, $488 | 0) | 0;
       HEAP32[$442 >> 2] = $490;
       HEAP32[$443 >> 2] = $483;
       HEAP32[$445 >> 2] = $479 + ($$0$i8$i$i$i$i << 2);
       if (!$484) {
        $$idx$pre$phi$i$iZZ2D = $442;
        $$idx2$val$i$i = $483;
       } else {
        __ZdlPv($484);
        $$idx$pre$phi$i$iZZ2D = $442;
        $$idx2$val$i$i = HEAP32[$443 >> 2] | 0;
       }
      }
      $496 = $this + 16 | 0;
      HEAP8[$255 + 4 >> 0] = HEAP8[$496 >> 0] | 0;
      $503 = $this + 48 | 0;
      HEAP32[$503 >> 2] = $$idx2$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$200 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$131 >> 2] | 0);
      $506 = HEAP32[$503 >> 2] | 0;
      if ($506 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
       $567 = $agg$result + 8 | 0;
       HEAP32[$567 >> 2] = $255;
       $568 = HEAP32[$75 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, $568);
       $569 = HEAP32[$5 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $569);
       STACKTOP = sp;
       return;
      }
      $512 = $this + 44 | 0;
      if (!(+($506 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$512 >> 2] | 0) >>> 0))) {
       $567 = $agg$result + 8 | 0;
       HEAP32[$567 >> 2] = $255;
       $568 = HEAP32[$75 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, $568);
       $569 = HEAP32[$5 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $569);
       STACKTOP = sp;
       return;
      }
      __THREW__ = 0;
      invoke_vii(61, $this | 0, $255 | 0);
      $517 = __THREW__;
      __THREW__ = 0;
      do if (!($517 & 1)) {
       __THREW__ = 0;
       invoke_vii(62, $this + 72 | 0, $this | 0);
       $520 = __THREW__;
       __THREW__ = 0;
       if (!($520 & 1)) {
        if (HEAP32[$this + 56 >> 2] & 16) {
         __THREW__ = 0;
         invoke_vii(61, $this | 0, HEAP32[$this + 64 >> 2] | 0);
         $528 = __THREW__;
         __THREW__ = 0;
         if ($528 & 1) break;
        }
        $531 = (HEAP8[$496 >> 0] | 0) + 1 << 24 >> 24;
        HEAP8[$496 >> 0] = $531;
        $$idx6$i$i = $this + 20 | 0;
        $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
        $$idx7$val12$i$i = HEAP32[$443 >> 2] | 0;
        L385 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
         $$idx6$val14$i$i = $$idx6$val11$i$i;
         $$idx7$val18$i$i = $$idx7$val12$i$i;
         $538 = $531;
         $i$013$i$i = 0;
         while (1) {
          $534 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
          if ((HEAP8[$534 + 4 >> 0] | 0) == $538 << 24 >> 24) {
           $$idx6$val$i$i = $$idx6$val14$i$i;
           $$idx7$val$i$i = $$idx7$val18$i$i;
           $i$1$i$i = $i$013$i$i;
          } else {
           if (!$534) {
            $$idx4$val$i$i = $$idx6$val14$i$i;
            $$idx5$val$i$i = $$idx7$val18$i$i;
           } else {
            FUNCTION_TABLE_vi[HEAP32[(HEAP32[$534 >> 2] | 0) + 4 >> 2] & 255]($534);
            $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
            $$idx5$val$i$i = HEAP32[$443 >> 2] | 0;
           }
           $547 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
           if (($i$013$i$i | 0) == ($547 | 0)) {
            $$idx6$val$pre$i$i = $$idx4$val$i$i;
            $552 = $$idx5$val$i$i;
           } else {
            HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($547 << 2) >> 2];
            $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
            $552 = HEAP32[$443 >> 2] | 0;
           }
           $scevgep4$i$i$i$i$i = $552 + -4 | 0;
           HEAP32[$443 >> 2] = $scevgep4$i$i$i$i$i;
           $$idx6$val$i$i = $$idx6$val$pre$i$i;
           $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
           $i$1$i$i = $i$013$i$i + -1 | 0;
          }
          $554 = $i$1$i$i + 1 | 0;
          $558 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
          if ($554 >>> 0 >= $558 >>> 0) {
           $$lcssa$i$i = $558;
           break L385;
          }
          $$idx6$val14$i$i = $$idx6$val$i$i;
          $$idx7$val18$i$i = $$idx7$val$i$i;
          $538 = HEAP8[$496 >> 0] | 0;
          $i$013$i$i = $554;
         }
        } while (0);
        HEAP32[$503 >> 2] = $$lcssa$i$i;
        HEAP32[$512 >> 2] = $$lcssa$i$i;
        $567 = $agg$result + 8 | 0;
        HEAP32[$567 >> 2] = $255;
        $568 = HEAP32[$75 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, $568);
        $569 = HEAP32[$5 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $569);
        STACKTOP = sp;
        return;
       }
      } while (0);
      $573 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body43$index8Z2D = tempRet0;
      $eh$lpad$body43$indexZ2D = $573;
      break L148;
     } while (0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$258 >> 2] | 0);
     $$0$i$i = $$0$i$i$i;
     $$01$i$i = $$01$i$i$i;
    }
    __ZdlPv($255);
    $eh$lpad$body39$i$index2Z2D = $$0$i$i;
    $eh$lpad$body39$i$indexZ2D = $$01$i$i;
   } while (0);
   if ((label | 0) == 259) {
    $563 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body39$i$index2Z2D = tempRet0;
    $eh$lpad$body39$i$indexZ2D = $563;
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$200 >> 2] | 0);
   $$0$i = $eh$lpad$body39$i$index2Z2D;
   $$01$i = $eh$lpad$body39$i$indexZ2D;
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$131 >> 2] | 0);
  $eh$lpad$body43$index8Z2D = $$0$i;
  $eh$lpad$body43$indexZ2D = $$01$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, HEAP32[$75 >> 2] | 0);
 $$0 = $eh$lpad$body43$index8Z2D;
 $$01 = $eh$lpad$body43$indexZ2D;
 $576 = HEAP32[$5 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $576);
 ___resumeException($$01 | 0);
}

function __GLOBAL__I_a() {
 var $$0$i$i = 0, $$0$i$i22 = 0, $$01$i$i = 0, $$01$i$i21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $106 = 0, $109 = 0, $11 = 0, $113 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $127 = 0, $13 = 0, $130 = 0, $134 = 0, $136 = 0, $137 = 0, $139 = 0, $14 = 0, $140 = 0, $142 = 0, $144 = 0, $148 = 0, $15 = 0, $151 = 0, $154 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $166 = 0, $168 = 0, $169 = 0, $17 = 0, $171 = 0, $172 = 0, $174 = 0, $176 = 0, $18 = 0, $180 = 0, $183 = 0, $187 = 0, $189 = 0, $190 = 0, $192 = 0, $193 = 0, $195 = 0, $197 = 0, $2 = 0, $20 = 0, $201 = 0, $204 = 0, $208 = 0, $21 = 0, $210 = 0, $211 = 0, $213 = 0, $214 = 0, $216 = 0, $218 = 0, $222 = 0, $225 = 0, $229 = 0, $23 = 0, $231 = 0, $232 = 0, $234 = 0, $235 = 0, $237 = 0, $239 = 0, $24 = 0, $243 = 0, $246 = 0, $250 = 0, $252 = 0, $253 = 0, $255 = 0, $256 = 0, $258 = 0, $26 = 0, $260 = 0, $264 = 0, $267 = 0, $27 = 0, $271 = 0, $273 = 0, $274 = 0, $276 = 0, $277 = 0, $279 = 0, $281 = 0, $285 = 0, $288 = 0, $29 = 0, $292 = 0, $294 = 0, $295 = 0, $297 = 0, $298 = 0, $3 = 0, $30 = 0, $300 = 0, $302 = 0, $306 = 0, $309 = 0, $313 = 0, $315 = 0, $316 = 0, $318 = 0, $319 = 0, $32 = 0, $321 = 0, $323 = 0, $327 = 0, $33 = 0, $330 = 0, $334 = 0, $336 = 0, $337 = 0, $339 = 0, $340 = 0, $342 = 0, $344 = 0, $348 = 0, $35 = 0, $351 = 0, $355 = 0, $357 = 0, $358 = 0, $36 = 0, $360 = 0, $361 = 0, $363 = 0, $365 = 0, $369 = 0, $372 = 0, $376 = 0, $378 = 0, $379 = 0, $38 = 0, $381 = 0, $382 = 0, $384 = 0, $386 = 0, $39 = 0, $390 = 0, $393 = 0, $397 = 0, $399 = 0, $4 = 0, $400 = 0, $402 = 0, $403 = 0, $405 = 0, $407 = 0, $41 = 0, $411 = 0, $414 = 0, $418 = 0, $42 = 0, $420 = 0, $421 = 0, $423 = 0, $424 = 0, $426 = 0, $428 = 0, $432 = 0, $435 = 0, $439 = 0, $44 = 0, $441 = 0, $442 = 0, $444 = 0, $445 = 0, $447 = 0, $449 = 0, $45 = 0, $453 = 0, $456 = 0, $460 = 0, $462 = 0, $463 = 0, $465 = 0, $466 = 0, $468 = 0, $47 = 0, $470 = 0, $474 = 0, $477 = 0, $48 = 0, $481 = 0, $483 = 0, $484 = 0, $486 = 0, $487 = 0, $489 = 0, $491 = 0, $495 = 0, $498 = 0, $5 = 0, $50 = 0, $502 = 0, $504 = 0, $505 = 0, $507 = 0, $508 = 0, $51 = 0, $510 = 0, $512 = 0, $516 = 0, $519 = 0, $522 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $74 = 0, $76 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $85 = 0, $88 = 0, $9 = 0, $92 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $__parent$i$i$i4 = 0, $__parent$i107$i$i = 0, $__parent$i11$i$i2 = 0, $__parent$i115$i$i = 0, $__parent$i123$i$i = 0, $__parent$i19$i$i1 = 0, $__parent$i27$i$i = 0, $__parent$i3$i$i3 = 0, $__parent$i35$i$i = 0, $__parent$i43$i$i = 0, $__parent$i51$i$i = 0, $__parent$i59$i$i = 0, $__parent$i67$i$i = 0, $__parent$i75$i$i = 0, $__parent$i83$i$i = 0, $__parent$i91$i$i = 0, $__parent$i99$i$i = 0, $__r$0$i$i$i = 0, $__r$0$i$i$i8 = 0, $__r$0$i102$i$i = 0, $__r$0$i110$i$i = 0, $__r$0$i118$i$i = 0, $__r$0$i126$i$i = 0, $__r$0$i14$i$i = 0, $__r$0$i14$i$i16 = 0, $__r$0$i22$i$i = 0, $__r$0$i22$i$i20 = 0, $__r$0$i30$i$i = 0, $__r$0$i38$i$i = 0, $__r$0$i46$i$i = 0, $__r$0$i54$i$i = 0, $__r$0$i6$i$i = 0, $__r$0$i6$i$i12 = 0, $__r$0$i62$i$i = 0, $__r$0$i70$i$i = 0, $__r$0$i78$i$i = 0, $__r$0$i86$i$i = 0, $__r$0$i94$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__parent$i123$i$i = sp + 300 | 0;
 $__parent$i115$i$i = sp + 296 | 0;
 $__parent$i107$i$i = sp + 292 | 0;
 $__parent$i99$i$i = sp + 288 | 0;
 $__parent$i91$i$i = sp + 276 | 0;
 $__parent$i83$i$i = sp + 264 | 0;
 $__parent$i75$i$i = sp + 252 | 0;
 $__parent$i67$i$i = sp + 240 | 0;
 $__parent$i59$i$i = sp + 236 | 0;
 $__parent$i51$i$i = sp + 232 | 0;
 $__parent$i43$i$i = sp + 228 | 0;
 $__parent$i35$i$i = sp + 224 | 0;
 $__parent$i27$i$i = sp + 220 | 0;
 $__parent$i19$i$i1 = sp + 216 | 0;
 $__parent$i11$i$i2 = sp + 212 | 0;
 $__parent$i3$i$i3 = sp + 208 | 0;
 $__parent$i$i$i4 = sp + 204 | 0;
 $0 = sp + 192 | 0;
 $1 = sp + 180 | 0;
 $2 = sp + 168 | 0;
 $3 = sp + 156 | 0;
 $4 = sp + 144 | 0;
 $5 = sp + 132 | 0;
 $6 = sp + 120 | 0;
 $7 = sp + 108 | 0;
 $8 = sp + 96 | 0;
 $9 = sp + 84 | 0;
 $10 = sp + 72 | 0;
 $11 = sp + 60 | 0;
 $12 = sp + 48 | 0;
 $13 = sp + 36 | 0;
 $14 = sp + 24 | 0;
 $15 = sp + 12 | 0;
 $16 = sp;
 HEAP32[313] = 0;
 HEAP32[314] = 0;
 HEAP32[312] = 1252;
 HEAP32[$__parent$i123$i$i >> 2] = 0;
 __THREW__ = 0;
 $17 = invoke_iii(26, 1248, $__parent$i123$i$i | 0) | 0;
 $18 = __THREW__;
 __THREW__ = 0;
 if ($18 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$17 >> 2] = 5;
 HEAP32[$__parent$i115$i$i >> 2] = 1;
 __THREW__ = 0;
 $20 = invoke_iii(26, 1248, $__parent$i115$i$i | 0) | 0;
 $21 = __THREW__;
 __THREW__ = 0;
 if ($21 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$20 >> 2] = 5;
 HEAP32[$__parent$i107$i$i >> 2] = 2;
 __THREW__ = 0;
 $23 = invoke_iii(26, 1248, $__parent$i107$i$i | 0) | 0;
 $24 = __THREW__;
 __THREW__ = 0;
 if ($24 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$23 >> 2] = 6;
 HEAP32[$__parent$i99$i$i >> 2] = 3;
 __THREW__ = 0;
 $26 = invoke_iii(26, 1248, $__parent$i99$i$i | 0) | 0;
 $27 = __THREW__;
 __THREW__ = 0;
 if ($27 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$26 >> 2] = 6;
 HEAP32[$__parent$i91$i$i >> 2] = 4;
 __THREW__ = 0;
 $29 = invoke_iii(26, 1248, $__parent$i91$i$i | 0) | 0;
 $30 = __THREW__;
 __THREW__ = 0;
 if ($30 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$29 >> 2] = 7;
 HEAP32[$__parent$i83$i$i >> 2] = 5;
 __THREW__ = 0;
 $32 = invoke_iii(26, 1248, $__parent$i83$i$i | 0) | 0;
 $33 = __THREW__;
 __THREW__ = 0;
 if ($33 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$32 >> 2] = 7;
 HEAP32[$__parent$i75$i$i >> 2] = 6;
 __THREW__ = 0;
 $35 = invoke_iii(26, 1248, $__parent$i75$i$i | 0) | 0;
 $36 = __THREW__;
 __THREW__ = 0;
 if ($36 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$35 >> 2] = 8;
 HEAP32[$__parent$i67$i$i >> 2] = 7;
 __THREW__ = 0;
 $38 = invoke_iii(26, 1248, $__parent$i67$i$i | 0) | 0;
 $39 = __THREW__;
 __THREW__ = 0;
 if ($39 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$38 >> 2] = 8;
 HEAP32[$__parent$i59$i$i >> 2] = 8;
 __THREW__ = 0;
 $41 = invoke_iii(26, 1248, $__parent$i59$i$i | 0) | 0;
 $42 = __THREW__;
 __THREW__ = 0;
 if ($42 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$41 >> 2] = 8;
 HEAP32[$__parent$i51$i$i >> 2] = 9;
 __THREW__ = 0;
 $44 = invoke_iii(26, 1248, $__parent$i51$i$i | 0) | 0;
 $45 = __THREW__;
 __THREW__ = 0;
 if ($45 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$44 >> 2] = 8;
 HEAP32[$__parent$i43$i$i >> 2] = 10;
 __THREW__ = 0;
 $47 = invoke_iii(26, 1248, $__parent$i43$i$i | 0) | 0;
 $48 = __THREW__;
 __THREW__ = 0;
 if ($48 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$47 >> 2] = 9;
 HEAP32[$__parent$i35$i$i >> 2] = 11;
 __THREW__ = 0;
 $50 = invoke_iii(26, 1248, $__parent$i35$i$i | 0) | 0;
 $51 = __THREW__;
 __THREW__ = 0;
 if ($51 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$50 >> 2] = 9;
 HEAP32[$__parent$i27$i$i >> 2] = 12;
 __THREW__ = 0;
 $53 = invoke_iii(26, 1248, $__parent$i27$i$i | 0) | 0;
 $54 = __THREW__;
 __THREW__ = 0;
 if ($54 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$53 >> 2] = 10;
 HEAP32[$__parent$i19$i$i1 >> 2] = 13;
 __THREW__ = 0;
 $56 = invoke_iii(26, 1248, $__parent$i19$i$i1 | 0) | 0;
 $57 = __THREW__;
 __THREW__ = 0;
 if ($57 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$56 >> 2] = 11;
 HEAP32[$__parent$i11$i$i2 >> 2] = 14;
 __THREW__ = 0;
 $59 = invoke_iii(26, 1248, $__parent$i11$i$i2 | 0) | 0;
 $60 = __THREW__;
 __THREW__ = 0;
 if ($60 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$59 >> 2] = 12;
 HEAP32[$__parent$i3$i$i3 >> 2] = 15;
 __THREW__ = 0;
 $62 = invoke_iii(26, 1248, $__parent$i3$i$i3 | 0) | 0;
 $63 = __THREW__;
 __THREW__ = 0;
 if ($63 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$62 >> 2] = 13;
 HEAP32[$__parent$i$i$i4 >> 2] = 16;
 __THREW__ = 0;
 $65 = invoke_iii(26, 1248, $__parent$i$i$i4 | 0) | 0;
 $66 = __THREW__;
 __THREW__ = 0;
 if ($66 & 1) {
  $68 = ___cxa_find_matching_catch() | 0;
  $69 = tempRet0;
  $70 = HEAP32[313] | 0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(1248, $70);
  ___resumeException($68 | 0);
 }
 HEAP32[$65 >> 2] = 14;
 ___cxa_atexit(182, 1248, ___dso_handle | 0) | 0;
 HEAP32[317] = 0;
 HEAP32[318] = 0;
 HEAP32[316] = 1268;
 __THREW__ = 0;
 invoke_viii(3, $__parent$i91$i$i | 0, 35176, 1);
 $71 = __THREW__;
 __THREW__ = 0;
 do if (!($71 & 1)) {
  $73 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1264, $__parent$i99$i$i, $__parent$i91$i$i) | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  if (!$74) {
   __THREW__ = 0;
   $76 = invoke_ii(67, 32) | 0;
   $77 = __THREW__;
   __THREW__ = 0;
   if ($77 & 1) {
    $156 = ___cxa_find_matching_catch() | 0;
    $157 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__parent$i91$i$i);
    $$0$i$i = $157;
    $$01$i$i = $156;
    $164 = HEAP32[317] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1264, $164);
    ___resumeException($$01$i$i | 0);
   }
   $79 = $76 + 16 | 0;
   HEAP32[$79 + 0 >> 2] = HEAP32[$__parent$i91$i$i + 0 >> 2];
   HEAP32[$79 + 4 >> 2] = HEAP32[$__parent$i91$i$i + 4 >> 2];
   HEAP32[$79 + 8 >> 2] = HEAP32[$__parent$i91$i$i + 8 >> 2];
   HEAP32[$__parent$i91$i$i + 0 >> 2] = 0;
   HEAP32[$__parent$i91$i$i + 4 >> 2] = 0;
   HEAP32[$__parent$i91$i$i + 8 >> 2] = 0;
   HEAP32[$76 + 28 >> 2] = 0;
   $81 = HEAP32[$__parent$i99$i$i >> 2] | 0;
   HEAP32[$76 >> 2] = 0;
   HEAP32[$76 + 4 >> 2] = 0;
   HEAP32[$76 + 8 >> 2] = $81;
   HEAP32[$73 >> 2] = $76;
   $85 = HEAP32[HEAP32[316] >> 2] | 0;
   if (!$85) $88 = $76; else {
    HEAP32[316] = $85;
    $88 = HEAP32[$73 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[317] | 0, $88);
   HEAP32[318] = (HEAP32[318] | 0) + 1;
   $__r$0$i$i$i = $76;
  } else $__r$0$i$i$i = $74;
  HEAP32[$__r$0$i$i$i + 28 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__parent$i91$i$i);
  __THREW__ = 0;
  invoke_viii(3, $__parent$i83$i$i | 0, 35168, 1);
  $92 = __THREW__;
  __THREW__ = 0;
  if ($92 & 1) break;
  $94 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1264, $__parent$i107$i$i, $__parent$i83$i$i) | 0;
  $95 = HEAP32[$94 >> 2] | 0;
  if (!$95) {
   __THREW__ = 0;
   $97 = invoke_ii(67, 32) | 0;
   $98 = __THREW__;
   __THREW__ = 0;
   if ($98 & 1) {
    $158 = ___cxa_find_matching_catch() | 0;
    $159 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__parent$i83$i$i);
    $$0$i$i = $159;
    $$01$i$i = $158;
    $164 = HEAP32[317] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1264, $164);
    ___resumeException($$01$i$i | 0);
   }
   $100 = $97 + 16 | 0;
   HEAP32[$100 + 0 >> 2] = HEAP32[$__parent$i83$i$i + 0 >> 2];
   HEAP32[$100 + 4 >> 2] = HEAP32[$__parent$i83$i$i + 4 >> 2];
   HEAP32[$100 + 8 >> 2] = HEAP32[$__parent$i83$i$i + 8 >> 2];
   HEAP32[$__parent$i83$i$i + 0 >> 2] = 0;
   HEAP32[$__parent$i83$i$i + 4 >> 2] = 0;
   HEAP32[$__parent$i83$i$i + 8 >> 2] = 0;
   HEAP32[$97 + 28 >> 2] = 0;
   $102 = HEAP32[$__parent$i107$i$i >> 2] | 0;
   HEAP32[$97 >> 2] = 0;
   HEAP32[$97 + 4 >> 2] = 0;
   HEAP32[$97 + 8 >> 2] = $102;
   HEAP32[$94 >> 2] = $97;
   $106 = HEAP32[HEAP32[316] >> 2] | 0;
   if (!$106) $109 = $97; else {
    HEAP32[316] = $106;
    $109 = HEAP32[$94 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[317] | 0, $109);
   HEAP32[318] = (HEAP32[318] | 0) + 1;
   $__r$0$i6$i$i = $97;
  } else $__r$0$i6$i$i = $95;
  HEAP32[$__r$0$i6$i$i + 28 >> 2] = 1;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__parent$i83$i$i);
  __THREW__ = 0;
  invoke_viii(3, $__parent$i75$i$i | 0, 35152, 1);
  $113 = __THREW__;
  __THREW__ = 0;
  if ($113 & 1) break;
  $115 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1264, $__parent$i115$i$i, $__parent$i75$i$i) | 0;
  $116 = HEAP32[$115 >> 2] | 0;
  if (!$116) {
   __THREW__ = 0;
   $118 = invoke_ii(67, 32) | 0;
   $119 = __THREW__;
   __THREW__ = 0;
   if ($119 & 1) {
    $160 = ___cxa_find_matching_catch() | 0;
    $161 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__parent$i75$i$i);
    $$0$i$i = $161;
    $$01$i$i = $160;
    $164 = HEAP32[317] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1264, $164);
    ___resumeException($$01$i$i | 0);
   }
   $121 = $118 + 16 | 0;
   HEAP32[$121 + 0 >> 2] = HEAP32[$__parent$i75$i$i + 0 >> 2];
   HEAP32[$121 + 4 >> 2] = HEAP32[$__parent$i75$i$i + 4 >> 2];
   HEAP32[$121 + 8 >> 2] = HEAP32[$__parent$i75$i$i + 8 >> 2];
   HEAP32[$__parent$i75$i$i + 0 >> 2] = 0;
   HEAP32[$__parent$i75$i$i + 4 >> 2] = 0;
   HEAP32[$__parent$i75$i$i + 8 >> 2] = 0;
   HEAP32[$118 + 28 >> 2] = 0;
   $123 = HEAP32[$__parent$i115$i$i >> 2] | 0;
   HEAP32[$118 >> 2] = 0;
   HEAP32[$118 + 4 >> 2] = 0;
   HEAP32[$118 + 8 >> 2] = $123;
   HEAP32[$115 >> 2] = $118;
   $127 = HEAP32[HEAP32[316] >> 2] | 0;
   if (!$127) $130 = $118; else {
    HEAP32[316] = $127;
    $130 = HEAP32[$115 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[317] | 0, $130);
   HEAP32[318] = (HEAP32[318] | 0) + 1;
   $__r$0$i14$i$i = $118;
  } else $__r$0$i14$i$i = $116;
  HEAP32[$__r$0$i14$i$i + 28 >> 2] = 2;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__parent$i75$i$i);
  __THREW__ = 0;
  invoke_viii(3, $__parent$i67$i$i | 0, 35160, 1);
  $134 = __THREW__;
  __THREW__ = 0;
  if ($134 & 1) break;
  $136 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1264, $__parent$i123$i$i, $__parent$i67$i$i) | 0;
  $137 = HEAP32[$136 >> 2] | 0;
  if (!$137) {
   __THREW__ = 0;
   $139 = invoke_ii(67, 32) | 0;
   $140 = __THREW__;
   __THREW__ = 0;
   if ($140 & 1) {
    $162 = ___cxa_find_matching_catch() | 0;
    $163 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__parent$i67$i$i);
    $$0$i$i = $163;
    $$01$i$i = $162;
    $164 = HEAP32[317] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1264, $164);
    ___resumeException($$01$i$i | 0);
   }
   $142 = $139 + 16 | 0;
   HEAP32[$142 + 0 >> 2] = HEAP32[$__parent$i67$i$i + 0 >> 2];
   HEAP32[$142 + 4 >> 2] = HEAP32[$__parent$i67$i$i + 4 >> 2];
   HEAP32[$142 + 8 >> 2] = HEAP32[$__parent$i67$i$i + 8 >> 2];
   HEAP32[$__parent$i67$i$i + 0 >> 2] = 0;
   HEAP32[$__parent$i67$i$i + 4 >> 2] = 0;
   HEAP32[$__parent$i67$i$i + 8 >> 2] = 0;
   HEAP32[$139 + 28 >> 2] = 0;
   $144 = HEAP32[$__parent$i123$i$i >> 2] | 0;
   HEAP32[$139 >> 2] = 0;
   HEAP32[$139 + 4 >> 2] = 0;
   HEAP32[$139 + 8 >> 2] = $144;
   HEAP32[$136 >> 2] = $139;
   $148 = HEAP32[HEAP32[316] >> 2] | 0;
   if (!$148) $151 = $139; else {
    HEAP32[316] = $148;
    $151 = HEAP32[$136 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[317] | 0, $151);
   HEAP32[318] = (HEAP32[318] | 0) + 1;
   $__r$0$i22$i$i = $139;
  } else $__r$0$i22$i$i = $137;
  HEAP32[$__r$0$i22$i$i + 28 >> 2] = 3;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__parent$i67$i$i);
  ___cxa_atexit(183, 1264, ___dso_handle | 0) | 0;
  HEAP32[321] = 0;
  HEAP32[322] = 0;
  HEAP32[320] = 1284;
  __THREW__ = 0;
  invoke_viii(3, $0 | 0, 35232, 1);
  $166 = __THREW__;
  __THREW__ = 0;
  do if (!($166 & 1)) {
   $168 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i$i$i4, $0) | 0;
   $169 = HEAP32[$168 >> 2] | 0;
   if (!$169) {
    __THREW__ = 0;
    $171 = invoke_ii(67, 32) | 0;
    $172 = __THREW__;
    __THREW__ = 0;
    if ($172 & 1) {
     $524 = ___cxa_find_matching_catch() | 0;
     $525 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     $$0$i$i22 = $525;
     $$01$i$i21 = $524;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $174 = $171 + 16 | 0;
    HEAP32[$174 + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    HEAP32[$174 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
    HEAP32[$174 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    HEAP32[$171 + 28 >> 2] = 0;
    $176 = HEAP32[$__parent$i$i$i4 >> 2] | 0;
    HEAP32[$171 >> 2] = 0;
    HEAP32[$171 + 4 >> 2] = 0;
    HEAP32[$171 + 8 >> 2] = $176;
    HEAP32[$168 >> 2] = $171;
    $180 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$180) $183 = $171; else {
     HEAP32[320] = $180;
     $183 = HEAP32[$168 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $183);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i$i$i8 = $171;
   } else $__r$0$i$i$i8 = $169;
   HEAP32[$__r$0$i$i$i8 + 28 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   __THREW__ = 0;
   invoke_viii(3, $1 | 0, 35240, 1);
   $187 = __THREW__;
   __THREW__ = 0;
   if ($187 & 1) break;
   $189 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i3$i$i3, $1) | 0;
   $190 = HEAP32[$189 >> 2] | 0;
   if (!$190) {
    __THREW__ = 0;
    $192 = invoke_ii(67, 32) | 0;
    $193 = __THREW__;
    __THREW__ = 0;
    if ($193 & 1) {
     $526 = ___cxa_find_matching_catch() | 0;
     $527 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
     $$0$i$i22 = $527;
     $$01$i$i21 = $526;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $195 = $192 + 16 | 0;
    HEAP32[$195 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
    HEAP32[$195 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
    HEAP32[$195 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
    HEAP32[$1 + 0 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    HEAP32[$192 + 28 >> 2] = 0;
    $197 = HEAP32[$__parent$i3$i$i3 >> 2] | 0;
    HEAP32[$192 >> 2] = 0;
    HEAP32[$192 + 4 >> 2] = 0;
    HEAP32[$192 + 8 >> 2] = $197;
    HEAP32[$189 >> 2] = $192;
    $201 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$201) $204 = $192; else {
     HEAP32[320] = $201;
     $204 = HEAP32[$189 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $204);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i6$i$i12 = $192;
   } else $__r$0$i6$i$i12 = $190;
   HEAP32[$__r$0$i6$i$i12 + 28 >> 2] = 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
   __THREW__ = 0;
   invoke_viii(3, $2 | 0, 35152, 1);
   $208 = __THREW__;
   __THREW__ = 0;
   if ($208 & 1) break;
   $210 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i11$i$i2, $2) | 0;
   $211 = HEAP32[$210 >> 2] | 0;
   if (!$211) {
    __THREW__ = 0;
    $213 = invoke_ii(67, 32) | 0;
    $214 = __THREW__;
    __THREW__ = 0;
    if ($214 & 1) {
     $528 = ___cxa_find_matching_catch() | 0;
     $529 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
     $$0$i$i22 = $529;
     $$01$i$i21 = $528;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $216 = $213 + 16 | 0;
    HEAP32[$216 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    HEAP32[$216 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
    HEAP32[$216 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
    HEAP32[$2 + 0 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    HEAP32[$213 + 28 >> 2] = 0;
    $218 = HEAP32[$__parent$i11$i$i2 >> 2] | 0;
    HEAP32[$213 >> 2] = 0;
    HEAP32[$213 + 4 >> 2] = 0;
    HEAP32[$213 + 8 >> 2] = $218;
    HEAP32[$210 >> 2] = $213;
    $222 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$222) $225 = $213; else {
     HEAP32[320] = $222;
     $225 = HEAP32[$210 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $225);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i14$i$i16 = $213;
   } else $__r$0$i14$i$i16 = $211;
   HEAP32[$__r$0$i14$i$i16 + 28 >> 2] = 2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
   __THREW__ = 0;
   invoke_viii(3, $3 | 0, 35160, 1);
   $229 = __THREW__;
   __THREW__ = 0;
   if ($229 & 1) break;
   $231 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i19$i$i1, $3) | 0;
   $232 = HEAP32[$231 >> 2] | 0;
   if (!$232) {
    __THREW__ = 0;
    $234 = invoke_ii(67, 32) | 0;
    $235 = __THREW__;
    __THREW__ = 0;
    if ($235 & 1) {
     $530 = ___cxa_find_matching_catch() | 0;
     $531 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
     $$0$i$i22 = $531;
     $$01$i$i21 = $530;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $237 = $234 + 16 | 0;
    HEAP32[$237 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
    HEAP32[$237 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$237 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    HEAP32[$3 + 0 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    HEAP32[$234 + 28 >> 2] = 0;
    $239 = HEAP32[$__parent$i19$i$i1 >> 2] | 0;
    HEAP32[$234 >> 2] = 0;
    HEAP32[$234 + 4 >> 2] = 0;
    HEAP32[$234 + 8 >> 2] = $239;
    HEAP32[$231 >> 2] = $234;
    $243 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$243) $246 = $234; else {
     HEAP32[320] = $243;
     $246 = HEAP32[$231 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $246);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i22$i$i20 = $234;
   } else $__r$0$i22$i$i20 = $232;
   HEAP32[$__r$0$i22$i$i20 + 28 >> 2] = 3;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
   __THREW__ = 0;
   invoke_viii(3, $4 | 0, 35248, 2);
   $250 = __THREW__;
   __THREW__ = 0;
   if ($250 & 1) break;
   $252 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i27$i$i, $4) | 0;
   $253 = HEAP32[$252 >> 2] | 0;
   if (!$253) {
    __THREW__ = 0;
    $255 = invoke_ii(67, 32) | 0;
    $256 = __THREW__;
    __THREW__ = 0;
    if ($256 & 1) {
     $532 = ___cxa_find_matching_catch() | 0;
     $533 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
     $$0$i$i22 = $533;
     $$01$i$i21 = $532;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $258 = $255 + 16 | 0;
    HEAP32[$258 + 0 >> 2] = HEAP32[$4 + 0 >> 2];
    HEAP32[$258 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$258 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    HEAP32[$4 + 0 >> 2] = 0;
    HEAP32[$4 + 4 >> 2] = 0;
    HEAP32[$4 + 8 >> 2] = 0;
    HEAP32[$255 + 28 >> 2] = 0;
    $260 = HEAP32[$__parent$i27$i$i >> 2] | 0;
    HEAP32[$255 >> 2] = 0;
    HEAP32[$255 + 4 >> 2] = 0;
    HEAP32[$255 + 8 >> 2] = $260;
    HEAP32[$252 >> 2] = $255;
    $264 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$264) $267 = $255; else {
     HEAP32[320] = $264;
     $267 = HEAP32[$252 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $267);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i30$i$i = $255;
   } else $__r$0$i30$i$i = $253;
   HEAP32[$__r$0$i30$i$i + 28 >> 2] = 4;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
   __THREW__ = 0;
   invoke_viii(3, $5 | 0, 35256, 2);
   $271 = __THREW__;
   __THREW__ = 0;
   if ($271 & 1) break;
   $273 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i35$i$i, $5) | 0;
   $274 = HEAP32[$273 >> 2] | 0;
   if (!$274) {
    __THREW__ = 0;
    $276 = invoke_ii(67, 32) | 0;
    $277 = __THREW__;
    __THREW__ = 0;
    if ($277 & 1) {
     $534 = ___cxa_find_matching_catch() | 0;
     $535 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
     $$0$i$i22 = $535;
     $$01$i$i21 = $534;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $279 = $276 + 16 | 0;
    HEAP32[$279 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
    HEAP32[$279 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$279 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    HEAP32[$5 + 0 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    HEAP32[$276 + 28 >> 2] = 0;
    $281 = HEAP32[$__parent$i35$i$i >> 2] | 0;
    HEAP32[$276 >> 2] = 0;
    HEAP32[$276 + 4 >> 2] = 0;
    HEAP32[$276 + 8 >> 2] = $281;
    HEAP32[$273 >> 2] = $276;
    $285 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$285) $288 = $276; else {
     HEAP32[320] = $285;
     $288 = HEAP32[$273 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $288);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i38$i$i = $276;
   } else $__r$0$i38$i$i = $274;
   HEAP32[$__r$0$i38$i$i + 28 >> 2] = 5;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
   __THREW__ = 0;
   invoke_viii(3, $6 | 0, 35264, 1);
   $292 = __THREW__;
   __THREW__ = 0;
   if ($292 & 1) break;
   $294 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i43$i$i, $6) | 0;
   $295 = HEAP32[$294 >> 2] | 0;
   if (!$295) {
    __THREW__ = 0;
    $297 = invoke_ii(67, 32) | 0;
    $298 = __THREW__;
    __THREW__ = 0;
    if ($298 & 1) {
     $536 = ___cxa_find_matching_catch() | 0;
     $537 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
     $$0$i$i22 = $537;
     $$01$i$i21 = $536;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $300 = $297 + 16 | 0;
    HEAP32[$300 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
    HEAP32[$300 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$300 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    HEAP32[$6 + 0 >> 2] = 0;
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = 0;
    HEAP32[$297 + 28 >> 2] = 0;
    $302 = HEAP32[$__parent$i43$i$i >> 2] | 0;
    HEAP32[$297 >> 2] = 0;
    HEAP32[$297 + 4 >> 2] = 0;
    HEAP32[$297 + 8 >> 2] = $302;
    HEAP32[$294 >> 2] = $297;
    $306 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$306) $309 = $297; else {
     HEAP32[320] = $306;
     $309 = HEAP32[$294 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $309);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i46$i$i = $297;
   } else $__r$0$i46$i$i = $295;
   HEAP32[$__r$0$i46$i$i + 28 >> 2] = 6;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
   __THREW__ = 0;
   invoke_viii(3, $7 | 0, 35272, 2);
   $313 = __THREW__;
   __THREW__ = 0;
   if ($313 & 1) break;
   $315 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i51$i$i, $7) | 0;
   $316 = HEAP32[$315 >> 2] | 0;
   if (!$316) {
    __THREW__ = 0;
    $318 = invoke_ii(67, 32) | 0;
    $319 = __THREW__;
    __THREW__ = 0;
    if ($319 & 1) {
     $538 = ___cxa_find_matching_catch() | 0;
     $539 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
     $$0$i$i22 = $539;
     $$01$i$i21 = $538;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $321 = $318 + 16 | 0;
    HEAP32[$321 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
    HEAP32[$321 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$321 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$7 + 0 >> 2] = 0;
    HEAP32[$7 + 4 >> 2] = 0;
    HEAP32[$7 + 8 >> 2] = 0;
    HEAP32[$318 + 28 >> 2] = 0;
    $323 = HEAP32[$__parent$i51$i$i >> 2] | 0;
    HEAP32[$318 >> 2] = 0;
    HEAP32[$318 + 4 >> 2] = 0;
    HEAP32[$318 + 8 >> 2] = $323;
    HEAP32[$315 >> 2] = $318;
    $327 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$327) $330 = $318; else {
     HEAP32[320] = $327;
     $330 = HEAP32[$315 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $330);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i54$i$i = $318;
   } else $__r$0$i54$i$i = $316;
   HEAP32[$__r$0$i54$i$i + 28 >> 2] = 7;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
   __THREW__ = 0;
   invoke_viii(3, $8 | 0, 35280, 1);
   $334 = __THREW__;
   __THREW__ = 0;
   if ($334 & 1) break;
   $336 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i59$i$i, $8) | 0;
   $337 = HEAP32[$336 >> 2] | 0;
   if (!$337) {
    __THREW__ = 0;
    $339 = invoke_ii(67, 32) | 0;
    $340 = __THREW__;
    __THREW__ = 0;
    if ($340 & 1) {
     $540 = ___cxa_find_matching_catch() | 0;
     $541 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
     $$0$i$i22 = $541;
     $$01$i$i21 = $540;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $342 = $339 + 16 | 0;
    HEAP32[$342 + 0 >> 2] = HEAP32[$8 + 0 >> 2];
    HEAP32[$342 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
    HEAP32[$342 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
    HEAP32[$8 + 0 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    HEAP32[$339 + 28 >> 2] = 0;
    $344 = HEAP32[$__parent$i59$i$i >> 2] | 0;
    HEAP32[$339 >> 2] = 0;
    HEAP32[$339 + 4 >> 2] = 0;
    HEAP32[$339 + 8 >> 2] = $344;
    HEAP32[$336 >> 2] = $339;
    $348 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$348) $351 = $339; else {
     HEAP32[320] = $348;
     $351 = HEAP32[$336 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $351);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i62$i$i = $339;
   } else $__r$0$i62$i$i = $337;
   HEAP32[$__r$0$i62$i$i + 28 >> 2] = 8;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
   __THREW__ = 0;
   invoke_viii(3, $9 | 0, 35288, 2);
   $355 = __THREW__;
   __THREW__ = 0;
   if ($355 & 1) break;
   $357 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i67$i$i, $9) | 0;
   $358 = HEAP32[$357 >> 2] | 0;
   if (!$358) {
    __THREW__ = 0;
    $360 = invoke_ii(67, 32) | 0;
    $361 = __THREW__;
    __THREW__ = 0;
    if ($361 & 1) {
     $542 = ___cxa_find_matching_catch() | 0;
     $543 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
     $$0$i$i22 = $543;
     $$01$i$i21 = $542;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $363 = $360 + 16 | 0;
    HEAP32[$363 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
    HEAP32[$363 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$363 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    HEAP32[$9 + 0 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    HEAP32[$360 + 28 >> 2] = 0;
    $365 = HEAP32[$__parent$i67$i$i >> 2] | 0;
    HEAP32[$360 >> 2] = 0;
    HEAP32[$360 + 4 >> 2] = 0;
    HEAP32[$360 + 8 >> 2] = $365;
    HEAP32[$357 >> 2] = $360;
    $369 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$369) $372 = $360; else {
     HEAP32[320] = $369;
     $372 = HEAP32[$357 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $372);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i70$i$i = $360;
   } else $__r$0$i70$i$i = $358;
   HEAP32[$__r$0$i70$i$i + 28 >> 2] = 9;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
   __THREW__ = 0;
   invoke_viii(3, $10 | 0, 35296, 2);
   $376 = __THREW__;
   __THREW__ = 0;
   if ($376 & 1) break;
   $378 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i75$i$i, $10) | 0;
   $379 = HEAP32[$378 >> 2] | 0;
   if (!$379) {
    __THREW__ = 0;
    $381 = invoke_ii(67, 32) | 0;
    $382 = __THREW__;
    __THREW__ = 0;
    if ($382 & 1) {
     $544 = ___cxa_find_matching_catch() | 0;
     $545 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
     $$0$i$i22 = $545;
     $$01$i$i21 = $544;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $384 = $381 + 16 | 0;
    HEAP32[$384 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
    HEAP32[$384 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
    HEAP32[$384 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
    HEAP32[$10 + 0 >> 2] = 0;
    HEAP32[$10 + 4 >> 2] = 0;
    HEAP32[$10 + 8 >> 2] = 0;
    HEAP32[$381 + 28 >> 2] = 0;
    $386 = HEAP32[$__parent$i75$i$i >> 2] | 0;
    HEAP32[$381 >> 2] = 0;
    HEAP32[$381 + 4 >> 2] = 0;
    HEAP32[$381 + 8 >> 2] = $386;
    HEAP32[$378 >> 2] = $381;
    $390 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$390) $393 = $381; else {
     HEAP32[320] = $390;
     $393 = HEAP32[$378 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $393);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i78$i$i = $381;
   } else $__r$0$i78$i$i = $379;
   HEAP32[$__r$0$i78$i$i + 28 >> 2] = 10;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
   __THREW__ = 0;
   invoke_viii(3, $11 | 0, 35304, 2);
   $397 = __THREW__;
   __THREW__ = 0;
   if ($397 & 1) break;
   $399 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i83$i$i, $11) | 0;
   $400 = HEAP32[$399 >> 2] | 0;
   if (!$400) {
    __THREW__ = 0;
    $402 = invoke_ii(67, 32) | 0;
    $403 = __THREW__;
    __THREW__ = 0;
    if ($403 & 1) {
     $546 = ___cxa_find_matching_catch() | 0;
     $547 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
     $$0$i$i22 = $547;
     $$01$i$i21 = $546;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $405 = $402 + 16 | 0;
    HEAP32[$405 + 0 >> 2] = HEAP32[$11 + 0 >> 2];
    HEAP32[$405 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
    HEAP32[$405 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
    HEAP32[$11 + 0 >> 2] = 0;
    HEAP32[$11 + 4 >> 2] = 0;
    HEAP32[$11 + 8 >> 2] = 0;
    HEAP32[$402 + 28 >> 2] = 0;
    $407 = HEAP32[$__parent$i83$i$i >> 2] | 0;
    HEAP32[$402 >> 2] = 0;
    HEAP32[$402 + 4 >> 2] = 0;
    HEAP32[$402 + 8 >> 2] = $407;
    HEAP32[$399 >> 2] = $402;
    $411 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$411) $414 = $402; else {
     HEAP32[320] = $411;
     $414 = HEAP32[$399 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $414);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i86$i$i = $402;
   } else $__r$0$i86$i$i = $400;
   HEAP32[$__r$0$i86$i$i + 28 >> 2] = 11;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
   __THREW__ = 0;
   invoke_viii(3, $12 | 0, 35312, 1);
   $418 = __THREW__;
   __THREW__ = 0;
   if ($418 & 1) break;
   $420 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i91$i$i, $12) | 0;
   $421 = HEAP32[$420 >> 2] | 0;
   if (!$421) {
    __THREW__ = 0;
    $423 = invoke_ii(67, 32) | 0;
    $424 = __THREW__;
    __THREW__ = 0;
    if ($424 & 1) {
     $548 = ___cxa_find_matching_catch() | 0;
     $549 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
     $$0$i$i22 = $549;
     $$01$i$i21 = $548;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $426 = $423 + 16 | 0;
    HEAP32[$426 + 0 >> 2] = HEAP32[$12 + 0 >> 2];
    HEAP32[$426 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
    HEAP32[$426 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
    HEAP32[$12 + 0 >> 2] = 0;
    HEAP32[$12 + 4 >> 2] = 0;
    HEAP32[$12 + 8 >> 2] = 0;
    HEAP32[$423 + 28 >> 2] = 0;
    $428 = HEAP32[$__parent$i91$i$i >> 2] | 0;
    HEAP32[$423 >> 2] = 0;
    HEAP32[$423 + 4 >> 2] = 0;
    HEAP32[$423 + 8 >> 2] = $428;
    HEAP32[$420 >> 2] = $423;
    $432 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$432) $435 = $423; else {
     HEAP32[320] = $432;
     $435 = HEAP32[$420 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $435);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i94$i$i = $423;
   } else $__r$0$i94$i$i = $421;
   HEAP32[$__r$0$i94$i$i + 28 >> 2] = 12;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
   __THREW__ = 0;
   invoke_viii(3, $13 | 0, 35320, 1);
   $439 = __THREW__;
   __THREW__ = 0;
   if ($439 & 1) break;
   $441 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i99$i$i, $13) | 0;
   $442 = HEAP32[$441 >> 2] | 0;
   if (!$442) {
    __THREW__ = 0;
    $444 = invoke_ii(67, 32) | 0;
    $445 = __THREW__;
    __THREW__ = 0;
    if ($445 & 1) {
     $550 = ___cxa_find_matching_catch() | 0;
     $551 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
     $$0$i$i22 = $551;
     $$01$i$i21 = $550;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $447 = $444 + 16 | 0;
    HEAP32[$447 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
    HEAP32[$447 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
    HEAP32[$447 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
    HEAP32[$13 + 0 >> 2] = 0;
    HEAP32[$13 + 4 >> 2] = 0;
    HEAP32[$13 + 8 >> 2] = 0;
    HEAP32[$444 + 28 >> 2] = 0;
    $449 = HEAP32[$__parent$i99$i$i >> 2] | 0;
    HEAP32[$444 >> 2] = 0;
    HEAP32[$444 + 4 >> 2] = 0;
    HEAP32[$444 + 8 >> 2] = $449;
    HEAP32[$441 >> 2] = $444;
    $453 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$453) $456 = $444; else {
     HEAP32[320] = $453;
     $456 = HEAP32[$441 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $456);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i102$i$i = $444;
   } else $__r$0$i102$i$i = $442;
   HEAP32[$__r$0$i102$i$i + 28 >> 2] = 13;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
   __THREW__ = 0;
   invoke_viii(3, $14 | 0, 35328, 1);
   $460 = __THREW__;
   __THREW__ = 0;
   if ($460 & 1) break;
   $462 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i107$i$i, $14) | 0;
   $463 = HEAP32[$462 >> 2] | 0;
   if (!$463) {
    __THREW__ = 0;
    $465 = invoke_ii(67, 32) | 0;
    $466 = __THREW__;
    __THREW__ = 0;
    if ($466 & 1) {
     $552 = ___cxa_find_matching_catch() | 0;
     $553 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
     $$0$i$i22 = $553;
     $$01$i$i21 = $552;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $468 = $465 + 16 | 0;
    HEAP32[$468 + 0 >> 2] = HEAP32[$14 + 0 >> 2];
    HEAP32[$468 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
    HEAP32[$468 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
    HEAP32[$14 + 0 >> 2] = 0;
    HEAP32[$14 + 4 >> 2] = 0;
    HEAP32[$14 + 8 >> 2] = 0;
    HEAP32[$465 + 28 >> 2] = 0;
    $470 = HEAP32[$__parent$i107$i$i >> 2] | 0;
    HEAP32[$465 >> 2] = 0;
    HEAP32[$465 + 4 >> 2] = 0;
    HEAP32[$465 + 8 >> 2] = $470;
    HEAP32[$462 >> 2] = $465;
    $474 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$474) $477 = $465; else {
     HEAP32[320] = $474;
     $477 = HEAP32[$462 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $477);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i110$i$i = $465;
   } else $__r$0$i110$i$i = $463;
   HEAP32[$__r$0$i110$i$i + 28 >> 2] = 14;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
   __THREW__ = 0;
   invoke_viii(3, $15 | 0, 35336, 2);
   $481 = __THREW__;
   __THREW__ = 0;
   if ($481 & 1) break;
   $483 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i115$i$i, $15) | 0;
   $484 = HEAP32[$483 >> 2] | 0;
   if (!$484) {
    __THREW__ = 0;
    $486 = invoke_ii(67, 32) | 0;
    $487 = __THREW__;
    __THREW__ = 0;
    if ($487 & 1) {
     $554 = ___cxa_find_matching_catch() | 0;
     $555 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
     $$0$i$i22 = $555;
     $$01$i$i21 = $554;
     $558 = HEAP32[321] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
     ___resumeException($$01$i$i21 | 0);
    }
    $489 = $486 + 16 | 0;
    HEAP32[$489 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
    HEAP32[$489 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
    HEAP32[$489 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
    HEAP32[$15 + 0 >> 2] = 0;
    HEAP32[$15 + 4 >> 2] = 0;
    HEAP32[$15 + 8 >> 2] = 0;
    HEAP32[$486 + 28 >> 2] = 0;
    $491 = HEAP32[$__parent$i115$i$i >> 2] | 0;
    HEAP32[$486 >> 2] = 0;
    HEAP32[$486 + 4 >> 2] = 0;
    HEAP32[$486 + 8 >> 2] = $491;
    HEAP32[$483 >> 2] = $486;
    $495 = HEAP32[HEAP32[320] >> 2] | 0;
    if (!$495) $498 = $486; else {
     HEAP32[320] = $495;
     $498 = HEAP32[$483 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $498);
    HEAP32[322] = (HEAP32[322] | 0) + 1;
    $__r$0$i118$i$i = $486;
   } else $__r$0$i118$i$i = $484;
   HEAP32[$__r$0$i118$i$i + 28 >> 2] = 15;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($15);
   __THREW__ = 0;
   invoke_viii(3, $16 | 0, 35344, 2);
   $502 = __THREW__;
   __THREW__ = 0;
   if ($502 & 1) break;
   $504 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(1280, $__parent$i123$i$i, $16) | 0;
   $505 = HEAP32[$504 >> 2] | 0;
   if ($505) {
    $__r$0$i126$i$i = $505;
    $559 = $__r$0$i126$i$i + 28 | 0;
    HEAP32[$559 >> 2] = 16;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
    ___cxa_atexit(184, 1280, ___dso_handle | 0) | 0;
    STACKTOP = sp;
    return;
   }
   __THREW__ = 0;
   $507 = invoke_ii(67, 32) | 0;
   $508 = __THREW__;
   __THREW__ = 0;
   if ($508 & 1) {
    $556 = ___cxa_find_matching_catch() | 0;
    $557 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
    $$0$i$i22 = $557;
    $$01$i$i21 = $556;
    $558 = HEAP32[321] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
    ___resumeException($$01$i$i21 | 0);
   }
   $510 = $507 + 16 | 0;
   HEAP32[$510 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   HEAP32[$510 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
   HEAP32[$510 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
   HEAP32[$16 + 0 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = 0;
   HEAP32[$507 + 28 >> 2] = 0;
   $512 = HEAP32[$__parent$i123$i$i >> 2] | 0;
   HEAP32[$507 >> 2] = 0;
   HEAP32[$507 + 4 >> 2] = 0;
   HEAP32[$507 + 8 >> 2] = $512;
   HEAP32[$504 >> 2] = $507;
   $516 = HEAP32[HEAP32[320] >> 2] | 0;
   if (!$516) $519 = $507; else {
    HEAP32[320] = $516;
    $519 = HEAP32[$504 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[321] | 0, $519);
   HEAP32[322] = (HEAP32[322] | 0) + 1;
   $__r$0$i126$i$i = $507;
   $559 = $__r$0$i126$i$i + 28 | 0;
   HEAP32[$559 >> 2] = 16;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
   ___cxa_atexit(184, 1280, ___dso_handle | 0) | 0;
   STACKTOP = sp;
   return;
  } while (0);
  $522 = ___cxa_find_matching_catch() | 0;
  $$0$i$i22 = tempRet0;
  $$01$i$i21 = $522;
  $558 = HEAP32[321] | 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1280, $558);
  ___resumeException($$01$i$i21 | 0);
 } while (0);
 $154 = ___cxa_find_matching_catch() | 0;
 $$0$i$i = tempRet0;
 $$01$i$i = $154;
 $164 = HEAP32[317] | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(1264, $164);
 ___resumeException($$01$i$i | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10makeObjectINS_23HeapComprehensionObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEEP3ASTS7_SH_EEENS_5ValueEDpT0_($agg$result, $this, $args, $args1, $args2, $args3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i11 = 0, $$0$i$i$i$i$i$i$i$i$i11$i = 0, $$0$i$i$i$i$i$i$i$i$i11$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i39 = 0, $$0$i$i$i$i$i$i$i$i13 = 0, $$0$i$i$i$i$i$i$i$i13$i = 0, $$0$i$i$i$i$i$i$i$i13$i$i$i = 0, $$0$i$i$i$i$i$i$i$i39$i = 0, $$0$i$i$i$i$i$i$i$i43 = 0, $$0$i$i$i$i$i$i32 = 0, $$0$i$i$i$i$i$i32$i = 0, $$0$i$i$i$i$i$i32$i$i$i = 0, $$0$i$i$i$i$i$i40 = 0, $$0$i$i$i$i$i34 = 0, $$0$i$i$i$i$i34$i = 0, $$0$i$i$i$i$i34$i$i$i = 0, $$0$i$i$i$i1$i$i = 0, $$0$i$i$i$i1$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i$i = 0, $$0$i$i$i$i1$i$i24 = 0, $$0$i$i$i$i1$i$i24$i = 0, $$0$i$i$i$i1$i$i24$i$i$i = 0, $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i15 = 0, $$01$i$i$i$i$i$i$i$i15$i = 0, $$01$i$i$i$i$i$i$i$i15$i$i$i = 0, $$01$i$i$i$i$i$i$i$i45 = 0, $$01$i$i$i$i$i36 = 0, $$01$i$i$i$i$i36$i = 0, $$01$i$i$i$i$i36$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i$i$i = 0, $$idx$val$i$i4 = 0, $$idx$val$i$i4$i = 0, $$idx$val$i$i4$i$i$i = 0, $$idx$val$i15$i$i = 0, $$idx$val$i15$i$i$i = 0, $$idx$val$i15$i$i$i$i$i = 0, $$idx$val$i15$i$i7 = 0, $$idx$val$i15$i$i7$i = 0, $$idx$val$i15$i$i7$i$i$i = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i$i$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i22 = 0, $$idx2$val$i23$i$i$i$i$i$i22$i = 0, $$idx2$val$i23$i$i$i$i$i$i22$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa$i$i = 0, $$pre$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i9 = 0, $$pre$i$i$i$i$i$i9$i = 0, $$pre$i$i$i$i$i$i9$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $107 = 0, $111 = 0, $114 = 0, $115 = 0, $117 = 0, $121 = 0, $123 = 0, $126 = 0, $132 = 0, $134 = 0, $137 = 0, $14 = 0, $141 = 0, $142 = 0, $143 = 0, $145 = 0, $146 = 0, $150 = 0, $152 = 0, $155 = 0, $156 = 0, $16 = 0, $160 = 0, $162 = 0, $164 = 0, $167 = 0, $173 = 0, $177 = 0, $180 = 0, $181 = 0, $183 = 0, $187 = 0, $189 = 0, $19 = 0, $192 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $203 = 0, $207 = 0, $208 = 0, $210 = 0, $211 = 0, $212 = 0, $214 = 0, $215 = 0, $219 = 0, $221 = 0, $224 = 0, $225 = 0, $229 = 0, $231 = 0, $233 = 0, $236 = 0, $24 = 0, $242 = 0, $246 = 0, $249 = 0, $250 = 0, $252 = 0, $256 = 0, $258 = 0, $26 = 0, $261 = 0, $267 = 0, $269 = 0, $272 = 0, $276 = 0, $277 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $283 = 0, $284 = 0, $288 = 0, $290 = 0, $293 = 0, $294 = 0, $298 = 0, $3 = 0, $300 = 0, $302 = 0, $305 = 0, $31 = 0, $311 = 0, $315 = 0, $318 = 0, $319 = 0, $321 = 0, $325 = 0, $327 = 0, $330 = 0, $336 = 0, $338 = 0, $341 = 0, $347 = 0, $348 = 0, $349 = 0, $351 = 0, $352 = 0, $356 = 0, $358 = 0, $361 = 0, $362 = 0, $366 = 0, $368 = 0, $37 = 0, $370 = 0, $373 = 0, $379 = 0, $383 = 0, $386 = 0, $387 = 0, $389 = 0, $393 = 0, $395 = 0, $398 = 0, $4 = 0, $404 = 0, $406 = 0, $409 = 0, $41 = 0, $413 = 0, $414 = 0, $416 = 0, $417 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $427 = 0, $428 = 0, $433 = 0, $435 = 0, $438 = 0, $439 = 0, $44 = 0, $445 = 0, $447 = 0, $45 = 0, $450 = 0, $453 = 0, $454 = 0, $456 = 0, $457 = 0, $458 = 0, $461 = 0, $462 = 0, $466 = 0, $468 = 0, $47 = 0, $470 = 0, $477 = 0, $480 = 0, $486 = 0, $491 = 0, $494 = 0, $5 = 0, $502 = 0, $505 = 0, $508 = 0, $51 = 0, $512 = 0, $521 = 0, $526 = 0, $528 = 0, $53 = 0, $532 = 0, $534 = 0, $535 = 0, $537 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $547 = 0, $550 = 0, $551 = 0, $56 = 0, $6 = 0, $62 = 0, $64 = 0, $67 = 0, $7 = 0, $71 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $80 = 0, $84 = 0, $86 = 0, $89 = 0, $9 = 0, $90 = 0, $94 = 0, $96 = 0, $98 = 0, $__nd$0$in$i21$i$i$i$i$i$i = 0, $__nd$0$in$i21$i$i$i$i$i$i$i = 0, $__nd$0$in$i21$i$i$i$i$i$i$i$i$i = 0, $__nd$0$in$i21$i$i$i$i$i$i20 = 0, $__nd$0$in$i21$i$i$i$i$i$i20$i = 0, $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i = 0, $__parent$i$i$i$i$i2$i$i$i = 0, $eh$lpad$body43$i$index2Z2D = 0, $eh$lpad$body43$i$indexZ2D = 0, $eh$lpad$body49$index8Z2D = 0, $eh$lpad$body49$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx$val$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $__parent$i$i$i$i$i2$i$i$i = sp + 48 | 0;
 $0 = sp + 36 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 HEAP32[$agg$result + 0 >> 2] = HEAP32[10142];
 HEAP32[$agg$result + 4 >> 2] = HEAP32[10143];
 HEAP32[$agg$result + 8 >> 2] = HEAP32[10144];
 HEAP32[$agg$result + 12 >> 2] = HEAP32[10145];
 HEAP32[$agg$result >> 2] = 18;
 $4 = $2 + 4 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $2 + 8 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $2 + 4 | 0;
 HEAP32[$2 >> 2] = $6;
 $$idx$val$i$i = HEAP32[$args >> 2] | 0;
 $7 = $args + 4 | 0;
 L1 : do if (($$idx$val$i$i | 0) != ($7 | 0)) {
  $$idx$val$i15$i$i = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $9 = invoke_ii(67, 24) | 0;
   $10 = __THREW__;
   __THREW__ = 0;
   if ($10 & 1) break;
   $14 = $$idx$val$i15$i$i + 16 | 0;
   $16 = HEAP32[$14 >> 2] | 0;
   $19 = HEAP32[$14 + 4 >> 2] | 0;
   $20 = $9 + 16 | 0;
   HEAP32[$20 >> 2] = $16;
   HEAP32[$20 + 4 >> 2] = $19;
   $24 = $16;
   $$pre$i$i$i$i$i$i = HEAP32[$6 >> 2] | 0;
   do if ((HEAP32[$2 >> 2] | 0) == ($6 | 0)) {
    $37 = $6;
    label = 9;
   } else {
    $26 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($26) {
     $$0$i$i$i$i$i$i$i$i = $6;
     while (1) {
      $31 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$31 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $31; else {
       $$01$i$i$i$i$i$i$i$i = $31;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $28 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$28) {
       $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $28;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $24 >>> 0) {
     $37 = $$01$i$i$i$i$i$i$i$i;
     label = 9;
    } else {
     if ($26) {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $6;
      $$0$i$i$i$i1$i$i = $6;
      $51 = $6;
      break;
     } else $__nd$0$in$i21$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i23$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i + 16 >> 2] | 0;
      if ($24 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i >>> 0) {
       $41 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i >> 2] | 0;
       if (!$41) {
        label = 15;
        break;
       } else {
        $__nd$0$in$i21$i$i$i$i$i$i = $41;
        continue;
       }
      }
      if ($$idx2$val$i23$i$i$i$i$i$i >>> 0 >= $24 >>> 0) {
       label = 19;
       break;
      }
      $44 = $__nd$0$in$i21$i$i$i$i$i$i + 4 | 0;
      $45 = HEAP32[$44 >> 2] | 0;
      if (!$45) {
       label = 18;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i = $45;
     }
     if ((label | 0) == 15) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $__nd$0$in$i21$i$i$i$i$i$i;
      $51 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 18) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $44;
      $51 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 19) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $__parent$i$i$i$i$i2$i$i$i;
      $51 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 9) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $6;
     $$0$i$i$i$i1$i$i = $6;
     $51 = $6;
     break;
    } else {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $37;
     $$0$i$i$i$i1$i$i = $37 + 4 | 0;
     $51 = $37;
     break;
    }
   } while (0);
   $47 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
   if (!$47) {
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = $51;
    HEAP32[$$0$i$i$i$i1$i$i >> 2] = $9;
    $53 = HEAP32[HEAP32[$2 >> 2] >> 2] | 0;
    if (!$53) $56 = $9; else {
     HEAP32[$2 >> 2] = $53;
     $56 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$4 >> 2] | 0, $56);
    HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
   } else if (!(($47 | 0) == ($9 | 0) | ($9 | 0) == 0)) __ZdlPv($9);
   $62 = HEAP32[$$idx$val$i15$i$i + 4 >> 2] | 0;
   if (!$62) {
    $$0$i$i$i$i$i = $$idx$val$i15$i$i;
    while (1) {
     $67 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$67 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $67;
      break;
     } else $$0$i$i$i$i$i = $67;
    }
   } else {
    $$0$i$i$i$i$i$i = $62;
    while (1) {
     $64 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$64) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $64;
    }
   }
   if (($$01$i$i$i$i$i | 0) == ($7 | 0)) break L1; else $$idx$val$i15$i$i = $$01$i$i$i$i$i;
  }
  $71 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$4 >> 2] | 0);
  ___resumeException($71 | 0);
 } while (0);
 $74 = $3 + 4 | 0;
 HEAP32[$74 >> 2] = 0;
 $75 = $3 + 8 | 0;
 HEAP32[$75 >> 2] = 0;
 $76 = $3 + 4 | 0;
 HEAP32[$3 >> 2] = $76;
 $$idx$val$i$i4 = HEAP32[$args3 >> 2] | 0;
 $77 = $args3 + 4 | 0;
 L50 : do if (($$idx$val$i$i4 | 0) != ($77 | 0)) {
  $$idx$val$i15$i$i7 = $$idx$val$i$i4;
  while (1) {
   __THREW__ = 0;
   $79 = invoke_ii(67, 24) | 0;
   $80 = __THREW__;
   __THREW__ = 0;
   if ($80 & 1) break;
   $84 = $$idx$val$i15$i$i7 + 16 | 0;
   $86 = HEAP32[$84 >> 2] | 0;
   $89 = HEAP32[$84 + 4 >> 2] | 0;
   $90 = $79 + 16 | 0;
   HEAP32[$90 >> 2] = $86;
   HEAP32[$90 + 4 >> 2] = $89;
   $94 = $86;
   $$pre$i$i$i$i$i$i9 = HEAP32[$76 >> 2] | 0;
   do if ((HEAP32[$3 >> 2] | 0) == ($76 | 0)) {
    $107 = $76;
    label = 41;
   } else {
    $96 = ($$pre$i$i$i$i$i$i9 | 0) == 0;
    if ($96) {
     $$0$i$i$i$i$i$i$i$i13 = $76;
     while (1) {
      $101 = HEAP32[$$0$i$i$i$i$i$i$i$i13 + 8 >> 2] | 0;
      if ((HEAP32[$101 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13 | 0)) $$0$i$i$i$i$i$i$i$i13 = $101; else {
       $$01$i$i$i$i$i$i$i$i15 = $101;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i11 = $$pre$i$i$i$i$i$i9;
     while (1) {
      $98 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11 + 4 >> 2] | 0;
      if (!$98) {
       $$01$i$i$i$i$i$i$i$i15 = $$0$i$i$i$i$i$i$i$i$i11;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i11 = $98;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i15 + 16 >> 2] | 0) >>> 0 < $94 >>> 0) {
     $107 = $$01$i$i$i$i$i$i$i$i15;
     label = 41;
    } else {
     if ($96) {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $76;
      $$0$i$i$i$i1$i$i24 = $76;
      $121 = $76;
      break;
     } else $__nd$0$in$i21$i$i$i$i$i$i20 = $$pre$i$i$i$i$i$i9;
     while (1) {
      $$idx2$val$i23$i$i$i$i$i$i22 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i20 + 16 >> 2] | 0;
      if ($94 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i22 >>> 0) {
       $111 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i20 >> 2] | 0;
       if (!$111) {
        label = 47;
        break;
       } else {
        $__nd$0$in$i21$i$i$i$i$i$i20 = $111;
        continue;
       }
      }
      if ($$idx2$val$i23$i$i$i$i$i$i22 >>> 0 >= $94 >>> 0) {
       label = 51;
       break;
      }
      $114 = $__nd$0$in$i21$i$i$i$i$i$i20 + 4 | 0;
      $115 = HEAP32[$114 >> 2] | 0;
      if (!$115) {
       label = 50;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i20 = $115;
     }
     if ((label | 0) == 47) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i20;
      $$0$i$i$i$i1$i$i24 = $__nd$0$in$i21$i$i$i$i$i$i20;
      $121 = $__nd$0$in$i21$i$i$i$i$i$i20;
      break;
     } else if ((label | 0) == 50) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i20;
      $$0$i$i$i$i1$i$i24 = $114;
      $121 = $__nd$0$in$i21$i$i$i$i$i$i20;
      break;
     } else if ((label | 0) == 51) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i20;
      $$0$i$i$i$i1$i$i24 = $__parent$i$i$i$i$i2$i$i$i;
      $121 = $__nd$0$in$i21$i$i$i$i$i$i20;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 41) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i9) {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $76;
     $$0$i$i$i$i1$i$i24 = $76;
     $121 = $76;
     break;
    } else {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $107;
     $$0$i$i$i$i1$i$i24 = $107 + 4 | 0;
     $121 = $107;
     break;
    }
   } while (0);
   $117 = HEAP32[$$0$i$i$i$i1$i$i24 >> 2] | 0;
   if (!$117) {
    HEAP32[$79 >> 2] = 0;
    HEAP32[$79 + 4 >> 2] = 0;
    HEAP32[$79 + 8 >> 2] = $121;
    HEAP32[$$0$i$i$i$i1$i$i24 >> 2] = $79;
    $123 = HEAP32[HEAP32[$3 >> 2] >> 2] | 0;
    if (!$123) $126 = $79; else {
     HEAP32[$3 >> 2] = $123;
     $126 = HEAP32[$$0$i$i$i$i1$i$i24 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$74 >> 2] | 0, $126);
    HEAP32[$75 >> 2] = (HEAP32[$75 >> 2] | 0) + 1;
   } else if (!(($117 | 0) == ($79 | 0) | ($79 | 0) == 0)) __ZdlPv($79);
   $132 = HEAP32[$$idx$val$i15$i$i7 + 4 >> 2] | 0;
   if (!$132) {
    $$0$i$i$i$i$i34 = $$idx$val$i15$i$i7;
    while (1) {
     $137 = HEAP32[$$0$i$i$i$i$i34 + 8 >> 2] | 0;
     if ((HEAP32[$137 >> 2] | 0) == ($$0$i$i$i$i$i34 | 0)) {
      $$01$i$i$i$i$i36 = $137;
      break;
     } else $$0$i$i$i$i$i34 = $137;
    }
   } else {
    $$0$i$i$i$i$i$i32 = $132;
    while (1) {
     $134 = HEAP32[$$0$i$i$i$i$i$i32 >> 2] | 0;
     if (!$134) {
      $$01$i$i$i$i$i36 = $$0$i$i$i$i$i$i32;
      break;
     } else $$0$i$i$i$i$i$i32 = $134;
    }
   }
   if (($$01$i$i$i$i$i36 | 0) == ($77 | 0)) break L50; else $$idx$val$i15$i$i7 = $$01$i$i$i$i$i36;
  }
  $544 = ___cxa_find_matching_catch() | 0;
  $545 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$74 >> 2] | 0);
  $$0 = $545;
  $$01 = $544;
  $550 = HEAP32[$4 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $550);
  ___resumeException($$01 | 0);
 } while (0);
 $141 = $0 + 4 | 0;
 HEAP32[$141 >> 2] = 0;
 $142 = $0 + 8 | 0;
 HEAP32[$142 >> 2] = 0;
 $143 = $0 + 4 | 0;
 HEAP32[$0 >> 2] = $143;
 $$idx$val$i$i$i = HEAP32[$2 >> 2] | 0;
 L100 : do if (($$idx$val$i$i$i | 0) == ($6 | 0)) label = 96; else {
  $$idx$val$i15$i$i$i = $$idx$val$i$i$i;
  while (1) {
   __THREW__ = 0;
   $145 = invoke_ii(67, 24) | 0;
   $146 = __THREW__;
   __THREW__ = 0;
   if ($146 & 1) break;
   $150 = $$idx$val$i15$i$i$i + 16 | 0;
   $152 = HEAP32[$150 >> 2] | 0;
   $155 = HEAP32[$150 + 4 >> 2] | 0;
   $156 = $145 + 16 | 0;
   HEAP32[$156 >> 2] = $152;
   HEAP32[$156 + 4 >> 2] = $155;
   $160 = $152;
   $$pre$i$i$i$i$i$i$i = HEAP32[$143 >> 2] | 0;
   do if ((HEAP32[$0 >> 2] | 0) == ($143 | 0)) {
    $173 = $143;
    label = 72;
   } else {
    $162 = ($$pre$i$i$i$i$i$i$i | 0) == 0;
    if ($162) {
     $$0$i$i$i$i$i$i$i$i$i39 = $143;
     while (1) {
      $167 = HEAP32[$$0$i$i$i$i$i$i$i$i$i39 + 8 >> 2] | 0;
      if ((HEAP32[$167 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i39 | 0)) $$0$i$i$i$i$i$i$i$i$i39 = $167; else {
       $$01$i$i$i$i$i$i$i$i$i = $167;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $164 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$164) {
       $$01$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i$i = $164;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $160 >>> 0) {
     $173 = $$01$i$i$i$i$i$i$i$i$i;
     label = 72;
    } else {
     if ($162) {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $143;
      $$0$i$i$i$i1$i$i$i = $143;
      $187 = $143;
      break;
     } else $__nd$0$in$i21$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i23$i$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i + 16 >> 2] | 0;
      if ($160 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i$i >>> 0) {
       $177 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i >> 2] | 0;
       if (!$177) {
        label = 78;
        break;
       } else {
        $__nd$0$in$i21$i$i$i$i$i$i$i = $177;
        continue;
       }
      }
      if ($$idx2$val$i23$i$i$i$i$i$i$i >>> 0 >= $160 >>> 0) {
       label = 82;
       break;
      }
      $180 = $__nd$0$in$i21$i$i$i$i$i$i$i + 4 | 0;
      $181 = HEAP32[$180 >> 2] | 0;
      if (!$181) {
       label = 81;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i$i = $181;
     }
     if ((label | 0) == 78) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i$i = $__nd$0$in$i21$i$i$i$i$i$i$i;
      $187 = $__nd$0$in$i21$i$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 81) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i$i = $180;
      $187 = $__nd$0$in$i21$i$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 82) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i$i = $__parent$i$i$i$i$i2$i$i$i;
      $187 = $__nd$0$in$i21$i$i$i$i$i$i$i;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 72) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i$i) {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $143;
     $$0$i$i$i$i1$i$i$i = $143;
     $187 = $143;
     break;
    } else {
     HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $173;
     $$0$i$i$i$i1$i$i$i = $173 + 4 | 0;
     $187 = $173;
     break;
    }
   } while (0);
   $183 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
   if (!$183) {
    HEAP32[$145 >> 2] = 0;
    HEAP32[$145 + 4 >> 2] = 0;
    HEAP32[$145 + 8 >> 2] = $187;
    HEAP32[$$0$i$i$i$i1$i$i$i >> 2] = $145;
    $189 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
    if (!$189) $192 = $145; else {
     HEAP32[$0 >> 2] = $189;
     $192 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$141 >> 2] | 0, $192);
    HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + 1;
   } else if (!(($183 | 0) == ($145 | 0) | ($145 | 0) == 0)) __ZdlPv($145);
   $198 = HEAP32[$$idx$val$i15$i$i$i + 4 >> 2] | 0;
   if (!$198) {
    $$0$i$i$i$i$i$i40 = $$idx$val$i15$i$i$i;
    while (1) {
     $203 = HEAP32[$$0$i$i$i$i$i$i40 + 8 >> 2] | 0;
     if ((HEAP32[$203 >> 2] | 0) == ($$0$i$i$i$i$i$i40 | 0)) {
      $$01$i$i$i$i$i$i = $203;
      break;
     } else $$0$i$i$i$i$i$i40 = $203;
    }
   } else {
    $$0$i$i$i$i$i$i$i = $198;
    while (1) {
     $200 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
     if (!$200) {
      $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i$i = $200;
    }
   }
   if (($$01$i$i$i$i$i$i | 0) == ($6 | 0)) {
    label = 96;
    break L100;
   } else $$idx$val$i15$i$i$i = $$01$i$i$i$i$i$i;
  }
  $207 = ___cxa_find_matching_catch() | 0;
  $208 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$141 >> 2] | 0);
  $eh$lpad$body49$index8Z2D = $208;
  $eh$lpad$body49$indexZ2D = $207;
 } while (0);
 L148 : do if ((label | 0) == 96) {
  $210 = $1 + 4 | 0;
  HEAP32[$210 >> 2] = 0;
  $211 = $1 + 8 | 0;
  HEAP32[$211 >> 2] = 0;
  $212 = $1 + 4 | 0;
  HEAP32[$1 >> 2] = $212;
  $$idx$val$i$i4$i = HEAP32[$3 >> 2] | 0;
  L150 : do if (($$idx$val$i$i4$i | 0) == ($76 | 0)) label = 127; else {
   $$idx$val$i15$i$i7$i = $$idx$val$i$i4$i;
   while (1) {
    __THREW__ = 0;
    $214 = invoke_ii(67, 24) | 0;
    $215 = __THREW__;
    __THREW__ = 0;
    if ($215 & 1) break;
    $219 = $$idx$val$i15$i$i7$i + 16 | 0;
    $221 = HEAP32[$219 >> 2] | 0;
    $224 = HEAP32[$219 + 4 >> 2] | 0;
    $225 = $214 + 16 | 0;
    HEAP32[$225 >> 2] = $221;
    HEAP32[$225 + 4 >> 2] = $224;
    $229 = $221;
    $$pre$i$i$i$i$i$i9$i = HEAP32[$212 >> 2] | 0;
    do if ((HEAP32[$1 >> 2] | 0) == ($212 | 0)) {
     $242 = $212;
     label = 104;
    } else {
     $231 = ($$pre$i$i$i$i$i$i9$i | 0) == 0;
     if ($231) {
      $$0$i$i$i$i$i$i$i$i13$i = $212;
      while (1) {
       $236 = HEAP32[$$0$i$i$i$i$i$i$i$i13$i + 8 >> 2] | 0;
       if ((HEAP32[$236 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13$i | 0)) $$0$i$i$i$i$i$i$i$i13$i = $236; else {
        $$01$i$i$i$i$i$i$i$i15$i = $236;
        break;
       }
      }
     } else {
      $$0$i$i$i$i$i$i$i$i$i11$i = $$pre$i$i$i$i$i$i9$i;
      while (1) {
       $233 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11$i + 4 >> 2] | 0;
       if (!$233) {
        $$01$i$i$i$i$i$i$i$i15$i = $$0$i$i$i$i$i$i$i$i$i11$i;
        break;
       } else $$0$i$i$i$i$i$i$i$i$i11$i = $233;
      }
     }
     if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i + 16 >> 2] | 0) >>> 0 < $229 >>> 0) {
      $242 = $$01$i$i$i$i$i$i$i$i15$i;
      label = 104;
     } else {
      if ($231) {
       HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $212;
       $$0$i$i$i$i1$i$i24$i = $212;
       $256 = $212;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i20$i = $$pre$i$i$i$i$i$i9$i;
      while (1) {
       $$idx2$val$i23$i$i$i$i$i$i22$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i20$i + 16 >> 2] | 0;
       if ($229 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i22$i >>> 0) {
        $246 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i20$i >> 2] | 0;
        if (!$246) {
         label = 110;
         break;
        } else {
         $__nd$0$in$i21$i$i$i$i$i$i20$i = $246;
         continue;
        }
       }
       if ($$idx2$val$i23$i$i$i$i$i$i22$i >>> 0 >= $229 >>> 0) {
        label = 114;
        break;
       }
       $249 = $__nd$0$in$i21$i$i$i$i$i$i20$i + 4 | 0;
       $250 = HEAP32[$249 >> 2] | 0;
       if (!$250) {
        label = 113;
        break;
       } else $__nd$0$in$i21$i$i$i$i$i$i20$i = $250;
      }
      if ((label | 0) == 110) {
       label = 0;
       HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i20$i;
       $$0$i$i$i$i1$i$i24$i = $__nd$0$in$i21$i$i$i$i$i$i20$i;
       $256 = $__nd$0$in$i21$i$i$i$i$i$i20$i;
       break;
      } else if ((label | 0) == 113) {
       label = 0;
       HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i20$i;
       $$0$i$i$i$i1$i$i24$i = $249;
       $256 = $__nd$0$in$i21$i$i$i$i$i$i20$i;
       break;
      } else if ((label | 0) == 114) {
       label = 0;
       HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i20$i;
       $$0$i$i$i$i1$i$i24$i = $__parent$i$i$i$i$i2$i$i$i;
       $256 = $__nd$0$in$i21$i$i$i$i$i$i20$i;
       break;
      }
     }
    } while (0);
    do if ((label | 0) == 104) {
     label = 0;
     if (!$$pre$i$i$i$i$i$i9$i) {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $212;
      $$0$i$i$i$i1$i$i24$i = $212;
      $256 = $212;
      break;
     } else {
      HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $242;
      $$0$i$i$i$i1$i$i24$i = $242 + 4 | 0;
      $256 = $242;
      break;
     }
    } while (0);
    $252 = HEAP32[$$0$i$i$i$i1$i$i24$i >> 2] | 0;
    if (!$252) {
     HEAP32[$214 >> 2] = 0;
     HEAP32[$214 + 4 >> 2] = 0;
     HEAP32[$214 + 8 >> 2] = $256;
     HEAP32[$$0$i$i$i$i1$i$i24$i >> 2] = $214;
     $258 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
     if (!$258) $261 = $214; else {
      HEAP32[$1 >> 2] = $258;
      $261 = HEAP32[$$0$i$i$i$i1$i$i24$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$210 >> 2] | 0, $261);
     HEAP32[$211 >> 2] = (HEAP32[$211 >> 2] | 0) + 1;
    } else if (!(($252 | 0) == ($214 | 0) | ($214 | 0) == 0)) __ZdlPv($214);
    $267 = HEAP32[$$idx$val$i15$i$i7$i + 4 >> 2] | 0;
    if (!$267) {
     $$0$i$i$i$i$i34$i = $$idx$val$i15$i$i7$i;
     while (1) {
      $272 = HEAP32[$$0$i$i$i$i$i34$i + 8 >> 2] | 0;
      if ((HEAP32[$272 >> 2] | 0) == ($$0$i$i$i$i$i34$i | 0)) {
       $$01$i$i$i$i$i36$i = $272;
       break;
      } else $$0$i$i$i$i$i34$i = $272;
     }
    } else {
     $$0$i$i$i$i$i$i32$i = $267;
     while (1) {
      $269 = HEAP32[$$0$i$i$i$i$i$i32$i >> 2] | 0;
      if (!$269) {
       $$01$i$i$i$i$i36$i = $$0$i$i$i$i$i$i32$i;
       break;
      } else $$0$i$i$i$i$i$i32$i = $269;
     }
    }
    if (($$01$i$i$i$i$i36$i | 0) == ($76 | 0)) {
     label = 127;
     break L150;
    } else $$idx$val$i15$i$i7$i = $$01$i$i$i$i$i36$i;
   }
   $534 = ___cxa_find_matching_catch() | 0;
   $535 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$210 >> 2] | 0);
   $$0$i = $535;
   $$01$i = $534;
  } while (0);
  if ((label | 0) == 127) {
   __THREW__ = 0;
   $276 = invoke_ii(67, 40) | 0;
   $277 = __THREW__;
   __THREW__ = 0;
   L200 : do if ($277 & 1) label = 226; else {
    HEAP32[$276 >> 2] = 40280;
    $279 = $276 + 8 | 0;
    $280 = $276 + 12 | 0;
    HEAP32[$280 >> 2] = 0;
    $281 = $276 + 16 | 0;
    HEAP32[$281 >> 2] = 0;
    HEAP32[$279 >> 2] = $280;
    $$idx$val$i$i$i$i$i = HEAP32[$0 >> 2] | 0;
    L202 : do if (($$idx$val$i$i$i$i$i | 0) == ($143 | 0)) label = 159; else {
     $$idx$val$i15$i$i$i$i$i = $$idx$val$i$i$i$i$i;
     while (1) {
      __THREW__ = 0;
      $283 = invoke_ii(67, 24) | 0;
      $284 = __THREW__;
      __THREW__ = 0;
      if ($284 & 1) break;
      $288 = $$idx$val$i15$i$i$i$i$i + 16 | 0;
      $290 = HEAP32[$288 >> 2] | 0;
      $293 = HEAP32[$288 + 4 >> 2] | 0;
      $294 = $283 + 16 | 0;
      HEAP32[$294 >> 2] = $290;
      HEAP32[$294 + 4 >> 2] = $293;
      $298 = $290;
      $$pre$i$i$i$i$i$i$i$i$i = HEAP32[$280 >> 2] | 0;
      do if ((HEAP32[$279 >> 2] | 0) == ($280 | 0)) {
       $311 = $280;
       label = 136;
      } else {
       $300 = ($$pre$i$i$i$i$i$i$i$i$i | 0) == 0;
       if ($300) {
        $$0$i$i$i$i$i$i$i$i$i$i$i = $280;
        while (1) {
         $305 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$305 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i$i$i = $305; else {
          $$01$i$i$i$i$i$i$i$i$i$i$i = $305;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
        while (1) {
         $302 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
         if (!$302) {
          $$01$i$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i$i = $302;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $298 >>> 0) {
        $311 = $$01$i$i$i$i$i$i$i$i$i$i$i;
        label = 136;
       } else {
        if ($300) {
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $280;
         $$0$i$i$i$i1$i$i$i$i$i = $280;
         $325 = $280;
         break;
        } else $__nd$0$in$i21$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i23$i$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0;
         if ($298 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i$i$i$i >>> 0) {
          $315 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i$i$i$i >> 2] | 0;
          if (!$315) {
           label = 142;
           break;
          } else {
           $__nd$0$in$i21$i$i$i$i$i$i$i$i$i = $315;
           continue;
          }
         }
         if ($$idx2$val$i23$i$i$i$i$i$i$i$i$i >>> 0 >= $298 >>> 0) {
          label = 146;
          break;
         }
         $318 = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i + 4 | 0;
         $319 = HEAP32[$318 >> 2] | 0;
         if (!$319) {
          label = 145;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i$i$i$i = $319;
        }
        if ((label | 0) == 142) {
         label = 0;
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i$i$i = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
         $325 = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
         break;
        } else if ((label | 0) == 145) {
         label = 0;
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i$i$i = $318;
         $325 = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
         break;
        } else if ((label | 0) == 146) {
         label = 0;
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
         $$0$i$i$i$i1$i$i$i$i$i = $__parent$i$i$i$i$i2$i$i$i;
         $325 = $__nd$0$in$i21$i$i$i$i$i$i$i$i$i;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 136) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i$i) {
        HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $280;
        $$0$i$i$i$i1$i$i$i$i$i = $280;
        $325 = $280;
        break;
       } else {
        HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $311;
        $$0$i$i$i$i1$i$i$i$i$i = $311 + 4 | 0;
        $325 = $311;
        break;
       }
      } while (0);
      $321 = HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] | 0;
      if (!$321) {
       HEAP32[$283 >> 2] = 0;
       HEAP32[$283 + 4 >> 2] = 0;
       HEAP32[$283 + 8 >> 2] = $325;
       HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] = $283;
       $327 = HEAP32[HEAP32[$279 >> 2] >> 2] | 0;
       if (!$327) $330 = $283; else {
        HEAP32[$279 >> 2] = $327;
        $330 = HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$280 >> 2] | 0, $330);
       HEAP32[$281 >> 2] = (HEAP32[$281 >> 2] | 0) + 1;
      } else if (!(($321 | 0) == ($283 | 0) | ($283 | 0) == 0)) __ZdlPv($283);
      $336 = HEAP32[$$idx$val$i15$i$i$i$i$i + 4 >> 2] | 0;
      if (!$336) {
       $$0$i$i$i$i$i$i$i$i43 = $$idx$val$i15$i$i$i$i$i;
       while (1) {
        $341 = HEAP32[$$0$i$i$i$i$i$i$i$i43 + 8 >> 2] | 0;
        if ((HEAP32[$341 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i43 | 0)) {
         $$01$i$i$i$i$i$i$i$i45 = $341;
         break;
        } else $$0$i$i$i$i$i$i$i$i43 = $341;
       }
      } else {
       $$0$i$i$i$i$i$i$i$i39$i = $336;
       while (1) {
        $338 = HEAP32[$$0$i$i$i$i$i$i$i$i39$i >> 2] | 0;
        if (!$338) {
         $$01$i$i$i$i$i$i$i$i45 = $$0$i$i$i$i$i$i$i$i39$i;
         break;
        } else $$0$i$i$i$i$i$i$i$i39$i = $338;
       }
      }
      if (($$01$i$i$i$i$i$i$i$i45 | 0) == ($143 | 0)) {
       label = 159;
       break L202;
      } else $$idx$val$i15$i$i$i$i$i = $$01$i$i$i$i$i$i$i$i45;
     }
     $413 = ___cxa_find_matching_catch() | 0;
     $414 = tempRet0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($279, HEAP32[$280 >> 2] | 0);
     $$0$i$i$i = $414;
     $$01$i$i$i = $413;
    } while (0);
    L250 : do if ((label | 0) == 159) {
     HEAP32[$276 + 20 >> 2] = $args1;
     HEAP32[$276 + 24 >> 2] = $args2;
     $347 = $276 + 28 | 0;
     $348 = $276 + 32 | 0;
     HEAP32[$348 >> 2] = 0;
     $349 = $276 + 36 | 0;
     HEAP32[$349 >> 2] = 0;
     HEAP32[$347 >> 2] = $348;
     $$idx$val$i$i4$i$i$i = HEAP32[$1 >> 2] | 0;
     L252 : do if (($$idx$val$i$i4$i$i$i | 0) != ($212 | 0)) {
      $$idx$val$i15$i$i7$i$i$i = $$idx$val$i$i4$i$i$i;
      while (1) {
       __THREW__ = 0;
       $351 = invoke_ii(67, 24) | 0;
       $352 = __THREW__;
       __THREW__ = 0;
       if ($352 & 1) break;
       $356 = $$idx$val$i15$i$i7$i$i$i + 16 | 0;
       $358 = HEAP32[$356 >> 2] | 0;
       $361 = HEAP32[$356 + 4 >> 2] | 0;
       $362 = $351 + 16 | 0;
       HEAP32[$362 >> 2] = $358;
       HEAP32[$362 + 4 >> 2] = $361;
       $366 = $358;
       $$pre$i$i$i$i$i$i9$i$i$i = HEAP32[$348 >> 2] | 0;
       do if ((HEAP32[$347 >> 2] | 0) == ($348 | 0)) {
        $379 = $348;
        label = 167;
       } else {
        $368 = ($$pre$i$i$i$i$i$i9$i$i$i | 0) == 0;
        if ($368) {
         $$0$i$i$i$i$i$i$i$i13$i$i$i = $348;
         while (1) {
          $373 = HEAP32[$$0$i$i$i$i$i$i$i$i13$i$i$i + 8 >> 2] | 0;
          if ((HEAP32[$373 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i13$i$i$i = $373; else {
           $$01$i$i$i$i$i$i$i$i15$i$i$i = $373;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i11$i$i$i = $$pre$i$i$i$i$i$i9$i$i$i;
         while (1) {
          $370 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11$i$i$i + 4 >> 2] | 0;
          if (!$370) {
           $$01$i$i$i$i$i$i$i$i15$i$i$i = $$0$i$i$i$i$i$i$i$i$i11$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i11$i$i$i = $370;
         }
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i15$i$i$i + 16 >> 2] | 0) >>> 0 < $366 >>> 0) {
         $379 = $$01$i$i$i$i$i$i$i$i15$i$i$i;
         label = 167;
        } else {
         if ($368) {
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $348;
          $$0$i$i$i$i1$i$i24$i$i$i = $348;
          $393 = $348;
          break;
         } else $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i = $$pre$i$i$i$i$i$i9$i$i$i;
         while (1) {
          $$idx2$val$i23$i$i$i$i$i$i22$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i20$i$i$i + 16 >> 2] | 0;
          if ($366 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i22$i$i$i >>> 0) {
           $383 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i20$i$i$i >> 2] | 0;
           if (!$383) {
            label = 173;
            break;
           } else {
            $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i = $383;
            continue;
           }
          }
          if ($$idx2$val$i23$i$i$i$i$i$i22$i$i$i >>> 0 >= $366 >>> 0) {
           label = 177;
           break;
          }
          $386 = $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i + 4 | 0;
          $387 = HEAP32[$386 >> 2] | 0;
          if (!$387) {
           label = 176;
           break;
          } else $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i = $387;
         }
         if ((label | 0) == 173) {
          label = 0;
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i;
          $$0$i$i$i$i1$i$i24$i$i$i = $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i;
          $393 = $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i;
          break;
         } else if ((label | 0) == 176) {
          label = 0;
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i;
          $$0$i$i$i$i1$i$i24$i$i$i = $386;
          $393 = $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i;
          break;
         } else if ((label | 0) == 177) {
          label = 0;
          HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i;
          $$0$i$i$i$i1$i$i24$i$i$i = $__parent$i$i$i$i$i2$i$i$i;
          $393 = $__nd$0$in$i21$i$i$i$i$i$i20$i$i$i;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 167) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i9$i$i$i) {
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $348;
         $$0$i$i$i$i1$i$i24$i$i$i = $348;
         $393 = $348;
         break;
        } else {
         HEAP32[$__parent$i$i$i$i$i2$i$i$i >> 2] = $379;
         $$0$i$i$i$i1$i$i24$i$i$i = $379 + 4 | 0;
         $393 = $379;
         break;
        }
       } while (0);
       $389 = HEAP32[$$0$i$i$i$i1$i$i24$i$i$i >> 2] | 0;
       if (!$389) {
        HEAP32[$351 >> 2] = 0;
        HEAP32[$351 + 4 >> 2] = 0;
        HEAP32[$351 + 8 >> 2] = $393;
        HEAP32[$$0$i$i$i$i1$i$i24$i$i$i >> 2] = $351;
        $395 = HEAP32[HEAP32[$347 >> 2] >> 2] | 0;
        if (!$395) $398 = $351; else {
         HEAP32[$347 >> 2] = $395;
         $398 = HEAP32[$$0$i$i$i$i1$i$i24$i$i$i >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$348 >> 2] | 0, $398);
        HEAP32[$349 >> 2] = (HEAP32[$349 >> 2] | 0) + 1;
       } else if (!(($389 | 0) == ($351 | 0) | ($351 | 0) == 0)) __ZdlPv($351);
       $404 = HEAP32[$$idx$val$i15$i$i7$i$i$i + 4 >> 2] | 0;
       if (!$404) {
        $$0$i$i$i$i$i34$i$i$i = $$idx$val$i15$i$i7$i$i$i;
        while (1) {
         $409 = HEAP32[$$0$i$i$i$i$i34$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$409 >> 2] | 0) == ($$0$i$i$i$i$i34$i$i$i | 0)) {
          $$01$i$i$i$i$i36$i$i$i = $409;
          break;
         } else $$0$i$i$i$i$i34$i$i$i = $409;
        }
       } else {
        $$0$i$i$i$i$i$i32$i$i$i = $404;
        while (1) {
         $406 = HEAP32[$$0$i$i$i$i$i$i32$i$i$i >> 2] | 0;
         if (!$406) {
          $$01$i$i$i$i$i36$i$i$i = $$0$i$i$i$i$i$i32$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i32$i$i$i = $406;
        }
       }
       if (($$01$i$i$i$i$i36$i$i$i | 0) == ($212 | 0)) break L252; else $$idx$val$i15$i$i7$i$i$i = $$01$i$i$i$i$i36$i$i$i;
      }
      $416 = ___cxa_find_matching_catch() | 0;
      $417 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($347, HEAP32[$348 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($279, HEAP32[$280 >> 2] | 0);
      $$0$i$i$i = $417;
      $$01$i$i$i = $416;
      break L250;
     } while (0);
     $420 = $this + 20 | 0;
     $421 = $this + 24 | 0;
     $422 = HEAP32[$421 >> 2] | 0;
     $423 = $this + 28 | 0;
     $424 = HEAP32[$423 >> 2] | 0;
     if ($422 >>> 0 < $424 >>> 0) {
      if (!$422) $428 = 0; else {
       HEAP32[$422 >> 2] = $276;
       $428 = HEAP32[$421 >> 2] | 0;
      }
      $427 = $428 + 4 | 0;
      HEAP32[$421 >> 2] = $427;
      $$idx$pre$phi$i$iZZ2D = $420;
      $$idx1$val$i$i = $427;
     } else {
      $this$idx2$val$i$i$i$i = HEAP32[$420 >> 2] | 0;
      $433 = ($422 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
      if ($433 >>> 0 > 1073741823) {
       __THREW__ = 0;
       invoke_vi(181, $420 | 0);
       $435 = __THREW__;
       __THREW__ = 0;
       if ($435 & 1) {
        label = 226;
        break L200;
       }
       $$idx1$val$i$i$i$i$i$i = HEAP32[$423 >> 2] | 0;
       $this$idx$val$i$i$i$i = HEAP32[$420 >> 2] | 0;
      } else {
       $$idx1$val$i$i$i$i$i$i = $424;
       $this$idx$val$i$i$i$i = $this$idx2$val$i$i$i$i;
      }
      $438 = $this$idx$val$i$i$i$i;
      $439 = $$idx1$val$i$i$i$i$i$i - $438 | 0;
      if ($439 >> 2 >>> 0 < 536870911) {
       $445 = $439 >> 1;
       $447 = $445 >>> 0 < $433 >>> 0 ? $433 : $445;
       $450 = (HEAP32[$421 >> 2] | 0) - $438 >> 2;
       if (!$447) {
        $$0$i8$i$i$i$i = 0;
        $457 = 0;
        $458 = $450;
       } else {
        $$0$i7$i$i$i$i = $447;
        $551 = $450;
        label = 202;
       }
      } else {
       $$0$i7$i$i$i$i = 1073741823;
       $551 = (HEAP32[$421 >> 2] | 0) - $438 >> 2;
       label = 202;
      }
      if ((label | 0) == 202) {
       __THREW__ = 0;
       $453 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
       $454 = __THREW__;
       __THREW__ = 0;
       if ($454 & 1) {
        label = 226;
        break L200;
       }
       $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
       $457 = $453;
       $458 = $551;
      }
      $456 = $457 + ($458 << 2) | 0;
      if ($456) HEAP32[$456 >> 2] = $276;
      $461 = $457 + ($458 + 1 << 2) | 0;
      $462 = HEAP32[$420 >> 2] | 0;
      $466 = (HEAP32[$421 >> 2] | 0) - $462 | 0;
      $468 = $457 + ($458 - ($466 >> 2) << 2) | 0;
      _memcpy($468 | 0, $462 | 0, $466 | 0) | 0;
      HEAP32[$420 >> 2] = $468;
      HEAP32[$421 >> 2] = $461;
      HEAP32[$423 >> 2] = $457 + ($$0$i8$i$i$i$i << 2);
      if (!$462) {
       $$idx$pre$phi$i$iZZ2D = $420;
       $$idx1$val$i$i = $461;
      } else {
       __ZdlPv($462);
       $$idx$pre$phi$i$iZZ2D = $420;
       $$idx1$val$i$i = HEAP32[$421 >> 2] | 0;
      }
     }
     $470 = $this + 16 | 0;
     HEAP8[$276 + 4 >> 0] = HEAP8[$470 >> 0] | 0;
     $477 = $this + 48 | 0;
     HEAP32[$477 >> 2] = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$210 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$141 >> 2] | 0);
     $480 = HEAP32[$477 >> 2] | 0;
     if ($480 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
      $541 = $agg$result + 8 | 0;
      HEAP32[$541 >> 2] = $276;
      $542 = HEAP32[$74 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $542);
      $543 = HEAP32[$4 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $543);
      STACKTOP = sp;
      return;
     }
     $486 = $this + 44 | 0;
     if (!(+($480 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$486 >> 2] | 0) >>> 0))) {
      $541 = $agg$result + 8 | 0;
      HEAP32[$541 >> 2] = $276;
      $542 = HEAP32[$74 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $542);
      $543 = HEAP32[$4 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $543);
      STACKTOP = sp;
      return;
     }
     __THREW__ = 0;
     invoke_vii(61, $this | 0, $276 | 0);
     $491 = __THREW__;
     __THREW__ = 0;
     do if (!($491 & 1)) {
      __THREW__ = 0;
      invoke_vii(62, $this + 72 | 0, $this | 0);
      $494 = __THREW__;
      __THREW__ = 0;
      if (!($494 & 1)) {
       if (HEAP32[$this + 56 >> 2] & 16) {
        __THREW__ = 0;
        invoke_vii(61, $this | 0, HEAP32[$this + 64 >> 2] | 0);
        $502 = __THREW__;
        __THREW__ = 0;
        if ($502 & 1) break;
       }
       $505 = (HEAP8[$470 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$470 >> 0] = $505;
       $$idx6$i$i = $this + 20 | 0;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$421 >> 2] | 0;
       L335 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $$idx7$val18$i$i = $$idx7$val12$i$i;
        $512 = $505;
        $i$013$i$i = 0;
        while (1) {
         $508 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$508 + 4 >> 0] | 0) == $512 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx7$val18$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$508) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx7$val18$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$508 >> 2] | 0) + 4 >> 2] & 255]($508);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$421 >> 2] | 0;
          }
          $521 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($521 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $526 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($521 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $526 = HEAP32[$421 >> 2] | 0;
          }
          $scevgep4$i$i$i$i$i = $526 + -4 | 0;
          HEAP32[$421 >> 2] = $scevgep4$i$i$i$i$i;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $528 = $i$1$i$i + 1 | 0;
         $532 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($528 >>> 0 >= $532 >>> 0) {
          $$lcssa$i$i = $532;
          break L335;
         }
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $$idx7$val18$i$i = $$idx7$val$i$i;
         $512 = HEAP8[$470 >> 0] | 0;
         $i$013$i$i = $528;
        }
       } while (0);
       HEAP32[$477 >> 2] = $$lcssa$i$i;
       HEAP32[$486 >> 2] = $$lcssa$i$i;
       $541 = $agg$result + 8 | 0;
       HEAP32[$541 >> 2] = $276;
       $542 = HEAP32[$74 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $542);
       $543 = HEAP32[$4 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $543);
       STACKTOP = sp;
       return;
      }
     } while (0);
     $547 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body49$index8Z2D = tempRet0;
     $eh$lpad$body49$indexZ2D = $547;
     break L148;
    } while (0);
    __ZdlPv($276);
    $eh$lpad$body43$i$index2Z2D = $$0$i$i$i;
    $eh$lpad$body43$i$indexZ2D = $$01$i$i$i;
   } while (0);
   if ((label | 0) == 226) {
    $537 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body43$i$index2Z2D = tempRet0;
    $eh$lpad$body43$i$indexZ2D = $537;
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$210 >> 2] | 0);
   $$0$i = $eh$lpad$body43$i$index2Z2D;
   $$01$i = $eh$lpad$body43$i$indexZ2D;
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$141 >> 2] | 0);
  $eh$lpad$body49$index8Z2D = $$0$i;
  $eh$lpad$body49$indexZ2D = $$01$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$74 >> 2] | 0);
 $$0 = $eh$lpad$body49$index8Z2D;
 $$01 = $eh$lpad$body49$indexZ2D;
 $550 = HEAP32[$4 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $550);
 ___resumeException($$01 | 0);
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i117 = 0, $$0$i$i$i$i149 = 0, $$0$i$i$i$i174 = 0, $$0$i$i$i$i22 = 0, $$0$i$i$i$i43 = 0, $$0$i$i$i$i83 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i123 = 0, $$0$i$i1$i$i155 = 0, $$0$i$i1$i$i180 = 0, $$0$i$i1$i$i28 = 0, $$0$i$i1$i$i49 = 0, $$0$i$i1$i$i89 = 0, $$0$i$i101 = 0, $$0$i$i110 = 0, $$0$i$i113 = 0, $$0$i$i135 = 0, $$0$i$i146 = 0, $$0$i$i170 = 0, $$0$i$i37 = 0, $$0$i$i41 = 0, $$0$i$i58 = 0, $$0$i$i64 = 0, $$0$i$i69 = 0, $$0$i$i77 = 0, $$0$i$i80 = 0, $$291 = 0, $$pre$i3$i$i = 0, $$pre$i3$i$i125 = 0, $$pre$i3$i$i157 = 0, $$pre$i3$i$i182 = 0, $$pre$i3$i$i182268 = 0, $$pre$i3$i$i182269 = 0, $$pre$i3$i$i279$ph = 0, $$pre$i3$i$i279287 = 0, $$pre$i3$i$i51 = 0, $$pre$i3$i$i51260 = 0, $$pre$i3$i$i51262 = 0, $$pre$i3$i$i91 = 0, $$pre$i3$i$i91273$ph = 0, $$pre$i3$i$i91273284 = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $108 = 0, $11 = 0, $113 = 0, $116 = 0, $12 = 0, $123 = 0, $124 = 0, $128 = 0, $13 = 0, $131 = 0, $138 = 0, $139 = 0, $14 = 0, $143 = 0, $144 = 0, $146 = 0, $15 = 0, $153 = 0, $154 = 0, $16 = 0, $160 = 0, $161 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $172 = 0, $173 = 0, $177 = 0, $179 = 0, $18 = 0, $181 = 0, $185 = 0, $187 = 0, $192 = 0, $193 = 0, $198 = 0, $203 = 0, $208 = 0, $21 = 0, $210 = 0, $212 = 0, $215 = 0, $219 = 0, $220 = 0, $224 = 0, $229 = 0, $230 = 0, $231 = 0, $238 = 0, $241 = 0, $247 = 0, $252 = 0, $253 = 0, $257 = 0, $262 = 0, $263 = 0, $264 = 0, $271 = 0, $274 = 0, $28 = 0, $280 = 0, $282 = 0, $284 = 0, $29 = 0, $291 = 0, $292 = 0, $296 = 0, $3 = 0, $301 = 0, $302 = 0, $303 = 0, $306 = 0, $310 = 0, $313 = 0, $319 = 0, $324 = 0, $325 = 0, $33 = 0, $334 = 0, $335 = 0, $336 = 0, $343 = 0, $346 = 0, $352 = 0, $36 = 0, $361 = 0, $362 = 0, $371 = 0, $378 = 0, $379 = 0, $380 = 0, $386 = 0, $387 = 0, $391 = 0, $392 = 0, $397 = 0, $398 = 0, $400 = 0, $405 = 0, $406 = 0, $407 = 0, $414 = 0, $415 = 0, $416 = 0, $418 = 0, $421 = 0, $423 = 0, $43 = 0, $430 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $441 = 0, $444 = 0, $451 = 0, $452 = 0, $456 = 0, $459 = 0, $466 = 0, $467 = 0, $471 = 0, $472 = 0, $474 = 0, $481 = 0, $482 = 0, $487 = 0, $488 = 0, $489 = 0, $496 = 0, $500 = 0, $508 = 0, $509 = 0, $51 = 0, $513 = 0, $516 = 0, $52 = 0, $523 = 0, $524 = 0, $528 = 0, $531 = 0, $538 = 0, $539 = 0, $543 = 0, $544 = 0, $546 = 0, $553 = 0, $554 = 0, $560 = 0, $561 = 0, $563 = 0, $566 = 0, $569 = 0, $571 = 0, $577 = 0, $582 = 0, $584 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $590 = 0, $597 = 0, $6 = 0, $605 = 0, $607 = 0, $608 = 0, $609 = 0, $611 = 0, $614 = 0, $621 = 0, $622 = 0, $628 = 0, $635 = 0, $636 = 0, $640 = 0, $642 = 0, $649 = 0, $650 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $666 = 0, $669 = 0, $672 = 0, $679 = 0, $68 = 0, $680 = 0, $684 = 0, $687 = 0, $694 = 0, $695 = 0, $699 = 0, $7 = 0, $700 = 0, $702 = 0, $709 = 0, $71 = 0, $710 = 0, $716 = 0, $717 = 0, $724 = 0, $726 = 0, $728 = 0, $73 = 0, $735 = 0, $736 = 0, $739 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $75 = 0, $752 = 0, $764 = 0, $765 = 0, $766 = 0, $77 = 0, $773 = 0, $774 = 0, $777 = 0, $784 = 0, $785 = 0, $789 = 0, $792 = 0, $799 = 0, $8 = 0, $800 = 0, $804 = 0, $805 = 0, $807 = 0, $814 = 0, $815 = 0, $823 = 0, $828 = 0, $829 = 0, $830 = 0, $831 = 0, $838 = 0, $84 = 0, $841 = 0, $843 = 0, $848 = 0, $85 = 0, $851 = 0, $853 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $9 = 0, $91 = 0, $92 = 0, $94 = 0, $95 = 0, $96 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$1 = 0, $__nsn = 0, $__p$0250 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0252 = 0, $__trailing_sign$1 = 0, $__ts = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 496 | 0;
 $__gbuf = sp + 96 | 0;
 $__gb = sp + 88 | 0;
 $__gn = sp + 84 | 0;
 $__ge = sp + 80 | 0;
 $__pat = sp + 76 | 0;
 $__dp = sp + 72 | 0;
 $__ts = sp + 68 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__psn = sp + 32 | 0;
 $__nsn = sp + 20 | 0;
 $__spaces = sp + 8 | 0;
 $__fd = sp + 4 | 0;
 $__et = sp;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $1 = $__gb + 4 | 0;
 HEAP32[$1 >> 2] = 190;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 HEAP32[$__pat >> 2] = 0;
 HEAP32[$__grp + 0 >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym + 0 >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__psn + 0 >> 2] = 0;
 HEAP32[$__psn + 4 >> 2] = 0;
 HEAP32[$__psn + 8 >> 2] = 0;
 HEAP32[$__nsn + 0 >> 2] = 0;
 HEAP32[$__nsn + 4 >> 2] = 0;
 HEAP32[$__nsn + 8 >> 2] = 0;
 HEAP32[$__spaces + 0 >> 2] = 0;
 HEAP32[$__spaces + 4 >> 2] = 0;
 HEAP32[$__spaces + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viiiiiiiiii(2, $__intl | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__psn | 0, $__nsn | 0, $__fd | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $66 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $66;
  $lpad$phi$index8 = tempRet0;
 } else {
  HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
  $6 = $__nsn + 4 | 0;
  $7 = $__nsn + 8 | 0;
  $8 = $__psn + 4 | 0;
  $9 = $__psn + 8 | 0;
  $11 = ($__flags & 512 | 0) != 0;
  $12 = $__sym + 4 | 0;
  $13 = $__sym + 8 | 0;
  $14 = $__spaces + 4 | 0;
  $15 = $__spaces + 8 | 0;
  $16 = $__pat + 3 | 0;
  $17 = $__grp + 4 | 0;
  $855 = $__gbuf;
  $__p$0250 = 0;
  $__trailing_sign$0252 = 0;
  L4 : while (1) {
   $18 = HEAP32[$__b >> 2] | 0;
   do if (!$18) $856 = 1; else {
    $21 = HEAP32[$18 + 12 >> 2] | 0;
    if (($21 | 0) == (HEAP32[$18 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $28 = invoke_ii(HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] | 0, $18 | 0) | 0;
     $29 = __THREW__;
     __THREW__ = 0;
     if ($29 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i$i$i22 = $28;
    } else $$0$i$i$i$i22 = HEAP32[$21 >> 2] | 0;
    if (($$0$i$i$i$i22 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $856 = 1;
     break;
    } else {
     $856 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   $33 = HEAP32[$__e >> 2] | 0;
   do if (!$33) label = 16; else {
    $36 = HEAP32[$33 + 12 >> 2] | 0;
    if (($36 | 0) == (HEAP32[$33 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $43 = invoke_ii(HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] | 0, $33 | 0) | 0;
     $44 = __THREW__;
     __THREW__ = 0;
     if ($44 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i28 = $43;
    } else $$0$i$i1$i$i28 = HEAP32[$36 >> 2] | 0;
    if (($$0$i$i1$i$i28 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($856) {
     $858 = $33;
     break;
    } else {
     $843 = $855;
     $857 = $33;
     $__trailing_sign$0$lcssa = $__trailing_sign$0252;
     label = 291;
     break L4;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($856) {
     $843 = $855;
     $857 = 0;
     $__trailing_sign$0$lcssa = $__trailing_sign$0252;
     label = 291;
     break;
    } else $858 = 0;
   }
   L28 : do switch (HEAP8[$__pat + $__p$0250 >> 0] | 0) {
   case 4:
    {
     $51 = HEAP32[$__ts >> 2] | 0;
     $$pre$i3$i$i157 = $858;
     $528 = $858;
     $582 = $855;
     $__ng$0 = 0;
     L30 : while (1) {
      $513 = HEAP32[$__b >> 2] | 0;
      do if (!$513) $543 = 1; else {
       $516 = HEAP32[$513 + 12 >> 2] | 0;
       if (($516 | 0) == (HEAP32[$513 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $523 = invoke_ii(HEAP32[(HEAP32[$513 >> 2] | 0) + 36 >> 2] | 0, $513 | 0) | 0;
        $524 = __THREW__;
        __THREW__ = 0;
        if ($524 & 1) {
         label = 21;
         break L4;
        } else $$0$i$i$i$i149 = $523;
       } else $$0$i$i$i$i149 = HEAP32[$516 >> 2] | 0;
       if (($$0$i$i$i$i149 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $543 = 1;
        break;
       } else {
        $543 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$528) {
       $864 = $$pre$i3$i$i157;
       label = 207;
      } else {
       $531 = HEAP32[$528 + 12 >> 2] | 0;
       if (($531 | 0) == (HEAP32[$528 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $538 = invoke_ii(HEAP32[(HEAP32[$528 >> 2] | 0) + 36 >> 2] | 0, $528 | 0) | 0;
        $539 = __THREW__;
        __THREW__ = 0;
        if ($539 & 1) {
         label = 21;
         break L4;
        } else $$0$i$i1$i$i155 = $538;
       } else $$0$i$i1$i$i155 = HEAP32[$531 >> 2] | 0;
       if (($$0$i$i1$i$i155 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $864 = 0;
        label = 207;
        break;
       } else if ($543 ^ ($$pre$i3$i$i157 | 0) == 0) {
        $865 = $$pre$i3$i$i157;
        $866 = $$pre$i3$i$i157;
        break;
       } else {
        $$pre$i3$i$i125 = $$pre$i3$i$i157;
        break L30;
       }
      } while (0);
      if ((label | 0) == 207) {
       label = 0;
       if ($543) {
        $$pre$i3$i$i125 = $864;
        break;
       } else {
        $865 = $864;
        $866 = 0;
       }
      }
      $544 = HEAP32[$__b >> 2] | 0;
      $546 = HEAP32[$544 + 12 >> 2] | 0;
      if (($546 | 0) == (HEAP32[$544 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $553 = invoke_ii(HEAP32[(HEAP32[$544 >> 2] | 0) + 36 >> 2] | 0, $544 | 0) | 0;
       $554 = __THREW__;
       __THREW__ = 0;
       if ($554 & 1) {
        label = 21;
        break L4;
       } else $$0$i$i146 = $553;
      } else $$0$i$i146 = HEAP32[$546 >> 2] | 0;
      __THREW__ = 0;
      $560 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 2048, $$0$i$i146 | 0) | 0;
      $561 = __THREW__;
      __THREW__ = 0;
      if ($561 & 1) {
       label = 21;
       break L4;
      }
      if ($560) {
       $563 = HEAP32[$__wn >> 2] | 0;
       if (($563 | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(19, $__wb | 0, $__wn | 0, $0 | 0);
        $566 = __THREW__;
        __THREW__ = 0;
        if ($566 & 1) {
         label = 21;
         break L4;
        }
        $569 = HEAP32[$__wn >> 2] | 0;
       } else $569 = $563;
       HEAP32[$__wn >> 2] = $569 + 4;
       HEAP32[$569 >> 2] = $$0$i$i146;
       $867 = $582;
       $__ng$1 = $__ng$0 + 1 | 0;
      } else {
       $571 = HEAP8[$__grp >> 0] | 0;
       if (!($571 & 1)) $577 = ($571 & 255) >>> 1; else $577 = HEAP32[$17 >> 2] | 0;
       if (!(($577 | 0) != 0 & ($__ng$0 | 0) != 0 & ($$0$i$i146 | 0) == ($51 | 0))) {
        $$pre$i3$i$i125 = $865;
        break;
       }
       if (($582 | 0) == (HEAP32[$__ge >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(18, $__gb | 0, $__gn | 0, $__ge | 0);
        $584 = __THREW__;
        __THREW__ = 0;
        if ($584 & 1) {
         label = 21;
         break L4;
        }
        $587 = HEAP32[$__gn >> 2] | 0;
       } else $587 = $582;
       $586 = $587 + 4 | 0;
       HEAP32[$__gn >> 2] = $586;
       HEAP32[$587 >> 2] = $__ng$0;
       $867 = $586;
       $__ng$1 = 0;
      }
      $588 = HEAP32[$__b >> 2] | 0;
      $589 = $588 + 12 | 0;
      $590 = HEAP32[$589 >> 2] | 0;
      if (($590 | 0) == (HEAP32[$588 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$588 >> 2] | 0) + 40 >> 2] | 0, $588 | 0) | 0;
       $597 = __THREW__;
       __THREW__ = 0;
       if ($597 & 1) {
        label = 21;
        break L4;
       } else {
        $$pre$i3$i$i157 = $865;
        $528 = $866;
        $582 = $867;
        $__ng$0 = $__ng$1;
        continue;
       }
      } else {
       HEAP32[$589 >> 2] = $590 + 4;
       $$pre$i3$i$i157 = $865;
       $528 = $866;
       $582 = $867;
       $__ng$0 = $__ng$1;
       continue;
      }
     }
     if (($__ng$0 | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($582 | 0) : 0) {
      if (($582 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(18, $__gb | 0, $__gn | 0, $__ge | 0);
       $605 = __THREW__;
       __THREW__ = 0;
       if ($605 & 1) {
        label = 26;
        break L4;
       }
       $608 = HEAP32[$__gn >> 2] | 0;
      } else $608 = $582;
      $607 = $608 + 4 | 0;
      HEAP32[$__gn >> 2] = $607;
      HEAP32[$608 >> 2] = $__ng$0;
      $868 = $607;
     } else $868 = $582;
     $609 = HEAP32[$__fd >> 2] | 0;
     if (($609 | 0) > 0) {
      $611 = HEAP32[$__b >> 2] | 0;
      do if (!$611) $870 = 1; else {
       $614 = HEAP32[$611 + 12 >> 2] | 0;
       if (($614 | 0) == (HEAP32[$611 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $621 = invoke_ii(HEAP32[(HEAP32[$611 >> 2] | 0) + 36 >> 2] | 0, $611 | 0) | 0;
        $622 = __THREW__;
        __THREW__ = 0;
        if ($622 & 1) {
         label = 26;
         break L4;
        } else $$0$i$i$i$i117 = $621;
       } else $$0$i$i$i$i117 = HEAP32[$614 >> 2] | 0;
       if (($$0$i$i$i$i117 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $870 = 1;
        break;
       } else {
        $870 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$$pre$i3$i$i125) label = 248; else {
       $628 = HEAP32[$$pre$i3$i$i125 + 12 >> 2] | 0;
       if (($628 | 0) == (HEAP32[$$pre$i3$i$i125 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $635 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i125 >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i125 | 0) | 0;
        $636 = __THREW__;
        __THREW__ = 0;
        if ($636 & 1) {
         label = 26;
         break L4;
        } else $$0$i$i1$i$i123 = $635;
       } else $$0$i$i1$i$i123 = HEAP32[$628 >> 2] | 0;
       if (($$0$i$i1$i$i123 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 248;
        break;
       } else if ($870) {
        $871 = $$pre$i3$i$i125;
        break;
       } else {
        label = 254;
        break L4;
       }
      } while (0);
      if ((label | 0) == 248) {
       label = 0;
       if ($870) {
        label = 254;
        break L4;
       } else $871 = 0;
      }
      $640 = HEAP32[$__b >> 2] | 0;
      $642 = HEAP32[$640 + 12 >> 2] | 0;
      if (($642 | 0) == (HEAP32[$640 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $649 = invoke_ii(HEAP32[(HEAP32[$640 >> 2] | 0) + 36 >> 2] | 0, $640 | 0) | 0;
       $650 = __THREW__;
       __THREW__ = 0;
       if ($650 & 1) {
        label = 26;
        break L4;
       } else $$0$i$i110 = $649;
      } else $$0$i$i110 = HEAP32[$642 >> 2] | 0;
      if (($$0$i$i110 | 0) != (HEAP32[$__dp >> 2] | 0)) {
       label = 254;
       break L4;
      }
      $657 = HEAP32[$__b >> 2] | 0;
      $658 = $657 + 12 | 0;
      $659 = HEAP32[$658 >> 2] | 0;
      if (($659 | 0) == (HEAP32[$657 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$657 >> 2] | 0) + 40 >> 2] | 0, $657 | 0) | 0;
       $666 = __THREW__;
       __THREW__ = 0;
       if ($666 & 1) {
        label = 26;
        break L4;
       } else {
        $$pre$i3$i$i91 = $871;
        $684 = $871;
        $742 = $609;
       }
      } else {
       HEAP32[$658 >> 2] = $659 + 4;
       $$pre$i3$i$i91 = $871;
       $684 = $871;
       $742 = $609;
      }
      while (1) {
       $669 = HEAP32[$__b >> 2] | 0;
       do if (!$669) $699 = 1; else {
        $672 = HEAP32[$669 + 12 >> 2] | 0;
        if (($672 | 0) == (HEAP32[$669 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $679 = invoke_ii(HEAP32[(HEAP32[$669 >> 2] | 0) + 36 >> 2] | 0, $669 | 0) | 0;
         $680 = __THREW__;
         __THREW__ = 0;
         if ($680 & 1) {
          label = 22;
          break L4;
         } else $$0$i$i$i$i83 = $679;
        } else $$0$i$i$i$i83 = HEAP32[$672 >> 2] | 0;
        if (($$0$i$i$i$i83 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $699 = 1;
         break;
        } else {
         $699 = (HEAP32[$__b >> 2] | 0) == 0;
         break;
        }
       } while (0);
       do if (!$684) {
        $$pre$i3$i$i91273$ph = $$pre$i3$i$i91;
        label = 271;
       } else {
        $687 = HEAP32[$684 + 12 >> 2] | 0;
        if (($687 | 0) == (HEAP32[$684 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $694 = invoke_ii(HEAP32[(HEAP32[$684 >> 2] | 0) + 36 >> 2] | 0, $684 | 0) | 0;
         $695 = __THREW__;
         __THREW__ = 0;
         if ($695 & 1) {
          label = 22;
          break L4;
         } else $$0$i$i1$i$i89 = $694;
        } else $$0$i$i1$i$i89 = HEAP32[$687 >> 2] | 0;
        if (($$0$i$i1$i$i89 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i3$i$i91273$ph = 0;
         label = 271;
         break;
        } else if ($699 ^ ($$pre$i3$i$i91 | 0) == 0) {
         $$pre$i3$i$i91273284 = $$pre$i3$i$i91;
         $872 = $$pre$i3$i$i91;
         break;
        } else {
         label = 278;
         break L4;
        }
       } while (0);
       if ((label | 0) == 271) {
        label = 0;
        if ($699) {
         label = 278;
         break L4;
        } else {
         $$pre$i3$i$i91273284 = $$pre$i3$i$i91273$ph;
         $872 = 0;
        }
       }
       $700 = HEAP32[$__b >> 2] | 0;
       $702 = HEAP32[$700 + 12 >> 2] | 0;
       if (($702 | 0) == (HEAP32[$700 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $709 = invoke_ii(HEAP32[(HEAP32[$700 >> 2] | 0) + 36 >> 2] | 0, $700 | 0) | 0;
        $710 = __THREW__;
        __THREW__ = 0;
        if ($710 & 1) {
         label = 22;
         break L4;
        } else $$0$i$i77 = $709;
       } else $$0$i$i77 = HEAP32[$702 >> 2] | 0;
       __THREW__ = 0;
       $716 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 2048, $$0$i$i77 | 0) | 0;
       $717 = __THREW__;
       __THREW__ = 0;
       if ($717 & 1) {
        label = 22;
        break L4;
       }
       if (!$716) {
        label = 278;
        break L4;
       }
       if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(19, $__wb | 0, $__wn | 0, $0 | 0);
        $724 = __THREW__;
        __THREW__ = 0;
        if ($724 & 1) {
         label = 22;
         break L4;
        }
       }
       $726 = HEAP32[$__b >> 2] | 0;
       $728 = HEAP32[$726 + 12 >> 2] | 0;
       if (($728 | 0) == (HEAP32[$726 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $735 = invoke_ii(HEAP32[(HEAP32[$726 >> 2] | 0) + 36 >> 2] | 0, $726 | 0) | 0;
        $736 = __THREW__;
        __THREW__ = 0;
        if ($736 & 1) {
         label = 22;
         break L4;
        } else $$0$i$i69 = $735;
       } else $$0$i$i69 = HEAP32[$728 >> 2] | 0;
       $739 = HEAP32[$__wn >> 2] | 0;
       HEAP32[$__wn >> 2] = $739 + 4;
       HEAP32[$739 >> 2] = $$0$i$i69;
       $742 = $742 + -1 | 0;
       HEAP32[$__fd >> 2] = $742;
       $743 = HEAP32[$__b >> 2] | 0;
       $744 = $743 + 12 | 0;
       $745 = HEAP32[$744 >> 2] | 0;
       if (($745 | 0) == (HEAP32[$743 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$743 >> 2] | 0) + 40 >> 2] | 0, $743 | 0) | 0;
        $752 = __THREW__;
        __THREW__ = 0;
        if ($752 & 1) {
         label = 22;
         break L4;
        }
       } else HEAP32[$744 >> 2] = $745 + 4;
       if (($742 | 0) <= 0) {
        $869 = $$pre$i3$i$i91273284;
        break;
       } else {
        $$pre$i3$i$i91 = $$pre$i3$i$i91273284;
        $684 = $872;
       }
      }
     } else $869 = $$pre$i3$i$i125;
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
      label = 289;
      break L4;
     } else {
      $859 = $869;
      $860 = $868;
      $__trailing_sign$1 = $__trailing_sign$0252;
     }
     break;
    }
   case 0:
    {
     label = 43;
     break;
    }
   case 3:
    {
     $179 = HEAP8[$__psn >> 0] | 0;
     $181 = ($179 & 1) == 0;
     if ($181) $193 = ($179 & 255) >>> 1; else $193 = HEAP32[$8 >> 2] | 0;
     $185 = HEAP8[$__nsn >> 0] | 0;
     $187 = ($185 & 1) == 0;
     if ($187) $192 = ($185 & 255) >>> 1; else $192 = HEAP32[$6 >> 2] | 0;
     if (($193 | 0) == (0 - $192 | 0)) {
      $859 = $858;
      $860 = $855;
      $__trailing_sign$1 = $__trailing_sign$0252;
     } else {
      if ($181) $198 = ($179 & 255) >>> 1; else $198 = HEAP32[$8 >> 2] | 0;
      if ($198) {
       if ($187) $203 = ($185 & 255) >>> 1; else $203 = HEAP32[$6 >> 2] | 0;
       if ($203) {
        $282 = HEAP32[$__b >> 2] | 0;
        $284 = HEAP32[$282 + 12 >> 2] | 0;
        if (($284 | 0) == (HEAP32[$282 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $291 = invoke_ii(HEAP32[(HEAP32[$282 >> 2] | 0) + 36 >> 2] | 0, $282 | 0) | 0;
         $292 = __THREW__;
         __THREW__ = 0;
         if ($292 & 1) {
          label = 26;
          break L4;
         }
         $$0$i$i113 = $291;
         $296 = HEAP8[$__psn >> 0] | 0;
        } else {
         $$0$i$i113 = HEAP32[$284 >> 2] | 0;
         $296 = $179;
        }
        $301 = HEAP32[$__b >> 2] | 0;
        $302 = $301 + 12 | 0;
        $303 = HEAP32[$302 >> 2] | 0;
        $306 = ($303 | 0) == (HEAP32[$301 + 16 >> 2] | 0);
        if (($$0$i$i113 | 0) == (HEAP32[(($296 & 1) == 0 ? $8 : HEAP32[$9 >> 2] | 0) >> 2] | 0)) {
         if ($306) {
          __THREW__ = 0;
          invoke_ii(HEAP32[(HEAP32[$301 >> 2] | 0) + 40 >> 2] | 0, $301 | 0) | 0;
          $310 = __THREW__;
          __THREW__ = 0;
          if ($310 & 1) {
           label = 26;
           break L4;
          }
         } else HEAP32[$302 >> 2] = $303 + 4;
         $313 = HEAP8[$__psn >> 0] | 0;
         if (!($313 & 1)) $319 = ($313 & 255) >>> 1; else $319 = HEAP32[$8 >> 2] | 0;
         $859 = $858;
         $860 = $855;
         $__trailing_sign$1 = $319 >>> 0 > 1 ? $__psn : $__trailing_sign$0252;
         break L28;
        }
        if ($306) {
         __THREW__ = 0;
         $324 = invoke_ii(HEAP32[(HEAP32[$301 >> 2] | 0) + 36 >> 2] | 0, $301 | 0) | 0;
         $325 = __THREW__;
         __THREW__ = 0;
         if ($325 & 1) {
          label = 26;
          break L4;
         } else $$0$i$i135 = $324;
        } else $$0$i$i135 = HEAP32[$303 >> 2] | 0;
        if (($$0$i$i135 | 0) != (HEAP32[((HEAP8[$__nsn >> 0] & 1) == 0 ? $6 : HEAP32[$7 >> 2] | 0) >> 2] | 0)) {
         label = 135;
         break L4;
        }
        $334 = HEAP32[$__b >> 2] | 0;
        $335 = $334 + 12 | 0;
        $336 = HEAP32[$335 >> 2] | 0;
        if (($336 | 0) == (HEAP32[$334 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_ii(HEAP32[(HEAP32[$334 >> 2] | 0) + 40 >> 2] | 0, $334 | 0) | 0;
         $343 = __THREW__;
         __THREW__ = 0;
         if ($343 & 1) {
          label = 26;
          break L4;
         }
        } else HEAP32[$335 >> 2] = $336 + 4;
        HEAP8[$__neg >> 0] = 1;
        $346 = HEAP8[$__nsn >> 0] | 0;
        if (!($346 & 1)) $352 = ($346 & 255) >>> 1; else $352 = HEAP32[$6 >> 2] | 0;
        $859 = $858;
        $860 = $855;
        $__trailing_sign$1 = $352 >>> 0 > 1 ? $__nsn : $__trailing_sign$0252;
        break L28;
       }
      }
      if ($181) $208 = ($179 & 255) >>> 1; else $208 = HEAP32[$8 >> 2] | 0;
      $210 = HEAP32[$__b >> 2] | 0;
      $212 = HEAP32[$210 + 12 >> 2] | 0;
      $215 = ($212 | 0) == (HEAP32[$210 + 16 >> 2] | 0);
      if (!$208) {
       if ($215) {
        __THREW__ = 0;
        $252 = invoke_ii(HEAP32[(HEAP32[$210 >> 2] | 0) + 36 >> 2] | 0, $210 | 0) | 0;
        $253 = __THREW__;
        __THREW__ = 0;
        if ($253 & 1) {
         label = 26;
         break L4;
        }
        $$0$i$i101 = $252;
        $257 = HEAP8[$__nsn >> 0] | 0;
       } else {
        $$0$i$i101 = HEAP32[$212 >> 2] | 0;
        $257 = $185;
       }
       if (($$0$i$i101 | 0) != (HEAP32[(($257 & 1) == 0 ? $6 : HEAP32[$7 >> 2] | 0) >> 2] | 0)) {
        $859 = $858;
        $860 = $855;
        $__trailing_sign$1 = $__trailing_sign$0252;
        break L28;
       }
       $262 = HEAP32[$__b >> 2] | 0;
       $263 = $262 + 12 | 0;
       $264 = HEAP32[$263 >> 2] | 0;
       if (($264 | 0) == (HEAP32[$262 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$262 >> 2] | 0) + 40 >> 2] | 0, $262 | 0) | 0;
        $271 = __THREW__;
        __THREW__ = 0;
        if ($271 & 1) {
         label = 26;
         break L4;
        }
       } else HEAP32[$263 >> 2] = $264 + 4;
       HEAP8[$__neg >> 0] = 1;
       $274 = HEAP8[$__nsn >> 0] | 0;
       if (!($274 & 1)) $280 = ($274 & 255) >>> 1; else $280 = HEAP32[$6 >> 2] | 0;
       $859 = $858;
       $860 = $855;
       $__trailing_sign$1 = $280 >>> 0 > 1 ? $__nsn : $__trailing_sign$0252;
       break L28;
      }
      if ($215) {
       __THREW__ = 0;
       $219 = invoke_ii(HEAP32[(HEAP32[$210 >> 2] | 0) + 36 >> 2] | 0, $210 | 0) | 0;
       $220 = __THREW__;
       __THREW__ = 0;
       if ($220 & 1) {
        label = 26;
        break L4;
       }
       $$0$i$i80 = $219;
       $224 = HEAP8[$__psn >> 0] | 0;
      } else {
       $$0$i$i80 = HEAP32[$212 >> 2] | 0;
       $224 = $179;
      }
      if (($$0$i$i80 | 0) != (HEAP32[(($224 & 1) == 0 ? $8 : HEAP32[$9 >> 2] | 0) >> 2] | 0)) {
       HEAP8[$__neg >> 0] = 1;
       $859 = $858;
       $860 = $855;
       $__trailing_sign$1 = $__trailing_sign$0252;
       break L28;
      }
      $229 = HEAP32[$__b >> 2] | 0;
      $230 = $229 + 12 | 0;
      $231 = HEAP32[$230 >> 2] | 0;
      if (($231 | 0) == (HEAP32[$229 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$229 >> 2] | 0) + 40 >> 2] | 0, $229 | 0) | 0;
       $238 = __THREW__;
       __THREW__ = 0;
       if ($238 & 1) {
        label = 26;
        break L4;
       }
      } else HEAP32[$230 >> 2] = $231 + 4;
      $241 = HEAP8[$__psn >> 0] | 0;
      if (!($241 & 1)) $247 = ($241 & 255) >>> 1; else $247 = HEAP32[$8 >> 2] | 0;
      $859 = $858;
      $860 = $855;
      $__trailing_sign$1 = $247 >>> 0 > 1 ? $__psn : $__trailing_sign$0252;
     }
     break;
    }
   case 1:
    {
     if (($__p$0250 | 0) == 3) {
      $843 = $855;
      $857 = $858;
      $__trailing_sign$0$lcssa = $__trailing_sign$0252;
      label = 291;
      break L4;
     }
     $75 = HEAP32[$__b >> 2] | 0;
     $77 = HEAP32[$75 + 12 >> 2] | 0;
     if (($77 | 0) == (HEAP32[$75 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $84 = invoke_ii(HEAP32[(HEAP32[$75 >> 2] | 0) + 36 >> 2] | 0, $75 | 0) | 0;
      $85 = __THREW__;
      __THREW__ = 0;
      if ($85 & 1) {
       label = 26;
       break L4;
      } else $$0$i$i37 = $84;
     } else $$0$i$i37 = HEAP32[$77 >> 2] | 0;
     __THREW__ = 0;
     $91 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, $$0$i$i37 | 0) | 0;
     $92 = __THREW__;
     __THREW__ = 0;
     if ($92 & 1) {
      label = 26;
      break L4;
     }
     if (!$91) {
      label = 42;
      break L4;
     }
     $94 = HEAP32[$__b >> 2] | 0;
     $95 = $94 + 12 | 0;
     $96 = HEAP32[$95 >> 2] | 0;
     if (($96 | 0) == (HEAP32[$94 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $103 = invoke_ii(HEAP32[(HEAP32[$94 >> 2] | 0) + 40 >> 2] | 0, $94 | 0) | 0;
      $104 = __THREW__;
      __THREW__ = 0;
      if ($104 & 1) {
       label = 26;
       break L4;
      } else $$0$i$i41 = $103;
     } else {
      HEAP32[$95 >> 2] = $96 + 4;
      $$0$i$i41 = HEAP32[$96 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_vii(75, $__spaces | 0, $$0$i$i41 | 0);
     $108 = __THREW__;
     __THREW__ = 0;
     if ($108 & 1) {
      label = 26;
      break L4;
     } else label = 43;
     break;
    }
   case 2:
    {
     if (!(($__trailing_sign$0252 | 0) != 0 | $__p$0250 >>> 0 < 2)) {
      if (($__p$0250 | 0) == 2) $361 = (HEAP8[$16 >> 0] | 0) != 0; else $361 = 0;
      if (!($11 | $361)) {
       $859 = $858;
       $860 = $855;
       $__trailing_sign$1 = 0;
       break L28;
      }
     }
     $362 = HEAP8[$__sym >> 0] | 0;
     $$291 = ($362 & 1) == 0 ? $12 : HEAP32[$13 >> 2] | 0;
     L268 : do if (!$__p$0250) {
      $$pre$i3$i$i182 = $858;
      $430 = $362;
      $439 = $$291;
      $456 = $858;
     } else if ((HEAPU8[$__pat + ($__p$0250 + -1) >> 0] | 0) < 2) {
      $371 = $362;
      $380 = $$291;
      while (1) {
       if (!($371 & 1)) {
        $378 = $12;
        $379 = ($371 & 255) >>> 1;
       } else {
        $378 = HEAP32[$13 >> 2] | 0;
        $379 = HEAP32[$12 >> 2] | 0;
       }
       if (($380 | 0) == ($378 + ($379 << 2) | 0)) {
        $391 = $371;
        break;
       }
       __THREW__ = 0;
       $386 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, HEAP32[$380 >> 2] | 0) | 0;
       $387 = __THREW__;
       __THREW__ = 0;
       if ($387 & 1) {
        label = 23;
        break L4;
       }
       if (!$386) {
        label = 148;
        break;
       }
       $371 = HEAP8[$__sym >> 0] | 0;
       $380 = $380 + 4 | 0;
      }
      if ((label | 0) == 148) {
       label = 0;
       $391 = HEAP8[$__sym >> 0] | 0;
      }
      $392 = ($391 & 1) == 0;
      $397 = $380 - ($392 ? $12 : HEAP32[$13 >> 2] | 0) >> 2;
      $398 = HEAP8[$__spaces >> 0] | 0;
      $400 = ($398 & 1) == 0;
      if ($400) $405 = ($398 & 255) >>> 1; else $405 = HEAP32[$14 >> 2] | 0;
      L286 : do if ($397 >>> 0 <= $405 >>> 0) {
       if ($400) {
        $415 = $14;
        $416 = ($398 & 255) >>> 1;
        $418 = $14 + ((($398 & 255) >>> 1) - $397 << 2) | 0;
       } else {
        $406 = HEAP32[$15 >> 2] | 0;
        $407 = HEAP32[$14 >> 2] | 0;
        $415 = $406;
        $416 = $407;
        $418 = $406 + ($407 - $397 << 2) | 0;
       }
       $414 = $415 + ($416 << 2) | 0;
       if (($418 | 0) == ($414 | 0)) {
        $$pre$i3$i$i182 = $858;
        $430 = $391;
        $439 = $380;
        $456 = $858;
        break L268;
       } else {
        $421 = $418;
        $423 = $392 ? $12 : HEAP32[$13 >> 2] | 0;
       }
       while (1) {
        if ((HEAP32[$421 >> 2] | 0) != (HEAP32[$423 >> 2] | 0)) break L286;
        $421 = $421 + 4 | 0;
        if (($421 | 0) == ($414 | 0)) {
         $$pre$i3$i$i182 = $858;
         $430 = $391;
         $439 = $380;
         $456 = $858;
         break L268;
        } else $423 = $423 + 4 | 0;
       }
      } while (0);
      $$pre$i3$i$i182 = $858;
      $430 = $391;
      $439 = $392 ? $12 : HEAP32[$13 >> 2] | 0;
      $456 = $858;
     } else {
      $$pre$i3$i$i182 = $858;
      $430 = $362;
      $439 = $$291;
      $456 = $858;
     } while (0);
     L296 : while (1) {
      if (!($430 & 1)) {
       $437 = $12;
       $438 = ($430 & 255) >>> 1;
      } else {
       $437 = HEAP32[$13 >> 2] | 0;
       $438 = HEAP32[$12 >> 2] | 0;
      }
      if (($439 | 0) == ($437 + ($438 << 2) | 0)) {
       $862 = $$pre$i3$i$i182;
       break;
      }
      $441 = HEAP32[$__b >> 2] | 0;
      do if (!$441) $471 = 1; else {
       $444 = HEAP32[$441 + 12 >> 2] | 0;
       if (($444 | 0) == (HEAP32[$441 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $451 = invoke_ii(HEAP32[(HEAP32[$441 >> 2] | 0) + 36 >> 2] | 0, $441 | 0) | 0;
        $452 = __THREW__;
        __THREW__ = 0;
        if ($452 & 1) {
         label = 24;
         break L4;
        } else $$0$i$i$i$i174 = $451;
       } else $$0$i$i$i$i174 = HEAP32[$444 >> 2] | 0;
       if (($$0$i$i$i$i174 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $471 = 1;
        break;
       } else {
        $471 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$456) {
       $$pre$i3$i$i182269 = $$pre$i3$i$i182;
       label = 178;
      } else {
       $459 = HEAP32[$456 + 12 >> 2] | 0;
       if (($459 | 0) == (HEAP32[$456 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $466 = invoke_ii(HEAP32[(HEAP32[$456 >> 2] | 0) + 36 >> 2] | 0, $456 | 0) | 0;
        $467 = __THREW__;
        __THREW__ = 0;
        if ($467 & 1) {
         label = 24;
         break L4;
        } else $$0$i$i1$i$i180 = $466;
       } else $$0$i$i1$i$i180 = HEAP32[$459 >> 2] | 0;
       if (($$0$i$i1$i$i180 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i3$i$i182269 = 0;
        label = 178;
        break;
       } else if ($471 ^ ($$pre$i3$i$i182 | 0) == 0) {
        $$pre$i3$i$i182268 = $$pre$i3$i$i182;
        $863 = $$pre$i3$i$i182;
        break;
       } else {
        $862 = $$pre$i3$i$i182;
        break L296;
       }
      } while (0);
      if ((label | 0) == 178) {
       label = 0;
       if ($471) {
        $862 = $$pre$i3$i$i182269;
        break;
       } else {
        $$pre$i3$i$i182268 = $$pre$i3$i$i182269;
        $863 = 0;
       }
      }
      $472 = HEAP32[$__b >> 2] | 0;
      $474 = HEAP32[$472 + 12 >> 2] | 0;
      if (($474 | 0) == (HEAP32[$472 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $481 = invoke_ii(HEAP32[(HEAP32[$472 >> 2] | 0) + 36 >> 2] | 0, $472 | 0) | 0;
       $482 = __THREW__;
       __THREW__ = 0;
       if ($482 & 1) {
        label = 24;
        break L4;
       } else $$0$i$i170 = $481;
      } else $$0$i$i170 = HEAP32[$474 >> 2] | 0;
      if (($$0$i$i170 | 0) != (HEAP32[$439 >> 2] | 0)) {
       $862 = $$pre$i3$i$i182268;
       break;
      }
      $487 = HEAP32[$__b >> 2] | 0;
      $488 = $487 + 12 | 0;
      $489 = HEAP32[$488 >> 2] | 0;
      if (($489 | 0) == (HEAP32[$487 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$487 >> 2] | 0) + 40 >> 2] | 0, $487 | 0) | 0;
       $496 = __THREW__;
       __THREW__ = 0;
       if ($496 & 1) {
        label = 24;
        break L4;
       }
      } else HEAP32[$488 >> 2] = $489 + 4;
      $$pre$i3$i$i182 = $$pre$i3$i$i182268;
      $430 = HEAP8[$__sym >> 0] | 0;
      $439 = $439 + 4 | 0;
      $456 = $863;
     }
     if ($11) {
      $500 = HEAP8[$__sym >> 0] | 0;
      if (!($500 & 1)) {
       $508 = $12;
       $509 = ($500 & 255) >>> 1;
      } else {
       $508 = HEAP32[$13 >> 2] | 0;
       $509 = HEAP32[$12 >> 2] | 0;
      }
      if (($439 | 0) == ($508 + ($509 << 2) | 0)) {
       $859 = $862;
       $860 = $855;
       $__trailing_sign$1 = $__trailing_sign$0252;
      } else {
       label = 193;
       break L4;
      }
     } else {
      $859 = $862;
      $860 = $855;
      $__trailing_sign$1 = $__trailing_sign$0252;
     }
     break;
    }
   default:
    {
     $859 = $858;
     $860 = $855;
     $__trailing_sign$1 = $__trailing_sign$0252;
    }
   } while (0);
   L340 : do if ((label | 0) == 43) {
    label = 0;
    if (($__p$0250 | 0) == 3) {
     $843 = $855;
     $857 = $858;
     $__trailing_sign$0$lcssa = $__trailing_sign$0252;
     label = 291;
     break L4;
    } else {
     $$pre$i3$i$i51 = $858;
     $128 = $858;
    }
    while (1) {
     $113 = HEAP32[$__b >> 2] | 0;
     do if (!$113) $143 = 1; else {
      $116 = HEAP32[$113 + 12 >> 2] | 0;
      if (($116 | 0) == (HEAP32[$113 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $123 = invoke_ii(HEAP32[(HEAP32[$113 >> 2] | 0) + 36 >> 2] | 0, $113 | 0) | 0;
       $124 = __THREW__;
       __THREW__ = 0;
       if ($124 & 1) {
        label = 25;
        break L4;
       } else $$0$i$i$i$i43 = $123;
      } else $$0$i$i$i$i43 = HEAP32[$116 >> 2] | 0;
      if (($$0$i$i$i$i43 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $143 = 1;
       break;
      } else {
       $143 = (HEAP32[$__b >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$128) {
      $$pre$i3$i$i51260 = $$pre$i3$i$i51;
      label = 57;
     } else {
      $131 = HEAP32[$128 + 12 >> 2] | 0;
      if (($131 | 0) == (HEAP32[$128 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $138 = invoke_ii(HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] | 0, $128 | 0) | 0;
       $139 = __THREW__;
       __THREW__ = 0;
       if ($139 & 1) {
        label = 25;
        break L4;
       } else $$0$i$i1$i$i49 = $138;
      } else $$0$i$i1$i$i49 = HEAP32[$131 >> 2] | 0;
      if (($$0$i$i1$i$i49 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i3$i$i51260 = 0;
       label = 57;
       break;
      } else if ($143 ^ ($$pre$i3$i$i51 | 0) == 0) {
       $$pre$i3$i$i51262 = $$pre$i3$i$i51;
       $861 = $$pre$i3$i$i51;
       break;
      } else {
       $859 = $$pre$i3$i$i51;
       $860 = $855;
       $__trailing_sign$1 = $__trailing_sign$0252;
       break L340;
      }
     } while (0);
     if ((label | 0) == 57) {
      label = 0;
      if ($143) {
       $859 = $$pre$i3$i$i51260;
       $860 = $855;
       $__trailing_sign$1 = $__trailing_sign$0252;
       break L340;
      } else {
       $$pre$i3$i$i51262 = $$pre$i3$i$i51260;
       $861 = 0;
      }
     }
     $144 = HEAP32[$__b >> 2] | 0;
     $146 = HEAP32[$144 + 12 >> 2] | 0;
     if (($146 | 0) == (HEAP32[$144 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $153 = invoke_ii(HEAP32[(HEAP32[$144 >> 2] | 0) + 36 >> 2] | 0, $144 | 0) | 0;
      $154 = __THREW__;
      __THREW__ = 0;
      if ($154 & 1) {
       label = 25;
       break L4;
      } else $$0$i$i58 = $153;
     } else $$0$i$i58 = HEAP32[$146 >> 2] | 0;
     __THREW__ = 0;
     $160 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, $$0$i$i58 | 0) | 0;
     $161 = __THREW__;
     __THREW__ = 0;
     if ($161 & 1) {
      label = 25;
      break L4;
     }
     if (!$160) {
      $859 = $$pre$i3$i$i51262;
      $860 = $855;
      $__trailing_sign$1 = $__trailing_sign$0252;
      break L340;
     }
     $163 = HEAP32[$__b >> 2] | 0;
     $164 = $163 + 12 | 0;
     $165 = HEAP32[$164 >> 2] | 0;
     if (($165 | 0) == (HEAP32[$163 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $172 = invoke_ii(HEAP32[(HEAP32[$163 >> 2] | 0) + 40 >> 2] | 0, $163 | 0) | 0;
      $173 = __THREW__;
      __THREW__ = 0;
      if ($173 & 1) {
       label = 25;
       break L4;
      } else $$0$i$i64 = $172;
     } else {
      HEAP32[$164 >> 2] = $165 + 4;
      $$0$i$i64 = HEAP32[$165 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_vii(75, $__spaces | 0, $$0$i$i64 | 0);
     $177 = __THREW__;
     __THREW__ = 0;
     if ($177 & 1) {
      label = 25;
      break L4;
     } else {
      $$pre$i3$i$i51 = $$pre$i3$i$i51262;
      $128 = $861;
     }
    }
   } while (0);
   $__p$0250 = $__p$0250 + 1 | 0;
   if ($__p$0250 >>> 0 >= 4) {
    $843 = $860;
    $857 = $859;
    $__trailing_sign$0$lcssa = $__trailing_sign$1;
    label = 291;
    break;
   } else {
    $855 = $860;
    $__trailing_sign$0252 = $__trailing_sign$1;
   }
  }
  L377 : switch (label | 0) {
  case 21:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 22:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 23:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 24:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 25:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 26:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 42:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 135:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 193:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 254:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 278:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 289:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 291:
   {
    L380 : do if ($__trailing_sign$0$lcssa) {
     $764 = $__trailing_sign$0$lcssa + 4 | 0;
     $765 = $__trailing_sign$0$lcssa + 8 | 0;
     $$pre$i3$i$i = $857;
     $789 = $857;
     $__i$0 = 1;
     L382 : while (1) {
      $766 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
      if (!($766 & 1)) $773 = ($766 & 255) >>> 1; else $773 = HEAP32[$764 >> 2] | 0;
      if ($__i$0 >>> 0 >= $773 >>> 0) break L380;
      $774 = HEAP32[$__b >> 2] | 0;
      do if (!$774) $804 = 1; else {
       $777 = HEAP32[$774 + 12 >> 2] | 0;
       if (($777 | 0) == (HEAP32[$774 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $784 = invoke_ii(HEAP32[(HEAP32[$774 >> 2] | 0) + 36 >> 2] | 0, $774 | 0) | 0;
        $785 = __THREW__;
        __THREW__ = 0;
        if ($785 & 1) {
         label = 20;
         break L382;
        } else $$0$i$i$i$i = $784;
       } else $$0$i$i$i$i = HEAP32[$777 >> 2] | 0;
       if (($$0$i$i$i$i | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $804 = 1;
        break;
       } else {
        $804 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$789) {
       $$pre$i3$i$i279$ph = $$pre$i3$i$i;
       label = 310;
      } else {
       $792 = HEAP32[$789 + 12 >> 2] | 0;
       if (($792 | 0) == (HEAP32[$789 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $799 = invoke_ii(HEAP32[(HEAP32[$789 >> 2] | 0) + 36 >> 2] | 0, $789 | 0) | 0;
        $800 = __THREW__;
        __THREW__ = 0;
        if ($800 & 1) {
         label = 20;
         break L382;
        } else $$0$i$i1$i$i = $799;
       } else $$0$i$i1$i$i = HEAP32[$792 >> 2] | 0;
       if (($$0$i$i1$i$i | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i3$i$i279$ph = 0;
        label = 310;
        break;
       } else if ($804 ^ ($$pre$i3$i$i | 0) == 0) {
        $$pre$i3$i$i279287 = $$pre$i3$i$i;
        $873 = $$pre$i3$i$i;
        break;
       } else {
        label = 318;
        break L382;
       }
      } while (0);
      if ((label | 0) == 310) {
       label = 0;
       if ($804) {
        label = 318;
        break;
       } else {
        $$pre$i3$i$i279287 = $$pre$i3$i$i279$ph;
        $873 = 0;
       }
      }
      $805 = HEAP32[$__b >> 2] | 0;
      $807 = HEAP32[$805 + 12 >> 2] | 0;
      if (($807 | 0) == (HEAP32[$805 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $814 = invoke_ii(HEAP32[(HEAP32[$805 >> 2] | 0) + 36 >> 2] | 0, $805 | 0) | 0;
       $815 = __THREW__;
       __THREW__ = 0;
       if ($815 & 1) {
        label = 20;
        break;
       } else $$0$i$i = $814;
      } else $$0$i$i = HEAP32[$807 >> 2] | 0;
      if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $823 = $764; else $823 = HEAP32[$765 >> 2] | 0;
      if (($$0$i$i | 0) != (HEAP32[$823 + ($__i$0 << 2) >> 2] | 0)) {
       label = 318;
       break;
      }
      $828 = $__i$0 + 1 | 0;
      $829 = HEAP32[$__b >> 2] | 0;
      $830 = $829 + 12 | 0;
      $831 = HEAP32[$830 >> 2] | 0;
      if (($831 | 0) == (HEAP32[$829 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$829 >> 2] | 0) + 40 >> 2] | 0, $829 | 0) | 0;
       $838 = __THREW__;
       __THREW__ = 0;
       if ($838 & 1) {
        label = 20;
        break;
       } else {
        $$pre$i3$i$i = $$pre$i3$i$i279287;
        $789 = $873;
        $__i$0 = $828;
        continue;
       }
      } else {
       HEAP32[$830 >> 2] = $831 + 4;
       $$pre$i3$i$i = $$pre$i3$i$i279287;
       $789 = $873;
       $__i$0 = $828;
       continue;
      }
     }
     if ((label | 0) == 20) {
      $52 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $52;
      $lpad$phi$index8 = tempRet0;
      break L1;
     } else if ((label | 0) == 318) {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
      break L377;
     }
    } while (0);
    $841 = HEAP32[$__gb >> 2] | 0;
    if (($841 | 0) == ($843 | 0)) $$0 = 1; else {
     HEAP32[$__et >> 2] = 0;
     __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $841, $843, $__et);
     if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
     }
    }
    break;
   }
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__spaces);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__nsn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__psn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
  $848 = HEAP32[$__gb >> 2] | 0;
  HEAP32[$__gb >> 2] = 0;
  if (!$848) {
   STACKTOP = sp;
   return $$0 | 0;
  }
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $848 | 0);
  $851 = __THREW__;
  __THREW__ = 0;
  if ($851 & 1) {
   $853 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($853);
  } else {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 $68 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if (!$68) ___resumeException($lpad$phi$index | 0);
 __THREW__ = 0;
 invoke_vi(HEAP32[$1 >> 2] | 0, $68 | 0);
 $71 = __THREW__;
 __THREW__ = 0;
 if ($71 & 1) {
  $73 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($73);
 } else ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i104 = 0, $$0$i$i111 = 0, $$0$i$i120 = 0, $$0$i$i130 = 0, $$0$i$i147 = 0, $$0$i$i33 = 0, $$0$i$i36 = 0, $$0$i$i49 = 0, $$0$i$i55 = 0, $$0$i$i58 = 0, $$0$i$i65 = 0, $$0$i$i84 = 0, $$0$i$i87 = 0, $$274 = 0, $$pre$i2$i$i = 0, $$pre$i2$i$i138 = 0, $$pre$i2$i$i155 = 0, $$pre$i2$i$i155249 = 0, $$pre$i2$i$i155250 = 0, $$pre$i2$i$i261$ph = 0, $$pre$i2$i$i261269 = 0, $$pre$i2$i$i43 = 0, $$pre$i2$i$i43240 = 0, $$pre$i2$i$i43242 = 0, $$pre$i2$i$i74 = 0, $$pre$i2$i$i74255$ph = 0, $$pre$i2$i$i74255266 = 0, $$pre$i2$i$i98 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $12 = 0, $120 = 0, $130 = 0, $131 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $146 = 0, $147 = 0, $15 = 0, $151 = 0, $153 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $172 = 0, $173 = 0, $174 = 0, $18 = 0, $181 = 0, $182 = 0, $188 = 0, $19 = 0, $190 = 0, $192 = 0, $196 = 0, $198 = 0, $20 = 0, $203 = 0, $204 = 0, $209 = 0, $21 = 0, $214 = 0, $219 = 0, $22 = 0, $221 = 0, $223 = 0, $226 = 0, $23 = 0, $230 = 0, $231 = 0, $237 = 0, $242 = 0, $243 = 0, $244 = 0, $251 = 0, $254 = 0, $260 = 0, $265 = 0, $266 = 0, $272 = 0, $277 = 0, $278 = 0, $279 = 0, $286 = 0, $289 = 0, $295 = 0, $297 = 0, $299 = 0, $3 = 0, $306 = 0, $307 = 0, $313 = 0, $318 = 0, $319 = 0, $320 = 0, $323 = 0, $327 = 0, $33 = 0, $330 = 0, $336 = 0, $34 = 0, $341 = 0, $342 = 0, $353 = 0, $354 = 0, $355 = 0, $362 = 0, $365 = 0, $37 = 0, $371 = 0, $38 = 0, $380 = 0, $381 = 0, $383 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $394 = 0, $396 = 0, $406 = 0, $407 = 0, $409 = 0, $414 = 0, $415 = 0, $416 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $429 = 0, $431 = 0, $437 = 0, $444 = 0, $445 = 0, $446 = 0, $448 = 0, $458 = 0, $459 = 0, $462 = 0, $463 = 0, $464 = 0, $474 = 0, $475 = 0, $479 = 0, $481 = 0, $488 = 0, $489 = 0, $49 = 0, $496 = 0, $497 = 0, $498 = 0, $50 = 0, $505 = 0, $509 = 0, $517 = 0, $518 = 0, $522 = 0, $532 = 0, $533 = 0, $536 = 0, $537 = 0, $538 = 0, $548 = 0, $549 = 0, $553 = 0, $555 = 0, $56 = 0, $562 = 0, $563 = 0, $567 = 0, $57 = 0, $574 = 0, $577 = 0, $580 = 0, $582 = 0, $588 = 0, $593 = 0, $595 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $600 = 0, $601 = 0, $608 = 0, $616 = 0, $618 = 0, $619 = 0, $620 = 0, $622 = 0, $632 = 0, $633 = 0, $636 = 0, $637 = 0, $647 = 0, $648 = 0, $652 = 0, $654 = 0, $661 = 0, $662 = 0, $671 = 0, $672 = 0, $673 = 0, $680 = 0, $683 = 0, $69 = 0, $693 = 0, $694 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $709 = 0, $71 = 0, $710 = 0, $714 = 0, $716 = 0, $723 = 0, $724 = 0, $74 = 0, $740 = 0, $742 = 0, $744 = 0, $751 = 0, $752 = 0, $757 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $770 = 0, $78 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $792 = 0, $793 = 0, $8 = 0, $80 = 0, $803 = 0, $804 = 0, $807 = 0, $808 = 0, $809 = 0, $819 = 0, $820 = 0, $824 = 0, $826 = 0, $833 = 0, $834 = 0, $844 = 0, $849 = 0, $850 = 0, $851 = 0, $852 = 0, $859 = 0, $862 = 0, $864 = 0, $869 = 0, $87 = 0, $872 = 0, $874 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $890 = 0, $891 = 0, $892 = 0, $9 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$1 = 0, $__nsn = 0, $__p$0232 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0234 = 0, $__trailing_sign$1 = 0, $__ts = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 496 | 0;
 $0 = sp + 488 | 0;
 $__gbuf = sp + 88 | 0;
 $__gb = sp + 80 | 0;
 $__gn = sp + 76 | 0;
 $__ge = sp + 72 | 0;
 $__pat = sp + 68 | 0;
 $__dp = sp + 493 | 0;
 $__ts = sp + 492 | 0;
 $__grp = sp + 56 | 0;
 $__sym = sp + 44 | 0;
 $__psn = sp + 32 | 0;
 $__nsn = sp + 20 | 0;
 $__spaces = sp + 8 | 0;
 $__fd = sp + 4 | 0;
 $__et = sp;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $1 = $__gb + 4 | 0;
 HEAP32[$1 >> 2] = 190;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 HEAP32[$__pat >> 2] = 0;
 HEAP32[$__grp + 0 >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym + 0 >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__psn + 0 >> 2] = 0;
 HEAP32[$__psn + 4 >> 2] = 0;
 HEAP32[$__psn + 8 >> 2] = 0;
 HEAP32[$__nsn + 0 >> 2] = 0;
 HEAP32[$__nsn + 4 >> 2] = 0;
 HEAP32[$__nsn + 8 >> 2] = 0;
 HEAP32[$__spaces + 0 >> 2] = 0;
 HEAP32[$__spaces + 4 >> 2] = 0;
 HEAP32[$__spaces + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viiiiiiiiii(1, $__intl | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__psn | 0, $__nsn | 0, $__fd | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $69 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $69;
  $lpad$phi$index7 = tempRet0;
 } else {
  HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
  $6 = $__ct + 8 | 0;
  $7 = $__nsn + 1 | 0;
  $8 = $__nsn + 4 | 0;
  $9 = $__nsn + 8 | 0;
  $10 = $__psn + 1 | 0;
  $11 = $__psn + 4 | 0;
  $12 = $__psn + 8 | 0;
  $14 = ($__flags & 512 | 0) != 0;
  $15 = $__sym + 1 | 0;
  $16 = $__sym + 8 | 0;
  $17 = $__sym + 4 | 0;
  $18 = $__spaces + 1 | 0;
  $19 = $__spaces + 8 | 0;
  $20 = $__spaces + 4 | 0;
  $21 = $__pat + 3 | 0;
  $22 = $__grp + 4 | 0;
  $876 = $__gbuf;
  $__p$0232 = 0;
  $__trailing_sign$0234 = 0;
  L4 : while (1) {
   $23 = HEAP32[$__b >> 2] | 0;
   do if (!$23) $37 = 0; else if ((HEAP32[$23 + 12 >> 2] | 0) == (HEAP32[$23 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $33 = invoke_ii(HEAP32[(HEAP32[$23 >> 2] | 0) + 36 >> 2] | 0, $23 | 0) | 0;
    $34 = __THREW__;
    __THREW__ = 0;
    if ($34 & 1) {
     label = 24;
     break L4;
    }
    if (($33 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $37 = 0;
     break;
    } else {
     $37 = HEAP32[$__b >> 2] | 0;
     break;
    }
   } else $37 = $23; while (0);
   $38 = ($37 | 0) == 0;
   $39 = HEAP32[$__e >> 2] | 0;
   do if (!$39) label = 15; else {
    if ((HEAP32[$39 + 12 >> 2] | 0) != (HEAP32[$39 + 16 >> 2] | 0)) if ($38) {
     $877 = $39;
     break;
    } else {
     $864 = $876;
     $878 = $39;
     $__trailing_sign$0$lcssa = $__trailing_sign$0234;
     label = 280;
     break L4;
    }
    __THREW__ = 0;
    $49 = invoke_ii(HEAP32[(HEAP32[$39 >> 2] | 0) + 36 >> 2] | 0, $39 | 0) | 0;
    $50 = __THREW__;
    __THREW__ = 0;
    if ($50 & 1) {
     label = 24;
     break L4;
    }
    if (($49 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 15;
     break;
    } else if ($38) {
     $877 = $39;
     break;
    } else {
     $864 = $876;
     $878 = $39;
     $__trailing_sign$0$lcssa = $__trailing_sign$0234;
     label = 280;
     break L4;
    }
   } while (0);
   if ((label | 0) == 15) {
    label = 0;
    if ($38) {
     $864 = $876;
     $878 = 0;
     $__trailing_sign$0$lcssa = $__trailing_sign$0234;
     label = 280;
     break;
    } else $877 = 0;
   }
   L26 : do switch (HEAP8[$__pat + $__p$0232 >> 0] | 0) {
   case 2:
    {
     if (!(($__trailing_sign$0234 | 0) != 0 | $__p$0232 >>> 0 < 2)) {
      if (($__p$0232 | 0) == 2) $380 = (HEAP8[$21 >> 0] | 0) != 0; else $380 = 0;
      if (!($14 | $380)) {
       $879 = $877;
       $880 = $876;
       $__trailing_sign$1 = 0;
       break L26;
      }
     }
     $381 = HEAP8[$__sym >> 0] | 0;
     $383 = ($381 & 1) == 0;
     $$274 = $383 ? $15 : HEAP32[$16 >> 2] | 0;
     L34 : do if (!$__p$0232) {
      $$pre$i2$i$i155 = $877;
      $437 = $381;
      $446 = $$274;
      $464 = $877;
     } else if ((HEAPU8[$__pat + ($__p$0232 + -1) >> 0] | 0) < 2) {
      $390 = ($381 & 255) >>> 1;
      $391 = HEAP32[$16 >> 2] | 0;
      $392 = HEAP32[$17 >> 2] | 0;
      $394 = $$274;
      while (1) {
       if (($394 | 0) == (($383 ? $15 : $391) + ($383 ? $390 : $392) | 0)) break;
       $396 = HEAP8[$394 >> 0] | 0;
       if ($396 << 24 >> 24 <= -1) break;
       if (!(HEAP16[(HEAP32[$6 >> 2] | 0) + ($396 << 24 >> 24 << 1) >> 1] & 8192)) break; else $394 = $394 + 1 | 0;
      }
      $406 = $394 - ($383 ? $15 : $391) | 0;
      $407 = HEAP8[$__spaces >> 0] | 0;
      $409 = ($407 & 1) == 0;
      if ($409) $414 = ($407 & 255) >>> 1; else $414 = HEAP32[$20 >> 2] | 0;
      L46 : do if ($406 >>> 0 <= $414 >>> 0) {
       if ($409) {
        $424 = $18;
        $425 = ($407 & 255) >>> 1;
        $426 = $__spaces + ((($407 & 255) >>> 1) - $406) + 1 | 0;
       } else {
        $415 = HEAP32[$19 >> 2] | 0;
        $416 = HEAP32[$20 >> 2] | 0;
        $424 = $415;
        $425 = $416;
        $426 = $415 + ($416 - $406) | 0;
       }
       $423 = $424 + $425 | 0;
       if (($426 | 0) == ($423 | 0)) {
        $$pre$i2$i$i155 = $877;
        $437 = $381;
        $446 = $394;
        $464 = $877;
        break L34;
       } else {
        $429 = $426;
        $431 = $383 ? $15 : $391;
       }
       while (1) {
        if ((HEAP8[$429 >> 0] | 0) != (HEAP8[$431 >> 0] | 0)) break L46;
        $429 = $429 + 1 | 0;
        if (($429 | 0) == ($423 | 0)) {
         $$pre$i2$i$i155 = $877;
         $437 = $381;
         $446 = $394;
         $464 = $877;
         break L34;
        } else $431 = $431 + 1 | 0;
       }
      } while (0);
      $$pre$i2$i$i155 = $877;
      $437 = $381;
      $446 = $383 ? $15 : $391;
      $464 = $877;
     } else {
      $$pre$i2$i$i155 = $877;
      $437 = $381;
      $446 = $$274;
      $464 = $877;
     } while (0);
     L56 : while (1) {
      if (!($437 & 1)) {
       $444 = $15;
       $445 = ($437 & 255) >>> 1;
      } else {
       $444 = HEAP32[$16 >> 2] | 0;
       $445 = HEAP32[$17 >> 2] | 0;
      }
      if (($446 | 0) == ($444 + $445 | 0)) {
       $882 = $$pre$i2$i$i155;
       break;
      }
      $448 = HEAP32[$__b >> 2] | 0;
      do if (!$448) $462 = 0; else if ((HEAP32[$448 + 12 >> 2] | 0) == (HEAP32[$448 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $458 = invoke_ii(HEAP32[(HEAP32[$448 >> 2] | 0) + 36 >> 2] | 0, $448 | 0) | 0;
       $459 = __THREW__;
       __THREW__ = 0;
       if ($459 & 1) {
        label = 22;
        break L4;
       }
       if (($458 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $462 = 0;
        break;
       } else {
        $462 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $462 = $448; while (0);
      $463 = ($462 | 0) == 0;
      do if (!$464) {
       $$pre$i2$i$i155250 = $$pre$i2$i$i155;
       label = 170;
      } else {
       if ((HEAP32[$464 + 12 >> 2] | 0) != (HEAP32[$464 + 16 >> 2] | 0)) if ($463) {
        $$pre$i2$i$i155249 = $$pre$i2$i$i155;
        $883 = $464;
        break;
       } else {
        $882 = $$pre$i2$i$i155;
        break L56;
       }
       __THREW__ = 0;
       $474 = invoke_ii(HEAP32[(HEAP32[$464 >> 2] | 0) + 36 >> 2] | 0, $464 | 0) | 0;
       $475 = __THREW__;
       __THREW__ = 0;
       if ($475 & 1) {
        label = 22;
        break L4;
       }
       if (($474 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i2$i$i155250 = 0;
        label = 170;
        break;
       } else if ($463 ^ ($$pre$i2$i$i155 | 0) == 0) {
        $$pre$i2$i$i155249 = $$pre$i2$i$i155;
        $883 = $$pre$i2$i$i155;
        break;
       } else {
        $882 = $$pre$i2$i$i155;
        break L56;
       }
      } while (0);
      if ((label | 0) == 170) {
       label = 0;
       if ($463) {
        $882 = $$pre$i2$i$i155250;
        break;
       } else {
        $$pre$i2$i$i155249 = $$pre$i2$i$i155250;
        $883 = 0;
       }
      }
      $479 = HEAP32[$__b >> 2] | 0;
      $481 = HEAP32[$479 + 12 >> 2] | 0;
      if (($481 | 0) == (HEAP32[$479 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $488 = invoke_ii(HEAP32[(HEAP32[$479 >> 2] | 0) + 36 >> 2] | 0, $479 | 0) | 0;
       $489 = __THREW__;
       __THREW__ = 0;
       if ($489 & 1) {
        label = 22;
        break L4;
       } else $$0$i$i147 = $488;
      } else $$0$i$i147 = HEAPU8[$481 >> 0] | 0;
      if (($$0$i$i147 & 255) << 24 >> 24 != (HEAP8[$446 >> 0] | 0)) {
       $882 = $$pre$i2$i$i155249;
       break;
      }
      $496 = HEAP32[$__b >> 2] | 0;
      $497 = $496 + 12 | 0;
      $498 = HEAP32[$497 >> 2] | 0;
      if (($498 | 0) == (HEAP32[$496 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$496 >> 2] | 0) + 40 >> 2] | 0, $496 | 0) | 0;
       $505 = __THREW__;
       __THREW__ = 0;
       if ($505 & 1) {
        label = 22;
        break L4;
       }
      } else HEAP32[$497 >> 2] = $498 + 1;
      $$pre$i2$i$i155 = $$pre$i2$i$i155249;
      $437 = HEAP8[$__sym >> 0] | 0;
      $446 = $446 + 1 | 0;
      $464 = $883;
     }
     if ($14) {
      $509 = HEAP8[$__sym >> 0] | 0;
      if (!($509 & 1)) {
       $517 = $15;
       $518 = ($509 & 255) >>> 1;
      } else {
       $517 = HEAP32[$16 >> 2] | 0;
       $518 = HEAP32[$17 >> 2] | 0;
      }
      if (($446 | 0) == ($517 + $518 | 0)) {
       $879 = $882;
       $880 = $876;
       $__trailing_sign$1 = $__trailing_sign$0234;
      } else {
       label = 185;
       break L4;
      }
     } else {
      $879 = $882;
      $880 = $876;
      $__trailing_sign$1 = $__trailing_sign$0234;
     }
     break;
    }
   case 3:
    {
     $190 = HEAP8[$__psn >> 0] | 0;
     $192 = ($190 & 1) == 0;
     if ($192) $204 = ($190 & 255) >>> 1; else $204 = HEAP32[$11 >> 2] | 0;
     $196 = HEAP8[$__nsn >> 0] | 0;
     $198 = ($196 & 1) == 0;
     if ($198) $203 = ($196 & 255) >>> 1; else $203 = HEAP32[$8 >> 2] | 0;
     if (($204 | 0) == (0 - $203 | 0)) {
      $879 = $877;
      $880 = $876;
      $__trailing_sign$1 = $__trailing_sign$0234;
     } else {
      if ($192) $209 = ($190 & 255) >>> 1; else $209 = HEAP32[$11 >> 2] | 0;
      if ($209) {
       if ($198) $214 = ($196 & 255) >>> 1; else $214 = HEAP32[$8 >> 2] | 0;
       if ($214) {
        $297 = HEAP32[$__b >> 2] | 0;
        $299 = HEAP32[$297 + 12 >> 2] | 0;
        if (($299 | 0) == (HEAP32[$297 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $306 = invoke_ii(HEAP32[(HEAP32[$297 >> 2] | 0) + 36 >> 2] | 0, $297 | 0) | 0;
         $307 = __THREW__;
         __THREW__ = 0;
         if ($307 & 1) {
          label = 24;
          break L4;
         }
         $$0$i$i111 = $306;
         $313 = HEAP8[$__psn >> 0] | 0;
        } else {
         $$0$i$i111 = HEAPU8[$299 >> 0] | 0;
         $313 = $190;
        }
        $318 = HEAP32[$__b >> 2] | 0;
        $319 = $318 + 12 | 0;
        $320 = HEAP32[$319 >> 2] | 0;
        $323 = ($320 | 0) == (HEAP32[$318 + 16 >> 2] | 0);
        if (($$0$i$i111 & 255) << 24 >> 24 == (HEAP8[(($313 & 1) == 0 ? $10 : HEAP32[$12 >> 2] | 0) >> 0] | 0)) {
         if ($323) {
          __THREW__ = 0;
          invoke_ii(HEAP32[(HEAP32[$318 >> 2] | 0) + 40 >> 2] | 0, $318 | 0) | 0;
          $327 = __THREW__;
          __THREW__ = 0;
          if ($327 & 1) {
           label = 24;
           break L4;
          }
         } else HEAP32[$319 >> 2] = $320 + 1;
         $330 = HEAP8[$__psn >> 0] | 0;
         if (!($330 & 1)) $336 = ($330 & 255) >>> 1; else $336 = HEAP32[$11 >> 2] | 0;
         $879 = $877;
         $880 = $876;
         $__trailing_sign$1 = $336 >>> 0 > 1 ? $__psn : $__trailing_sign$0234;
         break L26;
        }
        if ($323) {
         __THREW__ = 0;
         $341 = invoke_ii(HEAP32[(HEAP32[$318 >> 2] | 0) + 36 >> 2] | 0, $318 | 0) | 0;
         $342 = __THREW__;
         __THREW__ = 0;
         if ($342 & 1) {
          label = 24;
          break L4;
         } else $$0$i$i120 = $341;
        } else $$0$i$i120 = HEAPU8[$320 >> 0] | 0;
        if (($$0$i$i120 & 255) << 24 >> 24 != (HEAP8[((HEAP8[$__nsn >> 0] & 1) == 0 ? $7 : HEAP32[$9 >> 2] | 0) >> 0] | 0)) {
         label = 132;
         break L4;
        }
        $353 = HEAP32[$__b >> 2] | 0;
        $354 = $353 + 12 | 0;
        $355 = HEAP32[$354 >> 2] | 0;
        if (($355 | 0) == (HEAP32[$353 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_ii(HEAP32[(HEAP32[$353 >> 2] | 0) + 40 >> 2] | 0, $353 | 0) | 0;
         $362 = __THREW__;
         __THREW__ = 0;
         if ($362 & 1) {
          label = 24;
          break L4;
         }
        } else HEAP32[$354 >> 2] = $355 + 1;
        HEAP8[$__neg >> 0] = 1;
        $365 = HEAP8[$__nsn >> 0] | 0;
        if (!($365 & 1)) $371 = ($365 & 255) >>> 1; else $371 = HEAP32[$8 >> 2] | 0;
        $879 = $877;
        $880 = $876;
        $__trailing_sign$1 = $371 >>> 0 > 1 ? $__nsn : $__trailing_sign$0234;
        break L26;
       }
      }
      if ($192) $219 = ($190 & 255) >>> 1; else $219 = HEAP32[$11 >> 2] | 0;
      $221 = HEAP32[$__b >> 2] | 0;
      $223 = HEAP32[$221 + 12 >> 2] | 0;
      $226 = ($223 | 0) == (HEAP32[$221 + 16 >> 2] | 0);
      if (!$219) {
       if ($226) {
        __THREW__ = 0;
        $265 = invoke_ii(HEAP32[(HEAP32[$221 >> 2] | 0) + 36 >> 2] | 0, $221 | 0) | 0;
        $266 = __THREW__;
        __THREW__ = 0;
        if ($266 & 1) {
         label = 24;
         break L4;
        }
        $$0$i$i104 = $265;
        $272 = HEAP8[$__nsn >> 0] | 0;
       } else {
        $$0$i$i104 = HEAPU8[$223 >> 0] | 0;
        $272 = $196;
       }
       if (($$0$i$i104 & 255) << 24 >> 24 != (HEAP8[(($272 & 1) == 0 ? $7 : HEAP32[$9 >> 2] | 0) >> 0] | 0)) {
        $879 = $877;
        $880 = $876;
        $__trailing_sign$1 = $__trailing_sign$0234;
        break L26;
       }
       $277 = HEAP32[$__b >> 2] | 0;
       $278 = $277 + 12 | 0;
       $279 = HEAP32[$278 >> 2] | 0;
       if (($279 | 0) == (HEAP32[$277 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$277 >> 2] | 0) + 40 >> 2] | 0, $277 | 0) | 0;
        $286 = __THREW__;
        __THREW__ = 0;
        if ($286 & 1) {
         label = 24;
         break L4;
        }
       } else HEAP32[$278 >> 2] = $279 + 1;
       HEAP8[$__neg >> 0] = 1;
       $289 = HEAP8[$__nsn >> 0] | 0;
       if (!($289 & 1)) $295 = ($289 & 255) >>> 1; else $295 = HEAP32[$8 >> 2] | 0;
       $879 = $877;
       $880 = $876;
       $__trailing_sign$1 = $295 >>> 0 > 1 ? $__nsn : $__trailing_sign$0234;
       break L26;
      }
      if ($226) {
       __THREW__ = 0;
       $230 = invoke_ii(HEAP32[(HEAP32[$221 >> 2] | 0) + 36 >> 2] | 0, $221 | 0) | 0;
       $231 = __THREW__;
       __THREW__ = 0;
       if ($231 & 1) {
        label = 24;
        break L4;
       }
       $$0$i$i84 = $230;
       $237 = HEAP8[$__psn >> 0] | 0;
      } else {
       $$0$i$i84 = HEAPU8[$223 >> 0] | 0;
       $237 = $190;
      }
      if (($$0$i$i84 & 255) << 24 >> 24 != (HEAP8[(($237 & 1) == 0 ? $10 : HEAP32[$12 >> 2] | 0) >> 0] | 0)) {
       HEAP8[$__neg >> 0] = 1;
       $879 = $877;
       $880 = $876;
       $__trailing_sign$1 = $__trailing_sign$0234;
       break L26;
      }
      $242 = HEAP32[$__b >> 2] | 0;
      $243 = $242 + 12 | 0;
      $244 = HEAP32[$243 >> 2] | 0;
      if (($244 | 0) == (HEAP32[$242 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$242 >> 2] | 0) + 40 >> 2] | 0, $242 | 0) | 0;
       $251 = __THREW__;
       __THREW__ = 0;
       if ($251 & 1) {
        label = 24;
        break L4;
       }
      } else HEAP32[$243 >> 2] = $244 + 1;
      $254 = HEAP8[$__psn >> 0] | 0;
      if (!($254 & 1)) $260 = ($254 & 255) >>> 1; else $260 = HEAP32[$11 >> 2] | 0;
      $879 = $877;
      $880 = $876;
      $__trailing_sign$1 = $260 >>> 0 > 1 ? $__psn : $__trailing_sign$0234;
     }
     break;
    }
   case 1:
    {
     if (($__p$0232 | 0) == 3) {
      $864 = $876;
      $878 = $877;
      $__trailing_sign$0$lcssa = $__trailing_sign$0234;
      label = 280;
      break L4;
     }
     $78 = HEAP32[$__b >> 2] | 0;
     $80 = HEAP32[$78 + 12 >> 2] | 0;
     if (($80 | 0) == (HEAP32[$78 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $87 = invoke_ii(HEAP32[(HEAP32[$78 >> 2] | 0) + 36 >> 2] | 0, $78 | 0) | 0;
      $88 = __THREW__;
      __THREW__ = 0;
      if ($88 & 1) {
       label = 24;
       break L4;
      } else $$0$i$i33 = $87;
     } else $$0$i$i33 = HEAPU8[$80 >> 0] | 0;
     if (($$0$i$i33 & 255) << 24 >> 24 <= -1) {
      label = 40;
      break L4;
     }
     if (!(HEAP16[(HEAP32[$6 >> 2] | 0) + ($$0$i$i33 << 24 >> 24 << 1) >> 1] & 8192)) {
      label = 40;
      break L4;
     }
     $99 = HEAP32[$__b >> 2] | 0;
     $100 = $99 + 12 | 0;
     $101 = HEAP32[$100 >> 2] | 0;
     if (($101 | 0) == (HEAP32[$99 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $108 = invoke_ii(HEAP32[(HEAP32[$99 >> 2] | 0) + 40 >> 2] | 0, $99 | 0) | 0;
      $109 = __THREW__;
      __THREW__ = 0;
      if ($109 & 1) {
       label = 24;
       break L4;
      } else $$0$i$i36 = $108;
     } else {
      HEAP32[$100 >> 2] = $101 + 1;
      $$0$i$i36 = HEAPU8[$101 >> 0] | 0;
     }
     __THREW__ = 0;
     invoke_vii(44, $__spaces | 0, $$0$i$i36 & 255 | 0);
     $115 = __THREW__;
     __THREW__ = 0;
     if ($115 & 1) {
      label = 24;
      break L4;
     } else label = 41;
     break;
    }
   case 4:
    {
     $56 = HEAP8[$__ts >> 0] | 0;
     $$pre$i2$i$i138 = $877;
     $538 = $877;
     $593 = $876;
     $__ng$0 = 0;
     L199 : while (1) {
      $522 = HEAP32[$__b >> 2] | 0;
      do if (!$522) $536 = 0; else if ((HEAP32[$522 + 12 >> 2] | 0) == (HEAP32[$522 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $532 = invoke_ii(HEAP32[(HEAP32[$522 >> 2] | 0) + 36 >> 2] | 0, $522 | 0) | 0;
       $533 = __THREW__;
       __THREW__ = 0;
       if ($533 & 1) {
        label = 20;
        break L4;
       }
       if (($532 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $536 = 0;
        break;
       } else {
        $536 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $536 = $522; while (0);
      $537 = ($536 | 0) == 0;
      do if (!$538) {
       $884 = $$pre$i2$i$i138;
       label = 198;
      } else {
       if ((HEAP32[$538 + 12 >> 2] | 0) != (HEAP32[$538 + 16 >> 2] | 0)) if ($537) {
        $885 = $$pre$i2$i$i138;
        $886 = $538;
        break;
       } else {
        $$pre$i2$i$i98 = $$pre$i2$i$i138;
        break L199;
       }
       __THREW__ = 0;
       $548 = invoke_ii(HEAP32[(HEAP32[$538 >> 2] | 0) + 36 >> 2] | 0, $538 | 0) | 0;
       $549 = __THREW__;
       __THREW__ = 0;
       if ($549 & 1) {
        label = 20;
        break L4;
       }
       if (($548 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $884 = 0;
        label = 198;
        break;
       } else if ($537 ^ ($$pre$i2$i$i138 | 0) == 0) {
        $885 = $$pre$i2$i$i138;
        $886 = $$pre$i2$i$i138;
        break;
       } else {
        $$pre$i2$i$i98 = $$pre$i2$i$i138;
        break L199;
       }
      } while (0);
      if ((label | 0) == 198) {
       label = 0;
       if ($537) {
        $$pre$i2$i$i98 = $884;
        break;
       } else {
        $885 = $884;
        $886 = 0;
       }
      }
      $553 = HEAP32[$__b >> 2] | 0;
      $555 = HEAP32[$553 + 12 >> 2] | 0;
      if (($555 | 0) == (HEAP32[$553 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $562 = invoke_ii(HEAP32[(HEAP32[$553 >> 2] | 0) + 36 >> 2] | 0, $553 | 0) | 0;
       $563 = __THREW__;
       __THREW__ = 0;
       if ($563 & 1) {
        label = 20;
        break L4;
       } else $$0$i$i130 = $562;
      } else $$0$i$i130 = HEAPU8[$555 >> 0] | 0;
      $567 = $$0$i$i130 & 255;
      if ($567 << 24 >> 24 > -1) if (!(HEAP16[(HEAP32[$6 >> 2] | 0) + ($$0$i$i130 << 24 >> 24 << 1) >> 1] & 2048)) label = 209; else {
       $574 = HEAP32[$__wn >> 2] | 0;
       if (($574 | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(17, $__wb | 0, $__wn | 0, $0 | 0);
        $577 = __THREW__;
        __THREW__ = 0;
        if ($577 & 1) {
         label = 20;
         break L4;
        }
        $580 = HEAP32[$__wn >> 2] | 0;
       } else $580 = $574;
       HEAP32[$__wn >> 2] = $580 + 1;
       HEAP8[$580 >> 0] = $567;
       $887 = $593;
       $__ng$1 = $__ng$0 + 1 | 0;
      } else label = 209;
      if ((label | 0) == 209) {
       label = 0;
       $582 = HEAP8[$__grp >> 0] | 0;
       if (!($582 & 1)) $588 = ($582 & 255) >>> 1; else $588 = HEAP32[$22 >> 2] | 0;
       if (!(($588 | 0) != 0 & ($__ng$0 | 0) != 0 & $567 << 24 >> 24 == $56 << 24 >> 24)) {
        $$pre$i2$i$i98 = $885;
        break;
       }
       if (($593 | 0) == (HEAP32[$__ge >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(18, $__gb | 0, $__gn | 0, $__ge | 0);
        $595 = __THREW__;
        __THREW__ = 0;
        if ($595 & 1) {
         label = 20;
         break L4;
        }
        $598 = HEAP32[$__gn >> 2] | 0;
       } else $598 = $593;
       $597 = $598 + 4 | 0;
       HEAP32[$__gn >> 2] = $597;
       HEAP32[$598 >> 2] = $__ng$0;
       $887 = $597;
       $__ng$1 = 0;
      }
      $599 = HEAP32[$__b >> 2] | 0;
      $600 = $599 + 12 | 0;
      $601 = HEAP32[$600 >> 2] | 0;
      if (($601 | 0) == (HEAP32[$599 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$599 >> 2] | 0) + 40 >> 2] | 0, $599 | 0) | 0;
       $608 = __THREW__;
       __THREW__ = 0;
       if ($608 & 1) {
        label = 20;
        break L4;
       } else {
        $$pre$i2$i$i138 = $885;
        $538 = $886;
        $593 = $887;
        $__ng$0 = $__ng$1;
        continue;
       }
      } else {
       HEAP32[$600 >> 2] = $601 + 1;
       $$pre$i2$i$i138 = $885;
       $538 = $886;
       $593 = $887;
       $__ng$0 = $__ng$1;
       continue;
      }
     }
     if (($__ng$0 | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($593 | 0) : 0) {
      if (($593 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(18, $__gb | 0, $__gn | 0, $__ge | 0);
       $616 = __THREW__;
       __THREW__ = 0;
       if ($616 & 1) {
        label = 24;
        break L4;
       }
       $619 = HEAP32[$__gn >> 2] | 0;
      } else $619 = $593;
      $618 = $619 + 4 | 0;
      HEAP32[$__gn >> 2] = $618;
      HEAP32[$619 >> 2] = $__ng$0;
      $888 = $618;
     } else $888 = $593;
     $620 = HEAP32[$__fd >> 2] | 0;
     if (($620 | 0) > 0) {
      $622 = HEAP32[$__b >> 2] | 0;
      do if (!$622) $636 = 0; else if ((HEAP32[$622 + 12 >> 2] | 0) == (HEAP32[$622 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $632 = invoke_ii(HEAP32[(HEAP32[$622 >> 2] | 0) + 36 >> 2] | 0, $622 | 0) | 0;
       $633 = __THREW__;
       __THREW__ = 0;
       if ($633 & 1) {
        label = 24;
        break L4;
       }
       if (($632 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $636 = 0;
        break;
       } else {
        $636 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $636 = $622; while (0);
      $637 = ($636 | 0) == 0;
      do if (!$$pre$i2$i$i98) label = 238; else {
       if ((HEAP32[$$pre$i2$i$i98 + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i98 + 16 >> 2] | 0)) if ($637) {
        $890 = $$pre$i2$i$i98;
        break;
       } else {
        label = 244;
        break L4;
       }
       __THREW__ = 0;
       $647 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i98 >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i98 | 0) | 0;
       $648 = __THREW__;
       __THREW__ = 0;
       if ($648 & 1) {
        label = 24;
        break L4;
       }
       if (($647 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 238;
        break;
       } else if ($637 ^ ($$pre$i2$i$i98 | 0) == 0) {
        $890 = $$pre$i2$i$i98;
        break;
       } else {
        label = 244;
        break L4;
       }
      } while (0);
      if ((label | 0) == 238) {
       label = 0;
       if ($637) {
        label = 244;
        break L4;
       } else $890 = 0;
      }
      $652 = HEAP32[$__b >> 2] | 0;
      $654 = HEAP32[$652 + 12 >> 2] | 0;
      if (($654 | 0) == (HEAP32[$652 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $661 = invoke_ii(HEAP32[(HEAP32[$652 >> 2] | 0) + 36 >> 2] | 0, $652 | 0) | 0;
       $662 = __THREW__;
       __THREW__ = 0;
       if ($662 & 1) {
        label = 24;
        break L4;
       } else $$0$i$i87 = $661;
      } else $$0$i$i87 = HEAPU8[$654 >> 0] | 0;
      if (($$0$i$i87 & 255) << 24 >> 24 != (HEAP8[$__dp >> 0] | 0)) {
       label = 244;
       break L4;
      }
      $671 = HEAP32[$__b >> 2] | 0;
      $672 = $671 + 12 | 0;
      $673 = HEAP32[$672 >> 2] | 0;
      if (($673 | 0) == (HEAP32[$671 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$671 >> 2] | 0) + 40 >> 2] | 0, $671 | 0) | 0;
       $680 = __THREW__;
       __THREW__ = 0;
       if ($680 & 1) {
        label = 24;
        break L4;
       } else {
        $$pre$i2$i$i74 = $890;
        $699 = $890;
        $760 = $620;
       }
      } else {
       HEAP32[$672 >> 2] = $673 + 1;
       $$pre$i2$i$i74 = $890;
       $699 = $890;
       $760 = $620;
      }
      while (1) {
       $683 = HEAP32[$__b >> 2] | 0;
       do if (!$683) $697 = 0; else if ((HEAP32[$683 + 12 >> 2] | 0) == (HEAP32[$683 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $693 = invoke_ii(HEAP32[(HEAP32[$683 >> 2] | 0) + 36 >> 2] | 0, $683 | 0) | 0;
        $694 = __THREW__;
        __THREW__ = 0;
        if ($694 & 1) {
         label = 21;
         break L4;
        }
        if (($693 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $697 = 0;
         break;
        } else {
         $697 = HEAP32[$__b >> 2] | 0;
         break;
        }
       } else $697 = $683; while (0);
       $698 = ($697 | 0) == 0;
       do if (!$699) {
        $$pre$i2$i$i74255$ph = $$pre$i2$i$i74;
        label = 260;
       } else {
        if ((HEAP32[$699 + 12 >> 2] | 0) != (HEAP32[$699 + 16 >> 2] | 0)) if ($698) {
         $$pre$i2$i$i74255266 = $$pre$i2$i$i74;
         $891 = $699;
         break;
        } else {
         label = 267;
         break L4;
        }
        __THREW__ = 0;
        $709 = invoke_ii(HEAP32[(HEAP32[$699 >> 2] | 0) + 36 >> 2] | 0, $699 | 0) | 0;
        $710 = __THREW__;
        __THREW__ = 0;
        if ($710 & 1) {
         label = 21;
         break L4;
        }
        if (($709 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i2$i$i74255$ph = 0;
         label = 260;
         break;
        } else if ($698 ^ ($$pre$i2$i$i74 | 0) == 0) {
         $$pre$i2$i$i74255266 = $$pre$i2$i$i74;
         $891 = $$pre$i2$i$i74;
         break;
        } else {
         label = 267;
         break L4;
        }
       } while (0);
       if ((label | 0) == 260) {
        label = 0;
        if ($698) {
         label = 267;
         break L4;
        } else {
         $$pre$i2$i$i74255266 = $$pre$i2$i$i74255$ph;
         $891 = 0;
        }
       }
       $714 = HEAP32[$__b >> 2] | 0;
       $716 = HEAP32[$714 + 12 >> 2] | 0;
       if (($716 | 0) == (HEAP32[$714 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $723 = invoke_ii(HEAP32[(HEAP32[$714 >> 2] | 0) + 36 >> 2] | 0, $714 | 0) | 0;
        $724 = __THREW__;
        __THREW__ = 0;
        if ($724 & 1) {
         label = 21;
         break L4;
        } else $$0$i$i65 = $723;
       } else $$0$i$i65 = HEAPU8[$716 >> 0] | 0;
       if (($$0$i$i65 & 255) << 24 >> 24 <= -1) {
        label = 267;
        break L4;
       }
       if (!(HEAP16[(HEAP32[$6 >> 2] | 0) + ($$0$i$i65 << 24 >> 24 << 1) >> 1] & 2048)) {
        label = 267;
        break L4;
       }
       if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(17, $__wb | 0, $__wn | 0, $0 | 0);
        $740 = __THREW__;
        __THREW__ = 0;
        if ($740 & 1) {
         label = 21;
         break L4;
        }
       }
       $742 = HEAP32[$__b >> 2] | 0;
       $744 = HEAP32[$742 + 12 >> 2] | 0;
       if (($744 | 0) == (HEAP32[$742 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $751 = invoke_ii(HEAP32[(HEAP32[$742 >> 2] | 0) + 36 >> 2] | 0, $742 | 0) | 0;
        $752 = __THREW__;
        __THREW__ = 0;
        if ($752 & 1) {
         label = 21;
         break L4;
        } else $$0$i$i58 = $751;
       } else $$0$i$i58 = HEAPU8[$744 >> 0] | 0;
       $757 = HEAP32[$__wn >> 2] | 0;
       HEAP32[$__wn >> 2] = $757 + 1;
       HEAP8[$757 >> 0] = $$0$i$i58;
       $760 = $760 + -1 | 0;
       HEAP32[$__fd >> 2] = $760;
       $761 = HEAP32[$__b >> 2] | 0;
       $762 = $761 + 12 | 0;
       $763 = HEAP32[$762 >> 2] | 0;
       if (($763 | 0) == (HEAP32[$761 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$761 >> 2] | 0) + 40 >> 2] | 0, $761 | 0) | 0;
        $770 = __THREW__;
        __THREW__ = 0;
        if ($770 & 1) {
         label = 21;
         break L4;
        }
       } else HEAP32[$762 >> 2] = $763 + 1;
       if (($760 | 0) <= 0) {
        $889 = $$pre$i2$i$i74255266;
        break;
       } else {
        $$pre$i2$i$i74 = $$pre$i2$i$i74255266;
        $699 = $891;
       }
      }
     } else $889 = $$pre$i2$i$i98;
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
      label = 278;
      break L4;
     } else {
      $879 = $889;
      $880 = $888;
      $__trailing_sign$1 = $__trailing_sign$0234;
     }
     break;
    }
   case 0:
    {
     label = 41;
     break;
    }
   default:
    {
     $879 = $877;
     $880 = $876;
     $__trailing_sign$1 = $__trailing_sign$0234;
    }
   } while (0);
   L325 : do if ((label | 0) == 41) {
    label = 0;
    if (($__p$0232 | 0) == 3) {
     $864 = $876;
     $878 = $877;
     $__trailing_sign$0$lcssa = $__trailing_sign$0234;
     label = 280;
     break L4;
    } else {
     $$pre$i2$i$i43 = $877;
     $136 = $877;
    }
    while (1) {
     $120 = HEAP32[$__b >> 2] | 0;
     do if (!$120) $134 = 0; else if ((HEAP32[$120 + 12 >> 2] | 0) == (HEAP32[$120 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $130 = invoke_ii(HEAP32[(HEAP32[$120 >> 2] | 0) + 36 >> 2] | 0, $120 | 0) | 0;
      $131 = __THREW__;
      __THREW__ = 0;
      if ($131 & 1) {
       label = 23;
       break L4;
      }
      if (($130 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $134 = 0;
       break;
      } else {
       $134 = HEAP32[$__b >> 2] | 0;
       break;
      }
     } else $134 = $120; while (0);
     $135 = ($134 | 0) == 0;
     do if (!$136) {
      $$pre$i2$i$i43240 = $$pre$i2$i$i43;
      label = 54;
     } else {
      if ((HEAP32[$136 + 12 >> 2] | 0) != (HEAP32[$136 + 16 >> 2] | 0)) if ($135) {
       $$pre$i2$i$i43242 = $$pre$i2$i$i43;
       $881 = $136;
       break;
      } else {
       $879 = $$pre$i2$i$i43;
       $880 = $876;
       $__trailing_sign$1 = $__trailing_sign$0234;
       break L325;
      }
      __THREW__ = 0;
      $146 = invoke_ii(HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] | 0, $136 | 0) | 0;
      $147 = __THREW__;
      __THREW__ = 0;
      if ($147 & 1) {
       label = 23;
       break L4;
      }
      if (($146 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i2$i$i43240 = 0;
       label = 54;
       break;
      } else if ($135 ^ ($$pre$i2$i$i43 | 0) == 0) {
       $$pre$i2$i$i43242 = $$pre$i2$i$i43;
       $881 = $$pre$i2$i$i43;
       break;
      } else {
       $879 = $$pre$i2$i$i43;
       $880 = $876;
       $__trailing_sign$1 = $__trailing_sign$0234;
       break L325;
      }
     } while (0);
     if ((label | 0) == 54) {
      label = 0;
      if ($135) {
       $879 = $$pre$i2$i$i43240;
       $880 = $876;
       $__trailing_sign$1 = $__trailing_sign$0234;
       break L325;
      } else {
       $$pre$i2$i$i43242 = $$pre$i2$i$i43240;
       $881 = 0;
      }
     }
     $151 = HEAP32[$__b >> 2] | 0;
     $153 = HEAP32[$151 + 12 >> 2] | 0;
     if (($153 | 0) == (HEAP32[$151 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $160 = invoke_ii(HEAP32[(HEAP32[$151 >> 2] | 0) + 36 >> 2] | 0, $151 | 0) | 0;
      $161 = __THREW__;
      __THREW__ = 0;
      if ($161 & 1) {
       label = 23;
       break L4;
      } else $$0$i$i49 = $160;
     } else $$0$i$i49 = HEAPU8[$153 >> 0] | 0;
     if (($$0$i$i49 & 255) << 24 >> 24 <= -1) {
      $879 = $$pre$i2$i$i43242;
      $880 = $876;
      $__trailing_sign$1 = $__trailing_sign$0234;
      break L325;
     }
     if (!(HEAP16[(HEAP32[$6 >> 2] | 0) + ($$0$i$i49 << 24 >> 24 << 1) >> 1] & 8192)) {
      $879 = $$pre$i2$i$i43242;
      $880 = $876;
      $__trailing_sign$1 = $__trailing_sign$0234;
      break L325;
     }
     $172 = HEAP32[$__b >> 2] | 0;
     $173 = $172 + 12 | 0;
     $174 = HEAP32[$173 >> 2] | 0;
     if (($174 | 0) == (HEAP32[$172 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $181 = invoke_ii(HEAP32[(HEAP32[$172 >> 2] | 0) + 40 >> 2] | 0, $172 | 0) | 0;
      $182 = __THREW__;
      __THREW__ = 0;
      if ($182 & 1) {
       label = 23;
       break L4;
      } else $$0$i$i55 = $181;
     } else {
      HEAP32[$173 >> 2] = $174 + 1;
      $$0$i$i55 = HEAPU8[$174 >> 0] | 0;
     }
     __THREW__ = 0;
     invoke_vii(44, $__spaces | 0, $$0$i$i55 & 255 | 0);
     $188 = __THREW__;
     __THREW__ = 0;
     if ($188 & 1) {
      label = 23;
      break L4;
     } else {
      $$pre$i2$i$i43 = $$pre$i2$i$i43242;
      $136 = $881;
     }
    }
   } while (0);
   $__p$0232 = $__p$0232 + 1 | 0;
   if ($__p$0232 >>> 0 >= 4) {
    $864 = $880;
    $878 = $879;
    $__trailing_sign$0$lcssa = $__trailing_sign$1;
    label = 280;
    break;
   } else {
    $876 = $880;
    $__trailing_sign$0234 = $__trailing_sign$1;
   }
  }
  L360 : switch (label | 0) {
  case 20:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 21:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 22:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 23:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 24:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 40:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 132:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 185:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 244:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 267:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 278:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 280:
   {
    L364 : do if ($__trailing_sign$0$lcssa) {
     $782 = $__trailing_sign$0$lcssa + 1 | 0;
     $783 = $__trailing_sign$0$lcssa + 8 | 0;
     $784 = $__trailing_sign$0$lcssa + 4 | 0;
     $$pre$i2$i$i = $878;
     $809 = $878;
     $__i$0 = 1;
     L366 : while (1) {
      $785 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
      if (!($785 & 1)) $792 = ($785 & 255) >>> 1; else $792 = HEAP32[$784 >> 2] | 0;
      if ($__i$0 >>> 0 >= $792 >>> 0) break L364;
      $793 = HEAP32[$__b >> 2] | 0;
      do if (!$793) $807 = 0; else if ((HEAP32[$793 + 12 >> 2] | 0) == (HEAP32[$793 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $803 = invoke_ii(HEAP32[(HEAP32[$793 >> 2] | 0) + 36 >> 2] | 0, $793 | 0) | 0;
       $804 = __THREW__;
       __THREW__ = 0;
       if ($804 & 1) {
        label = 19;
        break L366;
       }
       if (($803 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $807 = 0;
        break;
       } else {
        $807 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $807 = $793; while (0);
      $808 = ($807 | 0) == 0;
      do if (!$809) {
       $$pre$i2$i$i261$ph = $$pre$i2$i$i;
       label = 298;
      } else {
       if ((HEAP32[$809 + 12 >> 2] | 0) != (HEAP32[$809 + 16 >> 2] | 0)) if ($808) {
        $$pre$i2$i$i261269 = $$pre$i2$i$i;
        $892 = $809;
        break;
       } else {
        label = 306;
        break L366;
       }
       __THREW__ = 0;
       $819 = invoke_ii(HEAP32[(HEAP32[$809 >> 2] | 0) + 36 >> 2] | 0, $809 | 0) | 0;
       $820 = __THREW__;
       __THREW__ = 0;
       if ($820 & 1) {
        label = 19;
        break L366;
       }
       if (($819 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i2$i$i261$ph = 0;
        label = 298;
        break;
       } else if ($808 ^ ($$pre$i2$i$i | 0) == 0) {
        $$pre$i2$i$i261269 = $$pre$i2$i$i;
        $892 = $$pre$i2$i$i;
        break;
       } else {
        label = 306;
        break L366;
       }
      } while (0);
      if ((label | 0) == 298) {
       label = 0;
       if ($808) {
        label = 306;
        break;
       } else {
        $$pre$i2$i$i261269 = $$pre$i2$i$i261$ph;
        $892 = 0;
       }
      }
      $824 = HEAP32[$__b >> 2] | 0;
      $826 = HEAP32[$824 + 12 >> 2] | 0;
      if (($826 | 0) == (HEAP32[$824 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $833 = invoke_ii(HEAP32[(HEAP32[$824 >> 2] | 0) + 36 >> 2] | 0, $824 | 0) | 0;
       $834 = __THREW__;
       __THREW__ = 0;
       if ($834 & 1) {
        label = 19;
        break;
       } else $$0$i$i = $833;
      } else $$0$i$i = HEAPU8[$826 >> 0] | 0;
      if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $844 = $782; else $844 = HEAP32[$783 >> 2] | 0;
      if (($$0$i$i & 255) << 24 >> 24 != (HEAP8[$844 + $__i$0 >> 0] | 0)) {
       label = 306;
       break;
      }
      $849 = $__i$0 + 1 | 0;
      $850 = HEAP32[$__b >> 2] | 0;
      $851 = $850 + 12 | 0;
      $852 = HEAP32[$851 >> 2] | 0;
      if (($852 | 0) == (HEAP32[$850 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$850 >> 2] | 0) + 40 >> 2] | 0, $850 | 0) | 0;
       $859 = __THREW__;
       __THREW__ = 0;
       if ($859 & 1) {
        label = 19;
        break;
       } else {
        $$pre$i2$i$i = $$pre$i2$i$i261269;
        $809 = $892;
        $__i$0 = $849;
        continue;
       }
      } else {
       HEAP32[$851 >> 2] = $852 + 1;
       $$pre$i2$i$i = $$pre$i2$i$i261269;
       $809 = $892;
       $__i$0 = $849;
       continue;
      }
     }
     if ((label | 0) == 19) {
      $57 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $57;
      $lpad$phi$index7 = tempRet0;
      break L1;
     } else if ((label | 0) == 306) {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
      break L360;
     }
    } while (0);
    $862 = HEAP32[$__gb >> 2] | 0;
    if (($862 | 0) == ($864 | 0)) $$0 = 1; else {
     HEAP32[$__et >> 2] = 0;
     __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $862, $864, $__et);
     if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
     }
    }
    break;
   }
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__spaces);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nsn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__psn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
  $869 = HEAP32[$__gb >> 2] | 0;
  HEAP32[$__gb >> 2] = 0;
  if (!$869) {
   STACKTOP = sp;
   return $$0 | 0;
  }
  __THREW__ = 0;
  invoke_vi(HEAP32[$1 >> 2] | 0, $869 | 0);
  $872 = __THREW__;
  __THREW__ = 0;
  if ($872 & 1) {
   $874 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($874);
  } else {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 $71 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if (!$71) ___resumeException($lpad$phi$index | 0);
 __THREW__ = 0;
 invoke_vi(HEAP32[$1 >> 2] | 0, $71 | 0);
 $74 = __THREW__;
 __THREW__ = 0;
 if ($74 & 1) {
  $76 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($76);
 } else ___resumeException($lpad$phi$index | 0);
 return 0;
}
function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $$pre$phi$i$iZ2D = 0, $$pre$phi$i24$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi59$i$iZ2D = 0, $$pre$phiZ2D = 0, $$rsize$3$i = 0, $$sum$i19$i = 0, $$sum2$i21$i = 0, $$sum3132$i$i = 0, $$sum67$i$i = 0, $100 = 0, $1000 = 0, $1003 = 0, $1005 = 0, $1008 = 0, $1013 = 0, $1019 = 0, $1023 = 0, $1024 = 0, $1031 = 0, $1040 = 0, $1043 = 0, $1048 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $106 = 0, $1064 = 0, $1066 = 0, $1067 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $13 = 0, $132 = 0, $138 = 0, $14 = 0, $141 = 0, $144 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $201 = 0, $207 = 0, $214 = 0, $217 = 0, $225 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $236 = 0, $237 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $25 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $264 = 0, $269 = 0, $276 = 0, $28 = 0, $282 = 0, $285 = 0, $286 = 0, $290 = 0, $300 = 0, $303 = 0, $307 = 0, $309 = 0, $31 = 0, $310 = 0, $312 = 0, $314 = 0, $316 = 0, $318 = 0, $320 = 0, $322 = 0, $324 = 0, $334 = 0, $335 = 0, $337 = 0, $34 = 0, $346 = 0, $348 = 0, $351 = 0, $353 = 0, $356 = 0, $358 = 0, $361 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $379 = 0, $38 = 0, $380 = 0, $389 = 0, $394 = 0, $398 = 0, $4 = 0, $404 = 0, $41 = 0, $411 = 0, $414 = 0, $422 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $431 = 0, $432 = 0, $438 = 0, $44 = 0, $443 = 0, $444 = 0, $447 = 0, $449 = 0, $452 = 0, $457 = 0, $46 = 0, $463 = 0, $467 = 0, $468 = 0, $47 = 0, $475 = 0, $484 = 0, $487 = 0, $49 = 0, $492 = 0, $499 = 0, $5 = 0, $500 = 0, $501 = 0, $509 = 0, $51 = 0, $511 = 0, $512 = 0, $522 = 0, $526 = 0, $528 = 0, $529 = 0, $53 = 0, $538 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $552 = 0, $554 = 0, $555 = 0, $561 = 0, $563 = 0, $565 = 0, $57 = 0, $570 = 0, $573 = 0, $575 = 0, $576 = 0, $577 = 0, $585 = 0, $586 = 0, $589 = 0, $59 = 0, $593 = 0, $597 = 0, $599 = 0, $6 = 0, $605 = 0, $609 = 0, $61 = 0, $613 = 0, $622 = 0, $623 = 0, $629 = 0, $631 = 0, $633 = 0, $636 = 0, $638 = 0, $64 = 0, $642 = 0, $643 = 0, $649 = 0, $65 = 0, $655 = 0, $656 = 0, $66 = 0, $661 = 0, $662 = 0, $663 = 0, $667 = 0, $67 = 0, $677 = 0, $679 = 0, $68 = 0, $685 = 0, $686 = 0, $69 = 0, $691 = 0, $693 = 0, $697 = 0, $7 = 0, $70 = 0, $703 = 0, $707 = 0, $713 = 0, $715 = 0, $720 = 0, $721 = 0, $725 = 0, $726 = 0, $731 = 0, $737 = 0, $742 = 0, $745 = 0, $746 = 0, $749 = 0, $751 = 0, $753 = 0, $756 = 0, $767 = 0, $77 = 0, $772 = 0, $774 = 0, $777 = 0, $779 = 0, $782 = 0, $785 = 0, $786 = 0, $788 = 0, $789 = 0, $791 = 0, $792 = 0, $794 = 0, $795 = 0, $80 = 0, $800 = 0, $801 = 0, $81 = 0, $810 = 0, $815 = 0, $819 = 0, $825 = 0, $833 = 0, $839 = 0, $84 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $848 = 0, $849 = 0, $855 = 0, $860 = 0, $861 = 0, $864 = 0, $866 = 0, $869 = 0, $874 = 0, $88 = 0, $880 = 0, $884 = 0, $885 = 0, $892 = 0, $90 = 0, $901 = 0, $904 = 0, $909 = 0, $91 = 0, $916 = 0, $917 = 0, $918 = 0, $92 = 0, $926 = 0, $929 = 0, $93 = 0, $930 = 0, $935 = 0, $94 = 0, $940 = 0, $941 = 0, $944 = 0, $945 = 0, $948 = 0, $95 = 0, $954 = 0, $955 = 0, $961 = 0, $965 = 0, $971 = 0, $973 = 0, $978 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $987 = 0, $988 = 0, $99 = 0, $994 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$027$i = 0, $K2$015$i$i = 0, $K8$053$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i18 = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i17 = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i26$i = 0, $T$014$i$i = 0, $T$026$i = 0, $T$052$i$i = 0, $br$0$i = 0, $br$030$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$073$i = 0, $sp$166$i = 0, $ssize$0$i = 0, $ssize$1$i = 0, $ssize$129$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0, $t$230$i = 0, $tbase$245$i = 0, $tsize$03141$i = 0, $tsize$1$i = 0, $tsize$244$i = 0, $v$0$i = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$332$i = 0, label = 0, sp = 0, $965$looptemp = 0;
 sp = STACKTOP;
 do if ($bytes >>> 0 < 245) {
  if ($bytes >>> 0 < 11) $5 = 16; else $5 = $bytes + 11 & -8;
  $4 = $5 >>> 3;
  $6 = HEAP32[13762] | 0;
  $7 = $6 >>> $4;
  if ($7 & 3) {
   $12 = ($7 & 1 ^ 1) + $4 | 0;
   $13 = $12 << 1;
   $14 = 55088 + ($13 << 2) | 0;
   $15 = 55088 + ($13 + 2 << 2) | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($14 | 0) == ($18 | 0)) HEAP32[13762] = $6 & ~(1 << $12); else {
    if ($18 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
    $25 = $18 + 12 | 0;
    if ((HEAP32[$25 >> 2] | 0) == ($16 | 0)) {
     HEAP32[$25 >> 2] = $14;
     HEAP32[$15 >> 2] = $18;
     break;
    } else _abort();
   } while (0);
   $28 = $12 << 3;
   HEAP32[$16 + 4 >> 2] = $28 | 3;
   $31 = $16 + ($28 | 4) | 0;
   HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1;
   $mem$0 = $17;
   STACKTOP = sp;
   return $mem$0 | 0;
  }
  $34 = HEAP32[13764] | 0;
  if ($5 >>> 0 > $34 >>> 0) {
   if ($7) {
    $38 = 2 << $4;
    $41 = $7 << $4 & ($38 | 0 - $38);
    $44 = ($41 & 0 - $41) + -1 | 0;
    $46 = $44 >>> 12 & 16;
    $47 = $44 >>> $46;
    $49 = $47 >>> 5 & 8;
    $51 = $47 >>> $49;
    $53 = $51 >>> 2 & 4;
    $55 = $51 >>> $53;
    $57 = $55 >>> 1 & 2;
    $59 = $55 >>> $57;
    $61 = $59 >>> 1 & 1;
    $64 = ($49 | $46 | $53 | $57 | $61) + ($59 >>> $61) | 0;
    $65 = $64 << 1;
    $66 = 55088 + ($65 << 2) | 0;
    $67 = 55088 + ($65 + 2 << 2) | 0;
    $68 = HEAP32[$67 >> 2] | 0;
    $69 = $68 + 8 | 0;
    $70 = HEAP32[$69 >> 2] | 0;
    do if (($66 | 0) == ($70 | 0)) {
     HEAP32[13762] = $6 & ~(1 << $64);
     $88 = $34;
    } else {
     if ($70 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
     $77 = $70 + 12 | 0;
     if ((HEAP32[$77 >> 2] | 0) == ($68 | 0)) {
      HEAP32[$77 >> 2] = $66;
      HEAP32[$67 >> 2] = $70;
      $88 = HEAP32[13764] | 0;
      break;
     } else _abort();
    } while (0);
    $80 = $64 << 3;
    $81 = $80 - $5 | 0;
    HEAP32[$68 + 4 >> 2] = $5 | 3;
    $84 = $68 + $5 | 0;
    HEAP32[$68 + ($5 | 4) >> 2] = $81 | 1;
    HEAP32[$68 + $80 >> 2] = $81;
    if ($88) {
     $90 = HEAP32[13767] | 0;
     $91 = $88 >>> 3;
     $92 = $91 << 1;
     $93 = 55088 + ($92 << 2) | 0;
     $94 = HEAP32[13762] | 0;
     $95 = 1 << $91;
     if (!($94 & $95)) {
      HEAP32[13762] = $94 | $95;
      $$pre$phiZ2D = 55088 + ($92 + 2 << 2) | 0;
      $F4$0 = $93;
     } else {
      $99 = 55088 + ($92 + 2 << 2) | 0;
      $100 = HEAP32[$99 >> 2] | 0;
      if ($100 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
       $$pre$phiZ2D = $99;
       $F4$0 = $100;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $90;
     HEAP32[$F4$0 + 12 >> 2] = $90;
     HEAP32[$90 + 8 >> 2] = $F4$0;
     HEAP32[$90 + 12 >> 2] = $93;
    }
    HEAP32[13764] = $81;
    HEAP32[13767] = $84;
    $mem$0 = $69;
    STACKTOP = sp;
    return $mem$0 | 0;
   }
   $106 = HEAP32[13763] | 0;
   if (!$106) $nb$0 = $5; else {
    $110 = ($106 & 0 - $106) + -1 | 0;
    $112 = $110 >>> 12 & 16;
    $113 = $110 >>> $112;
    $115 = $113 >>> 5 & 8;
    $117 = $113 >>> $115;
    $119 = $117 >>> 2 & 4;
    $121 = $117 >>> $119;
    $123 = $121 >>> 1 & 2;
    $125 = $121 >>> $123;
    $127 = $125 >>> 1 & 1;
    $132 = HEAP32[55352 + (($115 | $112 | $119 | $123 | $127) + ($125 >>> $127) << 2) >> 2] | 0;
    $rsize$0$i = (HEAP32[$132 + 4 >> 2] & -8) - $5 | 0;
    $t$0$i = $132;
    $v$0$i = $132;
    while (1) {
     $138 = HEAP32[$t$0$i + 16 >> 2] | 0;
     if (!$138) {
      $141 = HEAP32[$t$0$i + 20 >> 2] | 0;
      if (!$141) break; else $144 = $141;
     } else $144 = $138;
     $147 = (HEAP32[$144 + 4 >> 2] & -8) - $5 | 0;
     $148 = $147 >>> 0 < $rsize$0$i >>> 0;
     $rsize$0$i = $148 ? $147 : $rsize$0$i;
     $t$0$i = $144;
     $v$0$i = $148 ? $144 : $v$0$i;
    }
    $149 = HEAP32[13766] | 0;
    if ($v$0$i >>> 0 < $149 >>> 0) _abort();
    $151 = $v$0$i + $5 | 0;
    if ($v$0$i >>> 0 >= $151 >>> 0) _abort();
    $154 = HEAP32[$v$0$i + 24 >> 2] | 0;
    $156 = HEAP32[$v$0$i + 12 >> 2] | 0;
    do if (($156 | 0) == ($v$0$i | 0)) {
     $167 = $v$0$i + 20 | 0;
     $168 = HEAP32[$167 >> 2] | 0;
     if (!$168) {
      $170 = $v$0$i + 16 | 0;
      $171 = HEAP32[$170 >> 2] | 0;
      if (!$171) {
       $R$1$i = 0;
       break;
      } else {
       $R$0$i = $171;
       $RP$0$i = $170;
      }
     } else {
      $R$0$i = $168;
      $RP$0$i = $167;
     }
     while (1) {
      $173 = $R$0$i + 20 | 0;
      $174 = HEAP32[$173 >> 2] | 0;
      if ($174) {
       $R$0$i = $174;
       $RP$0$i = $173;
       continue;
      }
      $176 = $R$0$i + 16 | 0;
      $177 = HEAP32[$176 >> 2] | 0;
      if (!$177) break; else {
       $R$0$i = $177;
       $RP$0$i = $176;
      }
     }
     if ($RP$0$i >>> 0 < $149 >>> 0) _abort(); else {
      HEAP32[$RP$0$i >> 2] = 0;
      $R$1$i = $R$0$i;
      break;
     }
    } else {
     $159 = HEAP32[$v$0$i + 8 >> 2] | 0;
     if ($159 >>> 0 < $149 >>> 0) _abort();
     $161 = $159 + 12 | 0;
     if ((HEAP32[$161 >> 2] | 0) != ($v$0$i | 0)) _abort();
     $164 = $156 + 8 | 0;
     if ((HEAP32[$164 >> 2] | 0) == ($v$0$i | 0)) {
      HEAP32[$161 >> 2] = $156;
      HEAP32[$164 >> 2] = $159;
      $R$1$i = $156;
      break;
     } else _abort();
    } while (0);
    do if ($154) {
     $182 = HEAP32[$v$0$i + 28 >> 2] | 0;
     $183 = 55352 + ($182 << 2) | 0;
     if (($v$0$i | 0) == (HEAP32[$183 >> 2] | 0)) {
      HEAP32[$183 >> 2] = $R$1$i;
      if (!$R$1$i) {
       HEAP32[13763] = HEAP32[13763] & ~(1 << $182);
       break;
      }
     } else {
      if ($154 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
      $192 = $154 + 16 | 0;
      if ((HEAP32[$192 >> 2] | 0) == ($v$0$i | 0)) HEAP32[$192 >> 2] = $R$1$i; else HEAP32[$154 + 20 >> 2] = $R$1$i;
      if (!$R$1$i) break;
     }
     $197 = HEAP32[13766] | 0;
     if ($R$1$i >>> 0 < $197 >>> 0) _abort();
     HEAP32[$R$1$i + 24 >> 2] = $154;
     $201 = HEAP32[$v$0$i + 16 >> 2] | 0;
     do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
      HEAP32[$R$1$i + 16 >> 2] = $201;
      HEAP32[$201 + 24 >> 2] = $R$1$i;
      break;
     } while (0);
     $207 = HEAP32[$v$0$i + 20 >> 2] | 0;
     if ($207) if ($207 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
      HEAP32[$R$1$i + 20 >> 2] = $207;
      HEAP32[$207 + 24 >> 2] = $R$1$i;
      break;
     }
    } while (0);
    if ($rsize$0$i >>> 0 < 16) {
     $214 = $rsize$0$i + $5 | 0;
     HEAP32[$v$0$i + 4 >> 2] = $214 | 3;
     $217 = $v$0$i + ($214 + 4) | 0;
     HEAP32[$217 >> 2] = HEAP32[$217 >> 2] | 1;
    } else {
     HEAP32[$v$0$i + 4 >> 2] = $5 | 3;
     HEAP32[$v$0$i + ($5 | 4) >> 2] = $rsize$0$i | 1;
     HEAP32[$v$0$i + ($rsize$0$i + $5) >> 2] = $rsize$0$i;
     $225 = HEAP32[13764] | 0;
     if ($225) {
      $227 = HEAP32[13767] | 0;
      $228 = $225 >>> 3;
      $229 = $228 << 1;
      $230 = 55088 + ($229 << 2) | 0;
      $231 = HEAP32[13762] | 0;
      $232 = 1 << $228;
      if (!($231 & $232)) {
       HEAP32[13762] = $231 | $232;
       $$pre$phi$iZ2D = 55088 + ($229 + 2 << 2) | 0;
       $F1$0$i = $230;
      } else {
       $236 = 55088 + ($229 + 2 << 2) | 0;
       $237 = HEAP32[$236 >> 2] | 0;
       if ($237 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
        $$pre$phi$iZ2D = $236;
        $F1$0$i = $237;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $227;
      HEAP32[$F1$0$i + 12 >> 2] = $227;
      HEAP32[$227 + 8 >> 2] = $F1$0$i;
      HEAP32[$227 + 12 >> 2] = $230;
     }
     HEAP32[13764] = $rsize$0$i;
     HEAP32[13767] = $151;
    }
    $mem$0 = $v$0$i + 8 | 0;
    STACKTOP = sp;
    return $mem$0 | 0;
   }
  } else $nb$0 = $5;
 } else if ($bytes >>> 0 > 4294967231) $nb$0 = -1; else {
  $245 = $bytes + 11 | 0;
  $246 = $245 & -8;
  $247 = HEAP32[13763] | 0;
  if (!$247) $nb$0 = $246; else {
   $249 = 0 - $246 | 0;
   $250 = $245 >>> 8;
   if (!$250) $idx$0$i = 0; else if ($246 >>> 0 > 16777215) $idx$0$i = 31; else {
    $255 = ($250 + 1048320 | 0) >>> 16 & 8;
    $256 = $250 << $255;
    $259 = ($256 + 520192 | 0) >>> 16 & 4;
    $261 = $256 << $259;
    $264 = ($261 + 245760 | 0) >>> 16 & 2;
    $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
    $idx$0$i = $246 >>> ($269 + 7 | 0) & 1 | $269 << 1;
   }
   $276 = HEAP32[55352 + ($idx$0$i << 2) >> 2] | 0;
   L126 : do if (!$276) {
    $rsize$2$i = $249;
    $t$1$i = 0;
    $v$2$i = 0;
   } else {
    if (($idx$0$i | 0) == 31) $282 = 0; else $282 = 25 - ($idx$0$i >>> 1) | 0;
    $rsize$0$i15 = $249;
    $rst$0$i = 0;
    $sizebits$0$i = $246 << $282;
    $t$0$i14 = $276;
    $v$0$i16 = 0;
    while (1) {
     $285 = HEAP32[$t$0$i14 + 4 >> 2] & -8;
     $286 = $285 - $246 | 0;
     if ($286 >>> 0 < $rsize$0$i15 >>> 0) if (($285 | 0) == ($246 | 0)) {
      $rsize$2$i = $286;
      $t$1$i = $t$0$i14;
      $v$2$i = $t$0$i14;
      break L126;
     } else {
      $rsize$1$i = $286;
      $v$1$i = $t$0$i14;
     } else {
      $rsize$1$i = $rsize$0$i15;
      $v$1$i = $v$0$i16;
     }
     $290 = HEAP32[$t$0$i14 + 20 >> 2] | 0;
     $t$0$i14 = HEAP32[$t$0$i14 + ($sizebits$0$i >>> 31 << 2) + 16 >> 2] | 0;
     $rst$1$i = ($290 | 0) == 0 | ($290 | 0) == ($t$0$i14 | 0) ? $rst$0$i : $290;
     if (!$t$0$i14) {
      $rsize$2$i = $rsize$1$i;
      $t$1$i = $rst$1$i;
      $v$2$i = $v$1$i;
      break;
     } else {
      $rsize$0$i15 = $rsize$1$i;
      $rst$0$i = $rst$1$i;
      $sizebits$0$i = $sizebits$0$i << 1;
      $v$0$i16 = $v$1$i;
     }
    }
   } while (0);
   if (($t$1$i | 0) == 0 & ($v$2$i | 0) == 0) {
    $300 = 2 << $idx$0$i;
    $303 = $247 & ($300 | 0 - $300);
    if (!$303) {
     $nb$0 = $246;
     break;
    }
    $307 = ($303 & 0 - $303) + -1 | 0;
    $309 = $307 >>> 12 & 16;
    $310 = $307 >>> $309;
    $312 = $310 >>> 5 & 8;
    $314 = $310 >>> $312;
    $316 = $314 >>> 2 & 4;
    $318 = $314 >>> $316;
    $320 = $318 >>> 1 & 2;
    $322 = $318 >>> $320;
    $324 = $322 >>> 1 & 1;
    $t$2$ph$i = HEAP32[55352 + (($312 | $309 | $316 | $320 | $324) + ($322 >>> $324) << 2) >> 2] | 0;
   } else $t$2$ph$i = $t$1$i;
   if (!$t$2$ph$i) {
    $rsize$3$lcssa$i = $rsize$2$i;
    $v$3$lcssa$i = $v$2$i;
   } else {
    $rsize$331$i = $rsize$2$i;
    $t$230$i = $t$2$ph$i;
    $v$332$i = $v$2$i;
    while (1) {
     $334 = (HEAP32[$t$230$i + 4 >> 2] & -8) - $246 | 0;
     $335 = $334 >>> 0 < $rsize$331$i >>> 0;
     $$rsize$3$i = $335 ? $334 : $rsize$331$i;
     $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
     $337 = HEAP32[$t$230$i + 16 >> 2] | 0;
     if ($337) {
      $rsize$331$i = $$rsize$3$i;
      $t$230$i = $337;
      $v$332$i = $t$2$v$3$i;
      continue;
     }
     $t$230$i = HEAP32[$t$230$i + 20 >> 2] | 0;
     if (!$t$230$i) {
      $rsize$3$lcssa$i = $$rsize$3$i;
      $v$3$lcssa$i = $t$2$v$3$i;
      break;
     } else {
      $rsize$331$i = $$rsize$3$i;
      $v$332$i = $t$2$v$3$i;
     }
    }
   }
   if (!$v$3$lcssa$i) $nb$0 = $246; else if ($rsize$3$lcssa$i >>> 0 < ((HEAP32[13764] | 0) - $246 | 0) >>> 0) {
    $346 = HEAP32[13766] | 0;
    if ($v$3$lcssa$i >>> 0 < $346 >>> 0) _abort();
    $348 = $v$3$lcssa$i + $246 | 0;
    if ($v$3$lcssa$i >>> 0 >= $348 >>> 0) _abort();
    $351 = HEAP32[$v$3$lcssa$i + 24 >> 2] | 0;
    $353 = HEAP32[$v$3$lcssa$i + 12 >> 2] | 0;
    do if (($353 | 0) == ($v$3$lcssa$i | 0)) {
     $364 = $v$3$lcssa$i + 20 | 0;
     $365 = HEAP32[$364 >> 2] | 0;
     if (!$365) {
      $367 = $v$3$lcssa$i + 16 | 0;
      $368 = HEAP32[$367 >> 2] | 0;
      if (!$368) {
       $R$1$i20 = 0;
       break;
      } else {
       $R$0$i18 = $368;
       $RP$0$i17 = $367;
      }
     } else {
      $R$0$i18 = $365;
      $RP$0$i17 = $364;
     }
     while (1) {
      $370 = $R$0$i18 + 20 | 0;
      $371 = HEAP32[$370 >> 2] | 0;
      if ($371) {
       $R$0$i18 = $371;
       $RP$0$i17 = $370;
       continue;
      }
      $373 = $R$0$i18 + 16 | 0;
      $374 = HEAP32[$373 >> 2] | 0;
      if (!$374) break; else {
       $R$0$i18 = $374;
       $RP$0$i17 = $373;
      }
     }
     if ($RP$0$i17 >>> 0 < $346 >>> 0) _abort(); else {
      HEAP32[$RP$0$i17 >> 2] = 0;
      $R$1$i20 = $R$0$i18;
      break;
     }
    } else {
     $356 = HEAP32[$v$3$lcssa$i + 8 >> 2] | 0;
     if ($356 >>> 0 < $346 >>> 0) _abort();
     $358 = $356 + 12 | 0;
     if ((HEAP32[$358 >> 2] | 0) != ($v$3$lcssa$i | 0)) _abort();
     $361 = $353 + 8 | 0;
     if ((HEAP32[$361 >> 2] | 0) == ($v$3$lcssa$i | 0)) {
      HEAP32[$358 >> 2] = $353;
      HEAP32[$361 >> 2] = $356;
      $R$1$i20 = $353;
      break;
     } else _abort();
    } while (0);
    do if ($351) {
     $379 = HEAP32[$v$3$lcssa$i + 28 >> 2] | 0;
     $380 = 55352 + ($379 << 2) | 0;
     if (($v$3$lcssa$i | 0) == (HEAP32[$380 >> 2] | 0)) {
      HEAP32[$380 >> 2] = $R$1$i20;
      if (!$R$1$i20) {
       HEAP32[13763] = HEAP32[13763] & ~(1 << $379);
       break;
      }
     } else {
      if ($351 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
      $389 = $351 + 16 | 0;
      if ((HEAP32[$389 >> 2] | 0) == ($v$3$lcssa$i | 0)) HEAP32[$389 >> 2] = $R$1$i20; else HEAP32[$351 + 20 >> 2] = $R$1$i20;
      if (!$R$1$i20) break;
     }
     $394 = HEAP32[13766] | 0;
     if ($R$1$i20 >>> 0 < $394 >>> 0) _abort();
     HEAP32[$R$1$i20 + 24 >> 2] = $351;
     $398 = HEAP32[$v$3$lcssa$i + 16 >> 2] | 0;
     do if ($398) if ($398 >>> 0 < $394 >>> 0) _abort(); else {
      HEAP32[$R$1$i20 + 16 >> 2] = $398;
      HEAP32[$398 + 24 >> 2] = $R$1$i20;
      break;
     } while (0);
     $404 = HEAP32[$v$3$lcssa$i + 20 >> 2] | 0;
     if ($404) if ($404 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
      HEAP32[$R$1$i20 + 20 >> 2] = $404;
      HEAP32[$404 + 24 >> 2] = $R$1$i20;
      break;
     }
    } while (0);
    L204 : do if ($rsize$3$lcssa$i >>> 0 < 16) {
     $411 = $rsize$3$lcssa$i + $246 | 0;
     HEAP32[$v$3$lcssa$i + 4 >> 2] = $411 | 3;
     $414 = $v$3$lcssa$i + ($411 + 4) | 0;
     HEAP32[$414 >> 2] = HEAP32[$414 >> 2] | 1;
    } else {
     HEAP32[$v$3$lcssa$i + 4 >> 2] = $246 | 3;
     HEAP32[$v$3$lcssa$i + ($246 | 4) >> 2] = $rsize$3$lcssa$i | 1;
     HEAP32[$v$3$lcssa$i + ($rsize$3$lcssa$i + $246) >> 2] = $rsize$3$lcssa$i;
     $422 = $rsize$3$lcssa$i >>> 3;
     if ($rsize$3$lcssa$i >>> 0 < 256) {
      $424 = $422 << 1;
      $425 = 55088 + ($424 << 2) | 0;
      $426 = HEAP32[13762] | 0;
      $427 = 1 << $422;
      do if (!($426 & $427)) {
       HEAP32[13762] = $426 | $427;
       $$pre$phi$i26Z2D = 55088 + ($424 + 2 << 2) | 0;
       $F5$0$i = $425;
      } else {
       $431 = 55088 + ($424 + 2 << 2) | 0;
       $432 = HEAP32[$431 >> 2] | 0;
       if ($432 >>> 0 >= (HEAP32[13766] | 0) >>> 0) {
        $$pre$phi$i26Z2D = $431;
        $F5$0$i = $432;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i26Z2D >> 2] = $348;
      HEAP32[$F5$0$i + 12 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $F5$0$i;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $425;
      break;
     }
     $438 = $rsize$3$lcssa$i >>> 8;
     if (!$438) $I7$0$i = 0; else if ($rsize$3$lcssa$i >>> 0 > 16777215) $I7$0$i = 31; else {
      $443 = ($438 + 1048320 | 0) >>> 16 & 8;
      $444 = $438 << $443;
      $447 = ($444 + 520192 | 0) >>> 16 & 4;
      $449 = $444 << $447;
      $452 = ($449 + 245760 | 0) >>> 16 & 2;
      $457 = 14 - ($447 | $443 | $452) + ($449 << $452 >>> 15) | 0;
      $I7$0$i = $rsize$3$lcssa$i >>> ($457 + 7 | 0) & 1 | $457 << 1;
     }
     $463 = 55352 + ($I7$0$i << 2) | 0;
     HEAP32[$v$3$lcssa$i + ($246 + 28) >> 2] = $I7$0$i;
     HEAP32[$v$3$lcssa$i + ($246 + 20) >> 2] = 0;
     HEAP32[$v$3$lcssa$i + ($246 + 16) >> 2] = 0;
     $467 = HEAP32[13763] | 0;
     $468 = 1 << $I7$0$i;
     if (!($467 & $468)) {
      HEAP32[13763] = $467 | $468;
      HEAP32[$463 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $463;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
      break;
     }
     $475 = HEAP32[$463 >> 2] | 0;
     if (($I7$0$i | 0) == 31) $484 = 0; else $484 = 25 - ($I7$0$i >>> 1) | 0;
     L224 : do if ((HEAP32[$475 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) $T$0$lcssa$i = $475; else {
      $K12$027$i = $rsize$3$lcssa$i << $484;
      $T$026$i = $475;
      while (1) {
       $492 = $T$026$i + ($K12$027$i >>> 31 << 2) + 16 | 0;
       $487 = HEAP32[$492 >> 2] | 0;
       if (!$487) break;
       if ((HEAP32[$487 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) {
        $T$0$lcssa$i = $487;
        break L224;
       } else {
        $K12$027$i = $K12$027$i << 1;
        $T$026$i = $487;
       }
      }
      if ($492 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
       HEAP32[$492 >> 2] = $348;
       HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $T$026$i;
       HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
       HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
       break L204;
      }
     } while (0);
     $499 = $T$0$lcssa$i + 8 | 0;
     $500 = HEAP32[$499 >> 2] | 0;
     $501 = HEAP32[13766] | 0;
     if ($T$0$lcssa$i >>> 0 >= $501 >>> 0 & $500 >>> 0 >= $501 >>> 0) {
      HEAP32[$500 + 12 >> 2] = $348;
      HEAP32[$499 >> 2] = $348;
      HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $500;
      HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $T$0$lcssa$i;
      HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $mem$0 = $v$3$lcssa$i + 8 | 0;
    STACKTOP = sp;
    return $mem$0 | 0;
   } else $nb$0 = $246;
  }
 } while (0);
 $509 = HEAP32[13764] | 0;
 if ($509 >>> 0 >= $nb$0 >>> 0) {
  $511 = $509 - $nb$0 | 0;
  $512 = HEAP32[13767] | 0;
  if ($511 >>> 0 > 15) {
   HEAP32[13767] = $512 + $nb$0;
   HEAP32[13764] = $511;
   HEAP32[$512 + ($nb$0 + 4) >> 2] = $511 | 1;
   HEAP32[$512 + $509 >> 2] = $511;
   HEAP32[$512 + 4 >> 2] = $nb$0 | 3;
  } else {
   HEAP32[13764] = 0;
   HEAP32[13767] = 0;
   HEAP32[$512 + 4 >> 2] = $509 | 3;
   $522 = $512 + ($509 + 4) | 0;
   HEAP32[$522 >> 2] = HEAP32[$522 >> 2] | 1;
  }
  $mem$0 = $512 + 8 | 0;
  STACKTOP = sp;
  return $mem$0 | 0;
 }
 $526 = HEAP32[13765] | 0;
 if ($526 >>> 0 > $nb$0 >>> 0) {
  $528 = $526 - $nb$0 | 0;
  HEAP32[13765] = $528;
  $529 = HEAP32[13768] | 0;
  HEAP32[13768] = $529 + $nb$0;
  HEAP32[$529 + ($nb$0 + 4) >> 2] = $528 | 1;
  HEAP32[$529 + 4 >> 2] = $nb$0 | 3;
  $mem$0 = $529 + 8 | 0;
  STACKTOP = sp;
  return $mem$0 | 0;
 }
 do if (!(HEAP32[13880] | 0)) {
  $538 = _sysconf(30) | 0;
  if (!($538 + -1 & $538)) {
   HEAP32[13882] = $538;
   HEAP32[13881] = $538;
   HEAP32[13883] = -1;
   HEAP32[13884] = -1;
   HEAP32[13885] = 0;
   HEAP32[13873] = 0;
   HEAP32[13880] = (_time(0) | 0) & -16 ^ 1431655768;
   break;
  } else _abort();
 } while (0);
 $545 = $nb$0 + 48 | 0;
 $546 = HEAP32[13882] | 0;
 $547 = $nb$0 + 47 | 0;
 $548 = $546 + $547 | 0;
 $549 = 0 - $546 | 0;
 $550 = $548 & $549;
 if ($550 >>> 0 <= $nb$0 >>> 0) {
  $mem$0 = 0;
  STACKTOP = sp;
  return $mem$0 | 0;
 }
 $552 = HEAP32[13872] | 0;
 if ($552) {
  $554 = HEAP32[13870] | 0;
  $555 = $554 + $550 | 0;
  if ($555 >>> 0 <= $554 >>> 0 | $555 >>> 0 > $552 >>> 0) {
   $mem$0 = 0;
   STACKTOP = sp;
   return $mem$0 | 0;
  }
 }
 L266 : do if (!(HEAP32[13873] & 4)) {
  $561 = HEAP32[13768] | 0;
  L268 : do if (!$561) label = 181; else {
   $sp$0$i$i = 55496 | 0;
   while (1) {
    $563 = HEAP32[$sp$0$i$i >> 2] | 0;
    if ($563 >>> 0 <= $561 >>> 0) {
     $565 = $sp$0$i$i + 4 | 0;
     if (($563 + (HEAP32[$565 >> 2] | 0) | 0) >>> 0 > $561 >>> 0) break;
    }
    $570 = HEAP32[$sp$0$i$i + 8 >> 2] | 0;
    if (!$570) {
     label = 181;
     break L268;
    } else $sp$0$i$i = $570;
   }
   if (!$sp$0$i$i) label = 181; else {
    $597 = $548 - (HEAP32[13765] | 0) & $549;
    if ($597 >>> 0 < 2147483647) {
     $599 = _sbrk($597 | 0) | 0;
     if (($599 | 0) == ((HEAP32[$sp$0$i$i >> 2] | 0) + (HEAP32[$565 >> 2] | 0) | 0)) {
      $br$0$i = $599;
      $ssize$1$i = $597;
      label = 190;
     } else {
      $br$030$i = $599;
      $ssize$129$i = $597;
      label = 191;
     }
    } else $tsize$03141$i = 0;
   }
  } while (0);
  do if ((label | 0) == 181) {
   $573 = _sbrk(0) | 0;
   if (($573 | 0) == (-1 | 0)) $tsize$03141$i = 0; else {
    $575 = $573;
    $576 = HEAP32[13881] | 0;
    $577 = $576 + -1 | 0;
    if (!($577 & $575)) $ssize$0$i = $550; else $ssize$0$i = $550 - $575 + ($577 + $575 & 0 - $576) | 0;
    $585 = HEAP32[13870] | 0;
    $586 = $585 + $ssize$0$i | 0;
    if ($ssize$0$i >>> 0 > $nb$0 >>> 0 & $ssize$0$i >>> 0 < 2147483647) {
     $589 = HEAP32[13872] | 0;
     if ($589) if ($586 >>> 0 <= $585 >>> 0 | $586 >>> 0 > $589 >>> 0) {
      $tsize$03141$i = 0;
      break;
     }
     $593 = _sbrk($ssize$0$i | 0) | 0;
     if (($593 | 0) == ($573 | 0)) {
      $br$0$i = $573;
      $ssize$1$i = $ssize$0$i;
      label = 190;
     } else {
      $br$030$i = $593;
      $ssize$129$i = $ssize$0$i;
      label = 191;
     }
    } else $tsize$03141$i = 0;
   }
  } while (0);
  L288 : do if ((label | 0) == 190) if (($br$0$i | 0) == (-1 | 0)) $tsize$03141$i = $ssize$1$i; else {
   $tbase$245$i = $br$0$i;
   $tsize$244$i = $ssize$1$i;
   label = 201;
   break L266;
  } else if ((label | 0) == 191) {
   $605 = 0 - $ssize$129$i | 0;
   do if (($br$030$i | 0) != (-1 | 0) & $ssize$129$i >>> 0 < 2147483647 & $545 >>> 0 > $ssize$129$i >>> 0) {
    $609 = HEAP32[13882] | 0;
    $613 = $547 - $ssize$129$i + $609 & 0 - $609;
    if ($613 >>> 0 < 2147483647) if ((_sbrk($613 | 0) | 0) == (-1 | 0)) {
     _sbrk($605 | 0) | 0;
     $tsize$03141$i = 0;
     break L288;
    } else {
     $ssize$2$i = $613 + $ssize$129$i | 0;
     break;
    } else $ssize$2$i = $ssize$129$i;
   } else $ssize$2$i = $ssize$129$i; while (0);
   if (($br$030$i | 0) == (-1 | 0)) $tsize$03141$i = 0; else {
    $tbase$245$i = $br$030$i;
    $tsize$244$i = $ssize$2$i;
    label = 201;
    break L266;
   }
  } while (0);
  HEAP32[13873] = HEAP32[13873] | 4;
  $tsize$1$i = $tsize$03141$i;
  label = 198;
 } else {
  $tsize$1$i = 0;
  label = 198;
 } while (0);
 if ((label | 0) == 198) if ($550 >>> 0 < 2147483647) {
  $622 = _sbrk($550 | 0) | 0;
  $623 = _sbrk(0) | 0;
  if (($622 | 0) != (-1 | 0) & ($623 | 0) != (-1 | 0) & $622 >>> 0 < $623 >>> 0) {
   $629 = $623 - $622 | 0;
   $631 = $629 >>> 0 > ($nb$0 + 40 | 0) >>> 0;
   if ($631) {
    $tbase$245$i = $622;
    $tsize$244$i = $631 ? $629 : $tsize$1$i;
    label = 201;
   }
  }
 }
 if ((label | 0) == 201) {
  $633 = (HEAP32[13870] | 0) + $tsize$244$i | 0;
  HEAP32[13870] = $633;
  if ($633 >>> 0 > (HEAP32[13871] | 0) >>> 0) HEAP32[13871] = $633;
  $636 = HEAP32[13768] | 0;
  L308 : do if (!$636) {
   $638 = HEAP32[13766] | 0;
   if (($638 | 0) == 0 | $tbase$245$i >>> 0 < $638 >>> 0) HEAP32[13766] = $tbase$245$i;
   HEAP32[13874] = $tbase$245$i;
   HEAP32[13875] = $tsize$244$i;
   HEAP32[13877] = 0;
   HEAP32[13771] = HEAP32[13880];
   HEAP32[13770] = -1;
   $i$02$i$i = 0;
   do {
    $642 = $i$02$i$i << 1;
    $643 = 55088 + ($642 << 2) | 0;
    HEAP32[55088 + ($642 + 3 << 2) >> 2] = $643;
    HEAP32[55088 + ($642 + 2 << 2) >> 2] = $643;
    $i$02$i$i = $i$02$i$i + 1 | 0;
   } while (($i$02$i$i | 0) != 32);
   $649 = $tbase$245$i + 8 | 0;
   if (!($649 & 7)) $655 = 0; else $655 = 0 - $649 & 7;
   $656 = $tsize$244$i + -40 - $655 | 0;
   HEAP32[13768] = $tbase$245$i + $655;
   HEAP32[13765] = $656;
   HEAP32[$tbase$245$i + ($655 + 4) >> 2] = $656 | 1;
   HEAP32[$tbase$245$i + ($tsize$244$i + -36) >> 2] = 40;
   HEAP32[13769] = HEAP32[13884];
  } else {
   $sp$073$i = 55496 | 0;
   while (1) {
    $661 = HEAP32[$sp$073$i >> 2] | 0;
    $662 = $sp$073$i + 4 | 0;
    $663 = HEAP32[$662 >> 2] | 0;
    if (($tbase$245$i | 0) == ($661 + $663 | 0)) {
     label = 213;
     break;
    }
    $667 = HEAP32[$sp$073$i + 8 >> 2] | 0;
    if (!$667) break; else $sp$073$i = $667;
   }
   if ((label | 0) == 213) if (!(HEAP32[$sp$073$i + 12 >> 2] & 8)) if ($636 >>> 0 >= $661 >>> 0 & $636 >>> 0 < $tbase$245$i >>> 0) {
    HEAP32[$662 >> 2] = $663 + $tsize$244$i;
    $677 = (HEAP32[13765] | 0) + $tsize$244$i | 0;
    $679 = $636 + 8 | 0;
    if (!($679 & 7)) $685 = 0; else $685 = 0 - $679 & 7;
    $686 = $677 - $685 | 0;
    HEAP32[13768] = $636 + $685;
    HEAP32[13765] = $686;
    HEAP32[$636 + ($685 + 4) >> 2] = $686 | 1;
    HEAP32[$636 + ($677 + 4) >> 2] = 40;
    HEAP32[13769] = HEAP32[13884];
    break;
   }
   $691 = HEAP32[13766] | 0;
   if ($tbase$245$i >>> 0 < $691 >>> 0) {
    HEAP32[13766] = $tbase$245$i;
    $756 = $tbase$245$i;
   } else $756 = $691;
   $693 = $tbase$245$i + $tsize$244$i | 0;
   $sp$166$i = 55496 | 0;
   while (1) {
    if ((HEAP32[$sp$166$i >> 2] | 0) == ($693 | 0)) {
     label = 223;
     break;
    }
    $697 = HEAP32[$sp$166$i + 8 >> 2] | 0;
    if (!$697) break; else $sp$166$i = $697;
   }
   if ((label | 0) == 223) if (!(HEAP32[$sp$166$i + 12 >> 2] & 8)) {
    HEAP32[$sp$166$i >> 2] = $tbase$245$i;
    $703 = $sp$166$i + 4 | 0;
    HEAP32[$703 >> 2] = (HEAP32[$703 >> 2] | 0) + $tsize$244$i;
    $707 = $tbase$245$i + 8 | 0;
    if (!($707 & 7)) $713 = 0; else $713 = 0 - $707 & 7;
    $715 = $tbase$245$i + ($tsize$244$i + 8) | 0;
    if (!($715 & 7)) $720 = 0; else $720 = 0 - $715 & 7;
    $721 = $tbase$245$i + ($720 + $tsize$244$i) | 0;
    $$sum$i19$i = $713 + $nb$0 | 0;
    $725 = $tbase$245$i + $$sum$i19$i | 0;
    $726 = $721 - ($tbase$245$i + $713) - $nb$0 | 0;
    HEAP32[$tbase$245$i + ($713 + 4) >> 2] = $nb$0 | 3;
    L345 : do if (($721 | 0) == ($636 | 0)) {
     $731 = (HEAP32[13765] | 0) + $726 | 0;
     HEAP32[13765] = $731;
     HEAP32[13768] = $725;
     HEAP32[$tbase$245$i + ($$sum$i19$i + 4) >> 2] = $731 | 1;
    } else {
     if (($721 | 0) == (HEAP32[13767] | 0)) {
      $737 = (HEAP32[13764] | 0) + $726 | 0;
      HEAP32[13764] = $737;
      HEAP32[13767] = $725;
      HEAP32[$tbase$245$i + ($$sum$i19$i + 4) >> 2] = $737 | 1;
      HEAP32[$tbase$245$i + ($737 + $$sum$i19$i) >> 2] = $737;
      break;
     }
     $$sum2$i21$i = $tsize$244$i + 4 | 0;
     $742 = HEAP32[$tbase$245$i + ($$sum2$i21$i + $720) >> 2] | 0;
     if (($742 & 3 | 0) == 1) {
      $745 = $742 & -8;
      $746 = $742 >>> 3;
      L353 : do if ($742 >>> 0 < 256) {
       $749 = HEAP32[$tbase$245$i + (($720 | 8) + $tsize$244$i) >> 2] | 0;
       $751 = HEAP32[$tbase$245$i + ($tsize$244$i + 12 + $720) >> 2] | 0;
       $753 = 55088 + ($746 << 1 << 2) | 0;
       do if (($749 | 0) != ($753 | 0)) {
        if ($749 >>> 0 < $756 >>> 0) _abort();
        if ((HEAP32[$749 + 12 >> 2] | 0) == ($721 | 0)) break;
        _abort();
       } while (0);
       if (($751 | 0) == ($749 | 0)) {
        HEAP32[13762] = HEAP32[13762] & ~(1 << $746);
        break;
       }
       do if (($751 | 0) == ($753 | 0)) $$pre$phi59$i$iZ2D = $751 + 8 | 0; else {
        if ($751 >>> 0 < $756 >>> 0) _abort();
        $767 = $751 + 8 | 0;
        if ((HEAP32[$767 >> 2] | 0) == ($721 | 0)) {
         $$pre$phi59$i$iZ2D = $767;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$749 + 12 >> 2] = $751;
       HEAP32[$$pre$phi59$i$iZ2D >> 2] = $749;
      } else {
       $772 = HEAP32[$tbase$245$i + (($720 | 24) + $tsize$244$i) >> 2] | 0;
       $774 = HEAP32[$tbase$245$i + ($tsize$244$i + 12 + $720) >> 2] | 0;
       do if (($774 | 0) == ($721 | 0)) {
        $$sum67$i$i = $720 | 16;
        $785 = $tbase$245$i + ($$sum2$i21$i + $$sum67$i$i) | 0;
        $786 = HEAP32[$785 >> 2] | 0;
        if (!$786) {
         $788 = $tbase$245$i + ($$sum67$i$i + $tsize$244$i) | 0;
         $789 = HEAP32[$788 >> 2] | 0;
         if (!$789) {
          $R$1$i$i = 0;
          break;
         } else {
          $R$0$i$i = $789;
          $RP$0$i$i = $788;
         }
        } else {
         $R$0$i$i = $786;
         $RP$0$i$i = $785;
        }
        while (1) {
         $791 = $R$0$i$i + 20 | 0;
         $792 = HEAP32[$791 >> 2] | 0;
         if ($792) {
          $R$0$i$i = $792;
          $RP$0$i$i = $791;
          continue;
         }
         $794 = $R$0$i$i + 16 | 0;
         $795 = HEAP32[$794 >> 2] | 0;
         if (!$795) break; else {
          $R$0$i$i = $795;
          $RP$0$i$i = $794;
         }
        }
        if ($RP$0$i$i >>> 0 < $756 >>> 0) _abort(); else {
         HEAP32[$RP$0$i$i >> 2] = 0;
         $R$1$i$i = $R$0$i$i;
         break;
        }
       } else {
        $777 = HEAP32[$tbase$245$i + (($720 | 8) + $tsize$244$i) >> 2] | 0;
        if ($777 >>> 0 < $756 >>> 0) _abort();
        $779 = $777 + 12 | 0;
        if ((HEAP32[$779 >> 2] | 0) != ($721 | 0)) _abort();
        $782 = $774 + 8 | 0;
        if ((HEAP32[$782 >> 2] | 0) == ($721 | 0)) {
         HEAP32[$779 >> 2] = $774;
         HEAP32[$782 >> 2] = $777;
         $R$1$i$i = $774;
         break;
        } else _abort();
       } while (0);
       if (!$772) break;
       $800 = HEAP32[$tbase$245$i + ($tsize$244$i + 28 + $720) >> 2] | 0;
       $801 = 55352 + ($800 << 2) | 0;
       do if (($721 | 0) == (HEAP32[$801 >> 2] | 0)) {
        HEAP32[$801 >> 2] = $R$1$i$i;
        if ($R$1$i$i) break;
        HEAP32[13763] = HEAP32[13763] & ~(1 << $800);
        break L353;
       } else {
        if ($772 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
        $810 = $772 + 16 | 0;
        if ((HEAP32[$810 >> 2] | 0) == ($721 | 0)) HEAP32[$810 >> 2] = $R$1$i$i; else HEAP32[$772 + 20 >> 2] = $R$1$i$i;
        if (!$R$1$i$i) break L353;
       } while (0);
       $815 = HEAP32[13766] | 0;
       if ($R$1$i$i >>> 0 < $815 >>> 0) _abort();
       HEAP32[$R$1$i$i + 24 >> 2] = $772;
       $$sum3132$i$i = $720 | 16;
       $819 = HEAP32[$tbase$245$i + ($$sum3132$i$i + $tsize$244$i) >> 2] | 0;
       do if ($819) if ($819 >>> 0 < $815 >>> 0) _abort(); else {
        HEAP32[$R$1$i$i + 16 >> 2] = $819;
        HEAP32[$819 + 24 >> 2] = $R$1$i$i;
        break;
       } while (0);
       $825 = HEAP32[$tbase$245$i + ($$sum2$i21$i + $$sum3132$i$i) >> 2] | 0;
       if (!$825) break;
       if ($825 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
        HEAP32[$R$1$i$i + 20 >> 2] = $825;
        HEAP32[$825 + 24 >> 2] = $R$1$i$i;
        break;
       }
      } while (0);
      $oldfirst$0$i$i = $tbase$245$i + (($745 | $720) + $tsize$244$i) | 0;
      $qsize$0$i$i = $745 + $726 | 0;
     } else {
      $oldfirst$0$i$i = $721;
      $qsize$0$i$i = $726;
     }
     $833 = $oldfirst$0$i$i + 4 | 0;
     HEAP32[$833 >> 2] = HEAP32[$833 >> 2] & -2;
     HEAP32[$tbase$245$i + ($$sum$i19$i + 4) >> 2] = $qsize$0$i$i | 1;
     HEAP32[$tbase$245$i + ($qsize$0$i$i + $$sum$i19$i) >> 2] = $qsize$0$i$i;
     $839 = $qsize$0$i$i >>> 3;
     if ($qsize$0$i$i >>> 0 < 256) {
      $841 = $839 << 1;
      $842 = 55088 + ($841 << 2) | 0;
      $843 = HEAP32[13762] | 0;
      $844 = 1 << $839;
      do if (!($843 & $844)) {
       HEAP32[13762] = $843 | $844;
       $$pre$phi$i24$iZ2D = 55088 + ($841 + 2 << 2) | 0;
       $F4$0$i$i = $842;
      } else {
       $848 = 55088 + ($841 + 2 << 2) | 0;
       $849 = HEAP32[$848 >> 2] | 0;
       if ($849 >>> 0 >= (HEAP32[13766] | 0) >>> 0) {
        $$pre$phi$i24$iZ2D = $848;
        $F4$0$i$i = $849;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i24$iZ2D >> 2] = $725;
      HEAP32[$F4$0$i$i + 12 >> 2] = $725;
      HEAP32[$tbase$245$i + ($$sum$i19$i + 8) >> 2] = $F4$0$i$i;
      HEAP32[$tbase$245$i + ($$sum$i19$i + 12) >> 2] = $842;
      break;
     }
     $855 = $qsize$0$i$i >>> 8;
     do if (!$855) $I7$0$i$i = 0; else {
      if ($qsize$0$i$i >>> 0 > 16777215) {
       $I7$0$i$i = 31;
       break;
      }
      $860 = ($855 + 1048320 | 0) >>> 16 & 8;
      $861 = $855 << $860;
      $864 = ($861 + 520192 | 0) >>> 16 & 4;
      $866 = $861 << $864;
      $869 = ($866 + 245760 | 0) >>> 16 & 2;
      $874 = 14 - ($864 | $860 | $869) + ($866 << $869 >>> 15) | 0;
      $I7$0$i$i = $qsize$0$i$i >>> ($874 + 7 | 0) & 1 | $874 << 1;
     } while (0);
     $880 = 55352 + ($I7$0$i$i << 2) | 0;
     HEAP32[$tbase$245$i + ($$sum$i19$i + 28) >> 2] = $I7$0$i$i;
     HEAP32[$tbase$245$i + ($$sum$i19$i + 20) >> 2] = 0;
     HEAP32[$tbase$245$i + ($$sum$i19$i + 16) >> 2] = 0;
     $884 = HEAP32[13763] | 0;
     $885 = 1 << $I7$0$i$i;
     if (!($884 & $885)) {
      HEAP32[13763] = $884 | $885;
      HEAP32[$880 >> 2] = $725;
      HEAP32[$tbase$245$i + ($$sum$i19$i + 24) >> 2] = $880;
      HEAP32[$tbase$245$i + ($$sum$i19$i + 12) >> 2] = $725;
      HEAP32[$tbase$245$i + ($$sum$i19$i + 8) >> 2] = $725;
      break;
     }
     $892 = HEAP32[$880 >> 2] | 0;
     if (($I7$0$i$i | 0) == 31) $901 = 0; else $901 = 25 - ($I7$0$i$i >>> 1) | 0;
     L442 : do if ((HEAP32[$892 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) $T$0$lcssa$i26$i = $892; else {
      $K8$053$i$i = $qsize$0$i$i << $901;
      $T$052$i$i = $892;
      while (1) {
       $909 = $T$052$i$i + ($K8$053$i$i >>> 31 << 2) + 16 | 0;
       $904 = HEAP32[$909 >> 2] | 0;
       if (!$904) break;
       if ((HEAP32[$904 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) {
        $T$0$lcssa$i26$i = $904;
        break L442;
       } else {
        $K8$053$i$i = $K8$053$i$i << 1;
        $T$052$i$i = $904;
       }
      }
      if ($909 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
       HEAP32[$909 >> 2] = $725;
       HEAP32[$tbase$245$i + ($$sum$i19$i + 24) >> 2] = $T$052$i$i;
       HEAP32[$tbase$245$i + ($$sum$i19$i + 12) >> 2] = $725;
       HEAP32[$tbase$245$i + ($$sum$i19$i + 8) >> 2] = $725;
       break L345;
      }
     } while (0);
     $916 = $T$0$lcssa$i26$i + 8 | 0;
     $917 = HEAP32[$916 >> 2] | 0;
     $918 = HEAP32[13766] | 0;
     if ($T$0$lcssa$i26$i >>> 0 >= $918 >>> 0 & $917 >>> 0 >= $918 >>> 0) {
      HEAP32[$917 + 12 >> 2] = $725;
      HEAP32[$916 >> 2] = $725;
      HEAP32[$tbase$245$i + ($$sum$i19$i + 8) >> 2] = $917;
      HEAP32[$tbase$245$i + ($$sum$i19$i + 12) >> 2] = $T$0$lcssa$i26$i;
      HEAP32[$tbase$245$i + ($$sum$i19$i + 24) >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $mem$0 = $tbase$245$i + ($713 | 8) | 0;
    STACKTOP = sp;
    return $mem$0 | 0;
   }
   $sp$0$i$i$i = 55496 | 0;
   while (1) {
    $926 = HEAP32[$sp$0$i$i$i >> 2] | 0;
    if ($926 >>> 0 <= $636 >>> 0) {
     $929 = HEAP32[$sp$0$i$i$i + 4 >> 2] | 0;
     $930 = $926 + $929 | 0;
     if ($930 >>> 0 > $636 >>> 0) break;
    }
    $sp$0$i$i$i = HEAP32[$sp$0$i$i$i + 8 >> 2] | 0;
   }
   $935 = $926 + ($929 + -39) | 0;
   if (!($935 & 7)) $940 = 0; else $940 = 0 - $935 & 7;
   $941 = $926 + ($929 + -47 + $940) | 0;
   $944 = $941 >>> 0 < ($636 + 16 | 0) >>> 0 ? $636 : $941;
   $945 = $944 + 8 | 0;
   $948 = $tbase$245$i + 8 | 0;
   if (!($948 & 7)) $954 = 0; else $954 = 0 - $948 & 7;
   $955 = $tsize$244$i + -40 - $954 | 0;
   HEAP32[13768] = $tbase$245$i + $954;
   HEAP32[13765] = $955;
   HEAP32[$tbase$245$i + ($954 + 4) >> 2] = $955 | 1;
   HEAP32[$tbase$245$i + ($tsize$244$i + -36) >> 2] = 40;
   HEAP32[13769] = HEAP32[13884];
   HEAP32[$944 + 4 >> 2] = 27;
   HEAP32[$945 + 0 >> 2] = HEAP32[13874];
   HEAP32[$945 + 4 >> 2] = HEAP32[13875];
   HEAP32[$945 + 8 >> 2] = HEAP32[13876];
   HEAP32[$945 + 12 >> 2] = HEAP32[13877];
   HEAP32[13874] = $tbase$245$i;
   HEAP32[13875] = $tsize$244$i;
   HEAP32[13877] = 0;
   HEAP32[13876] = $945;
   $961 = $944 + 28 | 0;
   HEAP32[$961 >> 2] = 7;
   if (($944 + 32 | 0) >>> 0 < $930 >>> 0) {
    $965 = $961;
    do {
     $965$looptemp = $965;
     $965 = $965 + 4 | 0;
     HEAP32[$965 >> 2] = 7;
    } while (($965$looptemp + 8 | 0) >>> 0 < $930 >>> 0);
   }
   if (($944 | 0) != ($636 | 0)) {
    $971 = $944 - $636 | 0;
    $973 = $636 + ($971 + 4) | 0;
    HEAP32[$973 >> 2] = HEAP32[$973 >> 2] & -2;
    HEAP32[$636 + 4 >> 2] = $971 | 1;
    HEAP32[$636 + $971 >> 2] = $971;
    $978 = $971 >>> 3;
    if ($971 >>> 0 < 256) {
     $980 = $978 << 1;
     $981 = 55088 + ($980 << 2) | 0;
     $982 = HEAP32[13762] | 0;
     $983 = 1 << $978;
     do if (!($982 & $983)) {
      HEAP32[13762] = $982 | $983;
      $$pre$phi$i$iZ2D = 55088 + ($980 + 2 << 2) | 0;
      $F$0$i$i = $981;
     } else {
      $987 = 55088 + ($980 + 2 << 2) | 0;
      $988 = HEAP32[$987 >> 2] | 0;
      if ($988 >>> 0 >= (HEAP32[13766] | 0) >>> 0) {
       $$pre$phi$i$iZ2D = $987;
       $F$0$i$i = $988;
       break;
      }
      _abort();
     } while (0);
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $636;
     HEAP32[$F$0$i$i + 12 >> 2] = $636;
     HEAP32[$636 + 8 >> 2] = $F$0$i$i;
     HEAP32[$636 + 12 >> 2] = $981;
     break;
    }
    $994 = $971 >>> 8;
    if (!$994) $I1$0$i$i = 0; else if ($971 >>> 0 > 16777215) $I1$0$i$i = 31; else {
     $999 = ($994 + 1048320 | 0) >>> 16 & 8;
     $1000 = $994 << $999;
     $1003 = ($1000 + 520192 | 0) >>> 16 & 4;
     $1005 = $1000 << $1003;
     $1008 = ($1005 + 245760 | 0) >>> 16 & 2;
     $1013 = 14 - ($1003 | $999 | $1008) + ($1005 << $1008 >>> 15) | 0;
     $I1$0$i$i = $971 >>> ($1013 + 7 | 0) & 1 | $1013 << 1;
    }
    $1019 = 55352 + ($I1$0$i$i << 2) | 0;
    HEAP32[$636 + 28 >> 2] = $I1$0$i$i;
    HEAP32[$636 + 20 >> 2] = 0;
    HEAP32[$636 + 16 >> 2] = 0;
    $1023 = HEAP32[13763] | 0;
    $1024 = 1 << $I1$0$i$i;
    if (!($1023 & $1024)) {
     HEAP32[13763] = $1023 | $1024;
     HEAP32[$1019 >> 2] = $636;
     HEAP32[$636 + 24 >> 2] = $1019;
     HEAP32[$636 + 12 >> 2] = $636;
     HEAP32[$636 + 8 >> 2] = $636;
     break;
    }
    $1031 = HEAP32[$1019 >> 2] | 0;
    if (($I1$0$i$i | 0) == 31) $1040 = 0; else $1040 = 25 - ($I1$0$i$i >>> 1) | 0;
    L493 : do if ((HEAP32[$1031 + 4 >> 2] & -8 | 0) == ($971 | 0)) $T$0$lcssa$i$i = $1031; else {
     $K2$015$i$i = $971 << $1040;
     $T$014$i$i = $1031;
     while (1) {
      $1048 = $T$014$i$i + ($K2$015$i$i >>> 31 << 2) + 16 | 0;
      $1043 = HEAP32[$1048 >> 2] | 0;
      if (!$1043) break;
      if ((HEAP32[$1043 + 4 >> 2] & -8 | 0) == ($971 | 0)) {
       $T$0$lcssa$i$i = $1043;
       break L493;
      } else {
       $K2$015$i$i = $K2$015$i$i << 1;
       $T$014$i$i = $1043;
      }
     }
     if ($1048 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
      HEAP32[$1048 >> 2] = $636;
      HEAP32[$636 + 24 >> 2] = $T$014$i$i;
      HEAP32[$636 + 12 >> 2] = $636;
      HEAP32[$636 + 8 >> 2] = $636;
      break L308;
     }
    } while (0);
    $1055 = $T$0$lcssa$i$i + 8 | 0;
    $1056 = HEAP32[$1055 >> 2] | 0;
    $1057 = HEAP32[13766] | 0;
    if ($T$0$lcssa$i$i >>> 0 >= $1057 >>> 0 & $1056 >>> 0 >= $1057 >>> 0) {
     HEAP32[$1056 + 12 >> 2] = $636;
     HEAP32[$1055 >> 2] = $636;
     HEAP32[$636 + 8 >> 2] = $1056;
     HEAP32[$636 + 12 >> 2] = $T$0$lcssa$i$i;
     HEAP32[$636 + 24 >> 2] = 0;
     break;
    } else _abort();
   }
  } while (0);
  $1064 = HEAP32[13765] | 0;
  if ($1064 >>> 0 > $nb$0 >>> 0) {
   $1066 = $1064 - $nb$0 | 0;
   HEAP32[13765] = $1066;
   $1067 = HEAP32[13768] | 0;
   HEAP32[13768] = $1067 + $nb$0;
   HEAP32[$1067 + ($nb$0 + 4) >> 2] = $1066 | 1;
   HEAP32[$1067 + 4 >> 2] = $nb$0 | 3;
   $mem$0 = $1067 + 8 | 0;
   STACKTOP = sp;
   return $mem$0 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $mem$0 = 0;
 STACKTOP = sp;
 return $mem$0 | 0;
}

function ___floatscan($f, $prec, $pok) {
 $f = $f | 0;
 $prec = $prec | 0;
 $pok = $pok | 0;
 var $$0 = 0.0, $$011$i = 0, $$012$i = 0, $$01231$i = 0, $$01232$i = 0, $$06$i = 0, $$0611$i = 0, $$0612$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$2$i = 0, $$20$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3120$i = 0, $$in = 0, $$lcssa60$i = 0, $$pn$i = 0.0, $$pre$i18 = 0, $$pre$phi$iZ2D = 0.0, $$sink$off0$us$i = 0, $$sink$off0$us70$i = 0, $0 = 0, $1 = 0, $113 = 0, $121 = 0, $123 = 0, $130 = 0, $137 = 0, $145 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $158 = 0, $16 = 0, $160 = 0, $163 = 0, $167 = 0, $169 = 0, $182 = 0.0, $189 = 0, $191 = 0, $2 = 0, $200 = 0, $204 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $220 = 0, $221 = 0, $222 = 0, $232 = 0, $233 = 0, $246 = 0, $248 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $267 = 0, $269 = 0, $281 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $29 = 0, $291 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $306 = 0.0, $318 = 0.0, $326 = 0, $327 = 0, $334 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $354 = 0, $356 = 0, $357 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $366 = 0, $371 = 0, $372 = 0, $376 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $396 = 0, $397 = 0, $406 = 0, $407 = 0, $408 = 0, $416 = 0, $42 = 0, $420 = 0, $422 = 0, $423 = 0, $425 = 0, $438 = 0, $440 = 0, $450 = 0, $452 = 0, $464 = 0, $466 = 0, $488 = 0, $500 = 0, $504 = 0, $507 = 0, $509 = 0, $510 = 0, $511 = 0, $514 = 0, $528 = 0, $531 = 0, $533 = 0, $535 = 0, $536 = 0, $542 = 0, $544 = 0, $549 = 0, $552 = 0, $557 = 0, $559 = 0, $561 = 0, $562 = 0, $568 = 0, $570 = 0, $575 = 0, $578 = 0, $58 = 0, $582 = 0, $585 = 0, $590 = 0, $594 = 0, $597 = 0, $600 = 0, $602 = 0, $606 = 0, $607 = 0, $609 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $618 = 0, $627 = 0, $633 = 0, $641 = 0.0, $643 = 0, $645 = 0, $65 = 0, $650 = 0.0, $651 = 0.0, $654 = 0.0, $658 = 0, $661 = 0, $668 = 0.0, $67 = 0, $686 = 0.0, $688 = 0, $704 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $74 = 0, $80 = 0, $88 = 0, $9 = 0, $97 = 0, $a$0$lcssa182$i = 0, $a$078$i = 0, $a$1$i = 0, $a$2$ph57$i = 0, $a$3$i = 0, $a$3$i$ph = 0, $a$3$ph$i = 0, $a$444$i = 0, $bias$0$i = 0.0, $bias$0$i25 = 0.0, $bits$0$ph = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$171 = 0, $c$2 = 0, $c$2$i = 0, $c$2$lcssa$i = 0, $c$369 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $carry$080$i = 0, $carry1$0$us$i = 0, $carry1$0$us66$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us71$i = 0, $carry3$047$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$029$i = 0, $denormal$030$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0, $e2$0$us$i = 0, $e2$0$us61$i = 0, $e2$1$i = 0, $e2$1$i$ph = 0, $e2$1$ph$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i11 = 0, $gotdig$2$i = 0, $gotdig$2$i12 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3116$i = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i13 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1117$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$042$i = 0, $i$070 = 0, $i$1 = 0, $i$1$i = 0, $i$268 = 0, $i$3 = 0, $i$4 = 0, $j$0$lcssa$i = 0, $j$0108$i = 0, $j$0109$i = 0, $j$0110$i = 0, $j$0119$i = 0, $j$2$i = 0, $j$388$i = 0, $k$0$lcssa$i = 0, $k$0104$i = 0, $k$0105$i = 0, $k$0106$i = 0, $k$0118$i = 0, $k$2$i = 0, $k$3$i = 0, $k$479$i = 0, $k$5$in$us$i = 0, $k$5$in$us65$i = 0, $k$5$us$i = 0, $k$5$us67$i = 0, $k$645$i = 0, $lnz$0$lcssa$i = 0, $lnz$0100$i = 0, $lnz$0115$i = 0, $lnz$098$i = 0, $lnz$099$i = 0, $lnz$2$i = 0, $or$cond21$i = 0, $or$cond8$i = 0, $rp$0$lcssa183$i = 0, $rp$077$i = 0, $rp$1$i19 = 0, $rp$2$ph55$i = 0, $rp$3$i$ph = 0, $rp$3$ph50$i = 0, $rp$443$i = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$318$i = 0, $x$4$lcssa$i = 0, $x$413$i = 0, $x$5$i = 0, $x$i = 0, $y$0$i = 0.0, $y$1$i = 0.0, $y$1$i24 = 0.0, $y$2$i = 0.0, $y$2$i26 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$314$i = 0.0, $y$4$i = 0.0, $z$0$i = 0, $z$1$ph56$i = 0, $z$1$us$i = 0, $z$1$us62$i = 0, $z$2$us$i = 0, $z$2$us64$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us74$i = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0, $k$479$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $x$i = sp;
 if (!$prec) {
  $bits$0$ph = 24;
  $emin$0$ph = -149;
 } else if (($prec | 0) == 1) {
  $bits$0$ph = 53;
  $emin$0$ph = -1074;
 } else if (($prec | 0) == 2) {
  $bits$0$ph = 53;
  $emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;
  return +$$0;
 }
 $0 = $f + 4 | 0;
 $1 = $f + 100 | 0;
 do {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $2 + 1;
   $9 = HEAPU8[$2 >> 0] | 0;
  } else $9 = ___shgetc($f) | 0;
 } while ((_isspace($9) | 0) != 0);
 do if (($9 | 0) == 43 | ($9 | 0) == 45) {
  $15 = 1 - ((($9 | 0) == 45 & 1) << 1) | 0;
  $16 = HEAP32[$0 >> 2] | 0;
  if ($16 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $16 + 1;
   $c$0 = HEAPU8[$16 >> 0] | 0;
   $sign$0 = $15;
   break;
  } else {
   $c$0 = ___shgetc($f) | 0;
   $sign$0 = $15;
   break;
  }
 } else {
  $c$0 = $9;
  $sign$0 = 1;
 } while (0);
 $c$171 = $c$0;
 $i$070 = 0;
 while (1) {
  if (($c$171 | 32 | 0) != (HEAP8[55824 + $i$070 >> 0] | 0)) {
   $c$1$lcssa = $c$171;
   $i$0$lcssa = $i$070;
   break;
  }
  do if ($i$070 >>> 0 < 7) {
   $29 = HEAP32[$0 >> 2] | 0;
   if ($29 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $29 + 1;
    $c$2 = HEAPU8[$29 >> 0] | 0;
    break;
   } else {
    $c$2 = ___shgetc($f) | 0;
    break;
   }
  } else $c$2 = $c$171; while (0);
  $36 = $i$070 + 1 | 0;
  if ($36 >>> 0 < 8) {
   $c$171 = $c$2;
   $i$070 = $36;
  } else {
   $c$1$lcssa = $c$2;
   $i$0$lcssa = $36;
   break;
  }
 }
 do if (($i$0$lcssa | 0) == 3) label = 23; else if (($i$0$lcssa | 0) != 8) {
  $39 = ($pok | 0) != 0;
  if ($i$0$lcssa >>> 0 > 3 & $39) if (($i$0$lcssa | 0) == 8) break; else {
   label = 23;
   break;
  }
  L34 : do if (!$i$0$lcssa) {
   $c$369 = $c$1$lcssa;
   $i$268 = 0;
   while (1) {
    if (($c$369 | 32 | 0) != (HEAP8[55840 + $i$268 >> 0] | 0)) {
     $c$5 = $c$369;
     $i$3 = $i$268;
     break L34;
    }
    do if ($i$268 >>> 0 < 2) {
     $58 = HEAP32[$0 >> 2] | 0;
     if ($58 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $58 + 1;
      $c$4 = HEAPU8[$58 >> 0] | 0;
      break;
     } else {
      $c$4 = ___shgetc($f) | 0;
      break;
     }
    } else $c$4 = $c$369; while (0);
    $65 = $i$268 + 1 | 0;
    if ($65 >>> 0 < 3) {
     $c$369 = $c$4;
     $i$268 = $65;
    } else {
     $c$5 = $c$4;
     $i$3 = $65;
     break;
    }
   }
  } else {
   $c$5 = $c$1$lcssa;
   $i$3 = $i$0$lcssa;
  } while (0);
  if (($i$3 | 0) == 3) {
   $67 = HEAP32[$0 >> 2] | 0;
   if ($67 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $67 + 1;
    $74 = HEAPU8[$67 >> 0] | 0;
   } else $74 = ___shgetc($f) | 0;
   if (($74 | 0) == 40) $i$4 = 1; else {
    if (!(HEAP32[$1 >> 2] | 0)) {
     $$0 = nan;
     STACKTOP = sp;
     return +$$0;
    }
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    $$0 = nan;
    STACKTOP = sp;
    return +$$0;
   }
   while (1) {
    $80 = HEAP32[$0 >> 2] | 0;
    if ($80 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $80 + 1;
     $88 = HEAPU8[$80 >> 0] | 0;
    } else $88 = ___shgetc($f) | 0;
    if (!(($88 + -48 | 0) >>> 0 < 10 | ($88 + -65 | 0) >>> 0 < 26)) if (!(($88 + -97 | 0) >>> 0 < 26 | ($88 | 0) == 95)) break;
    $i$4 = $i$4 + 1 | 0;
   }
   if (($88 | 0) == 41) {
    $$0 = nan;
    STACKTOP = sp;
    return +$$0;
   }
   $97 = (HEAP32[$1 >> 2] | 0) == 0;
   if (!$97) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   if (!$39) {
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    ___shlim($f, 0);
    $$0 = 0.0;
    STACKTOP = sp;
    return +$$0;
   }
   if (($i$4 | 0) == 0 | $97) {
    $$0 = nan;
    STACKTOP = sp;
    return +$$0;
   } else $$in = $i$4;
   do {
    $$in = $$in + -1 | 0;
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   } while (($$in | 0) != 0);
   $$0 = nan;
   STACKTOP = sp;
   return +$$0;
  } else if (!$i$3) {
   do if (($c$5 | 0) == 48) {
    $113 = HEAP32[$0 >> 2] | 0;
    if ($113 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $113 + 1;
     $121 = HEAPU8[$113 >> 0] | 0;
    } else $121 = ___shgetc($f) | 0;
    if (($121 | 32 | 0) != 120) {
     if (!(HEAP32[$1 >> 2] | 0)) {
      $c$6 = 48;
      break;
     }
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $c$6 = 48;
     break;
    }
    $123 = HEAP32[$0 >> 2] | 0;
    if ($123 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $123 + 1;
     $c$0$i = HEAPU8[$123 >> 0] | 0;
     $gotdig$0$i = 0;
    } else {
     $c$0$i = ___shgetc($f) | 0;
     $gotdig$0$i = 0;
    }
    while (1) {
     if (($c$0$i | 0) == 46) {
      label = 70;
      break;
     } else if (($c$0$i | 0) != 48) {
      $167 = 0;
      $169 = 0;
      $211 = 0;
      $213 = 0;
      $c$2$i = $c$0$i;
      $gotdig$2$i = $gotdig$0$i;
      $gotrad$0$i = 0;
      $gottail$0$i = 0;
      $scale$0$i = 1.0;
      $x$0$i = 0;
      $y$0$i = 0.0;
      break;
     }
     $130 = HEAP32[$0 >> 2] | 0;
     if ($130 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $130 + 1;
      $c$0$i = HEAPU8[$130 >> 0] | 0;
      $gotdig$0$i = 1;
      continue;
     } else {
      $c$0$i = ___shgetc($f) | 0;
      $gotdig$0$i = 1;
      continue;
     }
    }
    if ((label | 0) == 70) {
     $137 = HEAP32[$0 >> 2] | 0;
     if ($137 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $137 + 1;
      $c$1$ph$i = HEAPU8[$137 >> 0] | 0;
     } else $c$1$ph$i = ___shgetc($f) | 0;
     if (($c$1$ph$i | 0) == 48) {
      $152 = 0;
      $153 = 0;
      while (1) {
       $145 = HEAP32[$0 >> 2] | 0;
       if ($145 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $145 + 1;
        $156 = HEAPU8[$145 >> 0] | 0;
       } else $156 = ___shgetc($f) | 0;
       $154 = _i64Add($152 | 0, $153 | 0, -1, -1) | 0;
       $155 = tempRet0;
       if (($156 | 0) == 48) {
        $152 = $154;
        $153 = $155;
       } else {
        $167 = 0;
        $169 = 0;
        $211 = $154;
        $213 = $155;
        $c$2$i = $156;
        $gotdig$2$i = 1;
        $gotrad$0$i = 1;
        $gottail$0$i = 0;
        $scale$0$i = 1.0;
        $x$0$i = 0;
        $y$0$i = 0.0;
        break;
       }
      }
     } else {
      $167 = 0;
      $169 = 0;
      $211 = 0;
      $213 = 0;
      $c$2$i = $c$1$ph$i;
      $gotdig$2$i = $gotdig$0$i;
      $gotrad$0$i = 1;
      $gottail$0$i = 0;
      $scale$0$i = 1.0;
      $x$0$i = 0;
      $y$0$i = 0.0;
     }
    }
    L119 : while (1) {
     $158 = $c$2$i + -48 | 0;
     do if ($158 >>> 0 < 10) {
      $d$0$i = $158;
      label = 83;
     } else {
      $160 = $c$2$i | 32;
      $163 = ($c$2$i | 0) == 46;
      if (!(($160 + -97 | 0) >>> 0 < 6 | $163)) {
       $c$2$lcssa$i = $c$2$i;
       break L119;
      }
      if ($163) if (!$gotrad$0$i) {
       $713 = $169;
       $714 = $167;
       $715 = $169;
       $716 = $167;
       $gotdig$3$i = $gotdig$2$i;
       $gotrad$1$i = 1;
       $gottail$2$i = $gottail$0$i;
       $scale$2$i = $scale$0$i;
       $x$2$i = $x$0$i;
       $y$2$i = $y$0$i;
       break;
      } else {
       $c$2$lcssa$i = 46;
       break L119;
      } else {
       $d$0$i = ($c$2$i | 0) > 57 ? $160 + -87 | 0 : $158;
       label = 83;
       break;
      }
     } while (0);
     if ((label | 0) == 83) {
      label = 0;
      do if (($167 | 0) < 0 | ($167 | 0) == 0 & $169 >>> 0 < 8) {
       $gottail$1$i = $gottail$0$i;
       $scale$1$i = $scale$0$i;
       $x$1$i = $d$0$i + ($x$0$i << 4) | 0;
       $y$1$i = $y$0$i;
      } else {
       if (($167 | 0) < 0 | ($167 | 0) == 0 & $169 >>> 0 < 14) {
        $182 = $scale$0$i * .0625;
        $gottail$1$i = $gottail$0$i;
        $scale$1$i = $182;
        $x$1$i = $x$0$i;
        $y$1$i = $y$0$i + $182 * +($d$0$i | 0);
        break;
       }
       if (($d$0$i | 0) == 0 | ($gottail$0$i | 0) != 0) {
        $gottail$1$i = $gottail$0$i;
        $scale$1$i = $scale$0$i;
        $x$1$i = $x$0$i;
        $y$1$i = $y$0$i;
       } else {
        $gottail$1$i = 1;
        $scale$1$i = $scale$0$i;
        $x$1$i = $x$0$i;
        $y$1$i = $y$0$i + $scale$0$i * .5;
       }
      } while (0);
      $189 = _i64Add($169 | 0, $167 | 0, 1, 0) | 0;
      $713 = $211;
      $714 = $213;
      $715 = $189;
      $716 = tempRet0;
      $gotdig$3$i = 1;
      $gotrad$1$i = $gotrad$0$i;
      $gottail$2$i = $gottail$1$i;
      $scale$2$i = $scale$1$i;
      $x$2$i = $x$1$i;
      $y$2$i = $y$1$i;
     }
     $191 = HEAP32[$0 >> 2] | 0;
     if ($191 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $191 + 1;
      $167 = $716;
      $169 = $715;
      $211 = $713;
      $213 = $714;
      $c$2$i = HEAPU8[$191 >> 0] | 0;
      $gotdig$2$i = $gotdig$3$i;
      $gotrad$0$i = $gotrad$1$i;
      $gottail$0$i = $gottail$2$i;
      $scale$0$i = $scale$2$i;
      $x$0$i = $x$2$i;
      $y$0$i = $y$2$i;
      continue;
     } else {
      $167 = $716;
      $169 = $715;
      $211 = $713;
      $213 = $714;
      $c$2$i = ___shgetc($f) | 0;
      $gotdig$2$i = $gotdig$3$i;
      $gotrad$0$i = $gotrad$1$i;
      $gottail$0$i = $gottail$2$i;
      $scale$0$i = $scale$2$i;
      $x$0$i = $x$2$i;
      $y$0$i = $y$2$i;
      continue;
     }
    }
    if (!$gotdig$2$i) {
     $200 = (HEAP32[$1 >> 2] | 0) == 0;
     if (!$200) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     if (!$pok) ___shlim($f, 0); else if (!$200) {
      $204 = HEAP32[$0 >> 2] | 0;
      HEAP32[$0 >> 2] = $204 + -1;
      if ($gotrad$0$i) HEAP32[$0 >> 2] = $204 + -2;
     }
     $$0 = +($sign$0 | 0) * 0.0;
     STACKTOP = sp;
     return +$$0;
    }
    $210 = ($gotrad$0$i | 0) == 0;
    $212 = $210 ? $169 : $211;
    $214 = $210 ? $167 : $213;
    if (($167 | 0) < 0 | ($167 | 0) == 0 & $169 >>> 0 < 8) {
     $221 = $169;
     $222 = $167;
     $x$318$i = $x$0$i;
     while (1) {
      $220 = $x$318$i << 4;
      $221 = _i64Add($221 | 0, $222 | 0, 1, 0) | 0;
      $222 = tempRet0;
      if (!(($222 | 0) < 0 | ($222 | 0) == 0 & $221 >>> 0 < 8)) {
       $x$3$lcssa$i = $220;
       break;
      } else $x$318$i = $220;
     }
    } else $x$3$lcssa$i = $x$0$i;
    do if (($c$2$lcssa$i | 32 | 0) == 112) {
     $232 = _scanexp($f, $pok) | 0;
     $233 = tempRet0;
     if (($232 | 0) == 0 & ($233 | 0) == -2147483648) if (!$pok) {
      ___shlim($f, 0);
      $$0 = 0.0;
      STACKTOP = sp;
      return +$$0;
     } else {
      if (!(HEAP32[$1 >> 2] | 0)) {
       $250 = 0;
       $251 = 0;
       break;
      }
      HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      $250 = 0;
      $251 = 0;
      break;
     } else {
      $250 = $232;
      $251 = $233;
     }
    } else if (!(HEAP32[$1 >> 2] | 0)) {
     $250 = 0;
     $251 = 0;
    } else {
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $250 = 0;
     $251 = 0;
    } while (0);
    $246 = _bitshift64Shl($212 | 0, $214 | 0, 2) | 0;
    $248 = _i64Add($246 | 0, tempRet0 | 0, -32, -1) | 0;
    $252 = _i64Add($248 | 0, tempRet0 | 0, $250 | 0, $251 | 0) | 0;
    $253 = tempRet0;
    if (!$x$3$lcssa$i) {
     $$0 = +($sign$0 | 0) * 0.0;
     STACKTOP = sp;
     return +$$0;
    }
    if (($253 | 0) > 0 | ($253 | 0) == 0 & $252 >>> 0 > (0 - $emin$0$ph | 0) >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
     STACKTOP = sp;
     return +$$0;
    }
    $267 = $emin$0$ph + -106 | 0;
    $269 = (($267 | 0) < 0) << 31 >> 31;
    if (($253 | 0) < ($269 | 0) | ($253 | 0) == ($269 | 0) & $252 >>> 0 < $267 >>> 0) {
     HEAP32[(___errno_location() | 0) >> 2] = 34;
     $$0 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
     STACKTOP = sp;
     return +$$0;
    }
    if (($x$3$lcssa$i | 0) > -1) {
     $284 = $252;
     $285 = $253;
     $x$413$i = $x$3$lcssa$i;
     $y$314$i = $y$0$i;
     while (1) {
      $281 = $x$413$i << 1;
      if (!($y$314$i >= .5)) {
       $$pn$i = $y$314$i;
       $x$5$i = $281;
      } else {
       $$pn$i = $y$314$i + -1.0;
       $x$5$i = $281 | 1;
      }
      $y$4$i = $y$314$i + $$pn$i;
      $286 = _i64Add($284 | 0, $285 | 0, -1, -1) | 0;
      $287 = tempRet0;
      if (($x$5$i | 0) > -1) {
       $284 = $286;
       $285 = $287;
       $x$413$i = $x$5$i;
       $y$314$i = $y$4$i;
      } else {
       $293 = $286;
       $294 = $287;
       $x$4$lcssa$i = $x$5$i;
       $y$3$lcssa$i = $y$4$i;
       break;
      }
     }
    } else {
     $293 = $252;
     $294 = $253;
     $x$4$lcssa$i = $x$3$lcssa$i;
     $y$3$lcssa$i = $y$0$i;
    }
    $291 = _i64Subtract(32, 0, $emin$0$ph | 0, (($emin$0$ph | 0) < 0) << 31 >> 31 | 0) | 0;
    $295 = _i64Add($293 | 0, $294 | 0, $291 | 0, tempRet0 | 0) | 0;
    $296 = tempRet0;
    if (0 > ($296 | 0) | 0 == ($296 | 0) & $bits$0$ph >>> 0 > $295 >>> 0) if (($295 | 0) < 0) {
     $$0611$i = 0;
     label = 126;
    } else {
     $$06$i = $295;
     label = 124;
    } else {
     $$06$i = $bits$0$ph;
     label = 124;
    }
    if ((label | 0) == 124) if (($$06$i | 0) < 53) {
     $$0611$i = $$06$i;
     label = 126;
    } else {
     $$0612$i = $$06$i;
     $$pre$phi$iZ2D = +($sign$0 | 0);
     $bias$0$i = 0.0;
    }
    if ((label | 0) == 126) {
     $306 = +($sign$0 | 0);
     $$0612$i = $$0611$i;
     $$pre$phi$iZ2D = $306;
     $bias$0$i = +_copysignl(+_scalbn(1.0, 84 - $$0611$i | 0), $306);
    }
    $or$cond8$i = ($$0612$i | 0) < 32 & $y$3$lcssa$i != 0.0 & ($x$4$lcssa$i & 1 | 0) == 0;
    $318 = $$pre$phi$iZ2D * ($or$cond8$i ? 0.0 : $y$3$lcssa$i) + ($bias$0$i + $$pre$phi$iZ2D * +((($or$cond8$i & 1) + $x$4$lcssa$i | 0) >>> 0)) - $bias$0$i;
    if (!($318 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
    $$0 = +_scalbnl($318, $293);
    STACKTOP = sp;
    return +$$0;
   } else $c$6 = $c$5; while (0);
   $sum$i = $emin$0$ph + $bits$0$ph | 0;
   $326 = 0 - $sum$i | 0;
   $$011$i = $c$6;
   $gotdig$0$i11 = 0;
   while (1) {
    if (($$011$i | 0) == 46) {
     label = 137;
     break;
    } else if (($$011$i | 0) != 48) {
     $$2$i = $$011$i;
     $717 = 0;
     $718 = 0;
     $gotdig$2$i12 = $gotdig$0$i11;
     $gotrad$0$i13 = 0;
     break;
    }
    $327 = HEAP32[$0 >> 2] | 0;
    if ($327 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $327 + 1;
     $$011$i = HEAPU8[$327 >> 0] | 0;
     $gotdig$0$i11 = 1;
     continue;
    } else {
     $$011$i = ___shgetc($f) | 0;
     $gotdig$0$i11 = 1;
     continue;
    }
   }
   if ((label | 0) == 137) {
    $334 = HEAP32[$0 >> 2] | 0;
    if ($334 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $334 + 1;
     $$1$ph$i = HEAPU8[$334 >> 0] | 0;
    } else $$1$ph$i = ___shgetc($f) | 0;
    if (($$1$ph$i | 0) == 48) {
     $342 = 0;
     $343 = 0;
     while (1) {
      $344 = _i64Add($342 | 0, $343 | 0, -1, -1) | 0;
      $345 = tempRet0;
      $346 = HEAP32[$0 >> 2] | 0;
      if ($346 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $346 + 1;
       $$1$be$i = HEAPU8[$346 >> 0] | 0;
      } else $$1$be$i = ___shgetc($f) | 0;
      if (($$1$be$i | 0) == 48) {
       $342 = $344;
       $343 = $345;
      } else {
       $$2$i = $$1$be$i;
       $717 = $344;
       $718 = $345;
       $gotdig$2$i12 = 1;
       $gotrad$0$i13 = 1;
       break;
      }
     }
    } else {
     $$2$i = $$1$ph$i;
     $717 = 0;
     $718 = 0;
     $gotdig$2$i12 = $gotdig$0$i11;
     $gotrad$0$i13 = 1;
    }
   }
   HEAP32[$x$i >> 2] = 0;
   $354 = $$2$i + -48 | 0;
   $356 = ($$2$i | 0) == 46;
   L221 : do if ($354 >>> 0 < 10 | $356) {
    $357 = $x$i + 496 | 0;
    $$3120$i = $$2$i;
    $360 = 0;
    $361 = 0;
    $719 = $356;
    $720 = $354;
    $721 = $717;
    $722 = $718;
    $gotdig$3116$i = $gotdig$2$i12;
    $gotrad$1117$i = $gotrad$0$i13;
    $j$0119$i = 0;
    $k$0118$i = 0;
    $lnz$0115$i = 0;
    L223 : while (1) {
     do if ($719) if (!$gotrad$1117$i) {
      $723 = $360;
      $724 = $361;
      $725 = $360;
      $726 = $361;
      $gotdig$4$i = $gotdig$3116$i;
      $gotrad$2$i = 1;
      $j$2$i = $j$0119$i;
      $k$2$i = $k$0118$i;
      $lnz$2$i = $lnz$0115$i;
     } else break L223; else {
      $362 = _i64Add($360 | 0, $361 | 0, 1, 0) | 0;
      $363 = tempRet0;
      $364 = ($$3120$i | 0) != 48;
      if (($k$0118$i | 0) >= 125) {
       if (!$364) {
        $723 = $721;
        $724 = $722;
        $725 = $362;
        $726 = $363;
        $gotdig$4$i = $gotdig$3116$i;
        $gotrad$2$i = $gotrad$1117$i;
        $j$2$i = $j$0119$i;
        $k$2$i = $k$0118$i;
        $lnz$2$i = $lnz$0115$i;
        break;
       }
       HEAP32[$357 >> 2] = HEAP32[$357 >> 2] | 1;
       $723 = $721;
       $724 = $722;
       $725 = $362;
       $726 = $363;
       $gotdig$4$i = $gotdig$3116$i;
       $gotrad$2$i = $gotrad$1117$i;
       $j$2$i = $j$0119$i;
       $k$2$i = $k$0118$i;
       $lnz$2$i = $lnz$0115$i;
       break;
      }
      $366 = $x$i + ($k$0118$i << 2) | 0;
      if (!$j$0119$i) $storemerge$i = $720; else $storemerge$i = $$3120$i + -48 + ((HEAP32[$366 >> 2] | 0) * 10 | 0) | 0;
      HEAP32[$366 >> 2] = $storemerge$i;
      $371 = $j$0119$i + 1 | 0;
      $372 = ($371 | 0) == 9;
      $723 = $721;
      $724 = $722;
      $725 = $362;
      $726 = $363;
      $gotdig$4$i = 1;
      $gotrad$2$i = $gotrad$1117$i;
      $j$2$i = $372 ? 0 : $371;
      $k$2$i = ($372 & 1) + $k$0118$i | 0;
      $lnz$2$i = $364 ? $362 : $lnz$0115$i;
     } while (0);
     $376 = HEAP32[$0 >> 2] | 0;
     if ($376 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
      HEAP32[$0 >> 2] = $376 + 1;
      $$3$be$i = HEAPU8[$376 >> 0] | 0;
     } else $$3$be$i = ___shgetc($f) | 0;
     $720 = $$3$be$i + -48 | 0;
     $719 = ($$3$be$i | 0) == 46;
     if (!($720 >>> 0 < 10 | $719)) {
      $$3$lcssa$i = $$3$be$i;
      $387 = $723;
      $388 = $725;
      $390 = $724;
      $391 = $726;
      $gotdig$3$lcssa$i = $gotdig$4$i;
      $gotrad$1$lcssa$i = $gotrad$2$i;
      $j$0$lcssa$i = $j$2$i;
      $k$0$lcssa$i = $k$2$i;
      $lnz$0$lcssa$i = $lnz$2$i;
      label = 160;
      break L221;
     } else {
      $$3120$i = $$3$be$i;
      $360 = $725;
      $361 = $726;
      $721 = $723;
      $722 = $724;
      $gotdig$3116$i = $gotdig$4$i;
      $gotrad$1117$i = $gotrad$2$i;
      $j$0119$i = $j$2$i;
      $k$0118$i = $k$2$i;
      $lnz$0115$i = $lnz$2$i;
     }
    }
    $727 = $360;
    $728 = $361;
    $729 = $721;
    $730 = $722;
    $731 = ($gotdig$3116$i | 0) != 0;
    $j$0110$i = $j$0119$i;
    $k$0106$i = $k$0118$i;
    $lnz$0100$i = $lnz$0115$i;
    label = 168;
   } else {
    $$3$lcssa$i = $$2$i;
    $387 = $717;
    $388 = 0;
    $390 = $718;
    $391 = 0;
    $gotdig$3$lcssa$i = $gotdig$2$i12;
    $gotrad$1$lcssa$i = $gotrad$0$i13;
    $j$0$lcssa$i = 0;
    $k$0$lcssa$i = 0;
    $lnz$0$lcssa$i = 0;
    label = 160;
   } while (0);
   do if ((label | 0) == 160) {
    $386 = ($gotrad$1$lcssa$i | 0) == 0;
    $389 = $386 ? $388 : $387;
    $392 = $386 ? $391 : $390;
    $393 = ($gotdig$3$lcssa$i | 0) != 0;
    if (!($393 & ($$3$lcssa$i | 32 | 0) == 101)) if (($$3$lcssa$i | 0) > -1) {
     $727 = $388;
     $728 = $391;
     $729 = $389;
     $730 = $392;
     $731 = $393;
     $j$0110$i = $j$0$lcssa$i;
     $k$0106$i = $k$0$lcssa$i;
     $lnz$0100$i = $lnz$0$lcssa$i;
     label = 168;
     break;
    } else {
     $732 = $388;
     $733 = $391;
     $734 = $393;
     $735 = $389;
     $736 = $392;
     $j$0109$i = $j$0$lcssa$i;
     $k$0105$i = $k$0$lcssa$i;
     $lnz$099$i = $lnz$0$lcssa$i;
     label = 170;
     break;
    }
    $396 = _scanexp($f, $pok) | 0;
    $397 = tempRet0;
    do if (($396 | 0) == 0 & ($397 | 0) == -2147483648) if (!$pok) {
     ___shlim($f, 0);
     $$0 = 0.0;
     STACKTOP = sp;
     return +$$0;
    } else {
     if (!(HEAP32[$1 >> 2] | 0)) {
      $406 = 0;
      $407 = 0;
      break;
     }
     HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $406 = 0;
     $407 = 0;
     break;
    } else {
     $406 = $396;
     $407 = $397;
    } while (0);
    $408 = _i64Add($406 | 0, $407 | 0, $389 | 0, $392 | 0) | 0;
    $420 = $408;
    $422 = $388;
    $423 = tempRet0;
    $425 = $391;
    $j$0108$i = $j$0$lcssa$i;
    $k$0104$i = $k$0$lcssa$i;
    $lnz$098$i = $lnz$0$lcssa$i;
   } while (0);
   if ((label | 0) == 168) if (!(HEAP32[$1 >> 2] | 0)) {
    $732 = $727;
    $733 = $728;
    $734 = $731;
    $735 = $729;
    $736 = $730;
    $j$0109$i = $j$0110$i;
    $k$0105$i = $k$0106$i;
    $lnz$099$i = $lnz$0100$i;
    label = 170;
   } else {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    if ($731) {
     $420 = $729;
     $422 = $727;
     $423 = $730;
     $425 = $728;
     $j$0108$i = $j$0110$i;
     $k$0104$i = $k$0106$i;
     $lnz$098$i = $lnz$0100$i;
    } else label = 171;
   }
   if ((label | 0) == 170) if ($734) {
    $420 = $735;
    $422 = $732;
    $423 = $736;
    $425 = $733;
    $j$0108$i = $j$0109$i;
    $k$0104$i = $k$0105$i;
    $lnz$098$i = $lnz$099$i;
   } else label = 171;
   if ((label | 0) == 171) {
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    ___shlim($f, 0);
    $$0 = 0.0;
    STACKTOP = sp;
    return +$$0;
   }
   $416 = HEAP32[$x$i >> 2] | 0;
   if (!$416) {
    $$0 = +($sign$0 | 0) * 0.0;
    STACKTOP = sp;
    return +$$0;
   }
   if (($420 | 0) == ($422 | 0) & ($423 | 0) == ($425 | 0) & (($425 | 0) < 0 | ($425 | 0) == 0 & $422 >>> 0 < 10)) if ($bits$0$ph >>> 0 > 30 | ($416 >>> $bits$0$ph | 0) == 0) {
    $$0 = +($sign$0 | 0) * +($416 >>> 0);
    STACKTOP = sp;
    return +$$0;
   }
   $438 = ($emin$0$ph | 0) / -2 | 0;
   $440 = (($438 | 0) < 0) << 31 >> 31;
   if (($423 | 0) > ($440 | 0) | ($423 | 0) == ($440 | 0) & $420 >>> 0 > $438 >>> 0) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $$0 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
    STACKTOP = sp;
    return +$$0;
   }
   $450 = $emin$0$ph + -106 | 0;
   $452 = (($450 | 0) < 0) << 31 >> 31;
   if (($423 | 0) < ($452 | 0) | ($423 | 0) == ($452 | 0) & $420 >>> 0 < $450 >>> 0) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $$0 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
    STACKTOP = sp;
    return +$$0;
   }
   if (!$j$0108$i) $k$3$i = $k$0104$i; else {
    if (($j$0108$i | 0) < 9) {
     $464 = $x$i + ($k$0104$i << 2) | 0;
     $466 = HEAP32[$464 >> 2] | 0;
     $j$388$i = $j$0108$i;
     do {
      $466 = $466 * 10 | 0;
      $j$388$i = $j$388$i + 1 | 0;
     } while (($j$388$i | 0) != 9);
     HEAP32[$464 >> 2] = $466;
    }
    $k$3$i = $k$0104$i + 1 | 0;
   }
   if (($lnz$098$i | 0) < 9) if (($lnz$098$i | 0) <= ($420 | 0) & ($420 | 0) < 18) {
    if (($420 | 0) == 9) {
     $$0 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0);
     STACKTOP = sp;
     return +$$0;
    }
    if (($420 | 0) < 9) {
     $$0 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0) / +(HEAP32[55856 + (8 - $420 << 2) >> 2] | 0);
     STACKTOP = sp;
     return +$$0;
    }
    $488 = $bits$0$ph + 27 + (Math_imul($420, -3) | 0) | 0;
    $$pre$i18 = HEAP32[$x$i >> 2] | 0;
    if (($488 | 0) > 30 | ($$pre$i18 >>> $488 | 0) == 0) {
     $$0 = +($sign$0 | 0) * +($$pre$i18 >>> 0) * +(HEAP32[55856 + ($420 + -10 << 2) >> 2] | 0);
     STACKTOP = sp;
     return +$$0;
    }
   }
   $500 = ($420 | 0) % 9 | 0;
   if (!$500) {
    $a$2$ph57$i = 0;
    $e2$0$ph$i = 0;
    $rp$2$ph55$i = $420;
    $z$1$ph56$i = $k$3$i;
   } else {
    $504 = ($420 | 0) > -1 ? $500 : $500 + 9 | 0;
    $507 = HEAP32[55856 + (8 - $504 << 2) >> 2] | 0;
    if (!$k$3$i) {
     $a$0$lcssa182$i = 0;
     $rp$0$lcssa183$i = $420;
     $z$0$i = 0;
    } else {
     $509 = 1e9 / ($507 | 0) | 0;
     $a$078$i = 0;
     $carry$080$i = 0;
     $k$479$i = 0;
     $rp$077$i = $420;
     while (1) {
      $510 = $x$i + ($k$479$i << 2) | 0;
      $511 = HEAP32[$510 >> 2] | 0;
      $514 = (($511 >>> 0) / ($507 >>> 0) | 0) + $carry$080$i | 0;
      HEAP32[$510 >> 2] = $514;
      $carry$080$i = Math_imul(($511 >>> 0) % ($507 >>> 0) | 0, $509) | 0;
      $k$479$i$looptemp = $k$479$i;
      $k$479$i = $k$479$i + 1 | 0;
      if (($k$479$i$looptemp | 0) == ($a$078$i | 0) & ($514 | 0) == 0) {
       $a$1$i = $k$479$i & 127;
       $rp$1$i19 = $rp$077$i + -9 | 0;
      } else {
       $a$1$i = $a$078$i;
       $rp$1$i19 = $rp$077$i;
      }
      if (($k$479$i | 0) == ($k$3$i | 0)) break; else {
       $a$078$i = $a$1$i;
       $rp$077$i = $rp$1$i19;
      }
     }
     if (!$carry$080$i) {
      $a$0$lcssa182$i = $a$1$i;
      $rp$0$lcssa183$i = $rp$1$i19;
      $z$0$i = $k$3$i;
     } else {
      HEAP32[$x$i + ($k$3$i << 2) >> 2] = $carry$080$i;
      $a$0$lcssa182$i = $a$1$i;
      $rp$0$lcssa183$i = $rp$1$i19;
      $z$0$i = $k$3$i + 1 | 0;
     }
    }
    $a$2$ph57$i = $a$0$lcssa182$i;
    $e2$0$ph$i = 0;
    $rp$2$ph55$i = 9 - $504 + $rp$0$lcssa183$i | 0;
    $z$1$ph56$i = $z$0$i;
   }
   L315 : while (1) {
    $528 = $x$i + ($a$2$ph57$i << 2) | 0;
    if (($rp$2$ph55$i | 0) < 18) {
     $e2$0$us$i = $e2$0$ph$i;
     $z$1$us$i = $z$1$ph56$i;
     while (1) {
      $carry1$0$us$i = 0;
      $k$5$in$us$i = $z$1$us$i + 127 | 0;
      $z$2$us$i = $z$1$us$i;
      while (1) {
       $k$5$us$i = $k$5$in$us$i & 127;
       $531 = $x$i + ($k$5$us$i << 2) | 0;
       $533 = _bitshift64Shl(HEAP32[$531 >> 2] | 0, 0, 29) | 0;
       $535 = _i64Add($533 | 0, tempRet0 | 0, $carry1$0$us$i | 0, 0) | 0;
       $536 = tempRet0;
       if ($536 >>> 0 > 0 | ($536 | 0) == 0 & $535 >>> 0 > 1e9) {
        $542 = ___udivdi3($535 | 0, $536 | 0, 1e9, 0) | 0;
        $544 = ___uremdi3($535 | 0, $536 | 0, 1e9, 0) | 0;
        $$sink$off0$us$i = $544;
        $carry1$1$us$i = $542;
       } else {
        $$sink$off0$us$i = $535;
        $carry1$1$us$i = 0;
       }
       HEAP32[$531 >> 2] = $$sink$off0$us$i;
       $549 = ($k$5$us$i | 0) == ($a$2$ph57$i | 0);
       if (($k$5$us$i | 0) != ($z$2$us$i + 127 & 127 | 0) | $549) $z$3$us$i = $z$2$us$i; else $z$3$us$i = ($$sink$off0$us$i | 0) == 0 ? $k$5$us$i : $z$2$us$i;
       if ($549) break; else {
        $carry1$0$us$i = $carry1$1$us$i;
        $k$5$in$us$i = $k$5$us$i + -1 | 0;
        $z$2$us$i = $z$3$us$i;
       }
      }
      $552 = $e2$0$us$i + -29 | 0;
      if (!$carry1$1$us$i) {
       $e2$0$us$i = $552;
       $z$1$us$i = $z$3$us$i;
      } else {
       $$lcssa60$i = $552;
       $carry1$1$lcssa$lcssa$i = $carry1$1$us$i;
       $z$3$lcssa$lcssa$i = $z$3$us$i;
       break;
      }
     }
    } else {
     if (($rp$2$ph55$i | 0) == 18) {
      $e2$0$us61$i = $e2$0$ph$i;
      $z$1$us62$i = $z$1$ph56$i;
     } else {
      $a$3$ph$i = $a$2$ph57$i;
      $e2$1$ph$i = $e2$0$ph$i;
      $rp$3$ph50$i = $rp$2$ph55$i;
      $z$5$ph$i = $z$1$ph56$i;
      break;
     }
     while (1) {
      if ((HEAP32[$528 >> 2] | 0) >>> 0 >= 9007199) {
       $a$3$ph$i = $a$2$ph57$i;
       $e2$1$ph$i = $e2$0$us61$i;
       $rp$3$ph50$i = 18;
       $z$5$ph$i = $z$1$us62$i;
       break L315;
      }
      $carry1$0$us66$i = 0;
      $k$5$in$us65$i = $z$1$us62$i + 127 | 0;
      $z$2$us64$i = $z$1$us62$i;
      while (1) {
       $k$5$us67$i = $k$5$in$us65$i & 127;
       $557 = $x$i + ($k$5$us67$i << 2) | 0;
       $559 = _bitshift64Shl(HEAP32[$557 >> 2] | 0, 0, 29) | 0;
       $561 = _i64Add($559 | 0, tempRet0 | 0, $carry1$0$us66$i | 0, 0) | 0;
       $562 = tempRet0;
       if ($562 >>> 0 > 0 | ($562 | 0) == 0 & $561 >>> 0 > 1e9) {
        $568 = ___udivdi3($561 | 0, $562 | 0, 1e9, 0) | 0;
        $570 = ___uremdi3($561 | 0, $562 | 0, 1e9, 0) | 0;
        $$sink$off0$us70$i = $570;
        $carry1$1$us71$i = $568;
       } else {
        $$sink$off0$us70$i = $561;
        $carry1$1$us71$i = 0;
       }
       HEAP32[$557 >> 2] = $$sink$off0$us70$i;
       $575 = ($k$5$us67$i | 0) == ($a$2$ph57$i | 0);
       if (($k$5$us67$i | 0) != ($z$2$us64$i + 127 & 127 | 0) | $575) $z$3$us74$i = $z$2$us64$i; else $z$3$us74$i = ($$sink$off0$us70$i | 0) == 0 ? $k$5$us67$i : $z$2$us64$i;
       if ($575) break; else {
        $carry1$0$us66$i = $carry1$1$us71$i;
        $k$5$in$us65$i = $k$5$us67$i + -1 | 0;
        $z$2$us64$i = $z$3$us74$i;
       }
      }
      $578 = $e2$0$us61$i + -29 | 0;
      if (!$carry1$1$us71$i) {
       $e2$0$us61$i = $578;
       $z$1$us62$i = $z$3$us74$i;
      } else {
       $$lcssa60$i = $578;
       $carry1$1$lcssa$lcssa$i = $carry1$1$us71$i;
       $z$3$lcssa$lcssa$i = $z$3$us74$i;
       break;
      }
     }
    }
    $582 = $a$2$ph57$i + 127 & 127;
    if (($582 | 0) == ($z$3$lcssa$lcssa$i | 0)) {
     $585 = $z$3$lcssa$lcssa$i + 127 & 127;
     $590 = $x$i + (($z$3$lcssa$lcssa$i + 126 & 127) << 2) | 0;
     HEAP32[$590 >> 2] = HEAP32[$590 >> 2] | HEAP32[$x$i + ($585 << 2) >> 2];
     $z$4$i = $585;
    } else $z$4$i = $z$3$lcssa$lcssa$i;
    HEAP32[$x$i + ($582 << 2) >> 2] = $carry1$1$lcssa$lcssa$i;
    $a$2$ph57$i = $582;
    $e2$0$ph$i = $$lcssa60$i;
    $rp$2$ph55$i = $rp$2$ph55$i + 9 | 0;
    $z$1$ph56$i = $z$4$i;
   }
   L346 : while (1) {
    $627 = $z$5$ph$i + 1 & 127;
    $633 = $x$i + (($z$5$ph$i + 127 & 127) << 2) | 0;
    $a$3$i$ph = $a$3$ph$i;
    $e2$1$i$ph = $e2$1$ph$i;
    $rp$3$i$ph = $rp$3$ph50$i;
    while (1) {
     $606 = ($rp$3$i$ph | 0) == 18;
     $$20$i = ($rp$3$i$ph | 0) > 27 ? 9 : 1;
     $a$3$i = $a$3$i$ph;
     $e2$1$i = $e2$1$i$ph;
     while (1) {
      $i$042$i = 0;
      while (1) {
       $597 = $i$042$i + $a$3$i & 127;
       if (($597 | 0) == ($z$5$ph$i | 0)) {
        $i$1$i = 2;
        break;
       }
       $600 = HEAP32[$x$i + ($597 << 2) >> 2] | 0;
       $602 = HEAP32[55848 + ($i$042$i << 2) >> 2] | 0;
       if ($600 >>> 0 < $602 >>> 0) {
        $i$1$i = 2;
        break;
       }
       $594 = $i$042$i + 1 | 0;
       if ($600 >>> 0 > $602 >>> 0) {
        $i$1$i = $i$042$i;
        break;
       }
       if (($594 | 0) < 2) $i$042$i = $594; else {
        $i$1$i = $594;
        break;
       }
      }
      if (($i$1$i | 0) == 2 & $606) break L346;
      $609 = $$20$i + $e2$1$i | 0;
      if (($a$3$i | 0) == ($z$5$ph$i | 0)) {
       $a$3$i = $z$5$ph$i;
       $e2$1$i = $609;
      } else break;
     }
     $612 = (1 << $$20$i) + -1 | 0;
     $613 = 1e9 >>> $$20$i;
     $a$444$i = $a$3$i;
     $carry3$047$i = 0;
     $k$645$i = $a$3$i;
     $rp$443$i = $rp$3$i$ph;
     do {
      $614 = $x$i + ($k$645$i << 2) | 0;
      $615 = HEAP32[$614 >> 2] | 0;
      $618 = ($615 >>> $$20$i) + $carry3$047$i | 0;
      HEAP32[$614 >> 2] = $618;
      $carry3$047$i = Math_imul($615 & $612, $613) | 0;
      $or$cond21$i = ($k$645$i | 0) == ($a$444$i | 0) & ($618 | 0) == 0;
      $k$645$i = $k$645$i + 1 & 127;
      $rp$443$i = $or$cond21$i ? $rp$443$i + -9 | 0 : $rp$443$i;
      $a$444$i = $or$cond21$i ? $k$645$i : $a$444$i;
     } while (($k$645$i | 0) != ($z$5$ph$i | 0));
     if (!$carry3$047$i) {
      $a$3$i$ph = $a$444$i;
      $e2$1$i$ph = $609;
      $rp$3$i$ph = $rp$443$i;
      continue;
     }
     if (($627 | 0) != ($a$444$i | 0)) break;
     HEAP32[$633 >> 2] = HEAP32[$633 >> 2] | 1;
     $a$3$i$ph = $a$444$i;
     $e2$1$i$ph = $609;
     $rp$3$i$ph = $rp$443$i;
    }
    HEAP32[$x$i + ($z$5$ph$i << 2) >> 2] = $carry3$047$i;
    $a$3$ph$i = $a$444$i;
    $e2$1$ph$i = $609;
    $rp$3$ph50$i = $rp$443$i;
    $z$5$ph$i = $627;
   }
   $607 = $a$3$i & 127;
   if (($607 | 0) == ($z$5$ph$i | 0)) {
    HEAP32[$x$i + ($627 + -1 << 2) >> 2] = 0;
    $z$7$i = $627;
   } else $z$7$i = $z$5$ph$i;
   $641 = +((HEAP32[$x$i + ($607 << 2) >> 2] | 0) >>> 0);
   $643 = $a$3$i + 1 & 127;
   if (($643 | 0) == ($z$7$i | 0)) {
    $704 = $z$7$i + 1 & 127;
    HEAP32[$x$i + ($704 + -1 << 2) >> 2] = 0;
    $z$7$1$i = $704;
   } else $z$7$1$i = $z$7$i;
   $668 = +($sign$0 | 0);
   $650 = $668 * ($641 * 1.0e9 + +((HEAP32[$x$i + ($643 << 2) >> 2] | 0) >>> 0));
   $688 = $e2$1$i + 53 | 0;
   $645 = $688 - $emin$0$ph | 0;
   if (($645 | 0) < ($bits$0$ph | 0)) if (($645 | 0) < 0) {
    $$01231$i = 0;
    $denormal$030$i = 1;
    label = 244;
   } else {
    $$012$i = $645;
    $denormal$0$i = 1;
    label = 243;
   } else {
    $$012$i = $bits$0$ph;
    $denormal$0$i = 0;
    label = 243;
   }
   if ((label | 0) == 243) if (($$012$i | 0) < 53) {
    $$01231$i = $$012$i;
    $denormal$030$i = $denormal$0$i;
    label = 244;
   } else {
    $$01232$i = $$012$i;
    $bias$0$i25 = 0.0;
    $denormal$029$i = $denormal$0$i;
    $frac$0$i = 0.0;
    $y$1$i24 = $650;
   }
   if ((label | 0) == 244) {
    $651 = +_copysignl(+_scalbn(1.0, 105 - $$01231$i | 0), $650);
    $654 = +_fmodl($650, +_scalbn(1.0, 53 - $$01231$i | 0));
    $$01232$i = $$01231$i;
    $bias$0$i25 = $651;
    $denormal$029$i = $denormal$030$i;
    $frac$0$i = $654;
    $y$1$i24 = $651 + ($650 - $654);
   }
   $658 = $a$3$i + 2 & 127;
   do if (($658 | 0) == ($z$7$1$i | 0)) $frac$2$i = $frac$0$i; else {
    $661 = HEAP32[$x$i + ($658 << 2) >> 2] | 0;
    do if ($661 >>> 0 < 5e8) {
     if (!$661) if (($a$3$i + 3 & 127 | 0) == ($z$7$1$i | 0)) {
      $frac$1$i = $frac$0$i;
      break;
     }
     $frac$1$i = $668 * .25 + $frac$0$i;
    } else {
     if ($661 >>> 0 > 5e8) {
      $frac$1$i = $668 * .75 + $frac$0$i;
      break;
     }
     if (($a$3$i + 3 & 127 | 0) == ($z$7$1$i | 0)) {
      $frac$1$i = $668 * .5 + $frac$0$i;
      break;
     } else {
      $frac$1$i = $668 * .75 + $frac$0$i;
      break;
     }
    } while (0);
    if ((53 - $$01232$i | 0) <= 1) {
     $frac$2$i = $frac$1$i;
     break;
    }
    if (+_fmodl($frac$1$i, 1.0) != 0.0) {
     $frac$2$i = $frac$1$i;
     break;
    }
    $frac$2$i = $frac$1$i + 1.0;
   } while (0);
   $686 = $y$1$i24 + $frac$2$i - $bias$0$i25;
   do if (($688 & 2147483647 | 0) > (-2 - $sum$i | 0)) {
    if (!(+Math_abs(+$686) >= 9007199254740992.0)) {
     $denormal$2$i = $denormal$029$i;
     $e2$2$i = $e2$1$i;
     $y$2$i26 = $686;
    } else {
     $denormal$2$i = ($denormal$029$i | 0) != 0 & ($$01232$i | 0) == ($645 | 0) ? 0 : $denormal$029$i;
     $e2$2$i = $e2$1$i + 1 | 0;
     $y$2$i26 = $686 * .5;
    }
    if (($e2$2$i + 50 | 0) <= ($326 | 0)) if (!(($denormal$2$i | 0) != 0 & $frac$2$i != 0.0)) {
     $e2$3$i = $e2$2$i;
     $y$3$i = $y$2$i26;
     break;
    }
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $e2$3$i = $e2$2$i;
    $y$3$i = $y$2$i26;
   } else {
    $e2$3$i = $e2$1$i;
    $y$3$i = $686;
   } while (0);
   $$0 = +_scalbnl($y$3$i, $e2$3$i);
   STACKTOP = sp;
   return +$$0;
  } else {
   if (HEAP32[$1 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   HEAP32[(___errno_location() | 0) >> 2] = 22;
   ___shlim($f, 0);
   $$0 = 0.0;
   STACKTOP = sp;
   return +$$0;
  }
 } while (0);
 if ((label | 0) == 23) {
  $42 = (HEAP32[$1 >> 2] | 0) == 0;
  if (!$42) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  if (!($i$0$lcssa >>> 0 < 4 | ($pok | 0) == 0 | $42)) {
   $i$1 = $i$0$lcssa;
   do {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    $i$1 = $i$1 + -1 | 0;
   } while ($i$1 >>> 0 > 3);
  }
 }
 $$0 = +($sign$0 | 0) * inf;
 STACKTOP = sp;
 return +$$0;
}

function __ZN12_GLOBAL__N_111Interpreter12manifestJsonERK13LocationRangebRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $this, $loc, $multiline, $indent) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $multiline = $multiline | 0;
 $indent = $indent | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i54 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$02 = 0, $$08 = 0, $$1 = 0, $$13 = 0, $$2461 = 0, $$262 = 0, $$3 = 0, $$35 = 0, $$4 = 0, $$46 = 0, $$5 = 0, $$57 = 0, $$idx$i16 = 0, $$idx$i39 = 0, $$idx10 = 0, $$idx11$val = 0, $$idx12$val = 0, $$pre$phi84Z2D = 0, $$pre$phi88Z2D = 0, $$str36$$str3 = 0, $$str36$$str31 = 0, $0 = 0, $1 = 0, $106 = 0, $108 = 0, $11 = 0, $111 = 0, $113 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $120 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $132 = 0, $139 = 0, $140 = 0, $141 = 0, $143 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $152 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $167 = 0, $17 = 0, $173 = 0, $174 = 0, $175 = 0, $179 = 0, $182 = 0, $19 = 0, $192 = 0, $193 = 0, $194 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $202 = 0, $204 = 0, $206 = 0, $208 = 0, $209 = 0, $21 = 0, $211 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $22 = 0, $220 = 0, $221 = 0, $227 = 0, $229 = 0, $23 = 0, $230 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $240 = 0, $242 = 0, $245 = 0, $25 = 0, $250 = 0, $252 = 0, $263 = 0, $264 = 0, $265 = 0, $267 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $273 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $285 = 0, $287 = 0, $288 = 0, $290 = 0, $292 = 0, $295 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $302 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $314 = 0, $315 = 0, $317 = 0, $318 = 0, $328 = 0, $329 = 0, $330 = 0, $331 = 0, $333 = 0, $334 = 0, $336 = 0, $34 = 0, $343 = 0, $344 = 0, $345 = 0, $348 = 0, $350 = 0, $353 = 0, $357 = 0, $359 = 0, $36 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $368 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $383 = 0, $39 = 0, $390 = 0, $393 = 0, $4 = 0, $403 = 0, $404 = 0, $405 = 0, $407 = 0, $408 = 0, $409 = 0, $412 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $79 = 0, $8 = 0, $80 = 0, $82 = 0, $86 = 0, $89 = 0, $91 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $99 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body37$index17Z2D = 0, $eh$lpad$body37$indexZ2D = 0, $element = 0, $fields = 0, $indent2 = 0, $indent24 = 0, $lpad$phi$index = 0, $lpad$phi$index12 = 0, $lpad$phi73$index = 0, $lpad$phi73$index22 = 0, $prefix$066 = 0, $prefix5$074 = 0, $ss = 0, $tloc = 0, $vstr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $0 = sp + 296 | 0;
 $ss = sp + 152 | 0;
 $indent2 = sp + 136 | 0;
 $tloc = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $element = sp + 84 | 0;
 $2 = sp + 72 | 0;
 $3 = sp + 60 | 0;
 $fields = sp + 48 | 0;
 $4 = sp + 36 | 0;
 $indent24 = sp + 24 | 0;
 $vstr = sp + 12 | 0;
 $5 = sp;
 $6 = $ss + 64 | 0;
 $7 = $ss + 8 | 0;
 HEAP32[$7 >> 2] = 792;
 $8 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 940;
 HEAP32[$6 >> 2] = 960;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $8 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $23 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $23;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 772;
 HEAP32[$6 >> 2] = 812;
 HEAP32[$7 >> 2] = 792;
 __THREW__ = 0;
 invoke_vi(179, $8 | 0);
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $25;
 } else {
  HEAP32[$8 >> 2] = 1104;
  $17 = $ss + 44 | 0;
  HEAP32[$17 + 0 >> 2] = 0;
  HEAP32[$17 + 4 >> 2] = 0;
  HEAP32[$17 + 8 >> 2] = 0;
  HEAP32[$17 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $8 | 0, $0 | 0);
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $21 = ___cxa_find_matching_catch() | 0;
   $22 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
   $eh$lpad$body$i$index2Z2D = $22;
   $eh$lpad$body$i$indexZ2D = $21;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  $27 = $this + 56 | 0;
  L11 : do switch (HEAP32[$27 >> 2] | 0) {
  case 16:
   {
    $30 = HEAP32[$this + 64 >> 2] | 0;
    $31 = $30 + 8 | 0;
    $$idx10 = $30 + 12 | 0;
    if ((HEAP32[$$idx10 >> 2] | 0) == (HEAP32[$31 >> 2] | 0)) {
     __THREW__ = 0;
     invoke_iiii(25, $ss + 8 | 0, 38136, 3) | 0;
     $34 = __THREW__;
     __THREW__ = 0;
     if ($34 & 1) {
      label = 12;
      break L11;
     } else {
      label = 140;
      break L11;
     }
    }
    $38 = $multiline ? 38144 : 38152;
    do if ($multiline) {
     HEAP32[$indent2 + 0 >> 2] = 0;
     HEAP32[$indent2 + 4 >> 2] = 0;
     HEAP32[$indent2 + 8 >> 2] = 0;
     $39 = HEAP8[$indent >> 0] | 0;
     if (!($39 & 1)) {
      $50 = ($39 & 255) >>> 1;
      $51 = $indent + 1 | 0;
     } else {
      $50 = HEAP32[$indent + 4 >> 2] | 0;
      $51 = HEAP32[$indent + 8 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_viiii(14, $indent2 | 0, $51 | 0, $50 | 0, $50 + 3 | 0);
     $52 = __THREW__;
     __THREW__ = 0;
     if (!($52 & 1)) {
      __THREW__ = 0;
      invoke_iiii(31, $indent2 | 0, 38160, 3) | 0;
      $54 = __THREW__;
      __THREW__ = 0;
      if (!($54 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch() | 0;
     $57 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($indent2);
     $eh$lpad$body$index7Z2D = $57;
     $eh$lpad$body$indexZ2D = $56;
     break L11;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $indent2 | 0, $indent | 0);
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 12;
      break L11;
     }
    } while (0);
    $$idx11$val = HEAP32[$31 >> 2] | 0;
    $$idx12$val = HEAP32[$$idx10 >> 2] | 0;
    L27 : do if (($$idx11$val | 0) == ($$idx12$val | 0)) {
     $$pre$phi84Z2D = $ss + 8 | 0;
     label = 49;
    } else {
     $61 = $tloc + 12 | 0;
     $62 = $this + 72 | 0;
     $$idx$i16 = $this + 88 | 0;
     $63 = $ss + 8 | 0;
     $64 = $indent2 + 1 | 0;
     $65 = $element + 1 | 0;
     $$str36$$str3 = $multiline ? 38168 : 37200;
     $66 = $element + 8 | 0;
     $67 = $element + 4 | 0;
     $68 = $indent2 + 8 | 0;
     $69 = $indent2 + 4 | 0;
     $70 = $1 + 4 | 0;
     $71 = $1 + 8 | 0;
     $72 = $1 + 4 | 0;
     $74 = $$idx11$val;
     $prefix$066 = $38;
     while (1) {
      $73 = HEAP32[$74 >> 2] | 0;
      $75 = $73 + 48 | 0;
      $76 = HEAP32[$75 >> 2] | 0;
      $79 = ($76 | 0) == 0 ? $loc : $76 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $tloc | 0, $79 | 0);
      $80 = __THREW__;
      __THREW__ = 0;
      if ($80 & 1) {
       label = 29;
       break;
      }
      $82 = $79 + 12 | 0;
      HEAP32[$61 + 0 >> 2] = HEAP32[$82 + 0 >> 2];
      HEAP32[$61 + 4 >> 2] = HEAP32[$82 + 4 >> 2];
      HEAP32[$61 + 8 >> 2] = HEAP32[$82 + 8 >> 2];
      HEAP32[$61 + 12 >> 2] = HEAP32[$82 + 12 >> 2];
      if (!(HEAP8[$73 + 5 >> 0] | 0)) {
       __THREW__ = 0;
       invoke_viiiiii(19, $62 | 0, $loc | 0, $73 | 0, HEAP32[$73 + 40 >> 2] | 0, HEAP32[$73 + 44 >> 2] | 0, $73 + 28 | 0);
       $106 = __THREW__;
       __THREW__ = 0;
       if ($106 & 1) {
        label = 33;
        break;
       }
       $108 = (HEAP32[$$idx$i16 >> 2] | 0) + -104 | 0;
       HEAP32[$108 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
       HEAP32[$108 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
       HEAP32[$108 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
       HEAP32[$108 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
       HEAP8[(HEAP32[$$idx$i16 >> 2] | 0) + -108 >> 0] = 1;
       __THREW__ = 0;
       invoke_vii(58, $this | 0, HEAP32[$75 >> 2] | 0);
       $111 = __THREW__;
       __THREW__ = 0;
       if ($111 & 1) {
        label = 33;
        break;
       }
      } else {
       HEAP32[$70 >> 2] = 0;
       HEAP32[$71 >> 2] = 0;
       HEAP32[$1 >> 2] = $72;
       __THREW__ = 0;
       invoke_viiiiii(19, $62 | 0, $loc | 0, $73 | 0, 0, 0, $1 | 0);
       $86 = __THREW__;
       __THREW__ = 0;
       if ($86 & 1) {
        label = 32;
        break;
       }
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$70 >> 2] | 0);
       $89 = (HEAP32[$$idx$i16 >> 2] | 0) + -104 | 0;
       HEAP32[$89 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
       HEAP32[$89 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
       HEAP32[$89 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
       HEAP32[$89 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
       HEAP8[(HEAP32[$$idx$i16 >> 2] | 0) + -108 >> 0] = 1;
       $91 = $73 + 8 | 0;
       HEAP32[$27 + 0 >> 2] = HEAP32[$91 + 0 >> 2];
       HEAP32[$27 + 4 >> 2] = HEAP32[$91 + 4 >> 2];
       HEAP32[$27 + 8 >> 2] = HEAP32[$91 + 8 >> 2];
       HEAP32[$27 + 12 >> 2] = HEAP32[$91 + 12 >> 2];
      }
      __THREW__ = 0;
      invoke_viiiii(6, $element | 0, $this | 0, $tloc | 0, $multiline | 0, $indent2 | 0);
      $113 = __THREW__;
      __THREW__ = 0;
      if ($113 & 1) {
       label = 33;
       break;
      }
      $115 = (HEAP32[$$idx$i16 >> 2] | 0) + -104 | 0;
      HEAP32[$27 + 0 >> 2] = HEAP32[$115 + 0 >> 2];
      HEAP32[$27 + 4 >> 2] = HEAP32[$115 + 4 >> 2];
      HEAP32[$27 + 8 >> 2] = HEAP32[$115 + 8 >> 2];
      HEAP32[$27 + 12 >> 2] = HEAP32[$115 + 12 >> 2];
      __ZN12_GLOBAL__N_15Stack3popEv($62);
      $116 = _strlen($prefix$066 | 0) | 0;
      __THREW__ = 0;
      $117 = invoke_iiii(25, $63 | 0, $prefix$066 | 0, $116 | 0) | 0;
      $118 = __THREW__;
      __THREW__ = 0;
      if ($118 & 1) {
       label = 47;
       break;
      }
      $120 = HEAP8[$indent2 >> 0] | 0;
      if (!($120 & 1)) {
       $127 = $64;
       $128 = ($120 & 255) >>> 1;
      } else {
       $127 = HEAP32[$68 >> 2] | 0;
       $128 = HEAP32[$69 >> 2] | 0;
      }
      __THREW__ = 0;
      $129 = invoke_iiii(25, $117 | 0, $127 | 0, $128 | 0) | 0;
      $130 = __THREW__;
      __THREW__ = 0;
      if ($130 & 1) {
       label = 47;
       break;
      }
      $132 = HEAP8[$element >> 0] | 0;
      if (!($132 & 1)) {
       $139 = $65;
       $140 = ($132 & 255) >>> 1;
      } else {
       $139 = HEAP32[$66 >> 2] | 0;
       $140 = HEAP32[$67 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $129 | 0, $139 | 0, $140 | 0) | 0;
      $141 = __THREW__;
      __THREW__ = 0;
      if ($141 & 1) {
       label = 47;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($element);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($tloc);
      $143 = $74 + 4 | 0;
      if (($143 | 0) == ($$idx12$val | 0)) {
       $$pre$phi84Z2D = $63;
       label = 49;
       break L27;
      } else {
       $74 = $143;
       $prefix$066 = $$str36$$str3;
      }
     }
     if ((label | 0) == 29) {
      $92 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $92;
      $lpad$phi$index12 = tempRet0;
      label = 31;
      break;
     } else if ((label | 0) == 32) {
      $96 = ___cxa_find_matching_catch() | 0;
      $97 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$70 >> 2] | 0);
      $$0 = $96;
      $$02 = $97;
     } else if ((label | 0) == 33) {
      $99 = ___cxa_find_matching_catch() | 0;
      $$0 = $99;
      $$02 = tempRet0;
     } else if ((label | 0) == 47) {
      $145 = ___cxa_find_matching_catch() | 0;
      $146 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($element);
      $$0 = $145;
      $$02 = $146;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($tloc);
     $$1 = $$0;
     $$13 = $$02;
    } while (0);
    if ((label | 0) == 49) {
     $147 = $multiline ? 38176 : 37152;
     $148 = _strlen($147 | 0) | 0;
     __THREW__ = 0;
     $149 = invoke_iiii(25, $$pre$phi84Z2D | 0, $147 | 0, $148 | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if (!($150 & 1)) {
      $152 = HEAP8[$indent >> 0] | 0;
      if (!($152 & 1)) {
       $162 = $indent + 1 | 0;
       $163 = ($152 & 255) >>> 1;
      } else {
       $162 = HEAP32[$indent + 8 >> 2] | 0;
       $163 = HEAP32[$indent + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      $164 = invoke_iiii(25, $149 | 0, $162 | 0, $163 | 0) | 0;
      $165 = __THREW__;
      __THREW__ = 0;
      if (!($165 & 1)) {
       __THREW__ = 0;
       invoke_iiii(25, $164 | 0, 38184, 1) | 0;
       $167 = __THREW__;
       __THREW__ = 0;
       if (!($167 & 1)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($indent2);
        label = 140;
        break L11;
       }
      }
     }
     $94 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $94;
     $lpad$phi$index12 = tempRet0;
     label = 31;
    }
    if ((label | 0) == 31) {
     $$1 = $lpad$phi$index;
     $$13 = $lpad$phi$index12;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($indent2);
    $$5 = $$1;
    $$57 = $$13;
    HEAP32[$ss >> 2] = 772;
    $412 = $ss + 64 | 0;
    HEAP32[$412 >> 2] = 812;
    HEAP32[$7 >> 2] = 792;
    HEAP32[$8 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  case 19:
   {
    __THREW__ = 0;
    invoke_vii(54, $5 | 0, (HEAP32[$this + 64 >> 2] | 0) + 8 | 0);
    $390 = __THREW__;
    __THREW__ = 0;
    if ($390 & 1) label = 12; else {
     $393 = HEAP8[$5 >> 0] | 0;
     if (!($393 & 1)) {
      $403 = $5 + 1 | 0;
      $404 = ($393 & 255) >>> 1;
     } else {
      $403 = HEAP32[$5 + 8 >> 2] | 0;
      $404 = HEAP32[$5 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $ss + 8 | 0, $403 | 0, $404 | 0) | 0;
     $405 = __THREW__;
     __THREW__ = 0;
     if (!($405 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
      label = 140;
      break L11;
     }
     $407 = ___cxa_find_matching_catch() | 0;
     $408 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
     $$5 = $407;
     $$57 = $408;
     HEAP32[$ss >> 2] = 772;
     $412 = $ss + 64 | 0;
     HEAP32[$412 >> 2] = 812;
     HEAP32[$7 >> 2] = 792;
     HEAP32[$8 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
     ___resumeException($$5 | 0);
    }
    break;
   }
  case 0:
   {
    __THREW__ = 0;
    invoke_iiii(25, $ss + 8 | 0, 37928, 4) | 0;
    $211 = __THREW__;
    __THREW__ = 0;
    if ($211 & 1) label = 12; else label = 140;
    break;
   }
  case 1:
   {
    $173 = (HEAP8[$this + 64 >> 0] | 0) != 0 ? 38192 : 38200;
    $174 = _strlen($173 | 0) | 0;
    __THREW__ = 0;
    invoke_iiii(25, $ss + 8 | 0, $173 | 0, $174 | 0) | 0;
    $175 = __THREW__;
    __THREW__ = 0;
    if ($175 & 1) label = 12; else label = 140;
    break;
   }
  case 2:
   {
    __THREW__ = 0;
    invoke_vid(1, $2 | 0, +(+HEAPF64[$this + 64 >> 3]));
    $179 = __THREW__;
    __THREW__ = 0;
    if ($179 & 1) label = 12; else {
     $182 = HEAP8[$2 >> 0] | 0;
     if (!($182 & 1)) {
      $192 = $2 + 1 | 0;
      $193 = ($182 & 255) >>> 1;
     } else {
      $192 = HEAP32[$2 + 8 >> 2] | 0;
      $193 = HEAP32[$2 + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     invoke_iiii(25, $ss + 8 | 0, $192 | 0, $193 | 0) | 0;
     $194 = __THREW__;
     __THREW__ = 0;
     if (!($194 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
      label = 140;
      break L11;
     }
     $196 = ___cxa_find_matching_catch() | 0;
     $197 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
     $$5 = $196;
     $$57 = $197;
     HEAP32[$ss >> 2] = 772;
     $412 = $ss + 64 | 0;
     HEAP32[$412 >> 2] = 812;
     HEAP32[$7 >> 2] = 792;
     HEAP32[$8 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
     ___resumeException($$5 | 0);
    }
    break;
   }
  case 18:
   {
    $214 = HEAP32[$this + 64 >> 2] | 0;
    $215 = $fields + 4 | 0;
    HEAP32[$215 >> 2] = 0;
    $216 = $fields + 8 | 0;
    HEAP32[$216 >> 2] = 0;
    $217 = $fields + 4 | 0;
    HEAP32[$fields >> 2] = $217;
    __THREW__ = 0;
    invoke_vii(60, $4 | 0, $214 | 0);
    $218 = __THREW__;
    __THREW__ = 0;
    L95 : do if ($218 & 1) label = 75; else {
     $220 = HEAP32[$4 >> 2] | 0;
     $221 = $4 + 4 | 0;
     L97 : do if (($220 | 0) != ($221 | 0)) {
      $234 = $220;
      while (1) {
       $235 = HEAP32[$234 + 16 >> 2] | 0;
       __THREW__ = 0;
       $236 = invoke_iii(23, $fields | 0, $235 | 0) | 0;
       $237 = __THREW__;
       __THREW__ = 0;
       if ($237 & 1) break;
       HEAP32[$236 >> 2] = $235;
       $240 = HEAP32[$234 + 4 >> 2] | 0;
       if (!$240) {
        $$0$i$i = $234;
        while (1) {
         $245 = HEAP32[$$0$i$i + 8 >> 2] | 0;
         if ((HEAP32[$245 >> 2] | 0) == ($$0$i$i | 0)) {
          $$01$i$i = $245;
          break;
         } else $$0$i$i = $245;
        }
       } else {
        $$0$i$i$i = $240;
        while (1) {
         $242 = HEAP32[$$0$i$i$i >> 2] | 0;
         if (!$242) {
          $$01$i$i = $$0$i$i$i;
          break;
         } else $$0$i$i$i = $242;
        }
       }
       if (($$01$i$i | 0) == ($221 | 0)) break L97; else $234 = $$01$i$i;
      }
      $229 = ___cxa_find_matching_catch() | 0;
      $230 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
      $$4 = $229;
      $$46 = $230;
      break L95;
     } while (0);
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
     do if (!(HEAP32[$216 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_iiii(25, $ss + 8 | 0, 38256, 3) | 0;
      $250 = __THREW__;
      __THREW__ = 0;
      if ($250 & 1) {
       label = 75;
       break L95;
      }
     } else {
      do if ($multiline) {
       HEAP32[$indent24 + 0 >> 2] = 0;
       HEAP32[$indent24 + 4 >> 2] = 0;
       HEAP32[$indent24 + 8 >> 2] = 0;
       $252 = HEAP8[$indent >> 0] | 0;
       if (!($252 & 1)) {
        $263 = ($252 & 255) >>> 1;
        $264 = $indent + 1 | 0;
       } else {
        $263 = HEAP32[$indent + 4 >> 2] | 0;
        $264 = HEAP32[$indent + 8 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_viiii(14, $indent24 | 0, $264 | 0, $263 | 0, $263 + 3 | 0);
       $265 = __THREW__;
       __THREW__ = 0;
       if (!($265 & 1)) {
        __THREW__ = 0;
        invoke_iiii(31, $indent24 | 0, 38160, 3) | 0;
        $267 = __THREW__;
        __THREW__ = 0;
        if (!($267 & 1)) break;
       }
       $269 = ___cxa_find_matching_catch() | 0;
       $270 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($indent24);
       $eh$lpad$body37$index17Z2D = $270;
       $eh$lpad$body37$indexZ2D = $269;
       label = 76;
       break L95;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $indent24 | 0, $indent | 0);
       $271 = __THREW__;
       __THREW__ = 0;
       if ($271 & 1) {
        label = 75;
        break L95;
       }
      } while (0);
      $273 = HEAP32[$fields >> 2] | 0;
      L123 : do if (($273 | 0) == ($217 | 0)) {
       $$pre$phi88Z2D = $ss + 8 | 0;
       label = 123;
      } else {
       $276 = $this + 72 | 0;
       $$idx$i39 = $this + 88 | 0;
       $277 = $ss + 8 | 0;
       $278 = $indent24 + 1 | 0;
       $279 = $vstr + 1 | 0;
       $$str36$$str31 = $multiline ? 38168 : 37200;
       $280 = $vstr + 8 | 0;
       $281 = $vstr + 4 | 0;
       $282 = $indent24 + 8 | 0;
       $283 = $indent24 + 4 | 0;
       $285 = $273;
       $prefix5$074 = $multiline ? 38264 : 38272;
       while (1) {
        __THREW__ = 0;
        $287 = invoke_iiiii(8, $this | 0, $loc | 0, $214 | 0, HEAP32[$285 + 28 >> 2] | 0) | 0;
        $288 = __THREW__;
        __THREW__ = 0;
        if ($288 & 1) {
         label = 119;
         break;
        }
        $290 = (HEAP32[$$idx$i39 >> 2] | 0) + -104 | 0;
        HEAP32[$290 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
        HEAP32[$290 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
        HEAP32[$290 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
        HEAP32[$290 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
        HEAP8[(HEAP32[$$idx$i39 >> 2] | 0) + -108 >> 0] = 1;
        __THREW__ = 0;
        invoke_vii(58, $this | 0, $287 | 0);
        $292 = __THREW__;
        __THREW__ = 0;
        if ($292 & 1) {
         label = 119;
         break;
        }
        __THREW__ = 0;
        invoke_viiiii(6, $vstr | 0, $this | 0, $287 + 4 | 0, $multiline | 0, $indent24 | 0);
        $295 = __THREW__;
        __THREW__ = 0;
        if ($295 & 1) {
         label = 119;
         break;
        }
        $297 = (HEAP32[$$idx$i39 >> 2] | 0) + -104 | 0;
        HEAP32[$27 + 0 >> 2] = HEAP32[$297 + 0 >> 2];
        HEAP32[$27 + 4 >> 2] = HEAP32[$297 + 4 >> 2];
        HEAP32[$27 + 8 >> 2] = HEAP32[$297 + 8 >> 2];
        HEAP32[$27 + 12 >> 2] = HEAP32[$297 + 12 >> 2];
        __ZN12_GLOBAL__N_15Stack3popEv($276);
        $298 = _strlen($prefix5$074 | 0) | 0;
        __THREW__ = 0;
        $299 = invoke_iiii(25, $277 | 0, $prefix5$074 | 0, $298 | 0) | 0;
        $300 = __THREW__;
        __THREW__ = 0;
        if ($300 & 1) {
         label = 122;
         break;
        }
        $302 = HEAP8[$indent24 >> 0] | 0;
        if (!($302 & 1)) {
         $309 = $278;
         $310 = ($302 & 255) >>> 1;
        } else {
         $309 = HEAP32[$282 >> 2] | 0;
         $310 = HEAP32[$283 >> 2] | 0;
        }
        __THREW__ = 0;
        $311 = invoke_iiii(25, $299 | 0, $309 | 0, $310 | 0) | 0;
        $312 = __THREW__;
        __THREW__ = 0;
        if ($312 & 1) {
         label = 122;
         break;
        }
        __THREW__ = 0;
        $314 = invoke_iiii(25, $311 | 0, 38280, 1) | 0;
        $315 = __THREW__;
        __THREW__ = 0;
        if ($315 & 1) {
         label = 122;
         break;
        }
        $317 = $285 + 16 | 0;
        $318 = HEAP8[$317 >> 0] | 0;
        if (!($318 & 1)) {
         $328 = $317 + 1 | 0;
         $329 = ($318 & 255) >>> 1;
        } else {
         $328 = HEAP32[$285 + 24 >> 2] | 0;
         $329 = HEAP32[$285 + 20 >> 2] | 0;
        }
        __THREW__ = 0;
        $330 = invoke_iiii(25, $314 | 0, $328 | 0, $329 | 0) | 0;
        $331 = __THREW__;
        __THREW__ = 0;
        if ($331 & 1) {
         label = 122;
         break;
        }
        __THREW__ = 0;
        $333 = invoke_iiii(25, $330 | 0, 38288, 3) | 0;
        $334 = __THREW__;
        __THREW__ = 0;
        if ($334 & 1) {
         label = 122;
         break;
        }
        $336 = HEAP8[$vstr >> 0] | 0;
        if (!($336 & 1)) {
         $343 = $279;
         $344 = ($336 & 255) >>> 1;
        } else {
         $343 = HEAP32[$280 >> 2] | 0;
         $344 = HEAP32[$281 >> 2] | 0;
        }
        __THREW__ = 0;
        invoke_iiii(25, $333 | 0, $343 | 0, $344 | 0) | 0;
        $345 = __THREW__;
        __THREW__ = 0;
        if ($345 & 1) {
         label = 122;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($vstr);
        $348 = HEAP32[$285 + 4 >> 2] | 0;
        if (!$348) {
         $$0$i$i$i54 = $285;
         while (1) {
          $353 = HEAP32[$$0$i$i$i54 + 8 >> 2] | 0;
          if ((HEAP32[$353 >> 2] | 0) == ($$0$i$i$i54 | 0)) {
           $$01$i$i$i = $353;
           break;
          } else $$0$i$i$i54 = $353;
         }
        } else {
         $$0$i$i$i$i = $348;
         while (1) {
          $350 = HEAP32[$$0$i$i$i$i >> 2] | 0;
          if (!$350) {
           $$01$i$i$i = $$0$i$i$i$i;
           break;
          } else $$0$i$i$i$i = $350;
         }
        }
        if (($$01$i$i$i | 0) == ($217 | 0)) {
         $$pre$phi88Z2D = $277;
         label = 123;
         break L123;
        } else {
         $285 = $$01$i$i$i;
         $prefix5$074 = $$str36$$str31;
        }
       }
       if ((label | 0) == 119) {
        $357 = ___cxa_find_matching_catch() | 0;
        $lpad$phi73$index = $357;
        $lpad$phi73$index22 = tempRet0;
        label = 121;
        break;
       } else if ((label | 0) == 122) {
        $361 = ___cxa_find_matching_catch() | 0;
        $362 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($vstr);
        $$3 = $361;
        $$35 = $362;
        break;
       }
      } while (0);
      if ((label | 0) == 123) {
       $363 = $multiline ? 38176 : 37152;
       $364 = _strlen($363 | 0) | 0;
       __THREW__ = 0;
       $365 = invoke_iiii(25, $$pre$phi88Z2D | 0, $363 | 0, $364 | 0) | 0;
       $366 = __THREW__;
       __THREW__ = 0;
       if (!($366 & 1)) {
        $368 = HEAP8[$indent >> 0] | 0;
        if (!($368 & 1)) {
         $378 = $indent + 1 | 0;
         $379 = ($368 & 255) >>> 1;
        } else {
         $378 = HEAP32[$indent + 8 >> 2] | 0;
         $379 = HEAP32[$indent + 4 >> 2] | 0;
        }
        __THREW__ = 0;
        $380 = invoke_iiii(25, $365 | 0, $378 | 0, $379 | 0) | 0;
        $381 = __THREW__;
        __THREW__ = 0;
        if (!($381 & 1)) {
         __THREW__ = 0;
         invoke_iiii(25, $380 | 0, 38296, 1) | 0;
         $383 = __THREW__;
         __THREW__ = 0;
         if (!($383 & 1)) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($indent24);
          break;
         }
        }
       }
       $359 = ___cxa_find_matching_catch() | 0;
       $lpad$phi73$index = $359;
       $lpad$phi73$index22 = tempRet0;
       label = 121;
      }
      if ((label | 0) == 121) {
       $$3 = $lpad$phi73$index;
       $$35 = $lpad$phi73$index22;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($indent24);
      $$4 = $$3;
      $$46 = $$35;
      break L95;
     } while (0);
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields, HEAP32[$215 >> 2] | 0);
     label = 140;
     break L11;
    } while (0);
    if ((label | 0) == 75) {
     $227 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body37$index17Z2D = tempRet0;
     $eh$lpad$body37$indexZ2D = $227;
     label = 76;
    }
    if ((label | 0) == 76) {
     $$4 = $eh$lpad$body37$indexZ2D;
     $$46 = $eh$lpad$body37$index17Z2D;
    }
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields, HEAP32[$215 >> 2] | 0);
    $$5 = $$4;
    $$57 = $$46;
    HEAP32[$ss >> 2] = 772;
    $412 = $ss + 64 | 0;
    HEAP32[$412 >> 2] = 812;
    HEAP32[$7 >> 2] = 792;
    HEAP32[$8 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  case 17:
   {
    $198 = ___cxa_allocate_exception(24) | 0;
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 38208, 42);
    $199 = __THREW__;
    __THREW__ = 0;
    if ($199 & 1) {
     $206 = ___cxa_find_matching_catch() | 0;
     $$2461 = tempRet0;
     $$262 = $206;
    } else {
     __THREW__ = 0;
     invoke_viiii(17, $198 | 0, $this + 72 | 0, $loc | 0, $3 | 0);
     $202 = __THREW__;
     __THREW__ = 0;
     if ($202 & 1) $$08 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $198 | 0, 37312, 185);
      $204 = __THREW__;
      __THREW__ = 0;
      if ($204 & 1) $$08 = 0; else {}
     }
     $208 = ___cxa_find_matching_catch() | 0;
     $209 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
     if ($$08) {
      $$2461 = $209;
      $$262 = $208;
     } else {
      $$5 = $208;
      $$57 = $209;
      HEAP32[$ss >> 2] = 772;
      $412 = $ss + 64 | 0;
      HEAP32[$412 >> 2] = 812;
      HEAP32[$7 >> 2] = 792;
      HEAP32[$8 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
      ___resumeException($$5 | 0);
     }
    }
    ___cxa_free_exception($198 | 0);
    $$5 = $$262;
    $$57 = $$2461;
    HEAP32[$ss >> 2] = 772;
    $412 = $ss + 64 | 0;
    HEAP32[$412 >> 2] = 812;
    HEAP32[$7 >> 2] = 792;
    HEAP32[$8 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  default:
   label = 140;
  } while (0);
  if ((label | 0) == 140) {
   __THREW__ = 0;
   invoke_vii(43, $agg$result | 0, $8 | 0);
   $409 = __THREW__;
   __THREW__ = 0;
   if ($409 & 1) label = 12; else {
    HEAP32[$ss >> 2] = 772;
    HEAP32[$ss + 64 >> 2] = 812;
    HEAP32[$7 >> 2] = 792;
    HEAP32[$8 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    STACKTOP = sp;
    return;
   }
  }
  if ((label | 0) == 12) {
   $36 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index7Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $36;
  }
  $$5 = $eh$lpad$body$indexZ2D;
  $$57 = $eh$lpad$body$index7Z2D;
  HEAP32[$ss >> 2] = 772;
  $412 = $ss + 64 | 0;
  HEAP32[$412 >> 2] = 812;
  HEAP32[$7 >> 2] = 792;
  HEAP32[$8 >> 2] = 1104;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$5 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
 ___resumeException($$01$i | 0);
}

function __ZL28jsonnet_evaluate_snippet_auxP9JsonnetVmPKcS2_Pib($vm, $filename, $snippet, $error, $multi) {
 $vm = $vm | 0;
 $filename = $filename | 0;
 $snippet = $snippet | 0;
 $error = $error | 0;
 $multi = $multi | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i22 = 0, $$0$i$i$i24 = 0, $$0$i50 = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$01$i$i$i26 = 0, $$01$i49 = 0, $$03 = 0, $$1 = 0, $$2 = 0, $$25 = 0, $$4 = 0, $$47 = 0, $$5 = 0, $$58 = 0, $0 = 0, $1 = 0, $10 = 0, $104 = 0, $11 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $122 = 0, $126 = 0, $127 = 0, $128 = 0, $130 = 0, $141 = 0, $142 = 0, $143 = 0, $151 = 0, $152 = 0, $154 = 0, $155 = 0, $165 = 0, $166 = 0, $167 = 0, $174 = 0, $175 = 0, $179 = 0, $18 = 0, $181 = 0, $183 = 0, $186 = 0, $19 = 0, $191 = 0, $192 = 0, $2 = 0, $200 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $21 = 0, $211 = 0, $215 = 0, $217 = 0, $219 = 0, $22 = 0, $221 = 0, $222 = 0, $223 = 0, $225 = 0, $228 = 0, $229 = 0, $234 = 0, $235 = 0, $237 = 0, $239 = 0, $24 = 0, $240 = 0, $243 = 0, $25 = 0, $253 = 0, $254 = 0, $255 = 0, $26 = 0, $261 = 0, $263 = 0, $264 = 0, $269 = 0, $270 = 0, $272 = 0, $273 = 0, $274 = 0, $276 = 0, $278 = 0, $286 = 0, $287 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $297 = 0, $3 = 0, $30 = 0, $301 = 0, $303 = 0, $305 = 0, $307 = 0, $308 = 0, $309 = 0, $311 = 0, $313 = 0, $314 = 0, $315 = 0, $318 = 0, $328 = 0, $329 = 0, $330 = 0, $331 = 0, $337 = 0, $339 = 0, $340 = 0, $345 = 0, $346 = 0, $348 = 0, $349 = 0, $350 = 0, $352 = 0, $354 = 0, $355 = 0, $356 = 0, $359 = 0, $362 = 0, $363 = 0, $366 = 0, $367 = 0, $370 = 0, $371 = 0, $377 = 0, $379 = 0, $380 = 0, $385 = 0, $386 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $392 = 0, $394 = 0, $396 = 0, $398 = 0, $399 = 0, $4 = 0, $402 = 0, $403 = 0, $404 = 0, $406 = 0, $407 = 0, $409 = 0, $41 = 0, $410 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $429 = 0, $43 = 0, $431 = 0, $432 = 0, $437 = 0, $438 = 0, $440 = 0, $441 = 0, $442 = 0, $444 = 0, $446 = 0, $448 = 0, $45 = 0, $456 = 0, $457 = 0, $46 = 0, $460 = 0, $462 = 0, $465 = 0, $467 = 0, $468 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $57 = 0.0, $58 = 0.0, $6 = 0, $60 = 0, $62 = 0, $65 = 0, $66 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $95 = 0, $96 = 0, $alloc = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i47$index7Z2D = 0, $eh$lpad$body$i47$indexZ2D = 0, $eh$lpad$body$index15Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body84$index23Z2D = 0, $eh$lpad$body84$indexZ2D = 0, $files = 0, $i$0$lcssa = 0, $i$091 = 0, $i6$099 = 0, $json_str = 0, $ss = 0, $ss8 = 0, $sz$094 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464 | 0;
 $0 = sp + 452 | 0;
 $1 = sp + 448 | 0;
 $2 = sp + 444 | 0;
 $3 = sp + 432 | 0;
 $4 = sp + 420 | 0;
 $5 = sp + 416 | 0;
 $alloc = sp + 392 | 0;
 $6 = sp + 380 | 0;
 $json_str = sp + 368 | 0;
 $files = sp + 356 | 0;
 $7 = sp + 344 | 0;
 $8 = sp + 332 | 0;
 $9 = sp + 320 | 0;
 $ss = sp + 176 | 0;
 $10 = sp + 160 | 0;
 $ss8 = sp + 16 | 0;
 $11 = sp;
 HEAP32[$alloc + 4 >> 2] = 0;
 HEAP32[$alloc + 8 >> 2] = 0;
 HEAP32[$alloc >> 2] = $alloc + 4;
 HEAP32[$alloc + 12 >> 2] = 0;
 HEAP32[$alloc + 16 >> 2] = 0;
 HEAP32[$alloc + 20 >> 2] = 0;
 $18 = _strlen($filename | 0) | 0;
 __THREW__ = 0;
 invoke_viii(3, $6 | 0, $filename | 0, $18 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 do if ($19 & 1) {
  $43 = ___cxa_find_matching_catch(48, 37312) | 0;
  $$01 = $43;
  $$03 = tempRet0;
 } else {
  __THREW__ = 0;
  $21 = invoke_iiii(34, $alloc | 0, $6 | 0, $snippet | 0) | 0;
  $22 = __THREW__;
  __THREW__ = 0;
  if ($22 & 1) {
   $45 = ___cxa_find_matching_catch(48, 37312) | 0;
   $46 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
   $$01 = $45;
   $$03 = $46;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
  HEAP32[$json_str + 0 >> 2] = 0;
  HEAP32[$json_str + 4 >> 2] = 0;
  HEAP32[$json_str + 8 >> 2] = 0;
  $24 = $files + 4 | 0;
  HEAP32[$24 >> 2] = 0;
  $25 = $files + 8 | 0;
  HEAP32[$25 >> 2] = 0;
  $26 = $files + 4 | 0;
  HEAP32[$files >> 2] = $26;
  do if (!(HEAP8[$vm + 16 >> 0] | 0)) {
   __THREW__ = 0;
   invoke_vi(187, $21 | 0);
   $50 = __THREW__;
   __THREW__ = 0;
   if (!($50 & 1)) {
    $52 = $vm + 24 | 0;
    $54 = HEAP32[$vm + 8 >> 2] | 0;
    $57 = +((HEAP32[$vm + 12 >> 2] | 0) >>> 0);
    $58 = +HEAPF64[$vm >> 3];
    $60 = HEAP32[$vm + 36 >> 2] | 0;
    $62 = HEAP32[$vm + 40 >> 2] | 0;
    $65 = (HEAP8[$vm + 44 >> 0] | 0) != 0;
    if ($multi) {
     __THREW__ = 0;
     invoke_viiiiiddiii(1, $8 | 0, $alloc | 0, $21 | 0, $52 | 0, $54 | 0, +$57, +$58, $60 | 0, $62 | 0, $65 | 0);
     $66 = __THREW__;
     __THREW__ = 0;
     if ($66 & 1) break;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
     HEAP32[$files >> 2] = HEAP32[$8 >> 2];
     $71 = HEAP32[$8 + 4 >> 2] | 0;
     HEAP32[$24 >> 2] = $71;
     $72 = $8 + 8 | 0;
     $73 = HEAP32[$72 >> 2] | 0;
     HEAP32[$25 >> 2] = $73;
     if (!$73) {
      HEAP32[$files >> 2] = $26;
      $77 = $71;
     } else {
      HEAP32[$71 + 8 >> 2] = $26;
      $76 = $8 + 4 | 0;
      HEAP32[$8 >> 2] = $76;
      HEAP32[$76 >> 2] = 0;
      HEAP32[$72 >> 2] = 0;
      $77 = 0;
     }
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($8, $77);
     label = 28;
     break;
    }
    __THREW__ = 0;
    invoke_viiiiiddiii(2, $9 | 0, $alloc | 0, $21 | 0, $52 | 0, $54 | 0, +$57, +$58, $60 | 0, $62 | 0, $65 | 0);
    $78 = __THREW__;
    __THREW__ = 0;
    if (!($78 & 1)) {
     if (!(HEAP8[$json_str >> 0] & 1)) {
      HEAP8[$json_str + 1 >> 0] = 0;
      HEAP8[$json_str >> 0] = 0;
     } else {
      HEAP8[HEAP32[$json_str + 8 >> 2] >> 0] = 0;
      HEAP32[$json_str + 4 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $json_str | 0, 0);
     $87 = __THREW__;
     __THREW__ = 0;
     if ($87 & 1) {
      $89 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($89);
     } else {
      HEAP32[$json_str + 0 >> 2] = HEAP32[$9 + 0 >> 2];
      HEAP32[$json_str + 4 >> 2] = HEAP32[$9 + 4 >> 2];
      HEAP32[$json_str + 8 >> 2] = HEAP32[$9 + 8 >> 2];
      HEAP32[$9 + 0 >> 2] = 0;
      HEAP32[$9 + 4 >> 2] = 0;
      HEAP32[$9 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
      label = 28;
      break;
     }
    }
   }
  } else {
   __THREW__ = 0;
   invoke_vii(67, $7 | 0, $21 | 0);
   $30 = __THREW__;
   __THREW__ = 0;
   if (!($30 & 1)) {
    if (!(HEAP8[$json_str >> 0] & 1)) {
     HEAP8[$json_str + 1 >> 0] = 0;
     HEAP8[$json_str >> 0] = 0;
    } else {
     HEAP8[HEAP32[$json_str + 8 >> 2] >> 0] = 0;
     HEAP32[$json_str + 4 >> 2] = 0;
    }
    __THREW__ = 0;
    invoke_vii(45, $json_str | 0, 0);
    $39 = __THREW__;
    __THREW__ = 0;
    if ($39 & 1) {
     $41 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($41);
    } else {
     HEAP32[$json_str + 0 >> 2] = HEAP32[$7 + 0 >> 2];
     HEAP32[$json_str + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$json_str + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     HEAP32[$7 + 0 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
     label = 28;
     break;
    }
   }
  } while (0);
  do if ((label | 0) == 28) {
   if ($multi) {
    $91 = HEAP32[$files >> 2] | 0;
    $92 = ($91 | 0) == ($26 | 0);
    if ($92) {
     $191 = _malloc(1) | 0;
     $i$0$lcssa = 0;
    } else {
     $95 = $91;
     $sz$094 = 1;
     while (1) {
      $96 = HEAP8[$95 + 16 >> 0] | 0;
      if (!($96 & 1)) $113 = ($96 & 255) >>> 1; else $113 = HEAP32[$95 + 20 >> 2] | 0;
      $104 = HEAP8[$95 + 28 >> 0] | 0;
      if (!($104 & 1)) $115 = ($104 & 255) >>> 1; else $115 = HEAP32[$95 + 32 >> 2] | 0;
      $sz$094 = $sz$094 + 3 + $113 + $115 | 0;
      $117 = HEAP32[$95 + 4 >> 2] | 0;
      if (!$117) {
       $$0$i$i$i = $95;
       while (1) {
        $122 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$122 >> 2] | 0) == ($$0$i$i$i | 0)) {
         $$01$i$i$i = $122;
         break;
        } else $$0$i$i$i = $122;
       }
      } else {
       $$0$i$i$i$i = $117;
       while (1) {
        $119 = HEAP32[$$0$i$i$i$i >> 2] | 0;
        if (!$119) {
         $$01$i$i$i = $$0$i$i$i$i;
         break;
        } else $$0$i$i$i$i = $119;
       }
      }
      if (($$01$i$i$i | 0) == ($26 | 0)) break; else $95 = $$01$i$i$i;
     }
     $126 = _malloc($sz$094) | 0;
     if ($92) {
      $191 = $126;
      $i$0$lcssa = 0;
     } else {
      $128 = $91;
      $i$091 = 0;
      while (1) {
       $127 = $128 + 16 | 0;
       $130 = HEAP8[$127 >> 0] | 0;
       if (!($130 & 1)) {
        $141 = ($130 & 255) >>> 1;
        $142 = $127 + 1 | 0;
       } else {
        $141 = HEAP32[$128 + 20 >> 2] | 0;
        $142 = HEAP32[$128 + 24 >> 2] | 0;
       }
       _memcpy($126 + $i$091 | 0, $142 | 0, $141 + 1 | 0) | 0;
       $143 = HEAP8[$127 >> 0] | 0;
       if (!($143 & 1)) $152 = ($143 & 255) >>> 1; else $152 = HEAP32[$128 + 20 >> 2] | 0;
       $151 = $i$091 + 1 + $152 | 0;
       $154 = $128 + 28 | 0;
       $155 = HEAP8[$154 >> 0] | 0;
       if (!($155 & 1)) {
        $165 = $154 + 1 | 0;
        $166 = ($155 & 255) >>> 1;
       } else {
        $165 = HEAP32[$128 + 36 >> 2] | 0;
        $166 = HEAP32[$128 + 32 >> 2] | 0;
       }
       _memcpy($126 + $151 | 0, $165 | 0, $166 | 0) | 0;
       $167 = HEAP8[$154 >> 0] | 0;
       if (!($167 & 1)) $175 = ($167 & 255) >>> 1; else $175 = HEAP32[$128 + 32 >> 2] | 0;
       $174 = $175 + $151 | 0;
       HEAP8[$126 + $174 >> 0] = 10;
       HEAP8[$126 + ($174 + 1) >> 0] = 0;
       $179 = $174 + 2 | 0;
       $181 = HEAP32[$128 + 4 >> 2] | 0;
       if (!$181) {
        $$0$i$i$i24 = $128;
        while (1) {
         $186 = HEAP32[$$0$i$i$i24 + 8 >> 2] | 0;
         if ((HEAP32[$186 >> 2] | 0) == ($$0$i$i$i24 | 0)) {
          $$01$i$i$i26 = $186;
          break;
         } else $$0$i$i$i24 = $186;
        }
       } else {
        $$0$i$i$i$i22 = $181;
        while (1) {
         $183 = HEAP32[$$0$i$i$i$i22 >> 2] | 0;
         if (!$183) {
          $$01$i$i$i26 = $$0$i$i$i$i22;
          break;
         } else $$0$i$i$i$i22 = $183;
        }
       }
       if (($$01$i$i$i26 | 0) == ($26 | 0)) {
        $191 = $126;
        $i$0$lcssa = $179;
        break;
       } else {
        $128 = $$01$i$i$i26;
        $i$091 = $179;
       }
      }
     }
    }
    HEAP8[$191 + $i$0$lcssa >> 0] = 0;
    HEAP32[$error >> 2] = 0;
    $$0 = $191;
   } else {
    __THREW__ = 0;
    invoke_iii(29, $json_str | 0, 40736) | 0;
    $192 = __THREW__;
    __THREW__ = 0;
    if ($192 & 1) break;
    HEAP32[$error >> 2] = 0;
    if (!(HEAP8[$json_str >> 0] & 1)) $200 = $json_str + 1 | 0; else $200 = HEAP32[$json_str + 8 >> 2] | 0;
    $$0 = ___strdup($200) | 0;
   }
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$24 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($json_str);
   __ZN9AllocatorD2Ev($alloc);
   $$1 = $$0;
   STACKTOP = sp;
   return $$1 | 0;
  } while (0);
  $47 = ___cxa_find_matching_catch(48, 37312) | 0;
  $48 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$24 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($json_str);
  $$01 = $47;
  $$03 = $48;
 } while (0);
 __ZN9AllocatorD2Ev($alloc);
 if (($$03 | 0) == (_llvm_eh_typeid_for(48) | 0)) {
  $205 = ___cxa_begin_catch($$01 | 0) | 0;
  $206 = $ss8 + 64 | 0;
  $207 = $ss8 + 8 | 0;
  HEAP32[$207 >> 2] = 792;
  $208 = $ss8 + 12 | 0;
  HEAP32[$ss8 >> 2] = 940;
  HEAP32[$206 >> 2] = 960;
  HEAP32[$ss8 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss8 + 64 | 0, $208 | 0);
  $211 = __THREW__;
  __THREW__ = 0;
  L97 : do if ($211 & 1) {
   $223 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $223;
   label = 150;
  } else {
   HEAP32[$ss8 + 136 >> 2] = 0;
   HEAP32[$ss8 + 140 >> 2] = -1;
   HEAP32[$ss8 >> 2] = 772;
   HEAP32[$206 >> 2] = 812;
   HEAP32[$207 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $208 | 0);
   $215 = __THREW__;
   __THREW__ = 0;
   do if ($215 & 1) {
    $225 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $225;
   } else {
    HEAP32[$208 >> 2] = 1104;
    $217 = $ss8 + 44 | 0;
    HEAP32[$217 + 0 >> 2] = 0;
    HEAP32[$217 + 4 >> 2] = 0;
    HEAP32[$217 + 8 >> 2] = 0;
    HEAP32[$217 + 12 >> 2] = 0;
    HEAP32[$ss8 + 60 >> 2] = 24;
    HEAP32[$4 + 0 >> 2] = 0;
    HEAP32[$4 + 4 >> 2] = 0;
    HEAP32[$4 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $208 | 0, $4 | 0);
    $219 = __THREW__;
    __THREW__ = 0;
    if ($219 & 1) {
     $221 = ___cxa_find_matching_catch() | 0;
     $222 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($217);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($208);
     $eh$lpad$body$i$index2Z2D = $222;
     $eh$lpad$body$i$indexZ2D = $221;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
    __THREW__ = 0;
    $228 = invoke_iiii(25, $ss8 + 8 | 0, 40776, 14) | 0;
    $229 = __THREW__;
    __THREW__ = 0;
    do if ($229 & 1) label = 151; else {
     if (HEAP32[$205 + 12 >> 2] | 0) {
      __THREW__ = 0;
      $234 = invoke_iii(38, $228 | 0, $205 | 0) | 0;
      $235 = __THREW__;
      __THREW__ = 0;
      if ($235 & 1) {
       label = 151;
       break;
      }
      __THREW__ = 0;
      invoke_iiii(25, $234 | 0, 40792, 1) | 0;
      $237 = __THREW__;
      __THREW__ = 0;
      if ($237 & 1) {
       label = 151;
       break;
      }
     }
     __THREW__ = 0;
     $239 = invoke_iiii(25, $228 | 0, 40800, 1) | 0;
     $240 = __THREW__;
     __THREW__ = 0;
     if ($240 & 1) label = 151; else {
      $243 = HEAP8[$205 + 28 >> 0] | 0;
      if (!($243 & 1)) {
       $253 = $205 + 29 | 0;
       $254 = ($243 & 255) >>> 1;
      } else {
       $253 = HEAP32[$205 + 36 >> 2] | 0;
       $254 = HEAP32[$205 + 32 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $239 | 0, $253 | 0, $254 | 0) | 0;
      $255 = __THREW__;
      __THREW__ = 0;
      if ($255 & 1) label = 151; else {
       __THREW__ = 0;
       invoke_vii(47, $1 | 0, $228 + (HEAP32[(HEAP32[$228 >> 2] | 0) + -12 >> 2] | 0) | 0);
       $261 = __THREW__;
       __THREW__ = 0;
       if ($261 & 1) label = 151; else {
        __THREW__ = 0;
        $263 = invoke_iii(22, $1 | 0, 45800) | 0;
        $264 = __THREW__;
        __THREW__ = 0;
        if (!($264 & 1)) {
         __THREW__ = 0;
         $269 = invoke_iii(HEAP32[(HEAP32[$263 >> 2] | 0) + 28 >> 2] | 0, $263 | 0, 10) | 0;
         $270 = __THREW__;
         __THREW__ = 0;
         if (!($270 & 1)) {
          __ZNSt3__16localeD2Ev($1);
          __THREW__ = 0;
          invoke_iii(27, $228 | 0, $269 | 0) | 0;
          $274 = __THREW__;
          __THREW__ = 0;
          if ($274 & 1) {
           label = 151;
           break;
          }
          __THREW__ = 0;
          invoke_ii(68, $228 | 0) | 0;
          $276 = __THREW__;
          __THREW__ = 0;
          if ($276 & 1) {
           label = 151;
           break;
          }
          HEAP32[$error >> 2] = 1;
          __THREW__ = 0;
          invoke_vii(43, $11 | 0, $208 | 0);
          $278 = __THREW__;
          __THREW__ = 0;
          if ($278 & 1) {
           label = 151;
           break;
          }
          if (!(HEAP8[$11 >> 0] & 1)) $286 = $11 + 1 | 0; else $286 = HEAP32[$11 + 8 >> 2] | 0;
          $287 = ___strdup($286) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
          HEAP32[$ss8 >> 2] = 772;
          HEAP32[$ss8 + 64 >> 2] = 812;
          HEAP32[$207 >> 2] = 792;
          HEAP32[$208 >> 2] = 1104;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($217);
          __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($208);
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($206);
          ___cxa_end_catch();
          $$1 = $287;
          STACKTOP = sp;
          return $$1 | 0;
         }
        }
        $272 = ___cxa_find_matching_catch() | 0;
        $273 = tempRet0;
        __ZNSt3__16localeD2Ev($1);
        $eh$lpad$body84$index23Z2D = $273;
        $eh$lpad$body84$indexZ2D = $272;
       }
      }
     }
    } while (0);
    if ((label | 0) == 151) {
     $462 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body84$index23Z2D = tempRet0;
     $eh$lpad$body84$indexZ2D = $462;
    }
    HEAP32[$ss8 >> 2] = 772;
    HEAP32[$ss8 + 64 >> 2] = 812;
    HEAP32[$207 >> 2] = 792;
    HEAP32[$208 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($217);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($208);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($206);
    $$4 = $eh$lpad$body84$indexZ2D;
    $$47 = $eh$lpad$body84$index23Z2D;
    break L97;
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
   label = 150;
  } while (0);
  if ((label | 0) == 150) {
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($206);
   $$4 = $$01$i;
   $$47 = $$0$i;
  }
  __THREW__ = 0;
  invoke_v(2);
  $465 = __THREW__;
  __THREW__ = 0;
  if ($465 & 1) {
   $467 = ___cxa_find_matching_catch(0) | 0;
   $468 = tempRet0;
   ___clang_call_terminate($467);
  } else {
   $$5 = $$4;
   $$58 = $$47;
   ___resumeException($$5 | 0);
  }
 }
 if (($$03 | 0) != (_llvm_eh_typeid_for(37312) | 0)) {
  $$5 = $$01;
  $$58 = $$03;
  ___resumeException($$5 | 0);
 }
 $291 = ___cxa_begin_catch($$01 | 0) | 0;
 $292 = $ss + 64 | 0;
 $293 = $ss + 8 | 0;
 HEAP32[$293 >> 2] = 792;
 $294 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 940;
 HEAP32[$292 >> 2] = 960;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $294 | 0);
 $297 = __THREW__;
 __THREW__ = 0;
 L145 : do if ($297 & 1) {
  $309 = ___cxa_find_matching_catch() | 0;
  $$0$i50 = tempRet0;
  $$01$i49 = $309;
  label = 125;
 } else {
  HEAP32[$ss + 136 >> 2] = 0;
  HEAP32[$ss + 140 >> 2] = -1;
  HEAP32[$ss >> 2] = 772;
  HEAP32[$292 >> 2] = 812;
  HEAP32[$293 >> 2] = 792;
  __THREW__ = 0;
  invoke_vi(179, $294 | 0);
  $301 = __THREW__;
  __THREW__ = 0;
  do if ($301 & 1) {
   $311 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i47$index7Z2D = tempRet0;
   $eh$lpad$body$i47$indexZ2D = $311;
  } else {
   HEAP32[$294 >> 2] = 1104;
   $303 = $ss + 44 | 0;
   HEAP32[$303 + 0 >> 2] = 0;
   HEAP32[$303 + 4 >> 2] = 0;
   HEAP32[$303 + 8 >> 2] = 0;
   HEAP32[$303 + 12 >> 2] = 0;
   HEAP32[$ss + 60 >> 2] = 24;
   HEAP32[$3 + 0 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(42, $294 | 0, $3 | 0);
   $305 = __THREW__;
   __THREW__ = 0;
   if ($305 & 1) {
    $307 = ___cxa_find_matching_catch() | 0;
    $308 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($303);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($294);
    $eh$lpad$body$i47$index7Z2D = $308;
    $eh$lpad$body$i47$indexZ2D = $307;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
   $313 = $ss + 8 | 0;
   __THREW__ = 0;
   $314 = invoke_iiii(25, $313 | 0, 40744, 15) | 0;
   $315 = __THREW__;
   __THREW__ = 0;
   L152 : do if ($315 & 1) label = 127; else {
    $318 = HEAP8[$291 + 12 >> 0] | 0;
    if (!($318 & 1)) {
     $328 = $291 + 13 | 0;
     $329 = ($318 & 255) >>> 1;
    } else {
     $328 = HEAP32[$291 + 20 >> 2] | 0;
     $329 = HEAP32[$291 + 16 >> 2] | 0;
    }
    __THREW__ = 0;
    $330 = invoke_iiii(25, $314 | 0, $328 | 0, $329 | 0) | 0;
    $331 = __THREW__;
    __THREW__ = 0;
    if ($331 & 1) label = 127; else {
     __THREW__ = 0;
     invoke_vii(47, $2 | 0, $330 + (HEAP32[(HEAP32[$330 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $337 = __THREW__;
     __THREW__ = 0;
     if ($337 & 1) label = 127; else {
      __THREW__ = 0;
      $339 = invoke_iii(22, $2 | 0, 45800) | 0;
      $340 = __THREW__;
      __THREW__ = 0;
      if (!($340 & 1)) {
       __THREW__ = 0;
       $345 = invoke_iii(HEAP32[(HEAP32[$339 >> 2] | 0) + 28 >> 2] | 0, $339 | 0, 10) | 0;
       $346 = __THREW__;
       __THREW__ = 0;
       if (!($346 & 1)) {
        __ZNSt3__16localeD2Ev($2);
        __THREW__ = 0;
        invoke_iii(27, $330 | 0, $345 | 0) | 0;
        $350 = __THREW__;
        __THREW__ = 0;
        if ($350 & 1) {
         label = 127;
         break;
        }
        __THREW__ = 0;
        invoke_ii(68, $330 | 0) | 0;
        $352 = __THREW__;
        __THREW__ = 0;
        if ($352 & 1) {
         label = 127;
         break;
        }
        $354 = $vm + 20 | 0;
        $355 = HEAP32[$354 >> 2] | 0;
        $356 = $355 >>> 1;
        $359 = HEAP32[$291 >> 2] | 0;
        $362 = (HEAP32[$291 + 4 >> 2] | 0) - $359 | 0;
        $363 = ($362 | 0) / 40 | 0;
        L165 : do if (($362 | 0) > 0) {
         $366 = $356 - $355 + $363 | 0;
         $367 = $355;
         $402 = $359;
         $i6$099 = 0;
         L167 : while (1) {
          do if (($i6$099 | 0) >= ($356 | 0) & ($367 | 0) != 0 & ($i6$099 | 0) < ($366 | 0)) {
           if (($i6$099 | 0) != ($356 | 0)) break;
           __THREW__ = 0;
           $370 = invoke_iiii(25, $313 | 0, 40760, 4) | 0;
           $371 = __THREW__;
           __THREW__ = 0;
           if ($371 & 1) {
            label = 126;
            break L167;
           }
           __THREW__ = 0;
           invoke_vii(47, $0 | 0, $370 + (HEAP32[(HEAP32[$370 >> 2] | 0) + -12 >> 2] | 0) | 0);
           $377 = __THREW__;
           __THREW__ = 0;
           if ($377 & 1) {
            label = 126;
            break L167;
           }
           __THREW__ = 0;
           $379 = invoke_iii(22, $0 | 0, 45800) | 0;
           $380 = __THREW__;
           __THREW__ = 0;
           if ($380 & 1) {
            label = 122;
            break L167;
           }
           __THREW__ = 0;
           $385 = invoke_iii(HEAP32[(HEAP32[$379 >> 2] | 0) + 28 >> 2] | 0, $379 | 0, 10) | 0;
           $386 = __THREW__;
           __THREW__ = 0;
           if ($386 & 1) {
            label = 122;
            break L167;
           }
           __ZNSt3__16localeD2Ev($0);
           __THREW__ = 0;
           invoke_iii(27, $370 | 0, $385 | 0) | 0;
           $390 = __THREW__;
           __THREW__ = 0;
           if ($390 & 1) {
            label = 126;
            break L167;
           }
           __THREW__ = 0;
           invoke_ii(68, $370 | 0) | 0;
           $392 = __THREW__;
           __THREW__ = 0;
           if ($392 & 1) {
            label = 126;
            break L167;
           }
          } else {
           __THREW__ = 0;
           $398 = invoke_iiii(25, $313 | 0, 40768, 1) | 0;
           $399 = __THREW__;
           __THREW__ = 0;
           if ($399 & 1) {
            label = 126;
            break L167;
           }
           __THREW__ = 0;
           $403 = invoke_iii(38, $398 | 0, $402 + ($i6$099 * 40 | 0) | 0) | 0;
           $404 = __THREW__;
           __THREW__ = 0;
           if ($404 & 1) {
            label = 126;
            break L167;
           }
           __THREW__ = 0;
           $406 = invoke_iiii(25, $403 | 0, 40768, 1) | 0;
           $407 = __THREW__;
           __THREW__ = 0;
           if ($407 & 1) {
            label = 126;
            break L167;
           }
           $409 = $402 + ($i6$099 * 40 | 0) + 28 | 0;
           $410 = HEAP8[$409 >> 0] | 0;
           if (!($410 & 1)) {
            $420 = $409 + 1 | 0;
            $421 = ($410 & 255) >>> 1;
           } else {
            $420 = HEAP32[$402 + ($i6$099 * 40 | 0) + 36 >> 2] | 0;
            $421 = HEAP32[$402 + ($i6$099 * 40 | 0) + 32 >> 2] | 0;
           }
           __THREW__ = 0;
           $422 = invoke_iiii(25, $406 | 0, $420 | 0, $421 | 0) | 0;
           $423 = __THREW__;
           __THREW__ = 0;
           if ($423 & 1) {
            label = 126;
            break L167;
           }
           __THREW__ = 0;
           invoke_vii(47, $5 | 0, $422 + (HEAP32[(HEAP32[$422 >> 2] | 0) + -12 >> 2] | 0) | 0);
           $429 = __THREW__;
           __THREW__ = 0;
           if ($429 & 1) {
            label = 126;
            break L167;
           }
           __THREW__ = 0;
           $431 = invoke_iii(22, $5 | 0, 45800) | 0;
           $432 = __THREW__;
           __THREW__ = 0;
           if ($432 & 1) {
            label = 138;
            break L167;
           }
           __THREW__ = 0;
           $437 = invoke_iii(HEAP32[(HEAP32[$431 >> 2] | 0) + 28 >> 2] | 0, $431 | 0, 10) | 0;
           $438 = __THREW__;
           __THREW__ = 0;
           if ($438 & 1) {
            label = 138;
            break L167;
           }
           __ZNSt3__16localeD2Ev($5);
           __THREW__ = 0;
           invoke_iii(27, $422 | 0, $437 | 0) | 0;
           $442 = __THREW__;
           __THREW__ = 0;
           if ($442 & 1) {
            label = 126;
            break L167;
           }
           __THREW__ = 0;
           invoke_ii(68, $422 | 0) | 0;
           $444 = __THREW__;
           __THREW__ = 0;
           if ($444 & 1) {
            label = 126;
            break L167;
           }
          } while (0);
          $446 = $i6$099 + 1 | 0;
          if (($446 | 0) >= ($363 | 0)) break L165;
          $367 = HEAP32[$354 >> 2] | 0;
          $402 = HEAP32[$291 >> 2] | 0;
          $i6$099 = $446;
         }
         if ((label | 0) == 122) {
          $388 = ___cxa_find_matching_catch() | 0;
          $389 = tempRet0;
          __ZNSt3__16localeD2Ev($0);
          $eh$lpad$body$index15Z2D = $389;
          $eh$lpad$body$indexZ2D = $388;
          break L152;
         } else if ((label | 0) == 126) {
          $394 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body$index15Z2D = tempRet0;
          $eh$lpad$body$indexZ2D = $394;
          break L152;
         } else if ((label | 0) == 138) {
          $440 = ___cxa_find_matching_catch() | 0;
          $441 = tempRet0;
          __ZNSt3__16localeD2Ev($5);
          $eh$lpad$body$index15Z2D = $441;
          $eh$lpad$body$indexZ2D = $440;
          break L152;
         }
        } while (0);
        HEAP32[$error >> 2] = 1;
        __THREW__ = 0;
        invoke_vii(43, $10 | 0, $294 | 0);
        $448 = __THREW__;
        __THREW__ = 0;
        if ($448 & 1) {
         label = 127;
         break;
        }
        if (!(HEAP8[$10 >> 0] & 1)) $456 = $10 + 1 | 0; else $456 = HEAP32[$10 + 8 >> 2] | 0;
        $457 = ___strdup($456) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
        HEAP32[$ss >> 2] = 772;
        HEAP32[$ss + 64 >> 2] = 812;
        HEAP32[$293 >> 2] = 792;
        HEAP32[$294 >> 2] = 1104;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($303);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($294);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($292);
        ___cxa_end_catch();
        $$1 = $457;
        STACKTOP = sp;
        return $$1 | 0;
       }
      }
      $348 = ___cxa_find_matching_catch() | 0;
      $349 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $eh$lpad$body$index15Z2D = $349;
      $eh$lpad$body$indexZ2D = $348;
     }
    }
   } while (0);
   if ((label | 0) == 127) {
    $396 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index15Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $396;
   }
   HEAP32[$ss >> 2] = 772;
   HEAP32[$ss + 64 >> 2] = 812;
   HEAP32[$293 >> 2] = 792;
   HEAP32[$294 >> 2] = 1104;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($303);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($294);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($292);
   $$2 = $eh$lpad$body$indexZ2D;
   $$25 = $eh$lpad$body$index15Z2D;
   break L145;
  } while (0);
  $$0$i50 = $eh$lpad$body$i47$index7Z2D;
  $$01$i49 = $eh$lpad$body$i47$indexZ2D;
  label = 125;
 } while (0);
 if ((label | 0) == 125) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($292);
  $$2 = $$01$i49;
  $$25 = $$0$i50;
 }
 __THREW__ = 0;
 invoke_v(2);
 $460 = __THREW__;
 __THREW__ = 0;
 if ($460 & 1) {
  $467 = ___cxa_find_matching_catch(0) | 0;
  $468 = tempRet0;
  ___clang_call_terminate($467);
 } else {
  $$5 = $$2;
  $$58 = $$25;
  ___resumeException($$5 | 0);
 }
 return 0;
}

function __ZN12_GLOBAL__N_15Stack9makeErrorERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $this, $loc, $msg) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $msg = $msg | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i$i = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$idx = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i3032$i = 0, $$idx5$val = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $121 = 0, $122 = 0, $13 = 0, $130 = 0, $131 = 0, $139 = 0, $140 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $147 = 0, $148 = 0, $15 = 0, $154 = 0, $160 = 0, $164 = 0, $166 = 0, $168 = 0, $169 = 0, $17 = 0, $172 = 0, $173 = 0, $18 = 0, $180 = 0, $181 = 0, $187 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $210 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $227 = 0, $23 = 0, $231 = 0, $233 = 0, $235 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $242 = 0, $244 = 0, $245 = 0, $247 = 0, $248 = 0, $249 = 0, $253 = 0, $254 = 0, $256 = 0, $257 = 0, $259 = 0, $261 = 0, $262 = 0, $263 = 0, $265 = 0, $268 = 0, $270 = 0, $271 = 0, $272 = 0, $274 = 0, $275 = 0, $277 = 0, $278 = 0, $28 = 0, $282 = 0, $283 = 0, $285 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $293 = 0, $294 = 0, $296 = 0, $298 = 0, $299 = 0, $3 = 0, $303 = 0, $304 = 0, $306 = 0, $308 = 0, $309 = 0, $31 = 0, $311 = 0, $312 = 0, $316 = 0, $317 = 0, $319 = 0, $32 = 0, $321 = 0, $322 = 0, $326 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $57 = 0, $59 = 0, $6 = 0, $62 = 0, $66 = 0, $68 = 0, $7 = 0, $77 = 0, $8 = 0, $80 = 0, $82 = 0, $85 = 0, $9 = 0, $92 = 0, $95 = 0, $eh$lpad$body$i$index6Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index22Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body10$index16Z2D = 0, $eh$lpad$body10$indexZ2D = 0, $eh$lpad$body15$index27Z2D = 0, $eh$lpad$body15$indexZ2D = 0, $eh$lpad$body23$index33Z2D = 0, $eh$lpad$body23$indexZ2D = 0, $i$0 = 0, $i$0$in$i = 0, $i$045 = 0, $i$046 = 0, $name$i = 0, $stack_trace = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $name$i = sp + 216 | 0;
 $0 = sp + 204 | 0;
 $1 = sp + 192 | 0;
 $2 = sp + 168 | 0;
 $3 = sp + 152 | 0;
 $4 = sp + 140 | 0;
 $stack_trace = sp + 128 | 0;
 $5 = sp + 88 | 0;
 $6 = sp + 76 | 0;
 $7 = sp + 64 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 12 | 0;
 $10 = sp;
 HEAP32[$stack_trace >> 2] = 0;
 $11 = $stack_trace + 4 | 0;
 HEAP32[$11 >> 2] = 0;
 $12 = $stack_trace + 8 | 0;
 HEAP32[$12 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(3, $6 | 0, 37152, 0);
 $13 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($13 & 1) label = 96; else {
  __THREW__ = 0;
  invoke_vii(40, $5 | 0, $loc | 0);
  $15 = __THREW__;
  __THREW__ = 0;
  do if ($15 & 1) {
   $235 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index22Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $235;
   label = 99;
  } else {
   $17 = $5 + 12 | 0;
   $18 = $loc + 12 | 0;
   HEAP32[$17 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   HEAP32[$17 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$17 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   HEAP32[$17 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
   $19 = $5 + 28 | 0;
   __THREW__ = 0;
   invoke_vii(40, $19 | 0, $6 | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   if ($20 & 1) {
    $22 = ___cxa_find_matching_catch() | 0;
    $23 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
    $eh$lpad$body$index22Z2D = $23;
    $eh$lpad$body$indexZ2D = $22;
    label = 99;
    break;
   }
   $24 = HEAP32[$11 >> 2] | 0;
   if ($24 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
    if (!$24) $31 = 0; else {
     HEAP32[$24 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
     HEAP32[$24 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$24 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     HEAP32[$5 + 0 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     $28 = $24 + 12 | 0;
     HEAP32[$28 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
     HEAP32[$28 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$28 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$28 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     $29 = $24 + 28 | 0;
     HEAP32[$29 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
     HEAP32[$29 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
     HEAP32[$29 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
     HEAP32[$19 + 0 >> 2] = 0;
     HEAP32[$19 + 4 >> 2] = 0;
     HEAP32[$19 + 8 >> 2] = 0;
     $31 = HEAP32[$11 >> 2] | 0;
    }
    HEAP32[$11 >> 2] = $31 + 40;
   } else {
    __THREW__ = 0;
    invoke_vii(65, $stack_trace | 0, $5 | 0);
    $32 = __THREW__;
    __THREW__ = 0;
    if ($32 & 1) {
     $237 = ___cxa_find_matching_catch() | 0;
     $238 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
     $$0 = $237;
     $$01 = $238;
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($19);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
   $$idx = $this + 12 | 0;
   $$idx$val = HEAP32[$$idx >> 2] | 0;
   $i$045 = (((HEAP32[$this + 16 >> 2] | 0) - $$idx$val | 0) / 144 | 0) + -1 | 0;
   L17 : do if (($i$045 | 0) > -1) {
    $39 = $8 + 12 | 0;
    $40 = $8 + 28 | 0;
    $41 = $name$i + 1 | 0;
    $42 = $2 + 12 | 0;
    $43 = $name$i + 8 | 0;
    $44 = $name$i + 4 | 0;
    $45 = $2 + 16 | 0;
    $$idx5$val = $$idx$val;
    $i$046 = $i$045;
    L19 : while (1) {
     if ((HEAP32[$$idx5$val + ($i$046 * 144 | 0) >> 2] | 0) == 5) {
      $49 = HEAP32[$$idx5$val + ($i$046 * 144 | 0) + 116 >> 2] | 0;
      if ($49) {
       $52 = HEAP32[$stack_trace >> 2] | 0;
       $57 = (((HEAP32[$11 >> 2] | 0) - $52 | 0) / 40 | 0) + -1 | 0;
       HEAP32[$name$i + 0 >> 2] = 0;
       HEAP32[$name$i + 4 >> 2] = 0;
       HEAP32[$name$i + 8 >> 2] = 0;
       $i$0$in$i = $i$046;
       do {
        $i$0$in$i = $i$0$in$i + -1 | 0;
        if (($i$0$in$i | 0) <= -1) break;
        $$idx$val$i = HEAP32[$$idx >> 2] | 0;
        $$idx$val$i$i = HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) + 128 >> 2] | 0;
        $59 = $$idx$val$i + ($i$0$in$i * 144 | 0) + 132 | 0;
        if (($$idx$val$i$i | 0) != ($59 | 0)) {
         $$idx$val$i3032$i = $$idx$val$i$i;
         while (1) {
          $62 = HEAP32[$$idx$val$i3032$i + 20 >> 2] | 0;
          do if (HEAP8[$62 + 5 >> 0] | 0) {
           if (!(HEAP32[$62 + 8 >> 2] & 16)) break;
           if ((HEAP32[$62 + 16 >> 2] | 0) != ($49 | 0)) break;
           __THREW__ = 0;
           invoke_iii(20, $name$i | 0, HEAP32[$$idx$val$i3032$i + 16 >> 2] | 0) | 0;
           $77 = __THREW__;
           __THREW__ = 0;
           if ($77 & 1) {
            label = 21;
            break L19;
           }
          } while (0);
          $80 = HEAP32[$$idx$val$i3032$i + 4 >> 2] | 0;
          if (!$80) {
           $$0$i$i$i$i = $$idx$val$i3032$i;
           while (1) {
            $85 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
            if ((HEAP32[$85 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
             $$01$i$i$i$i = $85;
             break;
            } else $$0$i$i$i$i = $85;
           }
          } else {
           $$0$i$i$i$i$i = $80;
           while (1) {
            $82 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
            if (!$82) {
             $$01$i$i$i$i = $$0$i$i$i$i$i;
             break;
            } else $$0$i$i$i$i$i = $82;
           }
          }
          if (($$01$i$i$i$i | 0) == ($59 | 0)) break; else $$idx$val$i3032$i = $$01$i$i$i$i;
         }
        }
       } while ((HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) >> 2] | 0) != 5);
       if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($name$i, 37152) | 0)) {
        __THREW__ = 0;
        invoke_iii(19, $name$i | 0, 37664) | 0;
        $92 = __THREW__;
        __THREW__ = 0;
        if ($92 & 1) {
         label = 22;
         break;
        }
       }
       do if (!(___dynamic_cast($49, 37448, 37456, 0) | 0)) {
        $118 = ___dynamic_cast($49, 37448, 37608, 0) | 0;
        if ($118) {
         $121 = HEAP32[$118 + 24 >> 2] | 0;
         HEAP32[$1 + 0 >> 2] = 0;
         HEAP32[$1 + 4 >> 2] = 0;
         HEAP32[$1 + 8 >> 2] = 0;
         $122 = HEAP8[$121 >> 0] | 0;
         if (!($122 & 1)) $130 = ($122 & 255) >>> 1; else $130 = HEAP32[$121 + 4 >> 2] | 0;
         __THREW__ = 0;
         invoke_viiii(14, $1 | 0, 37704, 7, $130 + 7 | 0);
         $131 = __THREW__;
         __THREW__ = 0;
         if ($131 & 1) {
          label = 54;
          break L19;
         }
         if (!(HEAP8[$121 >> 0] & 1)) $139 = $121 + 1 | 0; else $139 = HEAP32[$121 + 8 >> 2] | 0;
         __THREW__ = 0;
         invoke_iiii(31, $1 | 0, $139 | 0, $130 | 0) | 0;
         $140 = __THREW__;
         __THREW__ = 0;
         if ($140 & 1) {
          label = 54;
          break L19;
         }
         __THREW__ = 0;
         $144 = invoke_iii(29, $1 | 0, 37696) | 0;
         $145 = __THREW__;
         __THREW__ = 0;
         if ($145 & 1) {
          label = 57;
          break L19;
         };
         HEAP32[$7 + 0 >> 2] = HEAP32[$144 + 0 >> 2];
         HEAP32[$7 + 4 >> 2] = HEAP32[$144 + 4 >> 2];
         HEAP32[$7 + 8 >> 2] = HEAP32[$144 + 8 >> 2];
         HEAP32[$144 + 0 >> 2] = 0;
         HEAP32[$144 + 4 >> 2] = 0;
         HEAP32[$144 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
         break;
        }
        if (HEAP32[$49 + 40 >> 2] | 0) {
         HEAP32[$4 + 0 >> 2] = 0;
         HEAP32[$4 + 4 >> 2] = 0;
         HEAP32[$4 + 8 >> 2] = 0;
         $196 = HEAP8[$name$i >> 0] | 0;
         if (!($196 & 1)) $203 = ($196 & 255) >>> 1; else $203 = HEAP32[$44 >> 2] | 0;
         __THREW__ = 0;
         invoke_viiii(14, $4 | 0, 37736, 10, $203 + 10 | 0);
         $204 = __THREW__;
         __THREW__ = 0;
         if ($204 & 1) {
          label = 84;
          break L19;
         }
         __THREW__ = 0;
         invoke_iiii(31, $4 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$43 >> 2] | 0) | 0, $203 | 0) | 0;
         $210 = __THREW__;
         __THREW__ = 0;
         if ($210 & 1) {
          label = 84;
          break L19;
         }
         __THREW__ = 0;
         $214 = invoke_iii(29, $4 | 0, 37696) | 0;
         $215 = __THREW__;
         __THREW__ = 0;
         if ($215 & 1) {
          label = 87;
          break L19;
         };
         HEAP32[$7 + 0 >> 2] = HEAP32[$214 + 0 >> 2];
         HEAP32[$7 + 4 >> 2] = HEAP32[$214 + 4 >> 2];
         HEAP32[$7 + 8 >> 2] = HEAP32[$214 + 8 >> 2];
         HEAP32[$214 + 0 >> 2] = 0;
         HEAP32[$214 + 4 >> 2] = 0;
         HEAP32[$214 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
         break;
        }
        __THREW__ = 0;
        invoke_vii(49, $2 | 0, HEAP32[$49 + 44 >> 2] | 0);
        $154 = __THREW__;
        __THREW__ = 0;
        if ($154 & 1) {
         label = 22;
         break L19;
        }
        if (!(HEAP8[$name$i >> 0] & 1)) {
         HEAP8[$41 >> 0] = 0;
         HEAP8[$name$i >> 0] = 0;
        } else {
         HEAP8[HEAP32[$43 >> 2] >> 0] = 0;
         HEAP32[$44 >> 2] = 0;
        }
        __THREW__ = 0;
        invoke_vii(45, $name$i | 0, 0);
        $160 = __THREW__;
        __THREW__ = 0;
        if ($160 & 1) {
         label = 64;
         break L19;
        };
        HEAP32[$name$i + 0 >> 2] = HEAP32[$2 + 0 >> 2];
        HEAP32[$name$i + 4 >> 2] = HEAP32[$2 + 4 >> 2];
        HEAP32[$name$i + 8 >> 2] = HEAP32[$2 + 8 >> 2];
        HEAP32[$2 + 0 >> 2] = 0;
        HEAP32[$2 + 4 >> 2] = 0;
        HEAP32[$2 + 8 >> 2] = 0;
        $164 = HEAP32[$42 >> 2] | 0;
        if ($164) {
         $166 = HEAP32[$45 >> 2] | 0;
         if (($166 | 0) == ($164 | 0)) $172 = $164; else {
          $169 = $166;
          do {
           $168 = $169 + -12 | 0;
           HEAP32[$45 >> 2] = $168;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($168);
           $169 = HEAP32[$45 >> 2] | 0;
          } while (($169 | 0) != ($164 | 0));
          $172 = HEAP32[$42 >> 2] | 0;
         }
         __ZdlPv($172);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
        HEAP32[$3 + 0 >> 2] = 0;
        HEAP32[$3 + 4 >> 2] = 0;
        HEAP32[$3 + 8 >> 2] = 0;
        $173 = HEAP8[$name$i >> 0] | 0;
        if (!($173 & 1)) $180 = ($173 & 255) >>> 1; else $180 = HEAP32[$44 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(14, $3 | 0, 37712, 18, $180 + 18 | 0);
        $181 = __THREW__;
        __THREW__ = 0;
        if ($181 & 1) {
         label = 75;
         break L19;
        }
        __THREW__ = 0;
        invoke_iiii(31, $3 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$43 >> 2] | 0) | 0, $180 | 0) | 0;
        $187 = __THREW__;
        __THREW__ = 0;
        if ($187 & 1) {
         label = 75;
         break L19;
        }
        __THREW__ = 0;
        $191 = invoke_iii(29, $3 | 0, 37696) | 0;
        $192 = __THREW__;
        __THREW__ = 0;
        if ($192 & 1) {
         label = 78;
         break L19;
        };
        HEAP32[$7 + 0 >> 2] = HEAP32[$191 + 0 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$191 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$191 + 8 >> 2];
        HEAP32[$191 + 0 >> 2] = 0;
        HEAP32[$191 + 4 >> 2] = 0;
        HEAP32[$191 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
       } else {
        HEAP32[$0 + 0 >> 2] = 0;
        HEAP32[$0 + 4 >> 2] = 0;
        HEAP32[$0 + 8 >> 2] = 0;
        $95 = HEAP8[$name$i >> 0] | 0;
        if (!($95 & 1)) $102 = ($95 & 255) >>> 1; else $102 = HEAP32[$44 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(14, $0 | 0, 37680, 8, $102 + 8 | 0);
        $103 = __THREW__;
        __THREW__ = 0;
        if ($103 & 1) {
         label = 41;
         break L19;
        }
        __THREW__ = 0;
        invoke_iiii(31, $0 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$43 >> 2] | 0) | 0, $102 | 0) | 0;
        $109 = __THREW__;
        __THREW__ = 0;
        if ($109 & 1) {
         label = 41;
         break L19;
        }
        __THREW__ = 0;
        $113 = invoke_iii(29, $0 | 0, 37696) | 0;
        $114 = __THREW__;
        __THREW__ = 0;
        if ($114 & 1) {
         label = 44;
         break L19;
        };
        HEAP32[$7 + 0 >> 2] = HEAP32[$113 + 0 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$113 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$113 + 8 >> 2];
        HEAP32[$113 + 0 >> 2] = 0;
        HEAP32[$113 + 4 >> 2] = 0;
        HEAP32[$113 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($name$i);
       $219 = $52 + ($57 * 40 | 0) + 28 | 0;
       if (!(HEAP8[$219 >> 0] & 1)) {
        HEAP8[$219 + 1 >> 0] = 0;
        HEAP8[$219 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$52 + ($57 * 40 | 0) + 36 >> 2] >> 0] = 0;
        HEAP32[$52 + ($57 * 40 | 0) + 32 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $219 | 0, 0);
       $227 = __THREW__;
       __THREW__ = 0;
       if ($227 & 1) {
        label = 93;
        break;
       };
       HEAP32[$219 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
       HEAP32[$219 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
       HEAP32[$219 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
       HEAP32[$7 + 0 >> 2] = 0;
       HEAP32[$7 + 4 >> 2] = 0;
       HEAP32[$7 + 8 >> 2] = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
      }
      __THREW__ = 0;
      invoke_viii(3, $9 | 0, 37152, 0);
      $239 = __THREW__;
      __THREW__ = 0;
      if ($239 & 1) {
       label = 95;
       break;
      }
      __THREW__ = 0;
      invoke_vii(40, $8 | 0, $$idx5$val + ($i$046 * 144 | 0) + 8 | 0);
      $242 = __THREW__;
      __THREW__ = 0;
      if ($242 & 1) {
       label = 112;
       break;
      }
      $244 = $$idx5$val + ($i$046 * 144 | 0) + 20 | 0;
      HEAP32[$39 + 0 >> 2] = HEAP32[$244 + 0 >> 2];
      HEAP32[$39 + 4 >> 2] = HEAP32[$244 + 4 >> 2];
      HEAP32[$39 + 8 >> 2] = HEAP32[$244 + 8 >> 2];
      HEAP32[$39 + 12 >> 2] = HEAP32[$244 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $40 | 0, $9 | 0);
      $245 = __THREW__;
      __THREW__ = 0;
      if ($245 & 1) {
       label = 105;
       break;
      }
      $249 = HEAP32[$11 >> 2] | 0;
      if ($249 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
       if (!$249) $256 = 0; else {
        HEAP32[$249 + 0 >> 2] = HEAP32[$8 + 0 >> 2];
        HEAP32[$249 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
        HEAP32[$249 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
        HEAP32[$8 + 0 >> 2] = 0;
        HEAP32[$8 + 4 >> 2] = 0;
        HEAP32[$8 + 8 >> 2] = 0;
        $253 = $249 + 12 | 0;
        HEAP32[$253 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
        HEAP32[$253 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
        HEAP32[$253 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
        HEAP32[$253 + 12 >> 2] = HEAP32[$39 + 12 >> 2];
        $254 = $249 + 28 | 0;
        HEAP32[$254 + 0 >> 2] = HEAP32[$40 + 0 >> 2];
        HEAP32[$254 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
        HEAP32[$254 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
        HEAP32[$40 + 0 >> 2] = 0;
        HEAP32[$40 + 4 >> 2] = 0;
        HEAP32[$40 + 8 >> 2] = 0;
        $256 = HEAP32[$11 >> 2] | 0;
       }
       HEAP32[$11 >> 2] = $256 + 40;
      } else {
       __THREW__ = 0;
       invoke_vii(65, $stack_trace | 0, $8 | 0);
       $257 = __THREW__;
       __THREW__ = 0;
       if ($257 & 1) {
        label = 114;
        break;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($40);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
     }
     $i$0 = $i$046 + -1 | 0;
     if (($i$0 | 0) <= -1) break L17;
     $$idx5$val = HEAP32[$$idx >> 2] | 0;
     $i$046 = $i$0;
    }
    switch (label | 0) {
    case 21:
     {
      $66 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index6Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $66;
      label = 23;
      break;
     }
    case 22:
     {
      $68 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index6Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $68;
      label = 23;
      break;
     }
    case 41:
     {
      $111 = ___cxa_find_matching_catch() | 0;
      $112 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
      $eh$lpad$body$i$index6Z2D = $112;
      $eh$lpad$body$i$indexZ2D = $111;
      label = 23;
      break;
     }
    case 44:
     {
      $116 = ___cxa_find_matching_catch() | 0;
      $117 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
      $$0$i = $116;
      $$01$i = $117;
      label = 88;
      break;
     }
    case 54:
     {
      $142 = ___cxa_find_matching_catch() | 0;
      $143 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
      $eh$lpad$body$i$index6Z2D = $143;
      $eh$lpad$body$i$indexZ2D = $142;
      label = 23;
      break;
     }
    case 57:
     {
      $147 = ___cxa_find_matching_catch() | 0;
      $148 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
      $$0$i = $147;
      $$01$i = $148;
      label = 88;
      break;
     }
    case 64:
     {
      ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
      break;
     }
    case 75:
     {
      $189 = ___cxa_find_matching_catch() | 0;
      $190 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
      $eh$lpad$body$i$index6Z2D = $190;
      $eh$lpad$body$i$indexZ2D = $189;
      label = 23;
      break;
     }
    case 78:
     {
      $194 = ___cxa_find_matching_catch() | 0;
      $195 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
      $$0$i = $194;
      $$01$i = $195;
      label = 88;
      break;
     }
    case 84:
     {
      $212 = ___cxa_find_matching_catch() | 0;
      $213 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
      $eh$lpad$body$i$index6Z2D = $213;
      $eh$lpad$body$i$indexZ2D = $212;
      label = 23;
      break;
     }
    case 87:
     {
      $217 = ___cxa_find_matching_catch() | 0;
      $218 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
      $$0$i = $217;
      $$01$i = $218;
      label = 88;
      break;
     }
    case 93:
     {
      ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
      break;
     }
    case 95:
     {
      $231 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body10$index16Z2D = tempRet0;
      $eh$lpad$body10$indexZ2D = $231;
      label = 97;
      break L1;
      break;
     }
    case 105:
     {
      $247 = ___cxa_find_matching_catch() | 0;
      $248 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
      $eh$lpad$body15$index27Z2D = $248;
      $eh$lpad$body15$indexZ2D = $247;
      label = 113;
      break;
     }
    case 112:
     {
      $259 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body15$index27Z2D = tempRet0;
      $eh$lpad$body15$indexZ2D = $259;
      label = 113;
      break;
     }
    case 114:
     {
      $261 = ___cxa_find_matching_catch() | 0;
      $262 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($40);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
      $$1 = $261;
      $$12 = $262;
      label = 115;
      break;
     }
    }
    if ((label | 0) == 23) {
     $$0$i = $eh$lpad$body$i$indexZ2D;
     $$01$i = $eh$lpad$body$i$index6Z2D;
     label = 88;
    } else if ((label | 0) == 113) {
     $$1 = $eh$lpad$body15$indexZ2D;
     $$12 = $eh$lpad$body15$index27Z2D;
     label = 115;
    }
    if ((label | 0) == 88) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($name$i);
     $eh$lpad$body10$index16Z2D = $$01$i;
     $eh$lpad$body10$indexZ2D = $$0$i;
     label = 97;
     break L1;
    } else if ((label | 0) == 115) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
     $$2 = $$1;
     $$23 = $$12;
     break L1;
    }
   } while (0);
   __THREW__ = 0;
   invoke_vii(66, $10 | 0, $stack_trace | 0);
   $263 = __THREW__;
   __THREW__ = 0;
   if ($263 & 1) {
    label = 96;
    break L1;
   }
   __THREW__ = 0;
   invoke_vii(66, $agg$result | 0, $10 | 0);
   $265 = __THREW__;
   __THREW__ = 0;
   do if ($265 & 1) {
    $304 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body23$index33Z2D = tempRet0;
    $eh$lpad$body23$indexZ2D = $304;
   } else {
    __THREW__ = 0;
    invoke_vii(40, $agg$result + 12 | 0, $msg | 0);
    $268 = __THREW__;
    __THREW__ = 0;
    if ($268 & 1) {
     $270 = ___cxa_find_matching_catch() | 0;
     $271 = tempRet0;
     $272 = HEAP32[$agg$result >> 2] | 0;
     if (!$272) {
      $eh$lpad$body23$index33Z2D = $271;
      $eh$lpad$body23$indexZ2D = $270;
      break;
     }
     $274 = $agg$result + 4 | 0;
     $275 = HEAP32[$274 >> 2] | 0;
     if (($275 | 0) == ($272 | 0)) $282 = $272; else {
      $278 = $275;
      do {
       $277 = $278 + -40 | 0;
       HEAP32[$274 >> 2] = $277;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($278 + -12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($277);
       $278 = HEAP32[$274 >> 2] | 0;
      } while (($278 | 0) != ($272 | 0));
      $282 = HEAP32[$agg$result >> 2] | 0;
     }
     __ZdlPv($282);
     $eh$lpad$body23$index33Z2D = $271;
     $eh$lpad$body23$indexZ2D = $270;
     break;
    }
    $283 = HEAP32[$10 >> 2] | 0;
    if ($283) {
     $285 = $10 + 4 | 0;
     $286 = HEAP32[$285 >> 2] | 0;
     if (($286 | 0) == ($283 | 0)) $293 = $283; else {
      $289 = $286;
      do {
       $288 = $289 + -40 | 0;
       HEAP32[$285 >> 2] = $288;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($289 + -12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($288);
       $289 = HEAP32[$285 >> 2] | 0;
      } while (($289 | 0) != ($283 | 0));
      $293 = HEAP32[$10 >> 2] | 0;
     }
     __ZdlPv($293);
    }
    $294 = HEAP32[$stack_trace >> 2] | 0;
    if (!$294) {
     STACKTOP = sp;
     return;
    }
    $296 = HEAP32[$11 >> 2] | 0;
    if (($296 | 0) == ($294 | 0)) $303 = $294; else {
     $299 = $296;
     do {
      $298 = $299 + -40 | 0;
      HEAP32[$11 >> 2] = $298;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($299 + -12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($298);
      $299 = HEAP32[$11 >> 2] | 0;
     } while (($299 | 0) != ($294 | 0));
     $303 = HEAP32[$stack_trace >> 2] | 0;
    }
    __ZdlPv($303);
    STACKTOP = sp;
    return;
   } while (0);
   $306 = HEAP32[$10 >> 2] | 0;
   if (!$306) {
    $$2 = $eh$lpad$body23$indexZ2D;
    $$23 = $eh$lpad$body23$index33Z2D;
    break L1;
   }
   $308 = $10 + 4 | 0;
   $309 = HEAP32[$308 >> 2] | 0;
   if (($309 | 0) == ($306 | 0)) $316 = $306; else {
    $312 = $309;
    do {
     $311 = $312 + -40 | 0;
     HEAP32[$308 >> 2] = $311;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($312 + -12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($311);
     $312 = HEAP32[$308 >> 2] | 0;
    } while (($312 | 0) != ($306 | 0));
    $316 = HEAP32[$10 >> 2] | 0;
   }
   __ZdlPv($316);
   $$2 = $eh$lpad$body23$indexZ2D;
   $$23 = $eh$lpad$body23$index33Z2D;
   break L1;
  } while (0);
  if ((label | 0) == 99) {
   $$0 = $eh$lpad$body$indexZ2D;
   $$01 = $eh$lpad$body$index22Z2D;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
  $$2 = $$0;
  $$23 = $$01;
 } while (0);
 if ((label | 0) == 96) {
  $233 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body10$index16Z2D = tempRet0;
  $eh$lpad$body10$indexZ2D = $233;
  label = 97;
 }
 if ((label | 0) == 97) {
  $$2 = $eh$lpad$body10$indexZ2D;
  $$23 = $eh$lpad$body10$index16Z2D;
 }
 $317 = HEAP32[$stack_trace >> 2] | 0;
 if (!$317) ___resumeException($$2 | 0);
 $319 = HEAP32[$11 >> 2] | 0;
 if (($319 | 0) == ($317 | 0)) $326 = $317; else {
  $322 = $319;
  do {
   $321 = $322 + -40 | 0;
   HEAP32[$11 >> 2] = $321;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($322 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($321);
   $322 = HEAP32[$11 >> 2] | 0;
  } while (($322 | 0) != ($317 | 0));
  $326 = HEAP32[$stack_trace >> 2] | 0;
 }
 __ZdlPv($326);
 ___resumeException($$2 | 0);
}

function __Z13jsonnet_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) {
 $alloc = $alloc | 0;
 $file = $file | 0;
 $input = $input | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i50 = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i74 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $$4 = 0, $$45 = 0, $$5 = 0, $$56 = 0, $$6 = 0, $$67 = 0, $$7 = 0, $$78 = 0, $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $104 = 0, $105 = 0, $107 = 0, $11 = 0, $113 = 0, $114 = 0, $116 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $122 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $132 = 0, $133 = 0, $136 = 0, $138 = 0, $139 = 0, $14 = 0, $142 = 0, $143 = 0, $145 = 0, $149 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $156 = 0, $162 = 0, $164 = 0, $17 = 0, $170 = 0, $175 = 0, $176 = 0, $178 = 0, $18 = 0, $180 = 0, $181 = 0, $187 = 0, $19 = 0, $191 = 0, $193 = 0, $199 = 0, $2 = 0, $20 = 0, $201 = 0, $207 = 0, $209 = 0, $21 = 0, $211 = 0, $212 = 0, $215 = 0, $22 = 0, $222 = 0, $224 = 0, $226 = 0, $23 = 0, $232 = 0, $234 = 0, $24 = 0, $240 = 0, $242 = 0, $244 = 0, $245 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $254 = 0, $258 = 0, $259 = 0, $26 = 0, $261 = 0, $263 = 0, $264 = 0, $266 = 0, $267 = 0, $268 = 0, $27 = 0, $271 = 0, $273 = 0, $276 = 0, $277 = 0, $279 = 0, $28 = 0, $281 = 0, $282 = 0, $288 = 0, $29 = 0, $290 = 0, $293 = 0, $298 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $304 = 0, $305 = 0, $308 = 0, $309 = 0, $31 = 0, $312 = 0, $314 = 0, $317 = 0, $32 = 0, $321 = 0, $322 = 0, $324 = 0, $326 = 0, $331 = 0, $332 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $34 = 0, $340 = 0, $342 = 0, $343 = 0, $345 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $57 = 0, $58 = 0, $6 = 0, $62 = 0, $63 = 0, $66 = 0, $68 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $75 = 0, $77 = 0, $8 = 0, $83 = 0, $84 = 0, $87 = 0, $89 = 0, $9 = 0, $90 = 0, $93 = 0, $94 = 0, $96 = 0, $__nd$0$in$i$i = 0, $__parent$i = 0, $__r$0$i = 0, $c$0123 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body19$index14Z2D = 0, $eh$lpad$body19$indexZ2D = 0, $eh$lpad$body54$index19Z2D = 0, $eh$lpad$body54$indexZ2D = 0, $eh$lpad$body69$index24Z2D = 0, $eh$lpad$body69$indexZ2D = 0, $eh$lpad$body72$index9Z2D = 0, $eh$lpad$body72$indexZ2D = 0, $it$i = 0, $it$i47 = 0, $l = 0, $params = 0, $std_binds = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $$byval_copy = sp + 248 | 0;
 $0 = sp + 244 | 0;
 $1 = sp + 240 | 0;
 $__parent$i = sp + 236 | 0;
 $it$i47 = sp + 232 | 0;
 $2 = sp + 228 | 0;
 $it$i = sp + 224 | 0;
 $3 = sp + 212 | 0;
 $l = sp + 184 | 0;
 $4 = sp + 160 | 0;
 $params = sp + 148 | 0;
 $5 = sp + 144 | 0;
 $6 = sp + 116 | 0;
 $7 = sp + 104 | 0;
 $8 = sp + 76 | 0;
 $9 = sp + 64 | 0;
 $std_binds = sp + 52 | 0;
 $10 = sp + 40 | 0;
 $11 = sp + 12 | 0;
 $12 = sp;
 $13 = __ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 1672, 11);
 __THREW__ = 0;
 $14 = invoke_iiii(26, $alloc | 0, $3 | 0, 1688) | 0;
 $15 = __THREW__;
 __THREW__ = 0;
 if ($15 & 1) {
  $62 = ___cxa_find_matching_catch() | 0;
  $63 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
  $$7 = $62;
  $$78 = $63;
  ___resumeException($$7 | 0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
 HEAP32[$l + 0 >> 2] = 0;
 HEAP32[$l + 4 >> 2] = 0;
 HEAP32[$l + 8 >> 2] = 0;
 HEAP32[$l + 12 >> 2] = 0;
 HEAP32[$l + 16 >> 2] = 0;
 HEAP32[$l + 20 >> 2] = 0;
 HEAP32[$l + 24 >> 2] = 0;
 $17 = $14 + 48 | 0;
 $18 = $params + 4 | 0;
 $19 = $params + 8 | 0;
 $20 = $4 + 12 | 0;
 $21 = $4 + 16 | 0;
 $22 = $6 + 12 | 0;
 $23 = $l + 12 | 0;
 $24 = $8 + 12 | 0;
 $25 = $9 + 4 | 0;
 $26 = $9 + 8 | 0;
 $27 = $alloc + 16 | 0;
 $28 = $alloc + 20 | 0;
 $29 = $14 + 56 | 0;
 $30 = $alloc + 12 | 0;
 $31 = $alloc + 4 | 0;
 $c$0123 = 0;
 L5 : while (1) {
  __THREW__ = 0;
  invoke_vii(49, $4 | 0, $c$0123 | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  if ($32 & 1) {
   label = 19;
   break;
  }
  HEAP32[$params >> 2] = 0;
  HEAP32[$18 >> 2] = 0;
  HEAP32[$19 >> 2] = 0;
  $34 = HEAP32[$20 >> 2] | 0;
  $35 = HEAP32[$21 >> 2] | 0;
  if (($34 | 0) != ($35 | 0)) {
   $37 = $34;
   do {
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i, $alloc, $37);
    $38 = HEAP32[$it$i >> 2] | 0;
    if (($38 | 0) == ($31 | 0)) {
     __THREW__ = 0;
     $42 = invoke_ii(67, 12) | 0;
     $43 = __THREW__;
     __THREW__ = 0;
     if ($43 & 1) {
      label = 20;
      break L5;
     }
     __THREW__ = 0;
     invoke_vii(40, $42 | 0, $37 | 0);
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 11;
      break L5;
     }
     __THREW__ = 0;
     $47 = invoke_iii(23, $alloc | 0, $37 | 0) | 0;
     $48 = __THREW__;
     __THREW__ = 0;
     if ($48 & 1) {
      label = 20;
      break L5;
     }
     HEAP32[$47 >> 2] = $42;
     $$0$i = $42;
    } else $$0$i = HEAP32[$38 + 28 >> 2] | 0;
    HEAP32[$5 >> 2] = $$0$i;
    $52 = HEAP32[$18 >> 2] | 0;
    if ($52 >>> 0 < (HEAP32[$19 >> 2] | 0) >>> 0) {
     if (!$52) $57 = 0; else {
      HEAP32[$52 >> 2] = $$0$i;
      $57 = HEAP32[$18 >> 2] | 0;
     }
     HEAP32[$18 >> 2] = $57 + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(50, $params | 0, $5 | 0);
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 20;
      break L5;
     }
    }
    $37 = $37 + 12 | 0;
   } while (($37 | 0) != ($35 | 0));
  }
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $l | 0);
  $70 = __THREW__;
  __THREW__ = 0;
  if ($70 & 1) {
   label = 21;
   break;
  };
  HEAP32[$22 + 0 >> 2] = HEAP32[$23 + 0 >> 2];
  HEAP32[$22 + 4 >> 2] = HEAP32[$23 + 4 >> 2];
  HEAP32[$22 + 8 >> 2] = HEAP32[$23 + 8 >> 2];
  HEAP32[$22 + 12 >> 2] = HEAP32[$23 + 12 >> 2];
  __THREW__ = 0;
  invoke_vii(40, $7 | 0, $4 | 0);
  $72 = __THREW__;
  __THREW__ = 0;
  if ($72 & 1) {
   label = 80;
   break;
  }
  __THREW__ = 0;
  $74 = invoke_iiii(27, $alloc | 0, $6 | 0, $7 | 0) | 0;
  $75 = __THREW__;
  __THREW__ = 0;
  if ($75 & 1) {
   label = 81;
   break;
  }
  __THREW__ = 0;
  invoke_vii(40, $8 | 0, $l | 0);
  $77 = __THREW__;
  __THREW__ = 0;
  if ($77 & 1) {
   label = 81;
   break;
  };
  HEAP32[$24 + 0 >> 2] = HEAP32[$23 + 0 >> 2];
  HEAP32[$24 + 4 >> 2] = HEAP32[$23 + 4 >> 2];
  HEAP32[$24 + 8 >> 2] = HEAP32[$23 + 8 >> 2];
  HEAP32[$24 + 12 >> 2] = HEAP32[$23 + 12 >> 2];
  HEAP32[$9 >> 2] = 0;
  HEAP32[$25 >> 2] = 0;
  HEAP32[$26 >> 2] = 0;
  $83 = (HEAP32[$18 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
  $84 = $83 >> 2;
  if ($84) {
   if ($84 >>> 0 > 1073741823) {
    __THREW__ = 0;
    invoke_vi(181, $9 | 0);
    $87 = __THREW__;
    __THREW__ = 0;
    if ($87 & 1) {
     label = 35;
     break;
    }
   }
   __THREW__ = 0;
   $89 = invoke_ii(67, $83 | 0) | 0;
   $90 = __THREW__;
   __THREW__ = 0;
   if ($90 & 1) {
    label = 35;
    break;
   }
   HEAP32[$25 >> 2] = $89;
   HEAP32[$9 >> 2] = $89;
   HEAP32[$26 >> 2] = $89 + ($84 << 2);
   $93 = HEAP32[$params >> 2] | 0;
   $94 = HEAP32[$18 >> 2] | 0;
   if (($93 | 0) != ($94 | 0)) {
    $$01$i$i = $93;
    $96 = $89;
    do {
     if (!$96) $100 = 0; else {
      HEAP32[$96 >> 2] = HEAP32[$$01$i$i >> 2];
      $100 = HEAP32[$25 >> 2] | 0;
     }
     $96 = $100 + 4 | 0;
     HEAP32[$25 >> 2] = $96;
     $$01$i$i = $$01$i$i + 4 | 0;
    } while (($$01$i$i | 0) != ($94 | 0));
   }
  }
  __THREW__ = 0;
  $113 = invoke_ii(67, 64) | 0;
  $114 = __THREW__;
  __THREW__ = 0;
  if ($114 & 1) {
   label = 83;
   break;
  }
  HEAP32[$113 >> 2] = 34168;
  $116 = $113 + 4 | 0;
  __THREW__ = 0;
  invoke_vii(40, $116 | 0, $8 | 0);
  $117 = __THREW__;
  __THREW__ = 0;
  if ($117 & 1) {
   label = 63;
   break;
  }
  $119 = $113 + 16 | 0;
  HEAP32[$119 + 0 >> 2] = HEAP32[$24 + 0 >> 2];
  HEAP32[$119 + 4 >> 2] = HEAP32[$24 + 4 >> 2];
  HEAP32[$119 + 8 >> 2] = HEAP32[$24 + 8 >> 2];
  HEAP32[$119 + 12 >> 2] = HEAP32[$24 + 12 >> 2];
  HEAP32[$113 + 32 >> 2] = 3;
  $121 = $113 + 36 | 0;
  HEAP32[$121 >> 2] = 0;
  $122 = $113 + 40 | 0;
  HEAP32[$122 >> 2] = 0;
  HEAP32[$113 + 44 >> 2] = 0;
  HEAP32[$113 >> 2] = 34112;
  HEAP32[$113 + 48 >> 2] = $c$0123;
  $125 = $113 + 52 | 0;
  HEAP32[$125 >> 2] = 0;
  $126 = $113 + 56 | 0;
  HEAP32[$126 >> 2] = 0;
  $127 = $113 + 60 | 0;
  HEAP32[$127 >> 2] = 0;
  $132 = (HEAP32[$25 >> 2] | 0) - (HEAP32[$9 >> 2] | 0) | 0;
  $133 = $132 >> 2;
  if ($133) {
   if ($133 >>> 0 > 1073741823) {
    __THREW__ = 0;
    invoke_vi(181, $125 | 0);
    $136 = __THREW__;
    __THREW__ = 0;
    if ($136 & 1) {
     label = 49;
     break;
    }
   }
   __THREW__ = 0;
   $138 = invoke_ii(67, $132 | 0) | 0;
   $139 = __THREW__;
   __THREW__ = 0;
   if ($139 & 1) {
    label = 49;
    break;
   }
   HEAP32[$126 >> 2] = $138;
   HEAP32[$125 >> 2] = $138;
   HEAP32[$127 >> 2] = $138 + ($133 << 2);
   $142 = HEAP32[$9 >> 2] | 0;
   $143 = HEAP32[$25 >> 2] | 0;
   if (($142 | 0) != ($143 | 0)) {
    $$01$i$i74 = $142;
    $145 = $138;
    do {
     if (!$145) $149 = 0; else {
      HEAP32[$145 >> 2] = HEAP32[$$01$i$i74 >> 2];
      $149 = HEAP32[$126 >> 2] | 0;
     }
     $145 = $149 + 4 | 0;
     HEAP32[$126 >> 2] = $145;
     $$01$i$i74 = $$01$i$i74 + 4 | 0;
    } while (($$01$i$i74 | 0) != ($143 | 0));
   }
  }
  HEAP32[$2 >> 2] = $113;
  $170 = HEAP32[$27 >> 2] | 0;
  if ($170 >>> 0 < (HEAP32[$28 >> 2] | 0) >>> 0) {
   if (!$170) $175 = 0; else {
    HEAP32[$170 >> 2] = $113;
    $175 = HEAP32[$27 >> 2] | 0;
   }
   HEAP32[$27 >> 2] = $175 + 4;
  } else {
   __THREW__ = 0;
   invoke_vii(51, $30 | 0, $2 | 0);
   $176 = __THREW__;
   __THREW__ = 0;
   if ($176 & 1) {
    label = 83;
    break;
   }
  }
  __THREW__ = 0;
  $180 = invoke_ii(67, 20) | 0;
  $181 = __THREW__;
  __THREW__ = 0;
  if ($181 & 1) {
   label = 83;
   break;
  }
  HEAP32[$180 + 8 >> 2] = $74;
  HEAP32[$180 + 12 >> 2] = 1;
  HEAP32[$180 + 16 >> 2] = $113;
  HEAP32[$180 + 4 >> 2] = $17;
  $187 = HEAP32[$17 >> 2] | 0;
  HEAP32[$180 >> 2] = $187;
  HEAP32[$187 + 4 >> 2] = $180;
  HEAP32[$17 >> 2] = $180;
  HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 1;
  $191 = HEAP32[$9 >> 2] | 0;
  if ($191) {
   $193 = HEAP32[$25 >> 2] | 0;
   if (($193 | 0) != ($191 | 0)) HEAP32[$25 >> 2] = $193 + (~(($193 + -4 - $191 | 0) >>> 2) << 2);
   __ZdlPv($191);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
  $199 = HEAP32[$params >> 2] | 0;
  if ($199) {
   $201 = HEAP32[$18 >> 2] | 0;
   if (($201 | 0) != ($199 | 0)) HEAP32[$18 >> 2] = $201 + (~(($201 + -4 - $199 | 0) >>> 2) << 2);
   __ZdlPv($199);
  }
  $207 = HEAP32[$20 >> 2] | 0;
  if ($207) {
   $209 = HEAP32[$21 >> 2] | 0;
   if (($209 | 0) == ($207 | 0)) $215 = $207; else {
    $212 = $209;
    do {
     $211 = $212 + -12 | 0;
     HEAP32[$21 >> 2] = $211;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($211);
     $212 = HEAP32[$21 >> 2] | 0;
    } while (($212 | 0) != ($207 | 0));
    $215 = HEAP32[$20 >> 2] | 0;
   }
   __ZdlPv($215);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
  $c$0123 = $c$0123 + 1 | 0;
  if ($c$0123 >>> 0 >= 25) {
   label = 101;
   break;
  }
 }
 switch (label | 0) {
 case 11:
  {
   $50 = ___cxa_find_matching_catch() | 0;
   $51 = tempRet0;
   __ZdlPv($42);
   $eh$lpad$body$index3Z2D = $51;
   $eh$lpad$body$indexZ2D = $50;
   label = 22;
   break;
  }
 case 19:
  {
   $$6 = ___cxa_find_matching_catch() | 0;
   $$67 = tempRet0;
   break;
  }
 case 20:
  {
   $66 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index3Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $66;
   label = 22;
   break;
  }
 case 21:
  {
   $68 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index3Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $68;
   label = 22;
   break;
  }
 case 35:
  {
   $103 = ___cxa_find_matching_catch() | 0;
   $104 = tempRet0;
   $105 = HEAP32[$9 >> 2] | 0;
   if ($105) {
    $107 = HEAP32[$25 >> 2] | 0;
    if (($107 | 0) != ($105 | 0)) HEAP32[$25 >> 2] = $107 + (~(($107 + -4 - $105 | 0) >>> 2) << 2);
    __ZdlPv($105);
   }
   $$0 = $103;
   $$01 = $104;
   label = 88;
   break;
  }
 case 49:
  {
   $152 = ___cxa_find_matching_catch() | 0;
   $153 = tempRet0;
   $154 = HEAP32[$125 >> 2] | 0;
   if ($154) {
    $156 = HEAP32[$126 >> 2] | 0;
    if (($156 | 0) != ($154 | 0)) HEAP32[$126 >> 2] = $156 + (~(($156 + -4 - $154 | 0) >>> 2) << 2);
    __ZdlPv($154);
   }
   HEAP32[$113 >> 2] = 34168;
   $162 = HEAP32[$121 >> 2] | 0;
   if ($162) {
    $164 = HEAP32[$122 >> 2] | 0;
    if (($164 | 0) != ($162 | 0)) HEAP32[$122 >> 2] = $164 + (~(($164 + -4 - $162 | 0) >>> 2) << 2);
    __ZdlPv($162);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($116);
   $eh$lpad$body72$index9Z2D = $153;
   $eh$lpad$body72$indexZ2D = $152;
   label = 64;
   break;
  }
 case 63:
  {
   $178 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body72$index9Z2D = tempRet0;
   $eh$lpad$body72$indexZ2D = $178;
   label = 64;
   break;
  }
 case 80:
  {
   $$2 = ___cxa_find_matching_catch() | 0;
   $$23 = tempRet0;
   label = 90;
   break;
  }
 case 81:
  {
   $$1 = ___cxa_find_matching_catch() | 0;
   $$12 = tempRet0;
   label = 89;
   break;
  }
 case 83:
  {
   $222 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body19$index14Z2D = tempRet0;
   $eh$lpad$body19$indexZ2D = $222;
   label = 84;
   break;
  }
 case 101:
  {
   $249 = $std_binds + 4 | 0;
   HEAP32[$249 >> 2] = 0;
   $250 = $std_binds + 8 | 0;
   HEAP32[$250 >> 2] = 0;
   $251 = $std_binds + 4 | 0;
   HEAP32[$std_binds >> 2] = $251;
   __THREW__ = 0;
   invoke_viii(3, $10 | 0, 33912, 3);
   $252 = __THREW__;
   __THREW__ = 0;
   L112 : do if ($252 & 1) label = 141; else {
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i47, $alloc, $10);
    $254 = HEAP32[$it$i47 >> 2] | 0;
    do if (($254 | 0) == ($31 | 0)) {
     __THREW__ = 0;
     $258 = invoke_ii(67, 12) | 0;
     $259 = __THREW__;
     __THREW__ = 0;
     if ($259 & 1) label = 142; else {
      __THREW__ = 0;
      invoke_vii(40, $258 | 0, $10 | 0);
      $261 = __THREW__;
      __THREW__ = 0;
      if ($261 & 1) {
       $266 = ___cxa_find_matching_catch() | 0;
       $267 = tempRet0;
       __ZdlPv($258);
       $eh$lpad$body54$index19Z2D = $267;
       $eh$lpad$body54$indexZ2D = $266;
       break;
      }
      __THREW__ = 0;
      $263 = invoke_iii(23, $alloc | 0, $10 | 0) | 0;
      $264 = __THREW__;
      __THREW__ = 0;
      if ($264 & 1) label = 142; else {
       HEAP32[$263 >> 2] = $258;
       $$0$i50 = $258;
       label = 109;
      }
     }
    } else {
     $$0$i50 = HEAP32[$254 + 28 >> 2] | 0;
     label = 109;
    } while (0);
    do if ((label | 0) == 109) {
     $268 = HEAP32[$249 >> 2] | 0;
     do if (!$268) {
      HEAP32[$__parent$i >> 2] = $251;
      $$0$i$i = $251;
      $288 = $251;
     } else {
      $__nd$0$in$i$i = $268;
      while (1) {
       $271 = HEAP32[$__nd$0$in$i$i + 16 >> 2] | 0;
       if ($$0$i50 >>> 0 < $271 >>> 0) {
        $273 = HEAP32[$__nd$0$in$i$i >> 2] | 0;
        if (!$273) {
         label = 112;
         break;
        } else {
         $__nd$0$in$i$i = $273;
         continue;
        }
       }
       if ($271 >>> 0 >= $$0$i50 >>> 0) {
        label = 116;
        break;
       }
       $276 = $__nd$0$in$i$i + 4 | 0;
       $277 = HEAP32[$276 >> 2] | 0;
       if (!$277) {
        label = 115;
        break;
       } else $__nd$0$in$i$i = $277;
      }
      if ((label | 0) == 112) {
       HEAP32[$__parent$i >> 2] = $__nd$0$in$i$i;
       $$0$i$i = $__nd$0$in$i$i;
       $288 = $__nd$0$in$i$i;
       break;
      } else if ((label | 0) == 115) {
       HEAP32[$__parent$i >> 2] = $__nd$0$in$i$i;
       $$0$i$i = $276;
       $288 = $__nd$0$in$i$i;
       break;
      } else if ((label | 0) == 116) {
       HEAP32[$__parent$i >> 2] = $__nd$0$in$i$i;
       $$0$i$i = $__parent$i;
       $288 = $__nd$0$in$i$i;
       break;
      }
     } while (0);
     $279 = HEAP32[$$0$i$i >> 2] | 0;
     if (!$279) {
      __THREW__ = 0;
      $281 = invoke_ii(67, 24) | 0;
      $282 = __THREW__;
      __THREW__ = 0;
      if ($282 & 1) {
       label = 142;
       break;
      }
      HEAP32[$281 + 16 >> 2] = $$0$i50;
      HEAP32[$281 + 20 >> 2] = 0;
      HEAP32[$281 >> 2] = 0;
      HEAP32[$281 + 4 >> 2] = 0;
      HEAP32[$281 + 8 >> 2] = $288;
      HEAP32[$$0$i$i >> 2] = $281;
      $290 = HEAP32[HEAP32[$std_binds >> 2] >> 2] | 0;
      if (!$290) $293 = $281; else {
       HEAP32[$std_binds >> 2] = $290;
       $293 = HEAP32[$$0$i$i >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$249 >> 2] | 0, $293);
      HEAP32[$250 >> 2] = (HEAP32[$250 >> 2] | 0) + 1;
      $__r$0$i = $281;
     } else $__r$0$i = $279;
     HEAP32[$__r$0$i + 20 >> 2] = $14;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
     __THREW__ = 0;
     invoke_vii(40, $11 | 0, $13 + 4 | 0);
     $298 = __THREW__;
     __THREW__ = 0;
     if ($298 & 1) {
      label = 141;
      break L112;
     }
     $300 = $11 + 12 | 0;
     $301 = $13 + 16 | 0;
     HEAP32[$300 + 0 >> 2] = HEAP32[$301 + 0 >> 2];
     HEAP32[$300 + 4 >> 2] = HEAP32[$301 + 4 >> 2];
     HEAP32[$300 + 8 >> 2] = HEAP32[$301 + 8 >> 2];
     HEAP32[$300 + 12 >> 2] = HEAP32[$301 + 12 >> 2];
     $302 = $12 + 4 | 0;
     HEAP32[$302 >> 2] = 0;
     HEAP32[$12 + 8 >> 2] = 0;
     $304 = $12 + 4 | 0;
     HEAP32[$12 >> 2] = $304;
     $305 = HEAP32[$std_binds >> 2] | 0;
     L145 : do if (($305 | 0) == ($251 | 0)) label = 132; else {
      $308 = $305;
      while (1) {
       HEAP32[$0 >> 2] = $304;
       __THREW__ = 0;
       HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
       invoke_viiii(11, $1 | 0, $12 | 0, $$byval_copy | 0, $308 + 16 | 0);
       $309 = __THREW__;
       __THREW__ = 0;
       if ($309 & 1) break;
       $312 = HEAP32[$308 + 4 >> 2] | 0;
       if (!$312) {
        $$0$i$i$i$i$i = $308;
        while (1) {
         $317 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$317 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
          $$01$i$i$i$i$i = $317;
          break;
         } else $$0$i$i$i$i$i = $317;
        }
       } else {
        $$0$i$i$i$i$i$i = $312;
        while (1) {
         $314 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
         if (!$314) {
          $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i = $314;
        }
       }
       if (($$01$i$i$i$i$i | 0) == ($251 | 0)) {
        label = 132;
        break L145;
       } else $308 = $$01$i$i$i$i$i;
      }
      $342 = ___cxa_find_matching_catch() | 0;
      $343 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($12, HEAP32[$302 >> 2] | 0);
      $$4 = $342;
      $$45 = $343;
     } while (0);
     if ((label | 0) == 132) {
      __THREW__ = 0;
      $321 = invoke_ii(67, 64) | 0;
      $322 = __THREW__;
      __THREW__ = 0;
      do if ($322 & 1) label = 145; else {
       __THREW__ = 0;
       invoke_viiii(12, $321 | 0, $11 | 0, $12 | 0, $13 | 0);
       $324 = __THREW__;
       __THREW__ = 0;
       if ($324 & 1) {
        $334 = ___cxa_find_matching_catch() | 0;
        $335 = tempRet0;
        __ZdlPv($321);
        $eh$lpad$body69$index24Z2D = $335;
        $eh$lpad$body69$indexZ2D = $334;
        break;
       }
       HEAP32[$$byval_copy >> 2] = $321;
       $326 = HEAP32[$27 >> 2] | 0;
       if ($326 >>> 0 >= (HEAP32[$28 >> 2] | 0) >>> 0) {
        __THREW__ = 0;
        invoke_vii(51, $30 | 0, $$byval_copy | 0);
        $332 = __THREW__;
        __THREW__ = 0;
        if ($332 & 1) {
         label = 145;
         break;
        }
        $336 = HEAP32[$302 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($12, $336);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
        $337 = HEAP32[$249 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, $337);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($l);
        STACKTOP = sp;
        return $321 | 0;
       }
       if (!$326) $331 = 0; else {
        HEAP32[$326 >> 2] = $321;
        $331 = HEAP32[$27 >> 2] | 0;
       }
       HEAP32[$27 >> 2] = $331 + 4;
       $336 = HEAP32[$302 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($12, $336);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
       $337 = HEAP32[$249 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, $337);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($l);
       STACKTOP = sp;
       return $321 | 0;
      } while (0);
      if ((label | 0) == 145) {
       $345 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body69$index24Z2D = tempRet0;
       $eh$lpad$body69$indexZ2D = $345;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($12, HEAP32[$302 >> 2] | 0);
      $$4 = $eh$lpad$body69$indexZ2D;
      $$45 = $eh$lpad$body69$index24Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
     $$5 = $$4;
     $$56 = $$45;
     break L112;
    } while (0);
    if ((label | 0) == 142) {
     $340 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body54$index19Z2D = tempRet0;
     $eh$lpad$body54$indexZ2D = $340;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
    $$5 = $eh$lpad$body54$indexZ2D;
    $$56 = $eh$lpad$body54$index19Z2D;
   } while (0);
   if ((label | 0) == 141) {
    $338 = ___cxa_find_matching_catch() | 0;
    $$5 = $338;
    $$56 = tempRet0;
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, HEAP32[$249 >> 2] | 0);
   $$6 = $$5;
   $$67 = $$56;
   break;
  }
 }
 if ((label | 0) == 22) {
  $$3 = $eh$lpad$body$indexZ2D;
  $$34 = $eh$lpad$body$index3Z2D;
  label = 91;
 } else if ((label | 0) == 64) {
  __ZdlPv($113);
  $eh$lpad$body19$index14Z2D = $eh$lpad$body72$index9Z2D;
  $eh$lpad$body19$indexZ2D = $eh$lpad$body72$indexZ2D;
  label = 84;
 }
 if ((label | 0) == 84) {
  $224 = HEAP32[$9 >> 2] | 0;
  if (!$224) {
   $$0 = $eh$lpad$body19$indexZ2D;
   $$01 = $eh$lpad$body19$index14Z2D;
   label = 88;
  } else {
   $226 = HEAP32[$25 >> 2] | 0;
   if (($226 | 0) != ($224 | 0)) HEAP32[$25 >> 2] = $226 + (~(($226 + -4 - $224 | 0) >>> 2) << 2);
   __ZdlPv($224);
   $$0 = $eh$lpad$body19$indexZ2D;
   $$01 = $eh$lpad$body19$index14Z2D;
   label = 88;
  }
 }
 if ((label | 0) == 88) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
  $$1 = $$0;
  $$12 = $$01;
  label = 89;
 }
 if ((label | 0) == 89) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
  $$2 = $$1;
  $$23 = $$12;
  label = 90;
 }
 if ((label | 0) == 90) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
  $$3 = $$2;
  $$34 = $$23;
  label = 91;
 }
 if ((label | 0) == 91) {
  $232 = HEAP32[$params >> 2] | 0;
  if ($232) {
   $234 = HEAP32[$18 >> 2] | 0;
   if (($234 | 0) != ($232 | 0)) HEAP32[$18 >> 2] = $234 + (~(($234 + -4 - $232 | 0) >>> 2) << 2);
   __ZdlPv($232);
  }
  $240 = HEAP32[$20 >> 2] | 0;
  if ($240) {
   $242 = HEAP32[$21 >> 2] | 0;
   if (($242 | 0) == ($240 | 0)) $248 = $240; else {
    $245 = $242;
    do {
     $244 = $245 + -12 | 0;
     HEAP32[$21 >> 2] = $244;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($244);
     $245 = HEAP32[$21 >> 2] | 0;
    } while (($245 | 0) != ($240 | 0));
    $248 = HEAP32[$20 >> 2] | 0;
   }
   __ZdlPv($248);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
  $$6 = $$3;
  $$67 = $$34;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($l);
 $$7 = $$6;
 $$78 = $$67;
 ___resumeException($$7 | 0);
 return 0;
}

function _MUSL_vfscanf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$8 = 0, $$lcssa21 = 0, $$pre$phi243Z2D = 0, $$pre229 = 0, $$pre235 = 0, $$pre240 = 0, $$size$0 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $109 = 0, $11 = 0, $113 = 0, $120 = 0, $125 = 0, $128 = 0, $13 = 0, $134 = 0, $135 = 0, $140 = 0, $144 = 0, $148 = 0, $150 = 0, $153 = 0, $156 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $164 = 0, $169 = 0, $173 = 0, $178 = 0, $179 = 0, $181 = 0, $186 = 0, $190 = 0, $195 = 0, $201 = 0, $205 = 0, $21 = 0, $210 = 0, $217 = 0, $225 = 0, $230 = 0, $234 = 0, $236 = 0, $240 = 0, $242 = 0, $250 = 0, $258 = 0, $259 = 0, $262 = 0, $264 = 0, $270 = 0, $277 = 0, $279 = 0, $28 = 0, $285 = 0, $291 = 0, $294 = 0, $298 = 0, $3 = 0, $305 = 0, $320 = 0, $324 = 0.0, $33 = 0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $57 = 0, $6 = 0, $7 = 0, $72 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $96 = 0, $99 = 0, $alloc$0 = 0, $alloc$0224 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0, $arglist_current2 = 0, $base$0 = 0, $c$030 = 0, $dest$0 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph49 = 0, $i$0$ph49$lcssa = 0, $i$0$ph49$us56 = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0, $isdigittmp = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0135 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $p$0141 = 0, $p$1 = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$324 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0140 = 0, $pos$1 = 0, $pos$2 = 0, $s$0133 = 0, $s$1 = 0, $s$2$ph = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $scanset = 0, $size$0 = 0, $st = 0, $wc = 0, $wcs$0134 = 0, $wcs$1 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph165 = 0, $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$025 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $ap2$i = sp + 16 | 0;
 $st = sp + 8 | 0;
 $scanset = sp + 33 | 0;
 $wc = sp;
 $0 = sp + 32 | 0;
 $1 = HEAP8[$fmt >> 0] | 0;
 if (!($1 << 24 >> 24)) {
  $matches$3 = 0;
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 $3 = $f + 4 | 0;
 $4 = $f + 100 | 0;
 $5 = $f + 108 | 0;
 $6 = $f + 8 | 0;
 $7 = $scanset + 10 | 0;
 $8 = $scanset + 33 | 0;
 $9 = $st + 4 | 0;
 $10 = $scanset + 46 | 0;
 $11 = $scanset + 94 | 0;
 $13 = $1;
 $matches$0135 = 0;
 $p$0141 = $fmt;
 $pos$0140 = 0;
 $s$0133 = 0;
 $wcs$0134 = 0;
 L4 : while (1) {
  L6 : do if (!(_isspace($13 & 255) | 0)) {
   $43 = (HEAP8[$p$0141 >> 0] | 0) == 37;
   L21 : do if ($43) {
    $44 = $p$0141 + 1 | 0;
    $45 = HEAP8[$44 >> 0] | 0;
    do if ($45 << 24 >> 24 == 42) {
     $dest$0 = 0;
     $p$2 = $p$0141 + 2 | 0;
    } else if ($45 << 24 >> 24 == 37) break L21; else {
     $isdigittmp = ($45 & 255) + -48 | 0;
     if ($isdigittmp >>> 0 < 10) if ((HEAP8[$p$0141 + 2 >> 0] | 0) == 36) {
      HEAP32[$ap2$i >> 2] = HEAP32[$ap >> 2];
      $i$0$i = $isdigittmp;
      while (1) {
       $arglist_current = HEAP32[$ap2$i >> 2] | 0;
       $72 = HEAP32[$arglist_current >> 2] | 0;
       HEAP32[$ap2$i >> 2] = $arglist_current + 4;
       if ($i$0$i >>> 0 > 1) $i$0$i = $i$0$i + -1 | 0; else break;
      }
      $dest$0 = $72;
      $p$2 = $p$0141 + 3 | 0;
      break;
     }
     $arglist_current2 = HEAP32[$ap >> 2] | 0;
     $75 = HEAP32[$arglist_current2 >> 2] | 0;
     HEAP32[$ap >> 2] = $arglist_current2 + 4;
     $dest$0 = $75;
     $p$2 = $44;
    } while (0);
    $76 = HEAP8[$p$2 >> 0] | 0;
    $77 = $76 & 255;
    if (($77 + -48 | 0) >>> 0 < 10) {
     $81 = $77;
     $p$324 = $p$2;
     $width$025 = 0;
     while (1) {
      $80 = ($width$025 * 10 | 0) + -48 + $81 | 0;
      $82 = $p$324 + 1 | 0;
      $83 = HEAP8[$82 >> 0] | 0;
      $81 = $83 & 255;
      if (($81 + -48 | 0) >>> 0 >= 10) {
       $$lcssa21 = $83;
       $p$3$lcssa = $82;
       $width$0$lcssa = $80;
       break;
      } else {
       $p$324 = $82;
       $width$025 = $80;
      }
     }
    } else {
     $$lcssa21 = $76;
     $p$3$lcssa = $p$2;
     $width$0$lcssa = 0;
    }
    if ($$lcssa21 << 24 >> 24 == 109) {
     $88 = $p$3$lcssa + 1 | 0;
     $91 = HEAP8[$88 >> 0] | 0;
     $alloc$0 = ($dest$0 | 0) != 0 & 1;
     $p$4 = $88;
     $s$1 = 0;
     $wcs$1 = 0;
    } else {
     $91 = $$lcssa21;
     $alloc$0 = 0;
     $p$4 = $p$3$lcssa;
     $s$1 = $s$0133;
     $wcs$1 = $wcs$0134;
    }
    $89 = $p$4 + 1 | 0;
    switch ($91 & 255 | 0) {
    case 104:
     {
      $93 = (HEAP8[$89 >> 0] | 0) == 104;
      $p$5 = $93 ? $p$4 + 2 | 0 : $89;
      $size$0 = $93 ? -2 : -1;
      break;
     }
    case 106:
     {
      $p$5 = $89;
      $size$0 = 3;
      break;
     }
    case 116:
    case 122:
     {
      $p$5 = $89;
      $size$0 = 1;
      break;
     }
    case 108:
     {
      $96 = (HEAP8[$89 >> 0] | 0) == 108;
      $p$5 = $96 ? $p$4 + 2 | 0 : $89;
      $size$0 = $96 ? 3 : 1;
      break;
     }
    case 76:
     {
      $p$5 = $89;
      $size$0 = 2;
      break;
     }
    case 110:
    case 112:
    case 67:
    case 83:
    case 91:
    case 99:
    case 115:
    case 88:
    case 71:
    case 70:
    case 69:
    case 65:
    case 103:
    case 102:
    case 101:
    case 97:
    case 120:
    case 117:
    case 111:
    case 105:
    case 100:
     {
      $p$5 = $p$4;
      $size$0 = 0;
      break;
     }
    default:
     {
      $alloc$0224 = $alloc$0;
      $s$6 = $s$1;
      $wcs$7 = $wcs$1;
      label = 162;
      break L4;
     }
    }
    $99 = HEAPU8[$p$5 >> 0] | 0;
    $101 = ($99 & 47 | 0) == 3;
    $$ = $101 ? $99 | 32 : $99;
    $$size$0 = $101 ? 1 : $size$0;
    if (($$ | 0) == 99) {
     $pos$1 = $pos$0140;
     $width$1 = ($width$0$lcssa | 0) < 1 ? 1 : $width$0$lcssa;
    } else if (($$ | 0) == 110) {
     if (!$dest$0) {
      $matches$1 = $matches$0135;
      $p$11 = $p$5;
      $pos$2 = $pos$0140;
      $s$5 = $s$1;
      $wcs$6 = $wcs$1;
      break L6;
     }
     switch ($$size$0 | 0) {
     case 3:
      {
       $109 = $dest$0;
       HEAP32[$109 >> 2] = $pos$0140;
       HEAP32[$109 + 4 >> 2] = (($pos$0140 | 0) < 0) << 31 >> 31;
       $matches$1 = $matches$0135;
       $p$11 = $p$5;
       $pos$2 = $pos$0140;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case 0:
      {
       HEAP32[$dest$0 >> 2] = $pos$0140;
       $matches$1 = $matches$0135;
       $p$11 = $p$5;
       $pos$2 = $pos$0140;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case -2:
      {
       HEAP8[$dest$0 >> 0] = $pos$0140;
       $matches$1 = $matches$0135;
       $p$11 = $p$5;
       $pos$2 = $pos$0140;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case 1:
      {
       HEAP32[$dest$0 >> 2] = $pos$0140;
       $matches$1 = $matches$0135;
       $p$11 = $p$5;
       $pos$2 = $pos$0140;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     case -1:
      {
       HEAP16[$dest$0 >> 1] = $pos$0140;
       $matches$1 = $matches$0135;
       $p$11 = $p$5;
       $pos$2 = $pos$0140;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
       break;
      }
     default:
      {
       $matches$1 = $matches$0135;
       $p$11 = $p$5;
       $pos$2 = $pos$0140;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break L6;
      }
     }
    } else if (($$ | 0) == 91) {
     $pos$1 = $pos$0140;
     $width$1 = $width$0$lcssa;
    } else {
     ___shlim($f, 0);
     do {
      $113 = HEAP32[$3 >> 2] | 0;
      if ($113 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $113 + 1;
       $120 = HEAPU8[$113 >> 0] | 0;
      } else $120 = ___shgetc($f) | 0;
     } while ((_isspace($120) | 0) != 0);
     $$pre229 = HEAP32[$3 >> 2] | 0;
     if (!(HEAP32[$4 >> 2] | 0)) $128 = $$pre229; else {
      $125 = $$pre229 + -1 | 0;
      HEAP32[$3 >> 2] = $125;
      $128 = $125;
     }
     $pos$1 = (HEAP32[$5 >> 2] | 0) + $pos$0140 + $128 - (HEAP32[$6 >> 2] | 0) | 0;
     $width$1 = $width$0$lcssa;
    }
    ___shlim($f, $width$1);
    $134 = HEAP32[$3 >> 2] | 0;
    $135 = HEAP32[$4 >> 2] | 0;
    if ($134 >>> 0 < $135 >>> 0) {
     HEAP32[$3 >> 2] = $134 + 1;
     $140 = $135;
    } else {
     if ((___shgetc($f) | 0) < 0) {
      $alloc$0224 = $alloc$0;
      $s$6 = $s$1;
      $wcs$7 = $wcs$1;
      label = 162;
      break L4;
     }
     $140 = HEAP32[$4 >> 2] | 0;
    }
    if ($140) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    L78 : do switch ($$ | 0) {
    case 120:
    case 88:
    case 112:
     {
      $base$0 = 16;
      label = 144;
      break;
     }
    case 105:
     {
      $base$0 = 0;
      label = 144;
      break;
     }
    case 111:
     {
      $base$0 = 8;
      label = 144;
      break;
     }
    case 117:
    case 100:
     {
      $base$0 = 10;
      label = 144;
      break;
     }
    case 71:
    case 103:
    case 70:
    case 102:
    case 69:
    case 101:
    case 65:
    case 97:
     {
      $324 = +___floatscan($f, $$size$0, 0);
      if ((HEAP32[$5 >> 2] | 0) == ((HEAP32[$6 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0)) {
       $alloc$2 = $alloc$0;
       $matches$2 = $matches$0135;
       $s$8 = $s$1;
       $wcs$9 = $wcs$1;
       break L4;
      }
      if (!$dest$0) {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
      } else if (($$size$0 | 0) == 1) {
       HEAPF64[$dest$0 >> 3] = $324;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L78;
      } else if (($$size$0 | 0) == 2) {
       HEAPF64[$dest$0 >> 3] = $324;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L78;
      } else if (!$$size$0) {
       HEAPF32[$dest$0 >> 2] = $324;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L78;
      } else {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L78;
      }
      break;
     }
    case 91:
    case 99:
    case 115:
     {
      $144 = ($$ | 0) == 99;
      L90 : do if (($$ & 239 | 0) == 99) {
       _memset($scanset | 0, -1, 257) | 0;
       HEAP8[$scanset >> 0] = 0;
       if (($$ | 0) == 115) {
        HEAP8[$8 >> 0] = 0;
        HEAP8[$7 + 0 >> 0] = 0;
        HEAP8[$7 + 1 >> 0] = 0;
        HEAP8[$7 + 2 >> 0] = 0;
        HEAP8[$7 + 3 >> 0] = 0;
        HEAP8[$7 + 4 >> 0] = 0;
        $p$9 = $p$5;
       } else $p$9 = $p$5;
      } else {
       $148 = $p$5 + 1 | 0;
       $150 = (HEAP8[$148 >> 0] | 0) == 94;
       $invert$0 = $150 & 1;
       $p$6 = $150 ? $p$5 + 2 | 0 : $148;
       _memset($scanset | 0, $150 & 1 | 0, 257) | 0;
       HEAP8[$scanset >> 0] = 0;
       $153 = HEAP8[$p$6 >> 0] | 0;
       if ($153 << 24 >> 24 == 93) {
        $159 = ($invert$0 ^ 1) & 255;
        HEAP8[$11 >> 0] = $159;
        $$pre$phi243Z2D = $159;
        $p$7$ph = $p$6 + 1 | 0;
       } else if ($153 << 24 >> 24 == 45) {
        $156 = ($invert$0 ^ 1) & 255;
        HEAP8[$10 >> 0] = $156;
        $$pre$phi243Z2D = $156;
        $p$7$ph = $p$6 + 1 | 0;
       } else {
        $$pre$phi243Z2D = ($invert$0 ^ 1) & 255;
        $p$7$ph = $p$6;
       }
       $p$7 = $p$7$ph;
       while (1) {
        $160 = HEAP8[$p$7 >> 0] | 0;
        if ($160 << 24 >> 24 == 45) {
         $161 = $p$7 + 1 | 0;
         $162 = HEAP8[$161 >> 0] | 0;
         if ($162 << 24 >> 24 == 93 | $162 << 24 >> 24 == 0) {
          $173 = 45;
          $p$8 = $p$7;
         } else {
          $164 = HEAP8[$p$7 + -1 >> 0] | 0;
          if (($164 & 255) < ($162 & 255)) {
           $c$030 = $164 & 255;
           do {
            $c$030 = $c$030 + 1 | 0;
            HEAP8[$scanset + $c$030 >> 0] = $$pre$phi243Z2D;
            $169 = HEAP8[$161 >> 0] | 0;
           } while (($c$030 | 0) < ($169 & 255 | 0));
           $173 = $169;
           $p$8 = $161;
          } else {
           $173 = $162;
           $p$8 = $161;
          }
         }
        } else if ($160 << 24 >> 24 == 93) {
         $p$9 = $p$7;
         break L90;
        } else if (!($160 << 24 >> 24)) {
         $alloc$0224 = $alloc$0;
         $s$6 = $s$1;
         $wcs$7 = $wcs$1;
         label = 162;
         break L4;
        } else {
         $173 = $160;
         $p$8 = $p$7;
        }
        HEAP8[$scanset + (($173 & 255) + 1) >> 0] = $$pre$phi243Z2D;
        $p$7 = $p$8 + 1 | 0;
       }
      } while (0);
      $$8 = $144 ? $width$1 + 1 | 0 : 31;
      $178 = ($$size$0 | 0) == 1;
      $179 = ($alloc$0 | 0) != 0;
      L109 : do if ($178) {
       if ($179) {
        $181 = _malloc($$8 << 2) | 0;
        if (!$181) {
         $alloc$0224 = $alloc$0;
         $s$6 = 0;
         $wcs$7 = $181;
         label = 162;
         break L4;
        } else $wcs$2 = $181;
       } else $wcs$2 = $dest$0;
       HEAP32[$st >> 2] = 0;
       HEAP32[$9 >> 2] = 0;
       $i$0$ph = 0;
       $k$0$ph = $$8;
       $wcs$3$ph = $wcs$2;
       L144 : while (1) {
        if (!$wcs$3$ph) while (1) {
         $186 = HEAP32[$3 >> 2] | 0;
         if ($186 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
          HEAP32[$3 >> 2] = $186 + 1;
          $190 = HEAPU8[$186 >> 0] | 0;
         } else $190 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($190 + 1) >> 0] | 0)) {
          $i$0$ph49$lcssa = $i$0$ph;
          $wcs$3$ph165 = 0;
          break L144;
         }
         HEAP8[$0 >> 0] = $190;
         $195 = _mbrtowc($wc, $0, 1, $st) | 0;
         if (($195 | 0) == -2) continue; else if (($195 | 0) == -1) {
          $alloc$0224 = $alloc$0;
          $s$6 = 0;
          $wcs$7 = 0;
          label = 162;
          break L4;
         }
         if ($179 & ($i$0$ph | 0) == ($k$0$ph | 0)) {
          $i$1$lcssa = $i$0$ph;
          break;
         }
        } else {
         if ($179) $i$0$ph49$us56 = $i$0$ph; else {
          $i$0$ph49 = $i$0$ph;
          label = 98;
          break;
         }
         while (1) {
          while (1) {
           $201 = HEAP32[$3 >> 2] | 0;
           if ($201 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
            HEAP32[$3 >> 2] = $201 + 1;
            $205 = HEAPU8[$201 >> 0] | 0;
           } else $205 = ___shgetc($f) | 0;
           if (!(HEAP8[$scanset + ($205 + 1) >> 0] | 0)) {
            $i$0$ph49$lcssa = $i$0$ph49$us56;
            $wcs$3$ph165 = $wcs$3$ph;
            break L144;
           }
           HEAP8[$0 >> 0] = $205;
           $210 = _mbrtowc($wc, $0, 1, $st) | 0;
           if (($210 | 0) == -1) {
            $alloc$0224 = $alloc$0;
            $s$6 = 0;
            $wcs$7 = $wcs$3$ph;
            label = 162;
            break L4;
           } else if (($210 | 0) != -2) break;
          }
          HEAP32[$wcs$3$ph + ($i$0$ph49$us56 << 2) >> 2] = HEAP32[$wc >> 2];
          $i$0$ph49$us56 = $i$0$ph49$us56 + 1 | 0;
          if (($i$0$ph49$us56 | 0) == ($k$0$ph | 0)) {
           $i$1$lcssa = $k$0$ph;
           break;
          }
         }
        }
        $234 = $k$0$ph << 1 | 1;
        $236 = _realloc($wcs$3$ph, $234 << 2) | 0;
        if (!$236) {
         $alloc$0224 = $alloc$0;
         $s$6 = 0;
         $wcs$7 = $wcs$3$ph;
         label = 162;
         break L4;
        }
        $i$0$ph = $i$1$lcssa;
        $k$0$ph = $234;
        $wcs$3$ph = $236;
       }
       L168 : do if ((label | 0) == 98) while (1) {
        label = 0;
        while (1) {
         $217 = HEAP32[$3 >> 2] | 0;
         if ($217 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
          HEAP32[$3 >> 2] = $217 + 1;
          $225 = HEAPU8[$217 >> 0] | 0;
         } else $225 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($225 + 1) >> 0] | 0)) {
          $i$0$ph49$lcssa = $i$0$ph49;
          $wcs$3$ph165 = $wcs$3$ph;
          break L168;
         }
         HEAP8[$0 >> 0] = $225;
         $230 = _mbrtowc($wc, $0, 1, $st) | 0;
         if (($230 | 0) == -1) {
          $alloc$0224 = 0;
          $s$6 = 0;
          $wcs$7 = $wcs$3$ph;
          label = 162;
          break L4;
         } else if (($230 | 0) != -2) break;
        }
        HEAP32[$wcs$3$ph + ($i$0$ph49 << 2) >> 2] = HEAP32[$wc >> 2];
        $i$0$ph49 = $i$0$ph49 + 1 | 0;
        label = 98;
       } while (0);
       if (!(_mbsinit($st) | 0)) {
        $alloc$0224 = $alloc$0;
        $s$6 = 0;
        $wcs$7 = $wcs$3$ph165;
        label = 162;
        break L4;
       } else {
        $i$4 = $i$0$ph49$lcssa;
        $s$3 = 0;
        $wcs$4 = $wcs$3$ph165;
       }
      } else {
       if ($179) {
        $240 = _malloc($$8) | 0;
        if (!$240) {
         $alloc$0224 = $alloc$0;
         $s$6 = 0;
         $wcs$7 = 0;
         label = 162;
         break L4;
        } else {
         $i$2$ph = 0;
         $k$1$ph = $$8;
         $s$2$ph = $240;
        }
        while (1) {
         $i$2 = $i$2$ph;
         do {
          $242 = HEAP32[$3 >> 2] | 0;
          if ($242 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $242 + 1;
           $250 = HEAPU8[$242 >> 0] | 0;
          } else $250 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($250 + 1) >> 0] | 0)) {
           $i$4 = $i$2;
           $s$3 = $s$2$ph;
           $wcs$4 = 0;
           break L109;
          }
          HEAP8[$s$2$ph + $i$2 >> 0] = $250;
          $i$2 = $i$2 + 1 | 0;
         } while (($i$2 | 0) != ($k$1$ph | 0));
         $258 = $k$1$ph << 1 | 1;
         $259 = _realloc($s$2$ph, $258) | 0;
         if (!$259) {
          $alloc$0224 = $alloc$0;
          $s$6 = $s$2$ph;
          $wcs$7 = 0;
          label = 162;
          break L4;
         } else {
          $i$2$ph$phi = $k$1$ph;
          $k$1$ph = $258;
          $s$2$ph = $259;
          $i$2$ph = $i$2$ph$phi;
         }
        }
       }
       if (!$dest$0) {
        $279 = $140;
        while (1) {
         $277 = HEAP32[$3 >> 2] | 0;
         if ($277 >>> 0 < $279 >>> 0) {
          HEAP32[$3 >> 2] = $277 + 1;
          $285 = HEAPU8[$277 >> 0] | 0;
         } else $285 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($285 + 1) >> 0] | 0)) {
          $i$4 = 0;
          $s$3 = 0;
          $wcs$4 = 0;
          break L109;
         }
         $279 = HEAP32[$4 >> 2] | 0;
        }
       } else {
        $264 = $140;
        $i$3 = 0;
        while (1) {
         $262 = HEAP32[$3 >> 2] | 0;
         if ($262 >>> 0 < $264 >>> 0) {
          HEAP32[$3 >> 2] = $262 + 1;
          $270 = HEAPU8[$262 >> 0] | 0;
         } else $270 = ___shgetc($f) | 0;
         if (!(HEAP8[$scanset + ($270 + 1) >> 0] | 0)) {
          $i$4 = $i$3;
          $s$3 = $dest$0;
          $wcs$4 = 0;
          break L109;
         }
         HEAP8[$dest$0 + $i$3 >> 0] = $270;
         $264 = HEAP32[$4 >> 2] | 0;
         $i$3 = $i$3 + 1 | 0;
        }
       }
      } while (0);
      $$pre235 = HEAP32[$3 >> 2] | 0;
      if (!(HEAP32[$4 >> 2] | 0)) $294 = $$pre235; else {
       $291 = $$pre235 + -1 | 0;
       HEAP32[$3 >> 2] = $291;
       $294 = $291;
      }
      $298 = $294 - (HEAP32[$6 >> 2] | 0) + (HEAP32[$5 >> 2] | 0) | 0;
      if (!$298) {
       $alloc$2 = $alloc$0;
       $matches$2 = $matches$0135;
       $s$8 = $s$3;
       $wcs$9 = $wcs$4;
       break L4;
      }
      if (!(($298 | 0) == ($width$1 | 0) | $144 ^ 1)) {
       $alloc$2 = $alloc$0;
       $matches$2 = $matches$0135;
       $s$8 = $s$3;
       $wcs$9 = $wcs$4;
       break L4;
      }
      do if ($179) if ($178) {
       HEAP32[$dest$0 >> 2] = $wcs$4;
       break;
      } else {
       HEAP32[$dest$0 >> 2] = $s$3;
       break;
      } while (0);
      if ($144) {
       $p$10 = $p$9;
       $s$4 = $s$3;
       $wcs$5 = $wcs$4;
      } else {
       if ($wcs$4) HEAP32[$wcs$4 + ($i$4 << 2) >> 2] = 0;
       if (!$s$3) {
        $p$10 = $p$9;
        $s$4 = 0;
        $wcs$5 = $wcs$4;
       } else {
        HEAP8[$s$3 + $i$4 >> 0] = 0;
        $p$10 = $p$9;
        $s$4 = $s$3;
        $wcs$5 = $wcs$4;
       }
      }
      break;
     }
    default:
     {
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
     }
    } while (0);
    L197 : do if ((label | 0) == 144) {
     label = 0;
     $305 = ___intscan($f, $base$0, 0, -1, -1) | 0;
     if ((HEAP32[$5 >> 2] | 0) == ((HEAP32[$6 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0)) {
      $alloc$2 = $alloc$0;
      $matches$2 = $matches$0135;
      $s$8 = $s$1;
      $wcs$9 = $wcs$1;
      break L4;
     }
     if (($$ | 0) == 112 & ($dest$0 | 0) != 0) {
      HEAP32[$dest$0 >> 2] = $305;
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
      break;
     }
     if (!$dest$0) {
      $p$10 = $p$5;
      $s$4 = $s$1;
      $wcs$5 = $wcs$1;
     } else switch ($$size$0 | 0) {
     case -2:
      {
       HEAP8[$dest$0 >> 0] = $305;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L197;
       break;
      }
     case 3:
      {
       $320 = $dest$0;
       HEAP32[$320 >> 2] = $305;
       HEAP32[$320 + 4 >> 2] = tempRet0;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L197;
       break;
      }
     case -1:
      {
       HEAP16[$dest$0 >> 1] = $305;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L197;
       break;
      }
     case 0:
      {
       HEAP32[$dest$0 >> 2] = $305;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L197;
       break;
      }
     case 1:
      {
       HEAP32[$dest$0 >> 2] = $305;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L197;
       break;
      }
     default:
      {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break L197;
      }
     }
    } while (0);
    $matches$1 = (($dest$0 | 0) != 0 & 1) + $matches$0135 | 0;
    $p$11 = $p$10;
    $pos$2 = (HEAP32[$5 >> 2] | 0) + $pos$1 + (HEAP32[$3 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
    $s$5 = $s$4;
    $wcs$6 = $wcs$5;
    break L6;
   } while (0);
   $47 = $p$0141 + ($43 & 1) | 0;
   ___shlim($f, 0);
   $48 = HEAP32[$3 >> 2] | 0;
   if ($48 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $48 + 1;
    $57 = HEAPU8[$48 >> 0] | 0;
   } else $57 = ___shgetc($f) | 0;
   if (($57 | 0) != (HEAPU8[$47 >> 0] | 0)) {
    label = 19;
    break L4;
   }
   $matches$1 = $matches$0135;
   $p$11 = $47;
   $pos$2 = $pos$0140 + 1 | 0;
   $s$5 = $s$0133;
   $wcs$6 = $wcs$0134;
  } else {
   $p$1 = $p$0141;
   while (1) {
    $16 = $p$1 + 1 | 0;
    if (!(_isspace(HEAPU8[$16 >> 0] | 0) | 0)) break; else $p$1 = $16;
   }
   ___shlim($f, 0);
   do {
    $21 = HEAP32[$3 >> 2] | 0;
    if ($21 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $21 + 1;
     $28 = HEAPU8[$21 >> 0] | 0;
    } else $28 = ___shgetc($f) | 0;
   } while ((_isspace($28) | 0) != 0);
   $$pre240 = HEAP32[$3 >> 2] | 0;
   if (!(HEAP32[$4 >> 2] | 0)) $36 = $$pre240; else {
    $33 = $$pre240 + -1 | 0;
    HEAP32[$3 >> 2] = $33;
    $36 = $33;
   }
   $matches$1 = $matches$0135;
   $p$11 = $p$1;
   $pos$2 = (HEAP32[$5 >> 2] | 0) + $pos$0140 + $36 - (HEAP32[$6 >> 2] | 0) | 0;
   $s$5 = $s$0133;
   $wcs$6 = $wcs$0134;
  } while (0);
  $p$0141 = $p$11 + 1 | 0;
  $13 = HEAP8[$p$0141 >> 0] | 0;
  if (!($13 << 24 >> 24)) {
   $matches$3 = $matches$1;
   label = 166;
   break;
  } else {
   $matches$0135 = $matches$1;
   $pos$0140 = $pos$2;
   $s$0133 = $s$5;
   $wcs$0134 = $wcs$6;
  }
 }
 if ((label | 0) == 19) {
  if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
  if (($57 | 0) > -1 | ($matches$0135 | 0) != 0) {
   $matches$3 = $matches$0135;
   STACKTOP = sp;
   return $matches$3 | 0;
  } else {
   $alloc$1 = 0;
   $s$7 = $s$0133;
   $wcs$8 = $wcs$0134;
   label = 163;
  }
 } else if ((label | 0) == 162) if (!$matches$0135) {
  $alloc$1 = $alloc$0224;
  $s$7 = $s$6;
  $wcs$8 = $wcs$7;
  label = 163;
 } else {
  $alloc$2 = $alloc$0224;
  $matches$2 = $matches$0135;
  $s$8 = $s$6;
  $wcs$9 = $wcs$7;
 } else if ((label | 0) == 166) {
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 if ((label | 0) == 163) {
  $alloc$2 = $alloc$1;
  $matches$2 = -1;
  $s$8 = $s$7;
  $wcs$9 = $wcs$8;
 }
 if (!$alloc$2) {
  $matches$3 = $matches$2;
  STACKTOP = sp;
  return $matches$3 | 0;
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;
 return $matches$3 | 0;
}

function __Z10lex_numberRPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERK8Location($agg$result, $c, $filename, $begin) {
 $agg$result = $agg$result | 0;
 $c = $c | 0;
 $filename = $filename | 0;
 $begin = $begin | 0;
 var $$0 = 0, $$0$i = 0, $$0$i34 = 0, $$0$i52 = 0, $$01$i = 0, $$01$i33 = 0, $$01$i51 = 0, $$01167 = 0, $$01366 = 0, $$05 = 0, $$07 = 0, $$09 = 0, $$11271 = 0, $$11470 = 0, $$2 = 0, $$215 = 0, $$31674 = 0, $$375 = 0, $$4 = 0, $$417 = 0, $$51878 = 0, $$579 = 0, $$6 = 0, $$619 = 0, $$7 = 0, $$720 = 0, $0 = 0, $1 = 0, $100 = 0, $101 = 0, $106 = 0, $11 = 0, $111 = 0, $112 = 0, $117 = 0, $119 = 0, $120 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $13 = 0, $130 = 0, $132 = 0, $133 = 0, $136 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $143 = 0, $147 = 0, $149 = 0, $151 = 0, $153 = 0, $154 = 0, $155 = 0, $157 = 0, $16 = 0, $160 = 0, $161 = 0, $165 = 0, $167 = 0, $168 = 0, $170 = 0, $173 = 0, $178 = 0, $179 = 0, $184 = 0, $189 = 0, $19 = 0, $190 = 0, $195 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $201 = 0, $203 = 0, $205 = 0, $206 = 0, $209 = 0, $211 = 0, $212 = 0, $213 = 0, $216 = 0, $220 = 0, $222 = 0, $224 = 0, $226 = 0, $227 = 0, $228 = 0, $230 = 0, $233 = 0, $234 = 0, $238 = 0, $24 = 0, $240 = 0, $241 = 0, $243 = 0, $246 = 0, $25 = 0, $251 = 0, $252 = 0, $257 = 0, $262 = 0, $263 = 0, $268 = 0, $270 = 0, $271 = 0, $272 = 0, $274 = 0, $276 = 0, $278 = 0, $279 = 0, $281 = 0, $282 = 0, $284 = 0, $285 = 0, $290 = 0, $3 = 0, $30 = 0, $35 = 0, $36 = 0, $4 = 0, $41 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $8 = 0, $82 = 0, $83 = 0, $87 = 0, $89 = 0, $9 = 0, $90 = 0, $92 = 0, $95 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i31$index16Z2D = 0, $eh$lpad$body$i31$indexZ2D = 0, $eh$lpad$body$i49$index21Z2D = 0, $eh$lpad$body$i49$indexZ2D = 0, $eh$lpad$body22$index9Z2D = 0, $eh$lpad$body22$indexZ2D = 0, $ss = 0, $ss1 = 0, $ss2 = 0, $state$0 = 0, $state$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544 | 0;
 $0 = sp + 530 | 0;
 $1 = sp + 516 | 0;
 $2 = sp + 529 | 0;
 $3 = sp + 504 | 0;
 $4 = sp + 528 | 0;
 $5 = sp + 492 | 0;
 $6 = sp + 480 | 0;
 $ss = sp + 336 | 0;
 $7 = sp + 320 | 0;
 $ss1 = sp + 176 | 0;
 $8 = sp + 160 | 0;
 $ss2 = sp + 16 | 0;
 $9 = sp;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $state$0 = 0;
 L1 : while (1) {
  L3 : do switch ($state$0 | 0) {
  case 0:
   {
    $11 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    switch ($11 << 24 >> 24 | 0) {
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
     break;
    case 48:
     {
      $284 = $11;
      $state$1 = 1;
      break L3;
      break;
     }
    default:
     {
      label = 6;
      break L1;
     }
    }
    $284 = $11;
    $state$1 = 2;
    break;
   }
  case 2:
   {
    $54 = HEAP32[$c >> 2] | 0;
    $55 = HEAP8[$54 >> 0] | 0;
    switch ($55 << 24 >> 24 | 0) {
    case 69:
    case 101:
     {
      $284 = $55;
      $state$1 = 5;
      break L3;
      break;
     }
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     {
      $284 = $55;
      $state$1 = 2;
      break L3;
      break;
     }
    case 46:
     {
      $284 = $55;
      $state$1 = 3;
      break L3;
      break;
     }
    default:
     {
      $290 = $54;
      label = 90;
      break L1;
     }
    }
    break;
   }
  case 3:
   {
    $58 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    if ((($58 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $284 = $58;
     $state$1 = 4;
    } else {
     label = 20;
     break L1;
    }
    break;
   }
  case 1:
   {
    $51 = HEAP32[$c >> 2] | 0;
    $52 = HEAP8[$51 >> 0] | 0;
    $53 = $52 << 24 >> 24;
    if (($53 | 0) == 46) {
     $284 = $52;
     $state$1 = 3;
     break L3;
    } else if (!(($53 | 0) == 69 | ($53 | 0) == 101)) {
     $290 = $51;
     label = 90;
     break L1;
    }
    $284 = $52;
    $state$1 = 5;
    break;
   }
  case 4:
   {
    $132 = HEAP32[$c >> 2] | 0;
    $133 = HEAP8[$132 >> 0] | 0;
    switch ($133 << 24 >> 24 | 0) {
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     break;
    case 69:
    case 101:
     {
      $284 = $133;
      $state$1 = 5;
      break L3;
      break;
     }
    default:
     {
      $290 = $132;
      label = 90;
      break L1;
     }
    }
    $284 = $133;
    $state$1 = 4;
    break;
   }
  case 5:
   {
    $136 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    switch ($136 << 24 >> 24 | 0) {
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     break;
    case 45:
    case 43:
     {
      $284 = $136;
      $state$1 = 6;
      break L3;
      break;
     }
    default:
     {
      label = 46;
      break L1;
     }
    }
    $284 = $136;
    $state$1 = 7;
    break;
   }
  case 6:
   {
    $209 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    if ((($209 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $284 = $209;
     $state$1 = 7;
    } else {
     label = 67;
     break L1;
    }
    break;
   }
  case 7:
   {
    $281 = HEAP32[$c >> 2] | 0;
    $282 = HEAP8[$281 >> 0] | 0;
    if ((($282 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $284 = $282;
     $state$1 = 7;
    } else {
     $290 = $281;
     label = 90;
     break L1;
    }
    break;
   }
  default:
   {
    $284 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    $state$1 = $state$0;
   }
  } while (0);
  __THREW__ = 0;
  invoke_vii(44, $agg$result | 0, $284 | 0);
  $285 = __THREW__;
  __THREW__ = 0;
  if ($285 & 1) {
   label = 35;
   break;
  }
  HEAP32[$c >> 2] = (HEAP32[$c >> 2] | 0) + 1;
  $state$0 = $state$1;
 }
 if ((label | 0) == 6) {
  $13 = ___cxa_allocate_exception(40) | 0;
  __THREW__ = 0;
  invoke_viii(3, $6 | 0, 8, 19);
  $14 = __THREW__;
  __THREW__ = 0;
  do if ($14 & 1) {
   $47 = ___cxa_find_matching_catch() | 0;
   $$01167 = tempRet0;
   $$01366 = $47;
  } else {
   __THREW__ = 0;
   invoke_vii(40, $13 | 0, $filename | 0);
   $16 = __THREW__;
   __THREW__ = 0;
   if ($16 & 1) $$09 = 1; else {
    $19 = $begin;
    $24 = HEAP32[$19 + 4 >> 2] | 0;
    $25 = $13 + 12 | 0;
    HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$25 + 4 >> 2] = $24;
    $30 = $begin;
    $35 = HEAP32[$30 + 4 >> 2] | 0;
    $36 = $13 + 20 | 0;
    HEAP32[$36 >> 2] = HEAP32[$30 >> 2];
    HEAP32[$36 + 4 >> 2] = $35;
    __THREW__ = 0;
    invoke_vii(40, $13 + 28 | 0, $6 | 0);
    $41 = __THREW__;
    __THREW__ = 0;
    if ($41 & 1) {
     $43 = ___cxa_find_matching_catch() | 0;
     $44 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
     $$01167 = $44;
     $$01366 = $43;
     break;
    }
    __THREW__ = 0;
    invoke_viii(4, $13 | 0, 48, 178);
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) $$09 = 0; else {}
   }
   $49 = ___cxa_find_matching_catch() | 0;
   $50 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
   if ($$09) {
    $$01167 = $50;
    $$01366 = $49;
   } else {
    $$7 = $50;
    $$720 = $49;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
    ___resumeException($$720 | 0);
   }
  } while (0);
  ___cxa_free_exception($13 | 0);
  $$7 = $$01167;
  $$720 = $$01366;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
  ___resumeException($$720 | 0);
 } else if ((label | 0) == 20) {
  $60 = $ss + 64 | 0;
  $61 = $ss + 8 | 0;
  HEAP32[$61 >> 2] = 792;
  $62 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 940;
  HEAP32[$60 >> 2] = 960;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $62 | 0);
  $65 = __THREW__;
  __THREW__ = 0;
  if ($65 & 1) {
   $77 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $77;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 772;
   HEAP32[$60 >> 2] = 812;
   HEAP32[$61 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $62 | 0);
   $69 = __THREW__;
   __THREW__ = 0;
   do if ($69 & 1) {
    $79 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $79;
   } else {
    HEAP32[$62 >> 2] = 1104;
    $71 = $ss + 44 | 0;
    HEAP32[$71 + 0 >> 2] = 0;
    HEAP32[$71 + 4 >> 2] = 0;
    HEAP32[$71 + 8 >> 2] = 0;
    HEAP32[$71 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$5 + 0 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $62 | 0, $5 | 0);
    $73 = __THREW__;
    __THREW__ = 0;
    if ($73 & 1) {
     $75 = ___cxa_find_matching_catch() | 0;
     $76 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($71);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($62);
     $eh$lpad$body$i$index2Z2D = $76;
     $eh$lpad$body$i$indexZ2D = $75;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
    __THREW__ = 0;
    $82 = invoke_iiii(25, $ss + 8 | 0, 56, 47) | 0;
    $83 = __THREW__;
    __THREW__ = 0;
    L31 : do if ($83 & 1) label = 37; else {
     HEAP8[$4 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(25, $82 | 0, $4 | 0, 1) | 0;
     $87 = __THREW__;
     __THREW__ = 0;
     if ($87 & 1) label = 37; else {
      $89 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $7 | 0, $62 | 0);
      $90 = __THREW__;
      __THREW__ = 0;
      do if ($90 & 1) {
       $127 = ___cxa_find_matching_catch() | 0;
       $$11271 = tempRet0;
       $$11470 = $127;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $89 | 0, $filename | 0);
       $92 = __THREW__;
       __THREW__ = 0;
       if ($92 & 1) $$07 = 1; else {
        $95 = $begin;
        $100 = HEAP32[$95 + 4 >> 2] | 0;
        $101 = $89 + 12 | 0;
        HEAP32[$101 >> 2] = HEAP32[$95 >> 2];
        HEAP32[$101 + 4 >> 2] = $100;
        $106 = $begin;
        $111 = HEAP32[$106 + 4 >> 2] | 0;
        $112 = $89 + 20 | 0;
        HEAP32[$112 >> 2] = HEAP32[$106 >> 2];
        HEAP32[$112 + 4 >> 2] = $111;
        __THREW__ = 0;
        invoke_vii(40, $89 + 28 | 0, $7 | 0);
        $117 = __THREW__;
        __THREW__ = 0;
        if ($117 & 1) {
         $119 = ___cxa_find_matching_catch() | 0;
         $120 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($89);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
         $$11271 = $120;
         $$11470 = $119;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $89 | 0, 48, 178);
        $121 = __THREW__;
        __THREW__ = 0;
        if ($121 & 1) $$07 = 0; else {}
       }
       $129 = ___cxa_find_matching_catch() | 0;
       $130 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
       if ($$07) {
        $$11271 = $130;
        $$11470 = $129;
       } else {
        $$2 = $130;
        $$215 = $129;
        break L31;
       }
      } while (0);
      ___cxa_free_exception($89 | 0);
      $$2 = $$11271;
      $$215 = $$11470;
     }
    } while (0);
    if ((label | 0) == 37) {
     $125 = ___cxa_find_matching_catch() | 0;
     $$2 = tempRet0;
     $$215 = $125;
    }
    HEAP32[$ss >> 2] = 772;
    HEAP32[$ss + 64 >> 2] = 812;
    HEAP32[$61 >> 2] = 792;
    HEAP32[$62 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($71);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($62);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($60);
    $$7 = $$2;
    $$720 = $$215;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($60);
  $eh$lpad$body22$index9Z2D = $$0$i;
  $eh$lpad$body22$indexZ2D = $$01$i;
 } else if ((label | 0) == 35) {
  $123 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body22$index9Z2D = tempRet0;
  $eh$lpad$body22$indexZ2D = $123;
 } else if ((label | 0) == 46) {
  $138 = $ss1 + 64 | 0;
  $139 = $ss1 + 8 | 0;
  HEAP32[$139 >> 2] = 792;
  $140 = $ss1 + 12 | 0;
  HEAP32[$ss1 >> 2] = 940;
  HEAP32[$138 >> 2] = 960;
  HEAP32[$ss1 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss1 + 64 | 0, $140 | 0);
  $143 = __THREW__;
  __THREW__ = 0;
  if ($143 & 1) {
   $155 = ___cxa_find_matching_catch() | 0;
   $$0$i34 = tempRet0;
   $$01$i33 = $155;
  } else {
   HEAP32[$ss1 + 136 >> 2] = 0;
   HEAP32[$ss1 + 140 >> 2] = -1;
   HEAP32[$ss1 >> 2] = 772;
   HEAP32[$138 >> 2] = 812;
   HEAP32[$139 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $140 | 0);
   $147 = __THREW__;
   __THREW__ = 0;
   do if ($147 & 1) {
    $157 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i31$index16Z2D = tempRet0;
    $eh$lpad$body$i31$indexZ2D = $157;
   } else {
    HEAP32[$140 >> 2] = 1104;
    $149 = $ss1 + 44 | 0;
    HEAP32[$149 + 0 >> 2] = 0;
    HEAP32[$149 + 4 >> 2] = 0;
    HEAP32[$149 + 8 >> 2] = 0;
    HEAP32[$149 + 12 >> 2] = 0;
    HEAP32[$ss1 + 60 >> 2] = 24;
    HEAP32[$3 + 0 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $140 | 0, $3 | 0);
    $151 = __THREW__;
    __THREW__ = 0;
    if ($151 & 1) {
     $153 = ___cxa_find_matching_catch() | 0;
     $154 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($149);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($140);
     $eh$lpad$body$i31$index16Z2D = $154;
     $eh$lpad$body$i31$indexZ2D = $153;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
    __THREW__ = 0;
    $160 = invoke_iiii(25, $ss1 + 8 | 0, 104, 37) | 0;
    $161 = __THREW__;
    __THREW__ = 0;
    L76 : do if ($161 & 1) label = 61; else {
     HEAP8[$2 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(25, $160 | 0, $2 | 0, 1) | 0;
     $165 = __THREW__;
     __THREW__ = 0;
     if ($165 & 1) label = 61; else {
      $167 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $8 | 0, $140 | 0);
      $168 = __THREW__;
      __THREW__ = 0;
      do if ($168 & 1) {
       $203 = ___cxa_find_matching_catch() | 0;
       $$31674 = $203;
       $$375 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $167 | 0, $filename | 0);
       $170 = __THREW__;
       __THREW__ = 0;
       if ($170 & 1) $$05 = 1; else {
        $173 = $begin;
        $178 = HEAP32[$173 + 4 >> 2] | 0;
        $179 = $167 + 12 | 0;
        HEAP32[$179 >> 2] = HEAP32[$173 >> 2];
        HEAP32[$179 + 4 >> 2] = $178;
        $184 = $begin;
        $189 = HEAP32[$184 + 4 >> 2] | 0;
        $190 = $167 + 20 | 0;
        HEAP32[$190 >> 2] = HEAP32[$184 >> 2];
        HEAP32[$190 + 4 >> 2] = $189;
        __THREW__ = 0;
        invoke_vii(40, $167 + 28 | 0, $8 | 0);
        $195 = __THREW__;
        __THREW__ = 0;
        if ($195 & 1) {
         $197 = ___cxa_find_matching_catch() | 0;
         $198 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($167);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
         $$31674 = $197;
         $$375 = $198;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $167 | 0, 48, 178);
        $199 = __THREW__;
        __THREW__ = 0;
        if ($199 & 1) $$05 = 0; else {}
       }
       $205 = ___cxa_find_matching_catch() | 0;
       $206 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
       if ($$05) {
        $$31674 = $205;
        $$375 = $206;
       } else {
        $$4 = $206;
        $$417 = $205;
        break L76;
       }
      } while (0);
      ___cxa_free_exception($167 | 0);
      $$4 = $$375;
      $$417 = $$31674;
     }
    } while (0);
    if ((label | 0) == 61) {
     $201 = ___cxa_find_matching_catch() | 0;
     $$4 = tempRet0;
     $$417 = $201;
    }
    HEAP32[$ss1 >> 2] = 772;
    HEAP32[$ss1 + 64 >> 2] = 812;
    HEAP32[$139 >> 2] = 792;
    HEAP32[$140 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($149);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($140);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($138);
    $$7 = $$4;
    $$720 = $$417;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i34 = $eh$lpad$body$i31$index16Z2D;
   $$01$i33 = $eh$lpad$body$i31$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($138);
  $eh$lpad$body22$index9Z2D = $$0$i34;
  $eh$lpad$body22$indexZ2D = $$01$i33;
 } else if ((label | 0) == 67) {
  $211 = $ss2 + 64 | 0;
  $212 = $ss2 + 8 | 0;
  HEAP32[$212 >> 2] = 792;
  $213 = $ss2 + 12 | 0;
  HEAP32[$ss2 >> 2] = 940;
  HEAP32[$211 >> 2] = 960;
  HEAP32[$ss2 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss2 + 64 | 0, $213 | 0);
  $216 = __THREW__;
  __THREW__ = 0;
  if ($216 & 1) {
   $228 = ___cxa_find_matching_catch() | 0;
   $$0$i52 = tempRet0;
   $$01$i51 = $228;
  } else {
   HEAP32[$ss2 + 136 >> 2] = 0;
   HEAP32[$ss2 + 140 >> 2] = -1;
   HEAP32[$ss2 >> 2] = 772;
   HEAP32[$211 >> 2] = 812;
   HEAP32[$212 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $213 | 0);
   $220 = __THREW__;
   __THREW__ = 0;
   do if ($220 & 1) {
    $230 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i49$index21Z2D = tempRet0;
    $eh$lpad$body$i49$indexZ2D = $230;
   } else {
    HEAP32[$213 >> 2] = 1104;
    $222 = $ss2 + 44 | 0;
    HEAP32[$222 + 0 >> 2] = 0;
    HEAP32[$222 + 4 >> 2] = 0;
    HEAP32[$222 + 8 >> 2] = 0;
    HEAP32[$222 + 12 >> 2] = 0;
    HEAP32[$ss2 + 60 >> 2] = 24;
    HEAP32[$1 + 0 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $213 | 0, $1 | 0);
    $224 = __THREW__;
    __THREW__ = 0;
    if ($224 & 1) {
     $226 = ___cxa_find_matching_catch() | 0;
     $227 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($222);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($213);
     $eh$lpad$body$i49$index21Z2D = $227;
     $eh$lpad$body$i49$indexZ2D = $226;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
    __THREW__ = 0;
    $233 = invoke_iiii(25, $ss2 + 8 | 0, 144, 47) | 0;
    $234 = __THREW__;
    __THREW__ = 0;
    L106 : do if ($234 & 1) label = 82; else {
     HEAP8[$0 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(25, $233 | 0, $0 | 0, 1) | 0;
     $238 = __THREW__;
     __THREW__ = 0;
     if ($238 & 1) label = 82; else {
      $240 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $9 | 0, $213 | 0);
      $241 = __THREW__;
      __THREW__ = 0;
      do if ($241 & 1) {
       $276 = ___cxa_find_matching_catch() | 0;
       $$51878 = $276;
       $$579 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $240 | 0, $filename | 0);
       $243 = __THREW__;
       __THREW__ = 0;
       if ($243 & 1) $$0 = 1; else {
        $246 = $begin;
        $251 = HEAP32[$246 + 4 >> 2] | 0;
        $252 = $240 + 12 | 0;
        HEAP32[$252 >> 2] = HEAP32[$246 >> 2];
        HEAP32[$252 + 4 >> 2] = $251;
        $257 = $begin;
        $262 = HEAP32[$257 + 4 >> 2] | 0;
        $263 = $240 + 20 | 0;
        HEAP32[$263 >> 2] = HEAP32[$257 >> 2];
        HEAP32[$263 + 4 >> 2] = $262;
        __THREW__ = 0;
        invoke_vii(40, $240 + 28 | 0, $9 | 0);
        $268 = __THREW__;
        __THREW__ = 0;
        if ($268 & 1) {
         $270 = ___cxa_find_matching_catch() | 0;
         $271 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($240);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
         $$51878 = $270;
         $$579 = $271;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $240 | 0, 48, 178);
        $272 = __THREW__;
        __THREW__ = 0;
        if ($272 & 1) $$0 = 0; else {}
       }
       $278 = ___cxa_find_matching_catch() | 0;
       $279 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
       if ($$0) {
        $$51878 = $278;
        $$579 = $279;
       } else {
        $$6 = $279;
        $$619 = $278;
        break L106;
       }
      } while (0);
      ___cxa_free_exception($240 | 0);
      $$6 = $$579;
      $$619 = $$51878;
     }
    } while (0);
    if ((label | 0) == 82) {
     $274 = ___cxa_find_matching_catch() | 0;
     $$6 = tempRet0;
     $$619 = $274;
    }
    HEAP32[$ss2 >> 2] = 772;
    HEAP32[$ss2 + 64 >> 2] = 812;
    HEAP32[$212 >> 2] = 792;
    HEAP32[$213 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($222);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($213);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($211);
    $$7 = $$6;
    $$720 = $$619;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i52 = $eh$lpad$body$i49$index21Z2D;
   $$01$i51 = $eh$lpad$body$i49$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($211);
  $eh$lpad$body22$index9Z2D = $$0$i52;
  $eh$lpad$body22$indexZ2D = $$01$i51;
 } else if ((label | 0) == 90) {
  HEAP32[$c >> 2] = $290 + -1;
  STACKTOP = sp;
  return;
 }
 $$7 = $eh$lpad$body22$index9Z2D;
 $$720 = $eh$lpad$body22$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
 ___resumeException($$720 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, $loc, $a, $b) {
 $this = $this | 0;
 $loc = $loc | 0;
 $a = $a | 0;
 $b = $b | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i2$i$i$i$i = 0, $$0$i$i4$i$i$i$i = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i6$i$i$i$i = 0, $$03 = 0, $$1 = 0, $$12 = 0, $$14 = 0, $$idx$val$i17 = 0, $$idx$val23 = 0, $$idx1$val$i$i$i$i$i = 0, $$idx8$val = 0, $$idx9 = 0, $$idx9$val = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $100 = 0, $104 = 0, $106 = 0, $109 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $133 = 0, $135 = 0, $146 = 0, $154 = 0, $155 = 0, $160 = 0, $162 = 0, $165 = 0, $167 = 0, $169 = 0, $174 = 0, $175 = 0, $179 = 0, $18 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $19 = 0, $190 = 0, $192 = 0, $203 = 0, $210 = 0, $211 = 0, $213 = 0, $215 = 0, $216 = 0, $217 = 0, $219 = 0, $220 = 0, $222 = 0, $224 = 0, $226 = 0, $227 = 0, $229 = 0, $231 = 0, $234 = 0, $235 = 0, $237 = 0, $240 = 0, $242 = 0, $245 = 0, $255 = 0, $256 = 0, $258 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $265 = 0, $27 = 0, $270 = 0, $272 = 0, $277 = 0, $279 = 0, $28 = 0, $287 = 0, $288 = 0, $31 = 0, $35 = 0, $38 = 0, $42 = 0, $44 = 0, $45 = 0, $48 = 0, $5 = 0, $52 = 0, $55 = 0, $59 = 0, $7 = 0, $73 = 0, $75 = 0, $76 = 0, $8 = 0, $83 = 0, $84 = 0, $88 = 0, $90 = 0, $95 = 0, $97 = 0, $__lhs_sz$03$i = 0, $__lp$04$i = 0, $__rp$05$i = 0, $__v$i$i$i = 0, $different$0$off0 = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $fields_a = 0, $fields_b = 0, $i$022 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $this$idx$val$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $__v$i$i$i = sp + 52 | 0;
 $fields_a = sp + 40 | 0;
 $fields_b = sp + 28 | 0;
 $0 = sp;
 $1 = HEAP32[$a >> 2] | 0;
 if (($1 | 0) != (HEAP32[$b >> 2] | 0)) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 switch ($1 | 0) {
 case 0:
  {
   $$1 = 1;
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 1:
  {
   $$1 = (HEAP8[$a + 8 >> 0] | 0) == (HEAP8[$b + 8 >> 0] | 0);
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 19:
  {
   $258 = HEAP32[$a + 8 >> 2] | 0;
   $260 = HEAP32[$b + 8 >> 2] | 0;
   $261 = $258 + 8 | 0;
   $262 = $260 + 8 | 0;
   $263 = HEAP8[$261 >> 0] | 0;
   $265 = ($263 & 1) == 0;
   if ($265) $277 = ($263 & 255) >>> 1; else $277 = HEAP32[$258 + 12 >> 2] | 0;
   $270 = HEAP8[$262 >> 0] | 0;
   $272 = ($270 & 1) == 0;
   if ($272) $279 = ($270 & 255) >>> 1; else $279 = HEAP32[$260 + 12 >> 2] | 0;
   if (($277 | 0) != ($279 | 0)) {
    $$1 = 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if ($265) $287 = $261 + 1 | 0; else $287 = HEAP32[$258 + 16 >> 2] | 0;
   if ($272) $288 = $262 + 1 | 0; else $288 = HEAP32[$260 + 16 >> 2] | 0;
   if (!$265) {
    $$1 = (_memcmp($287, $288, $277) | 0) == 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if (!$277) {
    $$1 = 1;
    STACKTOP = sp;
    return $$1 | 0;
   } else {
    $__lhs_sz$03$i = $277;
    $__lp$04$i = $287;
    $__rp$05$i = $288;
   }
   while (1) {
    if ((HEAP8[$__lp$04$i >> 0] | 0) != (HEAP8[$__rp$05$i >> 0] | 0)) {
     $$1 = 0;
     label = 90;
     break;
    }
    $__lhs_sz$03$i = $__lhs_sz$03$i + -1 | 0;
    if (!$__lhs_sz$03$i) {
     $$1 = 1;
     label = 90;
     break;
    } else {
     $__lp$04$i = $__lp$04$i + 1 | 0;
     $__rp$05$i = $__rp$05$i + 1 | 0;
    }
   }
   if ((label | 0) == 90) {
    STACKTOP = sp;
    return $$1 | 0;
   }
   break;
  }
 case 18:
  {
   $73 = HEAP32[$a + 8 >> 2] | 0;
   $75 = HEAP32[$b + 8 >> 2] | 0;
   __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb($fields_a, $73);
   __THREW__ = 0;
   invoke_vii(60, $fields_b | 0, $75 | 0);
   $76 = __THREW__;
   __THREW__ = 0;
   if ($76 & 1) {
    $113 = ___cxa_find_matching_catch() | 0;
    $$12 = $113;
    $$14 = tempRet0;
    $255 = $fields_a + 4 | 0;
    $256 = HEAP32[$255 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, $256);
    ___resumeException($$12 | 0);
   }
   L46 : do if ((HEAP32[$fields_a + 8 >> 2] | 0) == (HEAP32[$fields_b + 8 >> 2] | 0)) {
    $83 = HEAP32[$fields_a >> 2] | 0;
    $84 = $fields_a + 4 | 0;
    if (($83 | 0) != ($84 | 0)) {
     $88 = $83;
     $90 = HEAP32[$fields_b >> 2] | 0;
     while (1) {
      if ((HEAP32[$88 + 16 >> 2] | 0) != (HEAP32[$90 + 16 >> 2] | 0)) {
       $$0 = 0;
       break L46;
      }
      $95 = HEAP32[$88 + 4 >> 2] | 0;
      if (!$95) {
       $$0$i$i4$i$i$i$i = $88;
       while (1) {
        $100 = HEAP32[$$0$i$i4$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$100 >> 2] | 0) == ($$0$i$i4$i$i$i$i | 0)) {
         $$01$i$i6$i$i$i$i = $100;
         break;
        } else $$0$i$i4$i$i$i$i = $100;
       }
      } else {
       $$0$i$i$i2$i$i$i$i = $95;
       while (1) {
        $97 = HEAP32[$$0$i$i$i2$i$i$i$i >> 2] | 0;
        if (!$97) {
         $$01$i$i6$i$i$i$i = $$0$i$i$i2$i$i$i$i;
         break;
        } else $$0$i$i$i2$i$i$i$i = $97;
       }
      }
      $104 = HEAP32[$90 + 4 >> 2] | 0;
      if (!$104) {
       $$0$i$i$i$i$i$i = $90;
       while (1) {
        $109 = HEAP32[$$0$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$109 >> 2] | 0) == ($$0$i$i$i$i$i$i | 0)) {
         $$01$i$i$i$i$i$i = $109;
         break;
        } else $$0$i$i$i$i$i$i = $109;
       }
      } else {
       $$0$i$i$i$i$i$i$i = $104;
       while (1) {
        $106 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
        if (!$106) {
         $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
         break;
        } else $$0$i$i$i$i$i$i$i = $106;
       }
      }
      if (($$01$i$i6$i$i$i$i | 0) == ($84 | 0)) break; else {
       $88 = $$01$i$i6$i$i$i$i;
       $90 = $$01$i$i$i$i$i$i;
      }
     }
    }
    $119 = $this + 72 | 0;
    __THREW__ = 0;
    invoke_vii(40, $0 | 0, $loc | 0);
    $120 = __THREW__;
    __THREW__ = 0;
    L68 : do if ($120 & 1) {
     $117 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $117;
     $lpad$phi$index2 = tempRet0;
     label = 33;
    } else {
     $122 = $0 + 12 | 0;
     $123 = $loc + 12 | 0;
     HEAP32[$122 + 0 >> 2] = HEAP32[$123 + 0 >> 2];
     HEAP32[$122 + 4 >> 2] = HEAP32[$123 + 4 >> 2];
     HEAP32[$122 + 8 >> 2] = HEAP32[$123 + 8 >> 2];
     HEAP32[$122 + 12 >> 2] = HEAP32[$123 + 12 >> 2];
     $124 = $this + 84 | 0;
     $125 = $this + 88 | 0;
     $126 = HEAP32[$125 >> 2] | 0;
     $127 = $this + 92 | 0;
     $128 = HEAP32[$127 >> 2] | 0;
     L70 : do if ($126 >>> 0 < $128 >>> 0) {
      if (!$126) $154 = 0; else {
       HEAP32[$126 >> 2] = 7;
       HEAP32[$126 + 4 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(40, $126 + 8 | 0, $0 | 0);
       $133 = __THREW__;
       __THREW__ = 0;
       if ($133 & 1) {
        label = 61;
        break;
       }
       $135 = $126 + 20 | 0;
       HEAP32[$135 + 0 >> 2] = HEAP32[$122 + 0 >> 2];
       HEAP32[$135 + 4 >> 2] = HEAP32[$122 + 4 >> 2];
       HEAP32[$135 + 8 >> 2] = HEAP32[$122 + 8 >> 2];
       HEAP32[$135 + 12 >> 2] = HEAP32[$122 + 12 >> 2];
       HEAP8[$126 + 36 >> 0] = 0;
       HEAP32[$126 + 72 >> 2] = 0;
       HEAP32[$126 + 80 >> 2] = 0;
       HEAP32[$126 + 84 >> 2] = 0;
       HEAP32[$126 + 76 >> 2] = $126 + 80;
       HEAP32[$126 + 96 >> 2] = 0;
       HEAP32[$126 + 100 >> 2] = 0;
       HEAP32[$126 + 92 >> 2] = $126 + 96;
       $146 = $126 + 104 | 0;
       HEAP32[$126 + 132 >> 2] = 0;
       HEAP32[$126 + 136 >> 2] = 0;
       HEAP32[$146 + 0 >> 2] = 0;
       HEAP32[$146 + 4 >> 2] = 0;
       HEAP32[$146 + 8 >> 2] = 0;
       HEAP32[$146 + 12 >> 2] = 0;
       HEAP32[$146 + 16 >> 2] = 0;
       HEAP32[$146 + 20 >> 2] = 0;
       HEAP32[$126 + 128 >> 2] = $126 + 132;
       HEAP32[$126 + 40 >> 2] = 0;
       HEAP32[$126 + 56 >> 2] = 0;
       $154 = HEAP32[$125 >> 2] | 0;
      }
      HEAP32[$125 >> 2] = $154 + 144;
      label = 53;
     } else {
      $155 = $this + 92 | 0;
      $this$idx2$val$i$i$i = HEAP32[$124 >> 2] | 0;
      $160 = (($126 - $this$idx2$val$i$i$i | 0) / 144 | 0) + 1 | 0;
      if ($160 >>> 0 > 29826161) {
       __THREW__ = 0;
       invoke_vi(181, $124 | 0);
       $162 = __THREW__;
       __THREW__ = 0;
       if ($162 & 1) {
        label = 61;
        break;
       }
       $$idx1$val$i$i$i$i$i = HEAP32[$127 >> 2] | 0;
       $this$idx$val$i$i$i = HEAP32[$124 >> 2] | 0;
      } else {
       $$idx1$val$i$i$i$i$i = $128;
       $this$idx$val$i$i$i = $this$idx2$val$i$i$i;
      }
      $165 = $this$idx$val$i$i$i;
      $167 = ($$idx1$val$i$i$i$i$i - $165 | 0) / 144 | 0;
      if ($167 >>> 0 < 14913080) {
       $169 = $167 << 1;
       $$0$i$i$i$i = $169 >>> 0 < $160 >>> 0 ? $160 : $169;
      } else $$0$i$i$i$i = 29826161;
      $174 = ((HEAP32[$125 >> 2] | 0) - $165 | 0) / 144 | 0;
      $175 = $__v$i$i$i + 12 | 0;
      HEAP32[$175 >> 2] = 0;
      HEAP32[$__v$i$i$i + 16 >> 2] = $155;
      if (!$$0$i$i$i$i) $182 = 0; else {
       __THREW__ = 0;
       $179 = invoke_ii(67, $$0$i$i$i$i * 144 | 0) | 0;
       $180 = __THREW__;
       __THREW__ = 0;
       if ($180 & 1) {
        label = 61;
        break;
       }
       $182 = $179;
      }
      HEAP32[$__v$i$i$i >> 2] = $182;
      $183 = $182 + ($174 * 144 | 0) | 0;
      $184 = $__v$i$i$i + 8 | 0;
      HEAP32[$184 >> 2] = $183;
      HEAP32[$__v$i$i$i + 4 >> 2] = $183;
      HEAP32[$175 >> 2] = $182 + ($$0$i$i$i$i * 144 | 0);
      do if ($183) {
       HEAP32[$183 >> 2] = 7;
       HEAP32[$182 + ($174 * 144 | 0) + 4 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(40, $182 + ($174 * 144 | 0) + 8 | 0, $0 | 0);
       $190 = __THREW__;
       __THREW__ = 0;
       if ($190 & 1) {
        $210 = ___cxa_find_matching_catch() | 0;
        $211 = tempRet0;
        __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i$i);
        $eh$lpad$body$index7Z2D = $211;
        $eh$lpad$body$indexZ2D = $210;
        break L70;
       } else {
        $192 = $182 + ($174 * 144 | 0) + 20 | 0;
        HEAP32[$192 + 0 >> 2] = HEAP32[$122 + 0 >> 2];
        HEAP32[$192 + 4 >> 2] = HEAP32[$122 + 4 >> 2];
        HEAP32[$192 + 8 >> 2] = HEAP32[$122 + 8 >> 2];
        HEAP32[$192 + 12 >> 2] = HEAP32[$122 + 12 >> 2];
        HEAP8[$182 + ($174 * 144 | 0) + 36 >> 0] = 0;
        HEAP32[$182 + ($174 * 144 | 0) + 72 >> 2] = 0;
        HEAP32[$182 + ($174 * 144 | 0) + 80 >> 2] = 0;
        HEAP32[$182 + ($174 * 144 | 0) + 84 >> 2] = 0;
        HEAP32[$182 + ($174 * 144 | 0) + 76 >> 2] = $182 + ($174 * 144 | 0) + 80;
        HEAP32[$182 + ($174 * 144 | 0) + 96 >> 2] = 0;
        HEAP32[$182 + ($174 * 144 | 0) + 100 >> 2] = 0;
        HEAP32[$182 + ($174 * 144 | 0) + 92 >> 2] = $182 + ($174 * 144 | 0) + 96;
        $203 = $182 + ($174 * 144 | 0) + 104 | 0;
        HEAP32[$182 + ($174 * 144 | 0) + 132 >> 2] = 0;
        HEAP32[$182 + ($174 * 144 | 0) + 136 >> 2] = 0;
        HEAP32[$203 + 0 >> 2] = 0;
        HEAP32[$203 + 4 >> 2] = 0;
        HEAP32[$203 + 8 >> 2] = 0;
        HEAP32[$203 + 12 >> 2] = 0;
        HEAP32[$203 + 16 >> 2] = 0;
        HEAP32[$203 + 20 >> 2] = 0;
        HEAP32[$182 + ($174 * 144 | 0) + 128 >> 2] = $182 + ($174 * 144 | 0) + 132;
        HEAP32[$182 + ($174 * 144 | 0) + 40 >> 2] = 0;
        HEAP32[$182 + ($174 * 144 | 0) + 56 >> 2] = 0;
        break;
       }
      } while (0);
      HEAP32[$184 >> 2] = $182 + (($174 + 1 | 0) * 144 | 0);
      __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($124, $__v$i$i$i);
      __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i$i);
      label = 53;
     } while (0);
     if ((label | 0) == 53) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
      $213 = HEAP32[$fields_a >> 2] | 0;
      L97 : do if (($213 | 0) == ($84 | 0)) $different$0$off0 = 1; else {
       $215 = $this + 56 | 0;
       $217 = $213;
       while (1) {
        $216 = $217 + 16 | 0;
        __THREW__ = 0;
        $219 = invoke_iiiii(8, $this | 0, $loc | 0, $73 | 0, HEAP32[$216 >> 2] | 0) | 0;
        $220 = __THREW__;
        __THREW__ = 0;
        if ($220 & 1) break;
        __THREW__ = 0;
        invoke_vii(58, $this | 0, $219 | 0);
        $222 = __THREW__;
        __THREW__ = 0;
        if ($222 & 1) break;
        __ZN12_GLOBAL__N_15Stack3popEv($119);
        $224 = (HEAP32[$125 >> 2] | 0) + -104 | 0;
        HEAP32[$224 + 0 >> 2] = HEAP32[$215 + 0 >> 2];
        HEAP32[$224 + 4 >> 2] = HEAP32[$215 + 4 >> 2];
        HEAP32[$224 + 8 >> 2] = HEAP32[$215 + 8 >> 2];
        HEAP32[$224 + 12 >> 2] = HEAP32[$215 + 12 >> 2];
        __THREW__ = 0;
        $226 = invoke_iiiii(8, $this | 0, $loc | 0, $75 | 0, HEAP32[$216 >> 2] | 0) | 0;
        $227 = __THREW__;
        __THREW__ = 0;
        if ($227 & 1) break;
        __THREW__ = 0;
        invoke_vii(58, $this | 0, $226 | 0);
        $229 = __THREW__;
        __THREW__ = 0;
        if ($229 & 1) break;
        __ZN12_GLOBAL__N_15Stack3popEv($119);
        $231 = (HEAP32[$125 >> 2] | 0) + -88 | 0;
        HEAP32[$231 + 0 >> 2] = HEAP32[$215 + 0 >> 2];
        HEAP32[$231 + 4 >> 2] = HEAP32[$215 + 4 >> 2];
        HEAP32[$231 + 8 >> 2] = HEAP32[$215 + 8 >> 2];
        HEAP32[$231 + 12 >> 2] = HEAP32[$215 + 12 >> 2];
        $$idx$val$i17 = HEAP32[$125 >> 2] | 0;
        __THREW__ = 0;
        $234 = invoke_iiiii(9, $this | 0, $loc | 0, $$idx$val$i17 + -104 | 0, $$idx$val$i17 + -88 | 0) | 0;
        $235 = __THREW__;
        __THREW__ = 0;
        if ($235 & 1) break;
        if (!$234) {
         $different$0$off0 = 0;
         break L97;
        }
        $240 = HEAP32[$217 + 4 >> 2] | 0;
        if (!$240) {
         $$0$i$i = $217;
         while (1) {
          $245 = HEAP32[$$0$i$i + 8 >> 2] | 0;
          if ((HEAP32[$245 >> 2] | 0) == ($$0$i$i | 0)) {
           $$01$i$i = $245;
           break;
          } else $$0$i$i = $245;
         }
        } else {
         $$0$i$i$i = $240;
         while (1) {
          $242 = HEAP32[$$0$i$i$i >> 2] | 0;
          if (!$242) {
           $$01$i$i = $$0$i$i$i;
           break;
          } else $$0$i$i$i = $242;
         }
        }
        if (($$01$i$i | 0) == ($84 | 0)) {
         $different$0$off0 = 1;
         break L97;
        } else $217 = $$01$i$i;
       }
       $115 = ___cxa_find_matching_catch() | 0;
       $lpad$phi$index = $115;
       $lpad$phi$index2 = tempRet0;
       label = 33;
       break L68;
      } while (0);
      __ZN12_GLOBAL__N_15Stack3popEv($119);
      $$0 = $different$0$off0;
      break L46;
     } else if ((label | 0) == 61) {
      $237 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$index7Z2D = tempRet0;
      $eh$lpad$body$indexZ2D = $237;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     $$01 = $eh$lpad$body$indexZ2D;
     $$03 = $eh$lpad$body$index7Z2D;
    } while (0);
    if ((label | 0) == 33) {
     $$01 = $lpad$phi$index;
     $$03 = $lpad$phi$index2;
    }
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_b, HEAP32[$fields_b + 4 >> 2] | 0);
    $$12 = $$01;
    $$14 = $$03;
    $255 = $fields_a + 4 | 0;
    $256 = HEAP32[$255 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, $256);
    ___resumeException($$12 | 0);
   } else $$0 = 0; while (0);
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_b, HEAP32[$fields_b + 4 >> 2] | 0);
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, HEAP32[$fields_a + 4 >> 2] | 0);
   $$1 = $$0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 16:
  {
   $5 = HEAP32[$a + 8 >> 2] | 0;
   $7 = HEAP32[$b + 8 >> 2] | 0;
   $8 = $5 + 8 | 0;
   $$idx8$val = HEAP32[$8 >> 2] | 0;
   $$idx9 = $5 + 12 | 0;
   $$idx9$val = HEAP32[$$idx9 >> 2] | 0;
   $12 = $7 + 8 | 0;
   if (($$idx9$val - $$idx8$val | 0) != ((HEAP32[$7 + 12 >> 2] | 0) - (HEAP32[$12 >> 2] | 0) | 0)) {
    $$1 = 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if (($$idx9$val | 0) == ($$idx8$val | 0)) {
    $$1 = 1;
    STACKTOP = sp;
    return $$1 | 0;
   }
   $18 = $this + 72 | 0;
   $19 = $this + 56 | 0;
   $$idx$val23 = $$idx8$val;
   $i$022 = 0;
   while (1) {
    $27 = HEAP32[$$idx$val23 + ($i$022 << 2) >> 2] | 0;
    $28 = $27 + 5 | 0;
    if (!(HEAP8[$28 >> 0] | 0)) {
     $31 = $27 + 40 | 0;
     $35 = $27 + 28 | 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($18, $loc, $27, HEAP32[$31 >> 2] | 0, HEAP32[$27 + 44 >> 2] | 0, $35);
     __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, HEAP32[$27 + 48 >> 2] | 0);
     __ZN12_GLOBAL__N_15Stack3popEv($18);
     $38 = $27 + 8 | 0;
     HEAP32[$38 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
     HEAP32[$38 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
     HEAP32[$38 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
     HEAP32[$38 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
     HEAP8[$28 >> 0] = 1;
     HEAP32[$31 >> 2] = 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($35, HEAP32[$27 + 32 >> 2] | 0);
     HEAP32[$27 + 36 >> 2] = 0;
     $42 = $27 + 32 | 0;
     HEAP32[$35 >> 2] = $42;
     HEAP32[$42 >> 2] = 0;
    }
    $44 = HEAP32[(HEAP32[$12 >> 2] | 0) + ($i$022 << 2) >> 2] | 0;
    $45 = $44 + 5 | 0;
    if (!(HEAP8[$45 >> 0] | 0)) {
     $48 = $44 + 40 | 0;
     $52 = $44 + 28 | 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($18, $loc, $44, HEAP32[$48 >> 2] | 0, HEAP32[$44 + 44 >> 2] | 0, $52);
     __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, HEAP32[$44 + 48 >> 2] | 0);
     __ZN12_GLOBAL__N_15Stack3popEv($18);
     $55 = $44 + 8 | 0;
     HEAP32[$55 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
     HEAP32[$55 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
     HEAP32[$55 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
     HEAP32[$55 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
     HEAP8[$45 >> 0] = 1;
     HEAP32[$48 >> 2] = 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($52, HEAP32[$44 + 32 >> 2] | 0);
     HEAP32[$44 + 36 >> 2] = 0;
     $59 = $44 + 32 | 0;
     HEAP32[$52 >> 2] = $59;
     HEAP32[$59 >> 2] = 0;
     $$pre$phiZ2D = $55;
    } else $$pre$phiZ2D = $44 + 8 | 0;
    $i$022 = $i$022 + 1 | 0;
    if (!(__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, $loc, $27 + 8 | 0, $$pre$phiZ2D) | 0)) {
     $$1 = 0;
     label = 90;
     break;
    }
    $$idx$val23 = HEAP32[$8 >> 2] | 0;
    if ($i$022 >>> 0 >= (HEAP32[$$idx9 >> 2] | 0) - $$idx$val23 >> 2 >>> 0) {
     $$1 = 1;
     label = 90;
     break;
    }
   }
   if ((label | 0) == 90) {
    STACKTOP = sp;
    return $$1 | 0;
   }
   break;
  }
 case 2:
  {
   $$1 = +HEAPF64[$a + 8 >> 3] == +HEAPF64[$b + 8 >> 3];
   STACKTOP = sp;
   return $$1 | 0;
  }
 default:
  {
   $$1 = 0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 }
 return 0;
}

function __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($this, $loc, $context, $self, $offset, $up_values) {
 $this = $this | 0;
 $loc = $loc | 0;
 $context = $context | 0;
 $self = $self | 0;
 $offset = $offset | 0;
 $up_values = $up_values | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i18 = 0, $$0$i$i$i10$i$i$i = 0, $$0$i$i$i19 = 0, $$0$i$i12$i$i$i = 0, $$0$i$i23$i$i$i = 0, $$0$i$i6$i$i$i = 0, $$0$i$i7$i$i$i = 0, $$0$i1$i$i$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i14$i$i$i = 0, $$0122 = 0, $$0123 = 0, $$02 = 0, $$024 = 0, $$025 = 0, $$idx$val$i = 0, $$idx$val$i13 = 0, $$idx$val$i132127 = 0, $$idx$val$i9 = 0, $$idx1$val$i$i$i$i = 0, $$idx2$i = 0, $$idx2$val$i = 0, $$idx3$i = 0, $$idx3$val$i = 0, $0 = 0, $101 = 0, $103 = 0, $108 = 0, $109 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $122 = 0, $124 = 0, $125 = 0, $136 = 0, $143 = 0, $151 = 0, $153 = 0, $154 = 0, $157 = 0, $158 = 0, $162 = 0, $165 = 0, $168 = 0, $172 = 0, $176 = 0, $177 = 0, $179 = 0, $18 = 0, $182 = 0, $184 = 0, $187 = 0, $191 = 0, $194 = 0, $196 = 0, $20 = 0, $200 = 0, $202 = 0, $203 = 0, $206 = 0, $208 = 0, $211 = 0, $215 = 0, $217 = 0, $220 = 0, $225 = 0, $226 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $236 = 0, $238 = 0, $239 = 0, $241 = 0, $243 = 0, $248 = 0, $249 = 0, $25 = 0, $255 = 0, $257 = 0, $260 = 0, $264 = 0, $266 = 0, $269 = 0, $27 = 0, $276 = 0, $28 = 0, $282 = 0, $284 = 0, $287 = 0, $291 = 0, $4 = 0, $43 = 0, $46 = 0, $51 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $82 = 0, $89 = 0, $90 = 0, $96 = 0, $99 = 0, $__cache$0$ph$i$i$i = 0, $__cache$013$i$i$i = 0, $__cache$2$lcssa$i$i$i = 0, $__first$0312$i$i$i = 0, $__first$04$ph$i$i$i = 0, $__first$046$i$i$i = 0, $__nd$0$in$i$i$i$i$i = 0, $__nd$0$in$i$i19$i$i$i = 0, $__t$idx$val$i$i = 0, $__v$i$i = 0, $__v$idx$val$i$i$i$i$i = 0, $__v$idx$val$i$i17$i$i$i = 0, $i$0$i = 0, $i$0$in$i = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, $this$idx2$val$i$i44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v$i$i = sp + 12 | 0;
 $0 = sp;
 $$idx2$i = $this + 12 | 0;
 $$idx2$val$i = HEAP32[$$idx2$i >> 2] | 0;
 $$idx3$i = $this + 16 | 0;
 $$idx3$val$i = HEAP32[$$idx3$i >> 2] | 0;
 $4 = ($$idx3$val$i - $$idx2$val$i | 0) / 144 | 0;
 $i$0$in$i = $4;
 while (1) {
  $i$0$i = $i$0$in$i + -1 | 0;
  if (($i$0$i | 0) <= -1) {
   $65 = $$idx3$val$i;
   $this$idx2$val$i$i = $$idx2$val$i;
   break;
  }
  $7 = HEAP32[$$idx2$val$i + ($i$0$i * 144 | 0) >> 2] | 0;
  if (($7 | 0) == 11) $i$0$in$i = $i$0$i; else if (($7 | 0) == 5) {
   label = 4;
   break;
  } else {
   $65 = $$idx3$val$i;
   $this$idx2$val$i$i = $$idx2$val$i;
   break;
  }
 }
 if ((label | 0) == 4) if (!(HEAP8[$$idx2$val$i + ($i$0$i * 144 | 0) + 36 >> 0] | 0)) {
  if ($4 >>> 0 > $i$0$i >>> 0) {
   $18 = $$idx3$val$i;
   while (1) {
    $12 = $18 + -144 | 0;
    $20 = $18;
    do {
     HEAP32[$$idx3$i >> 2] = $20 + -144;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($20 + -16 | 0, HEAP32[$20 + -12 >> 2] | 0);
     $25 = HEAP32[$20 + -40 >> 2] | 0;
     if ($25) {
      $27 = $20 + -36 | 0;
      $28 = HEAP32[$27 >> 2] | 0;
      if (($28 | 0) != ($25 | 0)) HEAP32[$27 >> 2] = $28 + (~(($28 + -4 - $25 | 0) >>> 2) << 2);
      __ZdlPv($25);
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($20 + -52 | 0, HEAP32[$20 + -48 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($20 + -68 | 0, HEAP32[$20 + -64 >> 2] | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20 + -136 | 0);
     $20 = HEAP32[$$idx3$i >> 2] | 0;
    } while (($20 | 0) != ($12 | 0));
    $$idx$val$i = HEAP32[$$idx2$i >> 2] | 0;
    if ((($12 - $$idx$val$i | 0) / 144 | 0) >>> 0 > $i$0$i >>> 0) $18 = $12; else {
     $291 = $12;
     $this$idx2$val$i$i44 = $$idx$val$i;
     break;
    }
   }
  } else {
   $291 = $$idx3$val$i;
   $this$idx2$val$i$i44 = $$idx2$val$i;
  }
  $43 = $this + 4 | 0;
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + -1;
  $65 = $291;
  $this$idx2$val$i$i = $this$idx2$val$i$i44;
 } else {
  $65 = $$idx3$val$i;
  $this$idx2$val$i$i = $$idx2$val$i;
 }
 $46 = $this + 4 | 0;
 if ((HEAP32[$46 >> 2] | 0) >>> 0 >= (HEAP32[$this + 8 >> 2] | 0) >>> 0) {
  $51 = ___cxa_allocate_exception(24) | 0;
  __THREW__ = 0;
  invoke_viii(3, $0 | 0, 37544, 26);
  $52 = __THREW__;
  __THREW__ = 0;
  if ($52 & 1) {
   $58 = ___cxa_find_matching_catch() | 0;
   $$0123 = tempRet0;
   $$025 = $58;
  } else {
   __THREW__ = 0;
   invoke_viiii(17, $51 | 0, $this | 0, $loc | 0, $0 | 0);
   $54 = __THREW__;
   __THREW__ = 0;
   if ($54 & 1) $$02 = 1; else {
    __THREW__ = 0;
    invoke_viii(4, $51 | 0, 37312, 185);
    $56 = __THREW__;
    __THREW__ = 0;
    if ($56 & 1) $$02 = 0; else {}
   }
   $60 = ___cxa_find_matching_catch() | 0;
   $61 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   if ($$02) {
    $$0123 = $61;
    $$025 = $60;
   } else {
    $$0122 = $61;
    $$024 = $60;
    ___resumeException($$024 | 0);
   }
  }
  ___cxa_free_exception($51 | 0);
  $$0122 = $$0123;
  $$024 = $$025;
  ___resumeException($$024 | 0);
 }
 $62 = $this + 12 | 0;
 $63 = $this + 20 | 0;
 $64 = HEAP32[$63 >> 2] | 0;
 if ($65 >>> 0 < $64 >>> 0) {
  if (!$65) $90 = 0; else {
   HEAP32[$65 >> 2] = 5;
   HEAP32[$65 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($65 + 8 | 0, $loc);
   $70 = $65 + 20 | 0;
   $71 = $loc + 12 | 0;
   HEAP32[$70 + 0 >> 2] = HEAP32[$71 + 0 >> 2];
   HEAP32[$70 + 4 >> 2] = HEAP32[$71 + 4 >> 2];
   HEAP32[$70 + 8 >> 2] = HEAP32[$71 + 8 >> 2];
   HEAP32[$70 + 12 >> 2] = HEAP32[$71 + 12 >> 2];
   HEAP8[$65 + 36 >> 0] = 0;
   HEAP32[$65 + 72 >> 2] = 0;
   HEAP32[$65 + 80 >> 2] = 0;
   HEAP32[$65 + 84 >> 2] = 0;
   HEAP32[$65 + 76 >> 2] = $65 + 80;
   HEAP32[$65 + 96 >> 2] = 0;
   HEAP32[$65 + 100 >> 2] = 0;
   HEAP32[$65 + 92 >> 2] = $65 + 96;
   $82 = $65 + 104 | 0;
   HEAP32[$65 + 132 >> 2] = 0;
   HEAP32[$65 + 136 >> 2] = 0;
   HEAP32[$82 + 0 >> 2] = 0;
   HEAP32[$82 + 4 >> 2] = 0;
   HEAP32[$82 + 8 >> 2] = 0;
   HEAP32[$82 + 12 >> 2] = 0;
   HEAP32[$82 + 16 >> 2] = 0;
   HEAP32[$82 + 20 >> 2] = 0;
   HEAP32[$65 + 128 >> 2] = $65 + 132;
   HEAP32[$65 + 40 >> 2] = 0;
   HEAP32[$65 + 56 >> 2] = 0;
   $90 = HEAP32[$$idx3$i >> 2] | 0;
  }
  $89 = $90 + 144 | 0;
  HEAP32[$$idx3$i >> 2] = $89;
  $$idx$val$i9 = $89;
 } else {
  $96 = (($65 - $this$idx2$val$i$i | 0) / 144 | 0) + 1 | 0;
  if ($96 >>> 0 > 29826161) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($62);
   $$idx1$val$i$i$i$i = HEAP32[$63 >> 2] | 0;
   $this$idx$val$i$i = HEAP32[$62 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i = $64;
   $this$idx$val$i$i = $this$idx2$val$i$i;
  }
  $99 = $this$idx$val$i$i;
  $101 = ($$idx1$val$i$i$i$i - $99 | 0) / 144 | 0;
  if ($101 >>> 0 < 14913080) {
   $103 = $101 << 1;
   $$0$i$i$i = $103 >>> 0 < $96 >>> 0 ? $96 : $103;
  } else $$0$i$i$i = 29826161;
  $108 = ((HEAP32[$$idx3$i >> 2] | 0) - $99 | 0) / 144 | 0;
  $109 = $__v$i$i + 12 | 0;
  HEAP32[$109 >> 2] = 0;
  HEAP32[$__v$i$i + 16 >> 2] = $this + 20;
  if (!$$0$i$i$i) $114 = 0; else $114 = __Znwj($$0$i$i$i * 144 | 0) | 0;
  HEAP32[$__v$i$i >> 2] = $114;
  $115 = $114 + ($108 * 144 | 0) | 0;
  $116 = $__v$i$i + 8 | 0;
  HEAP32[$116 >> 2] = $115;
  HEAP32[$__v$i$i + 4 >> 2] = $115;
  HEAP32[$109 >> 2] = $114 + ($$0$i$i$i * 144 | 0);
  do if ($115) {
   HEAP32[$115 >> 2] = 5;
   HEAP32[$114 + ($108 * 144 | 0) + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(40, $114 + ($108 * 144 | 0) + 8 | 0, $loc | 0);
   $122 = __THREW__;
   __THREW__ = 0;
   if ($122 & 1) {
    $143 = ___cxa_find_matching_catch() | 0;
    __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
    ___resumeException($143 | 0);
   } else {
    $124 = $114 + ($108 * 144 | 0) + 20 | 0;
    $125 = $loc + 12 | 0;
    HEAP32[$124 + 0 >> 2] = HEAP32[$125 + 0 >> 2];
    HEAP32[$124 + 4 >> 2] = HEAP32[$125 + 4 >> 2];
    HEAP32[$124 + 8 >> 2] = HEAP32[$125 + 8 >> 2];
    HEAP32[$124 + 12 >> 2] = HEAP32[$125 + 12 >> 2];
    HEAP8[$114 + ($108 * 144 | 0) + 36 >> 0] = 0;
    HEAP32[$114 + ($108 * 144 | 0) + 72 >> 2] = 0;
    HEAP32[$114 + ($108 * 144 | 0) + 80 >> 2] = 0;
    HEAP32[$114 + ($108 * 144 | 0) + 84 >> 2] = 0;
    HEAP32[$114 + ($108 * 144 | 0) + 76 >> 2] = $114 + ($108 * 144 | 0) + 80;
    HEAP32[$114 + ($108 * 144 | 0) + 96 >> 2] = 0;
    HEAP32[$114 + ($108 * 144 | 0) + 100 >> 2] = 0;
    HEAP32[$114 + ($108 * 144 | 0) + 92 >> 2] = $114 + ($108 * 144 | 0) + 96;
    $136 = $114 + ($108 * 144 | 0) + 104 | 0;
    HEAP32[$114 + ($108 * 144 | 0) + 132 >> 2] = 0;
    HEAP32[$114 + ($108 * 144 | 0) + 136 >> 2] = 0;
    HEAP32[$136 + 0 >> 2] = 0;
    HEAP32[$136 + 4 >> 2] = 0;
    HEAP32[$136 + 8 >> 2] = 0;
    HEAP32[$136 + 12 >> 2] = 0;
    HEAP32[$136 + 16 >> 2] = 0;
    HEAP32[$136 + 20 >> 2] = 0;
    HEAP32[$114 + ($108 * 144 | 0) + 128 >> 2] = $114 + ($108 * 144 | 0) + 132;
    HEAP32[$114 + ($108 * 144 | 0) + 40 >> 2] = 0;
    HEAP32[$114 + ($108 * 144 | 0) + 56 >> 2] = 0;
    break;
   }
  } while (0);
  HEAP32[$116 >> 2] = $114 + (($108 + 1 | 0) * 144 | 0);
  __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($62, $__v$i$i);
  __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
  $$idx$val$i9 = HEAP32[$$idx3$i >> 2] | 0;
 }
 HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + 1;
 HEAP32[$$idx$val$i9 + -28 >> 2] = $context;
 HEAP32[$$idx$val$i9 + -24 >> 2] = $self;
 HEAP32[$$idx$val$i9 + -20 >> 2] = $offset;
 $151 = $$idx$val$i9 + -16 | 0;
 L56 : do if (($151 | 0) != ($up_values | 0)) {
  $__t$idx$val$i$i = HEAP32[$up_values >> 2] | 0;
  $153 = $up_values + 4 | 0;
  $154 = $$idx$val$i9 + -8 | 0;
  L58 : do if (!(HEAP32[$154 >> 2] | 0)) $__first$04$ph$i$i$i = $__t$idx$val$i$i; else {
   $157 = HEAP32[$151 >> 2] | 0;
   $158 = $$idx$val$i9 + -12 | 0;
   HEAP32[$151 >> 2] = $158;
   HEAP32[(HEAP32[$158 >> 2] | 0) + 8 >> 2] = 0;
   HEAP32[$158 >> 2] = 0;
   HEAP32[$154 >> 2] = 0;
   $162 = HEAP32[$157 + 4 >> 2] | 0;
   if (!$162) $__cache$0$ph$i$i$i = $157; else $__cache$0$ph$i$i$i = $162;
   if (!$__cache$0$ph$i$i$i) $__first$04$ph$i$i$i = $__t$idx$val$i$i; else {
    $165 = $$idx$val$i9 + -12 | 0;
    $__cache$013$i$i$i = $__cache$0$ph$i$i$i;
    $__first$0312$i$i$i = $__t$idx$val$i$i;
    while (1) {
     if (($__first$0312$i$i$i | 0) == ($153 | 0)) break;
     $172 = $__cache$013$i$i$i + 16 | 0;
     HEAP32[$172 >> 2] = HEAP32[$__first$0312$i$i$i + 16 >> 2];
     HEAP32[$__cache$013$i$i$i + 20 >> 2] = HEAP32[$__first$0312$i$i$i + 20 >> 2];
     $176 = $__cache$013$i$i$i + 8 | 0;
     $177 = HEAP32[$176 >> 2] | 0;
     do if (!$177) $$0$i$i$i$i = 0; else {
      $179 = HEAP32[$177 >> 2] | 0;
      if (($179 | 0) == ($__cache$013$i$i$i | 0)) {
       HEAP32[$177 >> 2] = 0;
       $182 = HEAP32[$177 + 4 >> 2] | 0;
       if (!$182) {
        $$0$i$i$i$i = $177;
        break;
       } else $$0$i1$i$i$i$i = $182;
       while (1) {
        $184 = HEAP32[$$0$i1$i$i$i$i >> 2] | 0;
        if ($184) {
         $$0$i1$i$i$i$i = $184;
         continue;
        }
        $187 = HEAP32[$$0$i1$i$i$i$i + 4 >> 2] | 0;
        if (!$187) break; else $$0$i1$i$i$i$i = $187;
       }
       $$0$i$i$i$i = $$0$i1$i$i$i$i;
       break;
      } else {
       HEAP32[$177 + 4 >> 2] = 0;
       if (!$179) {
        $$0$i$i$i$i = $177;
        break;
       } else $$0$i$i7$i$i$i = $179;
       while (1) {
        $191 = HEAP32[$$0$i$i7$i$i$i >> 2] | 0;
        if ($191) {
         $$0$i$i7$i$i$i = $191;
         continue;
        }
        $194 = HEAP32[$$0$i$i7$i$i$i + 4 >> 2] | 0;
        if (!$194) break; else $$0$i$i7$i$i$i = $194;
       }
       $$0$i$i$i$i = $$0$i$i7$i$i$i;
       break;
      }
     } while (0);
     $196 = HEAP32[$165 >> 2] | 0;
     if (!$196) {
      $$0$i$i23$i$i$i = $158;
      $206 = $158;
     } else {
      $__v$idx$val$i$i17$i$i$i = HEAP32[$172 >> 2] | 0;
      $__nd$0$in$i$i19$i$i$i = $196;
      while (1) if ($__v$idx$val$i$i17$i$i$i >>> 0 < (HEAP32[$__nd$0$in$i$i19$i$i$i + 16 >> 2] | 0) >>> 0) {
       $200 = HEAP32[$__nd$0$in$i$i19$i$i$i >> 2] | 0;
       if (!$200) {
        $$0$i$i23$i$i$i = $__nd$0$in$i$i19$i$i$i;
        $206 = $__nd$0$in$i$i19$i$i$i;
        break;
       } else {
        $__nd$0$in$i$i19$i$i$i = $200;
        continue;
       }
      } else {
       $202 = $__nd$0$in$i$i19$i$i$i + 4 | 0;
       $203 = HEAP32[$202 >> 2] | 0;
       if (!$203) {
        $$0$i$i23$i$i$i = $202;
        $206 = $__nd$0$in$i$i19$i$i$i;
        break;
       } else {
        $__nd$0$in$i$i19$i$i$i = $203;
        continue;
       }
      }
     }
     HEAP32[$__cache$013$i$i$i >> 2] = 0;
     HEAP32[$__cache$013$i$i$i + 4 >> 2] = 0;
     HEAP32[$176 >> 2] = $206;
     HEAP32[$$0$i$i23$i$i$i >> 2] = $__cache$013$i$i$i;
     $208 = HEAP32[HEAP32[$151 >> 2] >> 2] | 0;
     if (!$208) $211 = $__cache$013$i$i$i; else {
      HEAP32[$151 >> 2] = $208;
      $211 = HEAP32[$$0$i$i23$i$i$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$165 >> 2] | 0, $211);
     HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 1;
     $215 = HEAP32[$__first$0312$i$i$i + 4 >> 2] | 0;
     if (!$215) {
      $$0$i$i12$i$i$i = $__first$0312$i$i$i;
      while (1) {
       $220 = HEAP32[$$0$i$i12$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$220 >> 2] | 0) == ($$0$i$i12$i$i$i | 0)) {
        $$01$i$i14$i$i$i = $220;
        break;
       } else $$0$i$i12$i$i$i = $220;
      }
     } else {
      $$0$i$i$i10$i$i$i = $215;
      while (1) {
       $217 = HEAP32[$$0$i$i$i10$i$i$i >> 2] | 0;
       if (!$217) {
        $$01$i$i14$i$i$i = $$0$i$i$i10$i$i$i;
        break;
       } else $$0$i$i$i10$i$i$i = $217;
      }
     }
     if (!$$0$i$i$i$i) {
      $__first$04$ph$i$i$i = $$01$i$i14$i$i$i;
      break L58;
     } else {
      $__cache$013$i$i$i = $$0$i$i$i$i;
      $__first$0312$i$i$i = $$01$i$i14$i$i$i;
     }
    }
    $168 = HEAP32[$__cache$013$i$i$i + 8 >> 2] | 0;
    if (!$168) $__cache$2$lcssa$i$i$i = $__cache$013$i$i$i; else {
     $225 = $168;
     while (1) {
      $226 = HEAP32[$225 + 8 >> 2] | 0;
      if (!$226) break; else $225 = $226;
     }
     $__cache$2$lcssa$i$i$i = $225;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($151, $__cache$2$lcssa$i$i$i);
    break L56;
   }
  } while (0);
  if (($__first$04$ph$i$i$i | 0) != ($153 | 0)) {
   $229 = $$idx$val$i9 + -12 | 0;
   $230 = $$idx$val$i9 + -12 | 0;
   $__first$046$i$i$i = $__first$04$ph$i$i$i;
   while (1) {
    $231 = $__first$046$i$i$i + 16 | 0;
    $232 = HEAP32[$229 >> 2] | 0;
    if (!$232) {
     $$0$i$i6$i$i$i = $230;
     $255 = $230;
    } else {
     $__v$idx$val$i$i$i$i$i = HEAP32[$231 >> 2] | 0;
     $__nd$0$in$i$i$i$i$i = $232;
     while (1) if ($__v$idx$val$i$i$i$i$i >>> 0 < (HEAP32[$__nd$0$in$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
      $236 = HEAP32[$__nd$0$in$i$i$i$i$i >> 2] | 0;
      if (!$236) {
       $$0$i$i6$i$i$i = $__nd$0$in$i$i$i$i$i;
       $255 = $__nd$0$in$i$i$i$i$i;
       break;
      } else {
       $__nd$0$in$i$i$i$i$i = $236;
       continue;
      }
     } else {
      $238 = $__nd$0$in$i$i$i$i$i + 4 | 0;
      $239 = HEAP32[$238 >> 2] | 0;
      if (!$239) {
       $$0$i$i6$i$i$i = $238;
       $255 = $__nd$0$in$i$i$i$i$i;
       break;
      } else {
       $__nd$0$in$i$i$i$i$i = $239;
       continue;
      }
     }
    }
    $241 = __Znwj(24) | 0;
    $243 = $231;
    $248 = HEAP32[$243 + 4 >> 2] | 0;
    $249 = $241 + 16 | 0;
    HEAP32[$249 >> 2] = HEAP32[$243 >> 2];
    HEAP32[$249 + 4 >> 2] = $248;
    HEAP32[$241 >> 2] = 0;
    HEAP32[$241 + 4 >> 2] = 0;
    HEAP32[$241 + 8 >> 2] = $255;
    HEAP32[$$0$i$i6$i$i$i >> 2] = $241;
    $257 = HEAP32[HEAP32[$151 >> 2] >> 2] | 0;
    if (!$257) $260 = $241; else {
     HEAP32[$151 >> 2] = $257;
     $260 = HEAP32[$$0$i$i6$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$229 >> 2] | 0, $260);
    HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 1;
    $264 = HEAP32[$__first$046$i$i$i + 4 >> 2] | 0;
    if (!$264) {
     $$0$i$i$i$i$i = $__first$046$i$i$i;
     while (1) {
      $269 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$269 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
       $$01$i$i$i$i$i = $269;
       break;
      } else $$0$i$i$i$i$i = $269;
     }
    } else {
     $$0$i$i$i$i$i$i = $264;
     while (1) {
      $266 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
      if (!$266) {
       $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i = $266;
     }
    }
    if (($$01$i$i$i$i$i | 0) == ($153 | 0)) break; else $__first$046$i$i$i = $$01$i$i$i$i$i;
   }
  }
 } while (0);
 if ($context) if (___dynamic_cast($context, 37448, 37608, 0) | 0) HEAP8[(HEAP32[$$idx3$i >> 2] | 0) + -108 >> 0] = 1;
 $$idx$val$i13 = HEAP32[$up_values >> 2] | 0;
 $276 = $up_values + 4 | 0;
 if (($$idx$val$i13 | 0) == ($276 | 0)) {
  STACKTOP = sp;
  return;
 } else $$idx$val$i132127 = $$idx$val$i13;
 while (1) {
  if (!(HEAP32[$$idx$val$i132127 + 20 >> 2] | 0)) {
   label = 90;
   break;
  }
  $282 = HEAP32[$$idx$val$i132127 + 4 >> 2] | 0;
  if (!$282) {
   $$0$i$i$i19 = $$idx$val$i132127;
   while (1) {
    $287 = HEAP32[$$0$i$i$i19 + 8 >> 2] | 0;
    if ((HEAP32[$287 >> 2] | 0) == ($$0$i$i$i19 | 0)) {
     $$01$i$i$i = $287;
     break;
    } else $$0$i$i$i19 = $287;
   }
  } else {
   $$0$i$i$i$i18 = $282;
   while (1) {
    $284 = HEAP32[$$0$i$i$i$i18 >> 2] | 0;
    if (!$284) {
     $$01$i$i$i = $$0$i$i$i$i18;
     break;
    } else $$0$i$i$i$i18 = $284;
   }
  }
  if (($$01$i$i$i | 0) == ($276 | 0)) {
   label = 96;
   break;
  } else $$idx$val$i132127 = $$01$i$i$i;
 }
 if ((label | 0) == 90) ___assert_fail(37624, 37648, 361, 37656); else if ((label | 0) == 96) {
  STACKTOP = sp;
  return;
 }
}

function __ZN12_GLOBAL__N_16Parser9parseBindERNSt3__13mapIPK10IdentifierP3ASTNS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEj($this, $binds, $obj_level) {
 $this = $this | 0;
 $binds = $binds | 0;
 $obj_level = $obj_level | 0;
 var $$0$i = 0, $$0$ph5$i$i$i = 0, $$0$ph7$i$i$i = 0, $$01 = 0, $$01$i$i = 0, $$01$ph6$i$in$i$i = 0, $$013$i$in$i$i = 0, $$0344 = 0, $$045 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $105 = 0, $107 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $114 = 0, $116 = 0, $117 = 0, $119 = 0, $12 = 0, $122 = 0, $127 = 0, $129 = 0, $131 = 0, $135 = 0, $136 = 0, $138 = 0, $140 = 0, $145 = 0, $150 = 0, $151 = 0, $156 = 0, $16 = 0, $161 = 0, $162 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $173 = 0, $174 = 0, $177 = 0, $179 = 0, $180 = 0, $183 = 0, $184 = 0, $186 = 0, $19 = 0, $190 = 0, $193 = 0, $194 = 0, $195 = 0, $197 = 0, $2 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $21 = 0, $214 = 0, $216 = 0, $22 = 0, $222 = 0, $223 = 0, $224 = 0, $226 = 0, $227 = 0, $228 = 0, $230 = 0, $236 = 0, $238 = 0, $239 = 0, $24 = 0, $245 = 0, $249 = 0, $25 = 0, $250 = 0, $252 = 0, $253 = 0, $256 = 0, $27 = 0, $28 = 0, $3 = 0, $36 = 0, $4 = 0, $42 = 0, $43 = 0, $5 = 0, $51 = 0, $52 = 0, $6 = 0, $60 = 0, $61 = 0, $64 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $83 = 0, $85 = 0, $88 = 0, $9 = 0, $90 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $98 = 0, $eh$lpad$body$index4Z2D = 0, $eh$lpad$body$indexZ2D = 0, $id = 0, $init$0 = 0, $it$i = 0, $params = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $var_id = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $it$i = sp + 300 | 0;
 $var_id = sp + 256 | 0;
 $id = sp + 252 | 0;
 $0 = sp + 240 | 0;
 $1 = sp + 196 | 0;
 $2 = sp + 152 | 0;
 $params = sp + 140 | 0;
 $3 = sp + 128 | 0;
 $4 = sp + 84 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 44 | 0;
 $7 = sp;
 __ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc($var_id, $this, 11, 0);
 $8 = $this + 4 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = $var_id + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($it$i, $9, $10);
 $12 = HEAP32[$it$i >> 2] | 0;
 do if (($12 | 0) == ($9 + 4 | 0)) {
  __THREW__ = 0;
  $16 = invoke_ii(67, 12) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 27; else {
   __THREW__ = 0;
   invoke_vii(40, $16 | 0, $10 | 0);
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $24 = ___cxa_find_matching_catch() | 0;
    $25 = tempRet0;
    __ZdlPv($16);
    $eh$lpad$body$index4Z2D = $25;
    $eh$lpad$body$indexZ2D = $24;
    break;
   }
   __THREW__ = 0;
   $21 = invoke_iii(23, $9 | 0, $10 | 0) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) label = 27; else {
    HEAP32[$21 >> 2] = $16;
    $$0$i = $16;
    label = 8;
   }
  }
 } else {
  $$0$i = HEAP32[$12 + 28 >> 2] | 0;
  label = 8;
 } while (0);
 L9 : do if ((label | 0) == 8) {
  HEAP32[$id >> 2] = $$0$i;
  $27 = HEAP32[$binds + 4 >> 2] | 0;
  $28 = $binds + 4 | 0;
  if ($27) {
   $$0$ph7$i$i$i = $28;
   $$01$ph6$i$in$i$i = $27;
   L12 : while (1) {
    $$013$i$in$i$i = $$01$ph6$i$in$i$i;
    while (1) {
     if ((HEAP32[$$013$i$in$i$i + 16 >> 2] | 0) >>> 0 >= $$0$i >>> 0) break;
     $36 = HEAP32[$$013$i$in$i$i + 4 >> 2] | 0;
     if (!$36) {
      $$0$ph5$i$i$i = $$0$ph7$i$i$i;
      break L12;
     } else $$013$i$in$i$i = $36;
    }
    $$01$ph6$i$in$i$i = HEAP32[$$013$i$in$i$i >> 2] | 0;
    if (!$$01$ph6$i$in$i$i) {
     $$0$ph5$i$i$i = $$013$i$in$i$i;
     break;
    } else $$0$ph7$i$i$i = $$013$i$in$i$i;
   }
   if (($$0$ph5$i$i$i | 0) != ($28 | 0)) if ($$0$i >>> 0 >= (HEAP32[$$0$ph5$i$i$i + 16 >> 2] | 0) >>> 0) {
    $42 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    $43 = HEAP8[$10 >> 0] | 0;
    if (!($43 & 1)) $51 = ($43 & 255) >>> 1; else $51 = HEAP32[$var_id + 8 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(14, $0 | 0, 36768, 21, $51 + 21 | 0);
    $52 = __THREW__;
    __THREW__ = 0;
    do if ($52 & 1) label = 29; else {
     if (!(HEAP8[$10 >> 0] & 1)) $60 = $10 + 1 | 0; else $60 = HEAP32[$var_id + 12 >> 2] | 0;
     __THREW__ = 0;
     invoke_iiii(31, $0 | 0, $60 | 0, $51 | 0) | 0;
     $61 = __THREW__;
     __THREW__ = 0;
     if ($61 & 1) label = 29; else {
      __THREW__ = 0;
      invoke_vii(40, $42 | 0, $var_id + 16 | 0);
      $64 = __THREW__;
      __THREW__ = 0;
      if ($64 & 1) $$01 = 1; else {
       $66 = $42 + 12 | 0;
       $67 = $var_id + 28 | 0;
       HEAP32[$66 + 0 >> 2] = HEAP32[$67 + 0 >> 2];
       HEAP32[$66 + 4 >> 2] = HEAP32[$67 + 4 >> 2];
       HEAP32[$66 + 8 >> 2] = HEAP32[$67 + 8 >> 2];
       HEAP32[$66 + 12 >> 2] = HEAP32[$67 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $42 + 28 | 0, $0 | 0);
       $69 = __THREW__;
       __THREW__ = 0;
       if ($69 & 1) {
        $71 = ___cxa_find_matching_catch() | 0;
        $72 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($42);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
        $$0344 = $72;
        $$045 = $71;
        break;
       }
       __THREW__ = 0;
       invoke_viii(4, $42 | 0, 48, 178);
       $73 = __THREW__;
       __THREW__ = 0;
       if ($73 & 1) $$01 = 0; else {}
      }
      $79 = ___cxa_find_matching_catch() | 0;
      $80 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
      if ($$01) {
       $$0344 = $80;
       $$045 = $79;
      } else {
       $$3 = $79;
       $$36 = $80;
       $256 = $var_id + 16 | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($256);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
       ___resumeException($$3 | 0);
      }
     }
    } while (0);
    if ((label | 0) == 29) {
     $77 = ___cxa_find_matching_catch() | 0;
     $78 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     $$0344 = $78;
     $$045 = $77;
    }
    ___cxa_free_exception($42 | 0);
    $$3 = $$045;
    $$36 = $$0344;
    $256 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($256);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
    ___resumeException($$3 | 0);
   }
  }
  $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
  $81 = $this$idx$val$idx$val + 8 | 0;
  HEAP32[$1 >> 2] = HEAP32[$81 >> 2];
  $83 = $1 + 4 | 0;
  __THREW__ = 0;
  invoke_vii(40, $83 | 0, $this$idx$val$idx$val + 12 | 0);
  $85 = __THREW__;
  __THREW__ = 0;
  if ($85 & 1) label = 27; else {
   HEAP32[$1 >> 2] = HEAP32[$81 >> 2];
   $88 = $1 + 16 | 0;
   __THREW__ = 0;
   invoke_vii(40, $88 | 0, $this$idx$val$idx$val + 24 | 0);
   $90 = __THREW__;
   __THREW__ = 0;
   if ($90 & 1) {
    $92 = ___cxa_find_matching_catch() | 0;
    $93 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($83);
    $eh$lpad$body$index4Z2D = $93;
    $eh$lpad$body$indexZ2D = $92;
    break;
   }
   $94 = $1 + 28 | 0;
   $95 = $this$idx$val$idx$val + 36 | 0;
   HEAP32[$94 + 0 >> 2] = HEAP32[$95 + 0 >> 2];
   HEAP32[$94 + 4 >> 2] = HEAP32[$95 + 4 >> 2];
   HEAP32[$94 + 8 >> 2] = HEAP32[$95 + 8 >> 2];
   HEAP32[$94 + 12 >> 2] = HEAP32[$95 + 12 >> 2];
   $96 = HEAP32[$81 >> 2] | 0;
   HEAP32[$1 >> 2] = $96;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($88);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($83);
   L49 : do if (($96 | 0) == 8) {
    $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $98 = $this$idx$val$idx$val$i + 8 | 0;
    HEAP32[$2 >> 2] = HEAP32[$98 >> 2];
    $100 = $2 + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $100 | 0, $this$idx$val$idx$val$i + 12 | 0);
    $102 = __THREW__;
    __THREW__ = 0;
    if ($102 & 1) {
     label = 27;
     break L9;
    }
    HEAP32[$2 >> 2] = HEAP32[$98 >> 2];
    $105 = $2 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $105 | 0, $this$idx$val$idx$val$i + 24 | 0);
    $107 = __THREW__;
    __THREW__ = 0;
    if ($107 & 1) {
     $109 = ___cxa_find_matching_catch() | 0;
     $110 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($100);
     $eh$lpad$body$index4Z2D = $110;
     $eh$lpad$body$indexZ2D = $109;
     break L9;
    }
    $111 = $2 + 28 | 0;
    $112 = $this$idx$val$idx$val$i + 36 | 0;
    HEAP32[$111 + 0 >> 2] = HEAP32[$112 + 0 >> 2];
    HEAP32[$111 + 4 >> 2] = HEAP32[$112 + 4 >> 2];
    HEAP32[$111 + 8 >> 2] = HEAP32[$112 + 8 >> 2];
    HEAP32[$111 + 12 >> 2] = HEAP32[$112 + 12 >> 2];
    HEAP32[$2 >> 2] = HEAP32[$98 >> 2];
    $114 = HEAP32[$this >> 2] | 0;
    $116 = HEAP32[$114 + 4 >> 2] | 0;
    $117 = $116 + 4 | 0;
    $119 = HEAP32[$116 >> 2] | 0;
    HEAP32[$119 + 4 >> 2] = HEAP32[$117 >> 2];
    HEAP32[HEAP32[$117 >> 2] >> 2] = $119;
    $122 = $114 + 8 | 0;
    HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($116 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($116 + 12 | 0);
    __ZdlPv($116);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($105);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($100);
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 35760, 18);
    $127 = __THREW__;
    __THREW__ = 0;
    if ($127 & 1) {
     label = 27;
     break L9;
    }
    __THREW__ = 0;
    invoke_viiii(15, $params | 0, $this | 0, $3 | 0, $obj_level | 0);
    $129 = __THREW__;
    __THREW__ = 0;
    if ($129 & 1) {
     $222 = ___cxa_find_matching_catch() | 0;
     $223 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
     $$3 = $222;
     $$36 = $223;
     $256 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($256);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
     ___resumeException($$3 | 0);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
    __THREW__ = 0;
    invoke_viiii(13, $4 | 0, $this | 0, 13, 36792);
    $131 = __THREW__;
    __THREW__ = 0;
    if ($131 & 1) label = 66; else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4 + 16 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4 + 4 | 0);
     __THREW__ = 0;
     $135 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
     $136 = __THREW__;
     __THREW__ = 0;
     if ($136 & 1) label = 66; else {
      $138 = HEAP32[$8 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $5 | 0, $var_id + 16 | 0);
      $140 = __THREW__;
      __THREW__ = 0;
      if ($140 & 1) label = 66; else {
       $145 = $var_id + 28 | 0;
       $150 = HEAP32[$145 + 4 >> 2] | 0;
       $151 = $5 + 12 | 0;
       HEAP32[$151 >> 2] = HEAP32[$145 >> 2];
       HEAP32[$151 + 4 >> 2] = $150;
       $156 = $135 + 24 | 0;
       $161 = HEAP32[$156 + 4 >> 2] | 0;
       $162 = $5 + 20 | 0;
       HEAP32[$162 >> 2] = HEAP32[$156 >> 2];
       HEAP32[$162 + 4 >> 2] = $161;
       HEAP32[$6 >> 2] = 0;
       $166 = $6 + 4 | 0;
       HEAP32[$166 >> 2] = 0;
       $167 = $6 + 8 | 0;
       HEAP32[$167 >> 2] = 0;
       $168 = $params + 4 | 0;
       $173 = (HEAP32[$168 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
       $174 = $173 >> 2;
       L64 : do if (!$174) label = 56; else {
        if ($174 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(181, $6 | 0);
         $177 = __THREW__;
         __THREW__ = 0;
         if (!($177 & 1)) label = 47;
        } else label = 47;
        if ((label | 0) == 47) {
         __THREW__ = 0;
         $179 = invoke_ii(67, $173 | 0) | 0;
         $180 = __THREW__;
         __THREW__ = 0;
         if (!($180 & 1)) {
          HEAP32[$166 >> 2] = $179;
          HEAP32[$6 >> 2] = $179;
          HEAP32[$167 >> 2] = $179 + ($174 << 2);
          $183 = HEAP32[$params >> 2] | 0;
          $184 = HEAP32[$168 >> 2] | 0;
          if (($183 | 0) == ($184 | 0)) {
           label = 56;
           break;
          } else {
           $$01$i$i = $183;
           $186 = $179;
          }
          while (1) {
           if (!$186) $190 = 0; else {
            HEAP32[$186 >> 2] = HEAP32[$$01$i$i >> 2];
            $190 = HEAP32[$166 >> 2] | 0;
           }
           $186 = $190 + 4 | 0;
           HEAP32[$166 >> 2] = $186;
           $$01$i$i = $$01$i$i + 4 | 0;
           if (($$01$i$i | 0) == ($184 | 0)) {
            label = 56;
            break L64;
           }
          }
         }
        }
        $193 = ___cxa_find_matching_catch() | 0;
        $194 = tempRet0;
        $195 = HEAP32[$6 >> 2] | 0;
        if ($195) {
         $197 = HEAP32[$166 >> 2] | 0;
         if (($197 | 0) != ($195 | 0)) HEAP32[$166 >> 2] = $197 + (~(($197 + -4 - $195 | 0) >>> 2) << 2);
         __ZdlPv($195);
        }
        $$1 = $193;
        $$14 = $194;
       } while (0);
       do if ((label | 0) == 56) {
        __THREW__ = 0;
        $203 = invoke_iiiii(6, $138 | 0, $5 | 0, $6 | 0, $135 | 0) | 0;
        $204 = __THREW__;
        __THREW__ = 0;
        if ($204 & 1) {
         $226 = ___cxa_find_matching_catch() | 0;
         $227 = tempRet0;
         $228 = HEAP32[$6 >> 2] | 0;
         if (!$228) {
          $$1 = $226;
          $$14 = $227;
          break;
         }
         $230 = HEAP32[$166 >> 2] | 0;
         if (($230 | 0) != ($228 | 0)) HEAP32[$166 >> 2] = $230 + (~(($230 + -4 - $228 | 0) >>> 2) << 2);
         __ZdlPv($228);
         $$1 = $226;
         $$14 = $227;
         break;
        }
        $206 = HEAP32[$6 >> 2] | 0;
        if ($206) {
         $208 = HEAP32[$166 >> 2] | 0;
         if (($208 | 0) != ($206 | 0)) HEAP32[$166 >> 2] = $208 + (~(($208 + -4 - $206 | 0) >>> 2) << 2);
         __ZdlPv($206);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
        $214 = HEAP32[$params >> 2] | 0;
        if (!$214) {
         $init$0 = $203;
         break L49;
        }
        $216 = HEAP32[$168 >> 2] | 0;
        if (($216 | 0) != ($214 | 0)) HEAP32[$168 >> 2] = $216 + (~(($216 + -4 - $214 | 0) >>> 2) << 2);
        __ZdlPv($214);
        $init$0 = $203;
        break L49;
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
       $$2 = $$1;
       $$25 = $$14;
       $$pre$phiZ2D = $params;
      }
     }
    }
    if ((label | 0) == 66) {
     $224 = ___cxa_find_matching_catch() | 0;
     $$2 = $224;
     $$25 = tempRet0;
     $$pre$phiZ2D = $params;
    }
    $236 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    if (!$236) {
     $$3 = $$2;
     $$36 = $$25;
     $256 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($256);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
     ___resumeException($$3 | 0);
    }
    $238 = $params + 4 | 0;
    $239 = HEAP32[$238 >> 2] | 0;
    if (($239 | 0) != ($236 | 0)) HEAP32[$238 >> 2] = $239 + (~(($239 + -4 - $236 | 0) >>> 2) << 2);
    __ZdlPv($236);
    $$3 = $$2;
    $$36 = $$25;
    $256 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($256);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
    ___resumeException($$3 | 0);
   } else {
    __THREW__ = 0;
    invoke_viiii(13, $7 | 0, $this | 0, 13, 36792);
    $245 = __THREW__;
    __THREW__ = 0;
    if ($245 & 1) {
     label = 27;
     break L9;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7 + 4 | 0);
    __THREW__ = 0;
    $249 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
    $250 = __THREW__;
    __THREW__ = 0;
    if ($250 & 1) {
     label = 27;
     break L9;
    } else $init$0 = $249;
   } while (0);
   __THREW__ = 0;
   $252 = invoke_iii(32, $binds | 0, $id | 0) | 0;
   $253 = __THREW__;
   __THREW__ = 0;
   if ($253 & 1) label = 27; else {
    HEAP32[$252 >> 2] = $init$0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($var_id + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 if ((label | 0) == 27) {
  $75 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index4Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $75;
 }
 $$3 = $eh$lpad$body$indexZ2D;
 $$36 = $eh$lpad$body$index4Z2D;
 $256 = $var_id + 16 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($256);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
 ___resumeException($$3 | 0);
}

function __Z24jsonnet_vm_execute_multiP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b($agg$result, $alloc, $ast, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx, $string_output) {
 $agg$result = $agg$result | 0;
 $alloc = $alloc | 0;
 $ast = $ast | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $ctx = $ctx | 0;
 $string_output = $string_output | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i17$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i = 0, $$0119$i = 0, $$0218$i = 0, $$07$i = 0, $$1$i = 0, $$13$i = 0, $$2$i = 0, $$24$i = 0, $$3$i = 0, $$35$i = 0, $$4$i = 0, $$46$i = 0, $$idx$i$i = 0, $0 = 0, $1 = 0, $103 = 0, $105 = 0, $106 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $121 = 0, $123 = 0, $126 = 0, $13 = 0, $131 = 0, $133 = 0, $134 = 0, $136 = 0, $138 = 0, $140 = 0, $141 = 0, $143 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $150 = 0, $152 = 0, $155 = 0, $157 = 0, $16 = 0, $160 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $170 = 0, $171 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $70 = 0, $71 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $84 = 0, $85 = 0, $86 = 0, $88 = 0, $89 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $98 = 0, $99 = 0, $eh$lpad$body$i$i$index2Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$index12Z2D = 0, $eh$lpad$body$indexZ2D = 0, $fields$i = 0, $loc$i = 0, $lpad$phi$i$index = 0, $lpad$phi$i$index7 = 0, $ss$i = 0, $vm = 0, $vstr$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $0 = sp + 392 | 0;
 $loc$i = sp + 364 | 0;
 $1 = sp + 352 | 0;
 $ss$i = sp + 208 | 0;
 $2 = sp + 196 | 0;
 $3 = sp + 184 | 0;
 $fields$i = sp + 172 | 0;
 $4 = sp + 160 | 0;
 $vstr$i = sp + 148 | 0;
 $5 = sp + 136 | 0;
 $vm = sp;
 __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEjddPFPcPvPKcSN_PiESL_($vm, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx);
 __THREW__ = 0;
 invoke_vii(58, $vm | 0, $ast | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $171 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index12Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $171;
  __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $8 = $agg$result + 4 | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 HEAP32[$agg$result >> 2] = $agg$result + 4;
 __THREW__ = 0;
 invoke_viii(3, $1 | 0, 37128, 20);
 $11 = __THREW__;
 __THREW__ = 0;
 do if ($11 & 1) {
  $78 = ___cxa_find_matching_catch() | 0;
  $$4$i = $78;
  $$46$i = tempRet0;
 } else {
  __THREW__ = 0;
  invoke_vii(40, $loc$i | 0, $1 | 0);
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) {
   $80 = ___cxa_find_matching_catch() | 0;
   $81 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
   $$4$i = $80;
   $$46$i = $81;
   break;
  }
  $15 = $loc$i + 12 | 0;
  HEAP32[$15 + 0 >> 2] = 0;
  HEAP32[$15 + 4 >> 2] = 0;
  HEAP32[$15 + 8 >> 2] = 0;
  HEAP32[$15 + 12 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
  $16 = $vm + 56 | 0;
  L11 : do if ((HEAP32[$16 >> 2] | 0) == 18) {
   $92 = HEAP32[$vm + 64 >> 2] | 0;
   $93 = $fields$i + 4 | 0;
   HEAP32[$93 >> 2] = 0;
   HEAP32[$fields$i + 8 >> 2] = 0;
   $95 = $fields$i + 4 | 0;
   HEAP32[$fields$i >> 2] = $95;
   __THREW__ = 0;
   invoke_vii(60, $4 | 0, $92 | 0);
   $96 = __THREW__;
   __THREW__ = 0;
   L49 : do if ($96 & 1) {
    $108 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$i$index = $108;
    $lpad$phi$i$index7 = tempRet0;
    label = 40;
   } else {
    $98 = HEAP32[$4 >> 2] | 0;
    $99 = $4 + 4 | 0;
    L52 : do if (($98 | 0) != ($99 | 0)) {
     $115 = $98;
     while (1) {
      $116 = HEAP32[$115 + 16 >> 2] | 0;
      __THREW__ = 0;
      $117 = invoke_iii(23, $fields$i | 0, $116 | 0) | 0;
      $118 = __THREW__;
      __THREW__ = 0;
      if ($118 & 1) break;
      HEAP32[$117 >> 2] = $116;
      $121 = HEAP32[$115 + 4 >> 2] | 0;
      if (!$121) {
       $$0$i$i$i = $115;
       while (1) {
        $126 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$126 >> 2] | 0) == ($$0$i$i$i | 0)) {
         $$01$i$i$i = $126;
         break;
        } else $$0$i$i$i = $126;
       }
      } else {
       $$0$i$i$i$i = $121;
       while (1) {
        $123 = HEAP32[$$0$i$i$i$i >> 2] | 0;
        if (!$123) {
         $$01$i$i$i = $$0$i$i$i$i;
         break;
        } else $$0$i$i$i$i = $123;
       }
      }
      if (($$01$i$i$i | 0) == ($99 | 0)) break L52; else $115 = $$01$i$i$i;
     }
     $110 = ___cxa_find_matching_catch() | 0;
     $111 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
     $$2$i = $110;
     $$24$i = $111;
     break L49;
    } while (0);
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
    $103 = HEAP32[$fields$i >> 2] | 0;
    if (($103 | 0) == ($95 | 0)) {
     $170 = HEAP32[$93 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, $170);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($loc$i);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    }
    $105 = $vm + 72 | 0;
    $$idx$i$i = $vm + 88 | 0;
    $131 = $103;
    while (1) {
     __THREW__ = 0;
     $133 = invoke_iiiii(8, $vm | 0, $loc$i | 0, $92 | 0, HEAP32[$131 + 28 >> 2] | 0) | 0;
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) {
      label = 38;
      break;
     }
     $136 = (HEAP32[$$idx$i$i >> 2] | 0) + -104 | 0;
     HEAP32[$136 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
     HEAP32[$136 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
     HEAP32[$136 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
     HEAP32[$136 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
     HEAP8[(HEAP32[$$idx$i$i >> 2] | 0) + -108 >> 0] = 1;
     __THREW__ = 0;
     invoke_vii(58, $vm | 0, $133 | 0);
     $138 = __THREW__;
     __THREW__ = 0;
     if ($138 & 1) {
      label = 38;
      break;
     }
     $140 = $133 + 4 | 0;
     if ($string_output) {
      __THREW__ = 0;
      invoke_viii(11, $vstr$i | 0, $vm | 0, $140 | 0);
      $141 = __THREW__;
      __THREW__ = 0;
      if ($141 & 1) {
       label = 38;
       break;
      }
     } else {
      __THREW__ = 0;
      invoke_viii(3, $5 | 0, 37152, 0);
      $143 = __THREW__;
      __THREW__ = 0;
      if ($143 & 1) {
       label = 38;
       break;
      }
      __THREW__ = 0;
      invoke_viiiii(6, $vstr$i | 0, $vm | 0, $140 | 0, 1, $5 | 0);
      $145 = __THREW__;
      __THREW__ = 0;
      if ($145 & 1) {
       label = 62;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
     }
     $147 = (HEAP32[$$idx$i$i >> 2] | 0) + -104 | 0;
     HEAP32[$16 + 0 >> 2] = HEAP32[$147 + 0 >> 2];
     HEAP32[$16 + 4 >> 2] = HEAP32[$147 + 4 >> 2];
     HEAP32[$16 + 8 >> 2] = HEAP32[$147 + 8 >> 2];
     HEAP32[$16 + 12 >> 2] = HEAP32[$147 + 12 >> 2];
     __ZN12_GLOBAL__N_15Stack3popEv($105);
     __THREW__ = 0;
     $149 = invoke_iii(33, $agg$result | 0, $131 + 16 | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) {
      label = 63;
      break;
     }
     __THREW__ = 0;
     invoke_iii(20, $149 | 0, $vstr$i | 0) | 0;
     $152 = __THREW__;
     __THREW__ = 0;
     if ($152 & 1) {
      label = 63;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($vstr$i);
     $155 = HEAP32[$131 + 4 >> 2] | 0;
     if (!$155) {
      $$0$i$i$i17$i = $131;
      while (1) {
       $160 = HEAP32[$$0$i$i$i17$i + 8 >> 2] | 0;
       if ((HEAP32[$160 >> 2] | 0) == ($$0$i$i$i17$i | 0)) {
        $$01$i$i$i$i = $160;
        break;
       } else $$0$i$i$i17$i = $160;
      }
     } else {
      $$0$i$i$i$i$i = $155;
      while (1) {
       $157 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
       if (!$157) {
        $$01$i$i$i$i = $$0$i$i$i$i$i;
        break;
       } else $$0$i$i$i$i$i = $157;
      }
     }
     if (($$01$i$i$i$i | 0) == ($95 | 0)) {
      label = 68;
      break;
     } else $131 = $$01$i$i$i$i;
    }
    if ((label | 0) == 38) {
     $106 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i$index = $106;
     $lpad$phi$i$index7 = tempRet0;
     label = 40;
     break;
    } else if ((label | 0) == 62) {
     $164 = ___cxa_find_matching_catch() | 0;
     $165 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
     $$2$i = $164;
     $$24$i = $165;
     break;
    } else if ((label | 0) == 63) {
     $166 = ___cxa_find_matching_catch() | 0;
     $167 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($vstr$i);
     $$2$i = $166;
     $$24$i = $167;
     break;
    } else if ((label | 0) == 68) {
     $170 = HEAP32[$93 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, $170);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($loc$i);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 40) {
    $$2$i = $lpad$phi$i$index;
    $$24$i = $lpad$phi$i$index7;
   }
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, HEAP32[$93 >> 2] | 0);
   $$3$i = $$2$i;
   $$35$i = $$24$i;
  } else {
   $19 = $ss$i + 64 | 0;
   $20 = $ss$i + 8 | 0;
   HEAP32[$20 >> 2] = 792;
   $21 = $ss$i + 12 | 0;
   HEAP32[$ss$i >> 2] = 940;
   HEAP32[$19 >> 2] = 960;
   HEAP32[$ss$i + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss$i + 64 | 0, $21 | 0);
   $24 = __THREW__;
   __THREW__ = 0;
   if ($24 & 1) {
    $36 = ___cxa_find_matching_catch() | 0;
    $$0$i$i = tempRet0;
    $$01$i$i = $36;
   } else {
    HEAP32[$ss$i + 136 >> 2] = 0;
    HEAP32[$ss$i + 140 >> 2] = -1;
    HEAP32[$ss$i >> 2] = 772;
    HEAP32[$19 >> 2] = 812;
    HEAP32[$20 >> 2] = 792;
    __THREW__ = 0;
    invoke_vi(179, $21 | 0);
    $28 = __THREW__;
    __THREW__ = 0;
    do if ($28 & 1) {
     $38 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i$i$index2Z2D = tempRet0;
     $eh$lpad$body$i$i$indexZ2D = $38;
    } else {
     HEAP32[$21 >> 2] = 1104;
     $30 = $ss$i + 44 | 0;
     HEAP32[$30 + 0 >> 2] = 0;
     HEAP32[$30 + 4 >> 2] = 0;
     HEAP32[$30 + 8 >> 2] = 0;
     HEAP32[$30 + 12 >> 2] = 0;
     HEAP32[$ss$i + 60 >> 2] = 24;
     HEAP32[$0 + 0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $21 | 0, $0 | 0);
     $32 = __THREW__;
     __THREW__ = 0;
     if ($32 & 1) {
      $34 = ___cxa_find_matching_catch() | 0;
      $35 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($30);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($21);
      $eh$lpad$body$i$i$index2Z2D = $35;
      $eh$lpad$body$i$i$indexZ2D = $34;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     __THREW__ = 0;
     $41 = invoke_iiii(25, $ss$i + 8 | 0, 37160, 35) | 0;
     $42 = __THREW__;
     __THREW__ = 0;
     do if ($42 & 1) label = 27; else {
      __THREW__ = 0;
      invoke_vii(59, $2 | 0, HEAP32[$16 >> 2] | 0);
      $45 = __THREW__;
      __THREW__ = 0;
      if ($45 & 1) label = 27; else {
       $47 = HEAP8[$2 >> 0] | 0;
       if (!($47 & 1)) {
        $57 = $2 + 1 | 0;
        $58 = ($47 & 255) >>> 1;
       } else {
        $57 = HEAP32[$2 + 8 >> 2] | 0;
        $58 = HEAP32[$2 + 4 >> 2] | 0;
       }
       __THREW__ = 0;
       $59 = invoke_iiii(25, $41 | 0, $57 | 0, $58 | 0) | 0;
       $60 = __THREW__;
       __THREW__ = 0;
       if (!($60 & 1)) {
        __THREW__ = 0;
        $62 = invoke_iiii(25, $59 | 0, 37200, 2) | 0;
        $63 = __THREW__;
        __THREW__ = 0;
        if (!($63 & 1)) {
         __THREW__ = 0;
         $65 = invoke_iiii(25, $62 | 0, 37208, 61) | 0;
         $66 = __THREW__;
         __THREW__ = 0;
         if (!($66 & 1)) {
          __THREW__ = 0;
          invoke_iiii(25, $65 | 0, 37272, 23) | 0;
          $68 = __THREW__;
          __THREW__ = 0;
          if (!($68 & 1)) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
           $70 = ___cxa_allocate_exception(24) | 0;
           __THREW__ = 0;
           invoke_vii(43, $3 | 0, $21 | 0);
           $71 = __THREW__;
           __THREW__ = 0;
           if ($71 & 1) {
            $86 = ___cxa_find_matching_catch() | 0;
            $$0119$i = $86;
            $$0218$i = tempRet0;
           } else {
            __THREW__ = 0;
            invoke_viiii(17, $70 | 0, $vm + 72 | 0, $loc$i | 0, $3 | 0);
            $74 = __THREW__;
            __THREW__ = 0;
            do if ($74 & 1) $$07$i = 1; else {
             __THREW__ = 0;
             invoke_viii(4, $70 | 0, 37312, 185);
             $76 = __THREW__;
             __THREW__ = 0;
             if ($76 & 1) {
              $$07$i = 0;
              break;
             }
            } while (0);
            $88 = ___cxa_find_matching_catch() | 0;
            $89 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
            if ($$07$i) {
             $$0119$i = $88;
             $$0218$i = $89;
            } else {
             $$1$i = $88;
             $$13$i = $89;
             break;
            }
           }
           ___cxa_free_exception($70 | 0);
           $$1$i = $$0119$i;
           $$13$i = $$0218$i;
           break;
          }
         }
        }
       }
       $84 = ___cxa_find_matching_catch() | 0;
       $85 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
       $$1$i = $84;
       $$13$i = $85;
      }
     } while (0);
     if ((label | 0) == 27) {
      $82 = ___cxa_find_matching_catch() | 0;
      $$1$i = $82;
      $$13$i = tempRet0;
     }
     HEAP32[$ss$i >> 2] = 772;
     HEAP32[$ss$i + 64 >> 2] = 812;
     HEAP32[$20 >> 2] = 792;
     HEAP32[$21 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($30);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($21);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($19);
     $$3$i = $$1$i;
     $$35$i = $$13$i;
     break L11;
    } while (0);
    $$0$i$i = $eh$lpad$body$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body$i$i$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($19);
   $$3$i = $$01$i$i;
   $$35$i = $$0$i$i;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($loc$i);
  $$4$i = $$3$i;
  $$46$i = $$35$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($agg$result, HEAP32[$8 >> 2] | 0);
 $eh$lpad$body$index12Z2D = $$46$i;
 $eh$lpad$body$indexZ2D = $$4$i;
 __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZN12_GLOBAL__N_16Parser14parseCommaListERNSt3__16vectorIP3ASTNS1_9allocatorIS4_EEEEN5Token4KindERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEEj($agg$result, $this, $exprs, $element_kind, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $exprs = $exprs | 0;
 $element_kind = $element_kind | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $$0229 = 0, $$0428 = 0, $$13 = 0, $$15 = 0, $$2 = 0, $$26 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $105 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $113 = 0, $114 = 0, $116 = 0, $119 = 0, $12 = 0, $124 = 0, $125 = 0, $126 = 0, $129 = 0, $13 = 0, $133 = 0, $135 = 0, $137 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $143 = 0, $146 = 0, $147 = 0, $149 = 0, $15 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $164 = 0, $166 = 0, $167 = 0, $169 = 0, $17 = 0, $171 = 0, $173 = 0, $175 = 0, $176 = 0, $177 = 0, $179 = 0, $18 = 0, $181 = 0, $183 = 0, $184 = 0, $186 = 0, $187 = 0, $189 = 0, $19 = 0, $194 = 0, $195 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $60 = 0, $65 = 0, $68 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $82 = 0, $84 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $98 = 0, $eh$lpad$body$i$index13Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index5Z2D = 0, $eh$lpad$body$indexZ2D = 0, $got_comma$0$off0 = 0, $got_comma$1$off0 = 0, $got_comma$2$off0 = 0, $next = 0, $ss = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i12 = 0, $this$idx4$val$idx$val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $0 = sp + 292 | 0;
 $next = sp + 248 | 0;
 $1 = sp + 204 | 0;
 $2 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 $5 = $next + 4 | 0;
 $6 = $next + 16 | 0;
 $7 = $next + 28 | 0;
 $8 = $agg$result + 4 | 0;
 $9 = $agg$result + 16 | 0;
 $10 = $agg$result + 28 | 0;
 $11 = $exprs + 4 | 0;
 $12 = $exprs + 8 | 0;
 $13 = $1 + 4 | 0;
 $14 = $1 + 16 | 0;
 $15 = $1 + 28 | 0;
 $16 = $2 + 4 | 0;
 $17 = $2 + 16 | 0;
 $18 = $2 + 28 | 0;
 $19 = $5 + 1 | 0;
 $20 = $next + 16 | 0;
 $21 = $2 + 16 | 0;
 $22 = $20 + 1 | 0;
 $23 = $next + 24 | 0;
 $24 = $next + 20 | 0;
 $25 = $next + 12 | 0;
 $26 = $next + 8 | 0;
 $got_comma$0$off0 = 1;
 L1 : while (1) {
  $this$idx4$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
  $27 = $this$idx4$val$idx$val + 8 | 0;
  HEAP32[$next >> 2] = HEAP32[$27 >> 2];
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($5, $this$idx4$val$idx$val + 12 | 0);
  HEAP32[$next >> 2] = HEAP32[$27 >> 2];
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $this$idx4$val$idx$val + 24 | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  if ($32 & 1) {
   label = 3;
   break;
  }
  $36 = $this$idx4$val$idx$val + 36 | 0;
  HEAP32[$7 + 0 >> 2] = HEAP32[$36 + 0 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
  HEAP32[$7 + 12 >> 2] = HEAP32[$36 + 12 >> 2];
  $37 = HEAP32[$27 >> 2] | 0;
  HEAP32[$next >> 2] = $37;
  if ($got_comma$0$off0) {
   $96 = $37;
   $got_comma$1$off0 = 1;
  } else if (($37 | 0) == 5) {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $39 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $13 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   if ($42 & 1) {
    label = 23;
    break;
   }
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $14 | 0, $this$idx$val$idx$val$i + 24 | 0);
   $46 = __THREW__;
   __THREW__ = 0;
   if ($46 & 1) {
    label = 8;
    break;
   }
   $50 = $this$idx$val$idx$val$i + 36 | 0;
   HEAP32[$15 + 0 >> 2] = HEAP32[$50 + 0 >> 2];
   HEAP32[$15 + 4 >> 2] = HEAP32[$50 + 4 >> 2];
   HEAP32[$15 + 8 >> 2] = HEAP32[$50 + 8 >> 2];
   HEAP32[$15 + 12 >> 2] = HEAP32[$50 + 12 >> 2];
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   $52 = HEAP32[$this >> 2] | 0;
   $54 = HEAP32[$52 + 4 >> 2] | 0;
   $55 = $54 + 4 | 0;
   $57 = HEAP32[$54 >> 2] | 0;
   HEAP32[$57 + 4 >> 2] = HEAP32[$55 >> 2];
   HEAP32[HEAP32[$55 >> 2] >> 2] = $57;
   $60 = $52 + 8 | 0;
   HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($54 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($54 + 12 | 0);
   __ZdlPv($54);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
   $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $65 = $this$idx$val$idx$val + 8 | 0;
   HEAP32[$2 >> 2] = HEAP32[$65 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $16 | 0, $this$idx$val$idx$val + 12 | 0);
   $68 = __THREW__;
   __THREW__ = 0;
   if ($68 & 1) {
    label = 23;
    break;
   }
   HEAP32[$2 >> 2] = HEAP32[$65 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $17 | 0, $this$idx$val$idx$val + 24 | 0);
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    label = 11;
    break;
   }
   $76 = $this$idx$val$idx$val + 36 | 0;
   HEAP32[$18 + 0 >> 2] = HEAP32[$76 + 0 >> 2];
   HEAP32[$18 + 4 >> 2] = HEAP32[$76 + 4 >> 2];
   HEAP32[$18 + 8 >> 2] = HEAP32[$76 + 8 >> 2];
   HEAP32[$18 + 12 >> 2] = HEAP32[$76 + 12 >> 2];
   $77 = HEAP32[$65 >> 2] | 0;
   HEAP32[$2 >> 2] = $77;
   HEAP32[$next >> 2] = $77;
   if (!(HEAP8[$5 >> 0] & 1)) {
    HEAP8[$19 >> 0] = 0;
    HEAP8[$5 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$25 >> 2] >> 0] = 0;
    HEAP32[$26 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $5 | 0, 0);
   $82 = __THREW__;
   __THREW__ = 0;
   if ($82 & 1) {
    label = 16;
    break;
   };
   HEAP32[$5 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
   HEAP32[$16 + 0 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = 0;
   if (!(HEAP8[$20 >> 0] & 1)) {
    HEAP8[$22 >> 0] = 0;
    HEAP8[$20 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$23 >> 2] >> 0] = 0;
    HEAP32[$24 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $20 | 0, 0);
   $90 = __THREW__;
   __THREW__ = 0;
   if ($90 & 1) {
    label = 21;
    break;
   };
   HEAP32[$20 + 0 >> 2] = HEAP32[$21 + 0 >> 2];
   HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
   HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
   HEAP32[$21 + 0 >> 2] = 0;
   HEAP32[$21 + 4 >> 2] = 0;
   HEAP32[$21 + 8 >> 2] = 0;
   HEAP32[$7 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
   $96 = HEAP32[$next >> 2] | 0;
   $got_comma$1$off0 = 1;
  } else {
   $96 = $37;
   $got_comma$1$off0 = 0;
  }
  do if (($96 | 0) == 9) {
   $this$idx$val$idx$val$i12 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $98 = $this$idx$val$idx$val$i12 + 8 | 0;
   HEAP32[$agg$result >> 2] = HEAP32[$98 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $8 | 0, $this$idx$val$idx$val$i12 + 12 | 0);
   $101 = __THREW__;
   __THREW__ = 0;
   if ($101 & 1) {
    label = 23;
    break L1;
   }
   HEAP32[$agg$result >> 2] = HEAP32[$98 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $9 | 0, $this$idx$val$idx$val$i12 + 24 | 0);
   $105 = __THREW__;
   __THREW__ = 0;
   if ($105 & 1) {
    label = 28;
    break L1;
   }
   $109 = $this$idx$val$idx$val$i12 + 36 | 0;
   HEAP32[$10 + 0 >> 2] = HEAP32[$109 + 0 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$109 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$109 + 8 >> 2];
   HEAP32[$10 + 12 >> 2] = HEAP32[$109 + 12 >> 2];
   HEAP32[$agg$result >> 2] = HEAP32[$98 >> 2];
   $111 = HEAP32[$this >> 2] | 0;
   $113 = HEAP32[$111 + 4 >> 2] | 0;
   $114 = $113 + 4 | 0;
   $116 = HEAP32[$113 >> 2] | 0;
   HEAP32[$116 + 4 >> 2] = HEAP32[$114 >> 2];
   HEAP32[HEAP32[$114 >> 2] >> 2] = $116;
   $119 = $111 + 8 | 0;
   HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($113 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($113 + 12 | 0);
   __ZdlPv($113);
   $$01 = 1;
   $got_comma$2$off0 = $got_comma$1$off0;
  } else {
   if (!$got_comma$1$off0) {
    label = 31;
    break L1;
   }
   __THREW__ = 0;
   $186 = invoke_iiii(28, $this | 0, 15, $obj_level | 0) | 0;
   $187 = __THREW__;
   __THREW__ = 0;
   if ($187 & 1) {
    label = 23;
    break L1;
   }
   HEAP32[$4 >> 2] = $186;
   $189 = HEAP32[$11 >> 2] | 0;
   if ($189 >>> 0 >= (HEAP32[$12 >> 2] | 0) >>> 0) {
    __THREW__ = 0;
    invoke_vii(51, $exprs | 0, $4 | 0);
    $195 = __THREW__;
    __THREW__ = 0;
    if ($195 & 1) {
     label = 23;
     break L1;
    } else {
     $$01 = 0;
     $got_comma$2$off0 = 0;
     break;
    }
   }
   if (!$189) $194 = 0; else {
    HEAP32[$189 >> 2] = $186;
    $194 = HEAP32[$11 >> 2] | 0;
   }
   HEAP32[$11 >> 2] = $194 + 4;
   $$01 = 0;
   $got_comma$2$off0 = 0;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
  if ($$01) {
   label = 63;
   break;
  } else $got_comma$0$off0 = $got_comma$2$off0;
 }
 if ((label | 0) == 3) {
  $34 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
  ___resumeException($34 | 0);
 } else if ((label | 0) == 8) {
  $48 = ___cxa_find_matching_catch() | 0;
  $49 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
  $eh$lpad$body$index5Z2D = $49;
  $eh$lpad$body$indexZ2D = $48;
 } else if ((label | 0) == 11) {
  $74 = ___cxa_find_matching_catch() | 0;
  $75 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($16);
  $eh$lpad$body$index5Z2D = $75;
  $eh$lpad$body$indexZ2D = $74;
 } else if ((label | 0) == 16) {
  $84 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($84);
 } else if ((label | 0) == 21) {
  $92 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($92);
 } else if ((label | 0) == 23) {
  $94 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index5Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $94;
 } else if ((label | 0) == 28) {
  $107 = ___cxa_find_matching_catch() | 0;
  $108 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
  $eh$lpad$body$index5Z2D = $108;
  $eh$lpad$body$indexZ2D = $107;
 } else if ((label | 0) == 31) {
  $124 = $ss + 64 | 0;
  $125 = $ss + 8 | 0;
  HEAP32[$125 >> 2] = 792;
  $126 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 940;
  HEAP32[$124 >> 2] = 960;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $126 | 0);
  $129 = __THREW__;
  __THREW__ = 0;
  if ($129 & 1) {
   $141 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $141;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 772;
   HEAP32[$124 >> 2] = 812;
   HEAP32[$125 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $126 | 0);
   $133 = __THREW__;
   __THREW__ = 0;
   do if ($133 & 1) {
    $143 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index13Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $143;
   } else {
    HEAP32[$126 >> 2] = 1104;
    $135 = $ss + 44 | 0;
    HEAP32[$135 + 0 >> 2] = 0;
    HEAP32[$135 + 4 >> 2] = 0;
    HEAP32[$135 + 8 >> 2] = 0;
    HEAP32[$135 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $126 | 0, $0 | 0);
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) {
     $139 = ___cxa_find_matching_catch() | 0;
     $140 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($135);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($126);
     $eh$lpad$body$i$index13Z2D = $140;
     $eh$lpad$body$i$indexZ2D = $139;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __THREW__ = 0;
    $146 = invoke_iiii(25, $ss + 8 | 0, 36816, 29) | 0;
    $147 = __THREW__;
    __THREW__ = 0;
    L45 : do if ($147 & 1) label = 50; else {
     $149 = HEAP8[$element_kind >> 0] | 0;
     if (!($149 & 1)) {
      $159 = $element_kind + 1 | 0;
      $160 = ($149 & 255) >>> 1;
     } else {
      $159 = HEAP32[$element_kind + 8 >> 2] | 0;
      $160 = HEAP32[$element_kind + 4 >> 2] | 0;
     }
     __THREW__ = 0;
     $161 = invoke_iiii(25, $146 | 0, $159 | 0, $160 | 0) | 0;
     $162 = __THREW__;
     __THREW__ = 0;
     if ($162 & 1) label = 50; else {
      __THREW__ = 0;
      invoke_iiii(25, $161 | 0, 36848, 1) | 0;
      $164 = __THREW__;
      __THREW__ = 0;
      if ($164 & 1) label = 50; else {
       $166 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $3 | 0, $126 | 0);
       $167 = __THREW__;
       __THREW__ = 0;
       do if ($167 & 1) {
        $181 = ___cxa_find_matching_catch() | 0;
        $$0229 = tempRet0;
        $$0428 = $181;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $166 | 0, $6 | 0);
        $169 = __THREW__;
        __THREW__ = 0;
        if ($169 & 1) $$0 = 1; else {
         $171 = $166 + 12 | 0;
         HEAP32[$171 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
         HEAP32[$171 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
         HEAP32[$171 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
         HEAP32[$171 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $166 + 28 | 0, $3 | 0);
         $173 = __THREW__;
         __THREW__ = 0;
         if ($173 & 1) {
          $175 = ___cxa_find_matching_catch() | 0;
          $176 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($166);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
          $$0229 = $176;
          $$0428 = $175;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $166 | 0, 48, 178);
         $177 = __THREW__;
         __THREW__ = 0;
         if ($177 & 1) $$0 = 0; else {}
        }
        $183 = ___cxa_find_matching_catch() | 0;
        $184 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
        if ($$0) {
         $$0229 = $184;
         $$0428 = $183;
        } else {
         $$13 = $184;
         $$15 = $183;
         break L45;
        }
       } while (0);
       ___cxa_free_exception($166 | 0);
       $$13 = $$0229;
       $$15 = $$0428;
      }
     }
    } while (0);
    if ((label | 0) == 50) {
     $179 = ___cxa_find_matching_catch() | 0;
     $$13 = tempRet0;
     $$15 = $179;
    }
    HEAP32[$ss >> 2] = 772;
    HEAP32[$ss + 64 >> 2] = 812;
    HEAP32[$125 >> 2] = 792;
    HEAP32[$126 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($135);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($126);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($124);
    $$2 = $$13;
    $$26 = $$15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
    ___resumeException($$26 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index13Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($124);
  $eh$lpad$body$index5Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 } else if ((label | 0) == 63) {
  STACKTOP = sp;
  return;
 }
 $$2 = $eh$lpad$body$index5Z2D;
 $$26 = $eh$lpad$body$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
 ___resumeException($$26 | 0);
}

function __ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc($agg$result, $this, $k, $data) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $k = $k | 0;
 $data = $data | 0;
 var $$0 = 0, $$0$i = 0, $$0$i21 = 0, $$01 = 0, $$01$i = 0, $$01$i20 = 0, $$0339 = 0, $$0538 = 0, $$14 = 0, $$16 = 0, $$243 = 0, $$2742 = 0, $$3 = 0, $$38 = 0, $$4 = 0, $$49 = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $105 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $114 = 0, $115 = 0, $117 = 0, $118 = 0, $119 = 0, $121 = 0, $122 = 0, $124 = 0, $13 = 0, $134 = 0, $135 = 0, $136 = 0, $138 = 0, $139 = 0, $141 = 0, $143 = 0, $145 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $155 = 0, $156 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $4 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $50 = 0, $52 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $69 = 0, $70 = 0, $72 = 0, $74 = 0, $76 = 0, $78 = 0, $79 = 0, $80 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $88 = 0, $9 = 0, $93 = 0, $94 = 0, $97 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i18$index12Z2D = 0, $eh$lpad$body$i18$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $ss = 0, $ss1 = 0, $this$idx$val$idx$val$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $0 = sp + 332 | 0;
 $1 = sp + 320 | 0;
 $ss = sp + 176 | 0;
 $2 = sp + 160 | 0;
 $ss1 = sp + 16 | 0;
 $3 = sp;
 $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $4 = $this$idx$val$idx$val$i + 8 | 0;
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $6 = $agg$result + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($6, $this$idx$val$idx$val$i + 12 | 0);
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $9 = $agg$result + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $9 | 0, $this$idx$val$idx$val$i + 24 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
  ___resumeException($13 | 0);
 }
 $15 = $agg$result + 28 | 0;
 $16 = $this$idx$val$idx$val$i + 36 | 0;
 HEAP32[$15 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
 HEAP32[$15 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
 HEAP32[$15 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
 HEAP32[$15 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $18 = HEAP32[$this >> 2] | 0;
 $20 = HEAP32[$18 + 4 >> 2] | 0;
 $21 = $20 + 4 | 0;
 $23 = HEAP32[$20 >> 2] | 0;
 HEAP32[$23 + 4 >> 2] = HEAP32[$21 >> 2];
 HEAP32[HEAP32[$21 >> 2] >> 2] = $23;
 $26 = $18 + 8 | 0;
 HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + -1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20 + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20 + 12 | 0);
 __ZdlPv($20);
 if ((HEAP32[$agg$result >> 2] | 0) == ($k | 0)) {
  if (!$data) {
   STACKTOP = sp;
   return;
  }
  if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($6, $data) | 0)) {
   STACKTOP = sp;
   return;
  }
  $82 = $ss1 + 64 | 0;
  $93 = $ss1 + 8 | 0;
  HEAP32[$93 >> 2] = 792;
  $94 = $ss1 + 12 | 0;
  HEAP32[$ss1 >> 2] = 940;
  HEAP32[$82 >> 2] = 960;
  HEAP32[$ss1 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss1 + 64 | 0, $94 | 0);
  $97 = __THREW__;
  __THREW__ = 0;
  if ($97 & 1) {
   $109 = ___cxa_find_matching_catch() | 0;
   $$0$i21 = tempRet0;
   $$01$i20 = $109;
  } else {
   HEAP32[$ss1 + 136 >> 2] = 0;
   HEAP32[$ss1 + 140 >> 2] = -1;
   HEAP32[$ss1 >> 2] = 772;
   HEAP32[$82 >> 2] = 812;
   HEAP32[$93 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $94 | 0);
   $101 = __THREW__;
   __THREW__ = 0;
   do if ($101 & 1) {
    $111 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i18$index12Z2D = tempRet0;
    $eh$lpad$body$i18$indexZ2D = $111;
   } else {
    HEAP32[$94 >> 2] = 1104;
    $103 = $ss1 + 44 | 0;
    HEAP32[$103 + 0 >> 2] = 0;
    HEAP32[$103 + 4 >> 2] = 0;
    HEAP32[$103 + 8 >> 2] = 0;
    HEAP32[$103 + 12 >> 2] = 0;
    HEAP32[$ss1 + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $94 | 0, $0 | 0);
    $105 = __THREW__;
    __THREW__ = 0;
    if ($105 & 1) {
     $107 = ___cxa_find_matching_catch() | 0;
     $108 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($103);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($94);
     $eh$lpad$body$i18$index12Z2D = $108;
     $eh$lpad$body$i18$indexZ2D = $107;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __THREW__ = 0;
    $114 = invoke_iiii(25, $ss1 + 8 | 0, 36920, 18) | 0;
    $115 = __THREW__;
    __THREW__ = 0;
    L54 : do if ($115 & 1) label = 50; else {
     $117 = _strlen($data | 0) | 0;
     __THREW__ = 0;
     $118 = invoke_iiii(25, $114 | 0, $data | 0, $117 | 0) | 0;
     $119 = __THREW__;
     __THREW__ = 0;
     if ($119 & 1) label = 50; else {
      __THREW__ = 0;
      $121 = invoke_iiii(25, $118 | 0, 36904, 9) | 0;
      $122 = __THREW__;
      __THREW__ = 0;
      if ($122 & 1) label = 50; else {
       $124 = HEAP8[$6 >> 0] | 0;
       if (!($124 & 1)) {
        $134 = $6 + 1 | 0;
        $135 = ($124 & 255) >>> 1;
       } else {
        $134 = HEAP32[$agg$result + 12 >> 2] | 0;
        $135 = HEAP32[$agg$result + 8 >> 2] | 0;
       }
       __THREW__ = 0;
       invoke_iiii(25, $121 | 0, $134 | 0, $135 | 0) | 0;
       $136 = __THREW__;
       __THREW__ = 0;
       if ($136 & 1) label = 50; else {
        $138 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_vii(43, $3 | 0, $94 | 0);
        $139 = __THREW__;
        __THREW__ = 0;
        L63 : do if ($139 & 1) {
         $153 = ___cxa_find_matching_catch() | 0;
         $$243 = tempRet0;
         $$2742 = $153;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $138 | 0, $9 | 0);
         $141 = __THREW__;
         __THREW__ = 0;
         do if ($141 & 1) $$0 = 1; else {
          $143 = $138 + 12 | 0;
          HEAP32[$143 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
          HEAP32[$143 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
          HEAP32[$143 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
          HEAP32[$143 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $138 + 28 | 0, $3 | 0);
          $145 = __THREW__;
          __THREW__ = 0;
          if ($145 & 1) {
           $147 = ___cxa_find_matching_catch() | 0;
           $148 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($138);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
           $$243 = $148;
           $$2742 = $147;
           break L63;
          }
          __THREW__ = 0;
          invoke_viii(4, $138 | 0, 48, 178);
          $149 = __THREW__;
          __THREW__ = 0;
          if ($149 & 1) {
           $$0 = 0;
           break;
          }
         } while (0);
         $155 = ___cxa_find_matching_catch() | 0;
         $156 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
         if ($$0) {
          $$243 = $156;
          $$2742 = $155;
         } else {
          $$3 = $156;
          $$38 = $155;
          break L54;
         }
        } while (0);
        ___cxa_free_exception($138 | 0);
        $$3 = $$243;
        $$38 = $$2742;
       }
      }
     }
    } while (0);
    if ((label | 0) == 50) {
     $151 = ___cxa_find_matching_catch() | 0;
     $$3 = tempRet0;
     $$38 = $151;
    }
    HEAP32[$ss1 >> 2] = 772;
    HEAP32[$ss1 + 64 >> 2] = 812;
    HEAP32[$93 >> 2] = 792;
    HEAP32[$94 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($103);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($94);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($82);
    $$4 = $$3;
    $$49 = $$38;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
    ___resumeException($$49 | 0);
   } while (0);
   $$0$i21 = $eh$lpad$body$i18$index12Z2D;
   $$01$i20 = $eh$lpad$body$i18$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($82);
  $eh$lpad$body$index7Z2D = $$0$i21;
  $eh$lpad$body$indexZ2D = $$01$i20;
 } else {
  $33 = $ss + 64 | 0;
  $34 = $ss + 8 | 0;
  HEAP32[$34 >> 2] = 792;
  $35 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 940;
  HEAP32[$33 >> 2] = 960;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $35 | 0);
  $38 = __THREW__;
  __THREW__ = 0;
  if ($38 & 1) {
   $50 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $50;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 772;
   HEAP32[$33 >> 2] = 812;
   HEAP32[$34 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $35 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   do if ($42 & 1) {
    $52 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $52;
   } else {
    HEAP32[$35 >> 2] = 1104;
    $44 = $ss + 44 | 0;
    HEAP32[$44 + 0 >> 2] = 0;
    HEAP32[$44 + 4 >> 2] = 0;
    HEAP32[$44 + 8 >> 2] = 0;
    HEAP32[$44 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$1 + 0 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $35 | 0, $1 | 0);
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     $48 = ___cxa_find_matching_catch() | 0;
     $49 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($35);
     $eh$lpad$body$i$index2Z2D = $49;
     $eh$lpad$body$i$indexZ2D = $48;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
    __THREW__ = 0;
    $55 = invoke_iiii(25, $ss + 8 | 0, 36888, 15) | 0;
    $56 = __THREW__;
    __THREW__ = 0;
    L15 : do if ($56 & 1) label = 24; else {
     __THREW__ = 0;
     $58 = invoke_ii(69, $k | 0) | 0;
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) label = 24; else {
      $61 = _strlen($58 | 0) | 0;
      __THREW__ = 0;
      invoke_iiii(25, $55 | 0, $58 | 0, $61 | 0) | 0;
      $62 = __THREW__;
      __THREW__ = 0;
      if ($62 & 1) label = 24; else {
       __THREW__ = 0;
       $64 = invoke_iiii(25, $55 | 0, 36904, 9) | 0;
       $65 = __THREW__;
       __THREW__ = 0;
       if ($65 & 1) label = 24; else {
        __THREW__ = 0;
        invoke_vii(52, $64 | 0, $agg$result | 0);
        $67 = __THREW__;
        __THREW__ = 0;
        if ($67 & 1) label = 24; else {
         $69 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $2 | 0, $35 | 0);
         $70 = __THREW__;
         __THREW__ = 0;
         do if ($70 & 1) {
          $85 = ___cxa_find_matching_catch() | 0;
          $$0339 = tempRet0;
          $$0538 = $85;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $69 | 0, $9 | 0);
          $72 = __THREW__;
          __THREW__ = 0;
          if ($72 & 1) $$01 = 1; else {
           $74 = $69 + 12 | 0;
           HEAP32[$74 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
           HEAP32[$74 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
           HEAP32[$74 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
           HEAP32[$74 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $69 + 28 | 0, $2 | 0);
           $76 = __THREW__;
           __THREW__ = 0;
           if ($76 & 1) {
            $78 = ___cxa_find_matching_catch() | 0;
            $79 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($69);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
            $$0339 = $79;
            $$0538 = $78;
            break;
           }
           __THREW__ = 0;
           invoke_viii(4, $69 | 0, 48, 178);
           $80 = __THREW__;
           __THREW__ = 0;
           if ($80 & 1) $$01 = 0; else {}
          }
          $87 = ___cxa_find_matching_catch() | 0;
          $88 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
          if ($$01) {
           $$0339 = $88;
           $$0538 = $87;
          } else {
           $$14 = $88;
           $$16 = $87;
           break L15;
          }
         } while (0);
         ___cxa_free_exception($69 | 0);
         $$14 = $$0339;
         $$16 = $$0538;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 24) {
     $83 = ___cxa_find_matching_catch() | 0;
     $$14 = tempRet0;
     $$16 = $83;
    }
    HEAP32[$ss >> 2] = 772;
    HEAP32[$ss + 64 >> 2] = 812;
    HEAP32[$34 >> 2] = 792;
    HEAP32[$35 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($44);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($35);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($33);
    $$4 = $$14;
    $$49 = $$16;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
    ___resumeException($$49 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($33);
  $eh$lpad$body$index7Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 }
 $$4 = $eh$lpad$body$index7Z2D;
 $$49 = $eh$lpad$body$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
 ___resumeException($$49 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE($agg$result, $this, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $v = $v | 0;
 var $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $115 = 0, $116 = 0, $12 = 0, $121 = 0, $123 = 0, $126 = 0, $127 = 0, $13 = 0, $133 = 0, $135 = 0, $138 = 0, $141 = 0, $142 = 0, $144 = 0, $145 = 0, $146 = 0, $149 = 0, $150 = 0, $154 = 0, $156 = 0, $158 = 0, $16 = 0, $164 = 0, $165 = 0, $166 = 0, $168 = 0, $17 = 0, $175 = 0, $180 = 0, $185 = 0, $188 = 0, $19 = 0, $196 = 0, $199 = 0, $2 = 0, $202 = 0, $206 = 0, $215 = 0, $220 = 0, $222 = 0, $226 = 0, $228 = 0, $23 = 0, $230 = 0, $232 = 0, $239 = 0, $241 = 0, $247 = 0, $249 = 0, $251 = 0, $257 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $36 = 0, $37 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $47 = 0, $50 = 0, $51 = 0, $53 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $78 = 0, $79 = 0, $82 = 0, $84 = 0, $85 = 0, $88 = 0, $89 = 0, $91 = 0, $95 = 0, $98 = 0, $99 = 0, $__x$idx$val$i$i = 0, $__x$idx1$i = 0, $__x$idx1$val$i$i = 0, $__x$idx1$val$i$i$i$i = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index10Z2D = 0, $eh$lpad$body$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i8$i = 0, $this$idx$val$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$agg$result >> 2] = 16;
 HEAP32[$1 >> 2] = 0;
 $2 = $1 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $1 + 8 | 0;
 HEAP32[$3 >> 2] = 0;
 $__x$idx1$i = $v + 4 | 0;
 $6 = (HEAP32[$__x$idx1$i >> 2] | 0) - (HEAP32[$v >> 2] | 0) | 0;
 $7 = $6 >> 2;
 do if (!$7) {
  $__x$idx$val$i$i = 0;
  $__x$idx1$val$i$i = 0;
 } else {
  if ($7 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(181, $1 | 0);
   $10 = __THREW__;
   __THREW__ = 0;
   if (!($10 & 1)) label = 4;
  } else label = 4;
  if ((label | 0) == 4) {
   __THREW__ = 0;
   $12 = invoke_ii(67, $6 | 0) | 0;
   $13 = __THREW__;
   __THREW__ = 0;
   if (!($13 & 1)) {
    HEAP32[$2 >> 2] = $12;
    HEAP32[$1 >> 2] = $12;
    HEAP32[$3 >> 2] = $12 + ($7 << 2);
    $16 = HEAP32[$v >> 2] | 0;
    $17 = HEAP32[$__x$idx1$i >> 2] | 0;
    if (($16 | 0) == ($17 | 0)) {
     $__x$idx$val$i$i = $12;
     $__x$idx1$val$i$i = $12;
     break;
    } else {
     $$01$i$i = $16;
     $19 = $12;
    }
    do {
     if (!$19) $23 = 0; else {
      HEAP32[$19 >> 2] = HEAP32[$$01$i$i >> 2];
      $23 = HEAP32[$2 >> 2] | 0;
     }
     $19 = $23 + 4 | 0;
     HEAP32[$2 >> 2] = $19;
     $$01$i$i = $$01$i$i + 4 | 0;
    } while (($$01$i$i | 0) != ($17 | 0));
    $__x$idx$val$i$i = HEAP32[$1 >> 2] | 0;
    $__x$idx1$val$i$i = $19;
    break;
   }
  }
  $26 = ___cxa_find_matching_catch() | 0;
  $28 = HEAP32[$1 >> 2] | 0;
  if (!$28) ___resumeException($26 | 0);
  $30 = HEAP32[$2 >> 2] | 0;
  if (($30 | 0) != ($28 | 0)) HEAP32[$2 >> 2] = $30 + (~(($30 + -4 - $28 | 0) >>> 2) << 2);
  __ZdlPv($28);
  ___resumeException($26 | 0);
 } while (0);
 HEAP32[$0 >> 2] = 0;
 $36 = $0 + 4 | 0;
 HEAP32[$36 >> 2] = 0;
 $37 = $0 + 8 | 0;
 HEAP32[$37 >> 2] = 0;
 $40 = $__x$idx1$val$i$i - $__x$idx$val$i$i | 0;
 $41 = $40 >> 2;
 L23 : do if (!$41) {
  $__x$idx1$val$i$i$i$i = 0;
  label = 27;
 } else {
  if ($41 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(181, $0 | 0);
   $44 = __THREW__;
   __THREW__ = 0;
   if (!($44 & 1)) label = 18;
  } else label = 18;
  if ((label | 0) == 18) {
   __THREW__ = 0;
   $46 = invoke_ii(67, $40 | 0) | 0;
   $47 = __THREW__;
   __THREW__ = 0;
   if (!($47 & 1)) {
    HEAP32[$36 >> 2] = $46;
    HEAP32[$0 >> 2] = $46;
    HEAP32[$37 >> 2] = $46 + ($41 << 2);
    $50 = HEAP32[$1 >> 2] | 0;
    $51 = HEAP32[$2 >> 2] | 0;
    if (($50 | 0) == ($51 | 0)) {
     $__x$idx1$val$i$i$i$i = $46;
     label = 27;
     break;
    } else {
     $$01$i$i$i = $50;
     $53 = $46;
    }
    while (1) {
     if (!$53) $57 = 0; else {
      HEAP32[$53 >> 2] = HEAP32[$$01$i$i$i >> 2];
      $57 = HEAP32[$36 >> 2] | 0;
     }
     $56 = $57 + 4 | 0;
     HEAP32[$36 >> 2] = $56;
     $$01$i$i$i = $$01$i$i$i + 4 | 0;
     if (($$01$i$i$i | 0) == ($51 | 0)) {
      $__x$idx1$val$i$i$i$i = $56;
      label = 27;
      break L23;
     } else $53 = $56;
    }
   }
  }
  $60 = ___cxa_find_matching_catch() | 0;
  $61 = tempRet0;
  $62 = HEAP32[$0 >> 2] | 0;
  if (!$62) {
   $eh$lpad$body$index10Z2D = $61;
   $eh$lpad$body$indexZ2D = $60;
  } else {
   $64 = HEAP32[$36 >> 2] | 0;
   if (($64 | 0) != ($62 | 0)) HEAP32[$36 >> 2] = $64 + (~(($64 + -4 - $62 | 0) >>> 2) << 2);
   __ZdlPv($62);
   $eh$lpad$body$index10Z2D = $61;
   $eh$lpad$body$indexZ2D = $60;
  }
 } while (0);
 L40 : do if ((label | 0) == 27) {
  __THREW__ = 0;
  $70 = invoke_ii(67, 20) | 0;
  $71 = __THREW__;
  __THREW__ = 0;
  L42 : do if ($71 & 1) label = 77; else {
   HEAP32[$70 >> 2] = 40712;
   $73 = $70 + 8 | 0;
   HEAP32[$73 >> 2] = 0;
   $74 = $70 + 12 | 0;
   HEAP32[$74 >> 2] = 0;
   $75 = $70 + 16 | 0;
   HEAP32[$75 >> 2] = 0;
   $78 = $__x$idx1$val$i$i$i$i - (HEAP32[$0 >> 2] | 0) | 0;
   $79 = $78 >> 2;
   L44 : do if ($79) {
    if ($79 >>> 0 > 1073741823) {
     __THREW__ = 0;
     invoke_vi(181, $73 | 0);
     $82 = __THREW__;
     __THREW__ = 0;
     if (!($82 & 1)) label = 31;
    } else label = 31;
    if ((label | 0) == 31) {
     __THREW__ = 0;
     $84 = invoke_ii(67, $78 | 0) | 0;
     $85 = __THREW__;
     __THREW__ = 0;
     if (!($85 & 1)) {
      HEAP32[$74 >> 2] = $84;
      HEAP32[$73 >> 2] = $84;
      HEAP32[$75 >> 2] = $84 + ($79 << 2);
      $88 = HEAP32[$0 >> 2] | 0;
      $89 = HEAP32[$36 >> 2] | 0;
      if (($88 | 0) == ($89 | 0)) break; else {
       $$01$i$i$i$i$i = $88;
       $91 = $84;
      }
      while (1) {
       if (!$91) $95 = 0; else {
        HEAP32[$91 >> 2] = HEAP32[$$01$i$i$i$i$i >> 2];
        $95 = HEAP32[$74 >> 2] | 0;
       }
       $91 = $95 + 4 | 0;
       HEAP32[$74 >> 2] = $91;
       $$01$i$i$i$i$i = $$01$i$i$i$i$i + 4 | 0;
       if (($$01$i$i$i$i$i | 0) == ($89 | 0)) break L44;
      }
     }
    }
    $98 = ___cxa_find_matching_catch() | 0;
    $99 = tempRet0;
    $100 = HEAP32[$73 >> 2] | 0;
    if ($100) {
     $102 = HEAP32[$74 >> 2] | 0;
     if (($102 | 0) != ($100 | 0)) HEAP32[$74 >> 2] = $102 + (~(($102 + -4 - $100 | 0) >>> 2) << 2);
     __ZdlPv($100);
    }
    __ZdlPv($70);
    $eh$lpad$body$i$index2Z2D = $99;
    $eh$lpad$body$i$indexZ2D = $98;
    break L42;
   } while (0);
   $108 = $this + 20 | 0;
   $109 = $this + 24 | 0;
   $110 = HEAP32[$109 >> 2] | 0;
   $111 = $this + 28 | 0;
   $112 = HEAP32[$111 >> 2] | 0;
   if ($110 >>> 0 < $112 >>> 0) {
    if (!$110) $116 = 0; else {
     HEAP32[$110 >> 2] = $70;
     $116 = HEAP32[$109 >> 2] | 0;
    }
    $115 = $116 + 4 | 0;
    HEAP32[$109 >> 2] = $115;
    $$idx$pre$phi$i$iZZ2D = $108;
    $$idx1$val$i$i = $115;
   } else {
    $this$idx2$val$i$i$i$i = HEAP32[$108 >> 2] | 0;
    $121 = ($110 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
    if ($121 >>> 0 > 1073741823) {
     __THREW__ = 0;
     invoke_vi(181, $108 | 0);
     $123 = __THREW__;
     __THREW__ = 0;
     if ($123 & 1) {
      label = 77;
      break;
     }
     $$idx1$val$i$i$i$i$i$i = HEAP32[$111 >> 2] | 0;
     $this$idx$val$i$i$i$i = HEAP32[$108 >> 2] | 0;
    } else {
     $$idx1$val$i$i$i$i$i$i = $112;
     $this$idx$val$i$i$i$i = $this$idx2$val$i$i$i$i;
    }
    $126 = $this$idx$val$i$i$i$i;
    $127 = $$idx1$val$i$i$i$i$i$i - $126 | 0;
    if ($127 >> 2 >>> 0 < 536870911) {
     $133 = $127 >> 1;
     $135 = $133 >>> 0 < $121 >>> 0 ? $121 : $133;
     $138 = (HEAP32[$109 >> 2] | 0) - $126 >> 2;
     if (!$135) {
      $$0$i8$i$i$i$i = 0;
      $145 = 0;
      $146 = $138;
     } else {
      $$0$i7$i$i$i$i = $135;
      $257 = $138;
      label = 50;
     }
    } else {
     $$0$i7$i$i$i$i = 1073741823;
     $257 = (HEAP32[$109 >> 2] | 0) - $126 >> 2;
     label = 50;
    }
    if ((label | 0) == 50) {
     __THREW__ = 0;
     $141 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 77;
      break;
     }
     $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
     $145 = $141;
     $146 = $257;
    }
    $144 = $145 + ($146 << 2) | 0;
    if ($144) HEAP32[$144 >> 2] = $70;
    $149 = $145 + ($146 + 1 << 2) | 0;
    $150 = HEAP32[$108 >> 2] | 0;
    $154 = (HEAP32[$109 >> 2] | 0) - $150 | 0;
    $156 = $145 + ($146 - ($154 >> 2) << 2) | 0;
    _memcpy($156 | 0, $150 | 0, $154 | 0) | 0;
    HEAP32[$108 >> 2] = $156;
    HEAP32[$109 >> 2] = $149;
    HEAP32[$111 >> 2] = $145 + ($$0$i8$i$i$i$i << 2);
    if (!$150) {
     $$idx$pre$phi$i$iZZ2D = $108;
     $$idx1$val$i$i = $149;
    } else {
     __ZdlPv($150);
     $$idx$pre$phi$i$iZZ2D = $108;
     $$idx1$val$i$i = HEAP32[$109 >> 2] | 0;
    }
   }
   $158 = $this + 16 | 0;
   HEAP8[$70 + 4 >> 0] = HEAP8[$158 >> 0] | 0;
   $164 = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
   $165 = $this + 48 | 0;
   HEAP32[$165 >> 2] = $164;
   $166 = HEAP32[$0 >> 2] | 0;
   if (!$166) $175 = $164; else {
    $168 = HEAP32[$36 >> 2] | 0;
    if (($168 | 0) != ($166 | 0)) HEAP32[$36 >> 2] = $168 + (~(($168 + -4 - $166 | 0) >>> 2) << 2);
    __ZdlPv($166);
    $175 = HEAP32[$165 >> 2] | 0;
   }
   L92 : do if ($175 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) {
    $180 = $this + 44 | 0;
    if (+($175 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$180 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(61, $this | 0, $70 | 0);
     $185 = __THREW__;
     __THREW__ = 0;
     do if (!($185 & 1)) {
      __THREW__ = 0;
      invoke_vii(62, $this + 72 | 0, $this | 0);
      $188 = __THREW__;
      __THREW__ = 0;
      if (!($188 & 1)) {
       if (HEAP32[$this + 56 >> 2] & 16) {
        __THREW__ = 0;
        invoke_vii(61, $this | 0, HEAP32[$this + 64 >> 2] | 0);
        $196 = __THREW__;
        __THREW__ = 0;
        if ($196 & 1) break;
       }
       $199 = (HEAP8[$158 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$158 >> 0] = $199;
       $$idx6$i$i = $this + 20 | 0;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$109 >> 2] | 0;
       L101 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $$idx7$val18$i$i = $$idx7$val12$i$i;
        $206 = $199;
        $i$013$i$i = 0;
        while (1) {
         $202 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$202 + 4 >> 0] | 0) == $206 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx7$val18$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$202) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx7$val18$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$202 >> 2] | 0) + 4 >> 2] & 255]($202);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$109 >> 2] | 0;
          }
          $215 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($215 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $220 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($215 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $220 = HEAP32[$109 >> 2] | 0;
          }
          $scevgep4$i$i$i$i8$i = $220 + -4 | 0;
          HEAP32[$109 >> 2] = $scevgep4$i$i$i$i8$i;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i8$i;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $222 = $i$1$i$i + 1 | 0;
         $226 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($222 >>> 0 >= $226 >>> 0) {
          $$lcssa$i$i = $226;
          break L101;
         }
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $$idx7$val18$i$i = $$idx7$val$i$i;
         $206 = HEAP8[$158 >> 0] | 0;
         $i$013$i$i = $222;
        }
       } while (0);
       HEAP32[$165 >> 2] = $$lcssa$i$i;
       HEAP32[$180 >> 2] = $$lcssa$i$i;
       break L92;
      }
     } while (0);
     $247 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index10Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $247;
     break L40;
    }
   } while (0);
   HEAP32[$agg$result + 8 >> 2] = $70;
   $239 = HEAP32[$1 >> 2] | 0;
   if (!$239) {
    STACKTOP = sp;
    return;
   }
   $241 = HEAP32[$2 >> 2] | 0;
   if (($241 | 0) != ($239 | 0)) HEAP32[$2 >> 2] = $241 + (~(($241 + -4 - $239 | 0) >>> 2) << 2);
   __ZdlPv($239);
   STACKTOP = sp;
   return;
  } while (0);
  if ((label | 0) == 77) {
   $228 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $228;
  }
  $230 = HEAP32[$0 >> 2] | 0;
  if (!$230) {
   $eh$lpad$body$index10Z2D = $eh$lpad$body$i$index2Z2D;
   $eh$lpad$body$indexZ2D = $eh$lpad$body$i$indexZ2D;
  } else {
   $232 = HEAP32[$36 >> 2] | 0;
   if (($232 | 0) != ($230 | 0)) HEAP32[$36 >> 2] = $232 + (~(($232 + -4 - $230 | 0) >>> 2) << 2);
   __ZdlPv($230);
   $eh$lpad$body$index10Z2D = $eh$lpad$body$i$index2Z2D;
   $eh$lpad$body$indexZ2D = $eh$lpad$body$i$indexZ2D;
  }
 } while (0);
 $249 = HEAP32[$1 >> 2] | 0;
 if (!$249) ___resumeException($eh$lpad$body$indexZ2D | 0);
 $251 = HEAP32[$2 >> 2] | 0;
 if (($251 | 0) != ($249 | 0)) HEAP32[$2 >> 2] = $251 + (~(($251 + -4 - $249 | 0) >>> 2) << 2);
 __ZdlPv($249);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZN12_GLOBAL__N_111Interpreter19validateBuiltinArgsERK13LocationRangemRKNSt3__16vectorINS_5ValueENS4_9allocatorIS6_EEEENS5_INS6_4TypeENS7_ISC_EEEE($this, $loc, $builtin, $args, $params) {
 $this = $this | 0;
 $loc = $loc | 0;
 $builtin = $builtin | 0;
 $args = $args | 0;
 $params = $params | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $$03 = 0, $$1230 = 0, $$1429 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $0 = 0, $1 = 0, $10 = 0, $104 = 0, $105 = 0, $106 = 0, $110 = 0, $112 = 0, $114 = 0, $116 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $134 = 0, $136 = 0, $143 = 0, $144 = 0, $145 = 0, $149 = 0, $150 = 0, $151 = 0, $153 = 0, $154 = 0, $157 = 0, $159 = 0, $161 = 0, $163 = 0, $164 = 0, $166 = 0, $167 = 0, $169 = 0, $170 = 0, $172 = 0, $173 = 0, $176 = 0, $2 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $5 = 0, $54 = 0, $55 = 0, $6 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $71 = 0, $81 = 0, $82 = 0, $83 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $97 = 0, $args$idx16$val = 0, $args$idx17$val = 0, $args$idx8$val = 0, $args$idx9 = 0, $args$idx9$val = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body20$index9Z2D = 0, $eh$lpad$body20$indexZ2D = 0, $i$041 = 0, $params$idx$val = 0, $params$idx10 = 0, $params$idx13$val = 0, $params$idx14$val = 0, $prefix$035 = 0, $prefix$131 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $0 = sp + 232 | 0;
 $1 = sp + 208 | 0;
 $ss = sp + 64 | 0;
 $2 = sp + 48 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 $args$idx8$val = HEAP32[$args >> 2] | 0;
 $args$idx9 = $args + 4 | 0;
 $args$idx9$val = HEAP32[$args$idx9 >> 2] | 0;
 $10 = $args$idx9$val - $args$idx8$val >> 4;
 $params$idx$val = HEAP32[$params >> 2] | 0;
 $params$idx10 = $params + 4 | 0;
 L1 : do if (($10 | 0) == ((HEAP32[$params$idx10 >> 2] | 0) - $params$idx$val >> 2 | 0)) {
  if (($args$idx9$val | 0) == ($args$idx8$val | 0)) {
   STACKTOP = sp;
   return;
  } else $i$041 = 0;
  do {
   if ((HEAP32[$args$idx8$val + ($i$041 << 4) >> 2] | 0) != (HEAP32[$params$idx$val + ($i$041 << 2) >> 2] | 0)) break L1;
   $i$041 = $i$041 + 1 | 0;
  } while ($i$041 >>> 0 < $10 >>> 0);
  STACKTOP = sp;
  return;
 } while (0);
 __Z20jsonnet_builtin_declm($1, $builtin);
 $24 = $ss + 64 | 0;
 $25 = $ss + 8 | 0;
 HEAP32[$25 >> 2] = 792;
 $26 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 940;
 HEAP32[$24 >> 2] = 960;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $26 | 0);
 $29 = __THREW__;
 __THREW__ = 0;
 L10 : do if ($29 & 1) {
  $41 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $41;
  label = 36;
 } else {
  HEAP32[$ss + 136 >> 2] = 0;
  HEAP32[$ss + 140 >> 2] = -1;
  HEAP32[$ss >> 2] = 772;
  HEAP32[$24 >> 2] = 812;
  HEAP32[$25 >> 2] = 792;
  __THREW__ = 0;
  invoke_vi(179, $26 | 0);
  $33 = __THREW__;
  __THREW__ = 0;
  do if ($33 & 1) {
   $43 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $43;
  } else {
   HEAP32[$26 >> 2] = 1104;
   $35 = $ss + 44 | 0;
   HEAP32[$35 + 0 >> 2] = 0;
   HEAP32[$35 + 4 >> 2] = 0;
   HEAP32[$35 + 8 >> 2] = 0;
   HEAP32[$35 + 12 >> 2] = 0;
   HEAP32[$ss + 60 >> 2] = 24;
   HEAP32[$0 + 0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(42, $26 | 0, $0 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $39 = ___cxa_find_matching_catch() | 0;
    $40 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($35);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($26);
    $eh$lpad$body$i$index2Z2D = $40;
    $eh$lpad$body$i$indexZ2D = $39;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   $45 = $ss + 8 | 0;
   HEAP32[$3 + 0 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   $46 = HEAP8[$1 >> 0] | 0;
   if (!($46 & 1)) $54 = ($46 & 255) >>> 1; else $54 = HEAP32[$1 + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(14, $3 | 0, 40320, 17, $54 + 17 | 0);
   $55 = __THREW__;
   __THREW__ = 0;
   L23 : do if ($55 & 1) label = 21; else {
    if (!(HEAP8[$1 >> 0] & 1)) $63 = $1 + 1 | 0; else $63 = HEAP32[$1 + 8 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiii(31, $3 | 0, $63 | 0, $54 | 0) | 0;
    $64 = __THREW__;
    __THREW__ = 0;
    if ($64 & 1) label = 21; else {
     __THREW__ = 0;
     $68 = invoke_iii(29, $3 | 0, 40344) | 0;
     $69 = __THREW__;
     __THREW__ = 0;
     do if ($69 & 1) {
      $116 = ___cxa_find_matching_catch() | 0;
      $$01 = $116;
      $$03 = tempRet0;
     } else {
      HEAP32[$2 + 0 >> 2] = HEAP32[$68 + 0 >> 2];
      HEAP32[$2 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$2 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$68 + 0 >> 2] = 0;
      HEAP32[$68 + 4 >> 2] = 0;
      HEAP32[$68 + 8 >> 2] = 0;
      $71 = HEAP8[$2 >> 0] | 0;
      if (!($71 & 1)) {
       $81 = $2 + 1 | 0;
       $82 = ($71 & 255) >>> 1;
      } else {
       $81 = HEAP32[$2 + 8 >> 2] | 0;
       $82 = HEAP32[$2 + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $45 | 0, $81 | 0, $82 | 0) | 0;
      $83 = __THREW__;
      __THREW__ = 0;
      if ($83 & 1) {
       $118 = ___cxa_find_matching_catch() | 0;
       $119 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
       $$01 = $118;
       $$03 = $119;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
      $params$idx13$val = HEAP32[$params >> 2] | 0;
      $params$idx14$val = HEAP32[$params$idx10 >> 2] | 0;
      L40 : do if (($params$idx13$val | 0) != ($params$idx14$val | 0)) {
       $86 = $4 + 1 | 0;
       $87 = $4 + 8 | 0;
       $88 = $4 + 4 | 0;
       $90 = $params$idx13$val;
       $prefix$035 = 37152;
       while (1) {
        $89 = HEAP32[$90 >> 2] | 0;
        $91 = _strlen($prefix$035 | 0) | 0;
        __THREW__ = 0;
        $92 = invoke_iiii(25, $45 | 0, $prefix$035 | 0, $91 | 0) | 0;
        $93 = __THREW__;
        __THREW__ = 0;
        if ($93 & 1) {
         label = 38;
         break;
        }
        __THREW__ = 0;
        invoke_vii(59, $4 | 0, $89 | 0);
        $95 = __THREW__;
        __THREW__ = 0;
        if ($95 & 1) {
         label = 38;
         break;
        }
        $97 = HEAP8[$4 >> 0] | 0;
        if (!($97 & 1)) {
         $104 = $86;
         $105 = ($97 & 255) >>> 1;
        } else {
         $104 = HEAP32[$87 >> 2] | 0;
         $105 = HEAP32[$88 >> 2] | 0;
        }
        __THREW__ = 0;
        invoke_iiii(25, $92 | 0, $104 | 0, $105 | 0) | 0;
        $106 = __THREW__;
        __THREW__ = 0;
        if ($106 & 1) {
         label = 44;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
        $90 = $90 + 4 | 0;
        if (($90 | 0) == ($params$idx14$val | 0)) break L40; else $prefix$035 = 37200;
       }
       if ((label | 0) == 38) {
        $112 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body20$index9Z2D = tempRet0;
        $eh$lpad$body20$indexZ2D = $112;
        label = 40;
        break L23;
       } else if ((label | 0) == 44) {
        $120 = ___cxa_find_matching_catch() | 0;
        $121 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
        $$2 = $120;
        $$25 = $121;
        break L23;
       }
      } while (0);
      __THREW__ = 0;
      invoke_iiii(25, $45 | 0, 40360, 11) | 0;
      $122 = __THREW__;
      __THREW__ = 0;
      if (!($122 & 1)) {
       $args$idx16$val = HEAP32[$args >> 2] | 0;
       $args$idx17$val = HEAP32[$args$idx9 >> 2] | 0;
       L57 : do if (($args$idx16$val | 0) != ($args$idx17$val | 0)) {
        $125 = $5 + 1 | 0;
        $126 = $5 + 8 | 0;
        $127 = $5 + 4 | 0;
        $129 = $args$idx16$val;
        $prefix$131 = 37152;
        while (1) {
         $128 = HEAP32[$129 >> 2] | 0;
         $130 = _strlen($prefix$131 | 0) | 0;
         __THREW__ = 0;
         $131 = invoke_iiii(25, $45 | 0, $prefix$131 | 0, $130 | 0) | 0;
         $132 = __THREW__;
         __THREW__ = 0;
         if ($132 & 1) {
          label = 37;
          break;
         }
         __THREW__ = 0;
         invoke_vii(59, $5 | 0, $128 | 0);
         $134 = __THREW__;
         __THREW__ = 0;
         if ($134 & 1) {
          label = 37;
          break;
         }
         $136 = HEAP8[$5 >> 0] | 0;
         if (!($136 & 1)) {
          $143 = $125;
          $144 = ($136 & 255) >>> 1;
         } else {
          $143 = HEAP32[$126 >> 2] | 0;
          $144 = HEAP32[$127 >> 2] | 0;
         }
         __THREW__ = 0;
         invoke_iiii(25, $131 | 0, $143 | 0, $144 | 0) | 0;
         $145 = __THREW__;
         __THREW__ = 0;
         if ($145 & 1) {
          label = 55;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
         $129 = $129 + 16 | 0;
         if (($129 | 0) == ($args$idx17$val | 0)) break L57; else $prefix$131 = 37200;
        }
        if ((label | 0) == 37) {
         $110 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body20$index9Z2D = tempRet0;
         $eh$lpad$body20$indexZ2D = $110;
         label = 40;
         break L23;
        } else if ((label | 0) == 55) {
         $149 = ___cxa_find_matching_catch() | 0;
         $150 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
         $$2 = $149;
         $$25 = $150;
         break L23;
        }
       } while (0);
       __THREW__ = 0;
       invoke_iiii(25, $45 | 0, 38096, 1) | 0;
       $151 = __THREW__;
       __THREW__ = 0;
       if (!($151 & 1)) {
        $153 = ___cxa_allocate_exception(24) | 0;
        __THREW__ = 0;
        invoke_vii(43, $6 | 0, $26 | 0);
        $154 = __THREW__;
        __THREW__ = 0;
        if ($154 & 1) {
         $161 = ___cxa_find_matching_catch() | 0;
         $$1230 = $161;
         $$1429 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_viiii(17, $153 | 0, $this + 72 | 0, $loc | 0, $6 | 0);
         $157 = __THREW__;
         __THREW__ = 0;
         do if ($157 & 1) $$0 = 1; else {
          __THREW__ = 0;
          invoke_viii(4, $153 | 0, 37312, 185);
          $159 = __THREW__;
          __THREW__ = 0;
          if ($159 & 1) {
           $$0 = 0;
           break;
          }
         } while (0);
         $163 = ___cxa_find_matching_catch() | 0;
         $164 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
         if ($$0) {
          $$1230 = $163;
          $$1429 = $164;
         } else {
          $$2 = $163;
          $$25 = $164;
          break L23;
         }
        }
        ___cxa_free_exception($153 | 0);
        $$2 = $$1230;
        $$25 = $$1429;
        break L23;
       }
      }
      $114 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body20$index9Z2D = tempRet0;
      $eh$lpad$body20$indexZ2D = $114;
      label = 40;
      break L23;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
     $$2 = $$01;
     $$25 = $$03;
    }
   } while (0);
   if ((label | 0) == 21) {
    $66 = ___cxa_find_matching_catch() | 0;
    $67 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
    $eh$lpad$body20$index9Z2D = $67;
    $eh$lpad$body20$indexZ2D = $66;
    label = 40;
   }
   if ((label | 0) == 40) {
    $$2 = $eh$lpad$body20$indexZ2D;
    $$25 = $eh$lpad$body20$index9Z2D;
   }
   HEAP32[$ss >> 2] = 772;
   HEAP32[$ss + 64 >> 2] = 812;
   HEAP32[$25 >> 2] = 792;
   HEAP32[$26 >> 2] = 1104;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($35);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($26);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($24);
   $$3 = $$2;
   $$36 = $$25;
   break L10;
  } while (0);
  $$0$i = $eh$lpad$body$i$index2Z2D;
  $$01$i = $eh$lpad$body$i$indexZ2D;
  label = 36;
 } while (0);
 if ((label | 0) == 36) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($24);
  $$3 = $$01$i;
  $$36 = $$0$i;
 }
 $166 = $1 + 12 | 0;
 $167 = HEAP32[$166 >> 2] | 0;
 if (!$167) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
  ___resumeException($$3 | 0);
 }
 $169 = $1 + 16 | 0;
 $170 = HEAP32[$169 >> 2] | 0;
 if (($170 | 0) == ($167 | 0)) $176 = $167; else {
  $173 = $170;
  do {
   $172 = $173 + -12 | 0;
   HEAP32[$169 >> 2] = $172;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($172);
   $173 = HEAP32[$169 >> 2] | 0;
  } while (($173 | 0) != ($167 | 0));
  $176 = HEAP32[$166 >> 2] | 0;
 }
 __ZdlPv($176);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
 ___resumeException($$3 | 0);
}

function _free($mem) {
 $mem = $mem | 0;
 var $$pre$phi66Z2D = 0, $$pre$phi68Z2D = 0, $$pre$phiZ2D = 0, $$sum2 = 0, $1 = 0, $103 = 0, $104 = 0, $111 = 0, $112 = 0, $12 = 0, $120 = 0, $128 = 0, $133 = 0, $134 = 0, $137 = 0, $139 = 0, $14 = 0, $141 = 0, $15 = 0, $156 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $172 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $181 = 0, $182 = 0, $184 = 0, $185 = 0, $19 = 0, $191 = 0, $192 = 0, $2 = 0, $201 = 0, $206 = 0, $210 = 0, $216 = 0, $22 = 0, $231 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $24 = 0, $240 = 0, $241 = 0, $247 = 0, $252 = 0, $253 = 0, $256 = 0, $258 = 0, $26 = 0, $261 = 0, $266 = 0, $272 = 0, $276 = 0, $277 = 0, $284 = 0, $293 = 0, $296 = 0, $301 = 0, $308 = 0, $309 = 0, $310 = 0, $318 = 0, $39 = 0, $44 = 0, $46 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $72 = 0, $73 = 0, $8 = 0, $82 = 0, $87 = 0, $9 = 0, $91 = 0, $97 = 0, $F16$0 = 0, $I18$0 = 0, $K19$058 = 0, $R$0 = 0, $R$1 = 0, $R7$0 = 0, $R7$1 = 0, $RP$0 = 0, $RP9$0 = 0, $T$0$lcssa = 0, $T$057 = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, sp = 0;
 sp = STACKTOP;
 if (!$mem) {
  STACKTOP = sp;
  return;
 }
 $1 = $mem + -8 | 0;
 $2 = HEAP32[13766] | 0;
 if ($1 >>> 0 < $2 >>> 0) _abort();
 $5 = HEAP32[$mem + -4 >> 2] | 0;
 $6 = $5 & 3;
 if (($6 | 0) == 1) _abort();
 $8 = $5 & -8;
 $9 = $mem + ($8 + -8) | 0;
 do if (!($5 & 1)) {
  $12 = HEAP32[$1 >> 2] | 0;
  if (!$6) {
   STACKTOP = sp;
   return;
  }
  $$sum2 = -8 - $12 | 0;
  $14 = $mem + $$sum2 | 0;
  $15 = $12 + $8 | 0;
  if ($14 >>> 0 < $2 >>> 0) _abort();
  if (($14 | 0) == (HEAP32[13767] | 0)) {
   $103 = $mem + ($8 + -4) | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   if (($104 & 3 | 0) != 3) {
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
   HEAP32[13764] = $15;
   HEAP32[$103 >> 2] = $104 & -2;
   HEAP32[$mem + ($$sum2 + 4) >> 2] = $15 | 1;
   HEAP32[$9 >> 2] = $15;
   STACKTOP = sp;
   return;
  }
  $19 = $12 >>> 3;
  if ($12 >>> 0 < 256) {
   $22 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
   $24 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
   $26 = 55088 + ($19 << 1 << 2) | 0;
   if (($22 | 0) != ($26 | 0)) {
    if ($22 >>> 0 < $2 >>> 0) _abort();
    if ((HEAP32[$22 + 12 >> 2] | 0) != ($14 | 0)) _abort();
   }
   if (($24 | 0) == ($22 | 0)) {
    HEAP32[13762] = HEAP32[13762] & ~(1 << $19);
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
   if (($24 | 0) == ($26 | 0)) $$pre$phi68Z2D = $24 + 8 | 0; else {
    if ($24 >>> 0 < $2 >>> 0) _abort();
    $39 = $24 + 8 | 0;
    if ((HEAP32[$39 >> 2] | 0) == ($14 | 0)) $$pre$phi68Z2D = $39; else _abort();
   }
   HEAP32[$22 + 12 >> 2] = $24;
   HEAP32[$$pre$phi68Z2D >> 2] = $22;
   $p$0 = $14;
   $psize$0 = $15;
   break;
  }
  $44 = HEAP32[$mem + ($$sum2 + 24) >> 2] | 0;
  $46 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
  do if (($46 | 0) == ($14 | 0)) {
   $57 = $mem + ($$sum2 + 20) | 0;
   $58 = HEAP32[$57 >> 2] | 0;
   if (!$58) {
    $60 = $mem + ($$sum2 + 16) | 0;
    $61 = HEAP32[$60 >> 2] | 0;
    if (!$61) {
     $R$1 = 0;
     break;
    } else {
     $R$0 = $61;
     $RP$0 = $60;
    }
   } else {
    $R$0 = $58;
    $RP$0 = $57;
   }
   while (1) {
    $63 = $R$0 + 20 | 0;
    $64 = HEAP32[$63 >> 2] | 0;
    if ($64) {
     $R$0 = $64;
     $RP$0 = $63;
     continue;
    }
    $66 = $R$0 + 16 | 0;
    $67 = HEAP32[$66 >> 2] | 0;
    if (!$67) break; else {
     $R$0 = $67;
     $RP$0 = $66;
    }
   }
   if ($RP$0 >>> 0 < $2 >>> 0) _abort(); else {
    HEAP32[$RP$0 >> 2] = 0;
    $R$1 = $R$0;
    break;
   }
  } else {
   $49 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
   if ($49 >>> 0 < $2 >>> 0) _abort();
   $51 = $49 + 12 | 0;
   if ((HEAP32[$51 >> 2] | 0) != ($14 | 0)) _abort();
   $54 = $46 + 8 | 0;
   if ((HEAP32[$54 >> 2] | 0) == ($14 | 0)) {
    HEAP32[$51 >> 2] = $46;
    HEAP32[$54 >> 2] = $49;
    $R$1 = $46;
    break;
   } else _abort();
  } while (0);
  if (!$44) {
   $p$0 = $14;
   $psize$0 = $15;
  } else {
   $72 = HEAP32[$mem + ($$sum2 + 28) >> 2] | 0;
   $73 = 55352 + ($72 << 2) | 0;
   if (($14 | 0) == (HEAP32[$73 >> 2] | 0)) {
    HEAP32[$73 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[13763] = HEAP32[13763] & ~(1 << $72);
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
   } else {
    if ($44 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
    $82 = $44 + 16 | 0;
    if ((HEAP32[$82 >> 2] | 0) == ($14 | 0)) HEAP32[$82 >> 2] = $R$1; else HEAP32[$44 + 20 >> 2] = $R$1;
    if (!$R$1) {
     $p$0 = $14;
     $psize$0 = $15;
     break;
    }
   }
   $87 = HEAP32[13766] | 0;
   if ($R$1 >>> 0 < $87 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $44;
   $91 = HEAP32[$mem + ($$sum2 + 16) >> 2] | 0;
   do if ($91) if ($91 >>> 0 < $87 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $91;
    HEAP32[$91 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $97 = HEAP32[$mem + ($$sum2 + 20) >> 2] | 0;
   if (!$97) {
    $p$0 = $14;
    $psize$0 = $15;
   } else if ($97 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $97;
    HEAP32[$97 + 24 >> 2] = $R$1;
    $p$0 = $14;
    $psize$0 = $15;
    break;
   }
  }
 } else {
  $p$0 = $1;
  $psize$0 = $8;
 } while (0);
 if ($p$0 >>> 0 >= $9 >>> 0) _abort();
 $111 = $mem + ($8 + -4) | 0;
 $112 = HEAP32[$111 >> 2] | 0;
 if (!($112 & 1)) _abort();
 if (!($112 & 2)) {
  if (($9 | 0) == (HEAP32[13768] | 0)) {
   $120 = (HEAP32[13765] | 0) + $psize$0 | 0;
   HEAP32[13765] = $120;
   HEAP32[13768] = $p$0;
   HEAP32[$p$0 + 4 >> 2] = $120 | 1;
   if (($p$0 | 0) != (HEAP32[13767] | 0)) {
    STACKTOP = sp;
    return;
   }
   HEAP32[13767] = 0;
   HEAP32[13764] = 0;
   STACKTOP = sp;
   return;
  }
  if (($9 | 0) == (HEAP32[13767] | 0)) {
   $128 = (HEAP32[13764] | 0) + $psize$0 | 0;
   HEAP32[13764] = $128;
   HEAP32[13767] = $p$0;
   HEAP32[$p$0 + 4 >> 2] = $128 | 1;
   HEAP32[$p$0 + $128 >> 2] = $128;
   STACKTOP = sp;
   return;
  }
  $133 = ($112 & -8) + $psize$0 | 0;
  $134 = $112 >>> 3;
  do if ($112 >>> 0 < 256) {
   $137 = HEAP32[$mem + $8 >> 2] | 0;
   $139 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
   $141 = 55088 + ($134 << 1 << 2) | 0;
   if (($137 | 0) != ($141 | 0)) {
    if ($137 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
    if ((HEAP32[$137 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($139 | 0) == ($137 | 0)) {
    HEAP32[13762] = HEAP32[13762] & ~(1 << $134);
    break;
   }
   if (($139 | 0) == ($141 | 0)) $$pre$phi66Z2D = $139 + 8 | 0; else {
    if ($139 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
    $156 = $139 + 8 | 0;
    if ((HEAP32[$156 >> 2] | 0) == ($9 | 0)) $$pre$phi66Z2D = $156; else _abort();
   }
   HEAP32[$137 + 12 >> 2] = $139;
   HEAP32[$$pre$phi66Z2D >> 2] = $137;
  } else {
   $161 = HEAP32[$mem + ($8 + 16) >> 2] | 0;
   $163 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
   do if (($163 | 0) == ($9 | 0)) {
    $175 = $mem + ($8 + 12) | 0;
    $176 = HEAP32[$175 >> 2] | 0;
    if (!$176) {
     $178 = $mem + ($8 + 8) | 0;
     $179 = HEAP32[$178 >> 2] | 0;
     if (!$179) {
      $R7$1 = 0;
      break;
     } else {
      $R7$0 = $179;
      $RP9$0 = $178;
     }
    } else {
     $R7$0 = $176;
     $RP9$0 = $175;
    }
    while (1) {
     $181 = $R7$0 + 20 | 0;
     $182 = HEAP32[$181 >> 2] | 0;
     if ($182) {
      $R7$0 = $182;
      $RP9$0 = $181;
      continue;
     }
     $184 = $R7$0 + 16 | 0;
     $185 = HEAP32[$184 >> 2] | 0;
     if (!$185) break; else {
      $R7$0 = $185;
      $RP9$0 = $184;
     }
    }
    if ($RP9$0 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
     HEAP32[$RP9$0 >> 2] = 0;
     $R7$1 = $R7$0;
     break;
    }
   } else {
    $166 = HEAP32[$mem + $8 >> 2] | 0;
    if ($166 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
    $169 = $166 + 12 | 0;
    if ((HEAP32[$169 >> 2] | 0) != ($9 | 0)) _abort();
    $172 = $163 + 8 | 0;
    if ((HEAP32[$172 >> 2] | 0) == ($9 | 0)) {
     HEAP32[$169 >> 2] = $163;
     HEAP32[$172 >> 2] = $166;
     $R7$1 = $163;
     break;
    } else _abort();
   } while (0);
   if ($161) {
    $191 = HEAP32[$mem + ($8 + 20) >> 2] | 0;
    $192 = 55352 + ($191 << 2) | 0;
    if (($9 | 0) == (HEAP32[$192 >> 2] | 0)) {
     HEAP32[$192 >> 2] = $R7$1;
     if (!$R7$1) {
      HEAP32[13763] = HEAP32[13763] & ~(1 << $191);
      break;
     }
    } else {
     if ($161 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
     $201 = $161 + 16 | 0;
     if ((HEAP32[$201 >> 2] | 0) == ($9 | 0)) HEAP32[$201 >> 2] = $R7$1; else HEAP32[$161 + 20 >> 2] = $R7$1;
     if (!$R7$1) break;
    }
    $206 = HEAP32[13766] | 0;
    if ($R7$1 >>> 0 < $206 >>> 0) _abort();
    HEAP32[$R7$1 + 24 >> 2] = $161;
    $210 = HEAP32[$mem + ($8 + 8) >> 2] | 0;
    do if ($210) if ($210 >>> 0 < $206 >>> 0) _abort(); else {
     HEAP32[$R7$1 + 16 >> 2] = $210;
     HEAP32[$210 + 24 >> 2] = $R7$1;
     break;
    } while (0);
    $216 = HEAP32[$mem + ($8 + 12) >> 2] | 0;
    if ($216) if ($216 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
     HEAP32[$R7$1 + 20 >> 2] = $216;
     HEAP32[$216 + 24 >> 2] = $R7$1;
     break;
    }
   }
  } while (0);
  HEAP32[$p$0 + 4 >> 2] = $133 | 1;
  HEAP32[$p$0 + $133 >> 2] = $133;
  if (($p$0 | 0) == (HEAP32[13767] | 0)) {
   HEAP32[13764] = $133;
   STACKTOP = sp;
   return;
  } else $psize$1 = $133;
 } else {
  HEAP32[$111 >> 2] = $112 & -2;
  HEAP32[$p$0 + 4 >> 2] = $psize$0 | 1;
  HEAP32[$p$0 + $psize$0 >> 2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 if ($psize$1 >>> 0 < 256) {
  $233 = $231 << 1;
  $234 = 55088 + ($233 << 2) | 0;
  $235 = HEAP32[13762] | 0;
  $236 = 1 << $231;
  if (!($235 & $236)) {
   HEAP32[13762] = $235 | $236;
   $$pre$phiZ2D = 55088 + ($233 + 2 << 2) | 0;
   $F16$0 = $234;
  } else {
   $240 = 55088 + ($233 + 2 << 2) | 0;
   $241 = HEAP32[$240 >> 2] | 0;
   if ($241 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $240;
    $F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $p$0;
  HEAP32[$F16$0 + 12 >> 2] = $p$0;
  HEAP32[$p$0 + 8 >> 2] = $F16$0;
  HEAP32[$p$0 + 12 >> 2] = $234;
  STACKTOP = sp;
  return;
 }
 $247 = $psize$1 >>> 8;
 if (!$247) $I18$0 = 0; else if ($psize$1 >>> 0 > 16777215) $I18$0 = 31; else {
  $252 = ($247 + 1048320 | 0) >>> 16 & 8;
  $253 = $247 << $252;
  $256 = ($253 + 520192 | 0) >>> 16 & 4;
  $258 = $253 << $256;
  $261 = ($258 + 245760 | 0) >>> 16 & 2;
  $266 = 14 - ($256 | $252 | $261) + ($258 << $261 >>> 15) | 0;
  $I18$0 = $psize$1 >>> ($266 + 7 | 0) & 1 | $266 << 1;
 }
 $272 = 55352 + ($I18$0 << 2) | 0;
 HEAP32[$p$0 + 28 >> 2] = $I18$0;
 HEAP32[$p$0 + 20 >> 2] = 0;
 HEAP32[$p$0 + 16 >> 2] = 0;
 $276 = HEAP32[13763] | 0;
 $277 = 1 << $I18$0;
 L199 : do if (!($276 & $277)) {
  HEAP32[13763] = $276 | $277;
  HEAP32[$272 >> 2] = $p$0;
  HEAP32[$p$0 + 24 >> 2] = $272;
  HEAP32[$p$0 + 12 >> 2] = $p$0;
  HEAP32[$p$0 + 8 >> 2] = $p$0;
 } else {
  $284 = HEAP32[$272 >> 2] | 0;
  if (($I18$0 | 0) == 31) $293 = 0; else $293 = 25 - ($I18$0 >>> 1) | 0;
  L205 : do if ((HEAP32[$284 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) $T$0$lcssa = $284; else {
   $K19$058 = $psize$1 << $293;
   $T$057 = $284;
   while (1) {
    $301 = $T$057 + ($K19$058 >>> 31 << 2) + 16 | 0;
    $296 = HEAP32[$301 >> 2] | 0;
    if (!$296) break;
    if ((HEAP32[$296 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) {
     $T$0$lcssa = $296;
     break L205;
    } else {
     $K19$058 = $K19$058 << 1;
     $T$057 = $296;
    }
   }
   if ($301 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
    HEAP32[$301 >> 2] = $p$0;
    HEAP32[$p$0 + 24 >> 2] = $T$057;
    HEAP32[$p$0 + 12 >> 2] = $p$0;
    HEAP32[$p$0 + 8 >> 2] = $p$0;
    break L199;
   }
  } while (0);
  $308 = $T$0$lcssa + 8 | 0;
  $309 = HEAP32[$308 >> 2] | 0;
  $310 = HEAP32[13766] | 0;
  if ($T$0$lcssa >>> 0 >= $310 >>> 0 & $309 >>> 0 >= $310 >>> 0) {
   HEAP32[$309 + 12 >> 2] = $p$0;
   HEAP32[$308 >> 2] = $p$0;
   HEAP32[$p$0 + 8 >> 2] = $309;
   HEAP32[$p$0 + 12 >> 2] = $T$0$lcssa;
   HEAP32[$p$0 + 24 >> 2] = 0;
   break;
  } else _abort();
 } while (0);
 $318 = (HEAP32[13770] | 0) + -1 | 0;
 HEAP32[13770] = $318;
 if (!$318) $sp$0$in$i = 55504 | 0; else {
  STACKTOP = sp;
  return;
 }
 while (1) {
  $sp$0$i = HEAP32[$sp$0$in$i >> 2] | 0;
  if (!$sp$0$i) break; else $sp$0$in$i = $sp$0$i + 8 | 0;
 }
 HEAP32[13770] = -1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i12 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i18 = 0, $$029 = 0, $$031 = 0, $$index = 0, $$index10 = 0, $$pre = 0, $$pre$i3$i$i20 = 0, $100 = 0, $104 = 0, $105 = 0, $108 = 0, $11 = 0, $115 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $132 = 0, $138 = 0, $145 = 0, $148 = 0, $15 = 0, $153 = 0, $160 = 0, $161 = 0, $167 = 0, $17 = 0, $174 = 0, $175 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $21 = 0, $23 = 0, $24 = 0, $3 = 0, $31 = 0, $38 = 0, $41 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $56 = 0, $63 = 0, $64 = 0, $68 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off040 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$067 = 0, $__ky1$041 = 0, $__ky2$052 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$065 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$337 = 0, $__n_does_match$4 = 0, $__n_does_match$550 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$064 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$336 = 0, $__n_might_match$4 = 0, $__st$066 = 0, $__st$138 = 0, $__st$251 = 0, $__st$330 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) {
   __THREW__ = 0;
   invoke_v(5);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $9 = ___cxa_find_matching_catch() | 0;
    $$index = $9;
    $$index10 = tempRet0;
    ___resumeException($$index | 0);
   } else {
    $17 = 0;
    $__status$0 = 0;
   }
  } else {
   $17 = $5;
   $__status$0 = $5;
  }
 } else {
  $17 = 0;
  $__status$0 = $__statbuf;
 }
 $23 = ($__kb | 0) == ($__ke | 0);
 if ($23) {
  $__n_does_match$0$lcssa = 0;
  $__n_might_match$0$lcssa = $3;
 } else {
  $__ky$067 = $__kb;
  $__n_does_match$065 = 0;
  $__n_might_match$064 = $3;
  $__st$066 = $__status$0;
  while (1) {
   $24 = HEAP8[$__ky$067 >> 0] | 0;
   if (!($24 & 1)) $31 = ($24 & 255) >>> 1; else $31 = HEAP32[$__ky$067 + 4 >> 2] | 0;
   if (!$31) {
    HEAP8[$__st$066 >> 0] = 2;
    $__n_does_match$1 = $__n_does_match$065 + 1 | 0;
    $__n_might_match$1 = $__n_might_match$064 + -1 | 0;
   } else {
    HEAP8[$__st$066 >> 0] = 1;
    $__n_does_match$1 = $__n_does_match$065;
    $__n_might_match$1 = $__n_might_match$064;
   }
   $__ky$067 = $__ky$067 + 12 | 0;
   if (($__ky$067 | 0) == ($__ke | 0)) {
    $__n_does_match$0$lcssa = $__n_does_match$1;
    $__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__n_does_match$065 = $__n_does_match$1;
    $__n_might_match$064 = $__n_might_match$1;
    $__st$066 = $__st$066 + 1 | 0;
   }
  }
 }
 $__indx$0 = 0;
 $__n_does_match$2 = $__n_does_match$0$lcssa;
 $__n_might_match$2 = $__n_might_match$0$lcssa;
 L19 : while (1) {
  $38 = HEAP32[$__b >> 2] | 0;
  do if (!$38) $69 = 1; else {
   $41 = HEAP32[$38 + 12 >> 2] | 0;
   if (($41 | 0) == (HEAP32[$38 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $48 = invoke_ii(HEAP32[(HEAP32[$38 >> 2] | 0) + 36 >> 2] | 0, $38 | 0) | 0;
    $49 = __THREW__;
    __THREW__ = 0;
    if ($49 & 1) {
     label = 6;
     break L19;
    } else $$0$i$i$i$i = $48;
   } else $$0$i$i$i$i = HEAP32[$41 >> 2] | 0;
   if (($$0$i$i$i$i | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $69 = 1;
    break;
   } else {
    $69 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $53 = HEAP32[$__e >> 2] | 0;
  if (!$53) {
   $$pre$i3$i$i20 = 0;
   $68 = 1;
  } else {
   $56 = HEAP32[$53 + 12 >> 2] | 0;
   if (($56 | 0) == (HEAP32[$53 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $63 = invoke_ii(HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] | 0, $53 | 0) | 0;
    $64 = __THREW__;
    __THREW__ = 0;
    if ($64 & 1) {
     label = 6;
     break;
    } else $$0$i$i1$i$i = $63;
   } else $$0$i$i1$i$i = HEAP32[$56 >> 2] | 0;
   if (($$0$i$i1$i$i | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    $$pre$i3$i$i20 = 0;
    $68 = 1;
   } else {
    $$pre$i3$i$i20 = $53;
    $68 = 0;
   }
  }
  $71 = HEAP32[$__b >> 2] | 0;
  if (!(($69 ^ $68) & ($__n_might_match$2 | 0) != 0)) {
   label = 67;
   break;
  }
  $73 = HEAP32[$71 + 12 >> 2] | 0;
  if (($73 | 0) == (HEAP32[$71 + 16 >> 2] | 0)) {
   __THREW__ = 0;
   $80 = invoke_ii(HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] | 0, $71 | 0) | 0;
   $81 = __THREW__;
   __THREW__ = 0;
   if ($81 & 1) {
    label = 6;
    break;
   } else $$0$i$i = $80;
  } else $$0$i$i = HEAP32[$73 >> 2] | 0;
  if ($__case_sensitive) $__c$0 = $$0$i$i; else {
   __THREW__ = 0;
   $87 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] | 0, $__ct | 0, $$0$i$i | 0) | 0;
   $88 = __THREW__;
   __THREW__ = 0;
   if ($88 & 1) {
    label = 6;
    break;
   } else $__c$0 = $87;
  }
  $$pre = $__indx$0 + 1 | 0;
  if ($23) {
   $__indx$0 = $$pre;
   continue;
  } else {
   $__consume$0$off040 = 0;
   $__ky1$041 = $__kb;
   $__n_does_match$337 = $__n_does_match$2;
   $__n_might_match$336 = $__n_might_match$2;
   $__st$138 = $__status$0;
  }
  while (1) {
   do if ((HEAP8[$__st$138 >> 0] | 0) == 1) {
    if (!(HEAP8[$__ky1$041 >> 0] & 1)) $99 = $__ky1$041 + 4 | 0; else $99 = HEAP32[$__ky1$041 + 8 >> 2] | 0;
    $100 = HEAP32[$99 + ($__indx$0 << 2) >> 2] | 0;
    if ($__case_sensitive) $__kc$0 = $100; else {
     __THREW__ = 0;
     $104 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] | 0, $__ct | 0, $100 | 0) | 0;
     $105 = __THREW__;
     __THREW__ = 0;
     if ($105 & 1) {
      label = 5;
      break L19;
     } else $__kc$0 = $104;
    }
    if (($__c$0 | 0) != ($__kc$0 | 0)) {
     HEAP8[$__st$138 >> 0] = 0;
     $__consume$1$off0 = $__consume$0$off040;
     $__n_does_match$4 = $__n_does_match$337;
     $__n_might_match$4 = $__n_might_match$336 + -1 | 0;
     break;
    }
    $108 = HEAP8[$__ky1$041 >> 0] | 0;
    if (!($108 & 1)) $115 = ($108 & 255) >>> 1; else $115 = HEAP32[$__ky1$041 + 4 >> 2] | 0;
    if (($115 | 0) == ($$pre | 0)) {
     HEAP8[$__st$138 >> 0] = 2;
     $__consume$1$off0 = 1;
     $__n_does_match$4 = $__n_does_match$337 + 1 | 0;
     $__n_might_match$4 = $__n_might_match$336 + -1 | 0;
    } else {
     $__consume$1$off0 = 1;
     $__n_does_match$4 = $__n_does_match$337;
     $__n_might_match$4 = $__n_might_match$336;
    }
   } else {
    $__consume$1$off0 = $__consume$0$off040;
    $__n_does_match$4 = $__n_does_match$337;
    $__n_might_match$4 = $__n_might_match$336;
   } while (0);
   $__ky1$041 = $__ky1$041 + 12 | 0;
   if (($__ky1$041 | 0) == ($__ke | 0)) break; else {
    $__consume$0$off040 = $__consume$1$off0;
    $__n_does_match$337 = $__n_does_match$4;
    $__n_might_match$336 = $__n_might_match$4;
    $__st$138 = $__st$138 + 1 | 0;
   }
  }
  if (!$__consume$1$off0) {
   $__indx$0 = $$pre;
   $__n_does_match$2 = $__n_does_match$4;
   $__n_might_match$2 = $__n_might_match$4;
   continue;
  }
  $123 = HEAP32[$__b >> 2] | 0;
  $124 = $123 + 12 | 0;
  $125 = HEAP32[$124 >> 2] | 0;
  if (($125 | 0) == (HEAP32[$123 + 16 >> 2] | 0)) {
   __THREW__ = 0;
   invoke_ii(HEAP32[(HEAP32[$123 >> 2] | 0) + 40 >> 2] | 0, $123 | 0) | 0;
   $132 = __THREW__;
   __THREW__ = 0;
   if ($132 & 1) {
    label = 6;
    break;
   }
  } else HEAP32[$124 >> 2] = $125 + 4;
  if (($__n_does_match$4 + $__n_might_match$4 | 0) >>> 0 < 2) {
   $__indx$0 = $$pre;
   $__n_does_match$2 = $__n_does_match$4;
   $__n_might_match$2 = $__n_might_match$4;
   continue;
  } else {
   $__ky2$052 = $__kb;
   $__n_does_match$550 = $__n_does_match$4;
   $__st$251 = $__status$0;
  }
  while (1) {
   if ((HEAP8[$__st$251 >> 0] | 0) == 2) {
    $138 = HEAP8[$__ky2$052 >> 0] | 0;
    if (!($138 & 1)) $145 = ($138 & 255) >>> 1; else $145 = HEAP32[$__ky2$052 + 4 >> 2] | 0;
    if (($145 | 0) == ($$pre | 0)) $__n_does_match$6 = $__n_does_match$550; else {
     HEAP8[$__st$251 >> 0] = 0;
     $__n_does_match$6 = $__n_does_match$550 + -1 | 0;
    }
   } else $__n_does_match$6 = $__n_does_match$550;
   $148 = $__ky2$052 + 12 | 0;
   if (($148 | 0) == ($__ke | 0)) {
    $__indx$0 = $$pre;
    $__n_does_match$2 = $__n_does_match$6;
    $__n_might_match$2 = $__n_might_match$4;
    continue L19;
   } else {
    $__ky2$052 = $148;
    $__n_does_match$550 = $__n_does_match$6;
    $__st$251 = $__st$251 + 1 | 0;
   }
  }
 }
 if ((label | 0) == 5) {
  $11 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $11;
  $lpad$phi$index3 = tempRet0;
 } else if ((label | 0) == 6) {
  $13 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $13;
  $lpad$phi$index3 = tempRet0;
 } else if ((label | 0) == 67) {
  do if (!$71) {
   $193 = 1;
   label = 74;
  } else {
   $153 = HEAP32[$71 + 12 >> 2] | 0;
   if (($153 | 0) == (HEAP32[$71 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $160 = invoke_ii(HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] | 0, $71 | 0) | 0;
    $161 = __THREW__;
    __THREW__ = 0;
    if ($161 & 1) break; else $$0$i$i$i$i12 = $160;
   } else $$0$i$i$i$i12 = HEAP32[$153 >> 2] | 0;
   if (($$0$i$i$i$i12 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $193 = 1;
    label = 74;
    break;
   } else {
    $193 = (HEAP32[$__b >> 2] | 0) == 0;
    label = 74;
    break;
   }
  } while (0);
  L95 : do if ((label | 0) == 74) {
   do if (!$$pre$i3$i$i20) label = 80; else {
    $167 = HEAP32[$$pre$i3$i$i20 + 12 >> 2] | 0;
    if (($167 | 0) == (HEAP32[$$pre$i3$i$i20 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $174 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i20 >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i20 | 0) | 0;
     $175 = __THREW__;
     __THREW__ = 0;
     if ($175 & 1) break L95; else $$0$i$i1$i$i18 = $174;
    } else $$0$i$i1$i$i18 = HEAP32[$167 >> 2] | 0;
    if (($$0$i$i1$i$i18 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 80;
     break;
    } else if ($193) break; else {
     label = 82;
     break;
    }
   } while (0);
   if ((label | 0) == 80) if ($193) label = 82;
   if ((label | 0) == 82) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   L111 : do if ($23) label = 86; else {
    $$031 = $__kb;
    $__st$330 = $__status$0;
    while (1) {
     if ((HEAP8[$__st$330 >> 0] | 0) == 2) {
      $$029 = $$031;
      break L111;
     }
     $$031 = $$031 + 12 | 0;
     if (($$031 | 0) == ($__ke | 0)) {
      label = 86;
      break;
     } else $__st$330 = $__st$330 + 1 | 0;
    }
   } while (0);
   if ((label | 0) == 86) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$029 = $__ke;
   }
   if (!$17) {
    STACKTOP = sp;
    return $$029 | 0;
   }
   __THREW__ = 0;
   invoke_vi(188, $17 | 0);
   $189 = __THREW__;
   __THREW__ = 0;
   if ($189 & 1) {
    $191 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($191);
   } else {
    STACKTOP = sp;
    return $$029 | 0;
   }
  } while (0);
  $15 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $15;
  $lpad$phi$index3 = tempRet0;
 }
 if (!$17) {
  $$index = $lpad$phi$index;
  $$index10 = $lpad$phi$index3;
  ___resumeException($$index | 0);
 }
 __THREW__ = 0;
 invoke_vi(188, $17 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $21 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($21);
 } else {
  $$index = $lpad$phi$index;
  $$index10 = $lpad$phi$index3;
  ___resumeException($$index | 0);
 }
 return 0;
}

function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$pre$phi57Z2D = 0, $$pre$phi59Z2D = 0, $$pre$phiZ2D = 0, $$sum24 = 0, $$sum27 = 0, $0 = 0, $10 = 0, $100 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $123 = 0, $128 = 0, $129 = 0, $132 = 0, $134 = 0, $136 = 0, $149 = 0, $15 = 0, $154 = 0, $156 = 0, $159 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $2 = 0, $20 = 0, $201 = 0, $207 = 0, $22 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $231 = 0, $232 = 0, $238 = 0, $243 = 0, $244 = 0, $247 = 0, $249 = 0, $252 = 0, $257 = 0, $263 = 0, $267 = 0, $268 = 0, $275 = 0, $284 = 0, $287 = 0, $292 = 0, $299 = 0, $300 = 0, $301 = 0, $35 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $68 = 0, $69 = 0, $78 = 0, $83 = 0, $87 = 0, $9 = 0, $93 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$050 = 0, $R$0 = 0, $R$1 = 0, $R7$0 = 0, $R7$1 = 0, $RP$0 = 0, $RP9$0 = 0, $T$0$lcssa = 0, $T$049 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $p + $psize | 0;
 $2 = HEAP32[$p + 4 >> 2] | 0;
 do if (!($2 & 1)) {
  $5 = HEAP32[$p >> 2] | 0;
  if (!($2 & 3)) {
   STACKTOP = sp;
   return;
  }
  $9 = $p + (0 - $5) | 0;
  $10 = $5 + $psize | 0;
  $11 = HEAP32[13766] | 0;
  if ($9 >>> 0 < $11 >>> 0) _abort();
  if (($9 | 0) == (HEAP32[13767] | 0)) {
   $99 = $p + ($psize + 4) | 0;
   $100 = HEAP32[$99 >> 2] | 0;
   if (($100 & 3 | 0) != 3) {
    $$0 = $9;
    $$02 = $10;
    break;
   }
   HEAP32[13764] = $10;
   HEAP32[$99 >> 2] = $100 & -2;
   HEAP32[$p + (4 - $5) >> 2] = $10 | 1;
   HEAP32[$0 >> 2] = $10;
   STACKTOP = sp;
   return;
  }
  $15 = $5 >>> 3;
  if ($5 >>> 0 < 256) {
   $18 = HEAP32[$p + (8 - $5) >> 2] | 0;
   $20 = HEAP32[$p + (12 - $5) >> 2] | 0;
   $22 = 55088 + ($15 << 1 << 2) | 0;
   if (($18 | 0) != ($22 | 0)) {
    if ($18 >>> 0 < $11 >>> 0) _abort();
    if ((HEAP32[$18 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($20 | 0) == ($18 | 0)) {
    HEAP32[13762] = HEAP32[13762] & ~(1 << $15);
    $$0 = $9;
    $$02 = $10;
    break;
   }
   if (($20 | 0) == ($22 | 0)) $$pre$phi59Z2D = $20 + 8 | 0; else {
    if ($20 >>> 0 < $11 >>> 0) _abort();
    $35 = $20 + 8 | 0;
    if ((HEAP32[$35 >> 2] | 0) == ($9 | 0)) $$pre$phi59Z2D = $35; else _abort();
   }
   HEAP32[$18 + 12 >> 2] = $20;
   HEAP32[$$pre$phi59Z2D >> 2] = $18;
   $$0 = $9;
   $$02 = $10;
   break;
  }
  $40 = HEAP32[$p + (24 - $5) >> 2] | 0;
  $42 = HEAP32[$p + (12 - $5) >> 2] | 0;
  do if (($42 | 0) == ($9 | 0)) {
   $$sum24 = 16 - $5 | 0;
   $53 = $p + ($$sum24 + 4) | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if (!$54) {
    $56 = $p + $$sum24 | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    if (!$57) {
     $R$1 = 0;
     break;
    } else {
     $R$0 = $57;
     $RP$0 = $56;
    }
   } else {
    $R$0 = $54;
    $RP$0 = $53;
   }
   while (1) {
    $59 = $R$0 + 20 | 0;
    $60 = HEAP32[$59 >> 2] | 0;
    if ($60) {
     $R$0 = $60;
     $RP$0 = $59;
     continue;
    }
    $62 = $R$0 + 16 | 0;
    $63 = HEAP32[$62 >> 2] | 0;
    if (!$63) break; else {
     $R$0 = $63;
     $RP$0 = $62;
    }
   }
   if ($RP$0 >>> 0 < $11 >>> 0) _abort(); else {
    HEAP32[$RP$0 >> 2] = 0;
    $R$1 = $R$0;
    break;
   }
  } else {
   $45 = HEAP32[$p + (8 - $5) >> 2] | 0;
   if ($45 >>> 0 < $11 >>> 0) _abort();
   $47 = $45 + 12 | 0;
   if ((HEAP32[$47 >> 2] | 0) != ($9 | 0)) _abort();
   $50 = $42 + 8 | 0;
   if ((HEAP32[$50 >> 2] | 0) == ($9 | 0)) {
    HEAP32[$47 >> 2] = $42;
    HEAP32[$50 >> 2] = $45;
    $R$1 = $42;
    break;
   } else _abort();
  } while (0);
  if (!$40) {
   $$0 = $9;
   $$02 = $10;
  } else {
   $68 = HEAP32[$p + (28 - $5) >> 2] | 0;
   $69 = 55352 + ($68 << 2) | 0;
   if (($9 | 0) == (HEAP32[$69 >> 2] | 0)) {
    HEAP32[$69 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[13763] = HEAP32[13763] & ~(1 << $68);
     $$0 = $9;
     $$02 = $10;
     break;
    }
   } else {
    if ($40 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
    $78 = $40 + 16 | 0;
    if ((HEAP32[$78 >> 2] | 0) == ($9 | 0)) HEAP32[$78 >> 2] = $R$1; else HEAP32[$40 + 20 >> 2] = $R$1;
    if (!$R$1) {
     $$0 = $9;
     $$02 = $10;
     break;
    }
   }
   $83 = HEAP32[13766] | 0;
   if ($R$1 >>> 0 < $83 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $40;
   $$sum27 = 16 - $5 | 0;
   $87 = HEAP32[$p + $$sum27 >> 2] | 0;
   do if ($87) if ($87 >>> 0 < $83 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $87;
    HEAP32[$87 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $93 = HEAP32[$p + ($$sum27 + 4) >> 2] | 0;
   if (!$93) {
    $$0 = $9;
    $$02 = $10;
   } else if ($93 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $93;
    HEAP32[$93 + 24 >> 2] = $R$1;
    $$0 = $9;
    $$02 = $10;
    break;
   }
  }
 } else {
  $$0 = $p;
  $$02 = $psize;
 } while (0);
 $106 = HEAP32[13766] | 0;
 if ($0 >>> 0 < $106 >>> 0) _abort();
 $108 = $p + ($psize + 4) | 0;
 $109 = HEAP32[$108 >> 2] | 0;
 if (!($109 & 2)) {
  if (($0 | 0) == (HEAP32[13768] | 0)) {
   $115 = (HEAP32[13765] | 0) + $$02 | 0;
   HEAP32[13765] = $115;
   HEAP32[13768] = $$0;
   HEAP32[$$0 + 4 >> 2] = $115 | 1;
   if (($$0 | 0) != (HEAP32[13767] | 0)) {
    STACKTOP = sp;
    return;
   }
   HEAP32[13767] = 0;
   HEAP32[13764] = 0;
   STACKTOP = sp;
   return;
  }
  if (($0 | 0) == (HEAP32[13767] | 0)) {
   $123 = (HEAP32[13764] | 0) + $$02 | 0;
   HEAP32[13764] = $123;
   HEAP32[13767] = $$0;
   HEAP32[$$0 + 4 >> 2] = $123 | 1;
   HEAP32[$$0 + $123 >> 2] = $123;
   STACKTOP = sp;
   return;
  }
  $128 = ($109 & -8) + $$02 | 0;
  $129 = $109 >>> 3;
  do if ($109 >>> 0 < 256) {
   $132 = HEAP32[$p + ($psize + 8) >> 2] | 0;
   $134 = HEAP32[$p + ($psize + 12) >> 2] | 0;
   $136 = 55088 + ($129 << 1 << 2) | 0;
   if (($132 | 0) != ($136 | 0)) {
    if ($132 >>> 0 < $106 >>> 0) _abort();
    if ((HEAP32[$132 + 12 >> 2] | 0) != ($0 | 0)) _abort();
   }
   if (($134 | 0) == ($132 | 0)) {
    HEAP32[13762] = HEAP32[13762] & ~(1 << $129);
    break;
   }
   if (($134 | 0) == ($136 | 0)) $$pre$phi57Z2D = $134 + 8 | 0; else {
    if ($134 >>> 0 < $106 >>> 0) _abort();
    $149 = $134 + 8 | 0;
    if ((HEAP32[$149 >> 2] | 0) == ($0 | 0)) $$pre$phi57Z2D = $149; else _abort();
   }
   HEAP32[$132 + 12 >> 2] = $134;
   HEAP32[$$pre$phi57Z2D >> 2] = $132;
  } else {
   $154 = HEAP32[$p + ($psize + 24) >> 2] | 0;
   $156 = HEAP32[$p + ($psize + 12) >> 2] | 0;
   do if (($156 | 0) == ($0 | 0)) {
    $167 = $p + ($psize + 20) | 0;
    $168 = HEAP32[$167 >> 2] | 0;
    if (!$168) {
     $170 = $p + ($psize + 16) | 0;
     $171 = HEAP32[$170 >> 2] | 0;
     if (!$171) {
      $R7$1 = 0;
      break;
     } else {
      $R7$0 = $171;
      $RP9$0 = $170;
     }
    } else {
     $R7$0 = $168;
     $RP9$0 = $167;
    }
    while (1) {
     $173 = $R7$0 + 20 | 0;
     $174 = HEAP32[$173 >> 2] | 0;
     if ($174) {
      $R7$0 = $174;
      $RP9$0 = $173;
      continue;
     }
     $176 = $R7$0 + 16 | 0;
     $177 = HEAP32[$176 >> 2] | 0;
     if (!$177) break; else {
      $R7$0 = $177;
      $RP9$0 = $176;
     }
    }
    if ($RP9$0 >>> 0 < $106 >>> 0) _abort(); else {
     HEAP32[$RP9$0 >> 2] = 0;
     $R7$1 = $R7$0;
     break;
    }
   } else {
    $159 = HEAP32[$p + ($psize + 8) >> 2] | 0;
    if ($159 >>> 0 < $106 >>> 0) _abort();
    $161 = $159 + 12 | 0;
    if ((HEAP32[$161 >> 2] | 0) != ($0 | 0)) _abort();
    $164 = $156 + 8 | 0;
    if ((HEAP32[$164 >> 2] | 0) == ($0 | 0)) {
     HEAP32[$161 >> 2] = $156;
     HEAP32[$164 >> 2] = $159;
     $R7$1 = $156;
     break;
    } else _abort();
   } while (0);
   if ($154) {
    $182 = HEAP32[$p + ($psize + 28) >> 2] | 0;
    $183 = 55352 + ($182 << 2) | 0;
    if (($0 | 0) == (HEAP32[$183 >> 2] | 0)) {
     HEAP32[$183 >> 2] = $R7$1;
     if (!$R7$1) {
      HEAP32[13763] = HEAP32[13763] & ~(1 << $182);
      break;
     }
    } else {
     if ($154 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
     $192 = $154 + 16 | 0;
     if ((HEAP32[$192 >> 2] | 0) == ($0 | 0)) HEAP32[$192 >> 2] = $R7$1; else HEAP32[$154 + 20 >> 2] = $R7$1;
     if (!$R7$1) break;
    }
    $197 = HEAP32[13766] | 0;
    if ($R7$1 >>> 0 < $197 >>> 0) _abort();
    HEAP32[$R7$1 + 24 >> 2] = $154;
    $201 = HEAP32[$p + ($psize + 16) >> 2] | 0;
    do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
     HEAP32[$R7$1 + 16 >> 2] = $201;
     HEAP32[$201 + 24 >> 2] = $R7$1;
     break;
    } while (0);
    $207 = HEAP32[$p + ($psize + 20) >> 2] | 0;
    if ($207) if ($207 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
     HEAP32[$R7$1 + 20 >> 2] = $207;
     HEAP32[$207 + 24 >> 2] = $R7$1;
     break;
    }
   }
  } while (0);
  HEAP32[$$0 + 4 >> 2] = $128 | 1;
  HEAP32[$$0 + $128 >> 2] = $128;
  if (($$0 | 0) == (HEAP32[13767] | 0)) {
   HEAP32[13764] = $128;
   STACKTOP = sp;
   return;
  } else $$1 = $128;
 } else {
  HEAP32[$108 >> 2] = $109 & -2;
  HEAP32[$$0 + 4 >> 2] = $$02 | 1;
  HEAP32[$$0 + $$02 >> 2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 if ($$1 >>> 0 < 256) {
  $224 = $222 << 1;
  $225 = 55088 + ($224 << 2) | 0;
  $226 = HEAP32[13762] | 0;
  $227 = 1 << $222;
  if (!($226 & $227)) {
   HEAP32[13762] = $226 | $227;
   $$pre$phiZ2D = 55088 + ($224 + 2 << 2) | 0;
   $F16$0 = $225;
  } else {
   $231 = 55088 + ($224 + 2 << 2) | 0;
   $232 = HEAP32[$231 >> 2] | 0;
   if ($232 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $231;
    $F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$0;
  HEAP32[$F16$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $F16$0;
  HEAP32[$$0 + 12 >> 2] = $225;
  STACKTOP = sp;
  return;
 }
 $238 = $$1 >>> 8;
 if (!$238) $I19$0 = 0; else if ($$1 >>> 0 > 16777215) $I19$0 = 31; else {
  $243 = ($238 + 1048320 | 0) >>> 16 & 8;
  $244 = $238 << $243;
  $247 = ($244 + 520192 | 0) >>> 16 & 4;
  $249 = $244 << $247;
  $252 = ($249 + 245760 | 0) >>> 16 & 2;
  $257 = 14 - ($247 | $243 | $252) + ($249 << $252 >>> 15) | 0;
  $I19$0 = $$1 >>> ($257 + 7 | 0) & 1 | $257 << 1;
 }
 $263 = 55352 + ($I19$0 << 2) | 0;
 HEAP32[$$0 + 28 >> 2] = $I19$0;
 HEAP32[$$0 + 20 >> 2] = 0;
 HEAP32[$$0 + 16 >> 2] = 0;
 $267 = HEAP32[13763] | 0;
 $268 = 1 << $I19$0;
 if (!($267 & $268)) {
  HEAP32[13763] = $267 | $268;
  HEAP32[$263 >> 2] = $$0;
  HEAP32[$$0 + 24 >> 2] = $263;
  HEAP32[$$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $$0;
  STACKTOP = sp;
  return;
 }
 $275 = HEAP32[$263 >> 2] | 0;
 if (($I19$0 | 0) == 31) $284 = 0; else $284 = 25 - ($I19$0 >>> 1) | 0;
 L194 : do if ((HEAP32[$275 + 4 >> 2] & -8 | 0) == ($$1 | 0)) $T$0$lcssa = $275; else {
  $K20$050 = $$1 << $284;
  $T$049 = $275;
  while (1) {
   $292 = $T$049 + ($K20$050 >>> 31 << 2) + 16 | 0;
   $287 = HEAP32[$292 >> 2] | 0;
   if (!$287) break;
   if ((HEAP32[$287 + 4 >> 2] & -8 | 0) == ($$1 | 0)) {
    $T$0$lcssa = $287;
    break L194;
   } else {
    $K20$050 = $K20$050 << 1;
    $T$049 = $287;
   }
  }
  if ($292 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
  HEAP32[$292 >> 2] = $$0;
  HEAP32[$$0 + 24 >> 2] = $T$049;
  HEAP32[$$0 + 12 >> 2] = $$0;
  HEAP32[$$0 + 8 >> 2] = $$0;
  STACKTOP = sp;
  return;
 } while (0);
 $299 = $T$0$lcssa + 8 | 0;
 $300 = HEAP32[$299 >> 2] | 0;
 $301 = HEAP32[13766] | 0;
 if (!($T$0$lcssa >>> 0 >= $301 >>> 0 & $300 >>> 0 >= $301 >>> 0)) _abort();
 HEAP32[$300 + 12 >> 2] = $$0;
 HEAP32[$299 >> 2] = $$0;
 HEAP32[$$0 + 8 >> 2] = $300;
 HEAP32[$$0 + 12 >> 2] = $T$0$lcssa;
 HEAP32[$$0 + 24 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $1 = 0, $10 = 0, $11 = 0, $110 = 0, $113 = 0, $117 = 0, $12 = 0, $120 = 0, $124 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $5 = 0, $52 = 0, $56 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy30 = sp + 160 | 0;
 $$byval_copy26 = sp + 156 | 0;
 $1 = sp + 152 | 0;
 $2 = sp + 148 | 0;
 $3 = sp + 144 | 0;
 $4 = sp + 140 | 0;
 $5 = sp + 136 | 0;
 $6 = sp + 132 | 0;
 $7 = sp + 128 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 112 | 0;
 $12 = sp + 108 | 0;
 $13 = sp + 104 | 0;
 $14 = sp + 100 | 0;
 $15 = sp + 96 | 0;
 $16 = sp + 92 | 0;
 $17 = sp + 88 | 0;
 $18 = sp + 84 | 0;
 $19 = sp + 80 | 0;
 $20 = sp + 76 | 0;
 $21 = sp + 72 | 0;
 $22 = sp + 68 | 0;
 $23 = sp + 64 | 0;
 $24 = sp + 60 | 0;
 $25 = sp + 56 | 0;
 $26 = sp + 52 | 0;
 $27 = sp + 48 | 0;
 $28 = sp + 44 | 0;
 $29 = sp + 40 | 0;
 $30 = sp + 36 | 0;
 $31 = sp + 32 | 0;
 $32 = sp + 28 | 0;
 $33 = sp + 24 | 0;
 $34 = sp + 20 | 0;
 $35 = sp + 16 | 0;
 $36 = sp + 12 | 0;
 $37 = sp + 8 | 0;
 $38 = sp + 4 | 0;
 $39 = sp;
 HEAP32[$__err >> 2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1, $__iob);
 __THREW__ = 0;
 $40 = invoke_iii(22, $1 | 0, 45792) | 0;
 $41 = __THREW__;
 __THREW__ = 0;
 if ($41 & 1) {
  $45 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
  ___resumeException($45 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 73:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 72:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$14 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$7 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 99:
  {
   $52 = $this + 8 | 0;
   $56 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$52 >> 2] | 0) + 12 >> 2] & 127]($52) | 0;
   HEAP32[$5 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   $59 = HEAP8[$56 >> 0] | 0;
   if (!($59 & 1)) {
    $71 = $56 + 4 | 0;
    $72 = ($59 & 255) >>> 1;
    $73 = $56 + 4 | 0;
   } else {
    $63 = HEAP32[$56 + 8 >> 2] | 0;
    $71 = $63;
    $72 = HEAP32[$56 + 4 >> 2] | 0;
    $73 = $63;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($4, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $73, $71 + ($72 << 2) | 0);
   HEAP32[$__b >> 2] = HEAP32[$4 >> 2];
   break;
  }
 case 83:
  {
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 89:
  {
   HEAP32[$38 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$38 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 121:
  {
   HEAP32[$37 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$37 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 88:
  {
   $113 = $this + 8 | 0;
   $117 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$113 >> 2] | 0) + 24 >> 2] & 127]($113) | 0;
   HEAP32[$35 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$36 >> 2] = HEAP32[$__e >> 2];
   $120 = HEAP8[$117 >> 0] | 0;
   if (!($120 & 1)) {
    $132 = $117 + 4 | 0;
    $133 = ($120 & 255) >>> 1;
    $134 = $117 + 4 | 0;
   } else {
    $124 = HEAP32[$117 + 8 >> 2] | 0;
    $132 = $124;
    $133 = HEAP32[$117 + 4 >> 2] | 0;
    $134 = $124;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$35 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$36 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($34, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $134, $132 + ($133 << 2) | 0);
   HEAP32[$__b >> 2] = HEAP32[$34 >> 2];
   break;
  }
 case 120:
  {
   $110 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$33 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$32 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$33 + 0 >> 2];
   FUNCTION_TABLE_viiiiiii[$110 & 63]($agg$result, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm);
   STACKTOP = sp;
   return;
  }
 case 114:
  {
   HEAP32[$22 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$23 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$22 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$23 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($21, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 44952, 44996 | 0);
   HEAP32[$__b >> 2] = HEAP32[$21 >> 2];
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$29 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$30 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($28, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 45024, 45056 | 0);
   HEAP32[$__b >> 2] = HEAP32[$28 >> 2];
   break;
  }
 case 77:
  {
   HEAP32[$18 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 70:
  {
   HEAP32[$12 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$12 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($11, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 44920, 44952 | 0);
   HEAP32[$__b >> 2] = HEAP32[$11 >> 2];
   break;
  }
 case 109:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 106:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 68:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($8, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 44888, 44920 | 0);
   HEAP32[$__b >> 2] = HEAP32[$8 >> 2];
   break;
  }
 case 82:
  {
   HEAP32[$25 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$26 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$25 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$26 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($24, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 45e3, 45020 | 0);
   HEAP32[$__b >> 2] = HEAP32[$24 >> 2];
   break;
  }
 case 37:
  {
   HEAP32[$39 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$31 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 112:
  {
   HEAP32[$20 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$20 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 default:
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
 } while (0);
 HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $1 = 0, $10 = 0, $11 = 0, $110 = 0, $113 = 0, $117 = 0, $12 = 0, $120 = 0, $124 = 0, $13 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $5 = 0, $52 = 0, $56 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy30 = sp + 160 | 0;
 $$byval_copy26 = sp + 156 | 0;
 $1 = sp + 152 | 0;
 $2 = sp + 148 | 0;
 $3 = sp + 144 | 0;
 $4 = sp + 140 | 0;
 $5 = sp + 136 | 0;
 $6 = sp + 132 | 0;
 $7 = sp + 128 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 112 | 0;
 $12 = sp + 108 | 0;
 $13 = sp + 104 | 0;
 $14 = sp + 100 | 0;
 $15 = sp + 96 | 0;
 $16 = sp + 92 | 0;
 $17 = sp + 88 | 0;
 $18 = sp + 84 | 0;
 $19 = sp + 80 | 0;
 $20 = sp + 76 | 0;
 $21 = sp + 72 | 0;
 $22 = sp + 68 | 0;
 $23 = sp + 64 | 0;
 $24 = sp + 60 | 0;
 $25 = sp + 56 | 0;
 $26 = sp + 52 | 0;
 $27 = sp + 48 | 0;
 $28 = sp + 44 | 0;
 $29 = sp + 40 | 0;
 $30 = sp + 36 | 0;
 $31 = sp + 32 | 0;
 $32 = sp + 28 | 0;
 $33 = sp + 24 | 0;
 $34 = sp + 20 | 0;
 $35 = sp + 16 | 0;
 $36 = sp + 12 | 0;
 $37 = sp + 8 | 0;
 $38 = sp + 4 | 0;
 $39 = sp;
 HEAP32[$__err >> 2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1, $__iob);
 __THREW__ = 0;
 $40 = invoke_iii(22, $1 | 0, 45800) | 0;
 $41 = __THREW__;
 __THREW__ = 0;
 if ($41 & 1) {
  $45 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
  ___resumeException($45 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 83:
  {
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$27 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 99:
  {
   $52 = $this + 8 | 0;
   $56 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$52 >> 2] | 0) + 12 >> 2] & 127]($52) | 0;
   HEAP32[$5 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   $59 = HEAP8[$56 >> 0] | 0;
   if (!($59 & 1)) {
    $71 = $56 + 1 | 0;
    $72 = ($59 & 255) >>> 1;
    $73 = $56 + 1 | 0;
   } else {
    $63 = HEAP32[$56 + 8 >> 2] | 0;
    $71 = $63;
    $72 = HEAP32[$56 + 4 >> 2] | 0;
    $73 = $63;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($4, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $73, $71 + $72 | 0);
   HEAP32[$__b >> 2] = HEAP32[$4 >> 2];
   break;
  }
 case 70:
  {
   HEAP32[$12 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$12 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$13 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($11, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 44720, 44728 | 0);
   HEAP32[$__b >> 2] = HEAP32[$11 >> 2];
   break;
  }
 case 112:
  {
   HEAP32[$20 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$20 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 109:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$17 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$29 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$30 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($28, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 44752, 44760 | 0);
   HEAP32[$__b >> 2] = HEAP32[$28 >> 2];
   break;
  }
 case 82:
  {
   HEAP32[$25 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$26 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$25 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$26 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($24, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 44744, 44749 | 0);
   HEAP32[$__b >> 2] = HEAP32[$24 >> 2];
   break;
  }
 case 121:
  {
   HEAP32[$37 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$37 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 89:
  {
   HEAP32[$38 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$38 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 88:
  {
   $113 = $this + 8 | 0;
   $117 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$113 >> 2] | 0) + 24 >> 2] & 127]($113) | 0;
   HEAP32[$35 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$36 >> 2] = HEAP32[$__e >> 2];
   $120 = HEAP8[$117 >> 0] | 0;
   if (!($120 & 1)) {
    $132 = $117 + 1 | 0;
    $133 = ($120 & 255) >>> 1;
    $134 = $117 + 1 | 0;
   } else {
    $124 = HEAP32[$117 + 8 >> 2] | 0;
    $132 = $124;
    $133 = HEAP32[$117 + 4 >> 2] | 0;
    $134 = $124;
   }
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$35 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$36 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($34, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $134, $132 + $133 | 0);
   HEAP32[$__b >> 2] = HEAP32[$34 >> 2];
   break;
  }
 case 120:
  {
   $110 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$33 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$32 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$33 + 0 >> 2];
   FUNCTION_TABLE_viiiiiii[$110 & 63]($agg$result, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm);
   STACKTOP = sp;
   return;
  }
 case 68:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$9 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($8, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 44712, 44720 | 0);
   HEAP32[$__b >> 2] = HEAP32[$8 >> 2];
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$7 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$31 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 106:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 72:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$14 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 73:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 37:
  {
   HEAP32[$39 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 77:
  {
   HEAP32[$18 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$18 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $40);
   break;
  }
 case 114:
  {
   HEAP32[$22 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$23 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 + 0 >> 2] = HEAP32[$22 + 0 >> 2];
   HEAP32[$$byval_copy30 + 0 >> 2] = HEAP32[$23 + 0 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($21, $this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 44728, 44739 | 0);
   HEAP32[$__b >> 2] = HEAP32[$21 >> 2];
   break;
  }
 default:
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
 } while (0);
 HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
 STACKTOP = sp;
 return;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0$i$i = 0, $$025 = 0, $$027 = 0, $$index = 0, $$index10 = 0, $$pre = 0, $$pre$i2$i$i17 = 0, $100 = 0, $101 = 0, $105 = 0, $106 = 0, $109 = 0, $11 = 0, $116 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $133 = 0, $139 = 0, $146 = 0, $149 = 0, $15 = 0, $161 = 0, $162 = 0, $165 = 0, $166 = 0, $17 = 0, $175 = 0, $176 = 0, $189 = 0, $19 = 0, $191 = 0, $21 = 0, $23 = 0, $24 = 0, $3 = 0, $31 = 0, $38 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $64 = 0, $65 = 0, $68 = 0, $7 = 0, $70 = 0, $72 = 0, $79 = 0, $80 = 0, $84 = 0, $88 = 0, $89 = 0, $9 = 0, $__c$0 = 0, $__consume$0$off036 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$063 = 0, $__ky1$037 = 0, $__ky2$048 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$061 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$333 = 0, $__n_does_match$4 = 0, $__n_does_match$546 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$060 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$332 = 0, $__n_might_match$4 = 0, $__st$062 = 0, $__st$134 = 0, $__st$247 = 0, $__st$326 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) {
   __THREW__ = 0;
   invoke_v(5);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $9 = ___cxa_find_matching_catch() | 0;
    $$index = $9;
    $$index10 = tempRet0;
    ___resumeException($$index | 0);
   } else {
    $17 = 0;
    $__status$0 = 0;
   }
  } else {
   $17 = $5;
   $__status$0 = $5;
  }
 } else {
  $17 = 0;
  $__status$0 = $__statbuf;
 }
 $23 = ($__kb | 0) == ($__ke | 0);
 if ($23) {
  $__n_does_match$0$lcssa = 0;
  $__n_might_match$0$lcssa = $3;
 } else {
  $__ky$063 = $__kb;
  $__n_does_match$061 = 0;
  $__n_might_match$060 = $3;
  $__st$062 = $__status$0;
  while (1) {
   $24 = HEAP8[$__ky$063 >> 0] | 0;
   if (!($24 & 1)) $31 = ($24 & 255) >>> 1; else $31 = HEAP32[$__ky$063 + 4 >> 2] | 0;
   if (!$31) {
    HEAP8[$__st$062 >> 0] = 2;
    $__n_does_match$1 = $__n_does_match$061 + 1 | 0;
    $__n_might_match$1 = $__n_might_match$060 + -1 | 0;
   } else {
    HEAP8[$__st$062 >> 0] = 1;
    $__n_does_match$1 = $__n_does_match$061;
    $__n_might_match$1 = $__n_might_match$060;
   }
   $__ky$063 = $__ky$063 + 12 | 0;
   if (($__ky$063 | 0) == ($__ke | 0)) {
    $__n_does_match$0$lcssa = $__n_does_match$1;
    $__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__n_does_match$061 = $__n_does_match$1;
    $__n_might_match$060 = $__n_might_match$1;
    $__st$062 = $__st$062 + 1 | 0;
   }
  }
 }
 $__indx$0 = 0;
 $__n_does_match$2 = $__n_does_match$0$lcssa;
 $__n_might_match$2 = $__n_might_match$0$lcssa;
 L19 : while (1) {
  $38 = HEAP32[$__b >> 2] | 0;
  do if (!$38) $52 = 0; else if ((HEAP32[$38 + 12 >> 2] | 0) == (HEAP32[$38 + 16 >> 2] | 0)) {
   __THREW__ = 0;
   $48 = invoke_ii(HEAP32[(HEAP32[$38 >> 2] | 0) + 36 >> 2] | 0, $38 | 0) | 0;
   $49 = __THREW__;
   __THREW__ = 0;
   if ($49 & 1) {
    label = 6;
    break L19;
   }
   if (($48 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $52 = 0;
    break;
   } else {
    $52 = HEAP32[$__b >> 2] | 0;
    break;
   }
  } else $52 = $38; while (0);
  $53 = ($52 | 0) == 0;
  $54 = HEAP32[$__e >> 2] | 0;
  if (!$54) $$pre$i2$i$i17 = 0; else if ((HEAP32[$54 + 12 >> 2] | 0) == (HEAP32[$54 + 16 >> 2] | 0)) {
   __THREW__ = 0;
   $64 = invoke_ii(HEAP32[(HEAP32[$54 >> 2] | 0) + 36 >> 2] | 0, $54 | 0) | 0;
   $65 = __THREW__;
   __THREW__ = 0;
   if ($65 & 1) {
    label = 6;
    break;
   }
   if (($64 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    $$pre$i2$i$i17 = 0;
   } else $$pre$i2$i$i17 = $54;
  } else $$pre$i2$i$i17 = $54;
  $68 = ($$pre$i2$i$i17 | 0) == 0;
  $70 = HEAP32[$__b >> 2] | 0;
  if (!(($53 ^ $68) & ($__n_might_match$2 | 0) != 0)) {
   label = 65;
   break;
  }
  $72 = HEAP32[$70 + 12 >> 2] | 0;
  if (($72 | 0) == (HEAP32[$70 + 16 >> 2] | 0)) {
   __THREW__ = 0;
   $79 = invoke_ii(HEAP32[(HEAP32[$70 >> 2] | 0) + 36 >> 2] | 0, $70 | 0) | 0;
   $80 = __THREW__;
   __THREW__ = 0;
   if ($80 & 1) {
    label = 6;
    break;
   } else $$0$i$i = $79;
  } else $$0$i$i = HEAPU8[$72 >> 0] | 0;
  $84 = $$0$i$i & 255;
  if ($__case_sensitive) $__c$0 = $84; else {
   __THREW__ = 0;
   $88 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, $84 | 0) | 0;
   $89 = __THREW__;
   __THREW__ = 0;
   if ($89 & 1) {
    label = 6;
    break;
   } else $__c$0 = $88;
  }
  $$pre = $__indx$0 + 1 | 0;
  if ($23) {
   $__indx$0 = $$pre;
   continue;
  } else {
   $__consume$0$off036 = 0;
   $__ky1$037 = $__kb;
   $__n_does_match$333 = $__n_does_match$2;
   $__n_might_match$332 = $__n_might_match$2;
   $__st$134 = $__status$0;
  }
  while (1) {
   do if ((HEAP8[$__st$134 >> 0] | 0) == 1) {
    if (!(HEAP8[$__ky1$037 >> 0] & 1)) $100 = $__ky1$037 + 1 | 0; else $100 = HEAP32[$__ky1$037 + 8 >> 2] | 0;
    $101 = HEAP8[$100 + $__indx$0 >> 0] | 0;
    if ($__case_sensitive) $__kc$0 = $101; else {
     __THREW__ = 0;
     $105 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, $101 | 0) | 0;
     $106 = __THREW__;
     __THREW__ = 0;
     if ($106 & 1) {
      label = 5;
      break L19;
     } else $__kc$0 = $105;
    }
    if ($__c$0 << 24 >> 24 != $__kc$0 << 24 >> 24) {
     HEAP8[$__st$134 >> 0] = 0;
     $__consume$1$off0 = $__consume$0$off036;
     $__n_does_match$4 = $__n_does_match$333;
     $__n_might_match$4 = $__n_might_match$332 + -1 | 0;
     break;
    }
    $109 = HEAP8[$__ky1$037 >> 0] | 0;
    if (!($109 & 1)) $116 = ($109 & 255) >>> 1; else $116 = HEAP32[$__ky1$037 + 4 >> 2] | 0;
    if (($116 | 0) == ($$pre | 0)) {
     HEAP8[$__st$134 >> 0] = 2;
     $__consume$1$off0 = 1;
     $__n_does_match$4 = $__n_does_match$333 + 1 | 0;
     $__n_might_match$4 = $__n_might_match$332 + -1 | 0;
    } else {
     $__consume$1$off0 = 1;
     $__n_does_match$4 = $__n_does_match$333;
     $__n_might_match$4 = $__n_might_match$332;
    }
   } else {
    $__consume$1$off0 = $__consume$0$off036;
    $__n_does_match$4 = $__n_does_match$333;
    $__n_might_match$4 = $__n_might_match$332;
   } while (0);
   $__ky1$037 = $__ky1$037 + 12 | 0;
   if (($__ky1$037 | 0) == ($__ke | 0)) break; else {
    $__consume$0$off036 = $__consume$1$off0;
    $__n_does_match$333 = $__n_does_match$4;
    $__n_might_match$332 = $__n_might_match$4;
    $__st$134 = $__st$134 + 1 | 0;
   }
  }
  if (!$__consume$1$off0) {
   $__indx$0 = $$pre;
   $__n_does_match$2 = $__n_does_match$4;
   $__n_might_match$2 = $__n_might_match$4;
   continue;
  }
  $124 = HEAP32[$__b >> 2] | 0;
  $125 = $124 + 12 | 0;
  $126 = HEAP32[$125 >> 2] | 0;
  if (($126 | 0) == (HEAP32[$124 + 16 >> 2] | 0)) {
   __THREW__ = 0;
   invoke_ii(HEAP32[(HEAP32[$124 >> 2] | 0) + 40 >> 2] | 0, $124 | 0) | 0;
   $133 = __THREW__;
   __THREW__ = 0;
   if ($133 & 1) {
    label = 6;
    break;
   }
  } else HEAP32[$125 >> 2] = $126 + 1;
  if (($__n_does_match$4 + $__n_might_match$4 | 0) >>> 0 < 2) {
   $__indx$0 = $$pre;
   $__n_does_match$2 = $__n_does_match$4;
   $__n_might_match$2 = $__n_might_match$4;
   continue;
  } else {
   $__ky2$048 = $__kb;
   $__n_does_match$546 = $__n_does_match$4;
   $__st$247 = $__status$0;
  }
  while (1) {
   if ((HEAP8[$__st$247 >> 0] | 0) == 2) {
    $139 = HEAP8[$__ky2$048 >> 0] | 0;
    if (!($139 & 1)) $146 = ($139 & 255) >>> 1; else $146 = HEAP32[$__ky2$048 + 4 >> 2] | 0;
    if (($146 | 0) == ($$pre | 0)) $__n_does_match$6 = $__n_does_match$546; else {
     HEAP8[$__st$247 >> 0] = 0;
     $__n_does_match$6 = $__n_does_match$546 + -1 | 0;
    }
   } else $__n_does_match$6 = $__n_does_match$546;
   $149 = $__ky2$048 + 12 | 0;
   if (($149 | 0) == ($__ke | 0)) {
    $__indx$0 = $$pre;
    $__n_does_match$2 = $__n_does_match$6;
    $__n_might_match$2 = $__n_might_match$4;
    continue L19;
   } else {
    $__ky2$048 = $149;
    $__n_does_match$546 = $__n_does_match$6;
    $__st$247 = $__st$247 + 1 | 0;
   }
  }
 }
 if ((label | 0) == 5) {
  $11 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $11;
  $lpad$phi$index3 = tempRet0;
 } else if ((label | 0) == 6) {
  $13 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $13;
  $lpad$phi$index3 = tempRet0;
 } else if ((label | 0) == 65) {
  do if (!$70) {
   $165 = 0;
   label = 71;
  } else if ((HEAP32[$70 + 12 >> 2] | 0) == (HEAP32[$70 + 16 >> 2] | 0)) {
   __THREW__ = 0;
   $161 = invoke_ii(HEAP32[(HEAP32[$70 >> 2] | 0) + 36 >> 2] | 0, $70 | 0) | 0;
   $162 = __THREW__;
   __THREW__ = 0;
   if (!($162 & 1)) if (($161 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $165 = 0;
    label = 71;
    break;
   } else {
    $165 = HEAP32[$__b >> 2] | 0;
    label = 71;
    break;
   }
  } else {
   $165 = $70;
   label = 71;
  } while (0);
  L88 : do if ((label | 0) == 71) {
   $166 = ($165 | 0) == 0;
   do if ($68) label = 77; else {
    if ((HEAP32[$$pre$i2$i$i17 + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i17 + 16 >> 2] | 0)) if ($166) break; else {
     label = 79;
     break;
    }
    __THREW__ = 0;
    $175 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i17 >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i17 | 0) | 0;
    $176 = __THREW__;
    __THREW__ = 0;
    if ($176 & 1) break L88;
    if (($175 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 77;
     break;
    } else if ($166) break; else {
     label = 79;
     break;
    }
   } while (0);
   if ((label | 0) == 77) if ($166) label = 79;
   if ((label | 0) == 79) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   L104 : do if ($23) label = 83; else {
    $$027 = $__kb;
    $__st$326 = $__status$0;
    while (1) {
     if ((HEAP8[$__st$326 >> 0] | 0) == 2) {
      $$025 = $$027;
      break L104;
     }
     $$027 = $$027 + 12 | 0;
     if (($$027 | 0) == ($__ke | 0)) {
      label = 83;
      break;
     } else $__st$326 = $__st$326 + 1 | 0;
    }
   } while (0);
   if ((label | 0) == 83) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$025 = $__ke;
   }
   if (!$17) {
    STACKTOP = sp;
    return $$025 | 0;
   }
   __THREW__ = 0;
   invoke_vi(188, $17 | 0);
   $189 = __THREW__;
   __THREW__ = 0;
   if ($189 & 1) {
    $191 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($191);
   } else {
    STACKTOP = sp;
    return $$025 | 0;
   }
  } while (0);
  $15 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $15;
  $lpad$phi$index3 = tempRet0;
 }
 if (!$17) {
  $$index = $lpad$phi$index;
  $$index10 = $lpad$phi$index3;
  ___resumeException($$index | 0);
 }
 __THREW__ = 0;
 invoke_vi(188, $17 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $21 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($21);
 } else {
  $$index = $lpad$phi$index;
  $$index10 = $lpad$phi$index3;
  ___resumeException($$index | 0);
 }
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier($this, $loc, $obj, $f) {
 $this = $this | 0;
 $loc = $loc | 0;
 $obj = $obj | 0;
 $f = $f | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i1$i$i = 0, $$0$ph5$i$i$i = 0, $$0$ph5$i$i$i15 = 0, $$0$ph7$i$i$i = 0, $$0$ph7$i$i$i7 = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$ph6$i$in$i$i = 0, $$01$ph6$i$in$i$i8 = 0, $$0121 = 0, $$013$i$in$i$i = 0, $$013$i$in$i$i10 = 0, $$0220 = 0, $$04 = 0, $$1 = 0, $$13 = 0, $$idx$val$i$i = 0, $$idx$val$i15$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i = 0, $0 = 0, $1 = 0, $102 = 0, $106 = 0, $109 = 0, $110 = 0, $112 = 0, $116 = 0, $118 = 0, $12 = 0, $121 = 0, $127 = 0, $129 = 0, $13 = 0, $132 = 0, $136 = 0, $140 = 0, $141 = 0, $146 = 0, $149 = 0, $151 = 0, $152 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $42 = 0, $47 = 0, $48 = 0, $54 = 0, $55 = 0, $61 = 0, $66 = 0, $67 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $75 = 0, $79 = 0, $81 = 0, $84 = 0, $85 = 0, $89 = 0, $91 = 0, $93 = 0, $96 = 0, $__nd$0$in$i21$i$i$i$i$i$i = 0, $__parent$i$i$i$i$i = 0, $binds = 0, $found_at = 0, $self = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__parent$i$i$i$i$i = sp + 32 | 0;
 $found_at = sp + 28 | 0;
 $self = sp + 24 | 0;
 $0 = sp + 12 | 0;
 $binds = sp;
 HEAP32[$found_at >> 2] = 0;
 HEAP32[$self >> 2] = 0;
 $1 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $obj, $obj, 0, $found_at, $self) | 0;
 if (!$1) {
  $3 = ___cxa_allocate_exception(24) | 0;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  $4 = HEAP8[$f >> 0] | 0;
  if (!($4 & 1)) $12 = ($4 & 255) >>> 1; else $12 = HEAP32[$f + 4 >> 2] | 0;
  __THREW__ = 0;
  invoke_viiii(14, $0 | 0, 37320, 22, $12 + 22 | 0);
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) label = 12; else {
   if (!(HEAP8[$f >> 0] & 1)) $21 = $f + 1 | 0; else $21 = HEAP32[$f + 8 >> 2] | 0;
   __THREW__ = 0;
   invoke_iiii(31, $0 | 0, $21 | 0, $12 | 0) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) label = 12; else {
    __THREW__ = 0;
    invoke_viiii(17, $3 | 0, $this + 72 | 0, $loc | 0, $0 | 0);
    $25 = __THREW__;
    __THREW__ = 0;
    if ($25 & 1) $$04 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3 | 0, 37312, 185);
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) $$04 = 0; else {}
    }
    $31 = ___cxa_find_matching_catch() | 0;
    $32 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    if ($$04) {
     $$0121 = $31;
     $$0220 = $32;
    } else {
     $$1 = $31;
     $$13 = $32;
     ___resumeException($$1 | 0);
    }
   }
  }
  if ((label | 0) == 12) {
   $29 = ___cxa_find_matching_catch() | 0;
   $30 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   $$0121 = $29;
   $$0220 = $30;
  }
  ___cxa_free_exception($3 | 0);
  $$1 = $$0121;
  $$13 = $$0220;
  ___resumeException($$1 | 0);
 }
 $33 = ___dynamic_cast($1, 37472, 37528, 0) | 0;
 if ($33) {
  $35 = $33 + 24 | 0;
  $36 = HEAP32[$35 >> 2] | 0;
  if (!$36) label = 23; else {
   $$0$ph7$i$i$i = $35;
   $$01$ph6$i$in$i$i = $36;
   L27 : while (1) {
    $$013$i$in$i$i = $$01$ph6$i$in$i$i;
    while (1) {
     if ((HEAP32[$$013$i$in$i$i + 16 >> 2] | 0) >>> 0 >= $f >>> 0) break;
     $42 = HEAP32[$$013$i$in$i$i + 4 >> 2] | 0;
     if (!$42) {
      $$0$ph5$i$i$i = $$0$ph7$i$i$i;
      break L27;
     } else $$013$i$in$i$i = $42;
    }
    $$01$ph6$i$in$i$i = HEAP32[$$013$i$in$i$i >> 2] | 0;
    if (!$$01$ph6$i$in$i$i) {
     $$0$ph5$i$i$i = $$013$i$in$i$i;
     break;
    } else $$0$ph7$i$i$i = $$013$i$in$i$i;
   }
   if (($$0$ph5$i$i$i | 0) == ($35 | 0)) label = 23; else if ((HEAP32[$$0$ph5$i$i$i + 16 >> 2] | 0) >>> 0 > $f >>> 0) label = 23; else $47 = $$0$ph5$i$i$i;
  }
  if ((label | 0) == 23) $47 = $35;
  $48 = HEAP32[$47 + 24 >> 2] | 0;
  __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($this + 72 | 0, $loc, $33, HEAP32[$self >> 2] | 0, HEAP32[$found_at >> 2] | 0, $33 + 8 | 0);
  $$0 = $48;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $54 = $1 + 32 | 0;
 $55 = HEAP32[$54 >> 2] | 0;
 if (!$55) label = 32; else {
  $$0$ph7$i$i$i7 = $54;
  $$01$ph6$i$in$i$i8 = $55;
  L41 : while (1) {
   $$013$i$in$i$i10 = $$01$ph6$i$in$i$i8;
   while (1) {
    if ((HEAP32[$$013$i$in$i$i10 + 16 >> 2] | 0) >>> 0 >= $f >>> 0) break;
    $61 = HEAP32[$$013$i$in$i$i10 + 4 >> 2] | 0;
    if (!$61) {
     $$0$ph5$i$i$i15 = $$0$ph7$i$i$i7;
     break L41;
    } else $$013$i$in$i$i10 = $61;
   }
   $$01$ph6$i$in$i$i8 = HEAP32[$$013$i$in$i$i10 >> 2] | 0;
   if (!$$01$ph6$i$in$i$i8) {
    $$0$ph5$i$i$i15 = $$013$i$in$i$i10;
    break;
   } else $$0$ph7$i$i$i7 = $$013$i$in$i$i10;
  }
  if (($$0$ph5$i$i$i15 | 0) == ($54 | 0)) label = 32; else if ((HEAP32[$$0$ph5$i$i$i15 + 16 >> 2] | 0) >>> 0 > $f >>> 0) label = 32; else $66 = $$0$ph5$i$i$i15;
 }
 if ((label | 0) == 32) $66 = $54;
 $67 = HEAP32[$66 + 20 >> 2] | 0;
 $69 = $binds + 4 | 0;
 HEAP32[$69 >> 2] = 0;
 $70 = $binds + 8 | 0;
 HEAP32[$70 >> 2] = 0;
 $71 = $binds + 4 | 0;
 HEAP32[$binds >> 2] = $71;
 $$idx$val$i$i = HEAP32[$1 + 8 >> 2] | 0;
 $72 = $1 + 12 | 0;
 L52 : do if (($$idx$val$i$i | 0) != ($72 | 0)) {
  $$idx$val$i15$i$i = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $74 = invoke_ii(67, 24) | 0;
   $75 = __THREW__;
   __THREW__ = 0;
   if ($75 & 1) break;
   $79 = $$idx$val$i15$i$i + 16 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $84 = HEAP32[$79 + 4 >> 2] | 0;
   $85 = $74 + 16 | 0;
   HEAP32[$85 >> 2] = $81;
   HEAP32[$85 + 4 >> 2] = $84;
   $89 = $81;
   $$pre$i$i$i$i$i$i = HEAP32[$71 >> 2] | 0;
   do if ((HEAP32[$binds >> 2] | 0) == ($71 | 0)) {
    $102 = $71;
    label = 41;
   } else {
    $91 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($91) {
     $$0$i$i$i$i$i$i$i$i = $71;
     while (1) {
      $96 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$96 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $96; else {
       $$01$i$i$i$i$i$i$i$i = $96;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $93 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$93) {
       $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $93;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $89 >>> 0) {
     $102 = $$01$i$i$i$i$i$i$i$i;
     label = 41;
    } else {
     if ($91) {
      HEAP32[$__parent$i$i$i$i$i >> 2] = $71;
      $$0$i$i$i$i1$i$i = $71;
      $116 = $71;
      break;
     } else $__nd$0$in$i21$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i23$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i + 16 >> 2] | 0;
      if ($89 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i >>> 0) {
       $106 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i >> 2] | 0;
       if (!$106) {
        label = 47;
        break;
       } else {
        $__nd$0$in$i21$i$i$i$i$i$i = $106;
        continue;
       }
      }
      if ($$idx2$val$i23$i$i$i$i$i$i >>> 0 >= $89 >>> 0) {
       label = 51;
       break;
      }
      $109 = $__nd$0$in$i21$i$i$i$i$i$i + 4 | 0;
      $110 = HEAP32[$109 >> 2] | 0;
      if (!$110) {
       label = 50;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i = $110;
     }
     if ((label | 0) == 47) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $__nd$0$in$i21$i$i$i$i$i$i;
      $116 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 50) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $109;
      $116 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 51) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $__parent$i$i$i$i$i;
      $116 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 41) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     HEAP32[$__parent$i$i$i$i$i >> 2] = $71;
     $$0$i$i$i$i1$i$i = $71;
     $116 = $71;
     break;
    } else {
     HEAP32[$__parent$i$i$i$i$i >> 2] = $102;
     $$0$i$i$i$i1$i$i = $102 + 4 | 0;
     $116 = $102;
     break;
    }
   } while (0);
   $112 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
   if (!$112) {
    HEAP32[$74 >> 2] = 0;
    HEAP32[$74 + 4 >> 2] = 0;
    HEAP32[$74 + 8 >> 2] = $116;
    HEAP32[$$0$i$i$i$i1$i$i >> 2] = $74;
    $118 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
    if (!$118) $121 = $74; else {
     HEAP32[$binds >> 2] = $118;
     $121 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$69 >> 2] | 0, $121);
    HEAP32[$70 >> 2] = (HEAP32[$70 >> 2] | 0) + 1;
   } else if (!(($112 | 0) == ($74 | 0) | ($74 | 0) == 0)) __ZdlPv($74);
   $127 = HEAP32[$$idx$val$i15$i$i + 4 >> 2] | 0;
   if (!$127) {
    $$0$i$i$i$i$i = $$idx$val$i15$i$i;
    while (1) {
     $132 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$132 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $132;
      break;
     } else $$0$i$i$i$i$i = $132;
    }
   } else {
    $$0$i$i$i$i$i$i = $127;
    while (1) {
     $129 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$129) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $129;
    }
   }
   if (($$01$i$i$i$i$i | 0) == ($72 | 0)) break L52; else $$idx$val$i15$i$i = $$01$i$i$i$i$i;
  }
  $136 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$69 >> 2] | 0);
  ___resumeException($136 | 0);
 } while (0);
 __THREW__ = 0;
 $140 = invoke_iii(34, $binds | 0, $1 + 24 | 0) | 0;
 $141 = __THREW__;
 __THREW__ = 0;
 if (!($141 & 1)) {
  HEAP32[$140 >> 2] = $67;
  __THREW__ = 0;
  invoke_viiiiii(19, $this + 72 | 0, $loc | 0, $1 | 0, HEAP32[$self >> 2] | 0, HEAP32[$found_at >> 2] | 0, $binds | 0);
  $146 = __THREW__;
  __THREW__ = 0;
  if (!($146 & 1)) {
   $149 = HEAP32[$1 + 20 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$69 >> 2] | 0);
   $$0 = $149;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $151 = ___cxa_find_matching_catch() | 0;
 $152 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$69 >> 2] | 0);
 $$1 = $151;
 $$13 = $152;
 ___resumeException($$1 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectERjjb($agg$result, $obj_, $counter, $skip) {
 $agg$result = $agg$result | 0;
 $obj_ = $obj_ | 0;
 $counter = $counter | 0;
 $skip = $skip | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i14 = 0, $$0$i$i$i$i22 = 0, $$0$i$i$i16 = 0, $$0$i$i$i24 = 0, $$0$ph5$i$i$i = 0, $$0$ph7$i$i$i = 0, $$01 = 0, $$01$i$i$i = 0, $$01$i$i$i18 = 0, $$01$i$i$i26 = 0, $$01$ph6$i$in$i$i = 0, $$013$i$in$i$i = 0, $$idx$val$i = 0, $$idx$val$i10 = 0, $$idx$val$i2748 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $104 = 0, $108 = 0, $114 = 0, $116 = 0, $119 = 0, $125 = 0, $128 = 0, $129 = 0, $130 = 0, $133 = 0, $135 = 0, $138 = 0, $143 = 0, $145 = 0, $148 = 0, $15 = 0, $150 = 0, $151 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $43 = 0, $48 = 0, $49 = 0, $50 = 0, $53 = 0, $54 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $64 = 0, $65 = 0, $68 = 0, $69 = 0, $70 = 0, $72 = 0, $79 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $94 = 0, $95 = 0, $96 = 0, $99 = 0, $counter2 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $r = sp + 28 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 4 | 0;
 $counter2 = sp;
 $2 = $r + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $r + 8 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $r + 4 | 0;
 HEAP32[$r >> 2] = $4;
 L1 : do if ($obj_) {
  $6 = ___dynamic_cast($obj_, 37456, 37528, 0) | 0;
  L3 : do if (!$6) {
   $39 = ___dynamic_cast($obj_, 37456, 37792, 0) | 0;
   do if (!$39) {
    $108 = ___dynamic_cast($obj_, 37456, 37848, 0) | 0;
    if ($108) {
     HEAP32[$counter2 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(20, $agg$result | 0, HEAP32[$108 + 8 >> 2] | 0, $counter2 | 0, HEAP32[$108 + 12 >> 2] | 0);
     $114 = __THREW__;
     __THREW__ = 0;
     if ($114 & 1) break;
     $150 = HEAP32[$2 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $150);
     STACKTOP = sp;
     return;
    }
    $116 = ___dynamic_cast($obj_, 37456, 37912, 0) | 0;
    if (!$116) break L1;
    $119 = (HEAP32[$counter >> 2] | 0) + 1 | 0;
    HEAP32[$counter >> 2] = $119;
    if ($119 >>> 0 <= $skip >>> 0) {
     HEAP32[$agg$result + 4 >> 2] = 0;
     HEAP32[$agg$result + 8 >> 2] = 0;
     HEAP32[$agg$result >> 2] = $agg$result + 4;
     $150 = 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $150);
     STACKTOP = sp;
     return;
    }
    $$idx$val$i10 = HEAP32[$116 + 28 >> 2] | 0;
    $125 = $116 + 32 | 0;
    if (($$idx$val$i10 | 0) == ($125 | 0)) break L1; else $128 = $$idx$val$i10;
    while (1) {
     __THREW__ = 0;
     $129 = invoke_iii(37, $r | 0, $128 + 16 | 0) | 0;
     $130 = __THREW__;
     __THREW__ = 0;
     if ($130 & 1) break;
     HEAP32[$129 >> 2] = 2;
     $133 = HEAP32[$128 + 4 >> 2] | 0;
     if (!$133) {
      $$0$i$i$i = $128;
      while (1) {
       $138 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$138 >> 2] | 0) == ($$0$i$i$i | 0)) {
        $$01$i$i$i = $138;
        break;
       } else $$0$i$i$i = $138;
      }
     } else {
      $$0$i$i$i$i = $133;
      while (1) {
       $135 = HEAP32[$$0$i$i$i$i >> 2] | 0;
       if (!$135) {
        $$01$i$i$i = $$0$i$i$i$i;
        break;
       } else $$0$i$i$i$i = $135;
      }
     }
     if (($$01$i$i$i | 0) == ($125 | 0)) break L1; else $128 = $$01$i$i$i;
    }
    $33 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $33;
    $lpad$phi$index3 = tempRet0;
    break L3;
   } else {
    __THREW__ = 0;
    invoke_viiii(20, $0 | 0, HEAP32[$39 + 12 >> 2] | 0, $counter | 0, $skip | 0);
    $43 = __THREW__;
    __THREW__ = 0;
    if (!($43 & 1)) {
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, HEAP32[$4 >> 2] | 0);
     HEAP32[$r >> 2] = HEAP32[$0 >> 2];
     $48 = HEAP32[$0 + 4 >> 2] | 0;
     HEAP32[$2 >> 2] = $48;
     $49 = $0 + 8 | 0;
     $50 = HEAP32[$49 >> 2] | 0;
     HEAP32[$3 >> 2] = $50;
     if (!$50) {
      HEAP32[$r >> 2] = $4;
      $54 = $48;
     } else {
      HEAP32[$48 + 8 >> 2] = $4;
      $53 = $0 + 4 | 0;
      HEAP32[$0 >> 2] = $53;
      HEAP32[$53 >> 2] = 0;
      HEAP32[$49 >> 2] = 0;
      $54 = 0;
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $54);
     __THREW__ = 0;
     invoke_viiii(20, $1 | 0, HEAP32[$39 + 8 >> 2] | 0, $counter | 0, $skip | 0);
     $57 = __THREW__;
     __THREW__ = 0;
     if (!($57 & 1)) {
      $59 = HEAP32[$1 >> 2] | 0;
      $60 = $1 + 4 | 0;
      L51 : do if (($59 | 0) != ($60 | 0)) {
       $69 = $59;
       while (1) {
        $68 = $69 + 16 | 0;
        $70 = HEAP32[$2 >> 2] | 0;
        if (!$70) label = 33; else {
         $72 = HEAP32[$68 >> 2] | 0;
         $$0$ph7$i$i$i = $4;
         $$01$ph6$i$in$i$i = $70;
         L56 : while (1) {
          $$013$i$in$i$i = $$01$ph6$i$in$i$i;
          while (1) {
           if ((HEAP32[$$013$i$in$i$i + 16 >> 2] | 0) >>> 0 >= $72 >>> 0) break;
           $79 = HEAP32[$$013$i$in$i$i + 4 >> 2] | 0;
           if (!$79) {
            $$0$ph5$i$i$i = $$0$ph7$i$i$i;
            break L56;
           } else $$013$i$in$i$i = $79;
          }
          $$01$ph6$i$in$i$i = HEAP32[$$013$i$in$i$i >> 2] | 0;
          if (!$$01$ph6$i$in$i$i) {
           $$0$ph5$i$i$i = $$013$i$in$i$i;
           break;
          } else $$0$ph7$i$i$i = $$013$i$in$i$i;
         }
         if (($$0$ph5$i$i$i | 0) == ($4 | 0)) label = 33; else if ($72 >>> 0 < (HEAP32[$$0$ph5$i$i$i + 16 >> 2] | 0) >>> 0) label = 33; else if (!(HEAP32[$$0$ph5$i$i$i + 20 >> 2] | 0)) {
          $94 = HEAP32[$69 + 20 >> 2] | 0;
          __THREW__ = 0;
          $95 = invoke_iii(37, $r | 0, $68 | 0) | 0;
          $96 = __THREW__;
          __THREW__ = 0;
          if ($96 & 1) break;
          HEAP32[$95 >> 2] = $94;
         }
        }
        if ((label | 0) == 33) {
         label = 0;
         $86 = HEAP32[$69 + 20 >> 2] | 0;
         __THREW__ = 0;
         $87 = invoke_iii(37, $r | 0, $68 | 0) | 0;
         $88 = __THREW__;
         __THREW__ = 0;
         if ($88 & 1) break;
         HEAP32[$87 >> 2] = $86;
        }
        $99 = HEAP32[$69 + 4 >> 2] | 0;
        if (!$99) {
         $$0$i$i$i16 = $69;
         while (1) {
          $104 = HEAP32[$$0$i$i$i16 + 8 >> 2] | 0;
          if ((HEAP32[$104 >> 2] | 0) == ($$0$i$i$i16 | 0)) {
           $$01$i$i$i18 = $104;
           break;
          } else $$0$i$i$i16 = $104;
         }
        } else {
         $$0$i$i$i$i14 = $99;
         while (1) {
          $101 = HEAP32[$$0$i$i$i$i14 >> 2] | 0;
          if (!$101) {
           $$01$i$i$i18 = $$0$i$i$i$i14;
           break;
          } else $$0$i$i$i$i14 = $101;
         }
        }
        if (($$01$i$i$i18 | 0) == ($60 | 0)) break L51; else $69 = $$01$i$i$i18;
       }
       $64 = ___cxa_find_matching_catch() | 0;
       $65 = tempRet0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$1 + 4 >> 2] | 0);
       $$0 = $64;
       $$01 = $65;
       $$pre$phiZ2D = $r;
       $151 = HEAP32[$2 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($$pre$phiZ2D, $151);
       ___resumeException($$0 | 0);
      } while (0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$1 + 4 >> 2] | 0);
      break L1;
     }
    }
   } while (0);
   $37 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $37;
   $lpad$phi$index3 = tempRet0;
  } else {
   $9 = (HEAP32[$counter >> 2] | 0) + 1 | 0;
   HEAP32[$counter >> 2] = $9;
   if ($9 >>> 0 <= $skip >>> 0) {
    HEAP32[$agg$result + 4 >> 2] = 0;
    HEAP32[$agg$result + 8 >> 2] = 0;
    HEAP32[$agg$result >> 2] = $agg$result + 4;
    $150 = 0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $150);
    STACKTOP = sp;
    return;
   }
   $$idx$val$i = HEAP32[$6 + 20 >> 2] | 0;
   $15 = $6 + 24 | 0;
   if (($$idx$val$i | 0) == ($15 | 0)) break L1; else $$idx$val$i2748 = $$idx$val$i;
   while (1) {
    $18 = HEAP32[$$idx$val$i2748 + 20 >> 2] | 0;
    __THREW__ = 0;
    $20 = invoke_iii(37, $r | 0, $$idx$val$i2748 + 16 | 0) | 0;
    $21 = __THREW__;
    __THREW__ = 0;
    if ($21 & 1) break;
    HEAP32[$20 >> 2] = $18;
    $24 = HEAP32[$$idx$val$i2748 + 4 >> 2] | 0;
    if (!$24) {
     $$0$i$i$i24 = $$idx$val$i2748;
     while (1) {
      $29 = HEAP32[$$0$i$i$i24 + 8 >> 2] | 0;
      if ((HEAP32[$29 >> 2] | 0) == ($$0$i$i$i24 | 0)) {
       $$01$i$i$i26 = $29;
       break;
      } else $$0$i$i$i24 = $29;
     }
    } else {
     $$0$i$i$i$i22 = $24;
     while (1) {
      $26 = HEAP32[$$0$i$i$i$i22 >> 2] | 0;
      if (!$26) {
       $$01$i$i$i26 = $$0$i$i$i$i22;
       break;
      } else $$0$i$i$i$i22 = $26;
     }
    }
    if (($$01$i$i$i26 | 0) == ($15 | 0)) break L1; else $$idx$val$i2748 = $$01$i$i$i26;
   }
   $35 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $35;
   $lpad$phi$index3 = tempRet0;
  } while (0);
  $$0 = $lpad$phi$index;
  $$01 = $lpad$phi$index3;
  $$pre$phiZ2D = $r;
  $151 = HEAP32[$2 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($$pre$phiZ2D, $151);
  ___resumeException($$0 | 0);
 } while (0);
 HEAP32[$agg$result >> 2] = HEAP32[$r >> 2];
 $143 = HEAP32[$2 >> 2] | 0;
 HEAP32[$agg$result + 4 >> 2] = $143;
 $145 = HEAP32[$3 >> 2] | 0;
 HEAP32[$agg$result + 8 >> 2] = $145;
 $148 = $agg$result + 4 | 0;
 if (!$145) {
  HEAP32[$agg$result >> 2] = $148;
  $150 = $143;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $150);
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$143 + 8 >> 2] = $148;
  HEAP32[$r >> 2] = $4;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  $150 = 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $150);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16locale5__impC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $10 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $66 = 0, $67 = 0, $69 = 0, $71 = 0, $73 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $88 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 45720;
 $2 = $this + 8 | 0;
 __THREW__ = 0;
 invoke_vii(77, $2 | 0, 28);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $84 = ___cxa_find_matching_catch() | 0;
  $$1 = tempRet0;
  $$12 = $84;
  ___resumeException($$12 | 0);
 }
 $5 = $this + 144 | 0;
 __THREW__ = 0;
 invoke_viii(3, $5 | 0, 45704, 1);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $86 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $86;
 } else {
  $8 = HEAP32[$2 >> 2] | 0;
  $9 = $this + 12 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if (($10 | 0) != ($8 | 0)) HEAP32[$9 >> 2] = $10 + (~(($10 + -4 - $8 | 0) >>> 2) << 2);
  HEAP32[12653] = 0;
  HEAP32[12652] = 44168;
  __THREW__ = 0;
  invoke_vii(78, $this | 0, 50608);
  $16 = __THREW__;
  __THREW__ = 0;
  do if ($16 & 1) label = 41; else {
   HEAP32[12651] = 0;
   HEAP32[12650] = 44208;
   __THREW__ = 0;
   invoke_vii(79, $this | 0, 50600);
   $18 = __THREW__;
   __THREW__ = 0;
   if ($18 & 1) label = 41; else {
    __ZNSt3__15ctypeIcEC2EPKtbj(50584, 0, 0, 1);
    __THREW__ = 0;
    invoke_vii(80, $this | 0, 50584);
    $20 = __THREW__;
    __THREW__ = 0;
    if ($20 & 1) label = 41; else {
     HEAP32[12645] = 0;
     HEAP32[12644] = 46776;
     __THREW__ = 0;
     invoke_vii(81, $this | 0, 50576);
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) label = 41; else {
      HEAP32[12643] = 0;
      HEAP32[12642] = 46992;
      __THREW__ = 0;
      invoke_vii(82, $this | 0, 50568);
      $24 = __THREW__;
      __THREW__ = 0;
      if ($24 & 1) label = 41; else {
       __THREW__ = 0;
       invoke_vii(83, 50552, 1);
       $26 = __THREW__;
       __THREW__ = 0;
       if ($26 & 1) label = 41; else {
        __THREW__ = 0;
        invoke_vii(84, $this | 0, 50552);
        $28 = __THREW__;
        __THREW__ = 0;
        if ($28 & 1) label = 41; else {
         HEAP32[12637] = 0;
         HEAP32[12636] = 47216;
         __THREW__ = 0;
         invoke_vii(85, $this | 0, 50544);
         $30 = __THREW__;
         __THREW__ = 0;
         if ($30 & 1) label = 41; else {
          HEAP32[12635] = 0;
          HEAP32[12634] = 47336;
          __THREW__ = 0;
          invoke_vii(86, $this | 0, 50536);
          $32 = __THREW__;
          __THREW__ = 0;
          if ($32 & 1) label = 41; else {
           HEAP32[12629] = 0;
           HEAP32[12628] = 45968;
           HEAP8[50520] = 46;
           HEAP8[50521] = 44;
           HEAP32[12631] = 0;
           HEAP32[12632] = 0;
           HEAP32[12633] = 0;
           __THREW__ = 0;
           invoke_vii(87, $this | 0, 50512);
           $34 = __THREW__;
           __THREW__ = 0;
           if ($34 & 1) label = 41; else {
            HEAP32[12621] = 0;
            HEAP32[12620] = 46008;
            HEAP32[12622] = 46;
            HEAP32[12623] = 44;
            HEAP32[12624] = 0;
            HEAP32[12625] = 0;
            HEAP32[12626] = 0;
            __THREW__ = 0;
            invoke_vii(88, $this | 0, 50480);
            $36 = __THREW__;
            __THREW__ = 0;
            if ($36 & 1) label = 41; else {
             HEAP32[12619] = 0;
             HEAP32[12618] = 44248;
             __THREW__ = 0;
             invoke_vii(89, $this | 0, 50472);
             $38 = __THREW__;
             __THREW__ = 0;
             if ($38 & 1) label = 41; else {
              HEAP32[12617] = 0;
              HEAP32[12616] = 44368;
              __THREW__ = 0;
              invoke_vii(90, $this | 0, 50464);
              $40 = __THREW__;
              __THREW__ = 0;
              if ($40 & 1) label = 41; else {
               HEAP32[12615] = 0;
               HEAP32[12614] = 44440;
               __THREW__ = 0;
               invoke_vii(91, $this | 0, 50456);
               $42 = __THREW__;
               __THREW__ = 0;
               if ($42 & 1) label = 41; else {
                HEAP32[12613] = 0;
                HEAP32[12612] = 44536;
                __THREW__ = 0;
                invoke_vii(92, $this | 0, 50448);
                $44 = __THREW__;
                __THREW__ = 0;
                if ($44 & 1) label = 41; else {
                 HEAP32[12611] = 0;
                 HEAP32[12610] = 45128;
                 __THREW__ = 0;
                 invoke_vii(93, $this | 0, 50440);
                 $46 = __THREW__;
                 __THREW__ = 0;
                 if ($46 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12609] = 0;
                 HEAP32[12608] = 45192;
                 __THREW__ = 0;
                 invoke_vii(94, $this | 0, 50432);
                 $48 = __THREW__;
                 __THREW__ = 0;
                 if ($48 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12607] = 0;
                 HEAP32[12606] = 45256;
                 __THREW__ = 0;
                 invoke_vii(95, $this | 0, 50424);
                 $50 = __THREW__;
                 __THREW__ = 0;
                 if ($50 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12605] = 0;
                 HEAP32[12604] = 45320;
                 __THREW__ = 0;
                 invoke_vii(96, $this | 0, 50416);
                 $52 = __THREW__;
                 __THREW__ = 0;
                 if ($52 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12603] = 0;
                 HEAP32[12602] = 45384;
                 __THREW__ = 0;
                 invoke_vii(97, $this | 0, 50408);
                 $54 = __THREW__;
                 __THREW__ = 0;
                 if ($54 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12601] = 0;
                 HEAP32[12600] = 45464;
                 __THREW__ = 0;
                 invoke_vii(98, $this | 0, 50400);
                 $56 = __THREW__;
                 __THREW__ = 0;
                 if ($56 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12599] = 0;
                 HEAP32[12598] = 45520;
                 __THREW__ = 0;
                 invoke_vii(99, $this | 0, 50392);
                 $58 = __THREW__;
                 __THREW__ = 0;
                 if ($58 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12597] = 0;
                 HEAP32[12596] = 45568;
                 __THREW__ = 0;
                 invoke_vii(100, $this | 0, 50384);
                 $60 = __THREW__;
                 __THREW__ = 0;
                 if ($60 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12593] = 0;
                 HEAP32[12592] = 44616;
                 HEAP32[12594] = 44664;
                 __THREW__ = 0;
                 invoke_vii(101, $this | 0, 50368);
                 $62 = __THREW__;
                 __THREW__ = 0;
                 if ($62 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12589] = 0;
                 HEAP32[12588] = 44768;
                 HEAP32[12590] = 44816;
                 __THREW__ = 0;
                 invoke_vii(102, $this | 0, 50352);
                 $64 = __THREW__;
                 __THREW__ = 0;
                 if ($64 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12585] = 0;
                 HEAP32[12584] = 46712;
                 __THREW__ = 0;
                 $66 = invoke_i(1) | 0;
                 $67 = __THREW__;
                 __THREW__ = 0;
                 if ($67 & 1) {
                  $69 = ___cxa_find_matching_catch() | 0;
                  $eh$lpad$body$index3Z2D = tempRet0;
                  $eh$lpad$body$indexZ2D = $69;
                  break;
                 }
                 HEAP32[12586] = $66;
                 HEAP32[12584] = 45064;
                 __THREW__ = 0;
                 invoke_vii(103, $this | 0, 50336);
                 $71 = __THREW__;
                 __THREW__ = 0;
                 if ($71 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12581] = 0;
                 HEAP32[12580] = 46712;
                 __THREW__ = 0;
                 $73 = invoke_i(1) | 0;
                 $74 = __THREW__;
                 __THREW__ = 0;
                 if ($74 & 1) {
                  $76 = ___cxa_find_matching_catch() | 0;
                  $eh$lpad$body$index3Z2D = tempRet0;
                  $eh$lpad$body$indexZ2D = $76;
                  break;
                 }
                 HEAP32[12582] = $73;
                 HEAP32[12580] = 45096;
                 __THREW__ = 0;
                 invoke_vii(104, $this | 0, 50320);
                 $78 = __THREW__;
                 __THREW__ = 0;
                 if ($78 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12579] = 0;
                 HEAP32[12578] = 45608;
                 __THREW__ = 0;
                 invoke_vii(105, $this | 0, 50312);
                 $80 = __THREW__;
                 __THREW__ = 0;
                 if ($80 & 1) {
                  label = 41;
                  break;
                 }
                 HEAP32[12577] = 0;
                 HEAP32[12576] = 45648;
                 __THREW__ = 0;
                 invoke_vii(106, $this | 0, 50304);
                 $82 = __THREW__;
                 __THREW__ = 0;
                 if ($82 & 1) {
                  label = 41;
                  break;
                 }
                 STACKTOP = sp;
                 return;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while (0);
  if ((label | 0) == 41) {
   $88 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index3Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $88;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
  $$0 = $eh$lpad$body$index3Z2D;
  $$01 = $eh$lpad$body$indexZ2D;
 }
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
 $$1 = $$0;
 $$12 = $$01;
 ___resumeException($$12 | 0);
}

function ___intscan($f, $base, $pok, $0, $1) {
 $f = $f | 0;
 $base = $base | 0;
 $pok = $pok | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$125 = 0, $$126 = 0, $$base24 = 0, $$lcssa = 0, $100 = 0, $107 = 0, $119 = 0, $120 = 0, $127 = 0, $129 = 0, $13 = 0, $130 = 0, $134 = 0, $135 = 0, $143 = 0, $147 = 0, $148 = 0, $150 = 0, $152 = 0, $154 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $164 = 0, $165 = 0, $166 = 0, $17 = 0, $18 = 0, $184 = 0, $185 = 0, $193 = 0, $198 = 0, $200 = 0, $201 = 0, $202 = 0, $204 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $219 = 0, $220 = 0, $221 = 0, $236 = 0, $25 = 0, $252 = 0, $254 = 0, $265 = 0, $274 = 0, $277 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $29 = 0, $3 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $51 = 0, $6 = 0, $67 = 0, $71 = 0, $72 = 0, $82 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $92 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$127 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$362 = 0, $c$4$be = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$747 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $x$073 = 0, $x$138 = 0, $x$256 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if ($base >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $279 = 0;
  $280 = 0;
  tempRet0 = $279;
  STACKTOP = sp;
  return $280 | 0;
 }
 $3 = $f + 4 | 0;
 $4 = $f + 100 | 0;
 do {
  $6 = HEAP32[$3 >> 2] | 0;
  if ($6 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $6 + 1;
   $13 = HEAPU8[$6 >> 0] | 0;
  } else $13 = ___shgetc($f) | 0;
 } while ((_isspace($13) | 0) != 0);
 do if (($13 | 0) == 43 | ($13 | 0) == 45) {
  $17 = (($13 | 0) == 45) << 31 >> 31;
  $18 = HEAP32[$3 >> 2] | 0;
  if ($18 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $18 + 1;
   $c$0 = HEAPU8[$18 >> 0] | 0;
   $neg$0 = $17;
   break;
  } else {
   $c$0 = ___shgetc($f) | 0;
   $neg$0 = $17;
   break;
  }
 } else {
  $c$0 = $13;
  $neg$0 = 0;
 } while (0);
 $25 = ($base | 0) == 0;
 do if (($base & -17 | 0) == 0 & ($c$0 | 0) == 48) {
  $29 = HEAP32[$3 >> 2] | 0;
  if ($29 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $29 + 1;
   $37 = HEAPU8[$29 >> 0] | 0;
  } else $37 = ___shgetc($f) | 0;
  if (($37 | 32 | 0) != 120) if ($25) {
   $$126 = 8;
   $c$127 = $37;
   label = 46;
   break;
  } else {
   $$1 = $base;
   $c$1 = $37;
   label = 32;
   break;
  }
  $39 = HEAP32[$3 >> 2] | 0;
  if ($39 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $39 + 1;
   $46 = HEAPU8[$39 >> 0] | 0;
  } else $46 = ___shgetc($f) | 0;
  if ((HEAPU8[$46 + 55545 >> 0] | 0) > 15) {
   $51 = (HEAP32[$4 >> 2] | 0) == 0;
   if (!$51) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   if (!$pok) {
    ___shlim($f, 0);
    $279 = 0;
    $280 = 0;
    tempRet0 = $279;
    STACKTOP = sp;
    return $280 | 0;
   }
   if ($51) {
    $279 = 0;
    $280 = 0;
    tempRet0 = $279;
    STACKTOP = sp;
    return $280 | 0;
   }
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   $279 = 0;
   $280 = 0;
   tempRet0 = $279;
   STACKTOP = sp;
   return $280 | 0;
  } else {
   $$126 = 16;
   $c$127 = $46;
   label = 46;
  }
 } else {
  $$base24 = $25 ? 10 : $base;
  if ((HEAPU8[$c$0 + 55545 >> 0] | 0) >>> 0 < $$base24 >>> 0) {
   $$1 = $$base24;
   $c$1 = $c$0;
   label = 32;
  } else {
   if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   ___shlim($f, 0);
   HEAP32[(___errno_location() | 0) >> 2] = 22;
   $279 = 0;
   $280 = 0;
   tempRet0 = $279;
   STACKTOP = sp;
   return $280 | 0;
  }
 } while (0);
 if ((label | 0) == 32) if (($$1 | 0) == 10) {
  $67 = $c$1 + -48 | 0;
  if ($67 >>> 0 < 10) {
   $71 = $67;
   $x$073 = 0;
   do {
    $x$073 = ($x$073 * 10 | 0) + $71 | 0;
    $72 = HEAP32[$3 >> 2] | 0;
    if ($72 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $72 + 1;
     $c$2$be = HEAPU8[$72 >> 0] | 0;
    } else $c$2$be = ___shgetc($f) | 0;
    $71 = $c$2$be + -48 | 0;
   } while ($71 >>> 0 < 10 & $x$073 >>> 0 < 429496729);
   $281 = $x$073;
   $282 = 0;
   $c$2$lcssa = $c$2$be;
  } else {
   $281 = 0;
   $282 = 0;
   $c$2$lcssa = $c$1;
  }
  $82 = $c$2$lcssa + -48 | 0;
  if ($82 >>> 0 < 10) {
   $84 = $281;
   $85 = $282;
   $88 = $82;
   $c$362 = $c$2$lcssa;
   while (1) {
    $86 = ___muldi3($84 | 0, $85 | 0, 10, 0) | 0;
    $87 = tempRet0;
    $90 = (($88 | 0) < 0) << 31 >> 31;
    $92 = ~$90;
    if ($87 >>> 0 > $92 >>> 0 | ($87 | 0) == ($92 | 0) & $86 >>> 0 > ~$88 >>> 0) {
     $$lcssa = $88;
     $283 = $84;
     $284 = $85;
     $c$3$lcssa = $c$362;
     break;
    }
    $98 = _i64Add($86 | 0, $87 | 0, $88 | 0, $90 | 0) | 0;
    $99 = tempRet0;
    $100 = HEAP32[$3 >> 2] | 0;
    if ($100 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $100 + 1;
     $c$3$be = HEAPU8[$100 >> 0] | 0;
    } else $c$3$be = ___shgetc($f) | 0;
    $107 = $c$3$be + -48 | 0;
    if ($107 >>> 0 < 10 & ($99 >>> 0 < 429496729 | ($99 | 0) == 429496729 & $98 >>> 0 < 2576980378)) {
     $84 = $98;
     $85 = $99;
     $88 = $107;
     $c$362 = $c$3$be;
    } else {
     $$lcssa = $107;
     $283 = $98;
     $284 = $99;
     $c$3$lcssa = $c$3$be;
     break;
    }
   }
   if ($$lcssa >>> 0 > 9) {
    $252 = $284;
    $254 = $283;
   } else {
    $$125 = 10;
    $285 = $283;
    $286 = $284;
    $c$8 = $c$3$lcssa;
    label = 72;
   }
  } else {
   $252 = $282;
   $254 = $281;
  }
 } else {
  $$126 = $$1;
  $c$127 = $c$1;
  label = 46;
 }
 L69 : do if ((label | 0) == 46) {
  if (!($$126 + -1 & $$126)) {
   $127 = HEAP8[55808 + (($$126 * 23 | 0) >>> 5 & 7) >> 0] | 0;
   $129 = HEAP8[$c$127 + 55545 >> 0] | 0;
   $130 = $129 & 255;
   if ($130 >>> 0 < $$126 >>> 0) {
    $134 = $130;
    $x$138 = 0;
    do {
     $x$138 = $134 | $x$138 << $127;
     $135 = HEAP32[$3 >> 2] | 0;
     if ($135 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $135 + 1;
      $c$4$be = HEAPU8[$135 >> 0] | 0;
     } else $c$4$be = ___shgetc($f) | 0;
     $143 = HEAP8[$c$4$be + 55545 >> 0] | 0;
     $134 = $143 & 255;
    } while ($134 >>> 0 < $$126 >>> 0 & $x$138 >>> 0 < 134217728);
    $150 = $143;
    $152 = 0;
    $154 = $x$138;
    $c$4$lcssa = $c$4$be;
   } else {
    $150 = $129;
    $152 = 0;
    $154 = 0;
    $c$4$lcssa = $c$127;
   }
   $147 = _bitshift64Lshr(-1, -1, $127 | 0) | 0;
   $148 = tempRet0;
   if (($150 & 255) >>> 0 >= $$126 >>> 0 | ($152 >>> 0 > $148 >>> 0 | ($152 | 0) == ($148 | 0) & $154 >>> 0 > $147 >>> 0)) {
    $$125 = $$126;
    $285 = $154;
    $286 = $152;
    $c$8 = $c$4$lcssa;
    label = 72;
    break;
   } else {
    $159 = $154;
    $160 = $152;
    $164 = $150;
   }
   while (1) {
    $161 = _bitshift64Shl($159 | 0, $160 | 0, $127 | 0) | 0;
    $162 = tempRet0;
    $165 = $164 & 255 | $161;
    $166 = HEAP32[$3 >> 2] | 0;
    if ($166 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $166 + 1;
     $c$5$be = HEAPU8[$166 >> 0] | 0;
    } else $c$5$be = ___shgetc($f) | 0;
    $164 = HEAP8[$c$5$be + 55545 >> 0] | 0;
    if (($164 & 255) >>> 0 >= $$126 >>> 0 | ($162 >>> 0 > $148 >>> 0 | ($162 | 0) == ($148 | 0) & $165 >>> 0 > $147 >>> 0)) {
     $$125 = $$126;
     $285 = $165;
     $286 = $162;
     $c$8 = $c$5$be;
     label = 72;
     break L69;
    } else {
     $159 = $165;
     $160 = $162;
    }
   }
  }
  $119 = HEAP8[$c$127 + 55545 >> 0] | 0;
  $120 = $119 & 255;
  if ($120 >>> 0 < $$126 >>> 0) {
   $184 = $120;
   $x$256 = 0;
   do {
    $x$256 = $184 + (Math_imul($x$256, $$126) | 0) | 0;
    $185 = HEAP32[$3 >> 2] | 0;
    if ($185 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $185 + 1;
     $c$6$be = HEAPU8[$185 >> 0] | 0;
    } else $c$6$be = ___shgetc($f) | 0;
    $193 = HEAP8[$c$6$be + 55545 >> 0] | 0;
    $184 = $193 & 255;
   } while ($184 >>> 0 < $$126 >>> 0 & $x$256 >>> 0 < 119304647);
   $198 = $193;
   $287 = $x$256;
   $288 = 0;
   $c$6$lcssa = $c$6$be;
  } else {
   $198 = $119;
   $287 = 0;
   $288 = 0;
   $c$6$lcssa = $c$127;
  }
  if (($198 & 255) >>> 0 < $$126 >>> 0) {
   $200 = ___udivdi3(-1, -1, $$126 | 0, 0) | 0;
   $201 = tempRet0;
   $202 = $288;
   $204 = $287;
   $212 = $198;
   $c$747 = $c$6$lcssa;
   while (1) {
    if ($202 >>> 0 > $201 >>> 0 | ($202 | 0) == ($201 | 0) & $204 >>> 0 > $200 >>> 0) {
     $$125 = $$126;
     $285 = $204;
     $286 = $202;
     $c$8 = $c$747;
     label = 72;
     break L69;
    }
    $209 = ___muldi3($204 | 0, $202 | 0, $$126 | 0, 0) | 0;
    $210 = tempRet0;
    $211 = $212 & 255;
    if ($210 >>> 0 > 4294967295 | ($210 | 0) == -1 & $209 >>> 0 > ~$211 >>> 0) {
     $$125 = $$126;
     $285 = $204;
     $286 = $202;
     $c$8 = $c$747;
     label = 72;
     break L69;
    }
    $219 = _i64Add($211 | 0, 0, $209 | 0, $210 | 0) | 0;
    $220 = tempRet0;
    $221 = HEAP32[$3 >> 2] | 0;
    if ($221 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $221 + 1;
     $c$7$be = HEAPU8[$221 >> 0] | 0;
    } else $c$7$be = ___shgetc($f) | 0;
    $212 = HEAP8[$c$7$be + 55545 >> 0] | 0;
    if (($212 & 255) >>> 0 >= $$126 >>> 0) {
     $$125 = $$126;
     $285 = $219;
     $286 = $220;
     $c$8 = $c$7$be;
     label = 72;
     break;
    } else {
     $202 = $220;
     $204 = $219;
     $c$747 = $c$7$be;
    }
   }
  } else {
   $$125 = $$126;
   $285 = $287;
   $286 = $288;
   $c$8 = $c$6$lcssa;
   label = 72;
  }
 } while (0);
 if ((label | 0) == 72) if ((HEAPU8[$c$8 + 55545 >> 0] | 0) >>> 0 < $$125 >>> 0) {
  do {
   $236 = HEAP32[$3 >> 2] | 0;
   if ($236 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $236 + 1;
    $c$9$be = HEAPU8[$236 >> 0] | 0;
   } else $c$9$be = ___shgetc($f) | 0;
  } while ((HEAPU8[$c$9$be + 55545 >> 0] | 0) >>> 0 < $$125 >>> 0);
  HEAP32[(___errno_location() | 0) >> 2] = 34;
  $252 = $1;
  $254 = $0;
 } else {
  $252 = $286;
  $254 = $285;
 }
 if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
 if (!($252 >>> 0 < $1 >>> 0 | ($252 | 0) == ($1 | 0) & $254 >>> 0 < $0 >>> 0)) {
  if (!(($0 & 1 | 0) != 0 | 0 != 0 | ($neg$0 | 0) != 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $265 = _i64Add($0 | 0, $1 | 0, -1, -1) | 0;
   $279 = tempRet0;
   $280 = $265;
   tempRet0 = $279;
   STACKTOP = sp;
   return $280 | 0;
  }
  if ($252 >>> 0 > $1 >>> 0 | ($252 | 0) == ($1 | 0) & $254 >>> 0 > $0 >>> 0) {
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $279 = $1;
   $280 = $0;
   tempRet0 = $279;
   STACKTOP = sp;
   return $280 | 0;
  }
 }
 $274 = (($neg$0 | 0) < 0) << 31 >> 31;
 $277 = _i64Subtract($254 ^ $neg$0 | 0, $252 ^ $274 | 0, $neg$0 | 0, $274 | 0) | 0;
 $279 = tempRet0;
 $280 = $277;
 tempRet0 = $279;
 STACKTOP = sp;
 return $280 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i13 = 0, $$01 = 0, $$pre$i$i$i9 = 0, $$pre$i3$i$i = 0, $$pre$phi38Z2D = 0, $$pre$phi40Z2D = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $109 = 0, $115 = 0, $12 = 0, $122 = 0, $128 = 0, $129 = 0, $131 = 0, $132 = 0, $133 = 0, $138 = 0, $145 = 0, $146 = 0, $152 = 0, $159 = 0, $160 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $24 = 0, $3 = 0, $31 = 0, $32 = 0, $36 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $52 = 0, $54 = 0, $59 = 0, $61 = 0, $67 = 0, $68 = 0, $75 = 0, $76 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $88 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 208 | 0;
 $__grouping = sp + 196 | 0;
 $0 = sp + 192 | 0;
 $__buf = sp + 180 | 0;
 $__a_end = sp + 176 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 8 | 0;
 $__dc = sp + 4 | 0;
 HEAP32[$__grouping + 0 >> 2] = 0;
 HEAP32[$__grouping + 4 >> 2] = 0;
 HEAP32[$__grouping + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(47, $0 | 0, $__iob | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $85 = ___cxa_find_matching_catch() | 0;
  $$0 = $85;
  $$01 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
  ___resumeException($$0 | 0);
 }
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 45792) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if (!($4 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$3 >> 2] | 0) + 48 >> 2] | 0, $3 | 0, 44312, 44338 | 0, $__atoms | 0) | 0;
  $9 = __THREW__;
  __THREW__ = 0;
  if (!($9 & 1)) {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
   HEAP32[$__buf + 0 >> 2] = 0;
   HEAP32[$__buf + 4 >> 2] = 0;
   HEAP32[$__buf + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(5, $__buf | 0, 10, 0);
   $12 = __THREW__;
   __THREW__ = 0;
   L8 : do if ($12 & 1) label = 40; else {
    if (!(HEAP8[$__buf >> 0] & 1)) {
     $19 = $__buf + 1 | 0;
     $$pre$phi38Z2D = $19;
     $$pre$phi40Z2D = $__buf + 8 | 0;
     $20 = $19;
    } else {
     $17 = $__buf + 8 | 0;
     $$pre$phi38Z2D = $__buf + 1 | 0;
     $$pre$phi40Z2D = $17;
     $20 = HEAP32[$17 >> 2] | 0;
    }
    HEAP32[$__a_end >> 2] = $20;
    HEAP32[$__g_end >> 2] = $__g;
    HEAP32[$__dc >> 2] = 0;
    $21 = $__buf + 4 | 0;
    $$pre$i$i$i9 = HEAP32[$__b >> 2] | 0;
    $__a$0 = $20;
    L14 : while (1) {
     if (!$$pre$i$i$i9) {
      $167 = 1;
      $95 = 0;
     } else {
      $24 = HEAP32[$$pre$i$i$i9 + 12 >> 2] | 0;
      if (($24 | 0) == (HEAP32[$$pre$i$i$i9 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $31 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i9 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i9 | 0) | 0;
       $32 = __THREW__;
       __THREW__ = 0;
       if ($32 & 1) {
        label = 39;
        break;
       } else $$0$i$i$i$i7 = $31;
      } else $$0$i$i$i$i7 = HEAP32[$24 >> 2] | 0;
      if (($$0$i$i$i$i7 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $167 = 1;
       $95 = 0;
      } else {
       $167 = 0;
       $95 = $$pre$i$i$i9;
      }
     }
     $36 = HEAP32[$__e >> 2] | 0;
     do if (!$36) label = 21; else {
      $39 = HEAP32[$36 + 12 >> 2] | 0;
      if (($39 | 0) == (HEAP32[$36 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $46 = invoke_ii(HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] | 0, $36 | 0) | 0;
       $47 = __THREW__;
       __THREW__ = 0;
       if ($47 & 1) {
        label = 39;
        break L14;
       } else $$0$i$i1$i$i13 = $46;
      } else $$0$i$i1$i$i13 = HEAP32[$39 >> 2] | 0;
      if (($$0$i$i1$i$i13 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 21;
       break;
      } else if ($167) {
       $168 = $36;
       break;
      } else {
       $$pre$i3$i$i = $36;
       $__a$2 = $__a$0;
       break L14;
      }
     } while (0);
     if ((label | 0) == 21) {
      label = 0;
      if ($167) {
       $$pre$i3$i$i = 0;
       $__a$2 = $__a$0;
       break;
      } else $168 = 0;
     }
     $52 = HEAP8[$__buf >> 0] | 0;
     $54 = ($52 & 1) == 0;
     if ($54) $59 = ($52 & 255) >>> 1; else $59 = HEAP32[$21 >> 2] | 0;
     if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $59 | 0)) {
      if ($54) {
       $67 = ($52 & 255) >>> 1;
       $84 = ($52 & 255) >>> 1;
      } else {
       $61 = HEAP32[$21 >> 2] | 0;
       $67 = $61;
       $84 = $61;
      }
      __THREW__ = 0;
      invoke_viii(5, $__buf | 0, $67 << 1 | 0, 0);
      $68 = __THREW__;
      __THREW__ = 0;
      if ($68 & 1) {
       label = 39;
       break;
      }
      if (!(HEAP8[$__buf >> 0] & 1)) $75 = 10; else $75 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
      __THREW__ = 0;
      invoke_viii(5, $__buf | 0, $75 | 0, 0);
      $76 = __THREW__;
      __THREW__ = 0;
      if ($76 & 1) {
       label = 39;
       break;
      }
      if (!(HEAP8[$__buf >> 0] & 1)) $83 = $$pre$phi38Z2D; else $83 = HEAP32[$$pre$phi40Z2D >> 2] | 0;
      HEAP32[$__a_end >> 2] = $83 + $84;
      $__a$1 = $83;
     } else $__a$1 = $__a$0;
     $94 = $95 + 12 | 0;
     $96 = HEAP32[$94 >> 2] | 0;
     $97 = $95 + 16 | 0;
     if (($96 | 0) == (HEAP32[$97 >> 2] | 0)) {
      __THREW__ = 0;
      $103 = invoke_ii(HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] | 0, $95 | 0) | 0;
      $104 = __THREW__;
      __THREW__ = 0;
      if ($104 & 1) {
       label = 39;
       break;
      } else $$0$i$i = $103;
     } else $$0$i$i = HEAP32[$96 >> 2] | 0;
     if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
      $$pre$i3$i$i = $168;
      $__a$2 = $__a$1;
      break;
     }
     $109 = HEAP32[$94 >> 2] | 0;
     if (($109 | 0) == (HEAP32[$97 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_ii(HEAP32[(HEAP32[$95 >> 2] | 0) + 40 >> 2] | 0, $95 | 0) | 0;
      $115 = __THREW__;
      __THREW__ = 0;
      if ($115 & 1) {
       label = 39;
       break;
      } else {
       $$pre$i$i$i9 = $95;
       $__a$0 = $__a$1;
       continue;
      }
     } else {
      HEAP32[$94 >> 2] = $109 + 4;
      $$pre$i$i$i9 = $95;
      $__a$0 = $__a$1;
      continue;
     }
    }
    if ((label | 0) == 39) {
     $90 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $90;
     $lpad$phi$index2 = tempRet0;
     break;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
    $122 = __THREW__;
    __THREW__ = 0;
    if ($122 & 1) label = 40; else {
     if (!(HEAP8[$__buf >> 0] & 1)) $131 = $$pre$phi38Z2D; else $131 = HEAP32[$$pre$phi40Z2D >> 2] | 0;
     __THREW__ = 0;
     $128 = invoke_i(1) | 0;
     $129 = __THREW__;
     __THREW__ = 0;
     if ($129 & 1) label = 40; else {
      __THREW__ = 0;
      HEAP32[$vararg_buffer >> 2] = $__v;
      $132 = invoke_iiiii(11, $131 | 0, $128 | 0, 44352, $vararg_buffer | 0) | 0;
      $133 = __THREW__;
      __THREW__ = 0;
      if ($133 & 1) label = 40; else {
       if (($132 | 0) != 1) HEAP32[$__err >> 2] = 4;
       if (!$95) {
        $166 = 0;
        $169 = 1;
       } else {
        $138 = HEAP32[$95 + 12 >> 2] | 0;
        if (($138 | 0) == (HEAP32[$95 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $145 = invoke_ii(HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] | 0, $95 | 0) | 0;
         $146 = __THREW__;
         __THREW__ = 0;
         if ($146 & 1) {
          label = 40;
          break;
         } else $$0$i$i$i$i = $145;
        } else $$0$i$i$i$i = HEAP32[$138 >> 2] | 0;
        if (($$0$i$i$i$i | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $166 = 0;
         $169 = 1;
        } else {
         $166 = $95;
         $169 = 0;
        }
       }
       do if (!$$pre$i3$i$i) label = 68; else {
        $152 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
        if (($152 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $159 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
         $160 = __THREW__;
         __THREW__ = 0;
         if ($160 & 1) {
          label = 40;
          break L8;
         } else $$0$i$i1$i$i = $159;
        } else $$0$i$i1$i$i = HEAP32[$152 >> 2] | 0;
        if (($$0$i$i1$i$i | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         label = 68;
         break;
        }
        if ($169) {
         HEAP32[$agg$result >> 2] = $166;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
         STACKTOP = sp;
         return;
        }
       } while (0);
       if ((label | 0) == 68) if (!$169) {
        HEAP32[$agg$result >> 2] = $166;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
        STACKTOP = sp;
        return;
       }
       HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
       HEAP32[$agg$result >> 2] = $166;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
       STACKTOP = sp;
       return;
      }
     }
    }
   } while (0);
   if ((label | 0) == 40) {
    $92 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $92;
    $lpad$phi$index2 = tempRet0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   $$0 = $lpad$phi$index;
   $$01 = $lpad$phi$index2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($$0 | 0);
  }
 }
 $87 = ___cxa_find_matching_catch() | 0;
 $88 = tempRet0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 $$0 = $87;
 $$01 = $88;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($$0 | 0);
}

function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$012$i$i = 0, $$012$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $107 = 0, $108 = 0, $111 = 0, $112 = 0, $113 = 0, $116 = 0, $126 = 0, $128 = 0, $13 = 0, $135 = 0, $142 = 0, $143 = 0, $145 = 0, $146 = 0, $15 = 0, $153 = 0, $155 = 0, $156 = 0, $158 = 0, $160 = 0, $165 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $179 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $189 = 0, $19 = 0, $190 = 0, $195 = 0, $201 = 0, $21 = 0, $23 = 0, $25 = 0, $32 = 0, $33 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $61 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $71 = 0, $72 = 0, $75 = 0, $82 = 0, $88 = 0, $9 = 0, $94 = 0, $96 = 0, $98 = 0, $__dc$017 = 0, $__dc$1 = 0, $__dg$018 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$213 = 0, $__nf$3 = 0, $__ns$033 = 0, $__ns$125 = 0, $__ns$2 = 0, $__p$019 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45792) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45952) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 if ($5 << 24 >> 24 == 43 | $5 << 24 >> 24 == 45) {
  __THREW__ = 0;
  $9 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $5 | 0) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   $13 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $13 + 4;
   HEAP32[$13 >> 2] = $9;
   $__nf$0 = $__nb + 1 | 0;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4 : do if ((label | 0) == 10) {
  $25 = $__ne;
  L6 : do if (($25 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $32 = $__nf$0 + 1 | 0;
   $33 = HEAP8[$32 >> 0] | 0;
   if ($33 << 24 >> 24 == 88 | $33 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $37 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, 48) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) break L4;
    $40 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $40 + 4;
    HEAP32[$40 >> 2] = $37;
    $42 = $__nf$0 + 2 | 0;
    __THREW__ = 0;
    $47 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$32 >> 0] | 0) | 0;
    $48 = __THREW__;
    __THREW__ = 0;
    if ($48 & 1) break L4;
    $50 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $50 + 4;
    HEAP32[$50 >> 2] = $47;
    if ($42 >>> 0 < $__ne >>> 0) {
     $__ns$033 = $42;
     while (1) {
      $55 = HEAP8[$__ns$033 >> 0] | 0;
      __THREW__ = 0;
      $56 = invoke_i(1) | 0;
      $57 = __THREW__;
      __THREW__ = 0;
      if ($57 & 1) break;
      __THREW__ = 0;
      $60 = invoke_iii(40, $55 << 24 >> 24 | 0, $56 | 0) | 0;
      $61 = __THREW__;
      __THREW__ = 0;
      if ($61 & 1) break;
      $53 = $__ns$033 + 1 | 0;
      if (!$60) {
       $__nf$1 = $42;
       $__ns$2 = $__ns$033;
       break L6;
      }
      if ($53 >>> 0 < $__ne >>> 0) $__ns$033 = $53; else {
       $__nf$1 = $42;
       $__ns$2 = $53;
       break L6;
      }
     }
     $21 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $21;
     $lpad$phi$index5 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     ___resumeException($lpad$phi$index | 0);
    } else {
     $__nf$1 = $42;
     $__ns$2 = $42;
    }
   } else label = 11;
  } else label = 11; else label = 11; while (0);
  L19 : do if ((label | 0) == 11) if ($__nf$0 >>> 0 < $__ne >>> 0) {
   $__ns$125 = $__nf$0;
   while (1) {
    $66 = HEAP8[$__ns$125 >> 0] | 0;
    __THREW__ = 0;
    $67 = invoke_i(1) | 0;
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) break;
    __THREW__ = 0;
    $71 = invoke_iii(41, $66 << 24 >> 24 | 0, $67 | 0) | 0;
    $72 = __THREW__;
    __THREW__ = 0;
    if ($72 & 1) break;
    $64 = $__ns$125 + 1 | 0;
    if (!$71) {
     $__nf$1 = $__nf$0;
     $__ns$2 = $__ns$125;
     break L19;
    }
    if ($64 >>> 0 < $__ne >>> 0) $__ns$125 = $64; else {
     $__nf$1 = $__nf$0;
     $__ns$2 = $64;
     break L19;
    }
   }
   $19 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $19;
   $lpad$phi$index5 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  } else {
   $__nf$1 = $__nf$0;
   $__ns$2 = $__nf$0;
  } while (0);
  $75 = HEAP8[$__grouping >> 0] | 0;
  if (!($75 & 1)) $82 = ($75 & 255) >>> 1; else $82 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$82) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nf$1 | 0, $__ns$2 | 0, HEAP32[$__oe >> 2] | 0) | 0;
   $88 = __THREW__;
   __THREW__ = 0;
   if ($88 & 1) break;
   $94 = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1 << 2) | 0;
   HEAP32[$__oe >> 2] = $94;
   $201 = $94;
  } else {
   if (($__nf$1 | 0) != ($__ns$2 | 0)) {
    $96 = $__ns$2 + -1 | 0;
    if ($96 >>> 0 > $__nf$1 >>> 0) {
     $$012$i$i = $__nf$1;
     $100 = $96;
     do {
      $98 = HEAP8[$$012$i$i >> 0] | 0;
      HEAP8[$$012$i$i >> 0] = HEAP8[$100 >> 0] | 0;
      HEAP8[$100 >> 0] = $98;
      $$012$i$i = $$012$i$i + 1 | 0;
      $100 = $100 + -1 | 0;
     } while ($$012$i$i >>> 0 < $100 >>> 0);
    }
   }
   __THREW__ = 0;
   $107 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
   $108 = __THREW__;
   __THREW__ = 0;
   if ($108 & 1) break;
   L41 : do if ($__nf$1 >>> 0 < $__ns$2 >>> 0) {
    $111 = $__grouping + 1 | 0;
    $112 = $__grouping + 4 | 0;
    $113 = $__grouping + 8 | 0;
    $__dc$017 = 0;
    $__dg$018 = 0;
    $__p$019 = $__nf$1;
    while (1) {
     $116 = (HEAP8[$__grouping >> 0] & 1) == 0;
     if ((HEAP8[($116 ? $111 : HEAP32[$113 >> 2] | 0) + $__dg$018 >> 0] | 0) > 0) if (($__dc$017 | 0) == (HEAP8[($116 ? $111 : HEAP32[$113 >> 2] | 0) + $__dg$018 >> 0] | 0)) {
      $126 = HEAP32[$__oe >> 2] | 0;
      HEAP32[$__oe >> 2] = $126 + 4;
      HEAP32[$126 >> 2] = $107;
      $128 = HEAP8[$__grouping >> 0] | 0;
      if (!($128 & 1)) $135 = ($128 & 255) >>> 1; else $135 = HEAP32[$112 >> 2] | 0;
      $__dc$1 = 0;
      $__dg$1 = ($__dg$018 >>> 0 < ($135 + -1 | 0) >>> 0 & 1) + $__dg$018 | 0;
     } else {
      $__dc$1 = $__dc$017;
      $__dg$1 = $__dg$018;
     } else {
      $__dc$1 = $__dc$017;
      $__dg$1 = $__dg$018;
     }
     __THREW__ = 0;
     $142 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$__p$019 >> 0] | 0) | 0;
     $143 = __THREW__;
     __THREW__ = 0;
     if ($143 & 1) break;
     $145 = HEAP32[$__oe >> 2] | 0;
     $146 = $145 + 4 | 0;
     HEAP32[$__oe >> 2] = $146;
     HEAP32[$145 >> 2] = $142;
     $__p$019 = $__p$019 + 1 | 0;
     if ($__p$019 >>> 0 >= $__ns$2 >>> 0) {
      $155 = $146;
      break L41;
     } else {
      $__dc$017 = $__dc$1 + 1 | 0;
      $__dg$018 = $__dg$1;
     }
    }
    $17 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $17;
    $lpad$phi$index5 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    ___resumeException($lpad$phi$index | 0);
   } else $155 = HEAP32[$__oe >> 2] | 0; while (0);
   $153 = $__ob + ($__nf$1 - $__nb << 2) | 0;
   if (($153 | 0) == ($155 | 0)) $201 = $155; else {
    $156 = $155 + -4 | 0;
    if ($156 >>> 0 > $153 >>> 0) {
     $$012$i$i7 = $153;
     $160 = $156;
     do {
      $158 = HEAP32[$$012$i$i7 >> 2] | 0;
      HEAP32[$$012$i$i7 >> 2] = HEAP32[$160 >> 2];
      HEAP32[$160 >> 2] = $158;
      $$012$i$i7 = $$012$i$i7 + 4 | 0;
      $160 = $160 + -4 | 0;
     } while ($$012$i$i7 >>> 0 < $160 >>> 0);
     $201 = $155;
    } else $201 = $155;
   }
  }
  L64 : do if ($__ns$2 >>> 0 < $__ne >>> 0) {
   $__nf$213 = $__ns$2;
   while (1) {
    $165 = HEAP8[$__nf$213 >> 0] | 0;
    if ($165 << 24 >> 24 == 46) {
     label = 52;
     break;
    }
    __THREW__ = 0;
    $179 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $165 | 0) | 0;
    $180 = __THREW__;
    __THREW__ = 0;
    if ($180 & 1) {
     label = 4;
     break;
    }
    $182 = HEAP32[$__oe >> 2] | 0;
    $183 = $182 + 4 | 0;
    HEAP32[$__oe >> 2] = $183;
    HEAP32[$182 >> 2] = $179;
    $184 = $__nf$213 + 1 | 0;
    if ($184 >>> 0 < $__ne >>> 0) $__nf$213 = $184; else {
     $189 = $183;
     $__nf$3 = $184;
     break L64;
    }
   }
   if ((label | 0) == 4) {
    $15 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $15;
    $lpad$phi$index5 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    ___resumeException($lpad$phi$index | 0);
   } else if ((label | 0) == 52) {
    __THREW__ = 0;
    $170 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] | 0, $1 | 0) | 0;
    $171 = __THREW__;
    __THREW__ = 0;
    if ($171 & 1) break L4;
    $173 = HEAP32[$__oe >> 2] | 0;
    $174 = $173 + 4 | 0;
    HEAP32[$__oe >> 2] = $174;
    HEAP32[$173 >> 2] = $170;
    $189 = $174;
    $__nf$3 = $__nf$213 + 1 | 0;
    break;
   }
  } else {
   $189 = $201;
   $__nf$3 = $__ns$2;
  } while (0);
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nf$3 | 0, $__ne | 0, $189 | 0) | 0;
  $190 = __THREW__;
  __THREW__ = 0;
  if (!($190 & 1)) {
   $195 = (HEAP32[$__oe >> 2] | 0) + ($25 - $__nf$3 << 2) | 0;
   HEAP32[$__oe >> 2] = $195;
   if (($__np | 0) == ($__ne | 0)) {
    $storemerge = $195;
    HEAP32[$__op >> 2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   $storemerge = $__ob + ($__np - $__nb << 2) | 0;
   HEAP32[$__op >> 2] = $storemerge;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $23 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $23;
 $lpad$phi$index5 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i = 0, $$pre$phi35Z2D = 0, $$pre$phi37Z2D = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0, $110 = 0, $116 = 0, $12 = 0, $123 = 0, $129 = 0, $130 = 0, $132 = 0, $133 = 0, $134 = 0, $146 = 0, $147 = 0, $150 = 0, $151 = 0, $161 = 0, $162 = 0, $168 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $31 = 0, $32 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $47 = 0, $48 = 0, $52 = 0, $54 = 0, $59 = 0, $61 = 0, $67 = 0, $68 = 0, $75 = 0, $76 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $88 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $95 = 0, $96 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 208 | 0;
 $__grouping = sp + 196 | 0;
 $0 = sp + 192 | 0;
 $__buf = sp + 180 | 0;
 $__a_end = sp + 176 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 8 | 0;
 $__dc = sp + 4 | 0;
 HEAP32[$__grouping + 0 >> 2] = 0;
 HEAP32[$__grouping + 4 >> 2] = 0;
 HEAP32[$__grouping + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(47, $0 | 0, $__iob | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $85 = ___cxa_find_matching_catch() | 0;
  $$0 = $85;
  $$01 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
  ___resumeException($$0 | 0);
 }
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 45800) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if (!($4 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$3 >> 2] | 0) + 32 >> 2] | 0, $3 | 0, 44312, 44338 | 0, $__atoms | 0) | 0;
  $9 = __THREW__;
  __THREW__ = 0;
  if (!($9 & 1)) {
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
   HEAP32[$__buf + 0 >> 2] = 0;
   HEAP32[$__buf + 4 >> 2] = 0;
   HEAP32[$__buf + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(5, $__buf | 0, 10, 0);
   $12 = __THREW__;
   __THREW__ = 0;
   L8 : do if ($12 & 1) label = 39; else {
    if (!(HEAP8[$__buf >> 0] & 1)) {
     $19 = $__buf + 1 | 0;
     $$pre$phi35Z2D = $19;
     $$pre$phi37Z2D = $__buf + 8 | 0;
     $20 = $19;
    } else {
     $17 = $__buf + 8 | 0;
     $$pre$phi35Z2D = $__buf + 1 | 0;
     $$pre$phi37Z2D = $17;
     $20 = HEAP32[$17 >> 2] | 0;
    }
    HEAP32[$__a_end >> 2] = $20;
    HEAP32[$__g_end >> 2] = $__g;
    HEAP32[$__dc >> 2] = 0;
    $21 = $__buf + 4 | 0;
    $$pre$i$i$i8 = HEAP32[$__b >> 2] | 0;
    $__a$0 = $20;
    L14 : while (1) {
     if (!$$pre$i$i$i8) $35 = 0; else if ((HEAP32[$$pre$i$i$i8 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i8 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $31 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i8 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i8 | 0) | 0;
      $32 = __THREW__;
      __THREW__ = 0;
      if ($32 & 1) {
       label = 38;
       break;
      }
      if (($31 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $35 = 0;
      } else $35 = $$pre$i$i$i8;
     } else $35 = $$pre$i$i$i8;
     $36 = ($35 | 0) == 0;
     $37 = HEAP32[$__e >> 2] | 0;
     do if (!$37) label = 20; else {
      if ((HEAP32[$37 + 12 >> 2] | 0) != (HEAP32[$37 + 16 >> 2] | 0)) if ($36) {
       $168 = $37;
       break;
      } else {
       $$pre$i2$i$i = $37;
       $__a$2 = $__a$0;
       break L14;
      }
      __THREW__ = 0;
      $47 = invoke_ii(HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] | 0, $37 | 0) | 0;
      $48 = __THREW__;
      __THREW__ = 0;
      if ($48 & 1) {
       label = 38;
       break L14;
      }
      if (($47 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 20;
       break;
      } else if ($36) {
       $168 = $37;
       break;
      } else {
       $$pre$i2$i$i = $37;
       $__a$2 = $__a$0;
       break L14;
      }
     } while (0);
     if ((label | 0) == 20) {
      label = 0;
      if ($36) {
       $$pre$i2$i$i = 0;
       $__a$2 = $__a$0;
       break;
      } else $168 = 0;
     }
     $52 = HEAP8[$__buf >> 0] | 0;
     $54 = ($52 & 1) == 0;
     if ($54) $59 = ($52 & 255) >>> 1; else $59 = HEAP32[$21 >> 2] | 0;
     if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $59 | 0)) {
      if ($54) {
       $67 = ($52 & 255) >>> 1;
       $84 = ($52 & 255) >>> 1;
      } else {
       $61 = HEAP32[$21 >> 2] | 0;
       $67 = $61;
       $84 = $61;
      }
      __THREW__ = 0;
      invoke_viii(5, $__buf | 0, $67 << 1 | 0, 0);
      $68 = __THREW__;
      __THREW__ = 0;
      if ($68 & 1) {
       label = 38;
       break;
      }
      if (!(HEAP8[$__buf >> 0] & 1)) $75 = 10; else $75 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
      __THREW__ = 0;
      invoke_viii(5, $__buf | 0, $75 | 0, 0);
      $76 = __THREW__;
      __THREW__ = 0;
      if ($76 & 1) {
       label = 38;
       break;
      }
      if (!(HEAP8[$__buf >> 0] & 1)) $83 = $$pre$phi35Z2D; else $83 = HEAP32[$$pre$phi37Z2D >> 2] | 0;
      HEAP32[$__a_end >> 2] = $83 + $84;
      $__a$1 = $83;
     } else $__a$1 = $__a$0;
     $94 = $35 + 12 | 0;
     $95 = HEAP32[$94 >> 2] | 0;
     $96 = $35 + 16 | 0;
     if (($95 | 0) == (HEAP32[$96 >> 2] | 0)) {
      __THREW__ = 0;
      $102 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
      $103 = __THREW__;
      __THREW__ = 0;
      if ($103 & 1) {
       label = 38;
       break;
      } else $$0$i$i = $102;
     } else $$0$i$i = HEAPU8[$95 >> 0] | 0;
     if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
      $$pre$i2$i$i = $168;
      $__a$2 = $__a$1;
      break;
     }
     $110 = HEAP32[$94 >> 2] | 0;
     if (($110 | 0) == (HEAP32[$96 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 40 >> 2] | 0, $35 | 0) | 0;
      $116 = __THREW__;
      __THREW__ = 0;
      if ($116 & 1) {
       label = 38;
       break;
      } else {
       $$pre$i$i$i8 = $35;
       $__a$0 = $__a$1;
       continue;
      }
     } else {
      HEAP32[$94 >> 2] = $110 + 1;
      $$pre$i$i$i8 = $35;
      $__a$0 = $__a$1;
      continue;
     }
    }
    if ((label | 0) == 38) {
     $90 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $90;
     $lpad$phi$index2 = tempRet0;
     break;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
    $123 = __THREW__;
    __THREW__ = 0;
    if ($123 & 1) label = 39; else {
     if (!(HEAP8[$__buf >> 0] & 1)) $132 = $$pre$phi35Z2D; else $132 = HEAP32[$$pre$phi37Z2D >> 2] | 0;
     __THREW__ = 0;
     $129 = invoke_i(1) | 0;
     $130 = __THREW__;
     __THREW__ = 0;
     if ($130 & 1) label = 39; else {
      __THREW__ = 0;
      HEAP32[$vararg_buffer >> 2] = $__v;
      $133 = invoke_iiiii(11, $132 | 0, $129 | 0, 44352, $vararg_buffer | 0) | 0;
      $134 = __THREW__;
      __THREW__ = 0;
      if ($134 & 1) label = 39; else {
       if (($133 | 0) != 1) HEAP32[$__err >> 2] = 4;
       if (!$35) $150 = 0; else if ((HEAP32[$35 + 12 >> 2] | 0) == (HEAP32[$35 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $146 = invoke_ii(HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] | 0, $35 | 0) | 0;
        $147 = __THREW__;
        __THREW__ = 0;
        if ($147 & 1) {
         label = 39;
         break;
        }
        if (($146 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $150 = 0;
        } else $150 = $35;
       } else $150 = $35;
       $151 = ($150 | 0) == 0;
       do if (!$$pre$i2$i$i) label = 66; else {
        if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
         if (!$151) break;
         HEAP32[$agg$result >> 2] = $150;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
         STACKTOP = sp;
         return;
        }
        __THREW__ = 0;
        $161 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
        $162 = __THREW__;
        __THREW__ = 0;
        if ($162 & 1) {
         label = 39;
         break L8;
        }
        if (($161 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         label = 66;
         break;
        }
        if ($151 ^ ($$pre$i2$i$i | 0) == 0) {
         HEAP32[$agg$result >> 2] = $150;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
         STACKTOP = sp;
         return;
        }
       } while (0);
       if ((label | 0) == 66) if (!$151) {
        HEAP32[$agg$result >> 2] = $150;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
        STACKTOP = sp;
        return;
       }
       HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
       HEAP32[$agg$result >> 2] = $150;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
       STACKTOP = sp;
       return;
      }
     }
    }
   } while (0);
   if ((label | 0) == 39) {
    $92 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $92;
    $lpad$phi$index2 = tempRet0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   $$0 = $lpad$phi$index;
   $$01 = $lpad$phi$index2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($$0 | 0);
  }
 }
 $87 = ___cxa_find_matching_catch() | 0;
 $88 = tempRet0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 $$0 = $87;
 $$01 = $88;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($$0 | 0);
}

function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$012$i$i = 0, $$012$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $107 = 0, $108 = 0, $111 = 0, $112 = 0, $113 = 0, $116 = 0, $126 = 0, $128 = 0, $13 = 0, $135 = 0, $142 = 0, $143 = 0, $145 = 0, $15 = 0, $153 = 0, $154 = 0, $156 = 0, $158 = 0, $160 = 0, $165 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $179 = 0, $180 = 0, $182 = 0, $184 = 0, $19 = 0, $190 = 0, $195 = 0, $21 = 0, $23 = 0, $25 = 0, $32 = 0, $33 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $61 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $71 = 0, $72 = 0, $75 = 0, $82 = 0, $88 = 0, $9 = 0, $96 = 0, $98 = 0, $__dc$018 = 0, $__dc$1 = 0, $__dg$019 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$214 = 0, $__nf$3 = 0, $__ns$034 = 0, $__ns$126 = 0, $__ns$2 = 0, $__p$020 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45800) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45944) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 if ($5 << 24 >> 24 == 43 | $5 << 24 >> 24 == 45) {
  __THREW__ = 0;
  $9 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $5 | 0) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   $13 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $13 + 1;
   HEAP8[$13 >> 0] = $9;
   $__nf$0 = $__nb + 1 | 0;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4 : do if ((label | 0) == 10) {
  $25 = $__ne;
  L6 : do if (($25 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $32 = $__nf$0 + 1 | 0;
   $33 = HEAP8[$32 >> 0] | 0;
   if ($33 << 24 >> 24 == 88 | $33 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $37 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, 48) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) break L4;
    $40 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $40 + 1;
    HEAP8[$40 >> 0] = $37;
    $42 = $__nf$0 + 2 | 0;
    __THREW__ = 0;
    $47 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$32 >> 0] | 0) | 0;
    $48 = __THREW__;
    __THREW__ = 0;
    if ($48 & 1) break L4;
    $50 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $50 + 1;
    HEAP8[$50 >> 0] = $47;
    if ($42 >>> 0 < $__ne >>> 0) {
     $__ns$034 = $42;
     while (1) {
      $55 = HEAP8[$__ns$034 >> 0] | 0;
      __THREW__ = 0;
      $56 = invoke_i(1) | 0;
      $57 = __THREW__;
      __THREW__ = 0;
      if ($57 & 1) break;
      __THREW__ = 0;
      $60 = invoke_iii(40, $55 << 24 >> 24 | 0, $56 | 0) | 0;
      $61 = __THREW__;
      __THREW__ = 0;
      if ($61 & 1) break;
      $53 = $__ns$034 + 1 | 0;
      if (!$60) {
       $__nf$1 = $42;
       $__ns$2 = $__ns$034;
       break L6;
      }
      if ($53 >>> 0 < $__ne >>> 0) $__ns$034 = $53; else {
       $__nf$1 = $42;
       $__ns$2 = $53;
       break L6;
      }
     }
     $21 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $21;
     $lpad$phi$index5 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     ___resumeException($lpad$phi$index | 0);
    } else {
     $__nf$1 = $42;
     $__ns$2 = $42;
    }
   } else label = 11;
  } else label = 11; else label = 11; while (0);
  L19 : do if ((label | 0) == 11) if ($__nf$0 >>> 0 < $__ne >>> 0) {
   $__ns$126 = $__nf$0;
   while (1) {
    $66 = HEAP8[$__ns$126 >> 0] | 0;
    __THREW__ = 0;
    $67 = invoke_i(1) | 0;
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) break;
    __THREW__ = 0;
    $71 = invoke_iii(41, $66 << 24 >> 24 | 0, $67 | 0) | 0;
    $72 = __THREW__;
    __THREW__ = 0;
    if ($72 & 1) break;
    $64 = $__ns$126 + 1 | 0;
    if (!$71) {
     $__nf$1 = $__nf$0;
     $__ns$2 = $__ns$126;
     break L19;
    }
    if ($64 >>> 0 < $__ne >>> 0) $__ns$126 = $64; else {
     $__nf$1 = $__nf$0;
     $__ns$2 = $64;
     break L19;
    }
   }
   $19 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $19;
   $lpad$phi$index5 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  } else {
   $__nf$1 = $__nf$0;
   $__ns$2 = $__nf$0;
  } while (0);
  $75 = HEAP8[$__grouping >> 0] | 0;
  if (!($75 & 1)) $82 = ($75 & 255) >>> 1; else $82 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$82) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nf$1 | 0, $__ns$2 | 0, HEAP32[$__oe >> 2] | 0) | 0;
   $88 = __THREW__;
   __THREW__ = 0;
   if ($88 & 1) break;
   HEAP32[$__oe >> 2] = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1);
  } else {
   if (($__nf$1 | 0) != ($__ns$2 | 0)) {
    $96 = $__ns$2 + -1 | 0;
    if ($96 >>> 0 > $__nf$1 >>> 0) {
     $$012$i$i = $__nf$1;
     $100 = $96;
     do {
      $98 = HEAP8[$$012$i$i >> 0] | 0;
      HEAP8[$$012$i$i >> 0] = HEAP8[$100 >> 0] | 0;
      HEAP8[$100 >> 0] = $98;
      $$012$i$i = $$012$i$i + 1 | 0;
      $100 = $100 + -1 | 0;
     } while ($$012$i$i >>> 0 < $100 >>> 0);
    }
   }
   __THREW__ = 0;
   $107 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
   $108 = __THREW__;
   __THREW__ = 0;
   if ($108 & 1) break;
   L43 : do if ($__nf$1 >>> 0 < $__ns$2 >>> 0) {
    $111 = $__grouping + 1 | 0;
    $112 = $__grouping + 4 | 0;
    $113 = $__grouping + 8 | 0;
    $__dc$018 = 0;
    $__dg$019 = 0;
    $__p$020 = $__nf$1;
    while (1) {
     $116 = (HEAP8[$__grouping >> 0] & 1) == 0;
     if ((HEAP8[($116 ? $111 : HEAP32[$113 >> 2] | 0) + $__dg$019 >> 0] | 0) > 0) if (($__dc$018 | 0) == (HEAP8[($116 ? $111 : HEAP32[$113 >> 2] | 0) + $__dg$019 >> 0] | 0)) {
      $126 = HEAP32[$__oe >> 2] | 0;
      HEAP32[$__oe >> 2] = $126 + 1;
      HEAP8[$126 >> 0] = $107;
      $128 = HEAP8[$__grouping >> 0] | 0;
      if (!($128 & 1)) $135 = ($128 & 255) >>> 1; else $135 = HEAP32[$112 >> 2] | 0;
      $__dc$1 = 0;
      $__dg$1 = ($__dg$019 >>> 0 < ($135 + -1 | 0) >>> 0 & 1) + $__dg$019 | 0;
     } else {
      $__dc$1 = $__dc$018;
      $__dg$1 = $__dg$019;
     } else {
      $__dc$1 = $__dc$018;
      $__dg$1 = $__dg$019;
     }
     __THREW__ = 0;
     $142 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$__p$020 >> 0] | 0) | 0;
     $143 = __THREW__;
     __THREW__ = 0;
     if ($143 & 1) break;
     $145 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $145 + 1;
     HEAP8[$145 >> 0] = $142;
     $__p$020 = $__p$020 + 1 | 0;
     if ($__p$020 >>> 0 >= $__ns$2 >>> 0) break L43; else {
      $__dc$018 = $__dc$1 + 1 | 0;
      $__dg$019 = $__dg$1;
     }
    }
    $17 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $17;
    $lpad$phi$index5 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    ___resumeException($lpad$phi$index | 0);
   } while (0);
   $153 = $__ob + ($__nf$1 - $__nb) | 0;
   $154 = HEAP32[$__oe >> 2] | 0;
   if (($153 | 0) != ($154 | 0)) {
    $156 = $154 + -1 | 0;
    if ($156 >>> 0 > $153 >>> 0) {
     $$012$i$i7 = $153;
     $160 = $156;
     do {
      $158 = HEAP8[$$012$i$i7 >> 0] | 0;
      HEAP8[$$012$i$i7 >> 0] = HEAP8[$160 >> 0] | 0;
      HEAP8[$160 >> 0] = $158;
      $$012$i$i7 = $$012$i$i7 + 1 | 0;
      $160 = $160 + -1 | 0;
     } while ($$012$i$i7 >>> 0 < $160 >>> 0);
    }
   }
  }
  L63 : do if ($__ns$2 >>> 0 < $__ne >>> 0) {
   $__nf$214 = $__ns$2;
   while (1) {
    $165 = HEAP8[$__nf$214 >> 0] | 0;
    if ($165 << 24 >> 24 == 46) {
     label = 51;
     break;
    }
    __THREW__ = 0;
    $179 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $165 | 0) | 0;
    $180 = __THREW__;
    __THREW__ = 0;
    if ($180 & 1) {
     label = 4;
     break;
    }
    $182 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $182 + 1;
    HEAP8[$182 >> 0] = $179;
    $184 = $__nf$214 + 1 | 0;
    if ($184 >>> 0 < $__ne >>> 0) $__nf$214 = $184; else {
     $__nf$3 = $184;
     break L63;
    }
   }
   if ((label | 0) == 4) {
    $15 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $15;
    $lpad$phi$index5 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    ___resumeException($lpad$phi$index | 0);
   } else if ((label | 0) == 51) {
    __THREW__ = 0;
    $170 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] | 0, $1 | 0) | 0;
    $171 = __THREW__;
    __THREW__ = 0;
    if ($171 & 1) break L4;
    $173 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $173 + 1;
    HEAP8[$173 >> 0] = $170;
    $__nf$3 = $__nf$214 + 1 | 0;
    break;
   }
  } else $__nf$3 = $__ns$2; while (0);
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nf$3 | 0, $__ne | 0, HEAP32[$__oe >> 2] | 0) | 0;
  $190 = __THREW__;
  __THREW__ = 0;
  if (!($190 & 1)) {
   $195 = (HEAP32[$__oe >> 2] | 0) + ($25 - $__nf$3) | 0;
   HEAP32[$__oe >> 2] = $195;
   if (($__np | 0) == ($__ne | 0)) {
    $storemerge = $195;
    HEAP32[$__op >> 2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   $storemerge = $__ob + ($__np - $__nb) | 0;
   HEAP32[$__op >> 2] = $storemerge;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $23 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $23;
 $lpad$phi$index5 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i$i20 = 0, $$01$i$i = 0, $$01$i$i18 = 0, $$012$i$i = 0, $$055 = 0, $$2 = 0, $$lcssa41 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $104 = 0, $106 = 0, $11 = 0, $110 = 0, $114 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $122 = 0, $127 = 0, $13 = 0, $130 = 0, $135 = 0, $139 = 0, $140 = 0, $144 = 0, $146 = 0, $148 = 0, $150 = 0, $155 = 0, $157 = 0, $161 = 0, $163 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $174 = 0, $176 = 0, $178 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $44 = 0, $46 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $66 = 0, $7 = 0, $75 = 0, $77 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $83 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $95 = 0, $__d$0$lcssa = 0, $__d$0$lcssa63 = 0, $__d$032 = 0, $__d$1$lcssa77 = 0, $__d$1$lcssa78 = 0, $__d$135 = 0, $__d$2 = 0, $__d$348 = 0, $__f$0$lcssa75 = 0, $__f$0$lcssa76 = 0, $__f$036 = 0, $__f$142 = 0, $__gl$051 = 0, $__gl$1 = 0, $__ig$050 = 0, $__ig$1 = 0, $__ng$049 = 0, $__ng$1 = 0, $__p$054 = 0, $scevgep6667 = 0, $scevgep68 = 0, $umax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 1 | 0;
 $1 = $__sn + 8 | 0;
 $2 = $__sn + 4 | 0;
 $4 = ($__flags & 512 | 0) == 0;
 $5 = $__sym + 1 | 0;
 $6 = $__sym + 8 | 0;
 $7 = $__sym + 4 | 0;
 $8 = ($__fd | 0) > 0;
 $9 = $__grp + 1 | 0;
 $10 = $__grp + 8 | 0;
 $11 = $__grp + 4 | 0;
 $12 = $__ct + 8 | 0;
 $13 = 0 - $__fd | 0;
 $$055 = $__db;
 $__p$054 = 0;
 while (1) {
  switch (HEAP8[$__pat + $__p$054 >> 0] | 0) {
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 32) | 0;
    $23 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $23 + 1;
    HEAP8[$23 >> 0] = $22;
    $$2 = $$055;
    break;
   }
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$055;
    break;
   }
  case 3:
   {
    $25 = HEAP8[$__sn >> 0] | 0;
    $27 = ($25 & 1) == 0;
    if ($27) $31 = ($25 & 255) >>> 1; else $31 = HEAP32[$2 >> 2] | 0;
    if (!$31) $$2 = $$055; else {
     if ($27) $35 = $0; else $35 = HEAP32[$1 >> 2] | 0;
     $34 = HEAP8[$35 >> 0] | 0;
     $36 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $36 + 1;
     HEAP8[$36 >> 0] = $34;
     $$2 = $$055;
    }
    break;
   }
  case 4:
   {
    $61 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$055 + 1 | 0 : $$055;
    L16 : do if ($$$0 >>> 0 < $__de >>> 0) {
     $__d$032 = $$$0;
     while (1) {
      $66 = HEAP8[$__d$032 >> 0] | 0;
      if ($66 << 24 >> 24 <= -1) {
       $__d$0$lcssa = $__d$032;
       break L16;
      }
      $64 = $__d$032 + 1 | 0;
      if (!(HEAP16[(HEAP32[$12 >> 2] | 0) + ($66 << 24 >> 24 << 1) >> 1] & 2048)) {
       $__d$0$lcssa = $__d$032;
       break L16;
      }
      if ($64 >>> 0 < $__de >>> 0) $__d$032 = $64; else {
       $__d$0$lcssa = $64;
       break;
      }
     }
    } else $__d$0$lcssa = $$$0; while (0);
    $__d$0$lcssa63 = $__d$0$lcssa;
    if ($8) {
     if ($__d$0$lcssa >>> 0 > $$$0 >>> 0) {
      $75 = $$$0 - $__d$0$lcssa63 | 0;
      $umax = $75 >>> 0 < $13 >>> 0 ? $13 : $75;
      $scevgep6667 = $umax + $__fd | 0;
      $80 = $61;
      $__d$135 = $__d$0$lcssa;
      $__f$036 = $__fd;
      while (1) {
       $77 = $__d$135 + -1 | 0;
       $78 = HEAP8[$77 >> 0] | 0;
       HEAP32[$__me >> 2] = $80 + 1;
       HEAP8[$80 >> 0] = $78;
       $81 = $__f$036 + -1 | 0;
       $83 = ($81 | 0) > 0;
       if (!($77 >>> 0 > $$$0 >>> 0 & $83)) break;
       $80 = HEAP32[$__me >> 2] | 0;
       $__d$135 = $77;
       $__f$036 = $81;
      }
      $scevgep68 = $__d$0$lcssa + $umax | 0;
      if ($83) {
       $__d$1$lcssa78 = $scevgep68;
       $__f$0$lcssa76 = $scevgep6667;
       label = 32;
      } else {
       $91 = 0;
       $__d$1$lcssa77 = $scevgep68;
       $__f$0$lcssa75 = $scevgep6667;
      }
     } else {
      $__d$1$lcssa78 = $__d$0$lcssa;
      $__f$0$lcssa76 = $__fd;
      label = 32;
     }
     if ((label | 0) == 32) {
      label = 0;
      $91 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0;
      $__d$1$lcssa77 = $__d$1$lcssa78;
      $__f$0$lcssa75 = $__f$0$lcssa76;
     }
     $89 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $89 + 1;
     if (($__f$0$lcssa75 | 0) > 0) {
      $92 = $89;
      $__f$142 = $__f$0$lcssa75;
      while (1) {
       HEAP8[$92 >> 0] = $91;
       $__f$142 = $__f$142 + -1 | 0;
       $95 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $95 + 1;
       if (($__f$142 | 0) <= 0) {
        $$lcssa41 = $95;
        break;
       } else $92 = $95;
      }
     } else $$lcssa41 = $89;
     HEAP8[$$lcssa41 >> 0] = $__dp;
     $__d$2 = $__d$1$lcssa77;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $101 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0;
     $102 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $102 + 1;
     HEAP8[$102 >> 0] = $101;
    } else {
     $104 = HEAP8[$__grp >> 0] | 0;
     $106 = ($104 & 1) == 0;
     if ($106) $110 = ($104 & 255) >>> 1; else $110 = HEAP32[$11 >> 2] | 0;
     if (!$110) {
      $__d$348 = $__d$2;
      $__gl$051 = -1;
      $__ig$050 = 0;
      $__ng$049 = 0;
     } else {
      if ($106) $114 = $9; else $114 = HEAP32[$10 >> 2] | 0;
      $__d$348 = $__d$2;
      $__gl$051 = HEAP8[$114 >> 0] | 0;
      $__ig$050 = 0;
      $__ng$049 = 0;
     }
     while (1) {
      if (($__ng$049 | 0) == ($__gl$051 | 0)) {
       $117 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $117 + 1;
       HEAP8[$117 >> 0] = $__ts;
       $119 = $__ig$050 + 1 | 0;
       $120 = HEAP8[$__grp >> 0] | 0;
       $122 = ($120 & 1) == 0;
       if ($122) $127 = ($120 & 255) >>> 1; else $127 = HEAP32[$11 >> 2] | 0;
       if ($119 >>> 0 < $127 >>> 0) {
        if ($122) $130 = $9; else $130 = HEAP32[$10 >> 2] | 0;
        if ((HEAP8[$130 + $119 >> 0] | 0) == 127) {
         $__gl$1 = -1;
         $__ig$1 = $119;
         $__ng$1 = 0;
        } else {
         if ($122) $135 = $9; else $135 = HEAP32[$10 >> 2] | 0;
         $__gl$1 = HEAP8[$135 + $119 >> 0] | 0;
         $__ig$1 = $119;
         $__ng$1 = 0;
        }
       } else {
        $__gl$1 = $__gl$051;
        $__ig$1 = $119;
        $__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$051;
       $__ig$1 = $__ig$050;
       $__ng$1 = $__ng$049;
      }
      $__d$348 = $__d$348 + -1 | 0;
      $139 = HEAP8[$__d$348 >> 0] | 0;
      $140 = HEAP32[$__me >> 2] | 0;
      HEAP32[$__me >> 2] = $140 + 1;
      HEAP8[$140 >> 0] = $139;
      if (($__d$348 | 0) == ($$$0 | 0)) break; else {
       $__gl$051 = $__gl$1;
       $__ig$050 = $__ig$1;
       $__ng$049 = $__ng$1 + 1 | 0;
      }
     }
    }
    $144 = HEAP32[$__me >> 2] | 0;
    if (($61 | 0) == ($144 | 0)) $$2 = $$$0; else {
     $146 = $144 + -1 | 0;
     if ($146 >>> 0 > $61 >>> 0) {
      $$012$i$i = $61;
      $150 = $146;
      do {
       $148 = HEAP8[$$012$i$i >> 0] | 0;
       HEAP8[$$012$i$i >> 0] = HEAP8[$150 >> 0] | 0;
       HEAP8[$150 >> 0] = $148;
       $$012$i$i = $$012$i$i + 1 | 0;
       $150 = $150 + -1 | 0;
      } while ($$012$i$i >>> 0 < $150 >>> 0);
      $$2 = $$$0;
     } else $$2 = $$$0;
    }
    break;
   }
  case 2:
   {
    $38 = HEAP8[$__sym >> 0] | 0;
    $40 = ($38 & 1) == 0;
    if ($40) $44 = ($38 & 255) >>> 1; else $44 = HEAP32[$7 >> 2] | 0;
    if (($44 | 0) == 0 | $4) $$2 = $$055; else {
     if ($40) {
      $51 = $5;
      $52 = ($38 & 255) >>> 1;
      $54 = $5;
     } else {
      $46 = HEAP32[$6 >> 2] | 0;
      $51 = $46;
      $52 = HEAP32[$7 >> 2] | 0;
      $54 = $46;
     }
     $50 = $51 + $52 | 0;
     $53 = HEAP32[$__me >> 2] | 0;
     if (($54 | 0) == ($50 | 0)) $$0$lcssa$i$i20 = $53; else {
      $$01$i$i18 = $53;
      $57 = $54;
      while (1) {
       HEAP8[$$01$i$i18 >> 0] = HEAP8[$57 >> 0] | 0;
       $57 = $57 + 1 | 0;
       $59 = $$01$i$i18 + 1 | 0;
       if (($57 | 0) == ($50 | 0)) {
        $$0$lcssa$i$i20 = $59;
        break;
       } else $$01$i$i18 = $59;
      }
     }
     HEAP32[$__me >> 2] = $$0$lcssa$i$i20;
     $$2 = $$055;
    }
    break;
   }
  default:
   $$2 = $$055;
  }
  $__p$054 = $__p$054 + 1 | 0;
  if (($__p$054 | 0) == 4) break; else $$055 = $$2;
 }
 $155 = HEAP8[$__sn >> 0] | 0;
 $157 = ($155 & 1) == 0;
 if ($157) $161 = ($155 & 255) >>> 1; else $161 = HEAP32[$2 >> 2] | 0;
 if ($161 >>> 0 > 1) {
  if ($157) {
   $$pn = $0;
   $169 = $0;
   $170 = ($155 & 255) >>> 1;
  } else {
   $163 = HEAP32[$1 >> 2] | 0;
   $$pn = $163;
   $169 = $163;
   $170 = HEAP32[$2 >> 2] | 0;
  }
  $167 = $$pn + 1 | 0;
  $168 = $169 + $170 | 0;
  $171 = HEAP32[$__me >> 2] | 0;
  if (($167 | 0) == ($168 | 0)) $$0$lcssa$i$i = $171; else {
   $$01$i$i = $171;
   $174 = $167;
   while (1) {
    HEAP8[$$01$i$i >> 0] = HEAP8[$174 >> 0] | 0;
    $174 = $174 + 1 | 0;
    $176 = $$01$i$i + 1 | 0;
    if (($174 | 0) == ($168 | 0)) {
     $$0$lcssa$i$i = $176;
     break;
    } else $$01$i$i = $176;
   }
  }
  HEAP32[$__me >> 2] = $$0$lcssa$i$i;
 }
 $178 = $__flags & 176;
 if (($178 | 0) == 16) {
  STACKTOP = sp;
  return;
 } else if (($178 | 0) == 32) {
  HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__mi >> 2] = $__mb;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i$i22 = 0, $$01$i$i = 0, $$01$i$i19 = 0, $$012$i$i = 0, $$060 = 0, $$2 = 0, $$lcssa45 = 0, $$pn = 0, $0 = 0, $1 = 0, $100 = 0, $102 = 0, $106 = 0, $110 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $118 = 0, $123 = 0, $126 = 0, $131 = 0, $135 = 0, $136 = 0, $137 = 0, $141 = 0, $142 = 0, $144 = 0, $146 = 0, $151 = 0, $153 = 0, $157 = 0, $159 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $171 = 0, $173 = 0, $178 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $4 = 0, $40 = 0, $42 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $56 = 0, $6 = 0, $61 = 0, $64 = 0, $7 = 0, $75 = 0, $78 = 0, $79 = 0, $8 = 0, $84 = 0, $86 = 0, $87 = 0, $88 = 0, $88$phi = 0, $9 = 0, $92 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0, $__d$034 = 0, $__d$1$lcssa7881 = 0, $__d$1$lcssa79 = 0, $__d$137 = 0, $__d$2 = 0, $__d$354 = 0, $__f$0$lcssa77 = 0, $__f$038 = 0, $__f$146 = 0, $__gl$057 = 0, $__gl$1 = 0, $__ig$056 = 0, $__ig$1 = 0, $__ng$055 = 0, $__ng$1 = 0, $__p$059 = 0, label = 0, sp = 0, $75$looptemp = 0;
 sp = STACKTOP;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 4 | 0;
 $1 = $__sn + 8 | 0;
 $3 = ($__flags & 512 | 0) == 0;
 $4 = $__sym + 4 | 0;
 $5 = $__sym + 8 | 0;
 $6 = ($__fd | 0) > 0;
 $7 = $__grp + 1 | 0;
 $8 = $__grp + 8 | 0;
 $9 = $__grp + 4 | 0;
 $$060 = $__db;
 $__p$059 = 0;
 while (1) {
  switch (HEAP8[$__pat + $__p$059 >> 0] | 0) {
  case 4:
   {
    $61 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$060 + 4 | 0 : $$060;
    L5 : do if ($$$0 >>> 0 < $__de >>> 0) {
     $__d$034 = $$$0;
     while (1) {
      $64 = $__d$034 + 4 | 0;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, HEAP32[$__d$034 >> 2] | 0) | 0)) {
       $__d$0$lcssa = $__d$034;
       break L5;
      }
      if ($64 >>> 0 < $__de >>> 0) $__d$034 = $64; else {
       $__d$0$lcssa = $64;
       break;
      }
     }
    } else $__d$0$lcssa = $$$0; while (0);
    if ($6) {
     if ($__d$0$lcssa >>> 0 > $$$0 >>> 0) {
      $75 = HEAP32[$__me >> 2] | 0;
      $__d$137 = $__d$0$lcssa;
      $__f$038 = $__fd;
      do {
       $__d$137 = $__d$137 + -4 | 0;
       $75$looptemp = $75;
       $75 = $75 + 4 | 0;
       HEAP32[$75$looptemp >> 2] = HEAP32[$__d$137 >> 2];
       $__f$038 = $__f$038 + -1 | 0;
       $78 = ($__f$038 | 0) > 0;
      } while ($__d$137 >>> 0 > $$$0 >>> 0 & $78);
      HEAP32[$__me >> 2] = $75;
      if ($78) {
       $__d$1$lcssa79 = $__d$137;
       $__f$0$lcssa77 = $__f$038;
       label = 33;
      } else {
       $79 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $79 + 4;
       $$lcssa45 = $79;
       $__d$1$lcssa7881 = $__d$137;
      }
     } else {
      $__d$1$lcssa79 = $__d$0$lcssa;
      $__f$0$lcssa77 = $__fd;
      label = 33;
     }
     if ((label | 0) == 33) {
      label = 0;
      $84 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0;
      $86 = HEAP32[$__me >> 2] | 0;
      $87 = $86 + 4 | 0;
      HEAP32[$__me >> 2] = $87;
      if (($__f$0$lcssa77 | 0) > 0) {
       $88 = $86;
       $92 = $87;
       $__f$146 = $__f$0$lcssa77;
       while (1) {
        HEAP32[$88 >> 2] = $84;
        $__f$146 = $__f$146 + -1 | 0;
        if (($__f$146 | 0) <= 0) break; else {
         $88$phi = $92;
         $92 = $92 + 4 | 0;
         $88 = $88$phi;
        }
       }
       HEAP32[$__me >> 2] = $86 + ($__f$0$lcssa77 + 1 << 2);
       $$lcssa45 = $86 + ($__f$0$lcssa77 << 2) | 0;
       $__d$1$lcssa7881 = $__d$1$lcssa79;
      } else {
       $$lcssa45 = $86;
       $__d$1$lcssa7881 = $__d$1$lcssa79;
      }
     }
     HEAP32[$$lcssa45 >> 2] = $__dp;
     $__d$2 = $__d$1$lcssa7881;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $97 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0;
     $98 = HEAP32[$__me >> 2] | 0;
     $99 = $98 + 4 | 0;
     HEAP32[$__me >> 2] = $99;
     HEAP32[$98 >> 2] = $97;
     $141 = $99;
    } else {
     $100 = HEAP8[$__grp >> 0] | 0;
     $102 = ($100 & 1) == 0;
     if ($102) $106 = ($100 & 255) >>> 1; else $106 = HEAP32[$9 >> 2] | 0;
     if (!$106) {
      $__d$354 = $__d$2;
      $__gl$057 = -1;
      $__ig$056 = 0;
      $__ng$055 = 0;
     } else {
      if ($102) $110 = $7; else $110 = HEAP32[$8 >> 2] | 0;
      $__d$354 = $__d$2;
      $__gl$057 = HEAP8[$110 >> 0] | 0;
      $__ig$056 = 0;
      $__ng$055 = 0;
     }
     while (1) {
      $113 = HEAP32[$__me >> 2] | 0;
      if (($__ng$055 | 0) == ($__gl$057 | 0)) {
       $114 = $113 + 4 | 0;
       HEAP32[$__me >> 2] = $114;
       HEAP32[$113 >> 2] = $__ts;
       $115 = $__ig$056 + 1 | 0;
       $116 = HEAP8[$__grp >> 0] | 0;
       $118 = ($116 & 1) == 0;
       if ($118) $123 = ($116 & 255) >>> 1; else $123 = HEAP32[$9 >> 2] | 0;
       if ($115 >>> 0 < $123 >>> 0) {
        if ($118) $126 = $7; else $126 = HEAP32[$8 >> 2] | 0;
        if ((HEAP8[$126 + $115 >> 0] | 0) == 127) {
         $137 = $114;
         $__gl$1 = -1;
         $__ig$1 = $115;
         $__ng$1 = 0;
        } else {
         if ($118) $131 = $7; else $131 = HEAP32[$8 >> 2] | 0;
         $137 = $114;
         $__gl$1 = HEAP8[$131 + $115 >> 0] | 0;
         $__ig$1 = $115;
         $__ng$1 = 0;
        }
       } else {
        $137 = $114;
        $__gl$1 = $__gl$057;
        $__ig$1 = $115;
        $__ng$1 = 0;
       }
      } else {
       $137 = $113;
       $__gl$1 = $__gl$057;
       $__ig$1 = $__ig$056;
       $__ng$1 = $__ng$055;
      }
      $__d$354 = $__d$354 + -4 | 0;
      $135 = HEAP32[$__d$354 >> 2] | 0;
      $136 = $137 + 4 | 0;
      HEAP32[$__me >> 2] = $136;
      HEAP32[$137 >> 2] = $135;
      if (($__d$354 | 0) == ($$$0 | 0)) {
       $141 = $136;
       break;
      } else {
       $__gl$057 = $__gl$1;
       $__ig$056 = $__ig$1;
       $__ng$055 = $__ng$1 + 1 | 0;
      }
     }
    }
    if (($61 | 0) == ($141 | 0)) $$2 = $$$0; else {
     $142 = $141 + -4 | 0;
     if ($142 >>> 0 > $61 >>> 0) {
      $$012$i$i = $61;
      $146 = $142;
      do {
       $144 = HEAP32[$$012$i$i >> 2] | 0;
       HEAP32[$$012$i$i >> 2] = HEAP32[$146 >> 2];
       HEAP32[$146 >> 2] = $144;
       $$012$i$i = $$012$i$i + 4 | 0;
       $146 = $146 + -4 | 0;
      } while ($$012$i$i >>> 0 < $146 >>> 0);
      $$2 = $$$0;
     } else $$2 = $$$0;
    }
    break;
   }
  case 3:
   {
    $21 = HEAP8[$__sn >> 0] | 0;
    $23 = ($21 & 1) == 0;
    if ($23) $27 = ($21 & 255) >>> 1; else $27 = HEAP32[$0 >> 2] | 0;
    if (!$27) $$2 = $$060; else {
     if ($23) $31 = $0; else $31 = HEAP32[$1 >> 2] | 0;
     $30 = HEAP32[$31 >> 2] | 0;
     $32 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $32 + 4;
     HEAP32[$32 >> 2] = $30;
     $$2 = $$060;
    }
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 32) | 0;
    $19 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $19 + 4;
    HEAP32[$19 >> 2] = $18;
    $$2 = $$060;
    break;
   }
  case 2:
   {
    $34 = HEAP8[$__sym >> 0] | 0;
    $36 = ($34 & 1) == 0;
    if ($36) $40 = ($34 & 255) >>> 1; else $40 = HEAP32[$4 >> 2] | 0;
    if (($40 | 0) == 0 | $3) $$2 = $$060; else {
     if ($36) {
      $47 = $4;
      $48 = ($34 & 255) >>> 1;
      $50 = $4;
     } else {
      $42 = HEAP32[$5 >> 2] | 0;
      $47 = $42;
      $48 = HEAP32[$4 >> 2] | 0;
      $50 = $42;
     }
     $46 = $47 + ($48 << 2) | 0;
     $49 = HEAP32[$__me >> 2] | 0;
     if (($50 | 0) == ($46 | 0)) $$0$lcssa$i$i22 = $49; else {
      $54 = ($47 + ($48 + -1 << 2) - $50 | 0) >>> 2;
      $$01$i$i19 = $49;
      $56 = $50;
      while (1) {
       HEAP32[$$01$i$i19 >> 2] = HEAP32[$56 >> 2];
       $56 = $56 + 4 | 0;
       if (($56 | 0) == ($46 | 0)) break; else $$01$i$i19 = $$01$i$i19 + 4 | 0;
      }
      $$0$lcssa$i$i22 = $49 + ($54 + 1 << 2) | 0;
     }
     HEAP32[$__me >> 2] = $$0$lcssa$i$i22;
     $$2 = $$060;
    }
    break;
   }
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$060;
    break;
   }
  default:
   $$2 = $$060;
  }
  $__p$059 = $__p$059 + 1 | 0;
  if (($__p$059 | 0) == 4) break; else $$060 = $$2;
 }
 $151 = HEAP8[$__sn >> 0] | 0;
 $153 = ($151 & 1) == 0;
 if ($153) $157 = ($151 & 255) >>> 1; else $157 = HEAP32[$0 >> 2] | 0;
 if ($157 >>> 0 > 1) {
  if ($153) {
   $$pn = $0;
   $165 = $0;
   $166 = ($151 & 255) >>> 1;
  } else {
   $159 = HEAP32[$1 >> 2] | 0;
   $$pn = $159;
   $165 = $159;
   $166 = HEAP32[$0 >> 2] | 0;
  }
  $163 = $$pn + 4 | 0;
  $164 = $165 + ($166 << 2) | 0;
  $167 = HEAP32[$__me >> 2] | 0;
  if (($163 | 0) == ($164 | 0)) $$0$lcssa$i$i = $167; else {
   $171 = ($165 + ($166 + -1 << 2) - $163 | 0) >>> 2;
   $$01$i$i = $167;
   $173 = $163;
   while (1) {
    HEAP32[$$01$i$i >> 2] = HEAP32[$173 >> 2];
    $173 = $173 + 4 | 0;
    if (($173 | 0) == ($164 | 0)) break; else $$01$i$i = $$01$i$i + 4 | 0;
   }
   $$0$lcssa$i$i = $167 + ($171 + 1 << 2) | 0;
  }
  HEAP32[$__me >> 2] = $$0$lcssa$i$i;
 }
 $178 = $__flags & 176;
 if (($178 | 0) == 32) {
  HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
  STACKTOP = sp;
  return;
 } else if (($178 | 0) == 16) {
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__mi >> 2] = $__mb;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i$i$i16 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i22 = 0, $$0$i$i1$i$i7 = 0, $$0$i$i13 = 0, $$0$ph$be = 0, $$0$ph40 = 0, $$0$pn = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$pre$i$i$i18 = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $$pre$i3$i$i942 = 0, $$pre$i3$i$i943 = 0, $$pre41 = 0, $0 = 0, $1 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $120 = 0, $127 = 0, $128 = 0, $129 = 0, $14 = 0, $140 = 0, $147 = 0, $157 = 0, $167 = 0, $170 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $2 = 0, $24 = 0, $27 = 0, $3 = 0, $37 = 0, $4 = 0, $46 = 0, $5 = 0, $52 = 0, $53 = 0, $62 = 0, $63 = 0, $64 = 0, $81 = 0, $9 = 0, $91 = 0, $94 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $0 = sp + 12 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $4 = invoke_iii(22, $0 | 0, 45792) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $37 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($37 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 HEAP32[$__err >> 2] = 0;
 L4 : do if (($__fmtb | 0) == ($__fmte | 0)) label = 66; else {
  $$0$ph40 = $__fmtb;
  $$pre41 = 0;
  L6 : while (1) {
   $9 = $$pre41;
   while (1) {
    if ($9) {
     label = 66;
     break L4;
    }
    $11 = HEAP32[$__b >> 2] | 0;
    if (!$11) {
     $183 = 1;
     $63 = 0;
    } else {
     $14 = HEAP32[$11 + 12 >> 2] | 0;
     if (($14 | 0) == (HEAP32[$11 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 127]($11) | 0; else $$0$i$i$i$i = HEAP32[$14 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $183 = 1;
      $63 = 0;
     } else {
      $183 = 0;
      $63 = $11;
     }
    }
    $24 = HEAP32[$__e >> 2] | 0;
    do if (!$24) label = 18; else {
     $27 = HEAP32[$24 + 12 >> 2] | 0;
     if (($27 | 0) == (HEAP32[$24 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 127]($24) | 0; else $$0$i$i1$i$i = HEAP32[$27 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 18;
      break;
     } else if ($183) {
      $64 = $24;
      break;
     } else {
      label = 20;
      break L6;
     }
    } while (0);
    if ((label | 0) == 18) {
     label = 0;
     if ($183) {
      label = 20;
      break L6;
     } else $64 = 0;
    }
    if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$$0$ph40 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
     label = 23;
     break;
    }
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, HEAP32[$$0$ph40 >> 2] | 0) | 0) {
     $$0$pn = $$0$ph40;
     label = 33;
     break;
    }
    $127 = $63 + 12 | 0;
    $128 = HEAP32[$127 >> 2] | 0;
    $129 = $63 + 16 | 0;
    if (($128 | 0) == (HEAP32[$129 >> 2] | 0)) $$0$i$i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] & 127]($63) | 0; else $$0$i$i13 = HEAP32[$128 >> 2] | 0;
    $140 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, $$0$i$i13) | 0;
    if (($140 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, HEAP32[$$0$ph40 >> 2] | 0) | 0)) {
     label = 61;
     break;
    }
    HEAP32[$__err >> 2] = 4;
    $9 = 4;
   }
   L38 : do if ((label | 0) == 23) {
    label = 0;
    $46 = $$0$ph40 + 4 | 0;
    if (($46 | 0) == ($__fmte | 0)) {
     label = 24;
     break L6;
    }
    $52 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$46 >> 2] | 0, 0) | 0;
    if ($52 << 24 >> 24 == 48 | $52 << 24 >> 24 == 69) {
     $53 = $$0$ph40 + 8 | 0;
     if (($53 | 0) == ($__fmte | 0)) {
      label = 27;
      break L6;
     }
     $$1 = $53;
     $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$53 >> 2] | 0, 0) | 0;
     $__opt$0 = $52;
    } else {
     $$1 = $46;
     $__cmd$0 = $52;
     $__opt$0 = 0;
    }
    $62 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
    HEAP32[$2 >> 2] = $63;
    HEAP32[$3 >> 2] = $64;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
    FUNCTION_TABLE_viiiiiiiii[$62 & 3]($1, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0);
    HEAP32[$__b >> 2] = HEAP32[$1 >> 2];
    $$0$ph$be = $$1 + 4 | 0;
   } else if ((label | 0) == 33) {
    while (1) {
     label = 0;
     $$2 = $$0$pn + 4 | 0;
     if (($$2 | 0) == ($__fmte | 0)) {
      $$2$lcssa = $__fmte;
      break;
     }
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, HEAP32[$$2 >> 2] | 0) | 0) {
      $$0$pn = $$2;
      label = 33;
     } else {
      $$2$lcssa = $$2;
      break;
     }
    }
    $$pre$i$i$i3 = $63;
    $$pre$i3$i$i9 = $64;
    $91 = $64;
    while (1) {
     if (!$$pre$i$i$i3) {
      $104 = 1;
      $106 = 0;
     } else {
      $81 = HEAP32[$$pre$i$i$i3 + 12 >> 2] | 0;
      if (($81 | 0) == (HEAP32[$$pre$i$i$i3 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i3 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i3) | 0; else $$0$i$i$i$i1 = HEAP32[$81 >> 2] | 0;
      if (($$0$i$i$i$i1 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $104 = 1;
       $106 = 0;
      } else {
       $104 = 0;
       $106 = $$pre$i$i$i3;
      }
     }
     do if (!$91) {
      $$pre$i3$i$i943 = $$pre$i3$i$i9;
      label = 48;
     } else {
      $94 = HEAP32[$91 + 12 >> 2] | 0;
      if (($94 | 0) == (HEAP32[$91 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 127]($91) | 0; else $$0$i$i1$i$i7 = HEAP32[$94 >> 2] | 0;
      if (($$0$i$i1$i$i7 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i3$i$i943 = 0;
       label = 48;
       break;
      } else if ($104 ^ ($$pre$i3$i$i9 | 0) == 0) {
       $$pre$i3$i$i942 = $$pre$i3$i$i9;
       $184 = $$pre$i3$i$i9;
       break;
      } else {
       $$0$ph$be = $$2$lcssa;
       break L38;
      }
     } while (0);
     if ((label | 0) == 48) {
      label = 0;
      if ($104) {
       $$0$ph$be = $$2$lcssa;
       break L38;
      } else {
       $$pre$i3$i$i942 = $$pre$i3$i$i943;
       $184 = 0;
      }
     }
     $105 = $106 + 12 | 0;
     $107 = HEAP32[$105 >> 2] | 0;
     $108 = $106 + 16 | 0;
     if (($107 | 0) == (HEAP32[$108 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$106 >> 2] | 0) + 36 >> 2] & 127]($106) | 0; else $$0$i$i = HEAP32[$107 >> 2] | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, $$0$i$i) | 0)) {
      $$0$ph$be = $$2$lcssa;
      break L38;
     }
     $120 = HEAP32[$105 >> 2] | 0;
     if (($120 | 0) == (HEAP32[$108 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$106 >> 2] | 0) + 40 >> 2] & 127]($106) | 0;
      $$pre$i$i$i3 = $106;
      $$pre$i3$i$i9 = $$pre$i3$i$i942;
      $91 = $184;
      continue;
     } else {
      HEAP32[$105 >> 2] = $120 + 4;
      $$pre$i$i$i3 = $106;
      $$pre$i3$i$i9 = $$pre$i3$i$i942;
      $91 = $184;
      continue;
     }
    }
   } else if ((label | 0) == 61) {
    label = 0;
    $147 = HEAP32[$127 >> 2] | 0;
    if (($147 | 0) == (HEAP32[$129 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 40 >> 2] & 127]($63) | 0; else HEAP32[$127 >> 2] = $147 + 4;
    $$0$ph$be = $$0$ph40 + 4 | 0;
   } while (0);
   if (($$0$ph$be | 0) == ($__fmte | 0)) {
    label = 66;
    break L4;
   }
   $$0$ph40 = $$0$ph$be;
   $$pre41 = HEAP32[$__err >> 2] | 0;
  }
  if ((label | 0) == 20) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i18 = $63;
   break;
  } else if ((label | 0) == 24) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i18 = $63;
   break;
  } else if ((label | 0) == 27) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i18 = $63;
   break;
  }
 } while (0);
 if ((label | 0) == 66) $$pre$i$i$i18 = HEAP32[$__b >> 2] | 0;
 if (!$$pre$i$i$i18) {
  $182 = 0;
  $185 = 1;
 } else {
  $157 = HEAP32[$$pre$i$i$i18 + 12 >> 2] | 0;
  if (($157 | 0) == (HEAP32[$$pre$i$i$i18 + 16 >> 2] | 0)) $$0$i$i$i$i16 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i18 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i18) | 0; else $$0$i$i$i$i16 = HEAP32[$157 >> 2] | 0;
  if (($$0$i$i$i$i16 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $182 = 0;
   $185 = 1;
  } else {
   $182 = $$pre$i$i$i18;
   $185 = 0;
  }
 }
 $167 = HEAP32[$__e >> 2] | 0;
 do if (!$167) label = 79; else {
  $170 = HEAP32[$167 + 12 >> 2] | 0;
  if (($170 | 0) == (HEAP32[$167 + 16 >> 2] | 0)) $$0$i$i1$i$i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$167 >> 2] | 0) + 36 >> 2] & 127]($167) | 0; else $$0$i$i1$i$i22 = HEAP32[$170 >> 2] | 0;
  if (($$0$i$i1$i$i22 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 79;
   break;
  }
  if ($185) {
   HEAP32[$agg$result >> 2] = $182;
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 79) if (!$185) {
  HEAP32[$agg$result >> 2] = $182;
  STACKTOP = sp;
  return;
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 HEAP32[$agg$result >> 2] = $182;
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $103 = 0, $105 = 0, $109 = 0, $11 = 0, $12 = 0, $120 = 0, $122 = 0, $13 = 0, $142 = 0, $144 = 0, $156 = 0, $158 = 0, $16 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $33 = 0, $4 = 0, $44 = 0, $46 = 0, $5 = 0, $6 = 0, $66 = 0, $68 = 0, $7 = 0, $8 = 0, $80 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 80 | 0;
 $4 = sp + 68 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45368) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  do if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 127]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) {
    $29 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($29);
   } else {
    HEAP32[$__sn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
    HEAP32[$1 + 0 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($1);
    break;
   }
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 127]($2, $12);
   $33 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $33;
   HEAP8[$__pat + 1 >> 0] = $33 >> 8;
   HEAP8[$__pat + 2 >> 0] = $33 >> 16;
   HEAP8[$__pat + 3 >> 0] = $33 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $44 = __THREW__;
   __THREW__ = 0;
   if ($44 & 1) {
    $46 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($46);
   } else {
    HEAP32[$__sn + 0 >> 2] = HEAP32[$3 + 0 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    HEAP32[$3 + 0 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($3);
    break;
   }
  } while (0);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $66 = __THREW__;
  __THREW__ = 0;
  if ($66 & 1) {
   $68 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($68);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 + 0 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $80 = __THREW__;
  __THREW__ = 0;
  if ($80 & 1) {
   $82 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($82);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$5 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$5 + 0 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($5);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 } else {
  $88 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45304) | 0;
  $89 = HEAP32[$88 >> 2] | 0;
  do if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$89 + 44 >> 2] & 127]($6, $88);
   $92 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $92;
   HEAP8[$__pat + 1 >> 0] = $92 >> 8;
   HEAP8[$__pat + 2 >> 0] = $92 >> 16;
   HEAP8[$__pat + 3 >> 0] = $92 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 32 >> 2] & 127]($7, $88);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $103 = __THREW__;
   __THREW__ = 0;
   if ($103 & 1) {
    $105 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($105);
   } else {
    HEAP32[$__sn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$7 + 0 >> 2] = 0;
    HEAP32[$7 + 4 >> 2] = 0;
    HEAP32[$7 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($7);
    break;
   }
  } else {
   FUNCTION_TABLE_vii[HEAP32[$89 + 40 >> 2] & 127]($8, $88);
   $109 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $109;
   HEAP8[$__pat + 1 >> 0] = $109 >> 8;
   HEAP8[$__pat + 2 >> 0] = $109 >> 16;
   HEAP8[$__pat + 3 >> 0] = $109 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] & 127]($9, $88);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP32[$__sn + 4 >> 2] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(76, $__sn | 0, 0);
   $120 = __THREW__;
   __THREW__ = 0;
   if ($120 & 1) {
    $122 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($122);
   } else {
    HEAP32[$__sn + 0 >> 2] = HEAP32[$9 + 0 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    HEAP32[$9 + 0 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($9);
    break;
   }
  } while (0);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 12 >> 2] & 127]($88) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 16 >> 2] & 127]($88) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 20 >> 2] & 127]($10, $88);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $142 = __THREW__;
  __THREW__ = 0;
  if ($142 & 1) {
   $144 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($144);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$10 + 0 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  HEAP32[$10 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 24 >> 2] & 127]($11, $88);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $156 = __THREW__;
  __THREW__ = 0;
  if ($156 & 1) {
   $158 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($158);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$11 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  HEAP32[$11 + 0 >> 2] = 0;
  HEAP32[$11 + 4 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] & 127]($88) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $0 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $114 = 0, $119 = 0, $122 = 0.0, $123 = 0, $128 = 0, $135 = 0, $136 = 0, $14 = 0, $142 = 0, $149 = 0, $150 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($0 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $7 = $__buf + 1 | 0;
   $$pre$phi34Z2D = $7;
   $$pre$phi36Z2D = $__buf + 8 | 0;
   $8 = $7;
  } else {
   $5 = $__buf + 8 | 0;
   $$pre$phi34Z2D = $__buf + 1 | 0;
   $$pre$phi36Z2D = $5;
   $8 = HEAP32[$5 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $8;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $9 = $__buf + 4 | 0;
  $10 = HEAP32[$__decimal_point >> 2] | 0;
  $11 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $8;
  L7 : while (1) {
   if (!$$pre$i$i$i6) {
    $157 = 1;
    $80 = 0;
   } else {
    $14 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 34;
      break;
     } else $$0$i$i$i$i4 = $21;
    } else $$0$i$i$i$i4 = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $157 = 1;
     $80 = 0;
    } else {
     $157 = 0;
     $80 = $$pre$i$i$i6;
    }
   }
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 18; else {
    $29 = HEAP32[$26 + 12 >> 2] | 0;
    if (($29 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $36 = invoke_ii(HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] | 0, $26 | 0) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) {
      label = 34;
      break L7;
     } else $$0$i$i1$i$i10 = $36;
    } else $$0$i$i1$i$i10 = HEAP32[$29 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 18;
     break;
    } else if ($157) {
     $158 = $26;
     break;
    } else {
     $$pre$i3$i$i = $26;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 18) {
    label = 0;
    if ($157) {
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$9 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$9 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi34Z2D; else $73 = HEAP32[$$pre$phi36Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $80 + 12 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $82 = $80 + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 34;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $10, $11, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i3$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$79 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] | 0, $80 | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 34;
     break;
    } else {
     $$pre$i$i$i6 = $80;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $94 + 4;
    $$pre$i$i$i6 = $80;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 34) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!($103 & 1)) $110 = ($103 & 255) >>> 1; else $110 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($110 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $114 = HEAP32[$__g_end >> 2] | 0;
   if (($114 - $__g | 0) < 160) {
    $119 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $114 + 4;
    HEAP32[$114 >> 2] = $119;
   }
  }
  __THREW__ = 0;
  $122 = +invoke_diii(1, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $123 = __THREW__;
  __THREW__ = 0;
  if (!($123 & 1)) {
   HEAPF32[$__v >> 2] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$80) {
    $156 = 0;
    $159 = 1;
   } else {
    $128 = HEAP32[$80 + 12 >> 2] | 0;
    if (($128 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $135 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
     $136 = __THREW__;
     __THREW__ = 0;
     if ($136 & 1) break; else $$0$i$i$i$i = $135;
    } else $$0$i$i$i$i = HEAP32[$128 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $156 = 0;
     $159 = 1;
    } else {
     $156 = $80;
     $159 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 63; else {
    $142 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($142 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) break L1; else $$0$i$i1$i$i = $149;
    } else $$0$i$i1$i$i = HEAP32[$142 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 63;
     break;
    }
    if ($159) {
     HEAP32[$agg$result >> 2] = $156;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 63) if (!$159) {
    HEAP32[$agg$result >> 2] = $156;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $156;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $0 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $114 = 0, $119 = 0, $122 = 0.0, $123 = 0, $128 = 0, $135 = 0, $136 = 0, $14 = 0, $142 = 0, $149 = 0, $150 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($0 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $7 = $__buf + 1 | 0;
   $$pre$phi34Z2D = $7;
   $$pre$phi36Z2D = $__buf + 8 | 0;
   $8 = $7;
  } else {
   $5 = $__buf + 8 | 0;
   $$pre$phi34Z2D = $__buf + 1 | 0;
   $$pre$phi36Z2D = $5;
   $8 = HEAP32[$5 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $8;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $9 = $__buf + 4 | 0;
  $10 = HEAP32[$__decimal_point >> 2] | 0;
  $11 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $8;
  L7 : while (1) {
   if (!$$pre$i$i$i6) {
    $157 = 1;
    $80 = 0;
   } else {
    $14 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 34;
      break;
     } else $$0$i$i$i$i4 = $21;
    } else $$0$i$i$i$i4 = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $157 = 1;
     $80 = 0;
    } else {
     $157 = 0;
     $80 = $$pre$i$i$i6;
    }
   }
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 18; else {
    $29 = HEAP32[$26 + 12 >> 2] | 0;
    if (($29 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $36 = invoke_ii(HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] | 0, $26 | 0) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) {
      label = 34;
      break L7;
     } else $$0$i$i1$i$i10 = $36;
    } else $$0$i$i1$i$i10 = HEAP32[$29 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 18;
     break;
    } else if ($157) {
     $158 = $26;
     break;
    } else {
     $$pre$i3$i$i = $26;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 18) {
    label = 0;
    if ($157) {
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$9 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$9 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi34Z2D; else $73 = HEAP32[$$pre$phi36Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $80 + 12 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $82 = $80 + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 34;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $10, $11, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i3$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$79 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] | 0, $80 | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 34;
     break;
    } else {
     $$pre$i$i$i6 = $80;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $94 + 4;
    $$pre$i$i$i6 = $80;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 34) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!($103 & 1)) $110 = ($103 & 255) >>> 1; else $110 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($110 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $114 = HEAP32[$__g_end >> 2] | 0;
   if (($114 - $__g | 0) < 160) {
    $119 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $114 + 4;
    HEAP32[$114 >> 2] = $119;
   }
  }
  __THREW__ = 0;
  $122 = +invoke_diii(3, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $123 = __THREW__;
  __THREW__ = 0;
  if (!($123 & 1)) {
   HEAPF64[$__v >> 3] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$80) {
    $156 = 0;
    $159 = 1;
   } else {
    $128 = HEAP32[$80 + 12 >> 2] | 0;
    if (($128 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $135 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
     $136 = __THREW__;
     __THREW__ = 0;
     if ($136 & 1) break; else $$0$i$i$i$i = $135;
    } else $$0$i$i$i$i = HEAP32[$128 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $156 = 0;
     $159 = 1;
    } else {
     $156 = $80;
     $159 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 63; else {
    $142 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($142 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) break L1; else $$0$i$i1$i$i = $149;
    } else $$0$i$i1$i$i = HEAP32[$142 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 63;
     break;
    }
    if ($159) {
     HEAP32[$agg$result >> 2] = $156;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 63) if (!$159) {
    HEAP32[$agg$result >> 2] = $156;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $156;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $0 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $114 = 0, $119 = 0, $122 = 0.0, $123 = 0, $128 = 0, $135 = 0, $136 = 0, $14 = 0, $142 = 0, $149 = 0, $150 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($0 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $7 = $__buf + 1 | 0;
   $$pre$phi34Z2D = $7;
   $$pre$phi36Z2D = $__buf + 8 | 0;
   $8 = $7;
  } else {
   $5 = $__buf + 8 | 0;
   $$pre$phi34Z2D = $__buf + 1 | 0;
   $$pre$phi36Z2D = $5;
   $8 = HEAP32[$5 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $8;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $9 = $__buf + 4 | 0;
  $10 = HEAP32[$__decimal_point >> 2] | 0;
  $11 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $8;
  L7 : while (1) {
   if (!$$pre$i$i$i6) {
    $157 = 1;
    $80 = 0;
   } else {
    $14 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 34;
      break;
     } else $$0$i$i$i$i4 = $21;
    } else $$0$i$i$i$i4 = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $157 = 1;
     $80 = 0;
    } else {
     $157 = 0;
     $80 = $$pre$i$i$i6;
    }
   }
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 18; else {
    $29 = HEAP32[$26 + 12 >> 2] | 0;
    if (($29 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $36 = invoke_ii(HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] | 0, $26 | 0) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) {
      label = 34;
      break L7;
     } else $$0$i$i1$i$i10 = $36;
    } else $$0$i$i1$i$i10 = HEAP32[$29 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 18;
     break;
    } else if ($157) {
     $158 = $26;
     break;
    } else {
     $$pre$i3$i$i = $26;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 18) {
    label = 0;
    if ($157) {
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$9 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$9 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi34Z2D; else $73 = HEAP32[$$pre$phi36Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $80 + 12 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $82 = $80 + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 34;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $10, $11, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i3$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$79 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] | 0, $80 | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 34;
     break;
    } else {
     $$pre$i$i$i6 = $80;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $94 + 4;
    $$pre$i$i$i6 = $80;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 34) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!($103 & 1)) $110 = ($103 & 255) >>> 1; else $110 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($110 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $114 = HEAP32[$__g_end >> 2] | 0;
   if (($114 - $__g | 0) < 160) {
    $119 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $114 + 4;
    HEAP32[$114 >> 2] = $119;
   }
  }
  __THREW__ = 0;
  $122 = +invoke_diii(2, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $123 = __THREW__;
  __THREW__ = 0;
  if (!($123 & 1)) {
   HEAPF64[$__v >> 3] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$80) {
    $156 = 0;
    $159 = 1;
   } else {
    $128 = HEAP32[$80 + 12 >> 2] | 0;
    if (($128 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $135 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
     $136 = __THREW__;
     __THREW__ = 0;
     if ($136 & 1) break; else $$0$i$i$i$i = $135;
    } else $$0$i$i$i$i = HEAP32[$128 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $156 = 0;
     $159 = 1;
    } else {
     $156 = $80;
     $159 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 63; else {
    $142 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($142 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) break L1; else $$0$i$i1$i$i = $149;
    } else $$0$i$i1$i$i = HEAP32[$142 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 63;
     break;
    }
    if ($159) {
     HEAP32[$agg$result >> 2] = $156;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 63) if (!$159) {
    HEAP32[$agg$result >> 2] = $156;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $156;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $103 = 0, $105 = 0, $109 = 0, $11 = 0, $12 = 0, $120 = 0, $122 = 0, $13 = 0, $142 = 0, $144 = 0, $156 = 0, $158 = 0, $16 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $33 = 0, $4 = 0, $44 = 0, $46 = 0, $5 = 0, $6 = 0, $66 = 0, $68 = 0, $7 = 0, $8 = 0, $80 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 108 | 0;
 $1 = sp + 96 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 80 | 0;
 $4 = sp + 68 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 40 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45240) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  do if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 127]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) {
    $29 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($29);
   } else {
    HEAP32[$__sn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
    HEAP32[$1 + 0 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
    break;
   }
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 127]($2, $12);
   $33 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $33;
   HEAP8[$__pat + 1 >> 0] = $33 >> 8;
   HEAP8[$__pat + 2 >> 0] = $33 >> 16;
   HEAP8[$__pat + 3 >> 0] = $33 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $44 = __THREW__;
   __THREW__ = 0;
   if ($44 & 1) {
    $46 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($46);
   } else {
    HEAP32[$__sn + 0 >> 2] = HEAP32[$3 + 0 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    HEAP32[$3 + 0 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
    break;
   }
  } while (0);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $66 = __THREW__;
  __THREW__ = 0;
  if ($66 & 1) {
   $68 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($68);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 + 0 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $80 = __THREW__;
  __THREW__ = 0;
  if ($80 & 1) {
   $82 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($82);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$5 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$5 + 0 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 } else {
  $88 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45176) | 0;
  $89 = HEAP32[$88 >> 2] | 0;
  do if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$89 + 44 >> 2] & 127]($6, $88);
   $92 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $92;
   HEAP8[$__pat + 1 >> 0] = $92 >> 8;
   HEAP8[$__pat + 2 >> 0] = $92 >> 16;
   HEAP8[$__pat + 3 >> 0] = $92 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 32 >> 2] & 127]($7, $88);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $103 = __THREW__;
   __THREW__ = 0;
   if ($103 & 1) {
    $105 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($105);
   } else {
    HEAP32[$__sn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$7 + 0 >> 2] = 0;
    HEAP32[$7 + 4 >> 2] = 0;
    HEAP32[$7 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
    break;
   }
  } else {
   FUNCTION_TABLE_vii[HEAP32[$89 + 40 >> 2] & 127]($8, $88);
   $109 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $109;
   HEAP8[$__pat + 1 >> 0] = $109 >> 8;
   HEAP8[$__pat + 2 >> 0] = $109 >> 16;
   HEAP8[$__pat + 3 >> 0] = $109 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] & 127]($9, $88);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $120 = __THREW__;
   __THREW__ = 0;
   if ($120 & 1) {
    $122 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($122);
   } else {
    HEAP32[$__sn + 0 >> 2] = HEAP32[$9 + 0 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    HEAP32[$9 + 0 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
    break;
   }
  } while (0);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 12 >> 2] & 127]($88) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 16 >> 2] & 127]($88) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 20 >> 2] & 127]($10, $88);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $142 = __THREW__;
  __THREW__ = 0;
  if ($142 & 1) {
   $144 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($144);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$10 + 0 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  HEAP32[$10 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 24 >> 2] & 127]($11, $88);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $156 = __THREW__;
  __THREW__ = 0;
  if ($156 & 1) {
   $158 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($158);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$11 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  HEAP32[$11 + 0 >> 2] = 0;
  HEAP32[$11 + 4 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] & 127]($88) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i22 = 0, $$0$ph$be = 0, $$0$ph35 = 0, $$0$pn = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$pre$i$i$i13 = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i17 = 0, $$pre$i2$i$i1737 = 0, $$pre$i2$i$i1738 = 0, $$pre36 = 0, $0 = 0, $1 = 0, $10 = 0, $108 = 0, $109 = 0, $110 = 0, $12 = 0, $126 = 0, $133 = 0, $134 = 0, $135 = 0, $148 = 0, $155 = 0, $174 = 0, $175 = 0, $176 = 0, $190 = 0, $2 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $38 = 0, $4 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $63 = 0, $64 = 0, $68 = 0, $70 = 0, $76 = 0, $9 = 0, $93 = 0, $94 = 0, $95 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 20 | 0;
 $$byval_copy = sp + 16 | 0;
 $0 = sp + 12 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $4 = invoke_iii(22, $0 | 0, 45800) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($38 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 HEAP32[$__err >> 2] = 0;
 L4 : do if (($__fmtb | 0) == ($__fmte | 0)) label = 62; else {
  $9 = $4 + 8 | 0;
  $$0$ph35 = $__fmtb;
  $$pre36 = 0;
  L6 : while (1) {
   $10 = $$pre36;
   while (1) {
    if ($10) {
     label = 62;
     break L4;
    }
    $12 = HEAP32[$__b >> 2] | 0;
    if (!$12) $24 = 0; else if ((HEAP32[$12 + 12 >> 2] | 0) == (HEAP32[$12 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $24 = 0;
    } else $24 = $12; else $24 = $12;
    $25 = ($24 | 0) == 0;
    $26 = HEAP32[$__e >> 2] | 0;
    do if (!$26) label = 15; else {
     if ((HEAP32[$26 + 12 >> 2] | 0) == (HEAP32[$26 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 127]($26) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 15;
      break;
     }
     if ($25) $64 = $26; else {
      label = 16;
      break L6;
     }
    } while (0);
    if ((label | 0) == 15) {
     label = 0;
     if ($25) {
      label = 16;
      break L6;
     } else $64 = 0;
    }
    if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$$0$ph35 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
     label = 19;
     break;
    }
    $68 = HEAP8[$$0$ph35 >> 0] | 0;
    if ($68 << 24 >> 24 > -1) {
     $70 = HEAP32[$9 >> 2] | 0;
     if (HEAP16[$70 + ($68 << 24 >> 24 << 1) >> 1] & 8192) {
      $$0$pn = $$0$ph35;
      label = 30;
      break;
     }
    }
    $133 = $24 + 12 | 0;
    $134 = HEAP32[$133 >> 2] | 0;
    $135 = $24 + 16 | 0;
    if (($134 | 0) == (HEAP32[$135 >> 2] | 0)) $$0$i$i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 127]($24) | 0; else $$0$i$i22 = HEAPU8[$134 >> 0] | 0;
    $148 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, $$0$i$i22 & 255) | 0;
    if ($148 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, HEAP8[$$0$ph35 >> 0] | 0) | 0) << 24 >> 24) {
     label = 57;
     break;
    }
    HEAP32[$__err >> 2] = 4;
    $10 = 4;
   }
   L34 : do if ((label | 0) == 19) {
    label = 0;
    $47 = $$0$ph35 + 1 | 0;
    if (($47 | 0) == ($__fmte | 0)) {
     label = 20;
     break L6;
    }
    $53 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$47 >> 0] | 0, 0) | 0;
    if ($53 << 24 >> 24 == 48 | $53 << 24 >> 24 == 69) {
     $54 = $$0$ph35 + 2 | 0;
     if (($54 | 0) == ($__fmte | 0)) {
      label = 23;
      break L6;
     }
     $$1 = $54;
     $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$54 >> 0] | 0, 0) | 0;
     $__opt$0 = $53;
    } else {
     $$1 = $47;
     $__cmd$0 = $53;
     $__opt$0 = 0;
    }
    $63 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
    HEAP32[$2 >> 2] = $24;
    HEAP32[$3 >> 2] = $64;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
    FUNCTION_TABLE_viiiiiiiii[$63 & 3]($1, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0);
    HEAP32[$__b >> 2] = HEAP32[$1 >> 2];
    $$0$ph$be = $$1 + 1 | 0;
   } else if ((label | 0) == 30) {
    while (1) {
     label = 0;
     $$2 = $$0$pn + 1 | 0;
     if (($$2 | 0) == ($__fmte | 0)) {
      $$2$lcssa = $__fmte;
      break;
     }
     $76 = HEAP8[$$2 >> 0] | 0;
     if ($76 << 24 >> 24 <= -1) {
      $$2$lcssa = $$2;
      break;
     }
     if (!(HEAP16[$70 + ($76 << 24 >> 24 << 1) >> 1] & 8192)) {
      $$2$lcssa = $$2;
      break;
     } else {
      $$0$pn = $$2;
      label = 30;
     }
    }
    $$pre$i$i$i13 = $24;
    $$pre$i2$i$i17 = $64;
    $95 = $64;
    while (1) {
     if (!$$pre$i$i$i13) $93 = 0; else if ((HEAP32[$$pre$i$i$i13 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i13 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i13 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i13) | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $93 = 0;
     } else $93 = $$pre$i$i$i13; else $93 = $$pre$i$i$i13;
     $94 = ($93 | 0) == 0;
     do if (!$95) {
      $$pre$i2$i$i1738 = $$pre$i2$i$i17;
      label = 43;
     } else {
      if ((HEAP32[$95 + 12 >> 2] | 0) != (HEAP32[$95 + 16 >> 2] | 0)) if ($94) {
       $$pre$i2$i$i1737 = $$pre$i2$i$i17;
       $190 = $95;
       break;
      } else {
       $$0$ph$be = $$2$lcssa;
       break L34;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] & 127]($95) | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i2$i$i1738 = 0;
       label = 43;
       break;
      } else if ($94 ^ ($$pre$i2$i$i17 | 0) == 0) {
       $$pre$i2$i$i1737 = $$pre$i2$i$i17;
       $190 = $$pre$i2$i$i17;
       break;
      } else {
       $$0$ph$be = $$2$lcssa;
       break L34;
      }
     } while (0);
     if ((label | 0) == 43) {
      label = 0;
      if ($94) {
       $$0$ph$be = $$2$lcssa;
       break L34;
      } else {
       $$pre$i2$i$i1737 = $$pre$i2$i$i1738;
       $190 = 0;
      }
     }
     $108 = $93 + 12 | 0;
     $109 = HEAP32[$108 >> 2] | 0;
     $110 = $93 + 16 | 0;
     if (($109 | 0) == (HEAP32[$110 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0; else $$0$i$i = HEAPU8[$109 >> 0] | 0;
     if (($$0$i$i & 255) << 24 >> 24 <= -1) {
      $$0$ph$be = $$2$lcssa;
      break L34;
     }
     if (!(HEAP16[(HEAP32[$9 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
      $$0$ph$be = $$2$lcssa;
      break L34;
     }
     $126 = HEAP32[$108 >> 2] | 0;
     if (($126 | 0) == (HEAP32[$110 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 40 >> 2] & 127]($93) | 0;
      $$pre$i$i$i13 = $93;
      $$pre$i2$i$i17 = $$pre$i2$i$i1737;
      $95 = $190;
      continue;
     } else {
      HEAP32[$108 >> 2] = $126 + 1;
      $$pre$i$i$i13 = $93;
      $$pre$i2$i$i17 = $$pre$i2$i$i1737;
      $95 = $190;
      continue;
     }
    }
   } else if ((label | 0) == 57) {
    label = 0;
    $155 = HEAP32[$133 >> 2] | 0;
    if (($155 | 0) == (HEAP32[$135 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 40 >> 2] & 127]($24) | 0; else HEAP32[$133 >> 2] = $155 + 1;
    $$0$ph$be = $$0$ph35 + 1 | 0;
   } while (0);
   if (($$0$ph$be | 0) == ($__fmte | 0)) {
    label = 62;
    break L4;
   }
   $$0$ph35 = $$0$ph$be;
   $$pre36 = HEAP32[$__err >> 2] | 0;
  }
  if ((label | 0) == 16) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i4 = $24;
   break;
  } else if ((label | 0) == 20) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i4 = $24;
   break;
  } else if ((label | 0) == 23) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i4 = $24;
   break;
  }
 } while (0);
 if ((label | 0) == 62) $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
 if (!$$pre$i$i$i4) $174 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i4) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $174 = 0;
 } else $174 = $$pre$i$i$i4; else $174 = $$pre$i$i$i4;
 $175 = ($174 | 0) == 0;
 $176 = HEAP32[$__e >> 2] | 0;
 do if (!$176) label = 72; else {
  if ((HEAP32[$176 + 12 >> 2] | 0) == (HEAP32[$176 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$176 >> 2] | 0) + 36 >> 2] & 127]($176) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 72;
   break;
  }
  if ($175) {
   HEAP32[$agg$result >> 2] = $174;
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 72) if (!$175) {
  HEAP32[$agg$result >> 2] = $174;
  STACKTOP = sp;
  return;
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 HEAP32[$agg$result >> 2] = $174;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $131 = 0, $138 = 0, $139 = 0, $14 = 0, $145 = 0, $152 = 0, $153 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $8;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i5) {
    $160 = 1;
    $80 = 0;
   } else {
    $14 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 34;
      break;
     } else $$0$i$i$i$i3 = $21;
    } else $$0$i$i$i$i3 = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $160 = 1;
     $80 = 0;
    } else {
     $160 = 0;
     $80 = $$pre$i$i$i5;
    }
   }
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 18; else {
    $29 = HEAP32[$26 + 12 >> 2] | 0;
    if (($29 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $36 = invoke_ii(HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] | 0, $26 | 0) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) {
      label = 34;
      break L7;
     } else $$0$i$i1$i$i9 = $36;
    } else $$0$i$i1$i$i9 = HEAP32[$29 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 18;
     break;
    } else if ($160) {
     $161 = $26;
     break;
    } else {
     $$pre$i3$i$i = $26;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 18) {
    label = 0;
    if ($160) {
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $161 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi33Z2D; else $73 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $80 + 12 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $82 = $80 + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 34;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i3$i$i = $161;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$79 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] | 0, $80 | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 34;
     break;
    } else {
     $$pre$i$i$i5 = $80;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $80;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 34) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!($103 & 1)) $110 = ($103 & 255) >>> 1; else $110 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($110) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(21, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = tempRet0;
  $122 = __THREW__;
  __THREW__ = 0;
  if (!($122 & 1)) {
   $124 = $__v;
   HEAP32[$124 >> 2] = $120;
   HEAP32[$124 + 4 >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$80) {
    $159 = 0;
    $162 = 1;
   } else {
    $131 = HEAP32[$80 + 12 >> 2] | 0;
    if (($131 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $138 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
     $139 = __THREW__;
     __THREW__ = 0;
     if ($139 & 1) break; else $$0$i$i$i$i = $138;
    } else $$0$i$i$i$i = HEAP32[$131 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $159 = 0;
     $162 = 1;
    } else {
     $159 = $80;
     $162 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 63; else {
    $145 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($145 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $152 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $153 = __THREW__;
     __THREW__ = 0;
     if ($153 & 1) break L1; else $$0$i$i1$i$i = $152;
    } else $$0$i$i1$i$i = HEAP32[$145 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 63;
     break;
    }
    if ($162) {
     HEAP32[$agg$result >> 2] = $159;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 63) if (!$162) {
    HEAP32[$agg$result >> 2] = $159;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $159;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $131 = 0, $138 = 0, $139 = 0, $14 = 0, $145 = 0, $152 = 0, $153 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $8;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i5) {
    $160 = 1;
    $80 = 0;
   } else {
    $14 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 34;
      break;
     } else $$0$i$i$i$i3 = $21;
    } else $$0$i$i$i$i3 = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $160 = 1;
     $80 = 0;
    } else {
     $160 = 0;
     $80 = $$pre$i$i$i5;
    }
   }
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 18; else {
    $29 = HEAP32[$26 + 12 >> 2] | 0;
    if (($29 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $36 = invoke_ii(HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] | 0, $26 | 0) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) {
      label = 34;
      break L7;
     } else $$0$i$i1$i$i9 = $36;
    } else $$0$i$i1$i$i9 = HEAP32[$29 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 18;
     break;
    } else if ($160) {
     $161 = $26;
     break;
    } else {
     $$pre$i3$i$i = $26;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 18) {
    label = 0;
    if ($160) {
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $161 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi33Z2D; else $73 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $80 + 12 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $82 = $80 + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 34;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i3$i$i = $161;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$79 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] | 0, $80 | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 34;
     break;
    } else {
     $$pre$i$i$i5 = $80;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $80;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 34) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!($103 & 1)) $110 = ($103 & 255) >>> 1; else $110 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($110) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(17, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = tempRet0;
  $122 = __THREW__;
  __THREW__ = 0;
  if (!($122 & 1)) {
   $124 = $__v;
   HEAP32[$124 >> 2] = $120;
   HEAP32[$124 + 4 >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$80) {
    $159 = 0;
    $162 = 1;
   } else {
    $131 = HEAP32[$80 + 12 >> 2] | 0;
    if (($131 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $138 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
     $139 = __THREW__;
     __THREW__ = 0;
     if ($139 & 1) break; else $$0$i$i$i$i = $138;
    } else $$0$i$i$i$i = HEAP32[$131 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $159 = 0;
     $162 = 1;
    } else {
     $159 = $80;
     $162 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 63; else {
    $145 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($145 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $152 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $153 = __THREW__;
     __THREW__ = 0;
     if ($153 & 1) break L1; else $$0$i$i1$i$i = $152;
    } else $$0$i$i1$i$i = HEAP32[$145 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 63;
     break;
    }
    if ($162) {
     HEAP32[$agg$result >> 2] = $159;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 63) if (!$162) {
    HEAP32[$agg$result >> 2] = $159;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $159;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $0 = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $115 = 0, $120 = 0, $123 = 0.0, $124 = 0, $136 = 0, $137 = 0, $140 = 0, $141 = 0, $151 = 0, $152 = 0, $158 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 200 | 0;
 $__decimal_point = sp + 199 | 0;
 $__thousands_sep = sp + 198 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 197 | 0;
 $__exp = sp + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($0 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $7 = $__buf + 1 | 0;
   $$pre$phi31Z2D = $7;
   $$pre$phi33Z2D = $__buf + 8 | 0;
   $8 = $7;
  } else {
   $5 = $__buf + 8 | 0;
   $$pre$phi31Z2D = $__buf + 1 | 0;
   $$pre$phi33Z2D = $5;
   $8 = HEAP32[$5 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $8;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $9 = $__buf + 4 | 0;
  $10 = HEAP8[$__decimal_point >> 0] | 0;
  $11 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $8;
  L7 : while (1) {
   if (!$$pre$i$i$i5) $25 = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 33;
     break;
    }
    if (($21 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $25 = 0;
    } else $25 = $$pre$i$i$i5;
   } else $25 = $$pre$i$i$i5;
   $26 = ($25 | 0) == 0;
   $27 = HEAP32[$__e >> 2] | 0;
   do if (!$27) label = 17; else {
    if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) if ($26) {
     $158 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
    __THREW__ = 0;
    $37 = invoke_ii(HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] | 0, $27 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     label = 33;
     break L7;
    }
    if (($37 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($26) {
     $158 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($26) {
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$9 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$9 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi31Z2D; else $73 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $25 + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $25 + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 33;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $10, $11, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i2$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0, $25 | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 33;
     break;
    } else {
     $$pre$i$i$i5 = $25;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i5 = $25;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 33) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!($104 & 1)) $111 = ($104 & 255) >>> 1; else $111 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($111 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $115 = HEAP32[$__g_end >> 2] | 0;
   if (($115 - $__g | 0) < 160) {
    $120 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $115 + 4;
    HEAP32[$115 >> 2] = $120;
   }
  }
  __THREW__ = 0;
  $123 = +invoke_diii(1, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $124 = __THREW__;
  __THREW__ = 0;
  if (!($124 & 1)) {
   HEAPF32[$__v >> 2] = $123;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$25) $140 = 0; else if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $136 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) break;
    if (($136 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $140 = 0;
    } else $140 = $25;
   } else $140 = $25;
   $141 = ($140 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 61; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     if (!$141) break;
     HEAP32[$agg$result >> 2] = $140;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $151 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
    $152 = __THREW__;
    __THREW__ = 0;
    if ($152 & 1) break L1;
    if (($151 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 61;
     break;
    }
    if ($141 ^ ($$pre$i2$i$i | 0) == 0) {
     HEAP32[$agg$result >> 2] = $140;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 61) if (!$141) {
    HEAP32[$agg$result >> 2] = $140;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $140;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $0 = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $115 = 0, $120 = 0, $123 = 0.0, $124 = 0, $136 = 0, $137 = 0, $140 = 0, $141 = 0, $151 = 0, $152 = 0, $158 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 200 | 0;
 $__decimal_point = sp + 199 | 0;
 $__thousands_sep = sp + 198 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 197 | 0;
 $__exp = sp + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($0 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $7 = $__buf + 1 | 0;
   $$pre$phi31Z2D = $7;
   $$pre$phi33Z2D = $__buf + 8 | 0;
   $8 = $7;
  } else {
   $5 = $__buf + 8 | 0;
   $$pre$phi31Z2D = $__buf + 1 | 0;
   $$pre$phi33Z2D = $5;
   $8 = HEAP32[$5 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $8;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $9 = $__buf + 4 | 0;
  $10 = HEAP8[$__decimal_point >> 0] | 0;
  $11 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $8;
  L7 : while (1) {
   if (!$$pre$i$i$i5) $25 = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 33;
     break;
    }
    if (($21 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $25 = 0;
    } else $25 = $$pre$i$i$i5;
   } else $25 = $$pre$i$i$i5;
   $26 = ($25 | 0) == 0;
   $27 = HEAP32[$__e >> 2] | 0;
   do if (!$27) label = 17; else {
    if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) if ($26) {
     $158 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
    __THREW__ = 0;
    $37 = invoke_ii(HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] | 0, $27 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     label = 33;
     break L7;
    }
    if (($37 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($26) {
     $158 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($26) {
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$9 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$9 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi31Z2D; else $73 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $25 + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $25 + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 33;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $10, $11, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i2$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0, $25 | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 33;
     break;
    } else {
     $$pre$i$i$i5 = $25;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i5 = $25;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 33) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!($104 & 1)) $111 = ($104 & 255) >>> 1; else $111 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($111 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $115 = HEAP32[$__g_end >> 2] | 0;
   if (($115 - $__g | 0) < 160) {
    $120 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $115 + 4;
    HEAP32[$115 >> 2] = $120;
   }
  }
  __THREW__ = 0;
  $123 = +invoke_diii(3, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $124 = __THREW__;
  __THREW__ = 0;
  if (!($124 & 1)) {
   HEAPF64[$__v >> 3] = $123;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$25) $140 = 0; else if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $136 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) break;
    if (($136 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $140 = 0;
    } else $140 = $25;
   } else $140 = $25;
   $141 = ($140 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 61; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     if (!$141) break;
     HEAP32[$agg$result >> 2] = $140;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $151 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
    $152 = __THREW__;
    __THREW__ = 0;
    if ($152 & 1) break L1;
    if (($151 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 61;
     break;
    }
    if ($141 ^ ($$pre$i2$i$i | 0) == 0) {
     HEAP32[$agg$result >> 2] = $140;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 61) if (!$141) {
    HEAP32[$agg$result >> 2] = $140;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $140;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $0 = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $115 = 0, $120 = 0, $123 = 0.0, $124 = 0, $136 = 0, $137 = 0, $140 = 0, $141 = 0, $151 = 0, $152 = 0, $158 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $__atoms = sp + 200 | 0;
 $__decimal_point = sp + 199 | 0;
 $__thousands_sep = sp + 198 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $__in_units = sp + 197 | 0;
 $__exp = sp + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($0 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $7 = $__buf + 1 | 0;
   $$pre$phi31Z2D = $7;
   $$pre$phi33Z2D = $__buf + 8 | 0;
   $8 = $7;
  } else {
   $5 = $__buf + 8 | 0;
   $$pre$phi31Z2D = $__buf + 1 | 0;
   $$pre$phi33Z2D = $5;
   $8 = HEAP32[$5 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $8;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $9 = $__buf + 4 | 0;
  $10 = HEAP8[$__decimal_point >> 0] | 0;
  $11 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $8;
  L7 : while (1) {
   if (!$$pre$i$i$i5) $25 = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 33;
     break;
    }
    if (($21 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $25 = 0;
    } else $25 = $$pre$i$i$i5;
   } else $25 = $$pre$i$i$i5;
   $26 = ($25 | 0) == 0;
   $27 = HEAP32[$__e >> 2] | 0;
   do if (!$27) label = 17; else {
    if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) if ($26) {
     $158 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
    __THREW__ = 0;
    $37 = invoke_ii(HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] | 0, $27 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     label = 33;
     break L7;
    }
    if (($37 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($26) {
     $158 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($26) {
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$9 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$9 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi31Z2D; else $73 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $25 + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $25 + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 33;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $10, $11, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i2$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0, $25 | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 33;
     break;
    } else {
     $$pre$i$i$i5 = $25;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i5 = $25;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 33) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!($104 & 1)) $111 = ($104 & 255) >>> 1; else $111 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!(($111 | 0) == 0 | (HEAP8[$__in_units >> 0] | 0) == 0)) {
   $115 = HEAP32[$__g_end >> 2] | 0;
   if (($115 - $__g | 0) < 160) {
    $120 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $115 + 4;
    HEAP32[$115 >> 2] = $120;
   }
  }
  __THREW__ = 0;
  $123 = +invoke_diii(2, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $124 = __THREW__;
  __THREW__ = 0;
  if (!($124 & 1)) {
   HEAPF64[$__v >> 3] = $123;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$25) $140 = 0; else if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $136 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) break;
    if (($136 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $140 = 0;
    } else $140 = $25;
   } else $140 = $25;
   $141 = ($140 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 61; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     if (!$141) break;
     HEAP32[$agg$result >> 2] = $140;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $151 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
    $152 = __THREW__;
    __THREW__ = 0;
    if ($152 & 1) break L1;
    if (($151 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 61;
     break;
    }
    if ($141 ^ ($$pre$i2$i$i | 0) == 0) {
     HEAP32[$agg$result >> 2] = $140;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 61) if (!$141) {
    HEAP32[$agg$result >> 2] = $140;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $140;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $126 = 0, $133 = 0, $134 = 0, $14 = 0, $140 = 0, $147 = 0, $148 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $8;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i5) {
    $155 = 1;
    $80 = 0;
   } else {
    $14 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 34;
      break;
     } else $$0$i$i$i$i3 = $21;
    } else $$0$i$i$i$i3 = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $155 = 1;
     $80 = 0;
    } else {
     $155 = 0;
     $80 = $$pre$i$i$i5;
    }
   }
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 18; else {
    $29 = HEAP32[$26 + 12 >> 2] | 0;
    if (($29 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $36 = invoke_ii(HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] | 0, $26 | 0) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) {
      label = 34;
      break L7;
     } else $$0$i$i1$i$i9 = $36;
    } else $$0$i$i1$i$i9 = HEAP32[$29 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 18;
     break;
    } else if ($155) {
     $156 = $26;
     break;
    } else {
     $$pre$i3$i$i = $26;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 18) {
    label = 0;
    if ($155) {
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi33Z2D; else $73 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $80 + 12 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $82 = $80 + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 34;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i3$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$79 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] | 0, $80 | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 34;
     break;
    } else {
     $$pre$i$i$i5 = $80;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $80;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 34) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!($103 & 1)) $110 = ($103 & 255) >>> 1; else $110 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($110) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(18, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = __THREW__;
  __THREW__ = 0;
  if (!($121 & 1)) {
   HEAP16[$__v >> 1] = $120;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$80) {
    $154 = 0;
    $157 = 1;
   } else {
    $126 = HEAP32[$80 + 12 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $133 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) break; else $$0$i$i$i$i = $133;
    } else $$0$i$i$i$i = HEAP32[$126 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $154 = 0;
     $157 = 1;
    } else {
     $154 = $80;
     $157 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 63; else {
    $140 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($140 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $147 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) break L1; else $$0$i$i1$i$i = $147;
    } else $$0$i$i1$i$i = HEAP32[$140 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 63;
     break;
    }
    if ($157) {
     HEAP32[$agg$result >> 2] = $154;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 63) if (!$157) {
    HEAP32[$agg$result >> 2] = $154;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $154;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $126 = 0, $133 = 0, $134 = 0, $14 = 0, $140 = 0, $147 = 0, $148 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $8;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i5) {
    $155 = 1;
    $80 = 0;
   } else {
    $14 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 34;
      break;
     } else $$0$i$i$i$i3 = $21;
    } else $$0$i$i$i$i3 = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $155 = 1;
     $80 = 0;
    } else {
     $155 = 0;
     $80 = $$pre$i$i$i5;
    }
   }
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 18; else {
    $29 = HEAP32[$26 + 12 >> 2] | 0;
    if (($29 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $36 = invoke_ii(HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] | 0, $26 | 0) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) {
      label = 34;
      break L7;
     } else $$0$i$i1$i$i9 = $36;
    } else $$0$i$i1$i$i9 = HEAP32[$29 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 18;
     break;
    } else if ($155) {
     $156 = $26;
     break;
    } else {
     $$pre$i3$i$i = $26;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 18) {
    label = 0;
    if ($155) {
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi33Z2D; else $73 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $80 + 12 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $82 = $80 + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 34;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i3$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$79 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] | 0, $80 | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 34;
     break;
    } else {
     $$pre$i$i$i5 = $80;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $80;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 34) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!($103 & 1)) $110 = ($103 & 255) >>> 1; else $110 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($110) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(20, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = __THREW__;
  __THREW__ = 0;
  if (!($121 & 1)) {
   HEAP32[$__v >> 2] = $120;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$80) {
    $154 = 0;
    $157 = 1;
   } else {
    $126 = HEAP32[$80 + 12 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $133 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) break; else $$0$i$i$i$i = $133;
    } else $$0$i$i$i$i = HEAP32[$126 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $154 = 0;
     $157 = 1;
    } else {
     $154 = $80;
     $157 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 63; else {
    $140 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($140 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $147 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) break L1; else $$0$i$i1$i$i = $147;
    } else $$0$i$i1$i$i = HEAP32[$140 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 63;
     break;
    }
    if ($157) {
     HEAP32[$agg$result >> 2] = $154;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 63) if (!$157) {
    HEAP32[$agg$result >> 2] = $154;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $154;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $126 = 0, $133 = 0, $134 = 0, $14 = 0, $140 = 0, $147 = 0, $148 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $8;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i5) {
    $155 = 1;
    $80 = 0;
   } else {
    $14 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 34;
      break;
     } else $$0$i$i$i$i3 = $21;
    } else $$0$i$i$i$i3 = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $155 = 1;
     $80 = 0;
    } else {
     $155 = 0;
     $80 = $$pre$i$i$i5;
    }
   }
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 18; else {
    $29 = HEAP32[$26 + 12 >> 2] | 0;
    if (($29 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $36 = invoke_ii(HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] | 0, $26 | 0) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) {
      label = 34;
      break L7;
     } else $$0$i$i1$i$i9 = $36;
    } else $$0$i$i1$i$i9 = HEAP32[$29 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 18;
     break;
    } else if ($155) {
     $156 = $26;
     break;
    } else {
     $$pre$i3$i$i = $26;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 18) {
    label = 0;
    if ($155) {
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi33Z2D; else $73 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $80 + 12 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $82 = $80 + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 34;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i3$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$79 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] | 0, $80 | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 34;
     break;
    } else {
     $$pre$i$i$i5 = $80;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $80;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 34) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!($103 & 1)) $110 = ($103 & 255) >>> 1; else $110 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($110) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(19, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = __THREW__;
  __THREW__ = 0;
  if (!($121 & 1)) {
   HEAP32[$__v >> 2] = $120;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$80) {
    $154 = 0;
    $157 = 1;
   } else {
    $126 = HEAP32[$80 + 12 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $133 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) break; else $$0$i$i$i$i = $133;
    } else $$0$i$i$i$i = HEAP32[$126 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $154 = 0;
     $157 = 1;
    } else {
     $154 = $80;
     $157 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 63; else {
    $140 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($140 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $147 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) break L1; else $$0$i$i1$i$i = $147;
    } else $$0$i$i1$i$i = HEAP32[$140 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 63;
     break;
    }
    if ($157) {
     HEAP32[$agg$result >> 2] = $154;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 63) if (!$157) {
    HEAP32[$agg$result >> 2] = $154;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $154;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $126 = 0, $133 = 0, $134 = 0, $14 = 0, $140 = 0, $147 = 0, $148 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $36 = 0, $37 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 200 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi33Z2D = $8;
   $$pre$phi35Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi33Z2D = $__buf + 1 | 0;
   $$pre$phi35Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i5) {
    $155 = 1;
    $80 = 0;
   } else {
    $14 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($14 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 34;
      break;
     } else $$0$i$i$i$i3 = $21;
    } else $$0$i$i$i$i3 = HEAP32[$14 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $155 = 1;
     $80 = 0;
    } else {
     $155 = 0;
     $80 = $$pre$i$i$i5;
    }
   }
   $26 = HEAP32[$__e >> 2] | 0;
   do if (!$26) label = 18; else {
    $29 = HEAP32[$26 + 12 >> 2] | 0;
    if (($29 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $36 = invoke_ii(HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] | 0, $26 | 0) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) {
      label = 34;
      break L7;
     } else $$0$i$i1$i$i9 = $36;
    } else $$0$i$i1$i$i9 = HEAP32[$29 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 18;
     break;
    } else if ($155) {
     $156 = $26;
     break;
    } else {
     $$pre$i3$i$i = $26;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 18) {
    label = 0;
    if ($155) {
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 34;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi33Z2D; else $73 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $80 + 12 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   $82 = $80 + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 34;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i3$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$79 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] | 0, $80 | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 34;
     break;
    } else {
     $$pre$i$i$i5 = $80;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $80;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 34) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!($103 & 1)) $110 = ($103 & 255) >>> 1; else $110 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($110) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(16, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = __THREW__;
  __THREW__ = 0;
  if (!($121 & 1)) {
   HEAP32[$__v >> 2] = $120;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$80) {
    $154 = 0;
    $157 = 1;
   } else {
    $126 = HEAP32[$80 + 12 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $133 = invoke_ii(HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] | 0, $80 | 0) | 0;
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) break; else $$0$i$i$i$i = $133;
    } else $$0$i$i$i$i = HEAP32[$126 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $154 = 0;
     $157 = 1;
    } else {
     $154 = $80;
     $157 = 0;
    }
   }
   do if (!$$pre$i3$i$i) label = 63; else {
    $140 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($140 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $147 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) break L1; else $$0$i$i1$i$i = $147;
    } else $$0$i$i1$i$i = HEAP32[$140 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 63;
     break;
    }
    if ($157) {
     HEAP32[$agg$result >> 2] = $154;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 63) if (!$157) {
    HEAP32[$agg$result >> 2] = $154;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $154;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $123 = 0, $125 = 0, $139 = 0, $140 = 0, $143 = 0, $144 = 0, $154 = 0, $155 = 0, $161 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $8;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i4) $25 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 33;
     break;
    }
    if (($21 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $25 = 0;
    } else $25 = $$pre$i$i$i4;
   } else $25 = $$pre$i$i$i4;
   $26 = ($25 | 0) == 0;
   $27 = HEAP32[$__e >> 2] | 0;
   do if (!$27) label = 17; else {
    if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) if ($26) {
     $161 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
    __THREW__ = 0;
    $37 = invoke_ii(HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] | 0, $27 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     label = 33;
     break L7;
    }
    if (($37 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($26) {
     $161 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($26) {
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $161 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi30Z2D; else $73 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $25 + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $25 + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 33;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i2$i$i = $161;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0, $25 | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 33;
     break;
    } else {
     $$pre$i$i$i4 = $25;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $25;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 33) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!($104 & 1)) $111 = ($104 & 255) >>> 1; else $111 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($111) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(21, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = tempRet0;
  $123 = __THREW__;
  __THREW__ = 0;
  if (!($123 & 1)) {
   $125 = $__v;
   HEAP32[$125 >> 2] = $121;
   HEAP32[$125 + 4 >> 2] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$25) $143 = 0; else if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $139 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $140 = __THREW__;
    __THREW__ = 0;
    if ($140 & 1) break;
    if (($139 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $143 = 0;
    } else $143 = $25;
   } else $143 = $25;
   $144 = ($143 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 61; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     if (!$144) break;
     HEAP32[$agg$result >> 2] = $143;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $154 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
    $155 = __THREW__;
    __THREW__ = 0;
    if ($155 & 1) break L1;
    if (($154 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 61;
     break;
    }
    if ($144 ^ ($$pre$i2$i$i | 0) == 0) {
     HEAP32[$agg$result >> 2] = $143;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 61) if (!$144) {
    HEAP32[$agg$result >> 2] = $143;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $143;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $123 = 0, $125 = 0, $139 = 0, $140 = 0, $143 = 0, $144 = 0, $154 = 0, $155 = 0, $161 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $8;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i4) $25 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 33;
     break;
    }
    if (($21 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $25 = 0;
    } else $25 = $$pre$i$i$i4;
   } else $25 = $$pre$i$i$i4;
   $26 = ($25 | 0) == 0;
   $27 = HEAP32[$__e >> 2] | 0;
   do if (!$27) label = 17; else {
    if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) if ($26) {
     $161 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
    __THREW__ = 0;
    $37 = invoke_ii(HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] | 0, $27 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     label = 33;
     break L7;
    }
    if (($37 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($26) {
     $161 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($26) {
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $161 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi30Z2D; else $73 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $25 + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $25 + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 33;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i2$i$i = $161;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0, $25 | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 33;
     break;
    } else {
     $$pre$i$i$i4 = $25;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $25;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 33) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!($104 & 1)) $111 = ($104 & 255) >>> 1; else $111 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($111) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(17, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = tempRet0;
  $123 = __THREW__;
  __THREW__ = 0;
  if (!($123 & 1)) {
   $125 = $__v;
   HEAP32[$125 >> 2] = $121;
   HEAP32[$125 + 4 >> 2] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$25) $143 = 0; else if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $139 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $140 = __THREW__;
    __THREW__ = 0;
    if ($140 & 1) break;
    if (($139 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $143 = 0;
    } else $143 = $25;
   } else $143 = $25;
   $144 = ($143 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 61; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     if (!$144) break;
     HEAP32[$agg$result >> 2] = $143;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $154 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
    $155 = __THREW__;
    __THREW__ = 0;
    if ($155 & 1) break L1;
    if (($154 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 61;
     break;
    }
    if ($144 ^ ($$pre$i2$i$i | 0) == 0) {
     HEAP32[$agg$result >> 2] = $143;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 61) if (!$144) {
    HEAP32[$agg$result >> 2] = $143;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $143;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $149 = 0, $150 = 0, $156 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $8;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i4) $25 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 33;
     break;
    }
    if (($21 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $25 = 0;
    } else $25 = $$pre$i$i$i4;
   } else $25 = $$pre$i$i$i4;
   $26 = ($25 | 0) == 0;
   $27 = HEAP32[$__e >> 2] | 0;
   do if (!$27) label = 17; else {
    if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) if ($26) {
     $156 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
    __THREW__ = 0;
    $37 = invoke_ii(HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] | 0, $27 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     label = 33;
     break L7;
    }
    if (($37 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($26) {
     $156 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($26) {
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi30Z2D; else $73 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $25 + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $25 + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 33;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i2$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0, $25 | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 33;
     break;
    } else {
     $$pre$i$i$i4 = $25;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $25;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 33) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!($104 & 1)) $111 = ($104 & 255) >>> 1; else $111 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($111) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(18, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = __THREW__;
  __THREW__ = 0;
  if (!($122 & 1)) {
   HEAP16[$__v >> 1] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$25) $138 = 0; else if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $134 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $135 = __THREW__;
    __THREW__ = 0;
    if ($135 & 1) break;
    if (($134 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $138 = 0;
    } else $138 = $25;
   } else $138 = $25;
   $139 = ($138 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 61; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     if (!$139) break;
     HEAP32[$agg$result >> 2] = $138;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
    $150 = __THREW__;
    __THREW__ = 0;
    if ($150 & 1) break L1;
    if (($149 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 61;
     break;
    }
    if ($139 ^ ($$pre$i2$i$i | 0) == 0) {
     HEAP32[$agg$result >> 2] = $138;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 61) if (!$139) {
    HEAP32[$agg$result >> 2] = $138;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $138;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $149 = 0, $150 = 0, $156 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $8;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i4) $25 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 33;
     break;
    }
    if (($21 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $25 = 0;
    } else $25 = $$pre$i$i$i4;
   } else $25 = $$pre$i$i$i4;
   $26 = ($25 | 0) == 0;
   $27 = HEAP32[$__e >> 2] | 0;
   do if (!$27) label = 17; else {
    if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) if ($26) {
     $156 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
    __THREW__ = 0;
    $37 = invoke_ii(HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] | 0, $27 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     label = 33;
     break L7;
    }
    if (($37 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($26) {
     $156 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($26) {
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi30Z2D; else $73 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $25 + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $25 + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 33;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i2$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0, $25 | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 33;
     break;
    } else {
     $$pre$i$i$i4 = $25;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $25;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 33) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!($104 & 1)) $111 = ($104 & 255) >>> 1; else $111 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($111) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(20, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = __THREW__;
  __THREW__ = 0;
  if (!($122 & 1)) {
   HEAP32[$__v >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$25) $138 = 0; else if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $134 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $135 = __THREW__;
    __THREW__ = 0;
    if ($135 & 1) break;
    if (($134 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $138 = 0;
    } else $138 = $25;
   } else $138 = $25;
   $139 = ($138 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 61; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     if (!$139) break;
     HEAP32[$agg$result >> 2] = $138;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
    $150 = __THREW__;
    __THREW__ = 0;
    if ($150 & 1) break L1;
    if (($149 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 61;
     break;
    }
    if ($139 ^ ($$pre$i2$i$i | 0) == 0) {
     HEAP32[$agg$result >> 2] = $138;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 61) if (!$139) {
    HEAP32[$agg$result >> 2] = $138;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $138;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $149 = 0, $150 = 0, $156 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $8;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i4) $25 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 33;
     break;
    }
    if (($21 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $25 = 0;
    } else $25 = $$pre$i$i$i4;
   } else $25 = $$pre$i$i$i4;
   $26 = ($25 | 0) == 0;
   $27 = HEAP32[$__e >> 2] | 0;
   do if (!$27) label = 17; else {
    if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) if ($26) {
     $156 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
    __THREW__ = 0;
    $37 = invoke_ii(HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] | 0, $27 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     label = 33;
     break L7;
    }
    if (($37 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($26) {
     $156 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($26) {
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi30Z2D; else $73 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $25 + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $25 + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 33;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i2$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0, $25 | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 33;
     break;
    } else {
     $$pre$i$i$i4 = $25;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $25;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 33) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!($104 & 1)) $111 = ($104 & 255) >>> 1; else $111 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($111) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(19, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = __THREW__;
  __THREW__ = 0;
  if (!($122 & 1)) {
   HEAP32[$__v >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$25) $138 = 0; else if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $134 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $135 = __THREW__;
    __THREW__ = 0;
    if ($135 & 1) break;
    if (($134 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $138 = 0;
    } else $138 = $25;
   } else $138 = $25;
   $139 = ($138 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 61; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     if (!$139) break;
     HEAP32[$agg$result >> 2] = $138;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
    $150 = __THREW__;
    __THREW__ = 0;
    if ($150 & 1) break L1;
    if (($149 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 61;
     break;
    }
    if ($139 ^ ($$pre$i2$i$i | 0) == 0) {
     HEAP32[$agg$result >> 2] = $138;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 61) if (!$139) {
    HEAP32[$agg$result >> 2] = $138;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $138;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $149 = 0, $150 = 0, $156 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 184 | 0;
 $__buf = sp + 172 | 0;
 $__a_end = sp + 168 | 0;
 $__g = sp + 8 | 0;
 $__g_end = sp + 4 | 0;
 $__dc = sp;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf + 0 >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, 10, 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($1 & 1)) {
  if (!(HEAP8[$__buf >> 0] & 1)) {
   $8 = $__buf + 1 | 0;
   $$pre$phi30Z2D = $8;
   $$pre$phi32Z2D = $__buf + 8 | 0;
   $9 = $8;
  } else {
   $6 = $__buf + 8 | 0;
   $$pre$phi30Z2D = $__buf + 1 | 0;
   $$pre$phi32Z2D = $6;
   $9 = HEAP32[$6 >> 2] | 0;
  }
  HEAP32[$__a_end >> 2] = $9;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $10 = $__buf + 4 | 0;
  $11 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $9;
  L7 : while (1) {
   if (!$$pre$i$i$i4) $25 = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $21 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 33;
     break;
    }
    if (($21 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $25 = 0;
    } else $25 = $$pre$i$i$i4;
   } else $25 = $$pre$i$i$i4;
   $26 = ($25 | 0) == 0;
   $27 = HEAP32[$__e >> 2] | 0;
   do if (!$27) label = 17; else {
    if ((HEAP32[$27 + 12 >> 2] | 0) != (HEAP32[$27 + 16 >> 2] | 0)) if ($26) {
     $156 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
    __THREW__ = 0;
    $37 = invoke_ii(HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] | 0, $27 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     label = 33;
     break L7;
    }
    if (($37 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($26) {
     $156 = $27;
     break;
    } else {
     $$pre$i2$i$i = $27;
     $__a$2 = $__a$0;
     break L7;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($26) {
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $42 = HEAP8[$__buf >> 0] | 0;
   $44 = ($42 & 1) == 0;
   if ($44) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$10 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $49 | 0)) {
    if ($44) {
     $57 = ($42 & 255) >>> 1;
     $74 = ($42 & 255) >>> 1;
    } else {
     $51 = HEAP32[$10 >> 2] | 0;
     $57 = $51;
     $74 = $51;
    }
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $57 << 1 | 0, 0);
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $65 = 10; else $65 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $65 | 0, 0);
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) {
     label = 33;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $73 = $$pre$phi30Z2D; else $73 = HEAP32[$$pre$phi32Z2D >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $74;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $25 + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $25 + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 33;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $11, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i2$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 40 >> 2] | 0, $25 | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 33;
     break;
    } else {
     $$pre$i$i$i4 = $25;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $25;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 33) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   ___resumeException($lpad$phi$index | 0);
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!($104 & 1)) $111 = ($104 & 255) >>> 1; else $111 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($111) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(16, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = __THREW__;
  __THREW__ = 0;
  if (!($122 & 1)) {
   HEAP32[$__v >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$25) $138 = 0; else if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $134 = invoke_ii(HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] | 0, $25 | 0) | 0;
    $135 = __THREW__;
    __THREW__ = 0;
    if ($135 & 1) break;
    if (($134 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $138 = 0;
    } else $138 = $25;
   } else $138 = $25;
   $139 = ($138 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 61; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) != (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     if (!$139) break;
     HEAP32[$agg$result >> 2] = $138;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
    $150 = __THREW__;
    __THREW__ = 0;
    if ($150 & 1) break L1;
    if (($149 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 61;
     break;
    }
    if ($139 ^ ($$pre$i2$i$i | 0) == 0) {
     HEAP32[$agg$result >> 2] = $138;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 61) if (!$139) {
    HEAP32[$agg$result >> 2] = $138;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    STACKTOP = sp;
    return;
   }
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   HEAP32[$agg$result >> 2] = $138;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 $77 = ___cxa_find_matching_catch() | 0;
 $lpad$phi$index = $77;
 $lpad$phi$index2 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__z) {
 $__root = $__root | 0;
 $__z = $__z | 0;
 var $$0 = 0, $$0$i$i = 0, $$1 = 0, $$2 = 0, $$2$be = 0, $$4 = 0, $$6 = 0, $$lcssa18 = 0, $$ph = 0, $$pre$phiZ2D = 0, $$pre24 = 0, $0 = 0, $10 = 0, $102 = 0, $103 = 0, $106 = 0, $109 = 0, $11 = 0, $114 = 0, $115 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $125 = 0, $128 = 0, $133 = 0, $134 = 0, $137 = 0, $139 = 0, $14 = 0, $145 = 0, $146 = 0, $15 = 0, $151 = 0, $158 = 0, $159 = 0, $16 = 0, $164 = 0, $171 = 0, $172 = 0, $175 = 0, $178 = 0, $18 = 0, $181 = 0, $186 = 0, $187 = 0, $19 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $197 = 0, $200 = 0, $204 = 0, $205 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $34 = 0, $35 = 0, $38 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $63 = 0, $67 = 0, $71 = 0, $77 = 0, $8 = 0, $84 = 0, $91 = 0, $97 = 0, $__w$0 = 0, $__w$1 = 0, $__w$1$be$in = 0, $__w$2 = 0, $__w$3 = 0, $__w$4 = 0, $__w$5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__z >> 2] | 0;
 do if (!$0) {
  $$ph = $__z;
  label = 5;
 } else {
  $3 = HEAP32[$__z + 4 >> 2] | 0;
  if (!$3) {
   $11 = $__z;
   $14 = $0;
   $204 = $__z;
   label = 7;
   break;
  } else {
   $$0$i$i = $3;
   while (1) {
    $5 = HEAP32[$$0$i$i >> 2] | 0;
    if (!$5) {
     $$ph = $$0$i$i;
     label = 5;
     break;
    } else $$0$i$i = $5;
   }
  }
 } while (0);
 if ((label | 0) == 5) {
  $8 = HEAP32[$$ph + 4 >> 2] | 0;
  if (!$8) {
   $$pre$phiZ2D = $$ph + 8 | 0;
   $18 = $$ph;
   $19 = 0;
   $205 = 0;
   $35 = $$ph;
  } else {
   $11 = $$ph;
   $14 = $8;
   $204 = $$ph;
   label = 7;
  }
 }
 if ((label | 0) == 7) {
  $10 = $11 + 8 | 0;
  HEAP32[$14 + 8 >> 2] = HEAP32[$10 >> 2];
  $$pre$phiZ2D = $10;
  $18 = $11;
  $19 = $14;
  $205 = 1;
  $35 = $204;
 }
 $15 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) == ($18 | 0)) {
  HEAP32[$15 >> 2] = $19;
  if (($18 | 0) == ($__root | 0)) {
   $$0 = $19;
   $__w$0 = 0;
  } else {
   $$0 = $__root;
   $__w$0 = HEAP32[$15 + 4 >> 2] | 0;
  }
 } else {
  HEAP32[$15 + 4 >> 2] = $19;
  $$0 = $__root;
  $__w$0 = $16;
 }
 $24 = $18 + 12 | 0;
 $26 = (HEAP8[$24 >> 0] | 0) != 0;
 if (($18 | 0) == ($__z | 0)) $$1 = $$0; else {
  $28 = $__z + 8 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  HEAP32[$$pre$phiZ2D >> 2] = $29;
  if ((HEAP32[HEAP32[$28 >> 2] >> 2] | 0) == ($__z | 0)) HEAP32[$29 >> 2] = $18; else HEAP32[$29 + 4 >> 2] = $18;
  $34 = HEAP32[$__z >> 2] | 0;
  HEAP32[$35 >> 2] = $34;
  HEAP32[$34 + 8 >> 2] = $18;
  $38 = HEAP32[$__z + 4 >> 2] | 0;
  HEAP32[$18 + 4 >> 2] = $38;
  if ($38) HEAP32[$38 + 8 >> 2] = $18;
  HEAP8[$24 >> 0] = HEAP8[$__z + 12 >> 0] | 0;
  $$1 = ($$0 | 0) == ($__z | 0) ? $18 : $$0;
 }
 if (!($26 & ($$1 | 0) != 0)) {
  STACKTOP = sp;
  return;
 }
 if ($205) {
  HEAP8[$19 + 12 >> 0] = 1;
  STACKTOP = sp;
  return;
 } else {
  $$2 = $$1;
  $__w$1 = $__w$0;
 }
 while (1) {
  $47 = $__w$1 + 8 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  $51 = $__w$1 + 12 | 0;
  $53 = (HEAP8[$51 >> 0] | 0) != 0;
  if ((HEAP32[$48 >> 2] | 0) == ($__w$1 | 0)) {
   if ($53) {
    $$6 = $$2;
    $__w$4 = $__w$1;
   } else {
    HEAP8[$51 >> 0] = 1;
    HEAP8[$48 + 12 >> 0] = 0;
    $133 = $__w$1 + 4 | 0;
    $134 = HEAP32[$133 >> 2] | 0;
    HEAP32[$48 >> 2] = $134;
    if ($134) HEAP32[$134 + 8 >> 2] = $48;
    $137 = $48 + 8 | 0;
    HEAP32[$47 >> 2] = HEAP32[$137 >> 2];
    $139 = HEAP32[$137 >> 2] | 0;
    if ((HEAP32[$139 >> 2] | 0) == ($48 | 0)) HEAP32[$139 >> 2] = $__w$1; else HEAP32[$139 + 4 >> 2] = $__w$1;
    HEAP32[$133 >> 2] = $48;
    HEAP32[$137 >> 2] = $__w$1;
    $$6 = ($$2 | 0) == ($48 | 0) ? $__w$1 : $$2;
    $__w$4 = HEAP32[$48 >> 2] | 0;
   }
   $145 = HEAP32[$__w$4 >> 2] | 0;
   $146 = ($145 | 0) == 0;
   if (!$146) if (!(HEAP8[$145 + 12 >> 0] | 0)) {
    label = 68;
    break;
   }
   $151 = HEAP32[$__w$4 + 4 >> 2] | 0;
   if ($151) if (!(HEAP8[$151 + 12 >> 0] | 0)) {
    label = 67;
    break;
   }
   HEAP8[$__w$4 + 12 >> 0] = 0;
   $158 = HEAP32[$__w$4 + 8 >> 2] | 0;
   $159 = $158 + 12 | 0;
   if ((HEAP8[$159 >> 0] | 0) == 0 | ($158 | 0) == ($$6 | 0)) {
    label = 64;
    break;
   }
   $164 = HEAP32[$158 + 8 >> 2] | 0;
   $$2$be = $$6;
   $__w$1$be$in = (HEAP32[$164 >> 2] | 0) == ($158 | 0) ? $164 + 4 | 0 : $164;
  } else {
   if ($53) {
    $$4 = $$2;
    $__w$2 = $__w$1;
   } else {
    HEAP8[$51 >> 0] = 1;
    HEAP8[$48 + 12 >> 0] = 0;
    $55 = $48 + 4 | 0;
    $56 = HEAP32[$55 >> 2] | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    HEAP32[$55 >> 2] = $57;
    if ($57) HEAP32[$57 + 8 >> 2] = $48;
    $60 = $48 + 8 | 0;
    HEAP32[$56 + 8 >> 2] = HEAP32[$60 >> 2];
    $63 = HEAP32[$60 >> 2] | 0;
    if ((HEAP32[$63 >> 2] | 0) == ($48 | 0)) HEAP32[$63 >> 2] = $56; else HEAP32[$63 + 4 >> 2] = $56;
    HEAP32[$56 >> 2] = $48;
    HEAP32[$60 >> 2] = $56;
    $67 = HEAP32[$__w$1 >> 2] | 0;
    $$4 = ($$2 | 0) == ($67 | 0) ? $__w$1 : $$2;
    $__w$2 = HEAP32[$67 + 4 >> 2] | 0;
   }
   $71 = HEAP32[$__w$2 >> 2] | 0;
   if ($71) if (!(HEAP8[$71 + 12 >> 0] | 0)) {
    label = 38;
    break;
   }
   $77 = HEAP32[$__w$2 + 4 >> 2] | 0;
   if ($77) if (!(HEAP8[$77 + 12 >> 0] | 0)) {
    $97 = $77;
    label = 39;
    break;
   }
   HEAP8[$__w$2 + 12 >> 0] = 0;
   $84 = HEAP32[$__w$2 + 8 >> 2] | 0;
   if (($84 | 0) == ($$4 | 0)) {
    $$lcssa18 = $$4;
    label = 36;
    break;
   }
   if (!(HEAP8[$84 + 12 >> 0] | 0)) {
    $$lcssa18 = $84;
    label = 36;
    break;
   }
   $91 = HEAP32[$84 + 8 >> 2] | 0;
   $$2$be = $$4;
   $__w$1$be$in = (HEAP32[$91 >> 2] | 0) == ($84 | 0) ? $91 + 4 | 0 : $91;
  }
  $$2 = $$2$be;
  $__w$1 = HEAP32[$__w$1$be$in >> 2] | 0;
 }
 if ((label | 0) == 36) {
  HEAP8[$$lcssa18 + 12 >> 0] = 1;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 38) {
  $$pre24 = HEAP32[$__w$2 + 4 >> 2] | 0;
  if (!$$pre24) label = 40; else {
   $97 = $$pre24;
   label = 39;
  }
 } else if ((label | 0) == 64) {
  HEAP8[$159 >> 0] = 1;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 67) if ($146) label = 69; else label = 68;
 if ((label | 0) == 39) if (!(HEAP8[$97 + 12 >> 0] | 0)) {
  $119 = $97;
  $__w$3 = $__w$2;
  label = 46;
 } else label = 40; else if ((label | 0) == 68) if (!(HEAP8[$145 + 12 >> 0] | 0)) {
  $191 = $145;
  $__w$5 = $__w$4;
  label = 75;
 } else label = 69;
 if ((label | 0) == 40) {
  HEAP8[$71 + 12 >> 0] = 1;
  HEAP8[$__w$2 + 12 >> 0] = 0;
  $102 = $71 + 4 | 0;
  $103 = HEAP32[$102 >> 2] | 0;
  HEAP32[$__w$2 >> 2] = $103;
  if ($103) HEAP32[$103 + 8 >> 2] = $__w$2;
  $106 = $__w$2 + 8 | 0;
  HEAP32[$71 + 8 >> 2] = HEAP32[$106 >> 2];
  $109 = HEAP32[$106 >> 2] | 0;
  if ((HEAP32[$109 >> 2] | 0) == ($__w$2 | 0)) HEAP32[$109 >> 2] = $71; else HEAP32[$109 + 4 >> 2] = $71;
  HEAP32[$102 >> 2] = $__w$2;
  HEAP32[$106 >> 2] = $71;
  $119 = $__w$2;
  $__w$3 = $71;
  label = 46;
 } else if ((label | 0) == 69) {
  $171 = $__w$4 + 4 | 0;
  $172 = HEAP32[$171 >> 2] | 0;
  HEAP8[$172 + 12 >> 0] = 1;
  HEAP8[$__w$4 + 12 >> 0] = 0;
  $175 = HEAP32[$172 >> 2] | 0;
  HEAP32[$171 >> 2] = $175;
  if ($175) HEAP32[$175 + 8 >> 2] = $__w$4;
  $178 = $__w$4 + 8 | 0;
  HEAP32[$172 + 8 >> 2] = HEAP32[$178 >> 2];
  $181 = HEAP32[$178 >> 2] | 0;
  if ((HEAP32[$181 >> 2] | 0) == ($__w$4 | 0)) HEAP32[$181 >> 2] = $172; else HEAP32[$181 + 4 >> 2] = $172;
  HEAP32[$172 >> 2] = $__w$4;
  HEAP32[$178 >> 2] = $172;
  $191 = $__w$4;
  $__w$5 = $172;
  label = 75;
 }
 if ((label | 0) == 46) {
  $114 = HEAP32[$__w$3 + 8 >> 2] | 0;
  $115 = $114 + 12 | 0;
  HEAP8[$__w$3 + 12 >> 0] = HEAP8[$115 >> 0] | 0;
  HEAP8[$115 >> 0] = 1;
  HEAP8[$119 + 12 >> 0] = 1;
  $120 = $114 + 4 | 0;
  $121 = HEAP32[$120 >> 2] | 0;
  $122 = HEAP32[$121 >> 2] | 0;
  HEAP32[$120 >> 2] = $122;
  if ($122) HEAP32[$122 + 8 >> 2] = $114;
  $125 = $114 + 8 | 0;
  HEAP32[$121 + 8 >> 2] = HEAP32[$125 >> 2];
  $128 = HEAP32[$125 >> 2] | 0;
  if ((HEAP32[$128 >> 2] | 0) == ($114 | 0)) HEAP32[$128 >> 2] = $121; else HEAP32[$128 + 4 >> 2] = $121;
  HEAP32[$121 >> 2] = $114;
  HEAP32[$125 >> 2] = $121;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 75) {
  $186 = HEAP32[$__w$5 + 8 >> 2] | 0;
  $187 = $186 + 12 | 0;
  HEAP8[$__w$5 + 12 >> 0] = HEAP8[$187 >> 0] | 0;
  HEAP8[$187 >> 0] = 1;
  HEAP8[$191 + 12 >> 0] = 1;
  $192 = HEAP32[$186 >> 2] | 0;
  $193 = $192 + 4 | 0;
  $194 = HEAP32[$193 >> 2] | 0;
  HEAP32[$186 >> 2] = $194;
  if ($194) HEAP32[$194 + 8 >> 2] = $186;
  $197 = $186 + 8 | 0;
  HEAP32[$192 + 8 >> 2] = HEAP32[$197 >> 2];
  $200 = HEAP32[$197 >> 2] | 0;
  if ((HEAP32[$200 >> 2] | 0) == ($186 | 0)) HEAP32[$200 >> 2] = $192; else HEAP32[$200 + 4 >> 2] = $192;
  HEAP32[$193 >> 2] = $186;
  HEAP32[$197 >> 2] = $192;
  STACKTOP = sp;
  return;
 }
}

function __ZN12_GLOBAL__N_16Parser19parseIdentifierListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj($agg$result, $this, $element_kind, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $element_kind = $element_kind | 0;
 $obj_level = $obj_level | 0;
 var $$0$i = 0, $$01 = 0, $$01$i = 0, $$022 = 0, $$0321 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $43 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $59 = 0, $60 = 0, $61 = 0, $63 = 0, $65 = 0, $67 = 0, $69 = 0, $70 = 0, $72 = 0, $73 = 0, $79 = 0, $80 = 0, $84 = 0, $86 = 0, $9 = 0, $92 = 0, $94 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $exprs = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $0 = sp + 216 | 0;
 $exprs = sp + 204 | 0;
 $1 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $2 = sp;
 HEAP32[$exprs >> 2] = 0;
 $3 = $exprs + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$exprs + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viiiii(4, $1 | 0, $this | 0, $exprs | 0, $element_kind | 0, $obj_level | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($5 & 1) {
  $17 = ___cxa_find_matching_catch() | 0;
  $$3 = $17;
  $$36 = tempRet0;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1 + 16 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1 + 4 | 0);
  HEAP32[$agg$result >> 2] = 0;
  $9 = $agg$result + 4 | 0;
  HEAP32[$9 >> 2] = 0;
  $10 = $agg$result + 8 | 0;
  HEAP32[$10 >> 2] = 0;
  $11 = HEAP32[$exprs >> 2] | 0;
  $12 = HEAP32[$3 >> 2] | 0;
  L4 : do if (($11 | 0) == ($12 | 0)) $84 = $11; else {
   $15 = $11;
   while (1) {
    $14 = HEAP32[$15 >> 2] | 0;
    if (!$14) {
     $$lcssa = 0;
     label = 6;
     break;
    }
    $19 = ___dynamic_cast($14, 34e3, 35104, 0) | 0;
    if (!$19) {
     $$lcssa = $14;
     label = 6;
     break;
    }
    $72 = $19 + 48 | 0;
    $73 = HEAP32[$9 >> 2] | 0;
    if (($73 | 0) == (HEAP32[$10 >> 2] | 0)) {
     __THREW__ = 0;
     invoke_vii(55, $agg$result | 0, $72 | 0);
     $80 = __THREW__;
     __THREW__ = 0;
     if ($80 & 1) {
      label = 21;
      break;
     }
    } else {
     if (!$73) $79 = 0; else {
      HEAP32[$73 >> 2] = HEAP32[$72 >> 2];
      $79 = HEAP32[$9 >> 2] | 0;
     }
     HEAP32[$9 >> 2] = $79 + 4;
    }
    $15 = $15 + 4 | 0;
    if (($15 | 0) == ($12 | 0)) {
     label = 34;
     break;
    }
   }
   L16 : do if ((label | 0) == 6) {
    $21 = $ss + 64 | 0;
    $22 = $ss + 8 | 0;
    HEAP32[$22 >> 2] = 792;
    $23 = $ss + 12 | 0;
    HEAP32[$ss >> 2] = 940;
    HEAP32[$21 >> 2] = 960;
    HEAP32[$ss + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss + 64 | 0, $23 | 0);
    $26 = __THREW__;
    __THREW__ = 0;
    if ($26 & 1) {
     $38 = ___cxa_find_matching_catch() | 0;
     $$0$i = tempRet0;
     $$01$i = $38;
    } else {
     HEAP32[$ss + 136 >> 2] = 0;
     HEAP32[$ss + 140 >> 2] = -1;
     HEAP32[$ss >> 2] = 772;
     HEAP32[$21 >> 2] = 812;
     HEAP32[$22 >> 2] = 792;
     __THREW__ = 0;
     invoke_vi(179, $23 | 0);
     $30 = __THREW__;
     __THREW__ = 0;
     do if ($30 & 1) {
      $40 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index2Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $40;
     } else {
      HEAP32[$23 >> 2] = 1104;
      $32 = $ss + 44 | 0;
      HEAP32[$32 + 0 >> 2] = 0;
      HEAP32[$32 + 4 >> 2] = 0;
      HEAP32[$32 + 8 >> 2] = 0;
      HEAP32[$32 + 12 >> 2] = 0;
      HEAP32[$ss + 60 >> 2] = 24;
      HEAP32[$0 + 0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $23 | 0, $0 | 0);
      $34 = __THREW__;
      __THREW__ = 0;
      if ($34 & 1) {
       $36 = ___cxa_find_matching_catch() | 0;
       $37 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($32);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($23);
       $eh$lpad$body$i$index2Z2D = $37;
       $eh$lpad$body$i$indexZ2D = $36;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
      __THREW__ = 0;
      $43 = invoke_iiii(25, $ss + 8 | 0, 35784, 19) | 0;
      $44 = __THREW__;
      __THREW__ = 0;
      L28 : do if ($44 & 1) label = 23; else {
       __THREW__ = 0;
       invoke_iii(28, $43 | 0, $$lcssa | 0) | 0;
       $46 = __THREW__;
       __THREW__ = 0;
       if ($46 & 1) label = 23; else {
        $48 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_vii(43, $2 | 0, $23 | 0);
        $49 = __THREW__;
        __THREW__ = 0;
        do if ($49 & 1) {
         $67 = ___cxa_find_matching_catch() | 0;
         $$022 = $67;
         $$0321 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $48 | 0, $$lcssa + 4 | 0);
         $52 = __THREW__;
         __THREW__ = 0;
         if ($52 & 1) $$01 = 1; else {
          $54 = $48 + 12 | 0;
          $55 = $$lcssa + 16 | 0;
          HEAP32[$54 + 0 >> 2] = HEAP32[$55 + 0 >> 2];
          HEAP32[$54 + 4 >> 2] = HEAP32[$55 + 4 >> 2];
          HEAP32[$54 + 8 >> 2] = HEAP32[$55 + 8 >> 2];
          HEAP32[$54 + 12 >> 2] = HEAP32[$55 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $48 + 28 | 0, $2 | 0);
          $57 = __THREW__;
          __THREW__ = 0;
          if ($57 & 1) {
           $59 = ___cxa_find_matching_catch() | 0;
           $60 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($48);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
           $$022 = $59;
           $$0321 = $60;
           break;
          }
          __THREW__ = 0;
          invoke_viii(4, $48 | 0, 48, 178);
          $61 = __THREW__;
          __THREW__ = 0;
          if ($61 & 1) $$01 = 0; else {}
         }
         $69 = ___cxa_find_matching_catch() | 0;
         $70 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
         if ($$01) {
          $$022 = $69;
          $$0321 = $70;
         } else {
          $$1 = $69;
          $$14 = $70;
          break L28;
         }
        } while (0);
        ___cxa_free_exception($48 | 0);
        $$1 = $$022;
        $$14 = $$0321;
       }
      } while (0);
      if ((label | 0) == 23) {
       $65 = ___cxa_find_matching_catch() | 0;
       $$1 = $65;
       $$14 = tempRet0;
      }
      HEAP32[$ss >> 2] = 772;
      HEAP32[$ss + 64 >> 2] = 812;
      HEAP32[$22 >> 2] = 792;
      HEAP32[$23 >> 2] = 1104;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($32);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($23);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($21);
      $$2 = $$1;
      $$25 = $$14;
      break L16;
     } while (0);
     $$0$i = $eh$lpad$body$i$index2Z2D;
     $$01$i = $eh$lpad$body$i$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($21);
    $eh$lpad$body$index7Z2D = $$0$i;
    $eh$lpad$body$indexZ2D = $$01$i;
    label = 22;
   } else if ((label | 0) == 21) {
    $63 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index7Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $63;
    label = 22;
   } else if ((label | 0) == 34) {
    $84 = HEAP32[$exprs >> 2] | 0;
    break L4;
   } while (0);
   if ((label | 0) == 22) {
    $$2 = $eh$lpad$body$indexZ2D;
    $$25 = $eh$lpad$body$index7Z2D;
   }
   $92 = HEAP32[$agg$result >> 2] | 0;
   if (!$92) {
    $$3 = $$2;
    $$36 = $$25;
    break L1;
   }
   $94 = HEAP32[$9 >> 2] | 0;
   if (($94 | 0) != ($92 | 0)) HEAP32[$9 >> 2] = $94 + (~(($94 + -4 - $92 | 0) >>> 2) << 2);
   __ZdlPv($92);
   $$3 = $$2;
   $$36 = $$25;
   break L1;
  } while (0);
  if (!$84) {
   STACKTOP = sp;
   return;
  }
  $86 = HEAP32[$3 >> 2] | 0;
  if (($86 | 0) != ($84 | 0)) HEAP32[$3 >> 2] = $86 + (~(($86 + -4 - $84 | 0) >>> 2) << 2);
  __ZdlPv($84);
  STACKTOP = sp;
  return;
 } while (0);
 $100 = HEAP32[$exprs >> 2] | 0;
 if (!$100) ___resumeException($$3 | 0);
 $102 = HEAP32[$3 >> 2] | 0;
 if (($102 | 0) != ($100 | 0)) HEAP32[$3 >> 2] = $102 + (~(($102 + -4 - $100 | 0) >>> 2) << 2);
 __ZdlPv($100);
 ___resumeException($$3 | 0);
}

function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $112 = 0, $114 = 0, $134 = 0, $136 = 0, $14 = 0, $148 = 0, $150 = 0, $2 = 0, $25 = 0, $27 = 0, $3 = 0, $39 = 0, $4 = 0, $41 = 0, $5 = 0, $6 = 0, $61 = 0, $63 = 0, $7 = 0, $75 = 0, $77 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, $98 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 100 | 0;
 $1 = sp + 88 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 52 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45368) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 127]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 127]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP32[$__nsn + 4 >> 2] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(76, $__nsn | 0, 0);
  $25 = __THREW__;
  __THREW__ = 0;
  if ($25 & 1) {
   $27 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($27);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 + 0 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP32[$__psn + 4 >> 2] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(76, $__psn | 0, 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if ($39 & 1) {
   $41 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($41);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  HEAP32[$2 + 0 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($2);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $61 = __THREW__;
  __THREW__ = 0;
  if ($61 & 1) {
   $63 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($63);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$3 + 0 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 127]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $75 = __THREW__;
  __THREW__ = 0;
  if ($75 & 1) {
   $77 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($77);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 + 0 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($4);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 } else {
  $83 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45304) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 44 >> 2] & 127]($5, $83);
  $87 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $87;
  HEAP8[$__pat + 1 >> 0] = $87 >> 8;
  HEAP8[$__pat + 2 >> 0] = $87 >> 16;
  HEAP8[$__pat + 3 >> 0] = $87 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 32 >> 2] & 127]($6, $83);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP32[$__nsn + 4 >> 2] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(76, $__nsn | 0, 0);
  $98 = __THREW__;
  __THREW__ = 0;
  if ($98 & 1) {
   $100 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($100);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$6 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  HEAP32[$6 + 0 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 28 >> 2] & 127]($7, $83);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP32[$__psn + 4 >> 2] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(76, $__psn | 0, 0);
  $112 = __THREW__;
  __THREW__ = 0;
  if ($112 & 1) {
   $114 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($114);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$7 + 0 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($7);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 12 >> 2] & 127]($83) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 16 >> 2] & 127]($83) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 20 >> 2] & 127]($8, $83);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $134 = __THREW__;
  __THREW__ = 0;
  if ($134 & 1) {
   $136 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($136);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$8 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  HEAP32[$8 + 0 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 24 >> 2] & 127]($9, $83);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP32[$__sym + 4 >> 2] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(76, $__sym | 0, 0);
  $148 = __THREW__;
  __THREW__ = 0;
  if ($148 & 1) {
   $150 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($150);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$9 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
  HEAP32[$9 + 0 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  HEAP32[$9 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($9);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 127]($83) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $112 = 0, $114 = 0, $134 = 0, $136 = 0, $14 = 0, $148 = 0, $150 = 0, $2 = 0, $25 = 0, $27 = 0, $3 = 0, $39 = 0, $4 = 0, $41 = 0, $5 = 0, $6 = 0, $61 = 0, $63 = 0, $7 = 0, $75 = 0, $77 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, $98 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp + 100 | 0;
 $1 = sp + 88 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 52 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45240) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 127]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 127]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__nsn | 0, 0);
  $25 = __THREW__;
  __THREW__ = 0;
  if ($25 & 1) {
   $27 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($27);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 + 0 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__psn | 0, 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if ($39 & 1) {
   $41 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($41);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  HEAP32[$2 + 0 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $61 = __THREW__;
  __THREW__ = 0;
  if ($61 & 1) {
   $63 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($63);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$3 + 0 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 127]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $75 = __THREW__;
  __THREW__ = 0;
  if ($75 & 1) {
   $77 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($77);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$4 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 + 0 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 } else {
  $83 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45176) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 44 >> 2] & 127]($5, $83);
  $87 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $87;
  HEAP8[$__pat + 1 >> 0] = $87 >> 8;
  HEAP8[$__pat + 2 >> 0] = $87 >> 16;
  HEAP8[$__pat + 3 >> 0] = $87 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 32 >> 2] & 127]($6, $83);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__nsn | 0, 0);
  $98 = __THREW__;
  __THREW__ = 0;
  if ($98 & 1) {
   $100 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($100);
  };
  HEAP32[$__nsn + 0 >> 2] = HEAP32[$6 + 0 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  HEAP32[$6 + 0 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 28 >> 2] & 127]($7, $83);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__psn | 0, 0);
  $112 = __THREW__;
  __THREW__ = 0;
  if ($112 & 1) {
   $114 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($114);
  };
  HEAP32[$__psn + 0 >> 2] = HEAP32[$7 + 0 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$7 + 0 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 12 >> 2] & 127]($83) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 16 >> 2] & 127]($83) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 20 >> 2] & 127]($8, $83);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $134 = __THREW__;
  __THREW__ = 0;
  if ($134 & 1) {
   $136 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($136);
  };
  HEAP32[$__grp + 0 >> 2] = HEAP32[$8 + 0 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  HEAP32[$8 + 0 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$83 >> 2] | 0) + 24 >> 2] & 127]($9, $83);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $148 = __THREW__;
  __THREW__ = 0;
  if ($148 & 1) {
   $150 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($150);
  };
  HEAP32[$__sym + 0 >> 2] = HEAP32[$9 + 0 >> 2];
  HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
  HEAP32[$9 + 0 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  HEAP32[$9 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($9);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 127]($83) | 0;
  HEAP32[$__fd >> 2] = $storemerge;
  STACKTOP = sp;
  return;
 }
}

function __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $loc, $file) {
 $this = $this | 0;
 $loc = $loc | 0;
 $file = $file | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$1 = 0, $$13 = 0, $$2 = 0, $$24 = 0, $$3 = 0, $$35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $49 = 0, $57 = 0, $58 = 0, $6 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $84 = 0, $85 = 0, $86 = 0, $88 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $98 = 0, $dir = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body9$index7Z2D = 0, $eh$lpad$body9$indexZ2D = 0, $input = 0, $key = 0, $msg = 0, $success = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $dir = sp + 64 | 0;
 $key = sp + 40 | 0;
 $success = sp + 36 | 0;
 $input = sp + 24 | 0;
 $msg = sp + 12 | 0;
 $0 = sp;
 $1 = __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($loc, 47, -1) | 0;
 if (($1 | 0) == -1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($dir, 37152, 0); else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_jjRKS4_($dir, $loc, 0, $1 + 1 | 0, $loc);
 __THREW__ = 0;
 invoke_vii(40, $key | 0, $dir | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 do if ($4 & 1) {
  $17 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $17;
 } else {
  $6 = $key + 12 | 0;
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $file | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if ($7 & 1) {
   $9 = ___cxa_find_matching_catch() | 0;
   $10 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($key);
   $eh$lpad$body$index2Z2D = $10;
   $eh$lpad$body$indexZ2D = $9;
   break;
  }
  $11 = $this + 104 | 0;
  __THREW__ = 0;
  $12 = invoke_iii(36, $11 | 0, $key | 0) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) label = 11; else {
   $15 = HEAP32[$12 >> 2] | 0;
   if ($15) {
    $$0 = $15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($key);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($dir);
    STACKTOP = sp;
    return $$0 | 0;
   }
   HEAP32[$success >> 2] = 0;
   if (!(HEAP8[$dir >> 0] & 1)) $37 = $dir + 1 | 0; else $37 = HEAP32[$dir + 8 >> 2] | 0;
   if (!(HEAP8[$file >> 0] & 1)) $38 = $file + 1 | 0; else $38 = HEAP32[$file + 8 >> 2] | 0;
   __THREW__ = 0;
   $39 = invoke_iiiii(HEAP32[$this + 128 >> 2] | 0, HEAP32[$this + 132 >> 2] | 0, $37 | 0, $38 | 0, $success | 0) | 0;
   $40 = __THREW__;
   __THREW__ = 0;
   if ($40 & 1) label = 11; else {
    $42 = _strlen($39 | 0) | 0;
    __THREW__ = 0;
    invoke_viii(3, $input | 0, $39 | 0, $42 | 0);
    $43 = __THREW__;
    __THREW__ = 0;
    if ($43 & 1) label = 11; else {
     __THREW__ = 0;
     invoke_iii(19, $input | 0, $39 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     do if ($45 & 1) label = 38; else {
      _free($39);
      if (HEAP32[$success >> 2] | 0) {
       __THREW__ = 0;
       $102 = invoke_ii(67, 12) | 0;
       $103 = __THREW__;
       __THREW__ = 0;
       if ($103 & 1) {
        label = 38;
        break;
       }
       __THREW__ = 0;
       invoke_vii(40, $102 | 0, $input | 0);
       $105 = __THREW__;
       __THREW__ = 0;
       if ($105 & 1) {
        $110 = ___cxa_find_matching_catch() | 0;
        $111 = tempRet0;
        __ZdlPv($102);
        $$1 = $110;
        $$13 = $111;
        break;
       }
       __THREW__ = 0;
       $107 = invoke_iii(36, $11 | 0, $key | 0) | 0;
       $108 = __THREW__;
       __THREW__ = 0;
       if ($108 & 1) {
        label = 38;
        break;
       }
       HEAP32[$107 >> 2] = $102;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($input);
       $$0 = $102;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($key);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($dir);
       STACKTOP = sp;
       return $$0 | 0;
      };
      HEAP32[$0 + 0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      $49 = HEAP8[$file >> 0] | 0;
      if (!($49 & 1)) $57 = ($49 & 255) >>> 1; else $57 = HEAP32[$file + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_viiii(14, $0 | 0, 40664, 22, $57 + 22 | 0);
      $58 = __THREW__;
      __THREW__ = 0;
      if (!($58 & 1)) {
       if (!(HEAP8[$file >> 0] & 1)) $66 = $file + 1 | 0; else $66 = HEAP32[$file + 8 >> 2] | 0;
       __THREW__ = 0;
       invoke_iiii(31, $0 | 0, $66 | 0, $57 | 0) | 0;
       $67 = __THREW__;
       __THREW__ = 0;
       if (!($67 & 1)) {
        __THREW__ = 0;
        $71 = invoke_iii(29, $0 | 0, 38288) | 0;
        $72 = __THREW__;
        __THREW__ = 0;
        if ($72 & 1) {
         $96 = ___cxa_find_matching_catch() | 0;
         $97 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
         $$1 = $96;
         $$13 = $97;
         break;
        };
        HEAP32[$msg + 0 >> 2] = HEAP32[$71 + 0 >> 2];
        HEAP32[$msg + 4 >> 2] = HEAP32[$71 + 4 >> 2];
        HEAP32[$msg + 8 >> 2] = HEAP32[$71 + 8 >> 2];
        HEAP32[$71 + 0 >> 2] = 0;
        HEAP32[$71 + 4 >> 2] = 0;
        HEAP32[$71 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
        $74 = HEAP8[$input >> 0] | 0;
        if (!($74 & 1)) {
         $84 = $input + 1 | 0;
         $85 = ($74 & 255) >>> 1;
        } else {
         $84 = HEAP32[$input + 8 >> 2] | 0;
         $85 = HEAP32[$input + 4 >> 2] | 0;
        }
        __THREW__ = 0;
        invoke_iiii(31, $msg | 0, $84 | 0, $85 | 0) | 0;
        $86 = __THREW__;
        __THREW__ = 0;
        do if ($86 & 1) label = 41; else {
         $88 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_viiii(17, $88 | 0, $this + 72 | 0, $loc | 0, $msg | 0);
         $90 = __THREW__;
         __THREW__ = 0;
         if ($90 & 1) {
          $100 = ___cxa_find_matching_catch() | 0;
          $101 = tempRet0;
          ___cxa_free_exception($88 | 0);
          $$01 = $100;
          $$02 = $101;
          break;
         }
         __THREW__ = 0;
         invoke_viii(4, $88 | 0, 37312, 185);
         $92 = __THREW__;
         __THREW__ = 0;
         if ($92 & 1) {
          label = 41;
          break;
         }
        } while (0);
        if ((label | 0) == 41) {
         $98 = ___cxa_find_matching_catch() | 0;
         $$01 = $98;
         $$02 = tempRet0;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($msg);
        $$1 = $$01;
        $$13 = $$02;
        break;
       }
      }
      $69 = ___cxa_find_matching_catch() | 0;
      $70 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
      $eh$lpad$body9$index7Z2D = $70;
      $eh$lpad$body9$indexZ2D = $69;
      label = 39;
     } while (0);
     if ((label | 0) == 38) {
      $94 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body9$index7Z2D = tempRet0;
      $eh$lpad$body9$indexZ2D = $94;
      label = 39;
     }
     if ((label | 0) == 39) {
      $$1 = $eh$lpad$body9$indexZ2D;
      $$13 = $eh$lpad$body9$index7Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($input);
     $$2 = $$1;
     $$24 = $$13;
    }
   }
  }
  if ((label | 0) == 11) {
   $19 = ___cxa_find_matching_catch() | 0;
   $$2 = $19;
   $$24 = tempRet0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($key);
  $$3 = $$2;
  $$35 = $$24;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($dir);
  ___resumeException($$3 | 0);
 } while (0);
 $$3 = $eh$lpad$body$indexZ2D;
 $$35 = $eh$lpad$body$index2Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($dir);
 ___resumeException($$3 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($agg$result, $this, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $v = $v | 0;
 var $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$idx7$val18$i$i = 0, $$lcssa$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $11 = 0, $111 = 0, $116 = 0, $118 = 0, $12 = 0, $122 = 0, $124 = 0, $126 = 0, $127 = 0, $129 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $35 = 0, $37 = 0, $4 = 0, $40 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $56 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $69 = 0, $70 = 0, $76 = 0, $8 = 0, $81 = 0, $84 = 0, $92 = 0, $95 = 0, $98 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx$val$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$agg$result >> 2] = 19;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($1, $v);
 __THREW__ = 0;
 invoke_vii(40, $0 | 0, $1 | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($2 & 1)) {
  __THREW__ = 0;
  $4 = invoke_ii(67, 20) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  do if ($5 & 1) label = 37; else {
   HEAP32[$4 >> 2] = 40608;
   __THREW__ = 0;
   invoke_vii(40, $4 + 8 | 0, $0 | 0);
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $60 = ___cxa_find_matching_catch() | 0;
    $61 = tempRet0;
    __ZdlPv($4);
    $eh$lpad$body$i$index2Z2D = $61;
    $eh$lpad$body$i$indexZ2D = $60;
    break;
   }
   $10 = $this + 20 | 0;
   $11 = $this + 24 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   $13 = $this + 28 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   if ($12 >>> 0 < $14 >>> 0) {
    if (!$12) $18 = 0; else {
     HEAP32[$12 >> 2] = $4;
     $18 = HEAP32[$11 >> 2] | 0;
    }
    $17 = $18 + 4 | 0;
    HEAP32[$11 >> 2] = $17;
    $$idx$pre$phi$i$iZZ2D = $10;
    $$idx1$val$i$i = $17;
   } else {
    $this$idx2$val$i$i$i$i = HEAP32[$10 >> 2] | 0;
    $23 = ($12 - $this$idx2$val$i$i$i$i >> 2) + 1 | 0;
    if ($23 >>> 0 > 1073741823) {
     __THREW__ = 0;
     invoke_vi(181, $10 | 0);
     $25 = __THREW__;
     __THREW__ = 0;
     if ($25 & 1) {
      label = 37;
      break;
     }
     $$idx1$val$i$i$i$i$i$i = HEAP32[$13 >> 2] | 0;
     $this$idx$val$i$i$i$i = HEAP32[$10 >> 2] | 0;
    } else {
     $$idx1$val$i$i$i$i$i$i = $14;
     $this$idx$val$i$i$i$i = $this$idx2$val$i$i$i$i;
    }
    $28 = $this$idx$val$i$i$i$i;
    $29 = $$idx1$val$i$i$i$i$i$i - $28 | 0;
    if ($29 >> 2 >>> 0 < 536870911) {
     $35 = $29 >> 1;
     $37 = $35 >>> 0 < $23 >>> 0 ? $23 : $35;
     $40 = (HEAP32[$11 >> 2] | 0) - $28 >> 2;
     if (!$37) {
      $$0$i8$i$i$i$i = 0;
      $47 = 0;
      $48 = $40;
     } else {
      $$0$i7$i$i$i$i = $37;
      $129 = $40;
      label = 14;
     }
    } else {
     $$0$i7$i$i$i$i = 1073741823;
     $129 = (HEAP32[$11 >> 2] | 0) - $28 >> 2;
     label = 14;
    }
    if ((label | 0) == 14) {
     __THREW__ = 0;
     $43 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
     $44 = __THREW__;
     __THREW__ = 0;
     if ($44 & 1) {
      label = 37;
      break;
     }
     $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
     $47 = $43;
     $48 = $129;
    }
    $46 = $47 + ($48 << 2) | 0;
    if ($46) HEAP32[$46 >> 2] = $4;
    $51 = $47 + ($48 + 1 << 2) | 0;
    $52 = HEAP32[$10 >> 2] | 0;
    $56 = (HEAP32[$11 >> 2] | 0) - $52 | 0;
    $58 = $47 + ($48 - ($56 >> 2) << 2) | 0;
    _memcpy($58 | 0, $52 | 0, $56 | 0) | 0;
    HEAP32[$10 >> 2] = $58;
    HEAP32[$11 >> 2] = $51;
    HEAP32[$13 >> 2] = $47 + ($$0$i8$i$i$i$i << 2);
    if (!$52) {
     $$idx$pre$phi$i$iZZ2D = $10;
     $$idx1$val$i$i = $51;
    } else {
     __ZdlPv($52);
     $$idx$pre$phi$i$iZZ2D = $10;
     $$idx1$val$i$i = HEAP32[$11 >> 2] | 0;
    }
   }
   $62 = $this + 16 | 0;
   HEAP8[$4 + 4 >> 0] = HEAP8[$62 >> 0] | 0;
   $69 = $this + 48 | 0;
   HEAP32[$69 >> 2] = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   $70 = HEAP32[$69 >> 2] | 0;
   if ($70 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
    $126 = $agg$result + 8 | 0;
    HEAP32[$126 >> 2] = $4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
    STACKTOP = sp;
    return;
   }
   $76 = $this + 44 | 0;
   if (!(+($70 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$76 >> 2] | 0) >>> 0))) {
    $126 = $agg$result + 8 | 0;
    HEAP32[$126 >> 2] = $4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
    STACKTOP = sp;
    return;
   }
   __THREW__ = 0;
   invoke_vii(61, $this | 0, $4 | 0);
   $81 = __THREW__;
   __THREW__ = 0;
   if ($81 & 1) break L1;
   __THREW__ = 0;
   invoke_vii(62, $this + 72 | 0, $this | 0);
   $84 = __THREW__;
   __THREW__ = 0;
   if ($84 & 1) break L1;
   if (HEAP32[$this + 56 >> 2] & 16) {
    __THREW__ = 0;
    invoke_vii(61, $this | 0, HEAP32[$this + 64 >> 2] | 0);
    $92 = __THREW__;
    __THREW__ = 0;
    if ($92 & 1) break L1;
   }
   $95 = (HEAP8[$62 >> 0] | 0) + 1 << 24 >> 24;
   HEAP8[$62 >> 0] = $95;
   $$idx6$i$i = $this + 20 | 0;
   $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
   $$idx7$val12$i$i = HEAP32[$11 >> 2] | 0;
   L41 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
    $$idx6$val14$i$i = $$idx6$val11$i$i;
    $$idx7$val18$i$i = $$idx7$val12$i$i;
    $102 = $95;
    $i$013$i$i = 0;
    while (1) {
     $98 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
     if ((HEAP8[$98 + 4 >> 0] | 0) == $102 << 24 >> 24) {
      $$idx6$val$i$i = $$idx6$val14$i$i;
      $$idx7$val$i$i = $$idx7$val18$i$i;
      $i$1$i$i = $i$013$i$i;
     } else {
      if (!$98) {
       $$idx4$val$i$i = $$idx6$val14$i$i;
       $$idx5$val$i$i = $$idx7$val18$i$i;
      } else {
       FUNCTION_TABLE_vi[HEAP32[(HEAP32[$98 >> 2] | 0) + 4 >> 2] & 255]($98);
       $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx5$val$i$i = HEAP32[$11 >> 2] | 0;
      }
      $111 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
      if (($i$013$i$i | 0) == ($111 | 0)) {
       $$idx6$val$pre$i$i = $$idx4$val$i$i;
       $116 = $$idx5$val$i$i;
      } else {
       HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($111 << 2) >> 2];
       $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $116 = HEAP32[$11 >> 2] | 0;
      }
      $scevgep4$i$i$i$i$i = $116 + -4 | 0;
      HEAP32[$11 >> 2] = $scevgep4$i$i$i$i$i;
      $$idx6$val$i$i = $$idx6$val$pre$i$i;
      $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
      $i$1$i$i = $i$013$i$i + -1 | 0;
     }
     $118 = $i$1$i$i + 1 | 0;
     $122 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
     if ($118 >>> 0 >= $122 >>> 0) {
      $$lcssa$i$i = $122;
      break L41;
     }
     $$idx6$val14$i$i = $$idx6$val$i$i;
     $$idx7$val18$i$i = $$idx7$val$i$i;
     $102 = HEAP8[$62 >> 0] | 0;
     $i$013$i$i = $118;
    }
   } while (0);
   HEAP32[$69 >> 2] = $$lcssa$i$i;
   HEAP32[$76 >> 2] = $$lcssa$i$i;
   $126 = $agg$result + 8 | 0;
   HEAP32[$126 >> 2] = $4;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
   STACKTOP = sp;
   return;
  } while (0);
  if ((label | 0) == 37) {
   $124 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $124;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  $eh$lpad$body$index7Z2D = $eh$lpad$body$i$index2Z2D;
  $eh$lpad$body$indexZ2D = $eh$lpad$body$i$indexZ2D;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 } while (0);
 $127 = ___cxa_find_matching_catch() | 0;
 $eh$lpad$body$index7Z2D = tempRet0;
 $eh$lpad$body$indexZ2D = $127;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $51 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc) {
   $88 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}

function __ZN12_GLOBAL__N_111HeapClosureC2ERKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEPNS_10HeapObjectEjRKNS1_6vectorIS5_NSA_IS5_EEEEPK3ASTm($this, $up_values, $self, $offset, $params, $body, $builtin) {
 $this = $this | 0;
 $up_values = $up_values | 0;
 $self = $self | 0;
 $offset = $offset | 0;
 $params = $params | 0;
 $body = $body | 0;
 $builtin = $builtin | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i1$i$i = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$idx$val$i$i = 0, $$idx$val$i15$i$i = 0, $$idx2$val$i23$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i = 0, $0 = 0, $1 = 0, $100 = 0, $102 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $28 = 0, $3 = 0, $34 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $48 = 0, $50 = 0, $53 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $78 = 0, $79 = 0, $82 = 0, $84 = 0, $85 = 0, $88 = 0, $89 = 0, $91 = 0, $95 = 0, $98 = 0, $99 = 0, $__nd$0$in$i21$i$i$i$i$i$i = 0, $__parent$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent$i$i$i$i$i = sp;
 HEAP32[$this >> 2] = 40696;
 $0 = $this + 8 | 0;
 $1 = $this + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $this + 16 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $this + 12 | 0;
 HEAP32[$0 >> 2] = $3;
 $$idx$val$i$i = HEAP32[$up_values >> 2] | 0;
 $4 = $up_values + 4 | 0;
 L1 : do if (($$idx$val$i$i | 0) != ($4 | 0)) {
  $$idx$val$i15$i$i = $$idx$val$i$i;
  while (1) {
   __THREW__ = 0;
   $6 = invoke_ii(67, 24) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
   $11 = $$idx$val$i15$i$i + 16 | 0;
   $13 = HEAP32[$11 >> 2] | 0;
   $16 = HEAP32[$11 + 4 >> 2] | 0;
   $17 = $6 + 16 | 0;
   HEAP32[$17 >> 2] = $13;
   HEAP32[$17 + 4 >> 2] = $16;
   $21 = $13;
   $$pre$i$i$i$i$i$i = HEAP32[$3 >> 2] | 0;
   do if ((HEAP32[$0 >> 2] | 0) == ($3 | 0)) {
    $34 = $3;
    label = 9;
   } else {
    $23 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($23) {
     $$0$i$i$i$i$i$i$i$i = $3;
     while (1) {
      $28 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$28 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $28; else {
       $$01$i$i$i$i$i$i$i$i = $28;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $25 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$25) {
       $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $25;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $21 >>> 0) {
     $34 = $$01$i$i$i$i$i$i$i$i;
     label = 9;
    } else {
     if ($23) {
      HEAP32[$__parent$i$i$i$i$i >> 2] = $3;
      $$0$i$i$i$i1$i$i = $3;
      $48 = $3;
      break;
     } else $__nd$0$in$i21$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i23$i$i$i$i$i$i = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i + 16 >> 2] | 0;
      if ($21 >>> 0 < $$idx2$val$i23$i$i$i$i$i$i >>> 0) {
       $38 = HEAP32[$__nd$0$in$i21$i$i$i$i$i$i >> 2] | 0;
       if (!$38) {
        label = 15;
        break;
       } else {
        $__nd$0$in$i21$i$i$i$i$i$i = $38;
        continue;
       }
      }
      if ($$idx2$val$i23$i$i$i$i$i$i >>> 0 >= $21 >>> 0) {
       label = 19;
       break;
      }
      $41 = $__nd$0$in$i21$i$i$i$i$i$i + 4 | 0;
      $42 = HEAP32[$41 >> 2] | 0;
      if (!$42) {
       label = 18;
       break;
      } else $__nd$0$in$i21$i$i$i$i$i$i = $42;
     }
     if ((label | 0) == 15) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $__nd$0$in$i21$i$i$i$i$i$i;
      $48 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 18) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $41;
      $48 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     } else if ((label | 0) == 19) {
      label = 0;
      HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$in$i21$i$i$i$i$i$i;
      $$0$i$i$i$i1$i$i = $__parent$i$i$i$i$i;
      $48 = $__nd$0$in$i21$i$i$i$i$i$i;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 9) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     HEAP32[$__parent$i$i$i$i$i >> 2] = $3;
     $$0$i$i$i$i1$i$i = $3;
     $48 = $3;
     break;
    } else {
     HEAP32[$__parent$i$i$i$i$i >> 2] = $34;
     $$0$i$i$i$i1$i$i = $34 + 4 | 0;
     $48 = $34;
     break;
    }
   } while (0);
   $44 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
   if (!$44) {
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = $48;
    HEAP32[$$0$i$i$i$i1$i$i >> 2] = $6;
    $50 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
    if (!$50) $53 = $6; else {
     HEAP32[$0 >> 2] = $50;
     $53 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 >> 2] | 0, $53);
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
   } else if (!(($44 | 0) == ($6 | 0) | ($6 | 0) == 0)) __ZdlPv($6);
   $59 = HEAP32[$$idx$val$i15$i$i + 4 >> 2] | 0;
   if (!$59) {
    $$0$i$i$i$i$i = $$idx$val$i15$i$i;
    while (1) {
     $64 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$64 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $64;
      break;
     } else $$0$i$i$i$i$i = $64;
    }
   } else {
    $$0$i$i$i$i$i$i = $59;
    while (1) {
     $61 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$61) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $61;
    }
   }
   if (($$01$i$i$i$i$i | 0) == ($4 | 0)) break L1; else $$idx$val$i15$i$i = $$01$i$i$i$i$i;
  }
  $110 = ___cxa_find_matching_catch() | 0;
  $111 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$1 >> 2] | 0);
  $$0 = $111;
  $$01 = $110;
  ___resumeException($$01 | 0);
 } while (0);
 HEAP32[$this + 20 >> 2] = $self;
 HEAP32[$this + 24 >> 2] = $offset;
 $70 = $this + 28 | 0;
 HEAP32[$70 >> 2] = 0;
 $71 = $this + 32 | 0;
 HEAP32[$71 >> 2] = 0;
 $72 = $this + 36 | 0;
 HEAP32[$72 >> 2] = 0;
 $73 = $params + 4 | 0;
 $78 = (HEAP32[$73 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
 $79 = $78 >> 2;
 if (!$79) {
  $108 = $this + 40 | 0;
  HEAP32[$108 >> 2] = $body;
  $109 = $this + 44 | 0;
  HEAP32[$109 >> 2] = $builtin;
  STACKTOP = sp;
  return;
 }
 if ($79 >>> 0 > 1073741823) {
  __THREW__ = 0;
  invoke_vi(181, $70 | 0);
  $82 = __THREW__;
  __THREW__ = 0;
  if (!($82 & 1)) label = 35;
 } else label = 35;
 if ((label | 0) == 35) {
  __THREW__ = 0;
  $84 = invoke_ii(67, $78 | 0) | 0;
  $85 = __THREW__;
  __THREW__ = 0;
  if (!($85 & 1)) {
   HEAP32[$71 >> 2] = $84;
   HEAP32[$70 >> 2] = $84;
   HEAP32[$72 >> 2] = $84 + ($79 << 2);
   $88 = HEAP32[$params >> 2] | 0;
   $89 = HEAP32[$73 >> 2] | 0;
   if (($88 | 0) == ($89 | 0)) {
    $108 = $this + 40 | 0;
    HEAP32[$108 >> 2] = $body;
    $109 = $this + 44 | 0;
    HEAP32[$109 >> 2] = $builtin;
    STACKTOP = sp;
    return;
   } else {
    $$01$i$i = $88;
    $91 = $84;
   }
   do {
    if (!$91) $95 = 0; else {
     HEAP32[$91 >> 2] = HEAP32[$$01$i$i >> 2];
     $95 = HEAP32[$71 >> 2] | 0;
    }
    $91 = $95 + 4 | 0;
    HEAP32[$71 >> 2] = $91;
    $$01$i$i = $$01$i$i + 4 | 0;
   } while (($$01$i$i | 0) != ($89 | 0));
   $108 = $this + 40 | 0;
   HEAP32[$108 >> 2] = $body;
   $109 = $this + 44 | 0;
   HEAP32[$109 >> 2] = $builtin;
   STACKTOP = sp;
   return;
  }
 }
 $98 = ___cxa_find_matching_catch() | 0;
 $99 = tempRet0;
 $100 = HEAP32[$70 >> 2] | 0;
 if ($100) {
  $102 = HEAP32[$71 >> 2] | 0;
  if (($102 | 0) != ($100 | 0)) HEAP32[$71 >> 2] = $102 + (~(($102 + -4 - $100 | 0) >>> 2) << 2);
  __ZdlPv($100);
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$1 >> 2] | 0);
 $$0 = $99;
 $$01 = $98;
 ___resumeException($$01 | 0);
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $102 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $111 = 0, $113 = 0, $115 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $13 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $3 = 0, $30 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $43 = 0, $50 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $69 = 0, $7 = 0, $77 = 0, $79 = 0, $80 = 0, $83 = 0, $85 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $94 = 0, $95 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 992 | 0;
 $$byval_copy = sp;
 $__buf = sp + 884 | 0;
 $__bb = sp + 880 | 0;
 $__digits = sp + 480 | 0;
 $__loc = sp + 476 | 0;
 $__pat = sp + 472 | 0;
 $__dp = sp + 468 | 0;
 $__ts = sp + 464 | 0;
 $__grp = sp + 452 | 0;
 $__sym = sp + 440 | 0;
 $__sn = sp + 428 | 0;
 $__fd = sp + 424 | 0;
 $__mbuf = sp + 24 | 0;
 $__mi = sp + 16 | 0;
 $__me = sp + 12 | 0;
 $0 = sp + 8 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[tempDoublePtr >> 3] = $__units;
 HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
 $1 = _snprintf($__buf, 100, 45552, $$byval_copy) | 0;
 do if ($1 >>> 0 > 99) {
  __THREW__ = 0;
  $3 = invoke_i(1) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $118 = 0;
   $119 = 0;
   label = 7;
  } else {
   __THREW__ = 0;
   HEAPF64[tempDoublePtr >> 3] = $__units;
   HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
   $6 = invoke_iiiii(12, $__bb | 0, $3 | 0, 45552, $$byval_copy | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $118 = 0;
    $119 = 0;
    label = 7;
   } else {
    $9 = HEAP32[$__bb >> 2] | 0;
    if (!$9) {
     __THREW__ = 0;
     invoke_v(5);
     $11 = __THREW__;
     __THREW__ = 0;
     if ($11 & 1) {
      $118 = 0;
      $119 = 0;
      label = 7;
      break;
     }
     $120 = HEAP32[$__bb >> 2] | 0;
    } else $120 = $9;
    $16 = _malloc($6 << 2) | 0;
    if (!$16) {
     __THREW__ = 0;
     invoke_v(5);
     $18 = __THREW__;
     __THREW__ = 0;
     if ($18 & 1) {
      $118 = $120;
      $119 = 0;
      label = 7;
     } else {
      $111 = 0;
      $113 = $120;
      $__db$0 = 0;
      $__n$0 = $6;
      label = 10;
     }
    } else {
     $111 = $16;
     $113 = $120;
     $__db$0 = $16;
     $__n$0 = $6;
     label = 10;
    }
   }
  }
 } else {
  $111 = 0;
  $113 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  __THREW__ = 0;
  invoke_vii(47, $__loc | 0, $__iob | 0);
  $20 = __THREW__;
  __THREW__ = 0;
  if ($20 & 1) {
   $118 = $113;
   $119 = $111;
   label = 7;
  } else {
   __THREW__ = 0;
   $22 = invoke_iii(22, $__loc | 0, 45792) | 0;
   $23 = __THREW__;
   __THREW__ = 0;
   if ($23 & 1) label = 35; else {
    $25 = HEAP32[$__bb >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[$22 >> 2] | 0) + 48 >> 2] | 0, $22 | 0, $25 | 0, $25 + $__n$0 | 0, $__db$0 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) label = 35; else {
     if (!$__n$0) $36 = 0; else $36 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
     HEAP32[$__pat >> 2] = 0;
     HEAP32[$__grp + 0 >> 2] = 0;
     HEAP32[$__grp + 4 >> 2] = 0;
     HEAP32[$__grp + 8 >> 2] = 0;
     HEAP32[$__sym + 0 >> 2] = 0;
     HEAP32[$__sym + 4 >> 2] = 0;
     HEAP32[$__sym + 8 >> 2] = 0;
     HEAP32[$__sn + 0 >> 2] = 0;
     HEAP32[$__sn + 4 >> 2] = 0;
     HEAP32[$__sn + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiiiiiiiii(4, $__intl | 0, $36 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
     $37 = __THREW__;
     __THREW__ = 0;
     do if ($37 & 1) {
      $91 = ___cxa_find_matching_catch() | 0;
      $$0 = $91;
      $$01 = tempRet0;
     } else {
      $39 = HEAP32[$__fd >> 2] | 0;
      if (($__n$0 | 0) > ($39 | 0)) {
       $43 = HEAP8[$__sn >> 0] | 0;
       if (!($43 & 1)) $59 = ($43 & 255) >>> 1; else $59 = HEAP32[$__sn + 4 >> 2] | 0;
       $50 = HEAP8[$__sym >> 0] | 0;
       if (!($50 & 1)) $61 = ($50 & 255) >>> 1; else $61 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $59 + ($__n$0 - $39 << 1 | 1) + $61 | 0;
      } else {
       $62 = HEAP8[$__sn >> 0] | 0;
       if (!($62 & 1)) $77 = ($62 & 255) >>> 1; else $77 = HEAP32[$__sn + 4 >> 2] | 0;
       $69 = HEAP8[$__sym >> 0] | 0;
       if (!($69 & 1)) $79 = ($69 & 255) >>> 1; else $79 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $77 + 2 + $79 | 0;
      }
      $80 = $$pn + $39 | 0;
      if ($80 >>> 0 > 100) {
       $83 = _malloc($80 << 2) | 0;
       if (!$83) {
        __THREW__ = 0;
        invoke_v(5);
        $85 = __THREW__;
        __THREW__ = 0;
        if ($85 & 1) {
         $87 = ___cxa_find_matching_catch() | 0;
         $$0 = $87;
         $$01 = tempRet0;
         break;
        } else {
         $95 = 0;
         $__mb$0 = 0;
        }
       } else {
        $95 = $83;
        $__mb$0 = $83;
       }
      } else {
       $95 = 0;
       $__mb$0 = $__mbuf;
      }
      __THREW__ = 0;
      invoke_viiiiiiiiiiiiiii(2, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $__db$0 | 0, $__db$0 + ($__n$0 << 2) | 0, $22 | 0, $36 | 0, $__pat | 0, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $39 | 0);
      $102 = __THREW__;
      __THREW__ = 0;
      if (!($102 & 1)) {
       HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
       $105 = HEAP32[$__mi >> 2] | 0;
       $106 = HEAP32[$__me >> 2] | 0;
       __THREW__ = 0;
       HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
       invoke_viiiiiii(45, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $105 | 0, $106 | 0, $__iob | 0, $__fl | 0);
       $107 = __THREW__;
       __THREW__ = 0;
       if (!($107 & 1)) {
        if ($95) _free($95);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sn);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
        __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
        if (!$111) {
         _free($113);
         STACKTOP = sp;
         return;
        }
        _free($111);
        _free($113);
        STACKTOP = sp;
        return;
       }
      }
      $93 = ___cxa_find_matching_catch() | 0;
      $94 = tempRet0;
      if (!$95) {
       $$0 = $93;
       $$01 = $94;
      } else {
       _free($95);
       $$0 = $93;
       $$01 = $94;
      }
     } while (0);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
     $$1 = $$0;
     $$12 = $$01;
    }
   }
   if ((label | 0) == 35) {
    $89 = ___cxa_find_matching_catch() | 0;
    $$1 = $89;
    $$12 = tempRet0;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
   $$2 = $$1;
   $$23 = $$12;
   $115 = $111;
   $117 = $113;
  }
 }
 if ((label | 0) == 7) {
  $13 = ___cxa_find_matching_catch() | 0;
  $$2 = $13;
  $$23 = tempRet0;
  $115 = $119;
  $117 = $118;
 }
 if (!$115) {
  _free($117);
  ___resumeException($$2 | 0);
 }
 _free($115);
 _free($117);
 ___resumeException($$2 | 0);
}

function __ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) {
 $alloc = $alloc | 0;
 $file = $file | 0;
 $input = $input | 0;
 var $$0$i = 0, $$01 = 0, $$01$i = 0, $$012 = 0, $$0311 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $48 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $65 = 0, $69 = 0, $7 = 0, $71 = 0, $80 = 0, $84 = 0, $86 = 0, $88 = 0, $__f$01$i$i = 0, $__f$01$i$i8 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $parser = 0, $ss = 0, $token_list = 0, label = 0, sp = 0, $__f$01$i$i8$looptemp = 0, $__f$01$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $0 = sp + 180 | 0;
 $token_list = sp + 168 | 0;
 $parser = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $1 = sp;
 __Z11jsonnet_lexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKc($token_list, $file, $input);
 HEAP32[$parser >> 2] = $token_list;
 HEAP32[$parser + 4 >> 2] = $alloc;
 __THREW__ = 0;
 $3 = invoke_iiii(28, $parser | 0, 15, 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($4 & 1) {
  $56 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index7Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $56;
  label = 19;
 } else {
  $6 = $token_list + 4 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ((HEAP32[$7 + 8 >> 2] | 0) == 31) {
   $65 = $token_list + 8 | 0;
   if (!(HEAP32[$65 >> 2] | 0)) {
    STACKTOP = sp;
    return $3 | 0;
   }
   $69 = (HEAP32[$token_list >> 2] | 0) + 4 | 0;
   $71 = HEAP32[$7 >> 2] | 0;
   HEAP32[$71 + 4 >> 2] = HEAP32[$69 >> 2];
   HEAP32[HEAP32[$69 >> 2] >> 2] = $71;
   HEAP32[$65 >> 2] = 0;
   if (($7 | 0) == ($token_list | 0)) {
    STACKTOP = sp;
    return $3 | 0;
   } else $__f$01$i$i8 = $7;
   do {
    $__f$01$i$i8$looptemp = $__f$01$i$i8;
    $__f$01$i$i8 = HEAP32[$__f$01$i$i8 + 4 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__f$01$i$i8$looptemp + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__f$01$i$i8$looptemp + 12 | 0);
    __ZdlPv($__f$01$i$i8$looptemp);
   } while (($__f$01$i$i8 | 0) != ($token_list | 0));
   STACKTOP = sp;
   return $3 | 0;
  }
  $11 = $ss + 64 | 0;
  $12 = $ss + 8 | 0;
  HEAP32[$12 >> 2] = 792;
  $13 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 940;
  HEAP32[$11 >> 2] = 960;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $13 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $28 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $28;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 772;
   HEAP32[$11 >> 2] = 812;
   HEAP32[$12 >> 2] = 792;
   __THREW__ = 0;
   invoke_vi(179, $13 | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   do if ($20 & 1) {
    $30 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $30;
   } else {
    HEAP32[$13 >> 2] = 1104;
    $22 = $ss + 44 | 0;
    HEAP32[$22 + 0 >> 2] = 0;
    HEAP32[$22 + 4 >> 2] = 0;
    HEAP32[$22 + 8 >> 2] = 0;
    HEAP32[$22 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $13 | 0, $0 | 0);
    $24 = __THREW__;
    __THREW__ = 0;
    if ($24 & 1) {
     $26 = ___cxa_find_matching_catch() | 0;
     $27 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($13);
     $eh$lpad$body$i$index2Z2D = $27;
     $eh$lpad$body$i$indexZ2D = $26;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __THREW__ = 0;
    $33 = invoke_iiii(25, $ss + 8 | 0, 35400, 16) | 0;
    $34 = __THREW__;
    __THREW__ = 0;
    L22 : do if ($34 & 1) label = 20; else {
     __THREW__ = 0;
     invoke_vii(52, $33 | 0, (HEAP32[$6 >> 2] | 0) + 8 | 0);
     $38 = __THREW__;
     __THREW__ = 0;
     if ($38 & 1) label = 20; else {
      $40 = ___cxa_allocate_exception(40) | 0;
      $41 = HEAP32[$6 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(43, $1 | 0, $13 | 0);
      $42 = __THREW__;
      __THREW__ = 0;
      do if ($42 & 1) {
       $60 = ___cxa_find_matching_catch() | 0;
       $$012 = $60;
       $$0311 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $40 | 0, $41 + 24 | 0);
       $45 = __THREW__;
       __THREW__ = 0;
       if ($45 & 1) $$01 = 1; else {
        $47 = $40 + 12 | 0;
        $48 = $41 + 36 | 0;
        HEAP32[$47 + 0 >> 2] = HEAP32[$48 + 0 >> 2];
        HEAP32[$47 + 4 >> 2] = HEAP32[$48 + 4 >> 2];
        HEAP32[$47 + 8 >> 2] = HEAP32[$48 + 8 >> 2];
        HEAP32[$47 + 12 >> 2] = HEAP32[$48 + 12 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $40 + 28 | 0, $1 | 0);
        $50 = __THREW__;
        __THREW__ = 0;
        if ($50 & 1) {
         $52 = ___cxa_find_matching_catch() | 0;
         $53 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($40);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
         $$012 = $52;
         $$0311 = $53;
         break;
        }
        __THREW__ = 0;
        invoke_viii(4, $40 | 0, 48, 178);
        $54 = __THREW__;
        __THREW__ = 0;
        if ($54 & 1) $$01 = 0; else {}
       }
       $62 = ___cxa_find_matching_catch() | 0;
       $63 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
       if ($$01) {
        $$012 = $62;
        $$0311 = $63;
       } else {
        $$1 = $62;
        $$14 = $63;
        break L22;
       }
      } while (0);
      ___cxa_free_exception($40 | 0);
      $$1 = $$012;
      $$14 = $$0311;
     }
    } while (0);
    if ((label | 0) == 20) {
     $58 = ___cxa_find_matching_catch() | 0;
     $$1 = $58;
     $$14 = tempRet0;
    }
    HEAP32[$ss >> 2] = 772;
    HEAP32[$ss + 64 >> 2] = 812;
    HEAP32[$12 >> 2] = 792;
    HEAP32[$13 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($22);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($13);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($11);
    $$2 = $$1;
    $$25 = $$14;
    break L1;
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($11);
  $eh$lpad$body$index7Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
  label = 19;
 } while (0);
 if ((label | 0) == 19) {
  $$2 = $eh$lpad$body$indexZ2D;
  $$25 = $eh$lpad$body$index7Z2D;
 }
 $80 = $token_list + 8 | 0;
 if (!(HEAP32[$80 >> 2] | 0)) ___resumeException($$2 | 0);
 $84 = HEAP32[$token_list + 4 >> 2] | 0;
 $86 = (HEAP32[$token_list >> 2] | 0) + 4 | 0;
 $88 = HEAP32[$84 >> 2] | 0;
 HEAP32[$88 + 4 >> 2] = HEAP32[$86 >> 2];
 HEAP32[HEAP32[$86 >> 2] >> 2] = $88;
 HEAP32[$80 >> 2] = 0;
 if (($84 | 0) == ($token_list | 0)) ___resumeException($$2 | 0); else $__f$01$i$i = $84;
 do {
  $__f$01$i$i$looptemp = $__f$01$i$i;
  $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__f$01$i$i$looptemp + 24 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__f$01$i$i$looptemp + 12 | 0);
  __ZdlPv($__f$01$i$i$looptemp);
 } while (($__f$01$i$i | 0) != ($token_list | 0));
 ___resumeException($$2 | 0);
 return 0;
}

function __ZL23default_import_callbackPvPKcS1_Pi($ctx, $base, $file, $success) {
 $ctx = $ctx | 0;
 $base = $base | 0;
 $file = $file | 0;
 $success = $success | 0;
 var $$0 = 0, $$0$i = 0, $$0$i5 = 0, $$0$i8 = 0, $$01 = 0, $$01$i = 0, $$02 = 0, $$1 = 0, $$13 = 0, $$byval_copy = 0, $$byval_copy6 = 0, $0 = 0, $1 = 0, $100 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $48 = 0, $51 = 0, $52 = 0, $59 = 0, $6 = 0, $63 = 0, $68 = 0, $71 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $82 = 0, $85 = 0, $9 = 0, $90 = 0, $92 = 0, $94 = 0, $99 = 0, $abs_path = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $f = 0, $input = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $$byval_copy6 = sp + 248 | 0;
 $$byval_copy = sp + 244 | 0;
 $abs_path = sp + 232 | 0;
 $0 = sp + 220 | 0;
 $1 = sp + 208 | 0;
 $f = sp + 20 | 0;
 $input = sp + 8 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 HEAP32[$abs_path + 0 >> 2] = 0;
 HEAP32[$abs_path + 4 >> 2] = 0;
 HEAP32[$abs_path + 8 >> 2] = 0;
 do if ((HEAP8[$file >> 0] | 0) == 47) {
  __THREW__ = 0;
  invoke_iii(19, $abs_path | 0, $file | 0) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) label = 3; else label = 14;
 } else {
  $8 = _strlen($base | 0) | 0;
  __THREW__ = 0;
  invoke_viii(3, $1 | 0, $base | 0, $8 | 0);
  $9 = __THREW__;
  __THREW__ = 0;
  if ($9 & 1) label = 3; else {
   __THREW__ = 0;
   $11 = invoke_iii(29, $1 | 0, $file | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $25 = ___cxa_find_matching_catch() | 0;
    $26 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
    $$1 = $25;
    $$13 = $26;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($abs_path);
    ___resumeException($$1 | 0);
   };
   HEAP32[$0 + 0 >> 2] = HEAP32[$11 + 0 >> 2];
   HEAP32[$0 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$0 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   HEAP32[$11 + 0 >> 2] = 0;
   HEAP32[$11 + 4 >> 2] = 0;
   HEAP32[$11 + 8 >> 2] = 0;
   if (!(HEAP8[$abs_path >> 0] & 1)) {
    HEAP8[$abs_path + 1 >> 0] = 0;
    HEAP8[$abs_path >> 0] = 0;
   } else {
    HEAP8[HEAP32[$abs_path + 8 >> 2] >> 0] = 0;
    HEAP32[$abs_path + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $abs_path | 0, 0);
   $21 = __THREW__;
   __THREW__ = 0;
   if ($21 & 1) {
    $23 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($23);
   } else {
    HEAP32[$abs_path + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    HEAP32[$abs_path + 4 >> 2] = HEAP32[$0 + 4 >> 2];
    HEAP32[$abs_path + 8 >> 2] = HEAP32[$0 + 8 >> 2];
    HEAP32[$0 + 0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
    label = 14;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 3) {
  $6 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $6;
 } else if ((label | 0) == 14) {
  $27 = $f + 108 | 0;
  $28 = $f + 8 | 0;
  HEAP32[$f >> 2] = 40908;
  $29 = $f + 108 | 0;
  HEAP32[$29 >> 2] = 40928;
  HEAP32[$f + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $f + 108 | 0, $28 | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  do if ($32 & 1) {
   $38 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $38;
  } else {
   HEAP32[$f + 180 >> 2] = 0;
   HEAP32[$f + 184 >> 2] = -1;
   HEAP32[$f >> 2] = 40852;
   HEAP32[$27 >> 2] = 40872;
   __THREW__ = 0;
   invoke_vi(186, $28 | 0);
   $36 = __THREW__;
   __THREW__ = 0;
   if ($36 & 1) {
    $40 = ___cxa_find_matching_catch() | 0;
    $$0$i = tempRet0;
    $$01$i = $40;
    break;
   }
   if (!(HEAP8[$abs_path >> 0] & 1)) $51 = $abs_path + 1 | 0; else $51 = HEAP32[$abs_path + 8 >> 2] | 0;
   $48 = $f + 72 | 0;
   if (!(HEAP32[$48 >> 2] | 0)) {
    $52 = _fopen($51 | 0, 41128) | 0;
    HEAP32[$48 >> 2] = $52;
    if (!$52) label = 25; else {
     HEAP32[$f + 96 >> 2] = 8;
     __THREW__ = 0;
     invoke_vii(48, $f + (HEAP32[(HEAP32[$f >> 2] | 0) + -12 >> 2] | 0) | 0, 0);
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) label = 31; else label = 26;
    }
   } else label = 25;
   if ((label | 0) == 25) {
    $63 = HEAP32[(HEAP32[$f >> 2] | 0) + -12 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(48, $f + $63 | 0, HEAP32[$f + ($63 + 16) >> 2] | 4 | 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) label = 31; else label = 26;
   }
   do if ((label | 0) == 26) {
    $71 = (HEAP32[$f >> 2] | 0) + -12 | 0;
    if (HEAP32[$f + ((HEAP32[$71 >> 2] | 0) + 16) >> 2] | 0) {
     HEAP32[$success >> 2] = 0;
     $77 = HEAP32[(___errno_location() | 0) >> 2] | 0;
     __THREW__ = 0;
     $78 = invoke_ii(70, $77 | 0) | 0;
     $79 = __THREW__;
     __THREW__ = 0;
     if ($79 & 1) {
      label = 31;
      break;
     }
     $82 = (_strlen($78 | 0) | 0) + 1 | 0;
     if (!$82) $$0$i5 = 0; else $$0$i5 = _malloc($82) | 0;
     _strcpy($$0$i5 | 0, $78 | 0) | 0;
     $$0 = $$0$i5;
     HEAP32[$f >> 2] = 40852;
     HEAP32[$29 >> 2] = 40872;
     __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($28);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($27);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($abs_path);
     STACKTOP = sp;
     return $$0 | 0;
    };
    HEAP32[$input + 0 >> 2] = 0;
    HEAP32[$input + 4 >> 2] = 0;
    HEAP32[$input + 8 >> 2] = 0;
    HEAP32[$2 >> 2] = HEAP32[$f + ((HEAP32[$71 >> 2] | 0) + 24) >> 2];
    HEAP32[$3 >> 2] = 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
    HEAP32[$$byval_copy6 + 0 >> 2] = HEAP32[$3 + 0 >> 2];
    invoke_iiii(33, $input | 0, $$byval_copy | 0, $$byval_copy6 | 0) | 0;
    $90 = __THREW__;
    __THREW__ = 0;
    if ($90 & 1) {
     $107 = ___cxa_find_matching_catch() | 0;
     $108 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($input);
     $$01 = $107;
     $$02 = $108;
     break;
    }
    HEAP32[$success >> 2] = 1;
    $92 = HEAP8[$input >> 0] | 0;
    $94 = ($92 & 1) == 0;
    if ($94) $100 = ($92 & 255) >>> 1; else $100 = HEAP32[$input + 4 >> 2] | 0;
    $99 = $100 + 1 | 0;
    if (!$99) $$0$i8 = 0; else $$0$i8 = _malloc($99) | 0;
    if ($94) $106 = $input + 1 | 0; else $106 = HEAP32[$input + 8 >> 2] | 0;
    _strcpy($$0$i8 | 0, $106 | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($input);
    $$0 = $$0$i8;
    HEAP32[$f >> 2] = 40852;
    HEAP32[$29 >> 2] = 40872;
    __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($28);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($27);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($abs_path);
    STACKTOP = sp;
    return $$0 | 0;
   } while (0);
   if ((label | 0) == 31) {
    $85 = ___cxa_find_matching_catch() | 0;
    $$01 = $85;
    $$02 = tempRet0;
   }
   HEAP32[$f >> 2] = 40852;
   HEAP32[$29 >> 2] = 40872;
   __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($28);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($27);
   $$1 = $$01;
   $$13 = $$02;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($abs_path);
   ___resumeException($$1 | 0);
  } while (0);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($27);
  $eh$lpad$body$index2Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 }
 $$1 = $eh$lpad$body$indexZ2D;
 $$13 = $eh$lpad$body$index2Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($abs_path);
 ___resumeException($$1 | 0);
 return 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__units) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0, $104 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $24 = 0, $29 = 0, $3 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $42 = 0, $49 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $68 = 0, $7 = 0, $76 = 0, $78 = 0, $79 = 0, $81 = 0, $83 = 0, $85 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $93 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 $$byval_copy = sp;
 $__buf = sp + 276 | 0;
 $__bb = sp + 68 | 0;
 $__digits = sp + 176 | 0;
 $__loc = sp + 64 | 0;
 $__pat = sp + 60 | 0;
 $__dp = sp + 173 | 0;
 $__ts = sp + 172 | 0;
 $__grp = sp + 48 | 0;
 $__sym = sp + 36 | 0;
 $__sn = sp + 24 | 0;
 $__fd = sp + 20 | 0;
 $__mbuf = sp + 72 | 0;
 $__mi = sp + 16 | 0;
 $__me = sp + 12 | 0;
 $0 = sp + 8 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[tempDoublePtr >> 3] = $__units;
 HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
 $1 = _snprintf($__buf, 100, 45552, $$byval_copy) | 0;
 do if ($1 >>> 0 > 99) {
  __THREW__ = 0;
  $3 = invoke_i(1) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $112 = 0;
   $113 = 0;
  } else {
   __THREW__ = 0;
   HEAPF64[tempDoublePtr >> 3] = $__units;
   HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
   $6 = invoke_iiiii(12, $__bb | 0, $3 | 0, 45552, $$byval_copy | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $112 = 0;
    $113 = 0;
   } else {
    $9 = HEAP32[$__bb >> 2] | 0;
    if (!$9) {
     __THREW__ = 0;
     invoke_v(5);
     $11 = __THREW__;
     __THREW__ = 0;
     if ($11 & 1) {
      $112 = 0;
      $113 = 0;
      break;
     }
     $114 = HEAP32[$__bb >> 2] | 0;
    } else $114 = $9;
    $15 = _malloc($6) | 0;
    if (!$15) {
     __THREW__ = 0;
     invoke_v(5);
     $17 = __THREW__;
     __THREW__ = 0;
     if ($17 & 1) {
      $112 = $114;
      $113 = 0;
     } else {
      $107 = 0;
      $108 = $114;
      $__db$0 = 0;
      $__n$0 = $6;
      label = 10;
     }
    } else {
     $107 = $15;
     $108 = $114;
     $__db$0 = $15;
     $__n$0 = $6;
     label = 10;
    }
   }
  }
 } else {
  $107 = 0;
  $108 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  __THREW__ = 0;
  invoke_vii(47, $__loc | 0, $__iob | 0);
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $112 = $108;
   $113 = $107;
  } else {
   __THREW__ = 0;
   $21 = invoke_iii(22, $__loc | 0, 45800) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) label = 35; else {
    $24 = HEAP32[$__bb >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[$21 >> 2] | 0) + 32 >> 2] | 0, $21 | 0, $24 | 0, $24 + $__n$0 | 0, $__db$0 | 0) | 0;
    $29 = __THREW__;
    __THREW__ = 0;
    if ($29 & 1) label = 35; else {
     if (!$__n$0) $35 = 0; else $35 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
     HEAP32[$__pat >> 2] = 0;
     HEAP32[$__grp + 0 >> 2] = 0;
     HEAP32[$__grp + 4 >> 2] = 0;
     HEAP32[$__grp + 8 >> 2] = 0;
     HEAP32[$__sym + 0 >> 2] = 0;
     HEAP32[$__sym + 4 >> 2] = 0;
     HEAP32[$__sym + 8 >> 2] = 0;
     HEAP32[$__sn + 0 >> 2] = 0;
     HEAP32[$__sn + 4 >> 2] = 0;
     HEAP32[$__sn + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiiiiiiiii(3, $__intl | 0, $35 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
     $36 = __THREW__;
     __THREW__ = 0;
     do if ($36 & 1) {
      $89 = ___cxa_find_matching_catch() | 0;
      $$0 = $89;
      $$01 = tempRet0;
     } else {
      $38 = HEAP32[$__fd >> 2] | 0;
      if (($__n$0 | 0) > ($38 | 0)) {
       $42 = HEAP8[$__sn >> 0] | 0;
       if (!($42 & 1)) $58 = ($42 & 255) >>> 1; else $58 = HEAP32[$__sn + 4 >> 2] | 0;
       $49 = HEAP8[$__sym >> 0] | 0;
       if (!($49 & 1)) $60 = ($49 & 255) >>> 1; else $60 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $58 + ($__n$0 - $38 << 1 | 1) + $60 | 0;
      } else {
       $61 = HEAP8[$__sn >> 0] | 0;
       if (!($61 & 1)) $76 = ($61 & 255) >>> 1; else $76 = HEAP32[$__sn + 4 >> 2] | 0;
       $68 = HEAP8[$__sym >> 0] | 0;
       if (!($68 & 1)) $78 = ($68 & 255) >>> 1; else $78 = HEAP32[$__sym + 4 >> 2] | 0;
       $$pn = $76 + 2 + $78 | 0;
      }
      $79 = $$pn + $38 | 0;
      if ($79 >>> 0 > 100) {
       $81 = _malloc($79) | 0;
       if (!$81) {
        __THREW__ = 0;
        invoke_v(5);
        $83 = __THREW__;
        __THREW__ = 0;
        if ($83 & 1) {
         $85 = ___cxa_find_matching_catch() | 0;
         $$0 = $85;
         $$01 = tempRet0;
         break;
        } else {
         $93 = 0;
         $__mb$0 = 0;
        }
       } else {
        $93 = $81;
        $__mb$0 = $81;
       }
      } else {
       $93 = 0;
       $__mb$0 = $__mbuf;
      }
      __THREW__ = 0;
      invoke_viiiiiiiiiiiiiii(1, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $__db$0 | 0, $__db$0 + $__n$0 | 0, $21 | 0, $35 | 0, $__pat | 0, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $38 | 0);
      $99 = __THREW__;
      __THREW__ = 0;
      if (!($99 & 1)) {
       HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
       $102 = HEAP32[$__mi >> 2] | 0;
       $103 = HEAP32[$__me >> 2] | 0;
       __THREW__ = 0;
       HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
       invoke_viiiiiii(39, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $102 | 0, $103 | 0, $__iob | 0, $__fl | 0);
       $104 = __THREW__;
       __THREW__ = 0;
       if (!($104 & 1)) {
        _free($93);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sn);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
        __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
        _free($107);
        _free($108);
        STACKTOP = sp;
        return;
       }
      }
      $91 = ___cxa_find_matching_catch() | 0;
      $92 = tempRet0;
      _free($93);
      $$0 = $91;
      $$01 = $92;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
     $$1 = $$0;
     $$12 = $$01;
    }
   }
   if ((label | 0) == 35) {
    $87 = ___cxa_find_matching_catch() | 0;
    $$1 = $87;
    $$12 = tempRet0;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
   $$2 = $$1;
   $$23 = $$12;
   $110 = $107;
   $111 = $108;
   _free($110);
   _free($111);
   ___resumeException($$2 | 0);
  }
 }
 $13 = ___cxa_find_matching_catch() | 0;
 $$2 = $13;
 $$23 = tempRet0;
 $110 = $113;
 $111 = $112;
 _free($110);
 _free($111);
 ___resumeException($$2 | 0);
}

function __Z22jsonnet_unparse_escapeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $str) {
 $agg$result = $agg$result | 0;
 $str = $str | 0;
 var $$0$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $37 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $60 = 0, $62 = 0, $66 = 0, $67 = 0, $72 = 0, $8 = 0, $85 = 0, $87 = 0, $90 = 0, $92 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $i$0 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $0 = sp + 144 | 0;
 $1 = sp + 157 | 0;
 $2 = sp + 156 | 0;
 $ss = sp;
 $3 = $ss + 64 | 0;
 $4 = $ss + 8 | 0;
 HEAP32[$4 >> 2] = 792;
 $5 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 940;
 HEAP32[$3 >> 2] = 960;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $5 | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $20;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 772;
 HEAP32[$3 >> 2] = 812;
 HEAP32[$4 >> 2] = 792;
 __THREW__ = 0;
 invoke_vi(179, $5 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 do if ($12 & 1) {
  $22 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $22;
 } else {
  HEAP32[$5 >> 2] = 1104;
  $14 = $ss + 44 | 0;
  HEAP32[$14 + 0 >> 2] = 0;
  HEAP32[$14 + 4 >> 2] = 0;
  HEAP32[$14 + 8 >> 2] = 0;
  HEAP32[$14 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $5 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
   $eh$lpad$body$i$index2Z2D = $19;
   $eh$lpad$body$i$indexZ2D = $18;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  $24 = $ss + 8 | 0;
  HEAP8[$2 >> 0] = 34;
  __THREW__ = 0;
  invoke_iiii(25, $24 | 0, $2 | 0, 1) | 0;
  $25 = __THREW__;
  __THREW__ = 0;
  if (!($25 & 1)) {
   $27 = $str + 1 | 0;
   $28 = $str + 8 | 0;
   $29 = $str + 4 | 0;
   $i$0 = 0;
   L12 : while (1) {
    $30 = HEAP8[$str >> 0] | 0;
    $32 = ($30 & 1) == 0;
    if ($32) $37 = ($30 & 255) >>> 1; else $37 = HEAP32[$29 >> 2] | 0;
    if ($i$0 >>> 0 >= $37 >>> 0) break;
    if ($32) $40 = $27; else $40 = HEAP32[$28 >> 2] | 0;
    $41 = HEAP8[$40 + $i$0 >> 0] | 0;
    L22 : do switch ($41 << 24 >> 24 | 0) {
    case 9:
     {
      __THREW__ = 0;
      invoke_iiii(25, $24 | 0, 33968, 2) | 0;
      $60 = __THREW__;
      __THREW__ = 0;
      if ($60 & 1) {
       label = 18;
       break L12;
      }
      break;
     }
    case 0:
     {
      __THREW__ = 0;
      invoke_iiii(25, $24 | 0, 33976, 6) | 0;
      $62 = __THREW__;
      __THREW__ = 0;
      if ($62 & 1) {
       label = 18;
       break L12;
      }
      break;
     }
    case 8:
     {
      __THREW__ = 0;
      invoke_iiii(25, $24 | 0, 33936, 2) | 0;
      $52 = __THREW__;
      __THREW__ = 0;
      if ($52 & 1) {
       label = 18;
       break L12;
      }
      break;
     }
    case 12:
     {
      __THREW__ = 0;
      invoke_iiii(25, $24 | 0, 33944, 2) | 0;
      $54 = __THREW__;
      __THREW__ = 0;
      if ($54 & 1) {
       label = 18;
       break L12;
      }
      break;
     }
    case 34:
     {
      __THREW__ = 0;
      invoke_iiii(25, $24 | 0, 33920, 2) | 0;
      $48 = __THREW__;
      __THREW__ = 0;
      if ($48 & 1) {
       label = 18;
       break L12;
      }
      break;
     }
    case 10:
     {
      __THREW__ = 0;
      invoke_iiii(25, $24 | 0, 33952, 2) | 0;
      $56 = __THREW__;
      __THREW__ = 0;
      if ($56 & 1) {
       label = 18;
       break L12;
      }
      break;
     }
    case 13:
     {
      __THREW__ = 0;
      invoke_iiii(25, $24 | 0, 33960, 2) | 0;
      $58 = __THREW__;
      __THREW__ = 0;
      if ($58 & 1) {
       label = 18;
       break L12;
      }
      break;
     }
    case 92:
     {
      __THREW__ = 0;
      invoke_iiii(25, $24 | 0, 33928, 2) | 0;
      $50 = __THREW__;
      __THREW__ = 0;
      if ($50 & 1) {
       label = 18;
       break L12;
      }
      break;
     }
    default:
     {
      if (!($41 << 24 >> 24 < 32 | $41 << 24 >> 24 == 127)) {
       HEAP8[$1 >> 0] = $41;
       __THREW__ = 0;
       invoke_iiii(25, $24 | 0, $1 | 0, 1) | 0;
       $87 = __THREW__;
       __THREW__ = 0;
       if ($87 & 1) {
        label = 18;
        break L12;
       } else break L22;
      }
      __THREW__ = 0;
      $66 = invoke_iiii(25, $24 | 0, 33984, 2) | 0;
      $67 = __THREW__;
      __THREW__ = 0;
      if ($67 & 1) {
       label = 18;
       break L12;
      }
      $72 = $66 + ((HEAP32[(HEAP32[$66 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
      HEAP32[$72 >> 2] = HEAP32[$72 >> 2] & -75 | 8;
      HEAP32[$66 + ((HEAP32[(HEAP32[$66 >> 2] | 0) + -12 >> 2] | 0) + 76) >> 2] = 48;
      HEAP32[$66 + ((HEAP32[(HEAP32[$66 >> 2] | 0) + -12 >> 2] | 0) + 12) >> 2] = 4;
      __THREW__ = 0;
      invoke_iii(24, $66 | 0, $41 & 255 | 0) | 0;
      $85 = __THREW__;
      __THREW__ = 0;
      if ($85 & 1) {
       label = 18;
       break L12;
      }
     }
    } while (0);
    $i$0 = $i$0 + 1 | 0;
   }
   if ((label | 0) == 18) {
    $43 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $43;
    $lpad$phi$index7 = tempRet0;
    HEAP32[$ss >> 2] = 772;
    $47 = $ss + 64 | 0;
    HEAP32[$47 >> 2] = 812;
    HEAP32[$4 >> 2] = 792;
    HEAP32[$5 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
    ___resumeException($lpad$phi$index | 0);
   }
   HEAP8[$0 >> 0] = 34;
   __THREW__ = 0;
   invoke_iiii(25, $24 | 0, $0 | 0, 1) | 0;
   $90 = __THREW__;
   __THREW__ = 0;
   if (!($90 & 1)) {
    __THREW__ = 0;
    invoke_vii(43, $agg$result | 0, $5 | 0);
    $92 = __THREW__;
    __THREW__ = 0;
    if (!($92 & 1)) {
     HEAP32[$ss >> 2] = 772;
     HEAP32[$ss + 64 >> 2] = 812;
     HEAP32[$4 >> 2] = 792;
     HEAP32[$5 >> 2] = 1104;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
     STACKTOP = sp;
     return;
    }
   }
  }
  $45 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $45;
  $lpad$phi$index7 = tempRet0;
  HEAP32[$ss >> 2] = 772;
  $47 = $ss + 64 | 0;
  HEAP32[$47 >> 2] = 812;
  HEAP32[$4 >> 2] = 792;
  HEAP32[$5 >> 2] = 1104;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($14);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  ___resumeException($lpad$phi$index | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 ___resumeException($$01$i | 0);
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $49 = 0, $6 = 0, $61 = 0, $62 = 0, $63 = 0, $66 = 0, $69 = 0, $72 = 0, $79 = 0, $80 = 0, $81 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off012 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off014 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $is_dst_type_derived_from_static_type$2$off023 = 0, $is_dst_type_derived_from_static_type$2$off024 = 0, $p$013 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
   STACKTOP = sp;
   return;
  }
  $6 = $info + 28 | 0;
  if ((HEAP32[$6 >> 2] | 0) == 1) {
   STACKTOP = sp;
   return;
  }
  HEAP32[$6 >> 2] = $path_below;
  STACKTOP = sp;
  return;
 }
 if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
  $61 = HEAP32[$this + 12 >> 2] | 0;
  $62 = $this + ($61 << 3) + 16 | 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this + 16 | 0, $info, $current_ptr, $path_below, $use_strcmp);
  $63 = $this + 24 | 0;
  if (($61 | 0) <= 1) {
   STACKTOP = sp;
   return;
  }
  $66 = HEAP32[$this + 8 >> 2] | 0;
  if (!($66 & 2)) {
   $69 = $info + 36 | 0;
   if ((HEAP32[$69 >> 2] | 0) != 1) {
    if (!($66 & 1)) {
     $81 = $info + 54 | 0;
     $p2$2 = $63;
     while (1) {
      if (HEAP8[$81 >> 0] | 0) {
       label = 43;
       break;
      }
      if ((HEAP32[$69 >> 2] | 0) == 1) {
       label = 43;
       break;
      }
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2, $info, $current_ptr, $path_below, $use_strcmp);
      $p2$2 = $p2$2 + 8 | 0;
      if ($p2$2 >>> 0 >= $62 >>> 0) {
       label = 43;
       break;
      }
     }
     if ((label | 0) == 43) {
      STACKTOP = sp;
      return;
     }
    }
    $79 = $info + 24 | 0;
    $80 = $info + 54 | 0;
    $p2$1 = $63;
    while (1) {
     if (HEAP8[$80 >> 0] | 0) {
      label = 43;
      break;
     }
     if ((HEAP32[$69 >> 2] | 0) == 1) if ((HEAP32[$79 >> 2] | 0) == 1) {
      label = 43;
      break;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1, $info, $current_ptr, $path_below, $use_strcmp);
     $p2$1 = $p2$1 + 8 | 0;
     if ($p2$1 >>> 0 >= $62 >>> 0) {
      label = 43;
      break;
     }
    }
    if ((label | 0) == 43) {
     STACKTOP = sp;
     return;
    }
   }
  }
  $72 = $info + 54 | 0;
  $p2$0 = $63;
  while (1) {
   if (HEAP8[$72 >> 0] | 0) {
    label = 43;
    break;
   }
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0, $info, $current_ptr, $path_below, $use_strcmp);
   $p2$0 = $p2$0 + 8 | 0;
   if ($p2$0 >>> 0 >= $62 >>> 0) {
    label = 43;
    break;
   }
  }
  if ((label | 0) == 43) {
   STACKTOP = sp;
   return;
  }
 }
 if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
  $14 = $info + 20 | 0;
  if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
   HEAP32[$info + 32 >> 2] = $path_below;
   $20 = $info + 44 | 0;
   if ((HEAP32[$20 >> 2] | 0) == 4) {
    STACKTOP = sp;
    return;
   }
   $24 = HEAP32[$this + 12 >> 2] | 0;
   $25 = $this + ($24 << 3) + 16 | 0;
   L54 : do if (($24 | 0) > 0) {
    $28 = $info + 52 | 0;
    $29 = $info + 53 | 0;
    $30 = $info + 54 | 0;
    $31 = $this + 8 | 0;
    $32 = $info + 24 | 0;
    $does_dst_type_point_to_our_static_type$0$off012 = 0;
    $is_dst_type_derived_from_static_type$0$off014 = 0;
    $p$013 = $this + 16 | 0;
    L56 : while (1) {
     HEAP8[$28 >> 0] = 0;
     HEAP8[$29 >> 0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$013, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
     if (HEAP8[$30 >> 0] | 0) {
      $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off012;
      $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off014;
      break;
     }
     do if (!(HEAP8[$29 >> 0] | 0)) {
      $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off012;
      $is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off014;
     } else {
      if (!(HEAP8[$28 >> 0] | 0)) if (!(HEAP32[$31 >> 2] & 1)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off012;
       $is_dst_type_derived_from_static_type$2$off0 = 1;
       break L56;
      } else {
       $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off012;
       $is_dst_type_derived_from_static_type$1$off0 = 1;
       break;
      }
      if ((HEAP32[$32 >> 2] | 0) == 1) {
       label = 25;
       break L54;
      }
      if (!(HEAP32[$31 >> 2] & 2)) {
       label = 25;
       break L54;
      } else {
       $does_dst_type_point_to_our_static_type$1$off0 = 1;
       $is_dst_type_derived_from_static_type$1$off0 = 1;
      }
     } while (0);
     $p$013 = $p$013 + 8 | 0;
     if ($p$013 >>> 0 >= $25 >>> 0) {
      $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;
      $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
      break;
     } else {
      $does_dst_type_point_to_our_static_type$0$off012 = $does_dst_type_point_to_our_static_type$1$off0;
      $is_dst_type_derived_from_static_type$0$off014 = $is_dst_type_derived_from_static_type$1$off0;
     }
    }
    if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
     $is_dst_type_derived_from_static_type$2$off024 = $is_dst_type_derived_from_static_type$2$off0;
     label = 24;
    } else {
     $is_dst_type_derived_from_static_type$2$off023 = $is_dst_type_derived_from_static_type$2$off0;
     label = 21;
    }
   } else {
    $is_dst_type_derived_from_static_type$2$off023 = 0;
    label = 21;
   } while (0);
   if ((label | 0) == 21) {
    HEAP32[$14 >> 2] = $current_ptr;
    $49 = $info + 40 | 0;
    HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 1;
    if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
     HEAP8[$info + 54 >> 0] = 1;
     if ($is_dst_type_derived_from_static_type$2$off023) label = 25; else label = 26;
    } else {
     $is_dst_type_derived_from_static_type$2$off024 = $is_dst_type_derived_from_static_type$2$off023;
     label = 24;
    } else {
     $is_dst_type_derived_from_static_type$2$off024 = $is_dst_type_derived_from_static_type$2$off023;
     label = 24;
    }
   }
   if ((label | 0) == 24) if ($is_dst_type_derived_from_static_type$2$off024) label = 25; else label = 26;
   if ((label | 0) == 25) {
    HEAP32[$20 >> 2] = 3;
    STACKTOP = sp;
    return;
   } else if ((label | 0) == 26) {
    HEAP32[$20 >> 2] = 4;
    STACKTOP = sp;
    return;
   }
  }
 }
 if (($path_below | 0) != 1) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$info + 32 >> 2] = 1;
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $from) {
 $this = $this | 0;
 $from = $from | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i29 = 0, $$0$i$i$i$i46 = 0, $$0$i$i$i$i61 = 0, $$0$i$i$i$i9 = 0, $$0$i$i$i11 = 0, $$0$i$i$i31 = 0, $$0$i$i$i48 = 0, $$0$i$i$i63 = 0, $$01$i$i$i = 0, $$01$i$i$i13 = 0, $$01$i$i$i33 = 0, $$01$i$i$i50 = 0, $$01$i$i$i65 = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i17 = 0, $$idx$val$i176774 = 0, $$idx$val$i42 = 0, $$idx$val$i44 = 0, $$idx$val$i59 = 0, $$idx$val$i6879 = 0, $$idx1$val = 0, $1 = 0, $109 = 0, $112 = 0, $115 = 0, $117 = 0, $12 = 0, $120 = 0, $125 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $32 = 0, $35 = 0, $40 = 0, $42 = 0, $45 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $58 = 0, $61 = 0, $65 = 0, $69 = 0, $7 = 0, $74 = 0, $77 = 0, $80 = 0, $83 = 0, $86 = 0, $88 = 0, $9 = 0, $91 = 0, $96 = 0, $98 = 0, $from$tr$be = 0, $from$tr99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (!$from) ___assert_fail(40128, 40144, 320, 40160);
 $1 = $this + 16 | 0;
 $from$tr99 = $from;
 L4 : while (1) {
  $5 = $from$tr99 + 4 | 0;
  $7 = (HEAPU8[$1 >> 0] | 0) + 1 & 255;
  if ((HEAP8[$5 >> 0] | 0) == $7 << 24 >> 24) {
   label = 54;
   break;
  }
  HEAP8[$5 >> 0] = $7;
  $9 = ___dynamic_cast($from$tr99, 37448, 37528, 0) | 0;
  if ($9) {
   label = 6;
   break;
  }
  $26 = ___dynamic_cast($from$tr99, 37448, 37792, 0) | 0;
  do if (!$26) {
   $32 = ___dynamic_cast($from$tr99, 37448, 37912, 0) | 0;
   if ($32) {
    label = 15;
    break L4;
   }
   $65 = ___dynamic_cast($from$tr99, 37448, 37848, 0) | 0;
   if ($65) {
    $from$tr$be = HEAP32[$65 + 8 >> 2] | 0;
    break;
   }
   $69 = ___dynamic_cast($from$tr99, 37448, 40208, 0) | 0;
   if ($69) {
    label = 30;
    break L4;
   }
   $77 = ___dynamic_cast($from$tr99, 37448, 40256, 0) | 0;
   if ($77) {
    $$idx$val$i42 = HEAP32[$77 + 8 >> 2] | 0;
    $80 = $77 + 12 | 0;
    if (($$idx$val$i42 | 0) != ($80 | 0)) {
     $83 = $$idx$val$i42;
     while (1) {
      __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$83 + 20 >> 2] | 0);
      $86 = HEAP32[$83 + 4 >> 2] | 0;
      if (!$86) {
       $$0$i$i$i31 = $83;
       while (1) {
        $91 = HEAP32[$$0$i$i$i31 + 8 >> 2] | 0;
        if ((HEAP32[$91 >> 2] | 0) == ($$0$i$i$i31 | 0)) {
         $$01$i$i$i33 = $91;
         break;
        } else $$0$i$i$i31 = $91;
       }
      } else {
       $$0$i$i$i$i29 = $86;
       while (1) {
        $88 = HEAP32[$$0$i$i$i$i29 >> 2] | 0;
        if (!$88) {
         $$01$i$i$i33 = $$0$i$i$i$i29;
         break;
        } else $$0$i$i$i$i29 = $88;
       }
      }
      if (($$01$i$i$i33 | 0) == ($80 | 0)) break; else $83 = $$01$i$i$i33;
     }
    }
    $96 = HEAP32[$77 + 20 >> 2] | 0;
    if (!$96) {
     label = 54;
     break L4;
    }
    $from$tr$be = $96;
    break;
   }
   $98 = ___dynamic_cast($from$tr99, 37448, 37608, 0) | 0;
   if (!$98) {
    label = 54;
    break L4;
   }
   if (HEAP8[$98 + 5 >> 0] | 0) {
    if (!(HEAP32[$98 + 8 >> 2] & 16)) {
     label = 54;
     break L4;
    }
    $from$tr$be = HEAP32[$98 + 16 >> 2] | 0;
    break;
   }
   $$idx$val$i44 = HEAP32[$98 + 28 >> 2] | 0;
   $109 = $98 + 32 | 0;
   if (($$idx$val$i44 | 0) != ($109 | 0)) {
    $112 = $$idx$val$i44;
    while (1) {
     __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$112 + 20 >> 2] | 0);
     $115 = HEAP32[$112 + 4 >> 2] | 0;
     if (!$115) {
      $$0$i$i$i = $112;
      while (1) {
       $120 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$120 >> 2] | 0) == ($$0$i$i$i | 0)) {
        $$01$i$i$i = $120;
        break;
       } else $$0$i$i$i = $120;
      }
     } else {
      $$0$i$i$i$i = $115;
      while (1) {
       $117 = HEAP32[$$0$i$i$i$i >> 2] | 0;
       if (!$117) {
        $$01$i$i$i = $$0$i$i$i$i;
        break;
       } else $$0$i$i$i$i = $117;
      }
     }
     if (($$01$i$i$i | 0) == ($109 | 0)) break; else $112 = $$01$i$i$i;
    }
   }
   $125 = HEAP32[$98 + 40 >> 2] | 0;
   if (!$125) {
    label = 54;
    break L4;
   }
   $from$tr$be = $125;
  } else {
   __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$26 + 8 >> 2] | 0);
   $from$tr$be = HEAP32[$26 + 12 >> 2] | 0;
  } while (0);
  if (!$from$tr$be) {
   label = 3;
   break;
  } else $from$tr99 = $from$tr$be;
 }
 if ((label | 0) == 3) ___assert_fail(40128, 40144, 320, 40160); else if ((label | 0) == 6) {
  $$idx$val$i = HEAP32[$9 + 8 >> 2] | 0;
  $12 = $9 + 12 | 0;
  if (($$idx$val$i | 0) == ($12 | 0)) {
   STACKTOP = sp;
   return;
  } else $$idx$val$i6879 = $$idx$val$i;
  while (1) {
   __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$$idx$val$i6879 + 20 >> 2] | 0);
   $17 = HEAP32[$$idx$val$i6879 + 4 >> 2] | 0;
   if (!$17) {
    $$0$i$i$i11 = $$idx$val$i6879;
    while (1) {
     $22 = HEAP32[$$0$i$i$i11 + 8 >> 2] | 0;
     if ((HEAP32[$22 >> 2] | 0) == ($$0$i$i$i11 | 0)) {
      $$01$i$i$i13 = $22;
      break;
     } else $$0$i$i$i11 = $22;
    }
   } else {
    $$0$i$i$i$i9 = $17;
    while (1) {
     $19 = HEAP32[$$0$i$i$i$i9 >> 2] | 0;
     if (!$19) {
      $$01$i$i$i13 = $$0$i$i$i$i9;
      break;
     } else $$0$i$i$i$i9 = $19;
    }
   }
   if (($$01$i$i$i13 | 0) == ($12 | 0)) break; else $$idx$val$i6879 = $$01$i$i$i13;
  }
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 15) {
  $$idx$val$i17 = HEAP32[$32 + 8 >> 2] | 0;
  $35 = $32 + 12 | 0;
  if (($$idx$val$i17 | 0) != ($35 | 0)) {
   $$idx$val$i176774 = $$idx$val$i17;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$$idx$val$i176774 + 20 >> 2] | 0);
    $40 = HEAP32[$$idx$val$i176774 + 4 >> 2] | 0;
    if (!$40) {
     $$0$i$i$i63 = $$idx$val$i176774;
     while (1) {
      $45 = HEAP32[$$0$i$i$i63 + 8 >> 2] | 0;
      if ((HEAP32[$45 >> 2] | 0) == ($$0$i$i$i63 | 0)) {
       $$01$i$i$i65 = $45;
       break;
      } else $$0$i$i$i63 = $45;
     }
    } else {
     $$0$i$i$i$i61 = $40;
     while (1) {
      $42 = HEAP32[$$0$i$i$i$i61 >> 2] | 0;
      if (!$42) {
       $$01$i$i$i65 = $$0$i$i$i$i61;
       break;
      } else $$0$i$i$i$i61 = $42;
     }
    }
    if (($$01$i$i$i65 | 0) == ($35 | 0)) break; else $$idx$val$i176774 = $$01$i$i$i65;
   }
  }
  $$idx$val$i59 = HEAP32[$32 + 28 >> 2] | 0;
  $50 = $32 + 32 | 0;
  if (($$idx$val$i59 | 0) == ($50 | 0)) {
   STACKTOP = sp;
   return;
  } else $53 = $$idx$val$i59;
  while (1) {
   __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$53 + 20 >> 2] | 0);
   $56 = HEAP32[$53 + 4 >> 2] | 0;
   if (!$56) {
    $$0$i$i$i48 = $53;
    while (1) {
     $61 = HEAP32[$$0$i$i$i48 + 8 >> 2] | 0;
     if ((HEAP32[$61 >> 2] | 0) == ($$0$i$i$i48 | 0)) {
      $$01$i$i$i50 = $61;
      break;
     } else $$0$i$i$i48 = $61;
    }
   } else {
    $$0$i$i$i$i46 = $56;
    while (1) {
     $58 = HEAP32[$$0$i$i$i$i46 >> 2] | 0;
     if (!$58) {
      $$01$i$i$i50 = $$0$i$i$i$i46;
      break;
     } else $$0$i$i$i$i46 = $58;
    }
   }
   if (($$01$i$i$i50 | 0) == ($50 | 0)) break; else $53 = $$01$i$i$i50;
  }
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 30) {
  $$idx$val = HEAP32[$69 + 8 >> 2] | 0;
  $$idx1$val = HEAP32[$69 + 12 >> 2] | 0;
  if (($$idx$val | 0) == ($$idx1$val | 0)) {
   STACKTOP = sp;
   return;
  } else $74 = $$idx$val;
  do {
   __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$74 >> 2] | 0);
   $74 = $74 + 4 | 0;
  } while (($74 | 0) != ($$idx1$val | 0));
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 54) {
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$0155 = 0, $$0254 = 0, $$1$lcssa = 0, $$115 = 0, $$2 = 0, $$pre114 = 0, $0 = 0, $100 = 0, $102 = 0, $104 = 0, $13 = 0, $14 = 0, $18 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $39 = 0, $46 = 0, $47 = 0, $48 = 0, $51 = 0, $53 = 0, $55 = 0, $58 = 0, $6 = 0, $60 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $76 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $86 = 0, $88 = 0, $94 = 0, $fend$0$lcssa = 0, $fend$061 = 0, $fend$156 = 0, $fend$2$lcssa = 0, $fend$216 = 0, $fend$3 = 0, $save_state = 0, $storemerge14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 $0 = ($frm | 0) == ($frm_end | 0);
 L1 : do if ($0) {
  HEAP32[$to_nxt >> 2] = $to;
  HEAP32[$frm_nxt >> 2] = $frm;
  $104 = $frm;
 } else {
  $fend$061 = $frm;
  while (1) {
   if (!(HEAP8[$fend$061 >> 0] | 0)) {
    $fend$0$lcssa = $fend$061;
    break;
   }
   $fend$061 = $fend$061 + 1 | 0;
   if (($fend$061 | 0) == ($frm_end | 0)) {
    $fend$0$lcssa = $frm_end;
    break;
   }
  }
  HEAP32[$to_nxt >> 2] = $to;
  HEAP32[$frm_nxt >> 2] = $frm;
  if ($0 | ($to | 0) == ($to_end | 0)) $104 = $frm; else {
   $6 = $to_end;
   $7 = $this + 8 | 0;
   $$0155 = $frm;
   $$0254 = $to;
   $fend$156 = $fend$0$lcssa;
   while (1) {
    $8 = $st;
    $13 = HEAP32[$8 + 4 >> 2] | 0;
    $14 = $save_state;
    HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
    HEAP32[$14 + 4 >> 2] = $13;
    $18 = $fend$156;
    $25 = _uselocale(HEAP32[$7 >> 2] | 0) | 0;
    __THREW__ = 0;
    $26 = invoke_iiiiii(16, $$0254 | 0, $frm_nxt | 0, $18 - $$0155 | 0, $6 - $$0254 >> 2 | 0, $st | 0) | 0;
    $27 = __THREW__;
    __THREW__ = 0;
    if ($27 & 1) {
     label = 11;
     break;
    }
    if ($25) {
     __THREW__ = 0;
     invoke_ii(75, $25 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 10;
      break;
     }
    }
    if (($26 | 0) == -1) {
     label = 16;
     break;
    } else if (!$26) {
     $$0 = 2;
     label = 50;
     break;
    }
    $70 = (HEAP32[$to_nxt >> 2] | 0) + ($26 << 2) | 0;
    HEAP32[$to_nxt >> 2] = $70;
    if (($70 | 0) == ($to_end | 0)) {
     label = 48;
     break;
    }
    $$pre114 = HEAP32[$frm_nxt >> 2] | 0;
    if (($fend$156 | 0) == ($frm_end | 0)) {
     $100 = $$pre114;
     $102 = $70;
     $fend$3 = $frm_end;
    } else {
     $74 = _uselocale(HEAP32[$7 >> 2] | 0) | 0;
     __THREW__ = 0;
     $75 = invoke_iiiii(15, $70 | 0, $$pre114 | 0, 1, $st | 0) | 0;
     $76 = __THREW__;
     __THREW__ = 0;
     if ($76 & 1) {
      label = 38;
      break;
     }
     if ($74) {
      __THREW__ = 0;
      invoke_ii(75, $74 | 0) | 0;
      $79 = __THREW__;
      __THREW__ = 0;
      if ($79 & 1) {
       label = 37;
       break;
      }
     }
     if ($75) {
      $$0 = 2;
      label = 50;
      break;
     }
     HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 4;
     $94 = (HEAP32[$frm_nxt >> 2] | 0) + 1 | 0;
     HEAP32[$frm_nxt >> 2] = $94;
     L23 : do if (($94 | 0) == ($frm_end | 0)) $fend$2$lcssa = $frm_end; else {
      $fend$216 = $94;
      while (1) {
       if (!(HEAP8[$fend$216 >> 0] | 0)) {
        $fend$2$lcssa = $fend$216;
        break L23;
       }
       $fend$216 = $fend$216 + 1 | 0;
       if (($fend$216 | 0) == ($frm_end | 0)) {
        $fend$2$lcssa = $frm_end;
        break;
       }
      }
     } while (0);
     $100 = $94;
     $102 = HEAP32[$to_nxt >> 2] | 0;
     $fend$3 = $fend$2$lcssa;
    }
    if (($100 | 0) == ($frm_end | 0) | ($102 | 0) == ($to_end | 0)) {
     $104 = $100;
     break L1;
    } else {
     $$0155 = $100;
     $$0254 = $102;
     $fend$156 = $fend$3;
    }
   }
   if ((label | 0) == 10) {
    $32 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($32);
   } else if ((label | 0) == 11) {
    $34 = ___cxa_find_matching_catch() | 0;
    if (!$25) ___resumeException($34 | 0);
    __THREW__ = 0;
    invoke_ii(75, $25 | 0) | 0;
    $37 = __THREW__;
    __THREW__ = 0;
    if ($37 & 1) {
     $39 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($39);
    } else ___resumeException($34 | 0);
   } else if ((label | 0) == 16) {
    HEAP32[$to_nxt >> 2] = $$0254;
    L33 : do if (($$0155 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) $$1$lcssa = $$0155; else {
     $$115 = $$0155;
     $storemerge14 = $$0254;
     while (1) {
      $46 = _uselocale(HEAP32[$7 >> 2] | 0) | 0;
      __THREW__ = 0;
      $47 = invoke_iiiii(15, $storemerge14 | 0, $$115 | 0, $18 - $$115 | 0, $save_state | 0) | 0;
      $48 = __THREW__;
      __THREW__ = 0;
      if ($48 & 1) {
       label = 21;
       break;
      }
      if ($46) {
       __THREW__ = 0;
       invoke_ii(75, $46 | 0) | 0;
       $51 = __THREW__;
       __THREW__ = 0;
       if ($51 & 1) {
        label = 20;
        break;
       }
      }
      if (($47 | 0) == -1) {
       label = 27;
       break;
      } else if (!$47) $$2 = $$115 + 1 | 0; else if (($47 | 0) == -2) {
       label = 28;
       break;
      } else $$2 = $$115 + $47 | 0;
      $storemerge14 = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
      HEAP32[$to_nxt >> 2] = $storemerge14;
      if (($$2 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
       $$1$lcssa = $$2;
       break L33;
      } else $$115 = $$2;
     }
     if ((label | 0) == 20) {
      $53 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($53);
     } else if ((label | 0) == 21) {
      $55 = ___cxa_find_matching_catch() | 0;
      if (!$46) ___resumeException($55 | 0);
      __THREW__ = 0;
      invoke_ii(75, $46 | 0) | 0;
      $58 = __THREW__;
      __THREW__ = 0;
      if ($58 & 1) {
       $60 = ___cxa_find_matching_catch(0) | 0;
       ___clang_call_terminate($60);
      } else ___resumeException($55 | 0);
     } else if ((label | 0) == 27) {
      HEAP32[$frm_nxt >> 2] = $$115;
      $$0 = 2;
      STACKTOP = sp;
      return $$0 | 0;
     } else if ((label | 0) == 28) {
      HEAP32[$frm_nxt >> 2] = $$115;
      $$0 = 1;
      STACKTOP = sp;
      return $$0 | 0;
     }
    } while (0);
    HEAP32[$frm_nxt >> 2] = $$1$lcssa;
    $$0 = ($$1$lcssa | 0) != ($frm_end | 0) & 1;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 37) {
    $81 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($81);
   } else if ((label | 0) == 38) {
    $83 = ___cxa_find_matching_catch() | 0;
    if (!$74) ___resumeException($83 | 0);
    __THREW__ = 0;
    invoke_ii(75, $74 | 0) | 0;
    $86 = __THREW__;
    __THREW__ = 0;
    if ($86 & 1) {
     $88 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($88);
    } else ___resumeException($83 | 0);
   } else if ((label | 0) == 48) {
    $104 = HEAP32[$frm_nxt >> 2] | 0;
    break;
   } else if ((label | 0) == 50) {
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 } while (0);
 $$0 = ($104 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$0148 = 0, $$0247 = 0, $$1$lcssa = 0, $$19 = 0, $0 = 0, $102 = 0, $108 = 0, $110 = 0, $112 = 0, $13 = 0, $14 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $39 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $51 = 0, $53 = 0, $55 = 0, $58 = 0, $6 = 0, $60 = 0, $65 = 0, $69 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $85 = 0, $87 = 0, $90 = 0, $95 = 0, $97 = 0, $98 = 0, $fend$0$lcssa = 0, $fend$054 = 0, $fend$149 = 0, $fend$2$lcssa = 0, $fend$215 = 0, $fend$3 = 0, $n$011 = 0, $p$012 = 0, $save_state = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 $tmp = sp + 8 | 0;
 $0 = ($frm | 0) == ($frm_end | 0);
 L1 : do if ($0) {
  HEAP32[$to_nxt >> 2] = $to;
  HEAP32[$frm_nxt >> 2] = $frm;
  $112 = $frm;
 } else {
  $fend$054 = $frm;
  while (1) {
   if (!(HEAP32[$fend$054 >> 2] | 0)) {
    $fend$0$lcssa = $fend$054;
    break;
   }
   $fend$054 = $fend$054 + 4 | 0;
   if (($fend$054 | 0) == ($frm_end | 0)) {
    $fend$0$lcssa = $frm_end;
    break;
   }
  }
  HEAP32[$to_nxt >> 2] = $to;
  HEAP32[$frm_nxt >> 2] = $frm;
  if ($0 | ($to | 0) == ($to_end | 0)) $112 = $frm; else {
   $6 = $to_end;
   $7 = $this + 8 | 0;
   $$0148 = $frm;
   $$0247 = $to;
   $fend$149 = $fend$0$lcssa;
   while (1) {
    $8 = $st;
    $13 = HEAP32[$8 + 4 >> 2] | 0;
    $14 = $save_state;
    HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
    HEAP32[$14 + 4 >> 2] = $13;
    $25 = _uselocale(HEAP32[$7 >> 2] | 0) | 0;
    __THREW__ = 0;
    $26 = invoke_iiiiii(15, $$0247 | 0, $frm_nxt | 0, $fend$149 - $$0148 >> 2 | 0, $6 - $$0247 | 0, $st | 0) | 0;
    $27 = __THREW__;
    __THREW__ = 0;
    if ($27 & 1) {
     label = 11;
     break;
    }
    if ($25) {
     __THREW__ = 0;
     invoke_ii(75, $25 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 10;
      break;
     }
    }
    if (($26 | 0) == -1) {
     label = 16;
     break;
    } else if (!$26) {
     $$0 = 1;
     label = 51;
     break;
    }
    $69 = (HEAP32[$to_nxt >> 2] | 0) + $26 | 0;
    HEAP32[$to_nxt >> 2] = $69;
    if (($69 | 0) == ($to_end | 0)) {
     label = 49;
     break;
    }
    if (($fend$149 | 0) == ($frm_end | 0)) {
     $108 = HEAP32[$frm_nxt >> 2] | 0;
     $110 = $69;
     $fend$3 = $frm_end;
    } else {
     $73 = _uselocale(HEAP32[$7 >> 2] | 0) | 0;
     __THREW__ = 0;
     $74 = invoke_iiii(38, $tmp | 0, 0, $st | 0) | 0;
     $75 = __THREW__;
     __THREW__ = 0;
     if ($75 & 1) {
      label = 35;
      break;
     }
     if ($73) {
      __THREW__ = 0;
      invoke_ii(75, $73 | 0) | 0;
      $78 = __THREW__;
      __THREW__ = 0;
      if ($78 & 1) {
       label = 34;
       break;
      }
     }
     if (($74 | 0) == -1) {
      $$0 = 2;
      label = 51;
      break;
     }
     $90 = HEAP32[$to_nxt >> 2] | 0;
     if ($74 >>> 0 > ($6 - $90 | 0) >>> 0) {
      $$0 = 1;
      label = 51;
      break;
     }
     L24 : do if ($74) {
      $97 = $90;
      $n$011 = $74;
      $p$012 = $tmp;
      while (1) {
       $95 = HEAP8[$p$012 >> 0] | 0;
       HEAP32[$to_nxt >> 2] = $97 + 1;
       HEAP8[$97 >> 0] = $95;
       $98 = $n$011 + -1 | 0;
       if (!$98) break L24;
       $97 = HEAP32[$to_nxt >> 2] | 0;
       $n$011 = $98;
       $p$012 = $p$012 + 1 | 0;
      }
     } while (0);
     $102 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
     HEAP32[$frm_nxt >> 2] = $102;
     L29 : do if (($102 | 0) == ($frm_end | 0)) $fend$2$lcssa = $frm_end; else {
      $fend$215 = $102;
      while (1) {
       if (!(HEAP32[$fend$215 >> 2] | 0)) {
        $fend$2$lcssa = $fend$215;
        break L29;
       }
       $fend$215 = $fend$215 + 4 | 0;
       if (($fend$215 | 0) == ($frm_end | 0)) {
        $fend$2$lcssa = $frm_end;
        break;
       }
      }
     } while (0);
     $108 = $102;
     $110 = HEAP32[$to_nxt >> 2] | 0;
     $fend$3 = $fend$2$lcssa;
    }
    if (($108 | 0) == ($frm_end | 0) | ($110 | 0) == ($to_end | 0)) {
     $112 = $108;
     break L1;
    } else {
     $$0148 = $108;
     $$0247 = $110;
     $fend$149 = $fend$3;
    }
   }
   if ((label | 0) == 10) {
    $32 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($32);
   } else if ((label | 0) == 11) {
    $34 = ___cxa_find_matching_catch() | 0;
    if (!$25) ___resumeException($34 | 0);
    __THREW__ = 0;
    invoke_ii(75, $25 | 0) | 0;
    $37 = __THREW__;
    __THREW__ = 0;
    if ($37 & 1) {
     $39 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($39);
    } else ___resumeException($34 | 0);
   } else if ((label | 0) == 16) {
    HEAP32[$to_nxt >> 2] = $$0247;
    L41 : do if (($$0148 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) $$1$lcssa = $$0148; else {
     $$19 = $$0148;
     $46 = $$0247;
     while (1) {
      $43 = HEAP32[$$19 >> 2] | 0;
      $45 = _uselocale(HEAP32[$7 >> 2] | 0) | 0;
      __THREW__ = 0;
      $47 = invoke_iiii(38, $46 | 0, $43 | 0, $save_state | 0) | 0;
      $48 = __THREW__;
      __THREW__ = 0;
      if ($48 & 1) break;
      if ($45) {
       __THREW__ = 0;
       invoke_ii(75, $45 | 0) | 0;
       $51 = __THREW__;
       __THREW__ = 0;
       if ($51 & 1) {
        label = 20;
        break;
       }
      }
      if (($47 | 0) == -1) {
       $$1$lcssa = $$19;
       break L41;
      }
      $46 = (HEAP32[$to_nxt >> 2] | 0) + $47 | 0;
      HEAP32[$to_nxt >> 2] = $46;
      $65 = $$19 + 4 | 0;
      if (($65 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
       $$1$lcssa = $65;
       break L41;
      } else $$19 = $65;
     }
     if ((label | 0) == 20) {
      $53 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($53);
     }
     $55 = ___cxa_find_matching_catch() | 0;
     if (!$45) ___resumeException($55 | 0);
     __THREW__ = 0;
     invoke_ii(75, $45 | 0) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      $60 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($60);
     } else ___resumeException($55 | 0);
    } while (0);
    HEAP32[$frm_nxt >> 2] = $$1$lcssa;
    $$0 = 2;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 34) {
    $80 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($80);
   } else if ((label | 0) == 35) {
    $82 = ___cxa_find_matching_catch() | 0;
    if (!$73) ___resumeException($82 | 0);
    __THREW__ = 0;
    invoke_ii(75, $73 | 0) | 0;
    $85 = __THREW__;
    __THREW__ = 0;
    if ($85 & 1) {
     $87 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($87);
    } else ___resumeException($82 | 0);
   } else if ((label | 0) == 49) {
    $112 = HEAP32[$frm_nxt >> 2] | 0;
    break;
   } else if ((label | 0) == 51) {
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 } while (0);
 $$0 = ($112 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$01$i = 0, $$112 = 0, $$113 = 0, $$1210 = 0, $$1211 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $113 = 0, $12 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $57 = 0, $6 = 0, $62 = 0, $64 = 0, $67 = 0, $74 = 0, $75 = 0, $79 = 0, $82 = 0, $89 = 0, $90 = 0, $98 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$26 = 0, $__neg = 0, $__w$07 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 $$byval_copy = sp;
 $__wbuf = sp + 72 | 0;
 $__wb = sp + 64 | 0;
 $__wn = sp + 56 | 0;
 $__loc = sp + 52 | 0;
 $__neg = sp + 572 | 0;
 $0 = sp + 48 | 0;
 $__atoms = sp + 8 | 0;
 $__nbuf = sp + 472 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 190;
 $2 = $__wbuf + 400 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $33 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$112 = $33;
  $$1210 = tempRet0;
  $107 = 190;
  $108 = $__wbuf;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 45792) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L4 : do if ($6 & 1) label = 11; else {
   HEAP8[$__neg >> 0] = 0;
   HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(2, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) label = 11; else {
    if ($11) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 48 >> 2] | 0, $5 | 0, 45496, 45506, $__atoms | 0) | 0;
     $17 = __THREW__;
     __THREW__ = 0;
     if ($17 & 1) {
      label = 11;
      break;
     }
     $19 = HEAP32[$__wn >> 2] | 0;
     $20 = HEAP32[$__wb >> 2] | 0;
     $23 = $19 - $20 | 0;
     if (($23 | 0) > 392) {
      $27 = _malloc(($23 >> 2) + 2 | 0) | 0;
      if (!$27) {
       __THREW__ = 0;
       invoke_v(5);
       $29 = __THREW__;
       __THREW__ = 0;
       if ($29 & 1) {
        $31 = ___cxa_find_matching_catch() | 0;
        $$0 = $31;
        $$01 = tempRet0;
        break;
       } else {
        $39 = 0;
        $__nc$0 = 0;
       }
      } else {
       $39 = $27;
       $__nc$0 = $27;
      }
     } else {
      $39 = 0;
      $__nc$0 = $__nbuf;
     }
     if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
      HEAP8[$__nc$0 >> 0] = 45;
      $__nc$1 = $__nc$0 + 1 | 0;
     }
     if ($20 >>> 0 < $19 >>> 0) {
      $44 = $__atoms + 40 | 0;
      $45 = $__atoms;
      $__nc$26 = $__nc$1;
      $__w$07 = $20;
      while (1) {
       $46 = HEAP32[$__w$07 >> 2] | 0;
       $$01$i = $__atoms;
       while (1) {
        if ((HEAP32[$$01$i >> 2] | 0) == ($46 | 0)) {
         $$0$lcssa$i = $$01$i;
         break;
        }
        $$01$i = $$01$i + 4 | 0;
        if (($$01$i | 0) == ($44 | 0)) {
         $$0$lcssa$i = $44;
         break;
        }
       }
       HEAP8[$__nc$26 >> 0] = HEAP8[45496 + ($$0$lcssa$i - $45 >> 2) >> 0] | 0;
       $__w$07 = $__w$07 + 4 | 0;
       $57 = $__nc$26 + 1 | 0;
       if ($__w$07 >>> 0 >= (HEAP32[$__wn >> 2] | 0) >>> 0) {
        $__nc$2$lcssa = $57;
        break;
       } else $__nc$26 = $57;
      }
     } else $__nc$2$lcssa = $__nc$1;
     HEAP8[$__nc$2$lcssa >> 0] = 0;
     HEAP32[$$byval_copy >> 2] = $__v;
     if ((_sscanf($__nbuf, 45432, $$byval_copy) | 0) != 1) {
      __THREW__ = 0;
      invoke_vi(191, 45440);
      $62 = __THREW__;
      __THREW__ = 0;
      if ($62 & 1) {
       $37 = ___cxa_find_matching_catch() | 0;
       $38 = tempRet0;
       _free($39);
       $$0 = $37;
       $$01 = $38;
       break;
      }
     }
     _free($39);
    }
    $64 = HEAP32[$__b >> 2] | 0;
    do if (!$64) $113 = 1; else {
     $67 = HEAP32[$64 + 12 >> 2] | 0;
     if (($67 | 0) == (HEAP32[$64 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $74 = invoke_ii(HEAP32[(HEAP32[$64 >> 2] | 0) + 36 >> 2] | 0, $64 | 0) | 0;
      $75 = __THREW__;
      __THREW__ = 0;
      if ($75 & 1) {
       label = 11;
       break L4;
      } else $$0$i$i$i$i = $74;
     } else $$0$i$i$i$i = HEAP32[$67 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $113 = 1;
      break;
     } else {
      $113 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $79 = HEAP32[$__e >> 2] | 0;
    do if (!$79) label = 37; else {
     $82 = HEAP32[$79 + 12 >> 2] | 0;
     if (($82 | 0) == (HEAP32[$79 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $89 = invoke_ii(HEAP32[(HEAP32[$79 >> 2] | 0) + 36 >> 2] | 0, $79 | 0) | 0;
      $90 = __THREW__;
      __THREW__ = 0;
      if ($90 & 1) {
       label = 11;
       break L4;
      } else $$0$i$i1$i$i = $89;
     } else $$0$i$i1$i$i = HEAP32[$82 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 37;
      break;
     } else if ($113) break; else {
      label = 39;
      break;
     }
    } while (0);
    if ((label | 0) == 37) if ($113) label = 39;
    if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $98 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if (!$98) {
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    invoke_vi(HEAP32[$1 >> 2] | 0, $98 | 0);
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     $103 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($103);
    } else {
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 11) {
   $35 = ___cxa_find_matching_catch() | 0;
   $$0 = $35;
   $$01 = tempRet0;
  }
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$113 = $$0;
   $$1211 = $$01;
   ___resumeException($$113 | 0);
  } else {
   $$112 = $$0;
   $$1210 = $$01;
   $107 = HEAP32[$1 >> 2] | 0;
   $108 = $$pre;
   break;
  }
 } while (0);
 __THREW__ = 0;
 invoke_vi($107 | 0, $108 | 0);
 $109 = __THREW__;
 __THREW__ = 0;
 if ($109 & 1) {
  $111 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($111);
 } else {
  $$113 = $$112;
  $$1211 = $$1210;
  ___resumeException($$113 | 0);
 }
}

function _mbsrtowcs($ws, $src, $wn, $st) {
 $ws = $ws | 0;
 $src = $src | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$0 = 0, $$02$ph = 0, $$0217 = 0, $$03 = 0, $$1 = 0, $$14$lcssa = 0, $$148 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$431 = 0, $$432 = 0, $$47$ph = 0, $$4716 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$830 = 0, $$in = 0, $0 = 0, $101 = 0, $107 = 0, $108 = 0, $116 = 0, $118 = 0, $121 = 0, $126 = 0, $128 = 0, $131 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $33 = 0, $40 = 0, $47 = 0, $54 = 0, $63 = 0, $7 = 0, $71 = 0, $93 = 0, $94 = 0, $97 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1033 = 0, $s$1034 = 0, $s$19 = 0, $s$2 = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0, $s$518 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0, $$1$looptemp = 0, $s$6$looptemp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src >> 2] | 0;
 if (!$st) label = 5; else {
  $2 = HEAP32[$st >> 2] | 0;
  if (!$2) label = 5; else if (!$ws) {
   $$36 = $wn;
   $c$2 = $2;
   $s$3 = $0;
   label = 16;
  } else {
   HEAP32[$st >> 2] = 0;
   $$3 = $ws;
   $$7 = $wn;
   $c$4 = $2;
   $s$8 = $0;
   label = 36;
  }
 }
 if ((label | 0) == 5) if (!$ws) {
  $$03 = $wn;
  $s$0 = $0;
  label = 7;
 } else {
  $$02$ph = $ws;
  $$47$ph = $wn;
  $s$5$ph = $0;
  label = 6;
 }
 L7 : while (1) if ((label | 0) == 6) {
  label = 0;
  if (!$$47$ph) {
   $s$5$lcssa = $s$5$ph;
   label = 26;
   break;
  } else {
   $$0217 = $$02$ph;
   $$4716 = $$47$ph;
   $s$518 = $s$5$ph;
  }
  while (1) {
   $63 = HEAP8[$s$518 >> 0] | 0;
   L20 : do if ((($63 & 255) + -1 | 0) >>> 0 < 127) if (($s$518 & 3 | 0) == 0 & $$4716 >>> 0 > 4) {
    $$1 = $$0217;
    $$5 = $$4716;
    $s$6 = $s$518;
    do {
     $71 = HEAP32[$s$6 >> 2] | 0;
     if (($71 + -16843009 | $71) & -2139062144) {
      $$2 = $$1;
      $$6 = $$5;
      $94 = $71 & 255;
      $s$7 = $s$6;
      break L20;
     }
     HEAP32[$$1 >> 2] = $71 & 255;
     HEAP32[$$1 + 4 >> 2] = HEAPU8[$s$6 + 1 >> 0];
     HEAP32[$$1 + 8 >> 2] = HEAPU8[$s$6 + 2 >> 0];
     $s$6$looptemp = $s$6;
     $s$6 = $s$6 + 4 | 0;
     $$1$looptemp = $$1;
     $$1 = $$1 + 16 | 0;
     HEAP32[$$1$looptemp + 12 >> 2] = HEAPU8[$s$6$looptemp + 3 >> 0];
     $$5 = $$5 + -4 | 0;
    } while ($$5 >>> 0 > 4);
    $$2 = $$1;
    $$6 = $$5;
    $94 = HEAP8[$s$6 >> 0] | 0;
    $s$7 = $s$6;
   } else {
    $$2 = $$0217;
    $$6 = $$4716;
    $94 = $63;
    $s$7 = $s$518;
   } else {
    $$2 = $$0217;
    $$6 = $$4716;
    $94 = $63;
    $s$7 = $s$518;
   } while (0);
   $93 = $94 & 255;
   if (($93 + -1 | 0) >>> 0 >= 127) break;
   $97 = $s$7 + 1 | 0;
   HEAP32[$$2 >> 2] = $93;
   $$4716 = $$6 + -1 | 0;
   if (!$$4716) {
    $s$5$lcssa = $97;
    label = 26;
    break L7;
   } else {
    $$0217 = $$2 + 4 | 0;
    $s$518 = $97;
   }
  }
  $101 = $93 + -194 | 0;
  if ($101 >>> 0 > 50) {
   $$432 = $$2;
   $$830 = $$6;
   $s$1034 = $s$7;
   label = 47;
   break;
  }
  $$3 = $$2;
  $$7 = $$6;
  $c$4 = HEAP32[53456 + ($101 << 2) >> 2] | 0;
  $s$8 = $s$7 + 1 | 0;
  label = 36;
  continue;
 } else if ((label | 0) == 7) {
  label = 0;
  $7 = HEAP8[$s$0 >> 0] | 0;
  if ((($7 & 255) + -1 | 0) >>> 0 < 127) if (!($s$0 & 3)) {
   $14 = HEAP32[$s$0 >> 2] | 0;
   if (!(($14 + -16843009 | $14) & -2139062144)) {
    $$148 = $$03;
    $s$19 = $s$0;
    while (1) {
     $19 = $s$19 + 4 | 0;
     $20 = $$148 + -4 | 0;
     $21 = HEAP32[$19 >> 2] | 0;
     if (!(($21 + -16843009 | $21) & -2139062144)) {
      $$148 = $20;
      $s$19 = $19;
     } else {
      $$14$lcssa = $20;
      $$in = $21;
      $s$1$lcssa = $19;
      break;
     }
    }
   } else {
    $$14$lcssa = $$03;
    $$in = $14;
    $s$1$lcssa = $s$0;
   }
   $$25 = $$14$lcssa;
   $28 = $$in & 255;
   $s$2 = $s$1$lcssa;
  } else {
   $$25 = $$03;
   $28 = $7;
   $s$2 = $s$0;
  } else {
   $$25 = $$03;
   $28 = $7;
   $s$2 = $s$0;
  }
  $27 = $28 & 255;
  if (($27 + -1 | 0) >>> 0 < 127) {
   $$03 = $$25 + -1 | 0;
   $s$0 = $s$2 + 1 | 0;
   label = 7;
   continue;
  }
  $33 = $27 + -194 | 0;
  if ($33 >>> 0 > 50) {
   $$432 = $ws;
   $$830 = $$25;
   $s$1034 = $s$2;
   label = 47;
   break;
  }
  $$36 = $$25;
  $c$2 = HEAP32[53456 + ($33 << 2) >> 2] | 0;
  $s$3 = $s$2 + 1 | 0;
  label = 16;
  continue;
 } else if ((label | 0) == 16) {
  label = 0;
  $40 = (HEAPU8[$s$3 >> 0] | 0) >>> 3;
  if (($40 + -16 | $40 + ($c$2 >> 26)) >>> 0 > 7) {
   label = 17;
   break;
  }
  $47 = $s$3 + 1 | 0;
  if (!($c$2 & 33554432)) $s$4 = $47; else {
   if ((HEAP8[$47 >> 0] & -64) << 24 >> 24 != -128) {
    label = 20;
    break;
   }
   $54 = $s$3 + 2 | 0;
   if (!($c$2 & 524288)) $s$4 = $54; else {
    if ((HEAP8[$54 >> 0] & -64) << 24 >> 24 != -128) {
     label = 23;
     break;
    }
    $s$4 = $s$3 + 3 | 0;
   }
  }
  $$03 = $$36 + -1 | 0;
  $s$0 = $s$4;
  label = 7;
  continue;
 } else if ((label | 0) == 36) {
  label = 0;
  $107 = HEAPU8[$s$8 >> 0] | 0;
  $108 = $107 >>> 3;
  if (($108 + -16 | $108 + ($c$4 >> 26)) >>> 0 > 7) {
   label = 37;
   break;
  }
  $116 = $s$8 + 1 | 0;
  $118 = $107 + -128 | $c$4 << 6;
  if (($118 | 0) < 0) {
   $121 = HEAPU8[$116 >> 0] | 0;
   if (($121 & 192 | 0) != 128) {
    label = 40;
    break;
   }
   $126 = $s$8 + 2 | 0;
   $128 = $121 + -128 | $118 << 6;
   if (($128 | 0) < 0) {
    $131 = HEAPU8[$126 >> 0] | 0;
    if (($131 & 192 | 0) != 128) {
     label = 43;
     break;
    }
    $c$5 = $131 + -128 | $128 << 6;
    $s$9 = $s$8 + 3 | 0;
   } else {
    $c$5 = $128;
    $s$9 = $126;
   }
  } else {
   $c$5 = $118;
   $s$9 = $116;
  }
  HEAP32[$$3 >> 2] = $c$5;
  $$02$ph = $$3 + 4 | 0;
  $$47$ph = $$7 + -1 | 0;
  $s$5$ph = $s$9;
  label = 6;
  continue;
 }
 if ((label | 0) == 17) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 46;
 } else if ((label | 0) == 20) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 46;
 } else if ((label | 0) == 23) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 46;
 } else if ((label | 0) == 26) {
  HEAP32[$src >> 2] = $s$5$lcssa;
  $$0 = $wn;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 37) {
  $$4 = $$3;
  $$8 = $$7;
  $c$6 = $c$4;
  $s$10 = $s$8 + -1 | 0;
  label = 46;
 } else if ((label | 0) == 40) {
  $$4 = $$3;
  $$8 = $$7;
  $c$6 = $118;
  $s$10 = $s$8 + -1 | 0;
  label = 46;
 } else if ((label | 0) == 43) {
  $$4 = $$3;
  $$8 = $$7;
  $c$6 = $128;
  $s$10 = $s$8 + -1 | 0;
  label = 46;
 }
 if ((label | 0) == 46) if (!$c$6) {
  $$432 = $$4;
  $$830 = $$8;
  $s$1034 = $s$10;
  label = 47;
 } else {
  $$431 = $$4;
  $s$1033 = $s$10;
 }
 if ((label | 0) == 47) if (!(HEAP8[$s$1034 >> 0] | 0)) {
  if ($$432) {
   HEAP32[$$432 >> 2] = 0;
   HEAP32[$src >> 2] = 0;
  }
  $$0 = $wn - $$830 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$431 = $$432;
  $s$1033 = $s$1034;
 }
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 if (!$$431) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$src >> 2] = $s$1033;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01 = 0, $$01$i = 0, $$114 = 0, $$115 = 0, $$1212 = 0, $$1213 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $105 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $55 = 0, $6 = 0, $60 = 0, $62 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $78 = 0, $88 = 0, $89 = 0, $96 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$27 = 0, $__neg = 0, $__w$08 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp;
 $__wbuf = sp + 136 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 12 | 0;
 $__loc = sp + 8 | 0;
 $__neg = sp + 134 | 0;
 $0 = sp + 4 | 0;
 $__atoms = sp + 124 | 0;
 $__nbuf = sp + 24 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 190;
 $2 = $__wbuf + 100 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $32 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$114 = $32;
  $$1212 = tempRet0;
  $105 = 190;
  $106 = $__wbuf;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 45800) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L4 : do if ($6 & 1) label = 11; else {
   HEAP8[$__neg >> 0] = 0;
   HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(1, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) label = 11; else {
    if ($11) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] | 0, $5 | 0, 45416, 45426, $__atoms | 0) | 0;
     $17 = __THREW__;
     __THREW__ = 0;
     if ($17 & 1) {
      label = 11;
      break;
     }
     $19 = HEAP32[$__wn >> 2] | 0;
     $20 = HEAP32[$__wb >> 2] | 0;
     $23 = $19 - $20 | 0;
     if (($23 | 0) > 98) {
      $26 = _malloc($23 + 2 | 0) | 0;
      if (!$26) {
       __THREW__ = 0;
       invoke_v(5);
       $28 = __THREW__;
       __THREW__ = 0;
       if ($28 & 1) {
        $30 = ___cxa_find_matching_catch() | 0;
        $$0 = $30;
        $$01 = tempRet0;
        break;
       } else {
        $38 = 0;
        $__nc$0 = 0;
       }
      } else {
       $38 = $26;
       $__nc$0 = $26;
      }
     } else {
      $38 = 0;
      $__nc$0 = $__nbuf;
     }
     if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
      HEAP8[$__nc$0 >> 0] = 45;
      $__nc$1 = $__nc$0 + 1 | 0;
     }
     if ($20 >>> 0 < $19 >>> 0) {
      $43 = $__atoms + 10 | 0;
      $44 = $__atoms;
      $__nc$27 = $__nc$1;
      $__w$08 = $20;
      while (1) {
       $45 = HEAP8[$__w$08 >> 0] | 0;
       $$01$i = $__atoms;
       while (1) {
        if ((HEAP8[$$01$i >> 0] | 0) == $45 << 24 >> 24) {
         $$0$lcssa$i = $$01$i;
         break;
        }
        $$01$i = $$01$i + 1 | 0;
        if (($$01$i | 0) == ($43 | 0)) {
         $$0$lcssa$i = $43;
         break;
        }
       }
       HEAP8[$__nc$27 >> 0] = HEAP8[45416 + ($$0$lcssa$i - $44) >> 0] | 0;
       $__w$08 = $__w$08 + 1 | 0;
       $55 = $__nc$27 + 1 | 0;
       if ($__w$08 >>> 0 >= (HEAP32[$__wn >> 2] | 0) >>> 0) {
        $__nc$2$lcssa = $55;
        break;
       } else $__nc$27 = $55;
      }
     } else $__nc$2$lcssa = $__nc$1;
     HEAP8[$__nc$2$lcssa >> 0] = 0;
     HEAP32[$$byval_copy >> 2] = $__v;
     if ((_sscanf($__nbuf, 45432, $$byval_copy) | 0) != 1) {
      __THREW__ = 0;
      invoke_vi(191, 45440);
      $60 = __THREW__;
      __THREW__ = 0;
      if ($60 & 1) {
       $36 = ___cxa_find_matching_catch() | 0;
       $37 = tempRet0;
       _free($38);
       $$0 = $36;
       $$01 = $37;
       break;
      }
     }
     _free($38);
    }
    $62 = HEAP32[$__b >> 2] | 0;
    do if (!$62) $76 = 0; else if ((HEAP32[$62 + 12 >> 2] | 0) == (HEAP32[$62 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $72 = invoke_ii(HEAP32[(HEAP32[$62 >> 2] | 0) + 36 >> 2] | 0, $62 | 0) | 0;
     $73 = __THREW__;
     __THREW__ = 0;
     if ($73 & 1) {
      label = 11;
      break L4;
     }
     if (($72 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $76 = 0;
      break;
     } else {
      $76 = HEAP32[$__b >> 2] | 0;
      break;
     }
    } else $76 = $62; while (0);
    $77 = ($76 | 0) == 0;
    $78 = HEAP32[$__e >> 2] | 0;
    do if (!$78) label = 36; else {
     if ((HEAP32[$78 + 12 >> 2] | 0) != (HEAP32[$78 + 16 >> 2] | 0)) if ($77) break; else {
      label = 38;
      break;
     }
     __THREW__ = 0;
     $88 = invoke_ii(HEAP32[(HEAP32[$78 >> 2] | 0) + 36 >> 2] | 0, $78 | 0) | 0;
     $89 = __THREW__;
     __THREW__ = 0;
     if ($89 & 1) {
      label = 11;
      break L4;
     }
     if (($88 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 36;
      break;
     } else if ($77) break; else {
      label = 38;
      break;
     }
    } while (0);
    if ((label | 0) == 36) if ($77) label = 38;
    if ((label | 0) == 38) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $96 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if (!$96) {
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    invoke_vi(HEAP32[$1 >> 2] | 0, $96 | 0);
    $99 = __THREW__;
    __THREW__ = 0;
    if ($99 & 1) {
     $101 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($101);
    } else {
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  if ((label | 0) == 11) {
   $34 = ___cxa_find_matching_catch() | 0;
   $$0 = $34;
   $$01 = tempRet0;
  }
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$115 = $$0;
   $$1213 = $$01;
   ___resumeException($$115 | 0);
  } else {
   $$114 = $$0;
   $$1212 = $$01;
   $105 = HEAP32[$1 >> 2] | 0;
   $106 = $$pre;
   break;
  }
 } while (0);
 __THREW__ = 0;
 invoke_vi($105 | 0, $106 | 0);
 $107 = __THREW__;
 __THREW__ = 0;
 if ($107 & 1) {
  $109 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($109);
 } else {
  $$115 = $$114;
  $$1213 = $$1212;
  ___resumeException($$115 | 0);
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $72 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $81 = 0, $84 = 0, $86 = 0, $88 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 102 | 0;
 $__nb = sp + 40 | 0;
 $__o = sp + 44 | 0;
 $__op = sp + 36 | 0;
 $__oe = sp + 32 | 0;
 $0 = sp + 28 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 44512, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $$byval_copy + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $$byval_copy) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $$byval_copy) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(1) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $$byval_copy + 4 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $$byval_copy | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(1) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr12 = $$byval_copy + 4 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr12 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr12 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $32 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $$byval_copy | 0) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    if (!($33 & 1)) {
     $__nc$1 = $32;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $35 = HEAP32[$__nb >> 2] | 0;
   if ($35) {
    $40 = $35;
    $68 = $35;
    $__nc$2 = $__nc$1;
    break;
   }
   __THREW__ = 0;
   invoke_v(5);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $40 = $$pre;
    $68 = $$pre;
    $__nc$2 = $__nc$1;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$127 = tempRet0;
  $$18 = $25;
  ___resumeException($$18 | 0);
 } else {
  $40 = HEAP32[$__nb >> 2] | 0;
  $68 = 0;
  $__nc$2 = $__nc$0;
 } while (0);
 $39 = $40 + $__nc$2 | 0;
 $41 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40, $39, $__iob) | 0;
 if (($40 | 0) == ($__nar | 0)) {
  $52 = $__nar;
  $62 = 0;
  $__ob$0 = $__o;
  label = 20;
 } else {
  $44 = _malloc($__nc$2 << 1) | 0;
  if (!$44) {
   __THREW__ = 0;
   invoke_v(5);
   $46 = __THREW__;
   __THREW__ = 0;
   if ($46 & 1) {
    $88 = 0;
    label = 19;
   } else {
    $52 = HEAP32[$__nb >> 2] | 0;
    $62 = 0;
    $__ob$0 = 0;
    label = 20;
   }
  } else {
   $52 = $40;
   $62 = $44;
   $__ob$0 = $44;
   label = 20;
  }
 }
 do if ((label | 0) == 20) {
  __THREW__ = 0;
  invoke_vii(47, $0 | 0, $__iob | 0);
  $50 = __THREW__;
  __THREW__ = 0;
  if ($50 & 1) {
   $88 = $62;
   label = 19;
  } else {
   __THREW__ = 0;
   invoke_viiiiiii(42, $52 | 0, $41 | 0, $39 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
   $53 = __THREW__;
   __THREW__ = 0;
   if ($53 & 1) {
    $74 = ___cxa_find_matching_catch() | 0;
    $75 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    $$0 = $74;
    $$01 = $75;
    $77 = $62;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
   HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
   $57 = HEAP32[$__op >> 2] | 0;
   $58 = HEAP32[$__oe >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   invoke_viiiiiii(39, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $57 | 0, $58 | 0, $__iob | 0, $__fl | 0);
   $59 = __THREW__;
   __THREW__ = 0;
   if ($59 & 1) {
    $88 = $62;
    label = 19;
   } else {
    $61 = HEAP32[$1 >> 2] | 0;
    HEAP32[$__s >> 2] = $61;
    HEAP32[$agg$result >> 2] = $61;
    if ($62) {
     __THREW__ = 0;
     invoke_vi(188, $62 | 0);
     $64 = __THREW__;
     __THREW__ = 0;
     if ($64 & 1) {
      $66 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($66);
     }
    }
    if (!$68) {
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    invoke_vi(188, $68 | 0);
    $70 = __THREW__;
    __THREW__ = 0;
    if ($70 & 1) {
     $72 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($72);
    } else {
     STACKTOP = sp;
     return;
    }
   }
  }
 } while (0);
 if ((label | 0) == 19) {
  $48 = ___cxa_find_matching_catch() | 0;
  $$0 = $48;
  $$01 = tempRet0;
  $77 = $88;
 }
 if ($77) {
  __THREW__ = 0;
  invoke_vi(188, $77 | 0);
  $79 = __THREW__;
  __THREW__ = 0;
  if ($79 & 1) {
   $81 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($81);
  }
 }
 if (!$68) {
  $$127 = $$01;
  $$18 = $$0;
  ___resumeException($$18 | 0);
 }
 __THREW__ = 0;
 invoke_vi(188, $68 | 0);
 $84 = __THREW__;
 __THREW__ = 0;
 if ($84 & 1) {
  $86 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($86);
 } else {
  $$127 = $$01;
  $$18 = $$0;
  ___resumeException($$18 | 0);
 }
}

function __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEjddPFPcPvPKcSN_PiESL_($this, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $import_callback_context) {
 $this = $this | 0;
 $alloc = $alloc | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $import_callback_context = $import_callback_context | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01 = 0, $$01$i$i$i$i$i = 0, $$byval_copy = 0, $$sroa$2 = 0, $0 = 0, $1 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $48 = 0, $50 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $65 = 0, $66 = 0, $69 = 0, $7 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy = sp + 32 | 0;
 $0 = sp + 28 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $$sroa$2 = sp;
 HEAP32[$this >> 2] = ~~$gc_min_objects >>> 0;
 HEAPF64[$this + 8 >> 3] = $gc_growth_trigger;
 HEAP8[$this + 16 >> 0] = 0;
 $6 = $this + 20 | 0;
 HEAP32[$6 + 0 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$6 + 16 >> 2] = 0;
 HEAP32[$6 + 20 >> 2] = 0;
 HEAP32[$6 + 24 >> 2] = 0;
 HEAP32[$6 + 28 >> 2] = 0;
 $7 = $this + 72 | 0;
 HEAP32[$7 >> 2] = 38032;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP32[$this + 80 >> 2] = $max_stack;
 HEAP32[$this + 84 >> 2] = 0;
 HEAP32[$this + 88 >> 2] = 0;
 HEAP32[$this + 92 >> 2] = 0;
 HEAP32[$this + 96 >> 2] = $alloc;
 $14 = $this + 100 | 0;
 __THREW__ = 0;
 invoke_viii(3, $2 | 0, 40720, 13);
 $15 = __THREW__;
 __THREW__ = 0;
 if ($15 & 1) {
  $61 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $61;
  HEAP32[$7 >> 2] = 38032;
  $69 = $this + 84 | 0;
  __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($69);
  __ZN12_GLOBAL__N_14HeapD2Ev($this);
  ___resumeException($$01 | 0);
 }
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($$byval_copy, $alloc, $2);
 $18 = HEAP32[$$byval_copy >> 2] | 0;
 L5 : do if (($18 | 0) == ($alloc + 4 | 0)) {
  __THREW__ = 0;
  $22 = invoke_ii(67, 12) | 0;
  $23 = __THREW__;
  __THREW__ = 0;
  do if ($23 & 1) label = 19; else {
   __THREW__ = 0;
   invoke_vii(40, $22 | 0, $2 | 0);
   $25 = __THREW__;
   __THREW__ = 0;
   if ($25 & 1) {
    $30 = ___cxa_find_matching_catch() | 0;
    $31 = tempRet0;
    __ZdlPv($22);
    $eh$lpad$body$index2Z2D = $31;
    $eh$lpad$body$indexZ2D = $30;
    break;
   }
   __THREW__ = 0;
   $27 = invoke_iii(23, $alloc | 0, $2 | 0) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if ($28 & 1) label = 19; else {
    HEAP32[$27 >> 2] = $22;
    $$0$i = $22;
    break L5;
   }
  } while (0);
  if ((label | 0) == 19) {
   $63 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index2Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $63;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
  $$0 = $eh$lpad$body$index2Z2D;
  $$01 = $eh$lpad$body$indexZ2D;
  HEAP32[$7 >> 2] = 38032;
  $69 = $this + 84 | 0;
  __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($69);
  __ZN12_GLOBAL__N_14HeapD2Ev($this);
  ___resumeException($$01 | 0);
 } else $$0$i = HEAP32[$18 + 28 >> 2] | 0; while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
 HEAP32[$14 >> 2] = $$0$i;
 $32 = $this + 104 | 0;
 $33 = $this + 108 | 0;
 HEAP32[$33 >> 2] = 0;
 HEAP32[$this + 112 >> 2] = 0;
 HEAP32[$32 >> 2] = $this + 108;
 $36 = $this + 116 | 0;
 $37 = $this + 120 | 0;
 HEAP32[$37 >> 2] = 0;
 HEAP32[$this + 124 >> 2] = 0;
 $39 = $this + 120 | 0;
 HEAP32[$36 >> 2] = $39;
 $40 = HEAP32[$ext_vars >> 2] | 0;
 $41 = $ext_vars + 4 | 0;
 if (($40 | 0) == ($41 | 0)) {
  $57 = $this + 128 | 0;
  HEAP32[$57 >> 2] = $import_callback;
  $58 = $this + 132 | 0;
  HEAP32[$58 >> 2] = $import_callback_context;
  $59 = $this + 56 | 0;
  HEAP32[$59 >> 2] = 0;
  $60 = $this + 60 | 0;
  HEAP32[$60 + 0 >> 2] = HEAP32[$$sroa$2 + 0 >> 2];
  HEAP32[$60 + 4 >> 2] = HEAP32[$$sroa$2 + 4 >> 2];
  HEAP32[$60 + 8 >> 2] = HEAP32[$$sroa$2 + 8 >> 2];
  STACKTOP = sp;
  return;
 }
 $44 = $40;
 while (1) {
  HEAP32[$0 >> 2] = $39;
  __THREW__ = 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  invoke_viiii(18, $1 | 0, $36 | 0, $$byval_copy | 0, $44 + 16 | 0);
  $45 = __THREW__;
  __THREW__ = 0;
  if ($45 & 1) break;
  $48 = HEAP32[$44 + 4 >> 2] | 0;
  if (!$48) {
   $$0$i$i$i$i$i = $44;
   while (1) {
    $53 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$53 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$01$i$i$i$i$i = $53;
     break;
    } else $$0$i$i$i$i$i = $53;
   }
  } else {
   $$0$i$i$i$i$i$i = $48;
   while (1) {
    $50 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$50) {
     $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $50;
   }
  }
  if (($$01$i$i$i$i$i | 0) == ($41 | 0)) {
   label = 17;
   break;
  } else $44 = $$01$i$i$i$i$i;
 }
 if ((label | 0) == 17) {
  $57 = $this + 128 | 0;
  HEAP32[$57 >> 2] = $import_callback;
  $58 = $this + 132 | 0;
  HEAP32[$58 >> 2] = $import_callback_context;
  $59 = $this + 56 | 0;
  HEAP32[$59 >> 2] = 0;
  $60 = $this + 60 | 0;
  HEAP32[$60 + 0 >> 2] = HEAP32[$$sroa$2 + 0 >> 2];
  HEAP32[$60 + 4 >> 2] = HEAP32[$$sroa$2 + 4 >> 2];
  HEAP32[$60 + 8 >> 2] = HEAP32[$$sroa$2 + 8 >> 2];
  STACKTOP = sp;
  return;
 }
 $65 = ___cxa_find_matching_catch() | 0;
 $66 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($36, HEAP32[$37 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($32, HEAP32[$33 >> 2] | 0);
 $$0 = $66;
 $$01 = $65;
 HEAP32[$7 >> 2] = 38032;
 $69 = $this + 84 | 0;
 __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($69);
 __ZN12_GLOBAL__N_14HeapD2Ev($this);
 ___resumeException($$01 | 0);
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $102 = 0, $11 = 0, $112 = 0, $113 = 0, $116 = 0, $119 = 0, $120 = 0, $121 = 0, $124 = 0, $125 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $30 = 0, $35 = 0, $36 = 0, $4 = 0, $43 = 0, $45 = 0, $52 = 0, $6 = 0, $61 = 0, $63 = 0, $64 = 0, $71 = 0, $79 = 0, $81 = 0, $82 = 0, $85 = 0, $87 = 0, $89 = 0, $91 = 0, $93 = 0, $95 = 0, $96 = 0, $97 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 $$byval_copy = sp + 472 | 0;
 $__loc = sp + 468 | 0;
 $__pat = sp + 464 | 0;
 $__dp = sp + 460 | 0;
 $__ts = sp + 456 | 0;
 $__grp = sp + 444 | 0;
 $__sym = sp + 432 | 0;
 $__sn = sp + 420 | 0;
 $__fd = sp + 416 | 0;
 $__mbuf = sp + 16 | 0;
 $__mi = sp + 8 | 0;
 $__me = sp + 4 | 0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 45792) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 do if (!($2 & 1)) {
  $4 = HEAP8[$__digits >> 0] | 0;
  $6 = ($4 & 1) == 0;
  if ($6) $11 = ($4 & 255) >>> 1; else $11 = HEAP32[$__digits + 4 >> 2] | 0;
  if (!$11) $25 = 0; else {
   if ($6) $17 = $__digits + 4 | 0; else $17 = HEAP32[$__digits + 8 >> 2] | 0;
   $16 = HEAP32[$17 >> 2] | 0;
   __THREW__ = 0;
   $21 = invoke_iii(HEAP32[(HEAP32[$1 >> 2] | 0) + 44 >> 2] | 0, $1 | 0, 45) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) break;
   $25 = ($16 | 0) == ($21 | 0);
  }
  HEAP32[$__pat >> 2] = 0;
  HEAP32[$__grp + 0 >> 2] = 0;
  HEAP32[$__grp + 4 >> 2] = 0;
  HEAP32[$__grp + 8 >> 2] = 0;
  HEAP32[$__sym + 0 >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  HEAP32[$__sym + 8 >> 2] = 0;
  HEAP32[$__sn + 0 >> 2] = 0;
  HEAP32[$__sn + 4 >> 2] = 0;
  HEAP32[$__sn + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_viiiiiiiiii(4, $__intl | 0, $25 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
  $26 = __THREW__;
  __THREW__ = 0;
  L15 : do if ($26 & 1) {
   $93 = ___cxa_find_matching_catch() | 0;
   $$0 = $93;
   $$01 = tempRet0;
  } else {
   $28 = HEAP8[$__digits >> 0] | 0;
   $30 = ($28 & 1) == 0;
   if ($30) $36 = ($28 & 255) >>> 1; else $36 = HEAP32[$__digits + 4 >> 2] | 0;
   $35 = HEAP32[$__fd >> 2] | 0;
   if (($36 | 0) > ($35 | 0)) {
    if ($30) $43 = ($28 & 255) >>> 1; else $43 = HEAP32[$__digits + 4 >> 2] | 0;
    $45 = HEAP8[$__sn >> 0] | 0;
    if (!($45 & 1)) $61 = ($45 & 255) >>> 1; else $61 = HEAP32[$__sn + 4 >> 2] | 0;
    $52 = HEAP8[$__sym >> 0] | 0;
    if (!($52 & 1)) $63 = ($52 & 255) >>> 1; else $63 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $61 + ($43 - $35 << 1 | 1) + $63 | 0;
   } else {
    $64 = HEAP8[$__sn >> 0] | 0;
    if (!($64 & 1)) $79 = ($64 & 255) >>> 1; else $79 = HEAP32[$__sn + 4 >> 2] | 0;
    $71 = HEAP8[$__sym >> 0] | 0;
    if (!($71 & 1)) $81 = ($71 & 255) >>> 1; else $81 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $79 + 2 + $81 | 0;
   }
   $82 = $$pn + $35 | 0;
   do if ($82 >>> 0 > 100) {
    $85 = _malloc($82 << 2) | 0;
    if (!$85) {
     __THREW__ = 0;
     invoke_v(5);
     $87 = __THREW__;
     __THREW__ = 0;
     if ($87 & 1) {
      $89 = ___cxa_find_matching_catch() | 0;
      $$0 = $89;
      $$01 = tempRet0;
      break L15;
     } else {
      $102 = HEAP8[$__digits >> 0] | 0;
      $97 = 0;
      $__mb$0 = 0;
      break;
     }
    } else {
     $102 = $28;
     $97 = $85;
     $__mb$0 = $85;
    }
   } else {
    $102 = $28;
    $97 = 0;
    $__mb$0 = $__mbuf;
   } while (0);
   if (!($102 & 1)) {
    $112 = $__digits + 4 | 0;
    $113 = ($102 & 255) >>> 1;
   } else {
    $112 = HEAP32[$__digits + 8 >> 2] | 0;
    $113 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiiiiiiii(2, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $112 | 0, $112 + ($113 << 2) | 0, $1 | 0, $25 | 0, $__pat | 0, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $35 | 0);
   $116 = __THREW__;
   __THREW__ = 0;
   if (!($116 & 1)) {
    HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
    $119 = HEAP32[$__mi >> 2] | 0;
    $120 = HEAP32[$__me >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    invoke_viiiiiii(45, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $119 | 0, $120 | 0, $__iob | 0, $__fl | 0);
    $121 = __THREW__;
    __THREW__ = 0;
    if (!($121 & 1)) {
     if (!$97) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sn);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
      $124 = HEAP32[$__loc >> 2] | 0;
      __ZNSt3__114__shared_count16__release_sharedEv($124) | 0;
      STACKTOP = sp;
      return;
     }
     _free($97);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
     $124 = HEAP32[$__loc >> 2] | 0;
     __ZNSt3__114__shared_count16__release_sharedEv($124) | 0;
     STACKTOP = sp;
     return;
    }
   }
   $95 = ___cxa_find_matching_catch() | 0;
   $96 = tempRet0;
   if (!$97) {
    $$0 = $95;
    $$01 = $96;
   } else {
    _free($97);
    $$0 = $95;
    $$01 = $96;
   }
  } while (0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
  $$1 = $$0;
  $$12 = $$01;
  $125 = HEAP32[$__loc >> 2] | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($125) | 0;
  ___resumeException($$1 | 0);
 } while (0);
 $91 = ___cxa_find_matching_catch() | 0;
 $$1 = $91;
 $$12 = tempRet0;
 $125 = HEAP32[$__loc >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($125) | 0;
 ___resumeException($$1 | 0);
}

function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$05$i = 0, $$05$i16 = 0, $$1 = 0, $$13 = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $105 = 0, $107 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $35 = 0, $38 = 0, $43 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $61 = 0, $63 = 0, $65 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $75 = 0, $76 = 0, $78 = 0, $85 = 0, $86 = 0, $89 = 0, $93 = 0, $96 = 0, $__bn$i = 0, $__bn$i14 = 0, $__buf$i = 0, $__buf$i13 = 0, $__mb$i = 0, $__mb$i11 = 0, $__ndflt = 0, $__nn$i = 0, $__p$04$i = 0, $__p$04$i20 = 0, $__wn$i = 0, $lpad$phi$index = 0, $lpad$phi$index10 = 0, $lpad$phi38$index = 0, $lpad$phi38$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__mb$i11 = sp + 8 | 0;
 $__buf$i13 = sp + 192 | 0;
 $__bn$i14 = sp + 188 | 0;
 $__wn$i = sp + 184 | 0;
 $__mb$i = sp;
 $__buf$i = sp + 56 | 0;
 $__bn$i = sp + 48 | 0;
 $__nn$i = sp + 44 | 0;
 $__ndflt = sp + 32 | 0;
 $0 = sp + 24 | 0;
 $1 = sp + 16 | 0;
 HEAP32[$__ndflt + 0 >> 2] = 0;
 HEAP32[$__ndflt + 4 >> 2] = 0;
 HEAP32[$__ndflt + 8 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 >> 2] = 47456;
 $3 = HEAP8[$__dflt >> 0] | 0;
 if (!($3 & 1)) {
  $15 = $__dflt + 4 | 0;
  $16 = ($3 & 255) >>> 1;
  $21 = $__dflt + 4 | 0;
 } else {
  $7 = HEAP32[$__dflt + 8 >> 2] | 0;
  $15 = $7;
  $16 = HEAP32[$__dflt + 4 >> 2] | 0;
  $21 = $7;
 }
 $14 = $15 + ($16 << 2) | 0;
 $17 = $__mb$i11;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 L5 : do if ($21 >>> 0 < $14 >>> 0) {
  $23 = $__buf$i13 + 32 | 0;
  $$05$i16 = $21;
  $25 = 47456 | 0;
  L7 : while (1) {
   HEAP32[$__wn$i >> 2] = $$05$i16;
   __THREW__ = 0;
   $27 = invoke_iiiiiiiii(HEAP32[$25 + 12 >> 2] | 0, $0 | 0, $__mb$i11 | 0, $$05$i16 | 0, $14 | 0, $__wn$i | 0, $__buf$i13 | 0, $23 | 0, $__bn$i14 | 0) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if ($28 & 1) {
    label = 22;
    break;
   }
   $31 = HEAP32[$__wn$i >> 2] | 0;
   if (($27 | 0) == 2 | ($31 | 0) == ($$05$i16 | 0)) {
    label = 9;
    break;
   }
   if ($__buf$i13 >>> 0 < (HEAP32[$__bn$i14 >> 2] | 0) >>> 0) {
    $__p$04$i20 = $__buf$i13;
    do {
     __THREW__ = 0;
     invoke_vii(44, $__ndflt | 0, HEAP8[$__p$04$i20 >> 0] | 0);
     $38 = __THREW__;
     __THREW__ = 0;
     if ($38 & 1) {
      label = 21;
      break L7;
     }
     $__p$04$i20 = $__p$04$i20 + 1 | 0;
    } while ($__p$04$i20 >>> 0 < (HEAP32[$__bn$i14 >> 2] | 0) >>> 0);
    $43 = HEAP32[$__wn$i >> 2] | 0;
   } else $43 = $31;
   if ($43 >>> 0 >= $14 >>> 0) break L5;
   $$05$i16 = $43;
   $25 = HEAP32[$0 >> 2] | 0;
  }
  do if ((label | 0) == 9) {
   __THREW__ = 0;
   invoke_vi(191, 46680);
   $35 = __THREW__;
   __THREW__ = 0;
   if ($35 & 1) {
    $65 = ___cxa_find_matching_catch() | 0;
    $lpad$phi38$index = $65;
    $lpad$phi38$index3 = tempRet0;
    break;
   } else {}
  } else if ((label | 0) == 21) {
   $61 = ___cxa_find_matching_catch() | 0;
   $lpad$phi38$index = $61;
   $lpad$phi38$index3 = tempRet0;
  } else if ((label | 0) == 22) {
   $63 = ___cxa_find_matching_catch() | 0;
   $lpad$phi38$index = $63;
   $lpad$phi38$index3 = tempRet0;
  } while (0);
  $$1 = $lpad$phi38$index;
  $$13 = $lpad$phi38$index3;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
  ___resumeException($$1 | 0);
 } while (0);
 if (!(HEAP8[$__ndflt >> 0] & 1)) $55 = $__ndflt + 1 | 0; else $55 = HEAP32[$__ndflt + 8 >> 2] | 0;
 __THREW__ = 0;
 $56 = invoke_iiiii(14, (($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, $55 | 0) | 0;
 $57 = __THREW__;
 __THREW__ = 0;
 if ($57 & 1) {
  $59 = ___cxa_find_matching_catch() | 0;
  $$1 = $59;
  $$13 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
  ___resumeException($$1 | 0);
 };
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 >> 2] = 47560;
 $68 = _strlen($56 | 0) | 0;
 $69 = $56 + $68 | 0;
 $70 = $__mb$i;
 HEAP32[$70 >> 2] = 0;
 HEAP32[$70 + 4 >> 2] = 0;
 if (($68 | 0) <= 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
  STACKTOP = sp;
  return;
 }
 $75 = $69;
 $76 = $__buf$i + 128 | 0;
 $$05$i = $56;
 $78 = 47560 | 0;
 L39 : while (1) {
  HEAP32[$__nn$i >> 2] = $$05$i;
  __THREW__ = 0;
  $85 = invoke_iiiiiiiii(HEAP32[$78 + 16 >> 2] | 0, $1 | 0, $__mb$i | 0, $$05$i | 0, (($75 - $$05$i | 0) > 32 ? $$05$i + 32 | 0 : $69) | 0, $__nn$i | 0, $__buf$i | 0, $76 | 0, $__bn$i | 0) | 0;
  $86 = __THREW__;
  __THREW__ = 0;
  if ($86 & 1) {
   label = 39;
   break;
  }
  $89 = HEAP32[$__nn$i >> 2] | 0;
  if (($85 | 0) == 2 | ($89 | 0) == ($$05$i | 0)) {
   label = 30;
   break;
  }
  if ($__buf$i >>> 0 < (HEAP32[$__bn$i >> 2] | 0) >>> 0) {
   $__p$04$i = $__buf$i;
   do {
    __THREW__ = 0;
    invoke_vii(75, $agg$result | 0, HEAP32[$__p$04$i >> 2] | 0);
    $96 = __THREW__;
    __THREW__ = 0;
    if ($96 & 1) {
     label = 38;
     break L39;
    }
    $__p$04$i = $__p$04$i + 4 | 0;
   } while ($__p$04$i >>> 0 < (HEAP32[$__bn$i >> 2] | 0) >>> 0);
   $101 = HEAP32[$__nn$i >> 2] | 0;
  } else $101 = $89;
  if ($101 >>> 0 >= $69 >>> 0) {
   label = 37;
   break;
  }
  $$05$i = $101;
  $78 = HEAP32[$1 >> 2] | 0;
 }
 do if ((label | 0) == 30) {
  __THREW__ = 0;
  invoke_vi(191, 46680);
  $93 = __THREW__;
  __THREW__ = 0;
  if ($93 & 1) {
   $107 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $107;
   $lpad$phi$index10 = tempRet0;
   break;
  } else {}
 } else if ((label | 0) == 37) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 38) {
  $103 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $103;
  $lpad$phi$index10 = tempRet0;
 } else if ((label | 0) == 39) {
  $105 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $105;
  $lpad$phi$index10 = tempRet0;
 } while (0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($agg$result);
 $$1 = $lpad$phi$index;
 $$13 = $lpad$phi$index10;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
 ___resumeException($$1 | 0);
}

function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$012$i$i = 0, $$012$i$i5 = 0, $0 = 0, $1 = 0, $103 = 0, $110 = 0, $111 = 0, $113 = 0, $114 = 0, $12 = 0, $121 = 0, $123 = 0, $124 = 0, $126 = 0, $128 = 0, $137 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $43 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $61 = 0, $64 = 0, $66 = 0, $68 = 0, $75 = 0, $76 = 0, $79 = 0, $80 = 0, $81 = 0, $84 = 0, $94 = 0, $96 = 0, $__dc$08 = 0, $__dc$1 = 0, $__dg$09 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$010 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45792) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45952) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
 do if (!$12) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nb | 0, $__ne | 0, $__ob | 0) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 8; else {
   $22 = $__ob + ($__ne - $__nb << 2) | 0;
   HEAP32[$__oe >> 2] = $22;
   $137 = $22;
  }
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $27 = HEAP8[$__nb >> 0] | 0;
  if ($27 << 24 >> 24 == 43 | $27 << 24 >> 24 == 45) {
   __THREW__ = 0;
   $31 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $27 | 0) | 0;
   $32 = __THREW__;
   __THREW__ = 0;
   if ($32 & 1) {
    label = 8;
    break;
   }
   $35 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $35 + 4;
   HEAP32[$35 >> 2] = $31;
   $__nf$0 = $__nb + 1 | 0;
  } else $__nf$0 = $__nb;
  if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $43 = $__nf$0 + 1 | 0;
   $44 = HEAP8[$43 >> 0] | 0;
   if ($44 << 24 >> 24 == 88 | $44 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $48 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, 48) | 0;
    $49 = __THREW__;
    __THREW__ = 0;
    if ($49 & 1) {
     label = 8;
     break;
    }
    $51 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $51 + 4;
    HEAP32[$51 >> 2] = $48;
    __THREW__ = 0;
    $57 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$43 >> 0] | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 8;
     break;
    }
    $61 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $61 + 4;
    HEAP32[$61 >> 2] = $57;
    $__nf$1 = $__nf$0 + 2 | 0;
   } else $__nf$1 = $__nf$0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0;
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $64 = $__ne + -1 | 0;
   if ($64 >>> 0 > $__nf$1 >>> 0) {
    $$012$i$i5 = $__nf$1;
    $68 = $64;
    do {
     $66 = HEAP8[$$012$i$i5 >> 0] | 0;
     HEAP8[$$012$i$i5 >> 0] = HEAP8[$68 >> 0] | 0;
     HEAP8[$68 >> 0] = $66;
     $$012$i$i5 = $$012$i$i5 + 1 | 0;
     $68 = $68 + -1 | 0;
    } while ($$012$i$i5 >>> 0 < $68 >>> 0);
   }
  }
  __THREW__ = 0;
  $75 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
  $76 = __THREW__;
  __THREW__ = 0;
  if ($76 & 1) label = 8; else {
   L24 : do if ($__nf$1 >>> 0 < $__ne >>> 0) {
    $79 = $__grouping + 1 | 0;
    $80 = $__grouping + 4 | 0;
    $81 = $__grouping + 8 | 0;
    $__dc$08 = 0;
    $__dg$09 = 0;
    $__p$010 = $__nf$1;
    while (1) {
     $84 = (HEAP8[$__grouping >> 0] & 1) == 0;
     if (!(HEAP8[($84 ? $79 : HEAP32[$81 >> 2] | 0) + $__dg$09 >> 0] | 0)) {
      $__dc$1 = $__dc$08;
      $__dg$1 = $__dg$09;
     } else if (($__dc$08 | 0) == (HEAP8[($84 ? $79 : HEAP32[$81 >> 2] | 0) + $__dg$09 >> 0] | 0)) {
      $94 = HEAP32[$__oe >> 2] | 0;
      HEAP32[$__oe >> 2] = $94 + 4;
      HEAP32[$94 >> 2] = $75;
      $96 = HEAP8[$__grouping >> 0] | 0;
      if (!($96 & 1)) $103 = ($96 & 255) >>> 1; else $103 = HEAP32[$80 >> 2] | 0;
      $__dc$1 = 0;
      $__dg$1 = ($__dg$09 >>> 0 < ($103 + -1 | 0) >>> 0 & 1) + $__dg$09 | 0;
     } else {
      $__dc$1 = $__dc$08;
      $__dg$1 = $__dg$09;
     }
     __THREW__ = 0;
     $110 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$__p$010 >> 0] | 0) | 0;
     $111 = __THREW__;
     __THREW__ = 0;
     if ($111 & 1) break;
     $113 = HEAP32[$__oe >> 2] | 0;
     $114 = $113 + 4 | 0;
     HEAP32[$__oe >> 2] = $114;
     HEAP32[$113 >> 2] = $110;
     $__p$010 = $__p$010 + 1 | 0;
     if ($__p$010 >>> 0 >= $__ne >>> 0) {
      $123 = $114;
      break L24;
     } else {
      $__dc$08 = $__dc$1 + 1 | 0;
      $__dg$09 = $__dg$1;
     }
    }
    $23 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $23;
    $lpad$phi$index2 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    ___resumeException($lpad$phi$index | 0);
   } else $123 = HEAP32[$__oe >> 2] | 0; while (0);
   $121 = $__ob + ($__nf$1 - $__nb << 2) | 0;
   if (($121 | 0) == ($123 | 0)) $137 = $123; else {
    $124 = $123 + -4 | 0;
    if ($124 >>> 0 > $121 >>> 0) {
     $$012$i$i = $121;
     $128 = $124;
     do {
      $126 = HEAP32[$$012$i$i >> 2] | 0;
      HEAP32[$$012$i$i >> 2] = HEAP32[$128 >> 2];
      HEAP32[$128 >> 2] = $126;
      $$012$i$i = $$012$i$i + 4 | 0;
      $128 = $128 + -4 | 0;
     } while ($$012$i$i >>> 0 < $128 >>> 0);
     $137 = $123;
    } else $137 = $123;
   }
  }
 } while (0);
 if ((label | 0) == 8) {
  $25 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $25;
  $lpad$phi$index2 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
  ___resumeException($lpad$phi$index | 0);
 }
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = $137;
  HEAP32[$__op >> 2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
  STACKTOP = sp;
  return;
 }
 $storemerge = $__ob + ($__np - $__nb << 2) | 0;
 HEAP32[$__op >> 2] = $storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_16Parser10unexpectedERK5TokenRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $tok, $while_) {
 $agg$result = $agg$result | 0;
 $tok = $tok | 0;
 $while_ = $while_ | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $37 = 0, $4 = 0, $47 = 0, $48 = 0, $49 = 0, $51 = 0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $ss = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $0 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $1 = sp;
 $2 = $ss + 64 | 0;
 $3 = $ss + 8 | 0;
 HEAP32[$3 >> 2] = 792;
 $4 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 940;
 HEAP32[$2 >> 2] = 960;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $4 | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $19 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $19;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 772;
 HEAP32[$2 >> 2] = 812;
 HEAP32[$3 >> 2] = 792;
 __THREW__ = 0;
 invoke_vi(179, $4 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 do if ($11 & 1) {
  $21 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $21;
 } else {
  HEAP32[$4 >> 2] = 1104;
  $13 = $ss + 44 | 0;
  HEAP32[$13 + 0 >> 2] = 0;
  HEAP32[$13 + 4 >> 2] = 0;
  HEAP32[$13 + 8 >> 2] = 0;
  HEAP32[$13 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $4 | 0, $0 | 0);
  $15 = __THREW__;
  __THREW__ = 0;
  if ($15 & 1) {
   $17 = ___cxa_find_matching_catch() | 0;
   $18 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
   $eh$lpad$body$i$index2Z2D = $18;
   $eh$lpad$body$i$indexZ2D = $17;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  __THREW__ = 0;
  $24 = invoke_iiii(25, $ss + 8 | 0, 36312, 12) | 0;
  $25 = __THREW__;
  __THREW__ = 0;
  if (!($25 & 1)) {
   __THREW__ = 0;
   $28 = invoke_ii(69, HEAP32[$tok >> 2] | 0) | 0;
   $29 = __THREW__;
   __THREW__ = 0;
   if (!($29 & 1)) {
    $31 = _strlen($28 | 0) | 0;
    __THREW__ = 0;
    invoke_iiii(25, $24 | 0, $28 | 0, $31 | 0) | 0;
    $32 = __THREW__;
    __THREW__ = 0;
    if (!($32 & 1)) {
     __THREW__ = 0;
     $34 = invoke_iiii(25, $24 | 0, 36328, 7) | 0;
     $35 = __THREW__;
     __THREW__ = 0;
     if (!($35 & 1)) {
      $37 = HEAP8[$while_ >> 0] | 0;
      if (!($37 & 1)) {
       $47 = $while_ + 1 | 0;
       $48 = ($37 & 255) >>> 1;
      } else {
       $47 = HEAP32[$while_ + 8 >> 2] | 0;
       $48 = HEAP32[$while_ + 4 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_iiii(25, $34 | 0, $47 | 0, $48 | 0) | 0;
      $49 = __THREW__;
      __THREW__ = 0;
      if (!($49 & 1)) {
       __THREW__ = 0;
       invoke_vii(43, $1 | 0, $4 | 0);
       $51 = __THREW__;
       __THREW__ = 0;
       if (!($51 & 1)) {
        __THREW__ = 0;
        invoke_vii(40, $agg$result | 0, $tok + 16 | 0);
        $54 = __THREW__;
        __THREW__ = 0;
        do if ($54 & 1) {
         $66 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body$index7Z2D = tempRet0;
         $eh$lpad$body$indexZ2D = $66;
        } else {
         $56 = $agg$result + 12 | 0;
         $57 = $tok + 28 | 0;
         HEAP32[$56 + 0 >> 2] = HEAP32[$57 + 0 >> 2];
         HEAP32[$56 + 4 >> 2] = HEAP32[$57 + 4 >> 2];
         HEAP32[$56 + 8 >> 2] = HEAP32[$57 + 8 >> 2];
         HEAP32[$56 + 12 >> 2] = HEAP32[$57 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $agg$result + 28 | 0, $1 | 0);
         $59 = __THREW__;
         __THREW__ = 0;
         if ($59 & 1) {
          $61 = ___cxa_find_matching_catch() | 0;
          $62 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
          $eh$lpad$body$index7Z2D = $62;
          $eh$lpad$body$indexZ2D = $61;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
          HEAP32[$ss >> 2] = 772;
          HEAP32[$ss + 64 >> 2] = 812;
          HEAP32[$3 >> 2] = 792;
          HEAP32[$4 >> 2] = 1104;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
          __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
          STACKTOP = sp;
          return;
         }
        } while (0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
        $$0 = $eh$lpad$body$indexZ2D;
        $$01 = $eh$lpad$body$index7Z2D;
        HEAP32[$ss >> 2] = 772;
        $68 = $ss + 64 | 0;
        HEAP32[$68 >> 2] = 812;
        HEAP32[$3 >> 2] = 792;
        HEAP32[$4 >> 2] = 1104;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
        ___resumeException($$0 | 0);
       }
      }
     }
    }
   }
  }
  $64 = ___cxa_find_matching_catch() | 0;
  $$0 = $64;
  $$01 = tempRet0;
  HEAP32[$ss >> 2] = 772;
  $68 = $ss + 64 | 0;
  HEAP32[$68 >> 2] = 812;
  HEAP32[$3 >> 2] = 792;
  HEAP32[$4 >> 2] = 1104;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
  ___resumeException($$0 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 ___resumeException($$01$i | 0);
}

function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$012$i$i = 0, $$012$i$i5 = 0, $0 = 0, $1 = 0, $103 = 0, $110 = 0, $111 = 0, $113 = 0, $12 = 0, $121 = 0, $122 = 0, $124 = 0, $126 = 0, $128 = 0, $17 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $43 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $61 = 0, $64 = 0, $66 = 0, $68 = 0, $75 = 0, $76 = 0, $79 = 0, $80 = 0, $81 = 0, $84 = 0, $94 = 0, $96 = 0, $__dc$09 = 0, $__dc$1 = 0, $__dg$010 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$011 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45800) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45944) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
 do if (!$12) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nb | 0, $__ne | 0, $__ob | 0) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 8; else HEAP32[$__oe >> 2] = $__ob + ($__ne - $__nb);
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $27 = HEAP8[$__nb >> 0] | 0;
  if ($27 << 24 >> 24 == 43 | $27 << 24 >> 24 == 45) {
   __THREW__ = 0;
   $31 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $27 | 0) | 0;
   $32 = __THREW__;
   __THREW__ = 0;
   if ($32 & 1) {
    label = 8;
    break;
   }
   $35 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $35 + 1;
   HEAP8[$35 >> 0] = $31;
   $__nf$0 = $__nb + 1 | 0;
  } else $__nf$0 = $__nb;
  if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $43 = $__nf$0 + 1 | 0;
   $44 = HEAP8[$43 >> 0] | 0;
   if ($44 << 24 >> 24 == 88 | $44 << 24 >> 24 == 120) {
    __THREW__ = 0;
    $48 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, 48) | 0;
    $49 = __THREW__;
    __THREW__ = 0;
    if ($49 & 1) {
     label = 8;
     break;
    }
    $51 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $51 + 1;
    HEAP8[$51 >> 0] = $48;
    __THREW__ = 0;
    $57 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$43 >> 0] | 0) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    if ($58 & 1) {
     label = 8;
     break;
    }
    $61 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $61 + 1;
    HEAP8[$61 >> 0] = $57;
    $__nf$1 = $__nf$0 + 2 | 0;
   } else $__nf$1 = $__nf$0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0;
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $64 = $__ne + -1 | 0;
   if ($64 >>> 0 > $__nf$1 >>> 0) {
    $$012$i$i5 = $__nf$1;
    $68 = $64;
    do {
     $66 = HEAP8[$$012$i$i5 >> 0] | 0;
     HEAP8[$$012$i$i5 >> 0] = HEAP8[$68 >> 0] | 0;
     HEAP8[$68 >> 0] = $66;
     $$012$i$i5 = $$012$i$i5 + 1 | 0;
     $68 = $68 + -1 | 0;
    } while ($$012$i$i5 >>> 0 < $68 >>> 0);
   }
  }
  __THREW__ = 0;
  $75 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
  $76 = __THREW__;
  __THREW__ = 0;
  if ($76 & 1) label = 8; else {
   L24 : do if ($__nf$1 >>> 0 < $__ne >>> 0) {
    $79 = $__grouping + 1 | 0;
    $80 = $__grouping + 4 | 0;
    $81 = $__grouping + 8 | 0;
    $__dc$09 = 0;
    $__dg$010 = 0;
    $__p$011 = $__nf$1;
    while (1) {
     $84 = (HEAP8[$__grouping >> 0] & 1) == 0;
     if (!(HEAP8[($84 ? $79 : HEAP32[$81 >> 2] | 0) + $__dg$010 >> 0] | 0)) {
      $__dc$1 = $__dc$09;
      $__dg$1 = $__dg$010;
     } else if (($__dc$09 | 0) == (HEAP8[($84 ? $79 : HEAP32[$81 >> 2] | 0) + $__dg$010 >> 0] | 0)) {
      $94 = HEAP32[$__oe >> 2] | 0;
      HEAP32[$__oe >> 2] = $94 + 1;
      HEAP8[$94 >> 0] = $75;
      $96 = HEAP8[$__grouping >> 0] | 0;
      if (!($96 & 1)) $103 = ($96 & 255) >>> 1; else $103 = HEAP32[$80 >> 2] | 0;
      $__dc$1 = 0;
      $__dg$1 = ($__dg$010 >>> 0 < ($103 + -1 | 0) >>> 0 & 1) + $__dg$010 | 0;
     } else {
      $__dc$1 = $__dc$09;
      $__dg$1 = $__dg$010;
     }
     __THREW__ = 0;
     $110 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$__p$011 >> 0] | 0) | 0;
     $111 = __THREW__;
     __THREW__ = 0;
     if ($111 & 1) break;
     $113 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $113 + 1;
     HEAP8[$113 >> 0] = $110;
     $__p$011 = $__p$011 + 1 | 0;
     if ($__p$011 >>> 0 >= $__ne >>> 0) break L24; else {
      $__dc$09 = $__dc$1 + 1 | 0;
      $__dg$010 = $__dg$1;
     }
    }
    $23 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $23;
    $lpad$phi$index2 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
    ___resumeException($lpad$phi$index | 0);
   } while (0);
   $121 = $__ob + ($__nf$1 - $__nb) | 0;
   $122 = HEAP32[$__oe >> 2] | 0;
   if (($121 | 0) != ($122 | 0)) {
    $124 = $122 + -1 | 0;
    if ($124 >>> 0 > $121 >>> 0) {
     $$012$i$i = $121;
     $128 = $124;
     do {
      $126 = HEAP8[$$012$i$i >> 0] | 0;
      HEAP8[$$012$i$i >> 0] = HEAP8[$128 >> 0] | 0;
      HEAP8[$128 >> 0] = $126;
      $$012$i$i = $$012$i$i + 1 | 0;
      $128 = $128 + -1 | 0;
     } while ($$012$i$i >>> 0 < $128 >>> 0);
    }
   }
  }
 } while (0);
 if ((label | 0) == 8) {
  $25 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $25;
  $lpad$phi$index2 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
  ___resumeException($lpad$phi$index | 0);
 }
 if (($__np | 0) == ($__ne | 0)) {
  $storemerge = HEAP32[$__oe >> 2] | 0;
  HEAP32[$__op >> 2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
  STACKTOP = sp;
  return;
 } else {
  $storemerge = $__ob + ($__np - $__nb) | 0;
  HEAP32[$__op >> 2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
  STACKTOP = sp;
  return;
 }
}

function _try_realloc_chunk($p, $nb) {
 $p = $p | 0;
 $nb = $nb | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $106 = 0, $109 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $124 = 0, $125 = 0, $134 = 0, $139 = 0, $143 = 0, $149 = 0, $159 = 0, $168 = 0, $2 = 0, $20 = 0, $3 = 0, $33 = 0, $35 = 0, $4 = 0, $45 = 0, $47 = 0, $5 = 0, $56 = 0, $62 = 0, $68 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $91 = 0, $96 = 0, $98 = 0, $R$0 = 0, $R$1 = 0, $RP$0 = 0, $newp$0 = 0, $storemerge = 0, $storemerge21 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $p + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $1 & -8;
 $3 = $p + $2 | 0;
 $4 = HEAP32[13766] | 0;
 $5 = $1 & 3;
 if (!(($5 | 0) != 1 & $p >>> 0 >= $4 >>> 0 & $p >>> 0 < $3 >>> 0)) _abort();
 $7 = $p + ($2 | 4) | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!($8 & 1)) _abort();
 if (!$5) {
  if ($nb >>> 0 < 256) {
   $newp$0 = 0;
   STACKTOP = sp;
   return $newp$0 | 0;
  }
  if ($2 >>> 0 >= ($nb + 4 | 0) >>> 0) if (($2 - $nb | 0) >>> 0 <= HEAP32[13882] << 1 >>> 0) {
   $newp$0 = $p;
   STACKTOP = sp;
   return $newp$0 | 0;
  }
  $newp$0 = 0;
  STACKTOP = sp;
  return $newp$0 | 0;
 }
 if ($2 >>> 0 >= $nb >>> 0) {
  $20 = $2 - $nb | 0;
  if ($20 >>> 0 <= 15) {
   $newp$0 = $p;
   STACKTOP = sp;
   return $newp$0 | 0;
  }
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $20 | 3;
  HEAP32[$7 >> 2] = HEAP32[$7 >> 2] | 1;
  _dispose_chunk($p + $nb | 0, $20);
  $newp$0 = $p;
  STACKTOP = sp;
  return $newp$0 | 0;
 }
 if (($3 | 0) == (HEAP32[13768] | 0)) {
  $33 = (HEAP32[13765] | 0) + $2 | 0;
  if ($33 >>> 0 <= $nb >>> 0) {
   $newp$0 = 0;
   STACKTOP = sp;
   return $newp$0 | 0;
  }
  $35 = $33 - $nb | 0;
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $35 | 1;
  HEAP32[13768] = $p + $nb;
  HEAP32[13765] = $35;
  $newp$0 = $p;
  STACKTOP = sp;
  return $newp$0 | 0;
 }
 if (($3 | 0) == (HEAP32[13767] | 0)) {
  $45 = (HEAP32[13764] | 0) + $2 | 0;
  if ($45 >>> 0 < $nb >>> 0) {
   $newp$0 = 0;
   STACKTOP = sp;
   return $newp$0 | 0;
  }
  $47 = $45 - $nb | 0;
  if ($47 >>> 0 > 15) {
   HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
   HEAP32[$p + ($nb + 4) >> 2] = $47 | 1;
   HEAP32[$p + $45 >> 2] = $47;
   $56 = $p + ($45 + 4) | 0;
   HEAP32[$56 >> 2] = HEAP32[$56 >> 2] & -2;
   $storemerge = $p + $nb | 0;
   $storemerge21 = $47;
  } else {
   HEAP32[$0 >> 2] = $1 & 1 | $45 | 2;
   $62 = $p + ($45 + 4) | 0;
   HEAP32[$62 >> 2] = HEAP32[$62 >> 2] | 1;
   $storemerge = 0;
   $storemerge21 = 0;
  }
  HEAP32[13764] = $storemerge21;
  HEAP32[13767] = $storemerge;
  $newp$0 = $p;
  STACKTOP = sp;
  return $newp$0 | 0;
 }
 if ($8 & 2) {
  $newp$0 = 0;
  STACKTOP = sp;
  return $newp$0 | 0;
 }
 $68 = ($8 & -8) + $2 | 0;
 if ($68 >>> 0 < $nb >>> 0) {
  $newp$0 = 0;
  STACKTOP = sp;
  return $newp$0 | 0;
 }
 $70 = $68 - $nb | 0;
 $71 = $8 >>> 3;
 do if ($8 >>> 0 < 256) {
  $74 = HEAP32[$p + ($2 + 8) >> 2] | 0;
  $76 = HEAP32[$p + ($2 + 12) >> 2] | 0;
  $78 = 55088 + ($71 << 1 << 2) | 0;
  if (($74 | 0) != ($78 | 0)) {
   if ($74 >>> 0 < $4 >>> 0) _abort();
   if ((HEAP32[$74 + 12 >> 2] | 0) != ($3 | 0)) _abort();
  }
  if (($76 | 0) == ($74 | 0)) {
   HEAP32[13762] = HEAP32[13762] & ~(1 << $71);
   break;
  }
  if (($76 | 0) == ($78 | 0)) $$pre$phiZ2D = $76 + 8 | 0; else {
   if ($76 >>> 0 < $4 >>> 0) _abort();
   $91 = $76 + 8 | 0;
   if ((HEAP32[$91 >> 2] | 0) == ($3 | 0)) $$pre$phiZ2D = $91; else _abort();
  }
  HEAP32[$74 + 12 >> 2] = $76;
  HEAP32[$$pre$phiZ2D >> 2] = $74;
 } else {
  $96 = HEAP32[$p + ($2 + 24) >> 2] | 0;
  $98 = HEAP32[$p + ($2 + 12) >> 2] | 0;
  do if (($98 | 0) == ($3 | 0)) {
   $109 = $p + ($2 + 20) | 0;
   $110 = HEAP32[$109 >> 2] | 0;
   if (!$110) {
    $112 = $p + ($2 + 16) | 0;
    $113 = HEAP32[$112 >> 2] | 0;
    if (!$113) {
     $R$1 = 0;
     break;
    } else {
     $R$0 = $113;
     $RP$0 = $112;
    }
   } else {
    $R$0 = $110;
    $RP$0 = $109;
   }
   while (1) {
    $115 = $R$0 + 20 | 0;
    $116 = HEAP32[$115 >> 2] | 0;
    if ($116) {
     $R$0 = $116;
     $RP$0 = $115;
     continue;
    }
    $118 = $R$0 + 16 | 0;
    $119 = HEAP32[$118 >> 2] | 0;
    if (!$119) break; else {
     $R$0 = $119;
     $RP$0 = $118;
    }
   }
   if ($RP$0 >>> 0 < $4 >>> 0) _abort(); else {
    HEAP32[$RP$0 >> 2] = 0;
    $R$1 = $R$0;
    break;
   }
  } else {
   $101 = HEAP32[$p + ($2 + 8) >> 2] | 0;
   if ($101 >>> 0 < $4 >>> 0) _abort();
   $103 = $101 + 12 | 0;
   if ((HEAP32[$103 >> 2] | 0) != ($3 | 0)) _abort();
   $106 = $98 + 8 | 0;
   if ((HEAP32[$106 >> 2] | 0) == ($3 | 0)) {
    HEAP32[$103 >> 2] = $98;
    HEAP32[$106 >> 2] = $101;
    $R$1 = $98;
    break;
   } else _abort();
  } while (0);
  if ($96) {
   $124 = HEAP32[$p + ($2 + 28) >> 2] | 0;
   $125 = 55352 + ($124 << 2) | 0;
   if (($3 | 0) == (HEAP32[$125 >> 2] | 0)) {
    HEAP32[$125 >> 2] = $R$1;
    if (!$R$1) {
     HEAP32[13763] = HEAP32[13763] & ~(1 << $124);
     break;
    }
   } else {
    if ($96 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort();
    $134 = $96 + 16 | 0;
    if ((HEAP32[$134 >> 2] | 0) == ($3 | 0)) HEAP32[$134 >> 2] = $R$1; else HEAP32[$96 + 20 >> 2] = $R$1;
    if (!$R$1) break;
   }
   $139 = HEAP32[13766] | 0;
   if ($R$1 >>> 0 < $139 >>> 0) _abort();
   HEAP32[$R$1 + 24 >> 2] = $96;
   $143 = HEAP32[$p + ($2 + 16) >> 2] | 0;
   do if ($143) if ($143 >>> 0 < $139 >>> 0) _abort(); else {
    HEAP32[$R$1 + 16 >> 2] = $143;
    HEAP32[$143 + 24 >> 2] = $R$1;
    break;
   } while (0);
   $149 = HEAP32[$p + ($2 + 20) >> 2] | 0;
   if ($149) if ($149 >>> 0 < (HEAP32[13766] | 0) >>> 0) _abort(); else {
    HEAP32[$R$1 + 20 >> 2] = $149;
    HEAP32[$149 + 24 >> 2] = $R$1;
    break;
   }
  }
 } while (0);
 if ($70 >>> 0 < 16) {
  HEAP32[$0 >> 2] = $68 | $1 & 1 | 2;
  $159 = $p + ($68 | 4) | 0;
  HEAP32[$159 >> 2] = HEAP32[$159 >> 2] | 1;
  $newp$0 = $p;
  STACKTOP = sp;
  return $newp$0 | 0;
 } else {
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$p + ($nb + 4) >> 2] = $70 | 3;
  $168 = $p + ($68 | 4) | 0;
  HEAP32[$168 >> 2] = HEAP32[$168 >> 2] | 1;
  _dispose_chunk($p + $nb | 0, $70);
  $newp$0 = $p;
  STACKTOP = sp;
  return $newp$0 | 0;
 }
 return 0;
}

function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i18 = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i24 = 0, $$0$i$i1$i$i9 = 0, $$0$i$i15 = 0, $$0$in = 0, $$02 = 0, $$pre$i3$i$i11 = 0, $$pre$i3$i$i26 = 0, $0 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $123 = 0, $13 = 0, $135 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $60 = 0, $63 = 0, $73 = 0, $76 = 0, $86 = 0, $87 = 0, $89 = 0, $91 = 0, $__r$0 = 0, $__r$0$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $147 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $147 = 1;
   break;
  } else {
   $147 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($147) {
   $148 = $13;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($147) label = 16; else $148 = 0;
 if ((label | 0) == 16) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$02 = 0;
  STACKTOP = sp;
  return $$02 | 0;
 }
 $28 = HEAP32[$__b >> 2] | 0;
 $30 = HEAP32[$28 + 12 >> 2] | 0;
 if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
 if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $$0$i$i) | 0)) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$02 = 0;
  STACKTOP = sp;
  return $$02 | 0;
 }
 $49 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i, 0) | 0) << 24 >> 24;
 $50 = HEAP32[$__b >> 2] | 0;
 $51 = $50 + 12 | 0;
 $52 = HEAP32[$51 >> 2] | 0;
 if (($52 | 0) == (HEAP32[$50 + 16 >> 2] | 0)) {
  FUNCTION_TABLE_ii[HEAP32[(HEAP32[$50 >> 2] | 0) + 40 >> 2] & 127]($50) | 0;
  $$0$in = $__n;
  $$pre$i3$i$i11 = $148;
  $73 = $148;
  $__r$0$in = $49;
 } else {
  HEAP32[$51 >> 2] = $52 + 4;
  $$0$in = $__n;
  $$pre$i3$i$i11 = $148;
  $73 = $148;
  $__r$0$in = $49;
 }
 while (1) {
  $__r$0 = $__r$0$in + -48 | 0;
  $$0 = $$0$in + -1 | 0;
  $60 = HEAP32[$__b >> 2] | 0;
  do if (!$60) $87 = 1; else {
   $63 = HEAP32[$60 + 12 >> 2] | 0;
   if (($63 | 0) == (HEAP32[$60 + 16 >> 2] | 0)) $$0$i$i$i$i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 127]($60) | 0; else $$0$i$i$i$i3 = HEAP32[$63 >> 2] | 0;
   if (($$0$i$i$i$i3 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $87 = 1;
    break;
   } else {
    $87 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$73) {
   $$pre$i3$i$i26 = $$pre$i3$i$i11;
   $149 = 0;
   $86 = 1;
  } else {
   $76 = HEAP32[$73 + 12 >> 2] | 0;
   if (($76 | 0) == (HEAP32[$73 + 16 >> 2] | 0)) $$0$i$i1$i$i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 36 >> 2] & 127]($73) | 0; else $$0$i$i1$i$i9 = HEAP32[$76 >> 2] | 0;
   if (($$0$i$i1$i$i9 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    $$pre$i3$i$i26 = 0;
    $149 = 0;
    $86 = 1;
    break;
   } else {
    $$pre$i3$i$i26 = $$pre$i3$i$i11;
    $149 = $$pre$i3$i$i11;
    $86 = ($$pre$i3$i$i11 | 0) == 0;
    break;
   }
  } while (0);
  $89 = HEAP32[$__b >> 2] | 0;
  if (!(($87 ^ $86) & ($$0 | 0) > 0)) break;
  $91 = HEAP32[$89 + 12 >> 2] | 0;
  if (($91 | 0) == (HEAP32[$89 + 16 >> 2] | 0)) $$0$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 36 >> 2] & 127]($89) | 0; else $$0$i$i15 = HEAP32[$91 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $$0$i$i15) | 0)) {
   $$02 = $__r$0;
   label = 63;
   break;
  }
  $110 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i15, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
  $111 = HEAP32[$__b >> 2] | 0;
  $112 = $111 + 12 | 0;
  $113 = HEAP32[$112 >> 2] | 0;
  if (($113 | 0) == (HEAP32[$111 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$111 >> 2] | 0) + 40 >> 2] & 127]($111) | 0;
   $$0$in = $$0;
   $$pre$i3$i$i11 = $$pre$i3$i$i26;
   $73 = $149;
   $__r$0$in = $110;
   continue;
  } else {
   HEAP32[$112 >> 2] = $113 + 4;
   $$0$in = $$0;
   $$pre$i3$i$i11 = $$pre$i3$i$i26;
   $73 = $149;
   $__r$0$in = $110;
   continue;
  }
 }
 if ((label | 0) == 63) {
  STACKTOP = sp;
  return $$02 | 0;
 }
 do if (!$89) $150 = 1; else {
  $123 = HEAP32[$89 + 12 >> 2] | 0;
  if (($123 | 0) == (HEAP32[$89 + 16 >> 2] | 0)) $$0$i$i$i$i18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$89 >> 2] | 0) + 36 >> 2] & 127]($89) | 0; else $$0$i$i$i$i18 = HEAP32[$123 >> 2] | 0;
  if (($$0$i$i$i$i18 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $150 = 1;
   break;
  } else {
   $150 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i3$i$i26) label = 60; else {
  $135 = HEAP32[$$pre$i3$i$i26 + 12 >> 2] | 0;
  if (($135 | 0) == (HEAP32[$$pre$i3$i$i26 + 16 >> 2] | 0)) $$0$i$i1$i$i24 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i26 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i26) | 0; else $$0$i$i1$i$i24 = HEAP32[$135 >> 2] | 0;
  if (($$0$i$i1$i$i24 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 60;
   break;
  }
  if ($150) {
   $$02 = $__r$0;
   STACKTOP = sp;
   return $$02 | 0;
  }
 } while (0);
 if ((label | 0) == 60) if (!$150) {
  $$02 = $__r$0;
  STACKTOP = sp;
  return $$02 | 0;
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 $$02 = $__r$0;
 STACKTOP = sp;
 return $$02 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result, $this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $0 = 0, $1 = 0, $100 = 0, $11 = 0, $110 = 0, $111 = 0, $114 = 0, $117 = 0, $118 = 0, $119 = 0, $122 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $30 = 0, $35 = 0, $36 = 0, $4 = 0, $43 = 0, $45 = 0, $52 = 0, $6 = 0, $61 = 0, $63 = 0, $64 = 0, $71 = 0, $79 = 0, $81 = 0, $82 = 0, $84 = 0, $86 = 0, $88 = 0, $90 = 0, $92 = 0, $94 = 0, $95 = 0, $96 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 60 | 0;
 $__loc = sp + 56 | 0;
 $__pat = sp + 52 | 0;
 $__dp = sp + 165 | 0;
 $__ts = sp + 164 | 0;
 $__grp = sp + 40 | 0;
 $__sym = sp + 28 | 0;
 $__sn = sp + 16 | 0;
 $__fd = sp + 12 | 0;
 $__mbuf = sp + 64 | 0;
 $__mi = sp + 8 | 0;
 $__me = sp + 4 | 0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 45800) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 do if (!($2 & 1)) {
  $4 = HEAP8[$__digits >> 0] | 0;
  $6 = ($4 & 1) == 0;
  if ($6) $11 = ($4 & 255) >>> 1; else $11 = HEAP32[$__digits + 4 >> 2] | 0;
  if (!$11) $25 = 0; else {
   if ($6) $17 = $__digits + 1 | 0; else $17 = HEAP32[$__digits + 8 >> 2] | 0;
   $16 = HEAP8[$17 >> 0] | 0;
   __THREW__ = 0;
   $21 = invoke_iii(HEAP32[(HEAP32[$1 >> 2] | 0) + 28 >> 2] | 0, $1 | 0, 45) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) break;
   $25 = $16 << 24 >> 24 == $21 << 24 >> 24;
  }
  HEAP32[$__pat >> 2] = 0;
  HEAP32[$__grp + 0 >> 2] = 0;
  HEAP32[$__grp + 4 >> 2] = 0;
  HEAP32[$__grp + 8 >> 2] = 0;
  HEAP32[$__sym + 0 >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  HEAP32[$__sym + 8 >> 2] = 0;
  HEAP32[$__sn + 0 >> 2] = 0;
  HEAP32[$__sn + 4 >> 2] = 0;
  HEAP32[$__sn + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_viiiiiiiiii(3, $__intl | 0, $25 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
  $26 = __THREW__;
  __THREW__ = 0;
  L15 : do if ($26 & 1) {
   $92 = ___cxa_find_matching_catch() | 0;
   $$0 = $92;
   $$01 = tempRet0;
  } else {
   $28 = HEAP8[$__digits >> 0] | 0;
   $30 = ($28 & 1) == 0;
   if ($30) $36 = ($28 & 255) >>> 1; else $36 = HEAP32[$__digits + 4 >> 2] | 0;
   $35 = HEAP32[$__fd >> 2] | 0;
   if (($36 | 0) > ($35 | 0)) {
    if ($30) $43 = ($28 & 255) >>> 1; else $43 = HEAP32[$__digits + 4 >> 2] | 0;
    $45 = HEAP8[$__sn >> 0] | 0;
    if (!($45 & 1)) $61 = ($45 & 255) >>> 1; else $61 = HEAP32[$__sn + 4 >> 2] | 0;
    $52 = HEAP8[$__sym >> 0] | 0;
    if (!($52 & 1)) $63 = ($52 & 255) >>> 1; else $63 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $61 + ($43 - $35 << 1 | 1) + $63 | 0;
   } else {
    $64 = HEAP8[$__sn >> 0] | 0;
    if (!($64 & 1)) $79 = ($64 & 255) >>> 1; else $79 = HEAP32[$__sn + 4 >> 2] | 0;
    $71 = HEAP8[$__sym >> 0] | 0;
    if (!($71 & 1)) $81 = ($71 & 255) >>> 1; else $81 = HEAP32[$__sym + 4 >> 2] | 0;
    $$pn = $79 + 2 + $81 | 0;
   }
   $82 = $$pn + $35 | 0;
   do if ($82 >>> 0 > 100) {
    $84 = _malloc($82) | 0;
    if (!$84) {
     __THREW__ = 0;
     invoke_v(5);
     $86 = __THREW__;
     __THREW__ = 0;
     if ($86 & 1) {
      $88 = ___cxa_find_matching_catch() | 0;
      $$0 = $88;
      $$01 = tempRet0;
      break L15;
     } else {
      $100 = HEAP8[$__digits >> 0] | 0;
      $96 = 0;
      $__mb$0 = 0;
      break;
     }
    } else {
     $100 = $28;
     $96 = $84;
     $__mb$0 = $84;
    }
   } else {
    $100 = $28;
    $96 = 0;
    $__mb$0 = $__mbuf;
   } while (0);
   if (!($100 & 1)) {
    $110 = $__digits + 1 | 0;
    $111 = ($100 & 255) >>> 1;
   } else {
    $110 = HEAP32[$__digits + 8 >> 2] | 0;
    $111 = HEAP32[$__digits + 4 >> 2] | 0;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiiiiiiii(1, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $110 | 0, $110 + $111 | 0, $1 | 0, $25 | 0, $__pat | 0, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $35 | 0);
   $114 = __THREW__;
   __THREW__ = 0;
   if (!($114 & 1)) {
    HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
    $117 = HEAP32[$__mi >> 2] | 0;
    $118 = HEAP32[$__me >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    invoke_viiiiiii(39, $agg$result | 0, $$byval_copy | 0, $__mb$0 | 0, $117 | 0, $118 | 0, $__iob | 0, $__fl | 0);
    $119 = __THREW__;
    __THREW__ = 0;
    if (!($119 & 1)) {
     _free($96);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
     __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
     STACKTOP = sp;
     return;
    }
   }
   $94 = ___cxa_find_matching_catch() | 0;
   $95 = tempRet0;
   _free($96);
   $$0 = $94;
   $$01 = $95;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
  $$1 = $$0;
  $$12 = $$01;
  $122 = HEAP32[$__loc >> 2] | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($122) | 0;
  ___resumeException($$1 | 0);
 } while (0);
 $90 = ___cxa_find_matching_catch() | 0;
 $$1 = $90;
 $$12 = tempRet0;
 $122 = HEAP32[$__loc >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($122) | 0;
 ___resumeException($$1 | 0);
}

function __ZN12_GLOBAL__N_15Stack4dumpEv($this) {
 $this = $this | 0;
 var $$idx = 0, $$idx1 = 0, $$idx3$val = 0, $0 = 0, $101 = 0, $102 = 0, $13 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $59 = 0, $6 = 0, $62 = 0, $66 = 0, $71 = 0, $72 = 0, $77 = 0, $78 = 0, $8 = 0, $80 = 0, $92 = 0, $93 = 0, $98 = 0, $99 = 0, $i$07 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $$idx = $this + 12 | 0;
 $$idx1 = $this + 16 | 0;
 L1 : do if ((HEAP32[$$idx1 >> 2] | 0) != (HEAP32[$$idx >> 2] | 0)) {
  $i$07 = 0;
  while (1) {
   $4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41224, 38072, 6) | 0, $i$07) | 0, 38080, 4) | 0;
   $$idx3$val = HEAP32[$$idx >> 2] | 0;
   $5 = $$idx3$val + ($i$07 * 144 | 0) + 8 | 0;
   $6 = HEAP8[$5 >> 0] | 0;
   $8 = ($6 & 1) == 0;
   if ($8) $13 = ($6 & 255) >>> 1; else $13 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 12 >> 2] | 0;
   if ($13) {
    if ($8) {
     $22 = $5 + 1 | 0;
     $23 = ($6 & 255) >>> 1;
    } else {
     $22 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 16 >> 2] | 0;
     $23 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 12 >> 2] | 0;
    }
    __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, $22, $23) | 0;
   }
   $24 = $$idx3$val + ($i$07 * 144 | 0) + 20 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   do if ($25) {
    $27 = HEAP8[$5 >> 0] | 0;
    if (!($27 & 1)) $34 = ($27 & 255) >>> 1; else $34 = HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 12 >> 2] | 0;
    if (!$34) $38 = $25; else {
     __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 38104, 1) | 0;
     $38 = HEAP32[$24 >> 2] | 0;
    }
    $36 = $$idx3$val + ($i$07 * 144 | 0) + 28 | 0;
    if (($38 | 0) != (HEAP32[$36 >> 2] | 0)) {
     $50 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 38120, 1) | 0;
     $53 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($50, HEAP32[$24 >> 2] | 0) | 0, 38104, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($53, HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 24 >> 2] | 0) | 0;
     $56 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($50, 38128, 3) | 0;
     $59 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($56, HEAP32[$36 >> 2] | 0) | 0, 38104, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($59, HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 32 >> 2] | 0) | 0;
     __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($56, 38096, 1) | 0;
     break;
    }
    $40 = $$idx3$val + ($i$07 * 144 | 0) + 24 | 0;
    $42 = $$idx3$val + ($i$07 * 144 | 0) + 32 | 0;
    $44 = (HEAP32[$40 >> 2] | 0) == (HEAP32[$42 >> 2] | 0);
    $46 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($4, $38) | 0, 38104, 1) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($46, HEAP32[$40 >> 2] | 0) | 0;
    if (!$44) {
     $48 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 38112, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($48, HEAP32[$42 >> 2] | 0) | 0;
    }
   } while (0);
   $62 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 38088, 2) | 0;
   $66 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($62, HEAP32[(HEAP32[$$idx >> 2] | 0) + ($i$07 * 144 | 0) >> 2] | 0) | 0, 38096, 1) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $66 + (HEAP32[(HEAP32[$66 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $71 = invoke_iii(22, $0 | 0, 45800) | 0;
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    label = 23;
    break;
   }
   __THREW__ = 0;
   $77 = invoke_iii(HEAP32[(HEAP32[$71 >> 2] | 0) + 28 >> 2] | 0, $71 | 0, 10) | 0;
   $78 = __THREW__;
   __THREW__ = 0;
   if ($78 & 1) {
    label = 23;
    break;
   }
   __ZNSt3__16localeD2Ev($0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($66, $77) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($66) | 0;
   $i$07 = $i$07 + 1 | 0;
   if ($i$07 >>> 0 >= (((HEAP32[$$idx1 >> 2] | 0) - (HEAP32[$$idx >> 2] | 0) | 0) / 144 | 0) >>> 0) break L1;
  }
  if ((label | 0) == 23) {
   $80 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($80 | 0);
  }
 } while (0);
 __ZNKSt3__18ios_base6getlocEv($0, 41224 + (HEAP32[(HEAP32[10306] | 0) + -12 >> 2] | 0) | 0);
 __THREW__ = 0;
 $92 = invoke_iii(22, $0 | 0, 45800) | 0;
 $93 = __THREW__;
 __THREW__ = 0;
 if ($93 & 1) {
  $101 = ___cxa_find_matching_catch() | 0;
  $102 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($101 | 0);
 }
 __THREW__ = 0;
 $98 = invoke_iii(HEAP32[(HEAP32[$92 >> 2] | 0) + 28 >> 2] | 0, $92 | 0, 10) | 0;
 $99 = __THREW__;
 __THREW__ = 0;
 if ($99 & 1) {
  $101 = ___cxa_find_matching_catch() | 0;
  $102 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($101 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(41224, $98) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(41224) | 0;
  STACKTOP = sp;
  return;
 }
}

function _fmod($x, $y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa10 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $106 = 0, $107 = 0, $11 = 0, $112 = 0, $113 = 0, $115 = 0, $118 = 0, $12 = 0, $120 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $146 = 0, $149 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $2 = 0, $23 = 0.0, $25 = 0, $26 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $45 = 0, $46 = 0, $55 = 0, $6 = 0, $60 = 0, $61 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $78 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $93 = 0, $94 = 0, $96 = 0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$33 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $6 = $4 & 2047;
 $7 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
 $12 = tempRet0;
 if (!(($11 | 0) == 0 & ($12 | 0) == 0)) {
  $16 = $3 & 2147483647;
  if (!($16 >>> 0 > 2146435072 | ($16 | 0) == 2146435072 & $2 >>> 0 > 0 | ($6 | 0) == 2047)) {
   $25 = _bitshift64Shl($0 | 0, $1 | 0, 1) | 0;
   $26 = tempRet0;
   if (!($26 >>> 0 > $12 >>> 0 | ($26 | 0) == ($12 | 0) & $25 >>> 0 > $11 >>> 0)) {
    if (!(($25 | 0) == ($11 | 0) & ($26 | 0) == ($12 | 0))) {
     $$0 = $x;
     STACKTOP = sp;
     return +$$0;
    }
    $$0 = $x * 0.0;
    STACKTOP = sp;
    return +$$0;
   }
   if (!$6) {
    $37 = _bitshift64Shl($0 | 0, $1 | 0, 12) | 0;
    $38 = tempRet0;
    if (($38 | 0) > -1 | ($38 | 0) == -1 & $37 >>> 0 > 4294967295) {
     $45 = $37;
     $46 = $38;
     $ex$026 = 0;
     while (1) {
      $44 = $ex$026 + -1 | 0;
      $45 = _bitshift64Shl($45 | 0, $46 | 0, 1) | 0;
      $46 = tempRet0;
      if (!(($46 | 0) > -1 | ($46 | 0) == -1 & $45 >>> 0 > 4294967295)) {
       $ex$0$lcssa = $44;
       break;
      } else $ex$026 = $44;
     }
    } else $ex$0$lcssa = 0;
    $55 = _bitshift64Shl($0 | 0, $1 | 0, 1 - $ex$0$lcssa | 0) | 0;
    $83 = $55;
    $84 = tempRet0;
    $ex$1 = $ex$0$lcssa;
   } else {
    $83 = $0;
    $84 = $1 & 1048575 | 1048576;
    $ex$1 = $6;
   }
   if (!$9) {
    $60 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
    $61 = tempRet0;
    if (($61 | 0) > -1 | ($61 | 0) == -1 & $60 >>> 0 > 4294967295) {
     $68 = $60;
     $69 = $61;
     $ey$020 = 0;
     while (1) {
      $67 = $ey$020 + -1 | 0;
      $68 = _bitshift64Shl($68 | 0, $69 | 0, 1) | 0;
      $69 = tempRet0;
      if (!(($69 | 0) > -1 | ($69 | 0) == -1 & $68 >>> 0 > 4294967295)) {
       $ey$0$lcssa = $67;
       break;
      } else $ey$020 = $67;
     }
    } else $ey$0$lcssa = 0;
    $78 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $ey$0$lcssa | 0) | 0;
    $85 = $78;
    $86 = tempRet0;
    $ey$1$ph = $ey$0$lcssa;
   } else {
    $85 = $2;
    $86 = $3 & 1048575 | 1048576;
    $ey$1$ph = $9;
   }
   $87 = _i64Subtract($83 | 0, $84 | 0, $85 | 0, $86 | 0) | 0;
   $88 = tempRet0;
   $93 = ($88 | 0) > -1 | ($88 | 0) == -1 & $87 >>> 0 > 4294967295;
   L27 : do if (($ex$1 | 0) > ($ey$1$ph | 0)) {
    $152 = $93;
    $153 = $87;
    $154 = $88;
    $94 = $83;
    $96 = $84;
    $ex$212 = $ex$1;
    while (1) {
     if ($152) if (($94 | 0) == ($85 | 0) & ($96 | 0) == ($86 | 0)) break; else {
      $100 = $153;
      $101 = $154;
     } else {
      $100 = $94;
      $101 = $96;
     }
     $102 = _bitshift64Shl($100 | 0, $101 | 0, 1) | 0;
     $103 = tempRet0;
     $104 = $ex$212 + -1 | 0;
     $106 = _i64Subtract($102 | 0, $103 | 0, $85 | 0, $86 | 0) | 0;
     $107 = tempRet0;
     $112 = ($107 | 0) > -1 | ($107 | 0) == -1 & $106 >>> 0 > 4294967295;
     if (($104 | 0) > ($ey$1$ph | 0)) {
      $152 = $112;
      $153 = $106;
      $154 = $107;
      $94 = $102;
      $96 = $103;
      $ex$212 = $104;
     } else {
      $$lcssa10 = $112;
      $113 = $102;
      $115 = $103;
      $155 = $106;
      $156 = $107;
      $ex$2$lcssa = $104;
      break L27;
     }
    }
    $$0 = $x * 0.0;
    STACKTOP = sp;
    return +$$0;
   } else {
    $$lcssa10 = $93;
    $113 = $83;
    $115 = $84;
    $155 = $87;
    $156 = $88;
    $ex$2$lcssa = $ex$1;
   } while (0);
   if ($$lcssa10) if (($113 | 0) == ($85 | 0) & ($115 | 0) == ($86 | 0)) {
    $$0 = $x * 0.0;
    STACKTOP = sp;
    return +$$0;
   } else {
    $118 = $156;
    $120 = $155;
   } else {
    $118 = $115;
    $120 = $113;
   }
   if ($118 >>> 0 < 1048576 | ($118 | 0) == 1048576 & $120 >>> 0 < 0) {
    $126 = $120;
    $127 = $118;
    $ex$33 = $ex$2$lcssa;
    while (1) {
     $128 = _bitshift64Shl($126 | 0, $127 | 0, 1) | 0;
     $129 = tempRet0;
     $130 = $ex$33 + -1 | 0;
     if ($129 >>> 0 < 1048576 | ($129 | 0) == 1048576 & $128 >>> 0 < 0) {
      $126 = $128;
      $127 = $129;
      $ex$33 = $130;
     } else {
      $137 = $128;
      $138 = $129;
      $ex$3$lcssa = $130;
      break;
     }
    }
   } else {
    $137 = $120;
    $138 = $118;
    $ex$3$lcssa = $ex$2$lcssa;
   }
   if (($ex$3$lcssa | 0) > 0) {
    $139 = _i64Add($137 | 0, $138 | 0, 0, -1048576) | 0;
    $140 = tempRet0;
    $141 = _bitshift64Shl($ex$3$lcssa | 0, 0, 52) | 0;
    $149 = $140 | tempRet0;
    $151 = $139 | $141;
   } else {
    $146 = _bitshift64Lshr($137 | 0, $138 | 0, 1 - $ex$3$lcssa | 0) | 0;
    $149 = tempRet0;
    $151 = $146;
   }
   HEAP32[tempDoublePtr >> 2] = $151;
   HEAP32[tempDoublePtr + 4 >> 2] = $149 | $10;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
   STACKTOP = sp;
   return +$$0;
  }
 }
 $23 = $x * $y;
 $$0 = $23 / $23;
 STACKTOP = sp;
 return +$$0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $66 = 0, $68 = 0, $70 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 272 | 0;
 $__nb = sp + 268 | 0;
 $__o = sp + 40 | 0;
 $__op = sp + 36 | 0;
 $__oe = sp + 32 | 0;
 $0 = sp + 28 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 44512, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $$byval_copy + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $$byval_copy) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $$byval_copy) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(1) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $$byval_copy + 4 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $$byval_copy | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(1) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr12 = $$byval_copy + 4 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr12 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr12 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $32 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $$byval_copy | 0) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    if (!($33 & 1)) {
     $__nc$1 = $32;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $35 = HEAP32[$__nb >> 2] | 0;
   if ($35) {
    $40 = $35;
    $64 = $35;
    $__nc$2 = $__nc$1;
    break;
   }
   __THREW__ = 0;
   invoke_v(5);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $40 = $$pre;
    $64 = $$pre;
    $__nc$2 = $__nc$1;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$125 = tempRet0;
  $$16 = $25;
  ___resumeException($$16 | 0);
 } else {
  $40 = HEAP32[$__nb >> 2] | 0;
  $64 = 0;
  $__nc$2 = $__nc$0;
 } while (0);
 $39 = $40 + $__nc$2 | 0;
 $41 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40, $39, $__iob) | 0;
 if (($40 | 0) == ($__nar | 0)) {
  $52 = $__nar;
  $62 = 0;
  $__ob$0 = $__o;
  label = 20;
 } else {
  $44 = _malloc($__nc$2 << 3) | 0;
  if (!$44) {
   __THREW__ = 0;
   invoke_v(5);
   $46 = __THREW__;
   __THREW__ = 0;
   if ($46 & 1) {
    $70 = 0;
    label = 19;
   } else {
    $52 = HEAP32[$__nb >> 2] | 0;
    $62 = $44;
    $__ob$0 = $44;
    label = 20;
   }
  } else {
   $52 = $40;
   $62 = $44;
   $__ob$0 = $44;
   label = 20;
  }
 }
 do if ((label | 0) == 20) {
  __THREW__ = 0;
  invoke_vii(47, $0 | 0, $__iob | 0);
  $50 = __THREW__;
  __THREW__ = 0;
  if ($50 & 1) {
   $70 = $62;
   label = 19;
  } else {
   __THREW__ = 0;
   invoke_viiiiiii(44, $52 | 0, $41 | 0, $39 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
   $53 = __THREW__;
   __THREW__ = 0;
   if ($53 & 1) {
    $65 = ___cxa_find_matching_catch() | 0;
    $66 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    $$0 = $65;
    $$01 = $66;
    $68 = $62;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
   HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
   $57 = HEAP32[$__op >> 2] | 0;
   $58 = HEAP32[$__oe >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   invoke_viiiiiii(45, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $57 | 0, $58 | 0, $__iob | 0, $__fl | 0);
   $59 = __THREW__;
   __THREW__ = 0;
   if ($59 & 1) {
    $70 = $62;
    label = 19;
   } else {
    $61 = HEAP32[$1 >> 2] | 0;
    HEAP32[$__s >> 2] = $61;
    HEAP32[$agg$result >> 2] = $61;
    if (!$62) {
     _free($64);
     STACKTOP = sp;
     return;
    }
    _free($62);
    _free($64);
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 if ((label | 0) == 19) {
  $48 = ___cxa_find_matching_catch() | 0;
  $$0 = $48;
  $$01 = tempRet0;
  $68 = $70;
 }
 if ($68) _free($68);
 _free($64);
 $$125 = $$01;
 $$16 = $$0;
 ___resumeException($$16 | 0);
}

function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i11 = 0, $$0$in = 0, $$02 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i8 = 0, $0 = 0, $106 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $141 = 0, $142 = 0, $156 = 0, $28 = 0, $30 = 0, $40 = 0, $42 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $65 = 0, $77 = 0, $78 = 0, $79 = 0, $91 = 0, $94 = 0, $96 = 0, $__r$0 = 0, $__r$0$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $12 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $12 = 0;
  break;
 } else {
  $12 = HEAP32[$__b >> 2] | 0;
  break;
 } else $12 = $0; while (0);
 $13 = ($12 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($13) $156 = $14; else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($13) label = 12; else $156 = 0;
 if ((label | 0) == 12) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$02 = 0;
  STACKTOP = sp;
  return $$02 | 0;
 }
 $28 = HEAP32[$__b >> 2] | 0;
 $30 = HEAP32[$28 + 12 >> 2] | 0;
 if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
 $40 = $$0$i$i & 255;
 if ($40 << 24 >> 24 > -1) {
  $42 = $__ct + 8 | 0;
  if (HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 2048) {
   $54 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $40, 0) | 0) << 24 >> 24;
   $55 = HEAP32[$__b >> 2] | 0;
   $56 = $55 + 12 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   if (($57 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 40 >> 2] & 127]($55) | 0;
    $$0$in = $__n;
    $$pre$i2$i$i8 = $156;
    $79 = $156;
    $__r$0$in = $54;
   } else {
    HEAP32[$56 >> 2] = $57 + 1;
    $$0$in = $__n;
    $$pre$i2$i$i8 = $156;
    $79 = $156;
    $__r$0$in = $54;
   }
   while (1) {
    $__r$0 = $__r$0$in + -48 | 0;
    $$0 = $$0$in + -1 | 0;
    $65 = HEAP32[$__b >> 2] | 0;
    do if (!$65) $77 = 0; else if ((HEAP32[$65 + 12 >> 2] | 0) == (HEAP32[$65 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 127]($65) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $77 = 0;
     break;
    } else {
     $77 = HEAP32[$__b >> 2] | 0;
     break;
    } else $77 = $65; while (0);
    $78 = ($77 | 0) == 0;
    if (!$79) {
     $$pre$i2$i$i21 = $$pre$i2$i$i8;
     $91 = 0;
    } else if ((HEAP32[$79 + 12 >> 2] | 0) == (HEAP32[$79 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$79 >> 2] | 0) + 36 >> 2] & 127]($79) | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i2$i$i21 = 0;
     $91 = 0;
    } else {
     $$pre$i2$i$i21 = $$pre$i2$i$i8;
     $91 = $$pre$i2$i$i8;
    } else {
     $$pre$i2$i$i21 = $$pre$i2$i$i8;
     $91 = $79;
    }
    $94 = HEAP32[$__b >> 2] | 0;
    if (!(($78 ^ ($91 | 0) == 0) & ($$0 | 0) > 0)) {
     label = 40;
     break;
    }
    $96 = HEAP32[$94 + 12 >> 2] | 0;
    if (($96 | 0) == (HEAP32[$94 + 16 >> 2] | 0)) $$0$i$i11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$94 >> 2] | 0) + 36 >> 2] & 127]($94) | 0; else $$0$i$i11 = HEAPU8[$96 >> 0] | 0;
    $106 = $$0$i$i11 & 255;
    if ($106 << 24 >> 24 <= -1) {
     $$02 = $__r$0;
     label = 52;
     break;
    }
    if (!(HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i11 << 24 >> 24 << 1) >> 1] & 2048)) {
     $$02 = $__r$0;
     label = 52;
     break;
    }
    $119 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $106, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
    $120 = HEAP32[$__b >> 2] | 0;
    $121 = $120 + 12 | 0;
    $122 = HEAP32[$121 >> 2] | 0;
    if (($122 | 0) == (HEAP32[$120 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$120 >> 2] | 0) + 40 >> 2] & 127]($120) | 0;
     $$0$in = $$0;
     $$pre$i2$i$i8 = $$pre$i2$i$i21;
     $79 = $91;
     $__r$0$in = $119;
     continue;
    } else {
     HEAP32[$121 >> 2] = $122 + 1;
     $$0$in = $$0;
     $$pre$i2$i$i8 = $$pre$i2$i$i21;
     $79 = $91;
     $__r$0$in = $119;
     continue;
    }
   }
   if ((label | 0) == 40) {
    do if (!$94) $141 = 0; else if ((HEAP32[$94 + 12 >> 2] | 0) == (HEAP32[$94 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$94 >> 2] | 0) + 36 >> 2] & 127]($94) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $141 = 0;
     break;
    } else {
     $141 = HEAP32[$__b >> 2] | 0;
     break;
    } else $141 = $94; while (0);
    $142 = ($141 | 0) == 0;
    do if (!$$pre$i2$i$i21) label = 50; else {
     if ((HEAP32[$$pre$i2$i$i21 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i21 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i21 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i21) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 50;
      break;
     }
     if ($142) {
      $$02 = $__r$0;
      STACKTOP = sp;
      return $$02 | 0;
     }
    } while (0);
    if ((label | 0) == 50) if (!$142) {
     $$02 = $__r$0;
     STACKTOP = sp;
     return $$02 | 0;
    }
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $$02 = $__r$0;
    STACKTOP = sp;
    return $$02 | 0;
   } else if ((label | 0) == 52) {
    STACKTOP = sp;
    return $$02 | 0;
   }
  }
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
 $$02 = 0;
 STACKTOP = sp;
 return $$02 | 0;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0111 = 0, $$0112 = 0, $$013 = 0, $$014 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $59 = 0, $6 = 0, $60 = 0, $66 = 0, $73 = 0, $74 = 0, $8 = 0, $82 = 0, $85 = 0, $87 = 0, $89 = 0, $90 = 0, $94 = 0, $95 = 0, $97 = 0, $99 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$05 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 $$byval_copy = sp + 424 | 0;
 $__wbuf = sp + 24 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 8 | 0;
 $__loc = sp + 4 | 0;
 $__neg = sp + 428 | 0;
 $0 = sp;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 190;
 $2 = $__wbuf + 400 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $31 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$0111 = tempRet0;
  $$013 = $31;
  $94 = $__wbuf;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 45792) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L4 : do if (!($6 & 1)) {
   HEAP8[$__neg >> 0] = 0;
   $8 = HEAP32[$__e >> 2] | 0;
   HEAP32[$0 >> 2] = $8;
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(2, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    if ($11) {
     if (!(HEAP8[$__v >> 0] & 1)) {
      HEAP32[$__v + 4 >> 2] = 0;
      HEAP8[$__v >> 0] = 0;
     } else {
      HEAP32[HEAP32[$__v + 8 >> 2] >> 2] = 0;
      HEAP32[$__v + 4 >> 2] = 0;
     }
     if (HEAP8[$__neg >> 0] | 0) {
      __THREW__ = 0;
      $26 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] | 0, $5 | 0, 45) | 0;
      $27 = __THREW__;
      __THREW__ = 0;
      if ($27 & 1) break;
      __THREW__ = 0;
      invoke_vii(75, $__v | 0, $26 | 0);
      $29 = __THREW__;
      __THREW__ = 0;
      if ($29 & 1) break;
     }
     __THREW__ = 0;
     $36 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 44 >> 2] | 0, $5 | 0, 48) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) break;
     $39 = HEAP32[$__wb >> 2] | 0;
     $40 = HEAP32[$__wn >> 2] | 0;
     $41 = $40 + -4 | 0;
     L18 : do if ($39 >>> 0 < $41 >>> 0) {
      $__w$05 = $39;
      while (1) {
       $43 = $__w$05 + 4 | 0;
       if ((HEAP32[$__w$05 >> 2] | 0) != ($36 | 0)) {
        $__w$0$lcssa = $__w$05;
        break L18;
       }
       if ($43 >>> 0 < $41 >>> 0) $__w$05 = $43; else {
        $__w$0$lcssa = $43;
        break;
       }
      }
     } else $__w$0$lcssa = $39; while (0);
     __THREW__ = 0;
     invoke_iiii(37, $__v | 0, $__w$0$lcssa | 0, $40 | 0) | 0;
     $47 = __THREW__;
     __THREW__ = 0;
     if ($47 & 1) break;
    }
    $49 = HEAP32[$__b >> 2] | 0;
    do if (!$49) $99 = 1; else {
     $52 = HEAP32[$49 + 12 >> 2] | 0;
     if (($52 | 0) == (HEAP32[$49 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $59 = invoke_ii(HEAP32[(HEAP32[$49 >> 2] | 0) + 36 >> 2] | 0, $49 | 0) | 0;
      $60 = __THREW__;
      __THREW__ = 0;
      if ($60 & 1) break L4; else $$0$i$i$i$i = $59;
     } else $$0$i$i$i$i = HEAP32[$52 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $99 = 1;
      break;
     } else {
      $99 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!$8) label = 30; else {
     $66 = HEAP32[$8 + 12 >> 2] | 0;
     if (($66 | 0) == (HEAP32[$8 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $73 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] | 0, $8 | 0) | 0;
      $74 = __THREW__;
      __THREW__ = 0;
      if ($74 & 1) break L4; else $$0$i$i1$i$i = $73;
     } else $$0$i$i1$i$i = HEAP32[$66 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 30;
      break;
     } else if ($99) break; else {
      label = 32;
      break;
     }
    } while (0);
    if ((label | 0) == 30) if ($99) label = 32;
    if ((label | 0) == 32) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $82 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if (!$82) {
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    invoke_vi(HEAP32[$1 >> 2] | 0, $82 | 0);
    $85 = __THREW__;
    __THREW__ = 0;
    if ($85 & 1) {
     $87 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($87);
    } else {
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  $89 = ___cxa_find_matching_catch() | 0;
  $90 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$0112 = $90;
   $$014 = $89;
   ___resumeException($$014 | 0);
  } else {
   $$0111 = $90;
   $$013 = $89;
   $94 = $$pre;
  }
 }
 __THREW__ = 0;
 invoke_vi(HEAP32[$1 >> 2] | 0, $94 | 0);
 $95 = __THREW__;
 __THREW__ = 0;
 if ($95 & 1) {
  $97 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($97);
 } else {
  $$0112 = $$0111;
  $$014 = $$013;
  ___resumeException($$014 | 0);
 }
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 272 | 0;
 $__nb = sp + 268 | 0;
 $__o = sp + 40 | 0;
 $__op = sp + 36 | 0;
 $__oe = sp + 32 | 0;
 $0 = sp + 28 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 44520, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $$byval_copy + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $$byval_copy) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $$byval_copy) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(1) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $$byval_copy + 4 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $$byval_copy | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(1) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $30 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $$byval_copy | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if (!($31 & 1)) {
     $__nc$1 = $30;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $33 = HEAP32[$__nb >> 2] | 0;
   if ($33) {
    $38 = $33;
    $62 = $33;
    $__nc$2 = $__nc$1;
    break;
   }
   __THREW__ = 0;
   invoke_v(5);
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $38 = $$pre;
    $62 = $$pre;
    $__nc$2 = $__nc$1;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$125 = tempRet0;
  $$16 = $25;
  ___resumeException($$16 | 0);
 } else {
  $38 = HEAP32[$__nb >> 2] | 0;
  $62 = 0;
  $__nc$2 = $__nc$0;
 } while (0);
 $37 = $38 + $__nc$2 | 0;
 $39 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38, $37, $__iob) | 0;
 if (($38 | 0) == ($__nar | 0)) {
  $50 = $__nar;
  $60 = 0;
  $__ob$0 = $__o;
  label = 20;
 } else {
  $42 = _malloc($__nc$2 << 3) | 0;
  if (!$42) {
   __THREW__ = 0;
   invoke_v(5);
   $44 = __THREW__;
   __THREW__ = 0;
   if ($44 & 1) {
    $68 = 0;
    label = 19;
   } else {
    $50 = HEAP32[$__nb >> 2] | 0;
    $60 = $42;
    $__ob$0 = $42;
    label = 20;
   }
  } else {
   $50 = $38;
   $60 = $42;
   $__ob$0 = $42;
   label = 20;
  }
 }
 do if ((label | 0) == 20) {
  __THREW__ = 0;
  invoke_vii(47, $0 | 0, $__iob | 0);
  $48 = __THREW__;
  __THREW__ = 0;
  if ($48 & 1) {
   $68 = $60;
   label = 19;
  } else {
   __THREW__ = 0;
   invoke_viiiiiii(44, $50 | 0, $39 | 0, $37 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
   $51 = __THREW__;
   __THREW__ = 0;
   if ($51 & 1) {
    $63 = ___cxa_find_matching_catch() | 0;
    $64 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    $$0 = $63;
    $$01 = $64;
    $66 = $60;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
   HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
   $55 = HEAP32[$__op >> 2] | 0;
   $56 = HEAP32[$__oe >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   invoke_viiiiiii(45, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $55 | 0, $56 | 0, $__iob | 0, $__fl | 0);
   $57 = __THREW__;
   __THREW__ = 0;
   if ($57 & 1) {
    $68 = $60;
    label = 19;
   } else {
    $59 = HEAP32[$1 >> 2] | 0;
    HEAP32[$__s >> 2] = $59;
    HEAP32[$agg$result >> 2] = $59;
    if (!$60) {
     _free($62);
     STACKTOP = sp;
     return;
    }
    _free($60);
    _free($62);
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 if ((label | 0) == 19) {
  $46 = ___cxa_find_matching_catch() | 0;
  $$0 = $46;
  $$01 = tempRet0;
  $66 = $68;
 }
 if ($66) _free($66);
 _free($62);
 $$125 = $$01;
 $$16 = $$0;
 ___resumeException($$16 | 0);
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result, $this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0112 = 0, $$0113 = 0, $$014 = 0, $$015 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $47 = 0, $49 = 0, $5 = 0, $59 = 0, $6 = 0, $60 = 0, $63 = 0, $64 = 0, $74 = 0, $75 = 0, $8 = 0, $83 = 0, $86 = 0, $88 = 0, $90 = 0, $91 = 0, $95 = 0, $96 = 0, $98 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$05 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp + 24 | 0;
 $__wbuf = sp + 32 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 8 | 0;
 $__loc = sp + 4 | 0;
 $__neg = sp + 28 | 0;
 $0 = sp;
 HEAP32[$__wb >> 2] = $__wbuf;
 $1 = $__wb + 4 | 0;
 HEAP32[$1 >> 2] = 190;
 $2 = $__wbuf + 100 | 0;
 __THREW__ = 0;
 invoke_vii(47, $__loc | 0, $__iob | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $31 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$0112 = tempRet0;
  $$014 = $31;
  $95 = $__wbuf;
 } else {
  __THREW__ = 0;
  $5 = invoke_iii(22, $__loc | 0, 45800) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  L3 : do if (!($6 & 1)) {
   HEAP8[$__neg >> 0] = 0;
   $8 = HEAP32[$__e >> 2] | 0;
   HEAP32[$0 >> 2] = $8;
   $10 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
   $11 = invoke_iiiiiiiiiiii(1, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $10 | 0, $__err | 0, $__neg | 0, $5 | 0, $__wb | 0, $__wn | 0, $2 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    if ($11) {
     if (!(HEAP8[$__v >> 0] & 1)) {
      HEAP8[$__v + 1 >> 0] = 0;
      HEAP8[$__v >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__v + 8 >> 2] >> 0] = 0;
      HEAP32[$__v + 4 >> 2] = 0;
     }
     if (HEAP8[$__neg >> 0] | 0) {
      __THREW__ = 0;
      $26 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] | 0, $5 | 0, 45) | 0;
      $27 = __THREW__;
      __THREW__ = 0;
      if ($27 & 1) break;
      __THREW__ = 0;
      invoke_vii(44, $__v | 0, $26 | 0);
      $29 = __THREW__;
      __THREW__ = 0;
      if ($29 & 1) break;
     }
     __THREW__ = 0;
     $36 = invoke_iii(HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] | 0, $5 | 0, 48) | 0;
     $37 = __THREW__;
     __THREW__ = 0;
     if ($37 & 1) break;
     $39 = HEAP32[$__wb >> 2] | 0;
     $40 = HEAP32[$__wn >> 2] | 0;
     $41 = $40 + -1 | 0;
     L17 : do if ($39 >>> 0 < $41 >>> 0) {
      $__w$05 = $39;
      while (1) {
       $43 = $__w$05 + 1 | 0;
       if ((HEAP8[$__w$05 >> 0] | 0) != $36 << 24 >> 24) {
        $__w$0$lcssa = $__w$05;
        break L17;
       }
       if ($43 >>> 0 < $41 >>> 0) $__w$05 = $43; else {
        $__w$0$lcssa = $43;
        break;
       }
      }
     } else $__w$0$lcssa = $39; while (0);
     __THREW__ = 0;
     invoke_iiii(36, $__v | 0, $__w$0$lcssa | 0, $40 | 0) | 0;
     $47 = __THREW__;
     __THREW__ = 0;
     if ($47 & 1) break;
    }
    $49 = HEAP32[$__b >> 2] | 0;
    do if (!$49) $63 = 0; else if ((HEAP32[$49 + 12 >> 2] | 0) == (HEAP32[$49 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $59 = invoke_ii(HEAP32[(HEAP32[$49 >> 2] | 0) + 36 >> 2] | 0, $49 | 0) | 0;
     $60 = __THREW__;
     __THREW__ = 0;
     if ($60 & 1) break L3;
     if (($59 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $63 = 0;
      break;
     } else {
      $63 = HEAP32[$__b >> 2] | 0;
      break;
     }
    } else $63 = $49; while (0);
    $64 = ($63 | 0) == 0;
    do if (!$8) label = 29; else {
     if ((HEAP32[$8 + 12 >> 2] | 0) != (HEAP32[$8 + 16 >> 2] | 0)) if ($64) break; else {
      label = 31;
      break;
     }
     __THREW__ = 0;
     $74 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 36 >> 2] | 0, $8 | 0) | 0;
     $75 = __THREW__;
     __THREW__ = 0;
     if ($75 & 1) break L3;
     if (($74 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 29;
      break;
     } else if ($64 ^ ($8 | 0) == 0) break; else {
      label = 31;
      break;
     }
    } while (0);
    if ((label | 0) == 29) if ($64) label = 31;
    if ((label | 0) == 31) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $83 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if (!$83) {
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    invoke_vi(HEAP32[$1 >> 2] | 0, $83 | 0);
    $86 = __THREW__;
    __THREW__ = 0;
    if ($86 & 1) {
     $88 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($88);
    } else {
     STACKTOP = sp;
     return;
    }
   }
  } while (0);
  $90 = ___cxa_find_matching_catch() | 0;
  $91 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$0113 = $91;
   $$015 = $90;
   ___resumeException($$015 | 0);
  } else {
   $$0112 = $91;
   $$014 = $90;
   $95 = $$pre;
  }
 }
 __THREW__ = 0;
 invoke_vi(HEAP32[$1 >> 2] | 0, $95 | 0);
 $96 = __THREW__;
 __THREW__ = 0;
 if ($96 & 1) {
  $98 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($98);
 } else {
  $$0113 = $$0112;
  $$015 = $$014;
  ___resumeException($$015 | 0);
 }
}

function __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_($this, $args, $args1, $args2, $args3) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $$0$i7$i$i$i = 0, $$0$i8$i$i$i = 0, $$idx$pre$phi$iZZ2D = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx4$val$i = 0, $$idx5$val$i = 0, $$idx6$i = 0, $$idx6$val$i = 0, $$idx6$val$pre$i = 0, $$idx6$val11$i = 0, $$idx6$val14$i = 0, $$idx7$val$i = 0, $$idx7$val12$i = 0, $$idx7$val18$i = 0, $$lcssa$i = 0, $0 = 0, $10 = 0, $102 = 0, $104 = 0, $108 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $34 = 0, $37 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $47 = 0, $51 = 0, $53 = 0, $55 = 0, $61 = 0, $62 = 0, $68 = 0, $81 = 0, $84 = 0, $88 = 0, $9 = 0, $97 = 0, $i$013$i = 0, $i$1$i = 0, $scevgep4$i$i$i$i = 0, $this$idx$val$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = __Znwj(56) | 0;
 HEAP32[$0 >> 2] = 40312;
 HEAP8[$0 + 5 >> 0] = 0;
 HEAP32[$0 + 24 >> 2] = $args;
 $3 = $0 + 32 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = $3;
 HEAP32[$0 + 40 >> 2] = $args1;
 HEAP32[$0 + 44 >> 2] = $args2;
 HEAP32[$0 + 48 >> 2] = $args3;
 $9 = $this + 20 | 0;
 $10 = $this + 24 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $12 = $this + 28 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if ($11 >>> 0 < $13 >>> 0) {
  if (!$11) $17 = 0; else {
   HEAP32[$11 >> 2] = $0;
   $17 = HEAP32[$10 >> 2] | 0;
  }
  $16 = $17 + 4 | 0;
  HEAP32[$10 >> 2] = $16;
  $$idx$pre$phi$iZZ2D = $9;
  $$idx1$val$i = $16;
 } else {
  $this$idx2$val$i$i$i = HEAP32[$9 >> 2] | 0;
  $22 = ($11 - $this$idx2$val$i$i$i >> 2) + 1 | 0;
  if ($22 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($9);
   $$idx1$val$i$i$i$i$i = HEAP32[$12 >> 2] | 0;
   $this$idx$val$i$i$i = HEAP32[$9 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i$i = $13;
   $this$idx$val$i$i$i = $this$idx2$val$i$i$i;
  }
  $25 = $this$idx$val$i$i$i;
  $26 = $$idx1$val$i$i$i$i$i - $25 | 0;
  if ($26 >> 2 >>> 0 < 536870911) {
   $32 = $26 >> 1;
   $34 = $32 >>> 0 < $22 >>> 0 ? $22 : $32;
   $37 = (HEAP32[$10 >> 2] | 0) - $25 >> 2;
   if (!$34) {
    $$0$i8$i$i$i = 0;
    $42 = 0;
    $43 = $37;
   } else {
    $$0$i7$i$i$i = $34;
    $110 = $37;
    label = 10;
   }
  } else {
   $$0$i7$i$i$i = 1073741823;
   $110 = (HEAP32[$10 >> 2] | 0) - $25 >> 2;
   label = 10;
  }
  if ((label | 0) == 10) {
   $$0$i8$i$i$i = $$0$i7$i$i$i;
   $42 = __Znwj($$0$i7$i$i$i << 2) | 0;
   $43 = $110;
  }
  $41 = $42 + ($43 << 2) | 0;
  if ($41) HEAP32[$41 >> 2] = $0;
  $46 = $42 + ($43 + 1 << 2) | 0;
  $47 = HEAP32[$9 >> 2] | 0;
  $51 = (HEAP32[$10 >> 2] | 0) - $47 | 0;
  $53 = $42 + ($43 - ($51 >> 2) << 2) | 0;
  _memcpy($53 | 0, $47 | 0, $51 | 0) | 0;
  HEAP32[$9 >> 2] = $53;
  HEAP32[$10 >> 2] = $46;
  HEAP32[$12 >> 2] = $42 + ($$0$i8$i$i$i << 2);
  if (!$47) {
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = $46;
  } else {
   __ZdlPv($47);
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = HEAP32[$10 >> 2] | 0;
  }
 }
 $55 = $this + 16 | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$55 >> 0] | 0;
 $61 = $$idx1$val$i - (HEAP32[$$idx$pre$phi$iZZ2D >> 2] | 0) >> 2;
 $62 = $this + 48 | 0;
 HEAP32[$62 >> 2] = $61;
 if ($61 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
  STACKTOP = sp;
  return $0 | 0;
 }
 $68 = $this + 44 | 0;
 if (!(+($61 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$68 >> 2] | 0) >>> 0))) {
  STACKTOP = sp;
  return $0 | 0;
 }
 __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $0);
 __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 72 | 0, $this);
 if (HEAP32[$this + 56 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 64 >> 2] | 0);
 $81 = (HEAP8[$55 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$55 >> 0] = $81;
 $$idx6$i = $this + 20 | 0;
 $$idx6$val11$i = HEAP32[$$idx6$i >> 2] | 0;
 $$idx7$val12$i = HEAP32[$10 >> 2] | 0;
 L30 : do if (($$idx7$val12$i | 0) == ($$idx6$val11$i | 0)) $$lcssa$i = 0; else {
  $$idx6$val14$i = $$idx6$val11$i;
  $$idx7$val18$i = $$idx7$val12$i;
  $88 = $81;
  $i$013$i = 0;
  while (1) {
   $84 = HEAP32[$$idx6$val14$i + ($i$013$i << 2) >> 2] | 0;
   if ((HEAP8[$84 + 4 >> 0] | 0) == $88 << 24 >> 24) {
    $$idx6$val$i = $$idx6$val14$i;
    $$idx7$val$i = $$idx7$val18$i;
    $i$1$i = $i$013$i;
   } else {
    if (!$84) {
     $$idx4$val$i = $$idx6$val14$i;
     $$idx5$val$i = $$idx7$val18$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$84 >> 2] | 0) + 4 >> 2] & 255]($84);
     $$idx4$val$i = HEAP32[$$idx6$i >> 2] | 0;
     $$idx5$val$i = HEAP32[$10 >> 2] | 0;
    }
    $97 = ($$idx5$val$i - $$idx4$val$i >> 2) + -1 | 0;
    if (($i$013$i | 0) == ($97 | 0)) {
     $$idx6$val$pre$i = $$idx4$val$i;
     $102 = $$idx5$val$i;
    } else {
     HEAP32[$$idx4$val$i + ($i$013$i << 2) >> 2] = HEAP32[$$idx4$val$i + ($97 << 2) >> 2];
     $$idx6$val$pre$i = HEAP32[$$idx6$i >> 2] | 0;
     $102 = HEAP32[$10 >> 2] | 0;
    }
    $scevgep4$i$i$i$i = $102 + -4 | 0;
    HEAP32[$10 >> 2] = $scevgep4$i$i$i$i;
    $$idx6$val$i = $$idx6$val$pre$i;
    $$idx7$val$i = $scevgep4$i$i$i$i;
    $i$1$i = $i$013$i + -1 | 0;
   }
   $104 = $i$1$i + 1 | 0;
   $108 = $$idx7$val$i - $$idx6$val$i >> 2;
   if ($104 >>> 0 >= $108 >>> 0) {
    $$lcssa$i = $108;
    break L30;
   }
   $$idx6$val14$i = $$idx6$val$i;
   $$idx7$val18$i = $$idx7$val$i;
   $88 = HEAP8[$55 >> 0] | 0;
   $i$013$i = $104;
  }
 } while (0);
 HEAP32[$62 >> 2] = $$lcssa$i;
 HEAP32[$68 >> 2] = $$lcssa$i;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 102 | 0;
 $__nb = sp + 40 | 0;
 $__o = sp + 44 | 0;
 $__op = sp + 36 | 0;
 $__oe = sp + 32 | 0;
 $0 = sp + 28 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = $__fmt;
 HEAP32[$3 >> 2] = 37;
 HEAP32[$3 + 4 >> 2] = 0;
 $10 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 44520, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $11 = __ZNSt3__16__clocEv() | 0;
 if ($10) {
  HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
  $vararg_ptr1 = $$byval_copy + 4 | 0;
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$vararg_ptr1 >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$vararg_ptr1 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $$byval_copy) | 0;
 } else {
  HEAPF64[tempDoublePtr >> 3] = $__v;
  HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $11, $__fmt, $$byval_copy) | 0;
 }
 do if (($__nc$0 | 0) > 29) {
  if ($10) {
   __THREW__ = 0;
   $17 = invoke_i(1) | 0;
   $18 = __THREW__;
   __THREW__ = 0;
   if (!($18 & 1)) {
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$__iob + 8 >> 2];
    $vararg_ptr8 = $$byval_copy + 4 | 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$vararg_ptr8 >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$vararg_ptr8 + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $22 = invoke_iiiii(12, $__nb | 0, $17 | 0, $__fmt | 0, $$byval_copy | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) {
     $__nc$1 = $22;
     label = 12;
    }
   }
  } else {
   __THREW__ = 0;
   $27 = invoke_i(1) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if (!($28 & 1)) {
    __THREW__ = 0;
    HEAPF64[tempDoublePtr >> 3] = $__v;
    HEAP32[$$byval_copy >> 2] = HEAP32[tempDoublePtr >> 2];
    HEAP32[$$byval_copy + 4 >> 2] = HEAP32[tempDoublePtr + 4 >> 2];
    $30 = invoke_iiiii(12, $__nb | 0, $27 | 0, $__fmt | 0, $$byval_copy | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if (!($31 & 1)) {
     $__nc$1 = $30;
     label = 12;
    }
   }
  }
  if ((label | 0) == 12) {
   $33 = HEAP32[$__nb >> 2] | 0;
   if ($33) {
    $38 = $33;
    $61 = $33;
    $__nc$2 = $__nc$1;
    break;
   }
   __THREW__ = 0;
   invoke_v(5);
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) {
    $$pre = HEAP32[$__nb >> 2] | 0;
    $38 = $$pre;
    $61 = $$pre;
    $__nc$2 = $__nc$1;
    break;
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $$127 = tempRet0;
  $$18 = $25;
  ___resumeException($$18 | 0);
 } else {
  $38 = HEAP32[$__nb >> 2] | 0;
  $61 = 0;
  $__nc$2 = $__nc$0;
 } while (0);
 $37 = $38 + $__nc$2 | 0;
 $39 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38, $37, $__iob) | 0;
 if (($38 | 0) == ($__nar | 0)) {
  $50 = $__nar;
  $60 = 0;
  $__ob$0 = $__o;
  label = 20;
 } else {
  $42 = _malloc($__nc$2 << 1) | 0;
  if (!$42) {
   __THREW__ = 0;
   invoke_v(5);
   $44 = __THREW__;
   __THREW__ = 0;
   if ($44 & 1) {
    $66 = 0;
    label = 19;
   } else {
    $50 = HEAP32[$__nb >> 2] | 0;
    $60 = 0;
    $__ob$0 = 0;
    label = 20;
   }
  } else {
   $50 = $38;
   $60 = $42;
   $__ob$0 = $42;
   label = 20;
  }
 }
 do if ((label | 0) == 20) {
  __THREW__ = 0;
  invoke_vii(47, $0 | 0, $__iob | 0);
  $48 = __THREW__;
  __THREW__ = 0;
  if ($48 & 1) {
   $66 = $60;
   label = 19;
  } else {
   __THREW__ = 0;
   invoke_viiiiiii(42, $50 | 0, $39 | 0, $37 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
   $51 = __THREW__;
   __THREW__ = 0;
   if ($51 & 1) {
    $62 = ___cxa_find_matching_catch() | 0;
    $63 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
    $$0 = $62;
    $$01 = $63;
    $65 = $60;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
   HEAP32[$2 >> 2] = HEAP32[$__s >> 2];
   $55 = HEAP32[$__op >> 2] | 0;
   $56 = HEAP32[$__oe >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$2 + 0 >> 2];
   invoke_viiiiiii(39, $1 | 0, $$byval_copy | 0, $__ob$0 | 0, $55 | 0, $56 | 0, $__iob | 0, $__fl | 0);
   $57 = __THREW__;
   __THREW__ = 0;
   if ($57 & 1) {
    $66 = $60;
    label = 19;
   } else {
    HEAP32[$agg$result >> 2] = HEAP32[$1 >> 2];
    _free($60);
    _free($61);
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 if ((label | 0) == 19) {
  $46 = ___cxa_find_matching_catch() | 0;
  $$0 = $46;
  $$01 = tempRet0;
  $65 = $66;
 }
 _free($65);
 _free($61);
 $$127 = $$01;
 $$18 = $$0;
 ___resumeException($$18 | 0);
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$pre = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $11 = 0, $113 = 0, $118 = 0, $120 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $136 = 0, $137 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $38 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $47 = 0, $52 = 0, $54 = 0, $6 = 0, $65 = 0, $67 = 0, $69 = 0, $70 = 0, $71 = 0, $76 = 0, $93 = 0, $95 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 do if (($1 | 0) != ($0 | 0)) {
  $3 = $1 + 16 | 0;
  $4 = HEAP8[$__v >> 0] | 0;
  $6 = ($4 & 1) == 0;
  if ($6) $26 = ($4 & 255) >>> 1; else $26 = HEAP32[$__v + 4 >> 2] | 0;
  $11 = HEAP8[$3 >> 0] | 0;
  $13 = ($11 & 1) == 0;
  if ($13) $24 = ($11 & 255) >>> 1; else $24 = HEAP32[$1 + 20 >> 2] | 0;
  if ($6) $28 = $__v + 1 | 0; else $28 = HEAP32[$__v + 8 >> 2] | 0;
  if ($13) $29 = $3 + 1 | 0; else $29 = HEAP32[$1 + 24 >> 2] | 0;
  $30 = _memcmp($28, $29, $24 >>> 0 < $26 >>> 0 ? $24 : $26) | 0;
  if (!$30) {
   if ($26 >>> 0 < $24 >>> 0) break;
  } else if (($30 | 0) < 0) break;
  if ($13) $95 = ($11 & 255) >>> 1; else $95 = HEAP32[$1 + 20 >> 2] | 0;
  if ($6) $93 = ($4 & 255) >>> 1; else $93 = HEAP32[$__v + 4 >> 2] | 0;
  if ($13) $97 = $3 + 1 | 0; else $97 = HEAP32[$1 + 24 >> 2] | 0;
  if ($6) $98 = $__v + 1 | 0; else $98 = HEAP32[$__v + 8 >> 2] | 0;
  $99 = _memcmp($97, $98, $93 >>> 0 < $95 >>> 0 ? $93 : $95) | 0;
  if (!$99) {
   if ($95 >>> 0 >= $93 >>> 0) label = 80;
  } else if (($99 | 0) >= 0) label = 80;
  if ((label | 0) == 80) {
   HEAP32[$__parent >> 2] = $1;
   $$0 = $__parent;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $103 = $1 + 4 | 0;
  $104 = HEAP32[$103 >> 2] | 0;
  $105 = ($104 | 0) == 0;
  if ($105) {
   $$0$i$i$i$i$i = $1;
   while (1) {
    $109 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$109 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$01$i$i$i$i$i = $109;
     break;
    } else $$0$i$i$i$i$i = $109;
   }
  } else {
   $$0$i$i$i$i$i$i = $104;
   while (1) {
    $106 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$106) {
     $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $106;
   }
  }
  do if (($$01$i$i$i$i$i | 0) != ($0 | 0)) {
   $113 = $$01$i$i$i$i$i + 16 | 0;
   if ($6) $133 = ($4 & 255) >>> 1; else $133 = HEAP32[$__v + 4 >> 2] | 0;
   $118 = HEAP8[$113 >> 0] | 0;
   $120 = ($118 & 1) == 0;
   if ($120) $131 = ($118 & 255) >>> 1; else $131 = HEAP32[$$01$i$i$i$i$i + 20 >> 2] | 0;
   if ($6) $135 = $__v + 1 | 0; else $135 = HEAP32[$__v + 8 >> 2] | 0;
   if ($120) $136 = $113 + 1 | 0; else $136 = HEAP32[$$01$i$i$i$i$i + 24 >> 2] | 0;
   $137 = _memcmp($135, $136, $131 >>> 0 < $133 >>> 0 ? $131 : $133) | 0;
   if (!$137) {
    if ($133 >>> 0 < $131 >>> 0) break;
   } else if (($137 | 0) < 0) break;
   $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } while (0);
  if ($105) {
   HEAP32[$__parent >> 2] = $1;
   $$0 = $103;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
   $$0 = $$01$i$i$i$i$i;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 $$pre = HEAP32[$1 >> 2] | 0;
 do if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $76 = $1; else {
  if (!$$pre) {
   $$0$i$i = $1;
   while (1) {
    $41 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $41; else {
     $$01$i$i = $41;
     break;
    }
   }
  } else {
   $$0$i$i$i = $$pre;
   while (1) {
    $38 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$38) {
     $$01$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $38;
   }
  }
  $44 = $$01$i$i + 16 | 0;
  $45 = HEAP8[$44 >> 0] | 0;
  $47 = ($45 & 1) == 0;
  if ($47) $67 = ($45 & 255) >>> 1; else $67 = HEAP32[$$01$i$i + 20 >> 2] | 0;
  $52 = HEAP8[$__v >> 0] | 0;
  $54 = ($52 & 1) == 0;
  if ($54) $65 = ($52 & 255) >>> 1; else $65 = HEAP32[$__v + 4 >> 2] | 0;
  if ($47) $69 = $44 + 1 | 0; else $69 = HEAP32[$$01$i$i + 24 >> 2] | 0;
  if ($54) $70 = $__v + 1 | 0; else $70 = HEAP32[$__v + 8 >> 2] | 0;
  $71 = _memcmp($69, $70, $65 >>> 0 < $67 >>> 0 ? $65 : $67) | 0;
  if (!$71) {
   if ($67 >>> 0 < $65 >>> 0) {
    $76 = $$01$i$i;
    break;
   }
  } else if (($71 | 0) < 0) {
   $76 = $$01$i$i;
   break;
  }
  $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 if (!$$pre) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $76;
  $$0 = $76 + 4 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierDniDnEEEPT_DpT0_($this, $args) {
 $this = $this | 0;
 $args = $args | 0;
 var $$0$i7$i$i$i = 0, $$0$i8$i$i$i = 0, $$idx$pre$phi$iZZ2D = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx4$val$i = 0, $$idx5$val$i = 0, $$idx6$i = 0, $$idx6$val$i = 0, $$idx6$val$pre$i = 0, $$idx6$val11$i = 0, $$idx6$val14$i = 0, $$idx7$val$i = 0, $$idx7$val12$i = 0, $$idx7$val18$i = 0, $$lcssa$i = 0, $0 = 0, $10 = 0, $102 = 0, $104 = 0, $108 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $34 = 0, $37 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $47 = 0, $51 = 0, $53 = 0, $55 = 0, $61 = 0, $62 = 0, $68 = 0, $81 = 0, $84 = 0, $88 = 0, $9 = 0, $97 = 0, $i$013$i = 0, $i$1$i = 0, $scevgep4$i$i$i$i = 0, $this$idx$val$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = __Znwj(56) | 0;
 HEAP32[$0 >> 2] = 40312;
 HEAP8[$0 + 5 >> 0] = 0;
 HEAP32[$0 + 24 >> 2] = $args;
 $3 = $0 + 32 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = $3;
 HEAP32[$0 + 40 >> 2] = 0;
 HEAP32[$0 + 44 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = 0;
 $9 = $this + 20 | 0;
 $10 = $this + 24 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $12 = $this + 28 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if ($11 >>> 0 < $13 >>> 0) {
  if (!$11) $17 = 0; else {
   HEAP32[$11 >> 2] = $0;
   $17 = HEAP32[$10 >> 2] | 0;
  }
  $16 = $17 + 4 | 0;
  HEAP32[$10 >> 2] = $16;
  $$idx$pre$phi$iZZ2D = $9;
  $$idx1$val$i = $16;
 } else {
  $this$idx2$val$i$i$i = HEAP32[$9 >> 2] | 0;
  $22 = ($11 - $this$idx2$val$i$i$i >> 2) + 1 | 0;
  if ($22 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($9);
   $$idx1$val$i$i$i$i$i = HEAP32[$12 >> 2] | 0;
   $this$idx$val$i$i$i = HEAP32[$9 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i$i = $13;
   $this$idx$val$i$i$i = $this$idx2$val$i$i$i;
  }
  $25 = $this$idx$val$i$i$i;
  $26 = $$idx1$val$i$i$i$i$i - $25 | 0;
  if ($26 >> 2 >>> 0 < 536870911) {
   $32 = $26 >> 1;
   $34 = $32 >>> 0 < $22 >>> 0 ? $22 : $32;
   $37 = (HEAP32[$10 >> 2] | 0) - $25 >> 2;
   if (!$34) {
    $$0$i8$i$i$i = 0;
    $42 = 0;
    $43 = $37;
   } else {
    $$0$i7$i$i$i = $34;
    $110 = $37;
    label = 10;
   }
  } else {
   $$0$i7$i$i$i = 1073741823;
   $110 = (HEAP32[$10 >> 2] | 0) - $25 >> 2;
   label = 10;
  }
  if ((label | 0) == 10) {
   $$0$i8$i$i$i = $$0$i7$i$i$i;
   $42 = __Znwj($$0$i7$i$i$i << 2) | 0;
   $43 = $110;
  }
  $41 = $42 + ($43 << 2) | 0;
  if ($41) HEAP32[$41 >> 2] = $0;
  $46 = $42 + ($43 + 1 << 2) | 0;
  $47 = HEAP32[$9 >> 2] | 0;
  $51 = (HEAP32[$10 >> 2] | 0) - $47 | 0;
  $53 = $42 + ($43 - ($51 >> 2) << 2) | 0;
  _memcpy($53 | 0, $47 | 0, $51 | 0) | 0;
  HEAP32[$9 >> 2] = $53;
  HEAP32[$10 >> 2] = $46;
  HEAP32[$12 >> 2] = $42 + ($$0$i8$i$i$i << 2);
  if (!$47) {
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = $46;
  } else {
   __ZdlPv($47);
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = HEAP32[$10 >> 2] | 0;
  }
 }
 $55 = $this + 16 | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$55 >> 0] | 0;
 $61 = $$idx1$val$i - (HEAP32[$$idx$pre$phi$iZZ2D >> 2] | 0) >> 2;
 $62 = $this + 48 | 0;
 HEAP32[$62 >> 2] = $61;
 if ($61 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
  STACKTOP = sp;
  return $0 | 0;
 }
 $68 = $this + 44 | 0;
 if (!(+($61 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$68 >> 2] | 0) >>> 0))) {
  STACKTOP = sp;
  return $0 | 0;
 }
 __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $0);
 __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 72 | 0, $this);
 if (HEAP32[$this + 56 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 64 >> 2] | 0);
 $81 = (HEAP8[$55 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$55 >> 0] = $81;
 $$idx6$i = $this + 20 | 0;
 $$idx6$val11$i = HEAP32[$$idx6$i >> 2] | 0;
 $$idx7$val12$i = HEAP32[$10 >> 2] | 0;
 L30 : do if (($$idx7$val12$i | 0) == ($$idx6$val11$i | 0)) $$lcssa$i = 0; else {
  $$idx6$val14$i = $$idx6$val11$i;
  $$idx7$val18$i = $$idx7$val12$i;
  $88 = $81;
  $i$013$i = 0;
  while (1) {
   $84 = HEAP32[$$idx6$val14$i + ($i$013$i << 2) >> 2] | 0;
   if ((HEAP8[$84 + 4 >> 0] | 0) == $88 << 24 >> 24) {
    $$idx6$val$i = $$idx6$val14$i;
    $$idx7$val$i = $$idx7$val18$i;
    $i$1$i = $i$013$i;
   } else {
    if (!$84) {
     $$idx4$val$i = $$idx6$val14$i;
     $$idx5$val$i = $$idx7$val18$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$84 >> 2] | 0) + 4 >> 2] & 255]($84);
     $$idx4$val$i = HEAP32[$$idx6$i >> 2] | 0;
     $$idx5$val$i = HEAP32[$10 >> 2] | 0;
    }
    $97 = ($$idx5$val$i - $$idx4$val$i >> 2) + -1 | 0;
    if (($i$013$i | 0) == ($97 | 0)) {
     $$idx6$val$pre$i = $$idx4$val$i;
     $102 = $$idx5$val$i;
    } else {
     HEAP32[$$idx4$val$i + ($i$013$i << 2) >> 2] = HEAP32[$$idx4$val$i + ($97 << 2) >> 2];
     $$idx6$val$pre$i = HEAP32[$$idx6$i >> 2] | 0;
     $102 = HEAP32[$10 >> 2] | 0;
    }
    $scevgep4$i$i$i$i = $102 + -4 | 0;
    HEAP32[$10 >> 2] = $scevgep4$i$i$i$i;
    $$idx6$val$i = $$idx6$val$pre$i;
    $$idx7$val$i = $scevgep4$i$i$i$i;
    $i$1$i = $i$013$i + -1 | 0;
   }
   $104 = $i$1$i + 1 | 0;
   $108 = $$idx7$val$i - $$idx6$val$i >> 2;
   if ($104 >>> 0 >= $108 >>> 0) {
    $$lcssa$i = $108;
    break L30;
   }
   $$idx6$val14$i = $$idx6$val$i;
   $$idx7$val18$i = $$idx7$val$i;
   $88 = HEAP8[$55 >> 0] | 0;
   $i$013$i = $104;
  }
 } while (0);
 HEAP32[$62 >> 2] = $$lcssa$i;
 HEAP32[$68 >> 2] = $$lcssa$i;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $125 = 0, $126 = 0, $128 = 0, $13 = 0, $133 = 0, $135 = 0, $14 = 0, $143 = 0, $145 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $153 = 0, $154 = 0, $156 = 0, $17 = 0, $19 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $60 = 0, $64 = 0, $66 = 0, $7 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $85 = 0, $9 = 0, $96 = 0, $98 = 0, $__nd$0$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) {
  $156 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $156;
  $$0 = $156;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $9 = $__k + 12 | 0;
 $10 = $9 + 1 | 0;
 $11 = $__k + 20 | 0;
 $12 = $__k + 16 | 0;
 $13 = $__k + 8 | 0;
 $14 = $__k + 4 | 0;
 $__nd$0$in = $1;
 L5 : while (1) {
  $15 = $__nd$0$in + 16 | 0;
  if ($5) $30 = $7; else $30 = HEAP32[$14 >> 2] | 0;
  $17 = HEAP8[$15 >> 0] | 0;
  $19 = ($17 & 1) == 0;
  if ($19) $28 = ($17 & 255) >>> 1; else $28 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $32 = $8; else $32 = HEAP32[$13 >> 2] | 0;
  if ($19) $33 = $15 + 1 | 0; else $33 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  $34 = _memcmp($32, $33, $28 >>> 0 < $30 >>> 0 ? $28 : $30) | 0;
  if (!$34) {
   if ($30 >>> 0 >= $28 >>> 0) label = 16;
  } else if (($34 | 0) >= 0) label = 16;
  L24 : do if ((label | 0) == 16) {
   label = 0;
   if ($19) $49 = ($17 & 255) >>> 1; else $49 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
   if ($5) $47 = $7; else $47 = HEAP32[$14 >> 2] | 0;
   if ($19) $51 = $15 + 1 | 0; else $51 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
   if ($5) $52 = $8; else $52 = HEAP32[$13 >> 2] | 0;
   $53 = _memcmp($51, $52, $47 >>> 0 < $49 >>> 0 ? $47 : $49) | 0;
   if (!$53) {
    if ($49 >>> 0 >= $47 >>> 0) label = 29;
   } else if (($53 | 0) >= 0) label = 29;
   do if ((label | 0) == 29) {
    label = 0;
    $57 = $__nd$0$in + 28 | 0;
    $58 = HEAP8[$9 >> 0] | 0;
    $60 = ($58 & 1) == 0;
    if ($60) $77 = ($58 & 255) >>> 1; else $77 = HEAP32[$12 >> 2] | 0;
    $64 = HEAP8[$57 >> 0] | 0;
    $66 = ($64 & 1) == 0;
    if ($66) $75 = ($64 & 255) >>> 1; else $75 = HEAP32[$__nd$0$in + 32 >> 2] | 0;
    if ($60) $79 = $10; else $79 = HEAP32[$11 >> 2] | 0;
    if ($66) $80 = $57 + 1 | 0; else $80 = HEAP32[$__nd$0$in + 36 >> 2] | 0;
    $81 = _memcmp($79, $80, $75 >>> 0 < $77 >>> 0 ? $75 : $77) | 0;
    if (!$81) if ($77 >>> 0 < $75 >>> 0) break L24; else break; else if (($81 | 0) < 0) break L24; else break;
   } while (0);
   if ($19) $98 = ($17 & 255) >>> 1; else $98 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
   if ($5) $96 = $7; else $96 = HEAP32[$14 >> 2] | 0;
   if ($19) $100 = $15 + 1 | 0; else $100 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
   if ($5) $101 = $8; else $101 = HEAP32[$13 >> 2] | 0;
   $102 = _memcmp($100, $101, $96 >>> 0 < $98 >>> 0 ? $96 : $98) | 0;
   if (!$102) {
    if ($98 >>> 0 >= $96 >>> 0) label = 58;
   } else if (($102 | 0) >= 0) label = 58;
   do if ((label | 0) == 58) {
    label = 0;
    if ($5) $117 = $7; else $117 = HEAP32[$14 >> 2] | 0;
    if ($19) $115 = ($17 & 255) >>> 1; else $115 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
    if ($5) $119 = $8; else $119 = HEAP32[$13 >> 2] | 0;
    if ($19) $120 = $15 + 1 | 0; else $120 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
    $121 = _memcmp($119, $120, $115 >>> 0 < $117 >>> 0 ? $115 : $117) | 0;
    if (!$121) {
     if ($117 >>> 0 < $115 >>> 0) {
      label = 87;
      break L5;
     }
    } else if (($121 | 0) < 0) {
     label = 87;
     break L5;
    }
    $125 = $__nd$0$in + 28 | 0;
    $126 = HEAP8[$125 >> 0] | 0;
    $128 = ($126 & 1) == 0;
    if ($128) $145 = ($126 & 255) >>> 1; else $145 = HEAP32[$__nd$0$in + 32 >> 2] | 0;
    $133 = HEAP8[$9 >> 0] | 0;
    $135 = ($133 & 1) == 0;
    if ($135) $143 = ($133 & 255) >>> 1; else $143 = HEAP32[$12 >> 2] | 0;
    if ($128) $147 = $125 + 1 | 0; else $147 = HEAP32[$__nd$0$in + 36 >> 2] | 0;
    if ($135) $148 = $10; else $148 = HEAP32[$11 >> 2] | 0;
    $149 = _memcmp($147, $148, $143 >>> 0 < $145 >>> 0 ? $143 : $145) | 0;
    if (!$149) if ($145 >>> 0 < $143 >>> 0) break; else {
     label = 87;
     break L5;
    } else if (($149 | 0) < 0) break; else {
     label = 87;
     break L5;
    }
   } while (0);
   $153 = $__nd$0$in + 4 | 0;
   $154 = HEAP32[$153 >> 2] | 0;
   if (!$154) {
    label = 86;
    break L5;
   } else {
    $__nd$0$in = $154;
    continue L5;
   }
  } while (0);
  $85 = HEAP32[$__nd$0$in >> 2] | 0;
  if (!$85) {
   label = 44;
   break;
  } else $__nd$0$in = $85;
 }
 if ((label | 0) == 44) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__nd$0$in;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 86) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $153;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 87) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__parent;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$01$i = 0, $$pre5 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $47 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $69 = 0, $71 = 0, $72 = 0, $75 = 0, $77 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, dest = 0, sp = 0, src = 0, stop = 0, $$01$i$looptemp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $__v + 4 | 0;
 $$pre5 = HEAP32[$3 >> 2] | 0;
 if (($2 | 0) == ($0 | 0)) {
  $81 = $$pre5;
  $82 = $0;
  HEAP32[$this >> 2] = $81;
  HEAP32[$3 >> 2] = $82;
  $83 = $__v + 8 | 0;
  $84 = HEAP32[$1 >> 2] | 0;
  $85 = HEAP32[$83 >> 2] | 0;
  HEAP32[$1 >> 2] = $85;
  HEAP32[$83 >> 2] = $84;
  $86 = $this + 8 | 0;
  $87 = $__v + 12 | 0;
  $88 = HEAP32[$86 >> 2] | 0;
  $89 = HEAP32[$87 >> 2] | 0;
  HEAP32[$86 >> 2] = $89;
  HEAP32[$87 >> 2] = $88;
  $90 = HEAP32[$3 >> 2] | 0;
  HEAP32[$__v >> 2] = $90;
  STACKTOP = sp;
  return;
 } else {
  $$01$i = $2;
  $6 = $$pre5;
 }
 do {
  $$01$i$looptemp = $$01$i;
  $$01$i = $$01$i + -144 | 0;
  $8 = $$01$i;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $6 + -144 | 0;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $18 = $6 + -136 | 0;
  $19 = $$01$i$looptemp + -136 | 0;
  HEAP32[$18 + 0 >> 2] = HEAP32[$19 + 0 >> 2];
  HEAP32[$18 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
  HEAP32[$18 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
  HEAP32[$19 + 0 >> 2] = 0;
  HEAP32[$19 + 4 >> 2] = 0;
  HEAP32[$19 + 8 >> 2] = 0;
  $20 = $6 + -124 | 0;
  $21 = $$01$i$looptemp + -124 | 0;
  HEAP32[$20 + 0 >> 2] = HEAP32[$21 + 0 >> 2];
  HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
  HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
  HEAP32[$20 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
  dest = $6 + -108 + 0 | 0;
  src = $$01$i$looptemp + -108 + 0 | 0;
  stop = dest + 40 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $24 = $6 + -68 | 0;
  $25 = $$01$i$looptemp + -68 | 0;
  HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
  $28 = HEAP32[$$01$i$looptemp + -64 >> 2] | 0;
  HEAP32[$6 + -64 >> 2] = $28;
  $30 = $$01$i$looptemp + -60 | 0;
  $31 = HEAP32[$30 >> 2] | 0;
  HEAP32[$6 + -60 >> 2] = $31;
  $34 = $6 + -64 | 0;
  if (!$31) HEAP32[$24 >> 2] = $34; else {
   HEAP32[$28 + 8 >> 2] = $34;
   $36 = $$01$i$looptemp + -64 | 0;
   HEAP32[$25 >> 2] = $36;
   HEAP32[$36 >> 2] = 0;
   HEAP32[$30 >> 2] = 0;
  }
  $37 = $6 + -56 | 0;
  $38 = $$01$i$looptemp + -56 | 0;
  HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
  $40 = $6 + -52 | 0;
  $41 = $$01$i$looptemp + -52 | 0;
  HEAP32[$40 >> 2] = HEAP32[$41 >> 2];
  $44 = HEAP32[$$01$i$looptemp + -48 >> 2] | 0;
  HEAP32[$6 + -48 >> 2] = $44;
  $46 = $$01$i$looptemp + -44 | 0;
  $47 = HEAP32[$46 >> 2] | 0;
  HEAP32[$6 + -44 >> 2] = $47;
  $50 = $6 + -48 | 0;
  if (!$47) HEAP32[$40 >> 2] = $50; else {
   HEAP32[$44 + 8 >> 2] = $50;
   $52 = $$01$i$looptemp + -48 | 0;
   HEAP32[$41 >> 2] = $52;
   HEAP32[$52 >> 2] = 0;
   HEAP32[$46 >> 2] = 0;
  }
  HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
  $54 = $6 + -40 | 0;
  HEAP32[$54 >> 2] = 0;
  $55 = $6 + -36 | 0;
  HEAP32[$55 >> 2] = 0;
  $56 = $6 + -32 | 0;
  HEAP32[$56 >> 2] = 0;
  $57 = $$01$i$looptemp + -40 | 0;
  HEAP32[$54 >> 2] = HEAP32[$57 >> 2];
  $59 = $$01$i$looptemp + -36 | 0;
  HEAP32[$55 >> 2] = HEAP32[$59 >> 2];
  $61 = $$01$i$looptemp + -32 | 0;
  HEAP32[$56 >> 2] = HEAP32[$61 >> 2];
  HEAP32[$61 >> 2] = 0;
  HEAP32[$59 >> 2] = 0;
  HEAP32[$57 >> 2] = 0;
  $63 = $6 + -28 | 0;
  $64 = $$01$i$looptemp + -28 | 0;
  HEAP32[$63 + 0 >> 2] = HEAP32[$64 + 0 >> 2];
  HEAP32[$63 + 4 >> 2] = HEAP32[$64 + 4 >> 2];
  HEAP32[$63 + 8 >> 2] = HEAP32[$64 + 8 >> 2];
  $65 = $6 + -16 | 0;
  $66 = $$01$i$looptemp + -16 | 0;
  HEAP32[$65 >> 2] = HEAP32[$66 >> 2];
  $69 = HEAP32[$$01$i$looptemp + -12 >> 2] | 0;
  HEAP32[$6 + -12 >> 2] = $69;
  $71 = $$01$i$looptemp + -8 | 0;
  $72 = HEAP32[$71 >> 2] | 0;
  HEAP32[$6 + -8 >> 2] = $72;
  $75 = $6 + -12 | 0;
  if (!$72) HEAP32[$65 >> 2] = $75; else {
   HEAP32[$69 + 8 >> 2] = $75;
   $77 = $$01$i$looptemp + -12 | 0;
   HEAP32[$66 >> 2] = $77;
   HEAP32[$77 >> 2] = 0;
   HEAP32[$71 >> 2] = 0;
  }
  $6 = (HEAP32[$3 >> 2] | 0) + -144 | 0;
  HEAP32[$3 >> 2] = $6;
 } while (($$01$i | 0) != ($0 | 0));
 $81 = $6;
 $82 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = $81;
 HEAP32[$3 >> 2] = $82;
 $83 = $__v + 8 | 0;
 $84 = HEAP32[$1 >> 2] | 0;
 $85 = HEAP32[$83 >> 2] | 0;
 HEAP32[$1 >> 2] = $85;
 HEAP32[$83 >> 2] = $84;
 $86 = $this + 8 | 0;
 $87 = $__v + 12 | 0;
 $88 = HEAP32[$86 >> 2] | 0;
 $89 = HEAP32[$87 >> 2] | 0;
 HEAP32[$86 >> 2] = $89;
 HEAP32[$87 >> 2] = $88;
 $90 = HEAP32[$3 >> 2] | 0;
 HEAP32[$__v >> 2] = $90;
 STACKTOP = sp;
 return;
}
function __ZN12_GLOBAL__N_111Interpreter14manifestStringERK13LocationRange($agg$result, $this, $loc) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 var $$0 = 0, $$0$i = 0, $$01$i = 0, $$016 = 0, $$035 = 0, $$12 = 0, $$14 = 0, $0 = 0, $1 = 0, $11 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $0 = sp + 168 | 0;
 $ss = sp + 24 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 $3 = $this + 56 | 0;
 if ((HEAP32[$3 >> 2] | 0) == 19) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($agg$result, (HEAP32[$this + 64 >> 2] | 0) + 8 | 0);
  STACKTOP = sp;
  return;
 }
 $6 = $ss + 64 | 0;
 $7 = $ss + 8 | 0;
 HEAP32[$7 >> 2] = 792;
 $8 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 940;
 HEAP32[$6 >> 2] = 960;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $8 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $23 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $23;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 772;
 HEAP32[$6 >> 2] = 812;
 HEAP32[$7 >> 2] = 792;
 __THREW__ = 0;
 invoke_vi(179, $8 | 0);
 $15 = __THREW__;
 __THREW__ = 0;
 do if ($15 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $25;
 } else {
  HEAP32[$8 >> 2] = 1104;
  $17 = $ss + 44 | 0;
  HEAP32[$17 + 0 >> 2] = 0;
  HEAP32[$17 + 4 >> 2] = 0;
  HEAP32[$17 + 8 >> 2] = 0;
  HEAP32[$17 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $8 | 0, $0 | 0);
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $21 = ___cxa_find_matching_catch() | 0;
   $22 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
   $eh$lpad$body$i$index2Z2D = $22;
   $eh$lpad$body$i$indexZ2D = $21;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  __THREW__ = 0;
  $28 = invoke_iiii(25, $ss + 8 | 0, 38304, 29) | 0;
  $29 = __THREW__;
  __THREW__ = 0;
  do if ($29 & 1) label = 19; else {
   __THREW__ = 0;
   invoke_vii(59, $1 | 0, HEAP32[$3 >> 2] | 0);
   $32 = __THREW__;
   __THREW__ = 0;
   if ($32 & 1) label = 19; else {
    $34 = HEAP8[$1 >> 0] | 0;
    if (!($34 & 1)) {
     $44 = $1 + 1 | 0;
     $45 = ($34 & 255) >>> 1;
    } else {
     $44 = HEAP32[$1 + 8 >> 2] | 0;
     $45 = HEAP32[$1 + 4 >> 2] | 0;
    }
    __THREW__ = 0;
    invoke_iiii(25, $28 | 0, $44 | 0, $45 | 0) | 0;
    $46 = __THREW__;
    __THREW__ = 0;
    if ($46 & 1) {
     $58 = ___cxa_find_matching_catch() | 0;
     $59 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
     $$12 = $59;
     $$14 = $58;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
    $48 = ___cxa_allocate_exception(24) | 0;
    __THREW__ = 0;
    invoke_vii(43, $2 | 0, $8 | 0);
    $49 = __THREW__;
    __THREW__ = 0;
    if ($49 & 1) {
     $60 = ___cxa_find_matching_catch() | 0;
     $$016 = tempRet0;
     $$035 = $60;
    } else {
     __THREW__ = 0;
     invoke_viiii(17, $48 | 0, $this + 72 | 0, $loc | 0, $2 | 0);
     $52 = __THREW__;
     __THREW__ = 0;
     if ($52 & 1) $$0 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $48 | 0, 37312, 185);
      $54 = __THREW__;
      __THREW__ = 0;
      if ($54 & 1) $$0 = 0; else {}
     }
     $62 = ___cxa_find_matching_catch() | 0;
     $63 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
     if ($$0) {
      $$016 = $63;
      $$035 = $62;
     } else {
      $$12 = $63;
      $$14 = $62;
      break;
     }
    }
    ___cxa_free_exception($48 | 0);
    $$12 = $$016;
    $$14 = $$035;
   }
  } while (0);
  if ((label | 0) == 19) {
   $56 = ___cxa_find_matching_catch() | 0;
   $$12 = tempRet0;
   $$14 = $56;
  }
  HEAP32[$ss >> 2] = 772;
  HEAP32[$ss + 64 >> 2] = 812;
  HEAP32[$7 >> 2] = 792;
  HEAP32[$8 >> 2] = 1104;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($17);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$14 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
 ___resumeException($$01$i | 0);
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert10 = 0, $$phi$trans$insert8 = 0, $$pre$phi16Z2D = 0, $$pre$phiZ2D = 0, $$pre11 = 0, $0 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $17 = 0, $19 = 0, $24 = 0, $28 = 0, $3 = 0, $35 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $80 = 0, $86 = 0, $89 = 0, $93 = 0, $94 = 0, $98 = 0, $99 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 92 | 0;
 if (!(HEAP32[$3 >> 2] & 16)) {
  HEAP32[$this + 8 >> 2] = 0;
  HEAP32[$this + 12 >> 2] = 0;
  HEAP32[$this + 16 >> 2] = 0;
  $11 = HEAP32[$this + 52 >> 2] | 0;
  do if ($11 >>> 0 > 8) if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $24 = HEAP32[$this + 56 >> 2] | 0;
   $28 = $24 + ((HEAP32[$this + 60 >> 2] | 0) + -1) | 0;
   HEAP32[$this + 24 >> 2] = $24;
   HEAP32[$this + 20 >> 2] = $24;
   HEAP32[$this + 28 >> 2] = $28;
   $103 = $28;
   $104 = $24;
   break;
  } else {
   $17 = HEAP32[$this + 32 >> 2] | 0;
   $19 = $17 + ($11 + -1) | 0;
   HEAP32[$this + 24 >> 2] = $17;
   HEAP32[$this + 20 >> 2] = $17;
   HEAP32[$this + 28 >> 2] = $19;
   $103 = $19;
   $104 = $17;
   break;
  } else {
   HEAP32[$this + 24 >> 2] = 0;
   HEAP32[$this + 20 >> 2] = 0;
   HEAP32[$this + 28 >> 2] = 0;
   $103 = 0;
   $104 = 0;
  } while (0);
  HEAP32[$3 >> 2] = 16;
  $$pre$phi16Z2D = $this + 28 | 0;
  $$pre$phiZ2D = $this + 20 | 0;
  $101 = $104;
  $102 = $103;
 } else {
  $$phi$trans$insert = $this + 20 | 0;
  $$phi$trans$insert8 = $this + 28 | 0;
  $$pre$phi16Z2D = $$phi$trans$insert8;
  $$pre$phiZ2D = $$phi$trans$insert;
  $101 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $102 = HEAP32[$$phi$trans$insert8 >> 2] | 0;
 }
 $35 = ($__c | 0) == -1;
 $$phi$trans$insert10 = $this + 24 | 0;
 $$pre11 = HEAP32[$$phi$trans$insert10 >> 2] | 0;
 if ($35) {
  $43 = $$pre11;
  $45 = $101;
 } else {
  if (!$$pre11) {
   HEAP32[$$phi$trans$insert10 >> 2] = $__1buf;
   HEAP32[$$pre$phiZ2D >> 2] = $__1buf;
   HEAP32[$$pre$phi16Z2D >> 2] = $__1buf + 1;
   $39 = $__1buf;
  } else $39 = $$pre11;
  HEAP8[$39 >> 0] = $__c;
  $41 = (HEAP32[$$phi$trans$insert10 >> 2] | 0) + 1 | 0;
  HEAP32[$$phi$trans$insert10 >> 2] = $41;
  $43 = $41;
  $45 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 }
 $42 = $this + 24 | 0;
 if (($43 | 0) != ($45 | 0)) {
  L23 : do if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $55 = $this + 32 | 0;
   $56 = HEAP32[$55 >> 2] | 0;
   HEAP32[$__extbe >> 2] = $56;
   $57 = $this + 68 | 0;
   $58 = HEAP32[$57 >> 2] | 0;
   if (!$58) {
    $62 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($62);
    ___cxa_throw($62 | 0, 54576, 170);
   }
   $60 = $this + 72 | 0;
   $61 = $this + 52 | 0;
   $65 = $56;
   $67 = $58;
   $70 = $45;
   $71 = $43;
   while (1) {
    $72 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$67 >> 2] | 0) + 12 >> 2] & 15]($67, $60, $70, $71, $__e, $65, $65 + (HEAP32[$61 >> 2] | 0) | 0, $__extbe) | 0;
    $74 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    if ((HEAP32[$__e >> 2] | 0) == ($74 | 0)) {
     $$0 = -1;
     label = 30;
     break;
    }
    if (($72 | 0) == 3) {
     label = 22;
     break;
    }
    if ($72 >>> 0 >= 2) {
     $$0 = -1;
     label = 30;
     break;
    }
    $86 = HEAP32[$55 >> 2] | 0;
    $89 = (HEAP32[$__extbe >> 2] | 0) - $86 | 0;
    if ((_fwrite($86 | 0, 1, $89 | 0, HEAP32[$0 >> 2] | 0) | 0) != ($89 | 0)) {
     $$0 = -1;
     label = 30;
     break;
    }
    if (($72 | 0) != 1) break L23;
    $93 = HEAP32[$__e >> 2] | 0;
    $94 = HEAP32[$42 >> 2] | 0;
    HEAP32[$$pre$phiZ2D >> 2] = $93;
    HEAP32[$$pre$phi16Z2D >> 2] = $94;
    $98 = $93 + ($94 - $93) | 0;
    HEAP32[$42 >> 2] = $98;
    $99 = HEAP32[$57 >> 2] | 0;
    if (!$99) {
     label = 19;
     break;
    }
    $65 = HEAP32[$55 >> 2] | 0;
    $67 = $99;
    $70 = $93;
    $71 = $98;
   }
   if ((label | 0) == 19) {
    $62 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($62);
    ___cxa_throw($62 | 0, 54576, 170);
   } else if ((label | 0) == 22) {
    $80 = (HEAP32[$42 >> 2] | 0) - $74 | 0;
    if ((_fwrite($74 | 0, 1, $80 | 0, HEAP32[$0 >> 2] | 0) | 0) == ($80 | 0)) break; else $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 30) {
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else {
   $51 = $43 - $45 | 0;
   if ((_fwrite($45 | 0, 1, $51 | 0, HEAP32[$0 >> 2] | 0) | 0) != ($51 | 0)) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } while (0);
  HEAP32[$42 >> 2] = $101;
  HEAP32[$$pre$phiZ2D >> 2] = $101;
  HEAP32[$$pre$phi16Z2D >> 2] = $102;
 }
 $$0 = $35 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this | 0;
 var $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $57 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46144] | 0) {
  $56 = HEAP32[11534] | 0;
  STACKTOP = sp;
  return $56 | 0;
 }
 if (!(___cxa_guard_acquire(46144) | 0)) {
  $56 = HEAP32[11534] | 0;
  STACKTOP = sp;
  return $56 | 0;
 }
 if (!(HEAP8[52384] | 0)) if (___cxa_guard_acquire(52384) | 0) {
  _memset(52096, 0, 288) | 0;
  ___cxa_atexit(196, 0, ___dso_handle | 0) | 0;
  ___cxa_guard_release(52384);
 }
 __THREW__ = 0;
 invoke_iii(19, 52096, 52392) | 0;
 $8 = __THREW__;
 __THREW__ = 0;
 do if (!($8 & 1)) {
  __THREW__ = 0;
  invoke_iii(19, 52108, 52400) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 52120, 52416) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    __THREW__ = 0;
    invoke_iii(19, 52132, 52424) | 0;
    $14 = __THREW__;
    __THREW__ = 0;
    if (!($14 & 1)) {
     __THREW__ = 0;
     invoke_iii(19, 52144, 52432) | 0;
     $16 = __THREW__;
     __THREW__ = 0;
     if (!($16 & 1)) {
      __THREW__ = 0;
      invoke_iii(19, 52156, 52440) | 0;
      $18 = __THREW__;
      __THREW__ = 0;
      if (!($18 & 1)) {
       __THREW__ = 0;
       invoke_iii(19, 52168, 52448) | 0;
       $20 = __THREW__;
       __THREW__ = 0;
       if (!($20 & 1)) {
        __THREW__ = 0;
        invoke_iii(19, 52180, 52456) | 0;
        $22 = __THREW__;
        __THREW__ = 0;
        if (!($22 & 1)) {
         __THREW__ = 0;
         invoke_iii(19, 52192, 52464) | 0;
         $24 = __THREW__;
         __THREW__ = 0;
         if (!($24 & 1)) {
          __THREW__ = 0;
          invoke_iii(19, 52204, 52480) | 0;
          $26 = __THREW__;
          __THREW__ = 0;
          if (!($26 & 1)) {
           __THREW__ = 0;
           invoke_iii(19, 52216, 52488) | 0;
           $28 = __THREW__;
           __THREW__ = 0;
           if (!($28 & 1)) {
            __THREW__ = 0;
            invoke_iii(19, 52228, 52504) | 0;
            $30 = __THREW__;
            __THREW__ = 0;
            if (!($30 & 1)) {
             __THREW__ = 0;
             invoke_iii(19, 52240, 52520) | 0;
             $32 = __THREW__;
             __THREW__ = 0;
             if (!($32 & 1)) {
              __THREW__ = 0;
              invoke_iii(19, 52252, 52528) | 0;
              $34 = __THREW__;
              __THREW__ = 0;
              if (!($34 & 1)) {
               __THREW__ = 0;
               invoke_iii(19, 52264, 52536) | 0;
               $36 = __THREW__;
               __THREW__ = 0;
               if (!($36 & 1)) {
                __THREW__ = 0;
                invoke_iii(19, 52276, 52544) | 0;
                $38 = __THREW__;
                __THREW__ = 0;
                if (!($38 & 1)) {
                 __THREW__ = 0;
                 invoke_iii(19, 52288, 52432) | 0;
                 $40 = __THREW__;
                 __THREW__ = 0;
                 if ($40 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 52300, 52552) | 0;
                 $42 = __THREW__;
                 __THREW__ = 0;
                 if ($42 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 52312, 52560) | 0;
                 $44 = __THREW__;
                 __THREW__ = 0;
                 if ($44 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 52324, 52568) | 0;
                 $46 = __THREW__;
                 __THREW__ = 0;
                 if ($46 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 52336, 52576) | 0;
                 $48 = __THREW__;
                 __THREW__ = 0;
                 if ($48 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 52348, 52584) | 0;
                 $50 = __THREW__;
                 __THREW__ = 0;
                 if ($50 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 52360, 52592) | 0;
                 $52 = __THREW__;
                 __THREW__ = 0;
                 if ($52 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 52372, 52600) | 0;
                 $54 = __THREW__;
                 __THREW__ = 0;
                 if ($54 & 1) break;
                 HEAP32[11534] = 52096;
                 ___cxa_guard_release(46144);
                 $56 = HEAP32[11534] | 0;
                 STACKTOP = sp;
                 return $56 | 0;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while (0);
 $57 = ___cxa_find_matching_catch() | 0;
 ___cxa_guard_abort(46144);
 ___resumeException($57 | 0);
 return 0;
}

function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this | 0;
 var $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $57 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46160] | 0) {
  $56 = HEAP32[11538] | 0;
  STACKTOP = sp;
  return $56 | 0;
 }
 if (!(___cxa_guard_acquire(46160) | 0)) {
  $56 = HEAP32[11538] | 0;
  STACKTOP = sp;
  return $56 | 0;
 }
 if (!(HEAP8[51544] | 0)) if (___cxa_guard_acquire(51544) | 0) {
  _memset(51256, 0, 288) | 0;
  ___cxa_atexit(197, 0, ___dso_handle | 0) | 0;
  ___cxa_guard_release(51544);
 }
 __THREW__ = 0;
 invoke_iii(42, 51256, 51552) | 0;
 $8 = __THREW__;
 __THREW__ = 0;
 do if (!($8 & 1)) {
  __THREW__ = 0;
  invoke_iii(42, 51268, 51584) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   __THREW__ = 0;
   invoke_iii(42, 51280, 51624) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    __THREW__ = 0;
    invoke_iii(42, 51292, 51648) | 0;
    $14 = __THREW__;
    __THREW__ = 0;
    if (!($14 & 1)) {
     __THREW__ = 0;
     invoke_iii(42, 51304, 51968) | 0;
     $16 = __THREW__;
     __THREW__ = 0;
     if (!($16 & 1)) {
      __THREW__ = 0;
      invoke_iii(42, 51316, 51672) | 0;
      $18 = __THREW__;
      __THREW__ = 0;
      if (!($18 & 1)) {
       __THREW__ = 0;
       invoke_iii(42, 51328, 51696) | 0;
       $20 = __THREW__;
       __THREW__ = 0;
       if (!($20 & 1)) {
        __THREW__ = 0;
        invoke_iii(42, 51340, 51720) | 0;
        $22 = __THREW__;
        __THREW__ = 0;
        if (!($22 & 1)) {
         __THREW__ = 0;
         invoke_iii(42, 51352, 51752) | 0;
         $24 = __THREW__;
         __THREW__ = 0;
         if (!($24 & 1)) {
          __THREW__ = 0;
          invoke_iii(42, 51364, 51792) | 0;
          $26 = __THREW__;
          __THREW__ = 0;
          if (!($26 & 1)) {
           __THREW__ = 0;
           invoke_iii(42, 51376, 51824) | 0;
           $28 = __THREW__;
           __THREW__ = 0;
           if (!($28 & 1)) {
            __THREW__ = 0;
            invoke_iii(42, 51388, 51864) | 0;
            $30 = __THREW__;
            __THREW__ = 0;
            if (!($30 & 1)) {
             __THREW__ = 0;
             invoke_iii(42, 51400, 51904) | 0;
             $32 = __THREW__;
             __THREW__ = 0;
             if (!($32 & 1)) {
              __THREW__ = 0;
              invoke_iii(42, 51412, 51920) | 0;
              $34 = __THREW__;
              __THREW__ = 0;
              if (!($34 & 1)) {
               __THREW__ = 0;
               invoke_iii(42, 51424, 51936) | 0;
               $36 = __THREW__;
               __THREW__ = 0;
               if (!($36 & 1)) {
                __THREW__ = 0;
                invoke_iii(42, 51436, 51952) | 0;
                $38 = __THREW__;
                __THREW__ = 0;
                if (!($38 & 1)) {
                 __THREW__ = 0;
                 invoke_iii(42, 51448, 51968) | 0;
                 $40 = __THREW__;
                 __THREW__ = 0;
                 if ($40 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(42, 51460, 51984) | 0;
                 $42 = __THREW__;
                 __THREW__ = 0;
                 if ($42 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(42, 51472, 52e3) | 0;
                 $44 = __THREW__;
                 __THREW__ = 0;
                 if ($44 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(42, 51484, 52016) | 0;
                 $46 = __THREW__;
                 __THREW__ = 0;
                 if ($46 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(42, 51496, 52032) | 0;
                 $48 = __THREW__;
                 __THREW__ = 0;
                 if ($48 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(42, 51508, 52048) | 0;
                 $50 = __THREW__;
                 __THREW__ = 0;
                 if ($50 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(42, 51520, 52064) | 0;
                 $52 = __THREW__;
                 __THREW__ = 0;
                 if ($52 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(42, 51532, 52080) | 0;
                 $54 = __THREW__;
                 __THREW__ = 0;
                 if ($54 & 1) break;
                 HEAP32[11538] = 51256;
                 ___cxa_guard_release(46160);
                 $56 = HEAP32[11538] | 0;
                 STACKTOP = sp;
                 return $56 | 0;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while (0);
 $57 = ___cxa_find_matching_catch() | 0;
 ___cxa_guard_abort(46160);
 ___resumeException($57 | 0);
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $19 = 0, $22 = 0, $25 = 0, $28 = 0, $30 = 0, $33 = 0, $34 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $5 = 0, $51 = 0, $54 = 0, $56 = 0, $59 = 0, $60 = 0, $__nd$0$in$i = 0, $__nd$0$in$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 if (($1 | 0) != ($0 | 0)) {
  $4 = HEAP32[$__v >> 2] | 0;
  $5 = HEAP32[$1 + 16 >> 2] | 0;
  if ($4 >>> 0 >= $5 >>> 0) {
   if ($5 >>> 0 >= $4 >>> 0) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $__parent;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $37 = $1 + 4 | 0;
   $38 = HEAP32[$37 >> 2] | 0;
   $39 = ($38 | 0) == 0;
   if ($39) {
    $$0$i$i$i$i$i = $1;
    while (1) {
     $43 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$43 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $43;
      break;
     } else $$0$i$i$i$i$i = $43;
    }
   } else {
    $$0$i$i$i$i$i$i = $38;
    while (1) {
     $40 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$40) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $40;
    }
   }
   if (($$01$i$i$i$i$i | 0) != ($0 | 0)) if ($4 >>> 0 >= (HEAP32[$$01$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
    $51 = HEAP32[$this + 4 >> 2] | 0;
    if (!$51) {
     HEAP32[$__parent >> 2] = $0;
     $$0 = $0;
     STACKTOP = sp;
     return $$0 | 0;
    } else $__nd$0$in$i = $51;
    while (1) {
     $54 = HEAP32[$__nd$0$in$i + 16 >> 2] | 0;
     if ($4 >>> 0 < $54 >>> 0) {
      $56 = HEAP32[$__nd$0$in$i >> 2] | 0;
      if (!$56) {
       label = 34;
       break;
      } else {
       $__nd$0$in$i = $56;
       continue;
      }
     }
     if ($54 >>> 0 >= $4 >>> 0) {
      label = 38;
      break;
     }
     $59 = $__nd$0$in$i + 4 | 0;
     $60 = HEAP32[$59 >> 2] | 0;
     if (!$60) {
      label = 37;
      break;
     } else $__nd$0$in$i = $60;
    }
    if ((label | 0) == 34) {
     HEAP32[$__parent >> 2] = $__nd$0$in$i;
     $$0 = $__nd$0$in$i;
     STACKTOP = sp;
     return $$0 | 0;
    } else if ((label | 0) == 37) {
     HEAP32[$__parent >> 2] = $__nd$0$in$i;
     $$0 = $59;
     STACKTOP = sp;
     return $$0 | 0;
    } else if ((label | 0) == 38) {
     HEAP32[$__parent >> 2] = $__nd$0$in$i;
     $$0 = $__parent;
     STACKTOP = sp;
     return $$0 | 0;
    }
   }
   if ($39) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $37;
    STACKTOP = sp;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
    $$0 = $$01$i$i$i$i$i;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 }
 $$pre = HEAP32[$1 >> 2] | 0;
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $22 = $1; else {
  if (!$$pre) {
   $$0$i$i = $1;
   while (1) {
    $14 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$14 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $14; else {
     $$01$i$i = $14;
     break;
    }
   }
  } else {
   $$0$i$i$i = $$pre;
   while (1) {
    $11 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$11) {
     $$01$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $11;
   }
  }
  $19 = HEAP32[$__v >> 2] | 0;
  if ((HEAP32[$$01$i$i + 16 >> 2] | 0) >>> 0 < $19 >>> 0) $22 = $$01$i$i; else {
   $25 = HEAP32[$this + 4 >> 2] | 0;
   if (!$25) {
    HEAP32[$__parent >> 2] = $0;
    $$0 = $0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $__nd$0$in$i5 = $25;
   while (1) {
    $28 = HEAP32[$__nd$0$in$i5 + 16 >> 2] | 0;
    if ($19 >>> 0 < $28 >>> 0) {
     $30 = HEAP32[$__nd$0$in$i5 >> 2] | 0;
     if (!$30) {
      label = 15;
      break;
     } else {
      $__nd$0$in$i5 = $30;
      continue;
     }
    }
    if ($28 >>> 0 >= $19 >>> 0) {
     label = 19;
     break;
    }
    $33 = $__nd$0$in$i5 + 4 | 0;
    $34 = HEAP32[$33 >> 2] | 0;
    if (!$34) {
     label = 18;
     break;
    } else $__nd$0$in$i5 = $34;
   }
   if ((label | 0) == 15) {
    HEAP32[$__parent >> 2] = $__nd$0$in$i5;
    $$0 = $__nd$0$in$i5;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 18) {
    HEAP32[$__parent >> 2] = $__nd$0$in$i5;
    $$0 = $33;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 19) {
    HEAP32[$__parent >> 2] = $__nd$0$in$i5;
    $$0 = $__parent;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 }
 if (!$$pre) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $22;
  $$0 = $22 + 4 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $$0$i = 0, $$phi$trans$insert = 0, $$pre$phi5Z2D = 0, $$pre$phiZ2D = 0, $$pre2 = 0, $0 = 0, $100 = 0, $105 = 0, $106 = 0, $111 = 0, $114 = 0, $116 = 0, $118 = 0, $120 = 0, $129 = 0, $130 = 0, $133 = 0, $134 = 0, $135 = 0, $14 = 0, $143 = 0, $17 = 0, $22 = 0, $25 = 0, $29 = 0, $3 = 0, $31 = 0, $39 = 0, $42 = 0, $43 = 0, $46 = 0, $47 = 0, $54 = 0, $61 = 0, $63 = 0, $64 = 0, $68 = 0, $70 = 0, $71 = 0, $72 = 0, $77 = 0, $83 = 0, $88 = 0, $89 = 0, $90 = 0, $92 = 0, $95 = 0, $99 = 0, $__1buf = 0, $__c$0 = 0, $__inext = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__1buf = sp + 4 | 0;
 $__inext = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 92 | 0;
 if (!(HEAP32[$3 >> 2] & 8)) {
  HEAP32[$this + 24 >> 2] = 0;
  HEAP32[$this + 20 >> 2] = 0;
  HEAP32[$this + 28 >> 2] = 0;
  if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $22 = HEAP32[$this + 56 >> 2] | 0;
   $25 = $22 + (HEAP32[$this + 60 >> 2] | 0) | 0;
   HEAP32[$this + 8 >> 2] = $22;
   HEAP32[$this + 12 >> 2] = $25;
   HEAP32[$this + 16 >> 2] = $25;
   $143 = $25;
  } else {
   $14 = HEAP32[$this + 32 >> 2] | 0;
   $17 = $14 + (HEAP32[$this + 52 >> 2] | 0) | 0;
   HEAP32[$this + 8 >> 2] = $14;
   HEAP32[$this + 12 >> 2] = $17;
   HEAP32[$this + 16 >> 2] = $17;
   $143 = $17;
  }
  HEAP32[$3 >> 2] = 8;
  $$0$i = 1;
  $$pre$phiZ2D = $this + 12 | 0;
  $29 = $143;
 } else {
  $$phi$trans$insert = $this + 12 | 0;
  $$0$i = 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $29 = HEAP32[$$phi$trans$insert >> 2] | 0;
 }
 if (!$29) {
  $31 = $__1buf + 1 | 0;
  HEAP32[$this + 8 >> 2] = $__1buf;
  HEAP32[$$pre$phiZ2D >> 2] = $31;
  HEAP32[$this + 16 >> 2] = $31;
  $43 = $31;
 } else $43 = $29;
 $$pre2 = HEAP32[$this + 16 >> 2] | 0;
 if ($$0$i) $46 = 0; else {
  $39 = ($$pre2 - (HEAP32[$this + 8 >> 2] | 0) | 0) / 2 | 0;
  $46 = $39 >>> 0 > 4 ? 4 : $39;
 }
 $42 = $this + 16 | 0;
 do if (($43 | 0) == ($$pre2 | 0)) {
  $47 = $this + 8 | 0;
  _memmove(HEAP32[$47 >> 2] | 0, $43 + (0 - $46) | 0, $46 | 0) | 0;
  if (HEAP8[$this + 98 >> 0] | 0) {
   $54 = HEAP32[$47 >> 2] | 0;
   $61 = _fread($54 + $46 | 0, 1, (HEAP32[$42 >> 2] | 0) - $46 - $54 | 0, HEAP32[$0 >> 2] | 0) | 0;
   if (!$61) {
    $$pre$phi5Z2D = $47;
    $__c$0 = -1;
    break;
   }
   $63 = HEAP32[$47 >> 2] | 0;
   $64 = $63 + $46 | 0;
   HEAP32[$$pre$phiZ2D >> 2] = $64;
   HEAP32[$42 >> 2] = $63 + ($61 + $46);
   $$pre$phi5Z2D = $47;
   $__c$0 = HEAPU8[$64 >> 0] | 0;
   break;
  }
  $68 = $this + 32 | 0;
  $70 = $this + 36 | 0;
  $71 = HEAP32[$70 >> 2] | 0;
  $72 = $this + 40 | 0;
  _memmove(HEAP32[$68 >> 2] | 0, $71 | 0, (HEAP32[$72 >> 2] | 0) - $71 | 0) | 0;
  $77 = HEAP32[$68 >> 2] | 0;
  $83 = $77 + ((HEAP32[$72 >> 2] | 0) - (HEAP32[$70 >> 2] | 0)) | 0;
  HEAP32[$70 >> 2] = $83;
  if (($77 | 0) == ($this + 44 | 0)) $89 = 8; else $89 = HEAP32[$this + 52 >> 2] | 0;
  $88 = $77 + $89 | 0;
  HEAP32[$72 >> 2] = $88;
  $90 = $this + 60 | 0;
  $92 = (HEAP32[$90 >> 2] | 0) - $46 | 0;
  $95 = $88 - $83 | 0;
  $99 = $this + 72 | 0;
  $100 = $99;
  $105 = HEAP32[$100 + 4 >> 2] | 0;
  $106 = $this + 80 | 0;
  HEAP32[$106 >> 2] = HEAP32[$100 >> 2];
  HEAP32[$106 + 4 >> 2] = $105;
  $111 = _fread($83 | 0, 1, ($95 >>> 0 < $92 >>> 0 ? $95 : $92) | 0, HEAP32[$0 >> 2] | 0) | 0;
  if (!$111) {
   $$pre$phi5Z2D = $47;
   $__c$0 = -1;
  } else {
   $114 = HEAP32[$this + 68 >> 2] | 0;
   if (!$114) {
    $116 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($116);
    ___cxa_throw($116 | 0, 54576, 170);
   }
   $118 = (HEAP32[$70 >> 2] | 0) + $111 | 0;
   HEAP32[$72 >> 2] = $118;
   $120 = HEAP32[$47 >> 2] | 0;
   if ((FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$114 >> 2] | 0) + 16 >> 2] & 15]($114, $99, HEAP32[$68 >> 2] | 0, $118, $70, $120 + $46 | 0, $120 + (HEAP32[$90 >> 2] | 0) | 0, $__inext) | 0) == 3) {
    $129 = HEAP32[$68 >> 2] | 0;
    $130 = HEAP32[$72 >> 2] | 0;
    HEAP32[$47 >> 2] = $129;
    HEAP32[$$pre$phiZ2D >> 2] = $129;
    HEAP32[$42 >> 2] = $130;
    $$pre$phi5Z2D = $47;
    $__c$0 = HEAPU8[$129 >> 0] | 0;
    break;
   }
   $133 = HEAP32[$__inext >> 2] | 0;
   $134 = HEAP32[$47 >> 2] | 0;
   $135 = $134 + $46 | 0;
   if (($133 | 0) == ($135 | 0)) {
    $$pre$phi5Z2D = $47;
    $__c$0 = -1;
   } else {
    HEAP32[$47 >> 2] = $134;
    HEAP32[$$pre$phiZ2D >> 2] = $135;
    HEAP32[$42 >> 2] = $133;
    $$pre$phi5Z2D = $47;
    $__c$0 = HEAPU8[$135 >> 0] | 0;
   }
  }
 } else {
  $$pre$phi5Z2D = $this + 8 | 0;
  $__c$0 = HEAPU8[$43 >> 0] | 0;
 } while (0);
 if ((HEAP32[$$pre$phi5Z2D >> 2] | 0) != ($__1buf | 0)) {
  $$0 = $__c$0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$$pre$phi5Z2D >> 2] = 0;
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 HEAP32[$42 >> 2] = 0;
 $$0 = $__c$0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $17 = 0, $18 = 0, $19 = 0, $30 = 0, $40 = 0, $44 = 0, $46 = 0, $59 = 0, $73 = 0, $79 = 0, $81 = 0, $83 = 0, $95 = 0, $98 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$117 = 0, $frm_nxt$2 = 0, $nchar16_t$016 = 0, $nchar16_t$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($frm_end - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 L7 : do if ($frm_nxt$1$ph >>> 0 < $frm_end >>> 0 & ($mx | 0) != 0) {
  $17 = $frm_end;
  $frm_nxt$117 = $frm_nxt$1$ph;
  $nchar16_t$016 = 0;
  L9 : while (1) {
   $18 = HEAP8[$frm_nxt$117 >> 0] | 0;
   $19 = $18 & 255;
   if ($19 >>> 0 > $Maxcode >>> 0) {
    $frm_nxt$1$lcssa = $frm_nxt$117;
    break L7;
   }
   do if ($18 << 24 >> 24 > -1) {
    $frm_nxt$2 = $frm_nxt$117 + 1 | 0;
    $nchar16_t$1 = $nchar16_t$016;
   } else {
    if (($18 & 255) < 194) {
     $frm_nxt$1$lcssa = $frm_nxt$117;
     break L7;
    }
    if (($18 & 255) < 224) {
     if (($17 - $frm_nxt$117 | 0) < 2) {
      $frm_nxt$1$lcssa = $frm_nxt$117;
      break L7;
     }
     $30 = HEAPU8[$frm_nxt$117 + 1 >> 0] | 0;
     if (($30 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$117;
      break L7;
     }
     if (($30 & 63 | $19 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$117;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$117 + 2 | 0;
     $nchar16_t$1 = $nchar16_t$016;
     break;
    }
    if (($18 & 255) < 240) {
     $40 = $frm_nxt$117;
     if (($17 - $40 | 0) < 3) {
      $frm_nxt$1$lcssa = $frm_nxt$117;
      break L7;
     }
     $44 = HEAP8[$frm_nxt$117 + 1 >> 0] | 0;
     $46 = HEAP8[$frm_nxt$117 + 2 >> 0] | 0;
     if (($19 | 0) == 224) {
      if (($44 & -32) << 24 >> 24 != -96) {
       label = 21;
       break L9;
      }
     } else if (($19 | 0) == 237) {
      if (($44 & -32) << 24 >> 24 != -128) {
       label = 23;
       break L9;
      }
     } else if (($44 & -64) << 24 >> 24 != -128) {
      label = 25;
      break L9;
     }
     $59 = $46 & 255;
     if (($59 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$117;
      break L7;
     }
     if ((($44 & 255) << 6 & 4032 | $19 << 12 & 61440 | $59 & 63) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$117;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$117 + 3 | 0;
     $nchar16_t$1 = $nchar16_t$016;
     break;
    }
    if (($18 & 255) >= 245) {
     $frm_nxt$1$lcssa = $frm_nxt$117;
     break L7;
    }
    $73 = $frm_nxt$117;
    if (($17 - $73 | 0) < 4 | ($mx - $nchar16_t$016 | 0) >>> 0 < 2) {
     $frm_nxt$1$lcssa = $frm_nxt$117;
     break L7;
    }
    $79 = HEAP8[$frm_nxt$117 + 1 >> 0] | 0;
    $81 = HEAP8[$frm_nxt$117 + 2 >> 0] | 0;
    $83 = HEAP8[$frm_nxt$117 + 3 >> 0] | 0;
    if (($19 | 0) == 244) {
     if (($79 & -16) << 24 >> 24 != -128) {
      label = 35;
      break L9;
     }
    } else if (($19 | 0) == 240) {
     if (($79 + 112 << 24 >> 24 & 255) >= 48) {
      label = 33;
      break L9;
     }
    } else if (($79 & -64) << 24 >> 24 != -128) {
     label = 37;
     break L9;
    }
    $95 = $81 & 255;
    if (($95 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$117;
     break L7;
    }
    $98 = $83 & 255;
    if (($98 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$117;
     break L7;
    }
    if ((($79 & 255) << 12 & 258048 | $19 << 18 & 1835008 | $95 << 6 & 4032 | $98 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$117;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$117 + 4 | 0;
    $nchar16_t$1 = $nchar16_t$016 + 1 | 0;
   } while (0);
   $nchar16_t$016 = $nchar16_t$1 + 1 | 0;
   if (!($frm_nxt$2 >>> 0 < $frm_end >>> 0 & $nchar16_t$016 >>> 0 < $mx >>> 0)) {
    $frm_nxt$1$lcssa = $frm_nxt$2;
    break L7;
   } else $frm_nxt$117 = $frm_nxt$2;
  }
  if ((label | 0) == 21) {
   $$0 = $40 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 23) {
   $$0 = $40 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 25) {
   $$0 = $40 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 33) {
   $$0 = $73 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 35) {
   $$0 = $73 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 37) {
   $$0 = $73 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else $frm_nxt$1$lcssa = $frm_nxt$1$ph; while (0);
 $$0 = $frm_nxt$1$lcssa - $frm | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__18ios_base4InitC2Ev($this) {
 $this = $this | 0;
 var $$sum$i1 = 0, $$sum$i11 = 0, $$sum1$i12 = 0, $$sum1$i2 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $18 = 0, $20 = 0, $22 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $45 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $60 = 0, $62 = 0, $64 = 0, $69 = 0, $71 = 0, $79 = 0, $81 = 0, $83 = 0, $9 = 0, $94 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[_stdin >> 2] | 0;
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(41848, $0, 41904);
 HEAP32[10284] = 43092;
 HEAP32[10286] = 43112;
 HEAP32[10285] = 0;
 $1 = HEAP32[10770] | 0;
 __THREW__ = 0;
 invoke_vii(41, 41136 + $1 | 0, 41848);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $5 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(41144 | 0);
  ___resumeException($5 | 0);
 }
 HEAP32[$1 + 41208 >> 2] = 0;
 HEAP32[$1 + 41212 >> 2] = -1;
 $9 = HEAP32[_stdout >> 2] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(41952, $9, 41912 | 0);
 HEAP32[10306] = 43172;
 HEAP32[10307] = 43192;
 $10 = HEAP32[10790] | 0;
 __THREW__ = 0;
 invoke_vii(41, 41224 + $10 | 0, 41952);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(41228 | 0);
  ___resumeException($14 | 0);
 }
 $$sum$i1 = $10 + 72 | 0;
 HEAP32[41224 + $$sum$i1 >> 2] = 0;
 $$sum1$i2 = $10 + 76 | 0;
 HEAP32[41224 + $$sum1$i2 >> 2] = -1;
 $18 = HEAP32[_stderr >> 2] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(42e3, $18, 41920 | 0);
 HEAP32[10328] = 43172;
 HEAP32[10329] = 43192;
 __THREW__ = 0;
 invoke_vii(41, 41312 + $10 | 0, 42e3);
 $20 = __THREW__;
 __THREW__ = 0;
 if ($20 & 1) {
  $22 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(41316 | 0);
  ___resumeException($22 | 0);
 }
 HEAP32[41312 + $$sum$i1 >> 2] = 0;
 HEAP32[41312 + $$sum1$i2 >> 2] = -1;
 $30 = HEAP32[(HEAP32[(HEAP32[10328] | 0) + -12 >> 2] | 0) + 41336 >> 2] | 0;
 HEAP32[10350] = 43172;
 HEAP32[10351] = 43192;
 __THREW__ = 0;
 invoke_vii(41, 41400 + $10 | 0, $30 | 0);
 $32 = __THREW__;
 __THREW__ = 0;
 if ($32 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(41404 | 0);
  ___resumeException($34 | 0);
 }
 HEAP32[41400 + $$sum$i1 >> 2] = 0;
 HEAP32[41400 + $$sum1$i2 >> 2] = -1;
 HEAP32[(HEAP32[(HEAP32[10284] | 0) + -12 >> 2] | 0) + 41208 >> 2] = 41224;
 $45 = (HEAP32[(HEAP32[10328] | 0) + -12 >> 2] | 0) + 41316 | 0;
 HEAP32[$45 >> 2] = HEAP32[$45 >> 2] | 8192;
 HEAP32[(HEAP32[(HEAP32[10328] | 0) + -12 >> 2] | 0) + 41384 >> 2] = 41224;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(42048, $0, 41928 | 0);
 HEAP32[10372] = 43132;
 HEAP32[10374] = 43152;
 HEAP32[10373] = 0;
 $52 = HEAP32[10780] | 0;
 __THREW__ = 0;
 invoke_vii(41, 41488 + $52 | 0, 42048);
 $54 = __THREW__;
 __THREW__ = 0;
 if ($54 & 1) {
  $56 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(41496 | 0);
  ___resumeException($56 | 0);
 }
 HEAP32[$52 + 41560 >> 2] = 0;
 HEAP32[$52 + 41564 >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(42104, $9, 41936 | 0);
 HEAP32[10394] = 43212;
 HEAP32[10395] = 43232;
 $60 = HEAP32[10800] | 0;
 __THREW__ = 0;
 invoke_vii(41, 41576 + $60 | 0, 42104);
 $62 = __THREW__;
 __THREW__ = 0;
 if ($62 & 1) {
  $64 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(41580 | 0);
  ___resumeException($64 | 0);
 }
 $$sum$i11 = $60 + 72 | 0;
 HEAP32[41576 + $$sum$i11 >> 2] = 0;
 $$sum1$i12 = $60 + 76 | 0;
 HEAP32[41576 + $$sum1$i12 >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(42152, $18, 41944 | 0);
 HEAP32[10416] = 43212;
 HEAP32[10417] = 43232;
 __THREW__ = 0;
 invoke_vii(41, 41664 + $60 | 0, 42152);
 $69 = __THREW__;
 __THREW__ = 0;
 if ($69 & 1) {
  $71 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(41668 | 0);
  ___resumeException($71 | 0);
 }
 HEAP32[41664 + $$sum$i11 >> 2] = 0;
 HEAP32[41664 + $$sum1$i12 >> 2] = -1;
 $79 = HEAP32[(HEAP32[(HEAP32[10416] | 0) + -12 >> 2] | 0) + 41688 >> 2] | 0;
 HEAP32[10438] = 43212;
 HEAP32[10439] = 43232;
 __THREW__ = 0;
 invoke_vii(41, 41752 + $60 | 0, $79 | 0);
 $81 = __THREW__;
 __THREW__ = 0;
 if ($81 & 1) {
  $83 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(41756 | 0);
  ___resumeException($83 | 0);
 } else {
  HEAP32[41752 + $$sum$i11 >> 2] = 0;
  HEAP32[41752 + $$sum1$i12 >> 2] = -1;
  HEAP32[(HEAP32[(HEAP32[10372] | 0) + -12 >> 2] | 0) + 41560 >> 2] = 41576;
  $94 = (HEAP32[(HEAP32[10416] | 0) + -12 >> 2] | 0) + 41668 | 0;
  HEAP32[$94 >> 2] = HEAP32[$94 >> 2] | 8192;
  HEAP32[(HEAP32[(HEAP32[10416] | 0) + -12 >> 2] | 0) + 41736 >> 2] = 41576;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$pre = 0, $103 = 0, $106 = 0, $127 = 0, $132 = 0, $134 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $23 = 0, $35 = 0, $41 = 0, $50 = 0, $52 = 0, $59 = 0, $68 = 0, $78 = 0, $80 = 0, $82 = 0, $88 = 0, $91 = 0, $97 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre = HEAP32[$frm_nxt >> 2] | 0;
 if (!($mode & 4)) $15 = $$pre; else if (($frm_end - $$pre | 0) > 2) if ((HEAP8[$$pre >> 0] | 0) == -17) if ((HEAP8[$$pre + 1 >> 0] | 0) == -69) if ((HEAP8[$$pre + 2 >> 0] | 0) == -65) {
  $14 = $$pre + 3 | 0;
  HEAP32[$frm_nxt >> 2] = $14;
  $15 = $14;
 } else $15 = $$pre; else $15 = $$pre; else $15 = $$pre; else $15 = $$pre;
 L8 : do if ($15 >>> 0 < $frm_end >>> 0) {
  $17 = $frm_end;
  $18 = $to_end;
  $19 = HEAP32[$to_nxt >> 2] | 0;
  $22 = $15;
  L10 : while (1) {
   if ($19 >>> 0 >= $to_end >>> 0) {
    $134 = $22;
    break L8;
   }
   $21 = HEAP8[$22 >> 0] | 0;
   $23 = $21 & 255;
   if ($23 >>> 0 > $Maxcode >>> 0) {
    $$0 = 2;
    label = 41;
    break;
   }
   do if ($21 << 24 >> 24 > -1) {
    HEAP16[$19 >> 1] = $21 & 255;
    HEAP32[$frm_nxt >> 2] = $22 + 1;
   } else {
    if (($21 & 255) < 194) {
     $$0 = 2;
     label = 41;
     break L10;
    }
    if (($21 & 255) < 224) {
     if (($17 - $22 | 0) < 2) {
      $$0 = 1;
      label = 41;
      break L10;
     }
     $35 = HEAPU8[$22 + 1 >> 0] | 0;
     if (($35 & 192 | 0) != 128) {
      $$0 = 2;
      label = 41;
      break L10;
     }
     $41 = $35 & 63 | $23 << 6 & 1984;
     if ($41 >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      label = 41;
      break L10;
     }
     HEAP16[$19 >> 1] = $41;
     HEAP32[$frm_nxt >> 2] = $22 + 2;
     break;
    }
    if (($21 & 255) < 240) {
     if (($17 - $22 | 0) < 3) {
      $$0 = 1;
      label = 41;
      break L10;
     }
     $50 = HEAP8[$22 + 1 >> 0] | 0;
     $52 = HEAP8[$22 + 2 >> 0] | 0;
     if (($23 | 0) == 237) {
      if (($50 & -32) << 24 >> 24 != -128) {
       $$0 = 2;
       label = 41;
       break L10;
      }
     } else if (($23 | 0) == 224) {
      if (($50 & -32) << 24 >> 24 != -96) {
       $$0 = 2;
       label = 41;
       break L10;
      }
     } else if (($50 & -64) << 24 >> 24 != -128) {
      $$0 = 2;
      label = 41;
      break L10;
     }
     $59 = $52 & 255;
     if (($59 & 192 | 0) != 128) {
      $$0 = 2;
      label = 41;
      break L10;
     }
     $68 = ($50 & 255) << 6 & 4032 | $23 << 12 | $59 & 63;
     if (($68 & 65535) >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      label = 41;
      break L10;
     }
     HEAP16[$19 >> 1] = $68;
     HEAP32[$frm_nxt >> 2] = $22 + 3;
     break;
    }
    if (($21 & 255) >= 245) {
     $$0 = 2;
     label = 41;
     break L10;
    }
    if (($17 - $22 | 0) < 4) {
     $$0 = 1;
     label = 41;
     break L10;
    }
    $78 = HEAP8[$22 + 1 >> 0] | 0;
    $80 = HEAP8[$22 + 2 >> 0] | 0;
    $82 = HEAP8[$22 + 3 >> 0] | 0;
    if (($23 | 0) == 240) {
     if (($78 + 112 << 24 >> 24 & 255) >= 48) {
      $$0 = 2;
      label = 41;
      break L10;
     }
    } else if (($23 | 0) == 244) {
     if (($78 & -16) << 24 >> 24 != -128) {
      $$0 = 2;
      label = 41;
      break L10;
     }
    } else if (($78 & -64) << 24 >> 24 != -128) {
     $$0 = 2;
     label = 41;
     break L10;
    }
    $88 = $80 & 255;
    if (($88 & 192 | 0) != 128) {
     $$0 = 2;
     label = 41;
     break L10;
    }
    $91 = $82 & 255;
    if (($91 & 192 | 0) != 128) {
     $$0 = 2;
     label = 41;
     break L10;
    }
    if (($18 - $19 | 0) < 4) {
     $$0 = 1;
     label = 41;
     break L10;
    }
    $97 = $23 & 7;
    $99 = $78 & 255;
    $103 = $88 << 6;
    $106 = $91 & 63;
    if (($99 << 12 & 258048 | $97 << 18 | $103 & 4032 | $106) >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     label = 41;
     break L10;
    }
    HEAP16[$19 >> 1] = $99 << 2 & 60 | $88 >>> 4 & 3 | (($99 >>> 4 & 3 | $97 << 2) << 6) + 16320 | 55296;
    $127 = $19 + 2 | 0;
    HEAP32[$to_nxt >> 2] = $127;
    HEAP16[$127 >> 1] = $106 | $103 & 960 | 56320;
    HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 4;
   } while (0);
   $19 = (HEAP32[$to_nxt >> 2] | 0) + 2 | 0;
   HEAP32[$to_nxt >> 2] = $19;
   $132 = HEAP32[$frm_nxt >> 2] | 0;
   if ($132 >>> 0 >= $frm_end >>> 0) {
    $134 = $132;
    break L8;
   } else $22 = $132;
  }
  if ((label | 0) == 41) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else $134 = $15; while (0);
 $$0 = $134 >>> 0 < $frm_end >>> 0 & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $19 = 0, $22 = 0, $25 = 0, $28 = 0, $30 = 0, $33 = 0, $34 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $5 = 0, $51 = 0, $54 = 0, $56 = 0, $59 = 0, $60 = 0, $__nd$0$in$i = 0, $__nd$0$in$i5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 if (($1 | 0) != ($0 | 0)) {
  $4 = HEAP32[$__v >> 2] | 0;
  $5 = HEAP32[$1 + 16 >> 2] | 0;
  if ($4 >>> 0 >= $5 >>> 0) {
   if ($5 >>> 0 >= $4 >>> 0) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $__parent;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $37 = $1 + 4 | 0;
   $38 = HEAP32[$37 >> 2] | 0;
   $39 = ($38 | 0) == 0;
   if ($39) {
    $$0$i$i$i$i$i = $1;
    while (1) {
     $43 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$43 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $43;
      break;
     } else $$0$i$i$i$i$i = $43;
    }
   } else {
    $$0$i$i$i$i$i$i = $38;
    while (1) {
     $40 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$40) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $40;
    }
   }
   if (($$01$i$i$i$i$i | 0) != ($0 | 0)) if ($4 >>> 0 >= (HEAP32[$$01$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
    $51 = HEAP32[$this + 4 >> 2] | 0;
    if (!$51) {
     HEAP32[$__parent >> 2] = $0;
     $$0 = $0;
     STACKTOP = sp;
     return $$0 | 0;
    } else $__nd$0$in$i = $51;
    while (1) {
     $54 = HEAP32[$__nd$0$in$i + 16 >> 2] | 0;
     if ($4 >>> 0 < $54 >>> 0) {
      $56 = HEAP32[$__nd$0$in$i >> 2] | 0;
      if (!$56) {
       label = 34;
       break;
      } else {
       $__nd$0$in$i = $56;
       continue;
      }
     }
     if ($54 >>> 0 >= $4 >>> 0) {
      label = 38;
      break;
     }
     $59 = $__nd$0$in$i + 4 | 0;
     $60 = HEAP32[$59 >> 2] | 0;
     if (!$60) {
      label = 37;
      break;
     } else $__nd$0$in$i = $60;
    }
    if ((label | 0) == 34) {
     HEAP32[$__parent >> 2] = $__nd$0$in$i;
     $$0 = $__nd$0$in$i;
     STACKTOP = sp;
     return $$0 | 0;
    } else if ((label | 0) == 37) {
     HEAP32[$__parent >> 2] = $__nd$0$in$i;
     $$0 = $59;
     STACKTOP = sp;
     return $$0 | 0;
    } else if ((label | 0) == 38) {
     HEAP32[$__parent >> 2] = $__nd$0$in$i;
     $$0 = $__parent;
     STACKTOP = sp;
     return $$0 | 0;
    }
   }
   if ($39) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $37;
    STACKTOP = sp;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
    $$0 = $$01$i$i$i$i$i;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 }
 $$pre = HEAP32[$1 >> 2] | 0;
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $22 = $1; else {
  if (!$$pre) {
   $$0$i$i = $1;
   while (1) {
    $14 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$14 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $14; else {
     $$01$i$i = $14;
     break;
    }
   }
  } else {
   $$0$i$i$i = $$pre;
   while (1) {
    $11 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$11) {
     $$01$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $11;
   }
  }
  $19 = HEAP32[$__v >> 2] | 0;
  if ((HEAP32[$$01$i$i + 16 >> 2] | 0) >>> 0 < $19 >>> 0) $22 = $$01$i$i; else {
   $25 = HEAP32[$this + 4 >> 2] | 0;
   if (!$25) {
    HEAP32[$__parent >> 2] = $0;
    $$0 = $0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $__nd$0$in$i5 = $25;
   while (1) {
    $28 = HEAP32[$__nd$0$in$i5 + 16 >> 2] | 0;
    if ($19 >>> 0 < $28 >>> 0) {
     $30 = HEAP32[$__nd$0$in$i5 >> 2] | 0;
     if (!$30) {
      label = 15;
      break;
     } else {
      $__nd$0$in$i5 = $30;
      continue;
     }
    }
    if ($28 >>> 0 >= $19 >>> 0) {
     label = 19;
     break;
    }
    $33 = $__nd$0$in$i5 + 4 | 0;
    $34 = HEAP32[$33 >> 2] | 0;
    if (!$34) {
     label = 18;
     break;
    } else $__nd$0$in$i5 = $34;
   }
   if ((label | 0) == 15) {
    HEAP32[$__parent >> 2] = $__nd$0$in$i5;
    $$0 = $__nd$0$in$i5;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 18) {
    HEAP32[$__parent >> 2] = $__nd$0$in$i5;
    $$0 = $33;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 19) {
    HEAP32[$__parent >> 2] = $__nd$0$in$i5;
    $$0 = $__parent;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 }
 if (!$$pre) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$__parent >> 2] = $22;
  $$0 = $22 + 4 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $17 = 0, $18 = 0, $19 = 0, $30 = 0, $40 = 0, $44 = 0, $46 = 0, $59 = 0, $73 = 0, $77 = 0, $79 = 0, $81 = 0, $93 = 0, $96 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$115 = 0, $frm_nxt$2 = 0, $nchar32_t$014 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($frm_end - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 L7 : do if ($frm_nxt$1$ph >>> 0 < $frm_end >>> 0 & ($mx | 0) != 0) {
  $17 = $frm_end;
  $frm_nxt$115 = $frm_nxt$1$ph;
  $nchar32_t$014 = 0;
  L9 : while (1) {
   $18 = HEAP8[$frm_nxt$115 >> 0] | 0;
   $19 = $18 & 255;
   do if ($18 << 24 >> 24 > -1) {
    if ($19 >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$115;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$115 + 1 | 0;
   } else {
    if (($18 & 255) < 194) {
     $frm_nxt$1$lcssa = $frm_nxt$115;
     break L7;
    }
    if (($18 & 255) < 224) {
     if (($17 - $frm_nxt$115 | 0) < 2) {
      $frm_nxt$1$lcssa = $frm_nxt$115;
      break L7;
     }
     $30 = HEAPU8[$frm_nxt$115 + 1 >> 0] | 0;
     if (($30 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$115;
      break L7;
     }
     if (($30 & 63 | $19 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$115;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$115 + 2 | 0;
     break;
    }
    if (($18 & 255) < 240) {
     $40 = $frm_nxt$115;
     if (($17 - $40 | 0) < 3) {
      $frm_nxt$1$lcssa = $frm_nxt$115;
      break L7;
     }
     $44 = HEAP8[$frm_nxt$115 + 1 >> 0] | 0;
     $46 = HEAP8[$frm_nxt$115 + 2 >> 0] | 0;
     if (($19 | 0) == 224) {
      if (($44 & -32) << 24 >> 24 != -96) {
       label = 21;
       break L9;
      }
     } else if (($19 | 0) == 237) {
      if (($44 & -32) << 24 >> 24 != -128) {
       label = 23;
       break L9;
      }
     } else if (($44 & -64) << 24 >> 24 != -128) {
      label = 25;
      break L9;
     }
     $59 = $46 & 255;
     if (($59 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$115;
      break L7;
     }
     if ((($44 & 255) << 6 & 4032 | $19 << 12 & 61440 | $59 & 63) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$115;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$115 + 3 | 0;
     break;
    }
    if (($18 & 255) >= 245) {
     $frm_nxt$1$lcssa = $frm_nxt$115;
     break L7;
    }
    $73 = $frm_nxt$115;
    if (($17 - $73 | 0) < 4) {
     $frm_nxt$1$lcssa = $frm_nxt$115;
     break L7;
    }
    $77 = HEAP8[$frm_nxt$115 + 1 >> 0] | 0;
    $79 = HEAP8[$frm_nxt$115 + 2 >> 0] | 0;
    $81 = HEAP8[$frm_nxt$115 + 3 >> 0] | 0;
    if (($19 | 0) == 240) {
     if (($77 + 112 << 24 >> 24 & 255) >= 48) {
      label = 33;
      break L9;
     }
    } else if (($19 | 0) == 244) {
     if (($77 & -16) << 24 >> 24 != -128) {
      label = 35;
      break L9;
     }
    } else if (($77 & -64) << 24 >> 24 != -128) {
     label = 37;
     break L9;
    }
    $93 = $79 & 255;
    if (($93 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$115;
     break L7;
    }
    $96 = $81 & 255;
    if (($96 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$115;
     break L7;
    }
    if ((($77 & 255) << 12 & 258048 | $19 << 18 & 1835008 | $93 << 6 & 4032 | $96 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$115;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$115 + 4 | 0;
   } while (0);
   $nchar32_t$014 = $nchar32_t$014 + 1 | 0;
   if (!($frm_nxt$2 >>> 0 < $frm_end >>> 0 & $nchar32_t$014 >>> 0 < $mx >>> 0)) {
    $frm_nxt$1$lcssa = $frm_nxt$2;
    break L7;
   } else $frm_nxt$115 = $frm_nxt$2;
  }
  if ((label | 0) == 21) {
   $$0 = $40 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 23) {
   $$0 = $40 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 25) {
   $$0 = $40 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 33) {
   $$0 = $73 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 35) {
   $$0 = $73 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 37) {
   $$0 = $73 - $frm | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else $frm_nxt$1$lcssa = $frm_nxt$1$ph; while (0);
 $$0 = $frm_nxt$1$lcssa - $frm | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0$i$i$i = 0, $$idx1$val$i$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $21 = 0, $29 = 0, $3 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $47 = 0, $48 = 0, $53 = 0, $54 = 0, $55 = 0, $62 = 0, $64 = 0, $65 = 0, $75 = 0, $82 = 0, $__v$i$i = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v$i$i = sp;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $this + 20 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($2 >>> 0 < $4 >>> 0) {
  if (!$2) $29 = 0; else {
   HEAP32[$2 >> 2] = $args;
   HEAP32[$2 + 4 >> 2] = $args1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($2 + 8 | 0, $args1 + 4 | 0);
   $10 = $2 + 20 | 0;
   $11 = $args1 + 16 | 0;
   HEAP32[$10 + 0 >> 2] = HEAP32[$11 + 0 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   HEAP32[$10 + 12 >> 2] = HEAP32[$11 + 12 >> 2];
   HEAP32[$2 + 72 >> 2] = 0;
   HEAP32[$2 + 80 >> 2] = 0;
   HEAP32[$2 + 84 >> 2] = 0;
   HEAP32[$2 + 76 >> 2] = $2 + 80;
   HEAP32[$2 + 96 >> 2] = 0;
   HEAP32[$2 + 100 >> 2] = 0;
   HEAP32[$2 + 92 >> 2] = $2 + 96;
   $21 = $2 + 104 | 0;
   HEAP32[$2 + 132 >> 2] = 0;
   HEAP32[$2 + 136 >> 2] = 0;
   HEAP32[$21 + 0 >> 2] = 0;
   HEAP32[$21 + 4 >> 2] = 0;
   HEAP32[$21 + 8 >> 2] = 0;
   HEAP32[$21 + 12 >> 2] = 0;
   HEAP32[$21 + 16 >> 2] = 0;
   HEAP32[$21 + 20 >> 2] = 0;
   HEAP32[$2 + 128 >> 2] = $2 + 132;
   HEAP32[$2 + 40 >> 2] = 0;
   HEAP32[$2 + 56 >> 2] = 0;
   $29 = HEAP32[$1 >> 2] | 0;
  }
  HEAP32[$1 >> 2] = $29 + 144;
  STACKTOP = sp;
  return;
 }
 $this$idx2$val$i$i = HEAP32[$0 >> 2] | 0;
 $35 = (($2 - $this$idx2$val$i$i | 0) / 144 | 0) + 1 | 0;
 if ($35 >>> 0 > 29826161) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $$idx1$val$i$i$i$i = HEAP32[$3 >> 2] | 0;
  $this$idx$val$i$i = HEAP32[$0 >> 2] | 0;
 } else {
  $$idx1$val$i$i$i$i = $4;
  $this$idx$val$i$i = $this$idx2$val$i$i;
 }
 $38 = $this$idx$val$i$i;
 $40 = ($$idx1$val$i$i$i$i - $38 | 0) / 144 | 0;
 if ($40 >>> 0 < 14913080) {
  $42 = $40 << 1;
  $$0$i$i$i = $42 >>> 0 < $35 >>> 0 ? $35 : $42;
 } else $$0$i$i$i = 29826161;
 $47 = ((HEAP32[$1 >> 2] | 0) - $38 | 0) / 144 | 0;
 $48 = $__v$i$i + 12 | 0;
 HEAP32[$48 >> 2] = 0;
 HEAP32[$__v$i$i + 16 >> 2] = $this + 20;
 if (!$$0$i$i$i) $53 = 0; else $53 = __Znwj($$0$i$i$i * 144 | 0) | 0;
 HEAP32[$__v$i$i >> 2] = $53;
 $54 = $53 + ($47 * 144 | 0) | 0;
 $55 = $__v$i$i + 8 | 0;
 HEAP32[$55 >> 2] = $54;
 HEAP32[$__v$i$i + 4 >> 2] = $54;
 HEAP32[$48 >> 2] = $53 + ($$0$i$i$i * 144 | 0);
 do if ($54) {
  HEAP32[$54 >> 2] = $args;
  HEAP32[$53 + ($47 * 144 | 0) + 4 >> 2] = $args1;
  __THREW__ = 0;
  invoke_vii(40, $53 + ($47 * 144 | 0) + 8 | 0, $args1 + 4 | 0);
  $62 = __THREW__;
  __THREW__ = 0;
  if ($62 & 1) {
   $82 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
   ___resumeException($82 | 0);
  } else {
   $64 = $53 + ($47 * 144 | 0) + 20 | 0;
   $65 = $args1 + 16 | 0;
   HEAP32[$64 + 0 >> 2] = HEAP32[$65 + 0 >> 2];
   HEAP32[$64 + 4 >> 2] = HEAP32[$65 + 4 >> 2];
   HEAP32[$64 + 8 >> 2] = HEAP32[$65 + 8 >> 2];
   HEAP32[$64 + 12 >> 2] = HEAP32[$65 + 12 >> 2];
   HEAP32[$53 + ($47 * 144 | 0) + 72 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 80 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 84 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 76 >> 2] = $53 + ($47 * 144 | 0) + 80;
   HEAP32[$53 + ($47 * 144 | 0) + 96 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 100 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 92 >> 2] = $53 + ($47 * 144 | 0) + 96;
   $75 = $53 + ($47 * 144 | 0) + 104 | 0;
   HEAP32[$53 + ($47 * 144 | 0) + 132 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 136 >> 2] = 0;
   HEAP32[$75 + 0 >> 2] = 0;
   HEAP32[$75 + 4 >> 2] = 0;
   HEAP32[$75 + 8 >> 2] = 0;
   HEAP32[$75 + 12 >> 2] = 0;
   HEAP32[$75 + 16 >> 2] = 0;
   HEAP32[$75 + 20 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 128 >> 2] = $53 + ($47 * 144 | 0) + 132;
   HEAP32[$53 + ($47 * 144 | 0) + 40 >> 2] = 0;
   HEAP32[$53 + ($47 * 144 | 0) + 56 >> 2] = 0;
   break;
  }
 } while (0);
 HEAP32[$55 >> 2] = $53 + (($47 + 1 | 0) * 144 | 0);
 __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $__v$i$i);
 __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
 STACKTOP = sp;
 return;
}

function __Z18jsonnet_vm_executeP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b($agg$result, $alloc, $ast, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx, $string_output) {
 $agg$result = $agg$result | 0;
 $alloc = $alloc | 0;
 $ast = $ast | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $ctx = $ctx | 0;
 $string_output = $string_output | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, $vm = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vm = sp;
 $0 = sp + 200 | 0;
 $1 = sp + 188 | 0;
 $2 = sp + 160 | 0;
 $3 = sp + 148 | 0;
 $4 = sp + 136 | 0;
 __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEjddPFPcPvPKcSN_PiESL_($vm, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx);
 __THREW__ = 0;
 invoke_vii(58, $vm | 0, $ast | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 do if (!($5 & 1)) {
  if ($string_output) {
   __THREW__ = 0;
   invoke_viii(3, $1 | 0, 37128, 20);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
   __THREW__ = 0;
   invoke_vii(40, $0 | 0, $1 | 0);
   $9 = __THREW__;
   __THREW__ = 0;
   do if ($9 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $$0 = tempRet0;
    $$01 = $16;
   } else {
    $11 = $0 + 12 | 0;
    HEAP32[$11 + 0 >> 2] = 0;
    HEAP32[$11 + 4 >> 2] = 0;
    HEAP32[$11 + 8 >> 2] = 0;
    HEAP32[$11 + 12 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(11, $agg$result | 0, $vm | 0, $0 | 0);
    $12 = __THREW__;
    __THREW__ = 0;
    if ($12 & 1) {
     $18 = ___cxa_find_matching_catch() | 0;
     $19 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
     $$0 = $19;
     $$01 = $18;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
    __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
    STACKTOP = sp;
    return;
   } while (0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
   $$3 = $$0;
   $$34 = $$01;
   __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
   ___resumeException($$34 | 0);
  }
  __THREW__ = 0;
  invoke_viii(3, $3 | 0, 37128, 20);
  $20 = __THREW__;
  __THREW__ = 0;
  if (!($20 & 1)) {
   __THREW__ = 0;
   invoke_vii(40, $2 | 0, $3 | 0);
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $29 = ___cxa_find_matching_catch() | 0;
    $$2 = tempRet0;
    $$23 = $29;
   } else {
    $24 = $2 + 12 | 0;
    HEAP32[$24 + 0 >> 2] = 0;
    HEAP32[$24 + 4 >> 2] = 0;
    HEAP32[$24 + 8 >> 2] = 0;
    HEAP32[$24 + 12 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(3, $4 | 0, 37152, 0);
    $25 = __THREW__;
    __THREW__ = 0;
    do if ($25 & 1) {
     $31 = ___cxa_find_matching_catch() | 0;
     $$1 = tempRet0;
     $$12 = $31;
    } else {
     __THREW__ = 0;
     invoke_viiiii(6, $agg$result | 0, $vm | 0, $2 | 0, 1, $4 | 0);
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) {
      $33 = ___cxa_find_matching_catch() | 0;
      $34 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
      $$1 = $34;
      $$12 = $33;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
    $$2 = $$1;
    $$23 = $$12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($3);
   $$3 = $$2;
   $$34 = $$23;
   __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
   ___resumeException($$34 | 0);
  }
 } while (0);
 $14 = ___cxa_find_matching_catch() | 0;
 $$3 = tempRet0;
 $$34 = $14;
 __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
 ___resumeException($$34 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, $curr, $start_from, $counter, $self) {
 $f = $f | 0;
 $root = $root | 0;
 $curr = $curr | 0;
 $start_from = $start_from | 0;
 $counter = $counter | 0;
 $self = $self | 0;
 var $$0 = 0, $$0$ph5$i$i$i = 0, $$0$ph5$i$i$i10 = 0, $$0$ph7$i$i$i = 0, $$0$ph7$i$i$i2 = 0, $$01$ph6$i$in$i$i = 0, $$01$ph6$i$in$i$i3 = 0, $$013$i$in$i$i = 0, $$013$i$in$i$i5 = 0, $0 = 0, $10 = 0, $12 = 0, $15 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $32 = 0, $36 = 0, $38 = 0, $39 = 0, $45 = 0, $50 = 0, $6 = 0, $counter2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $counter2 = sp;
 $0 = ($curr | 0) == 0;
 do if ($0) {
  $50 = HEAP32[$counter >> 2] | 0;
  label = 28;
 } else {
  $2 = ___dynamic_cast($curr, 37456, 37792, 0) | 0;
  if ($2) {
   $6 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, HEAP32[$2 + 12 >> 2] | 0, $start_from, $counter, $self) | 0;
   if ($6) {
    $$0 = $6;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $10 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, HEAP32[$2 + 8 >> 2] | 0, $start_from, $counter, $self) | 0;
   if (!$10) break; else $$0 = $10;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $12 = ___dynamic_cast($curr, 37456, 37848, 0) | 0;
  if ($12) {
   HEAP32[$counter2 >> 2] = 0;
   $15 = HEAP32[$12 + 8 >> 2] | 0;
   $18 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $15, $15, HEAP32[$12 + 12 >> 2] | 0, $counter2, $self) | 0;
   if (!$18) break;
   HEAP32[$counter >> 2] = HEAP32[$counter2 >> 2];
   $$0 = $18;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $21 = HEAP32[$counter >> 2] | 0;
  if ($21 >>> 0 < $start_from >>> 0 | $0) {
   $50 = $21;
   label = 28;
  } else {
   $23 = ___dynamic_cast($curr, 37456, 37528, 0) | 0;
   if ($23) {
    $25 = $23 + 24 | 0;
    $26 = HEAP32[$25 >> 2] | 0;
    if (!$26) {
     $50 = $21;
     label = 28;
     break;
    } else {
     $$0$ph7$i$i$i2 = $25;
     $$01$ph6$i$in$i$i3 = $26;
    }
    L18 : while (1) {
     $$013$i$in$i$i5 = $$01$ph6$i$in$i$i3;
     while (1) {
      if ((HEAP32[$$013$i$in$i$i5 + 16 >> 2] | 0) >>> 0 >= $f >>> 0) break;
      $32 = HEAP32[$$013$i$in$i$i5 + 4 >> 2] | 0;
      if (!$32) {
       $$0$ph5$i$i$i10 = $$0$ph7$i$i$i2;
       break L18;
      } else $$013$i$in$i$i5 = $32;
     }
     $$01$ph6$i$in$i$i3 = HEAP32[$$013$i$in$i$i5 >> 2] | 0;
     if (!$$01$ph6$i$in$i$i3) {
      $$0$ph5$i$i$i10 = $$013$i$in$i$i5;
      break;
     } else $$0$ph7$i$i$i2 = $$013$i$in$i$i5;
    }
    if (($$0$ph5$i$i$i10 | 0) == ($25 | 0)) {
     $50 = $21;
     label = 28;
     break;
    }
    if ((HEAP32[$$0$ph5$i$i$i10 + 16 >> 2] | 0) >>> 0 > $f >>> 0) {
     $50 = $21;
     label = 28;
     break;
    }
    HEAP32[$self >> 2] = $root;
    $$0 = $23;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $36 = ___dynamic_cast($curr, 37456, 37912, 0) | 0;
   if (!$36) {
    $50 = $21;
    label = 28;
   } else {
    $38 = $36 + 32 | 0;
    $39 = HEAP32[$38 >> 2] | 0;
    if (!$39) {
     $50 = $21;
     label = 28;
    } else {
     $$0$ph7$i$i$i = $38;
     $$01$ph6$i$in$i$i = $39;
     L30 : while (1) {
      $$013$i$in$i$i = $$01$ph6$i$in$i$i;
      while (1) {
       if ((HEAP32[$$013$i$in$i$i + 16 >> 2] | 0) >>> 0 >= $f >>> 0) break;
       $45 = HEAP32[$$013$i$in$i$i + 4 >> 2] | 0;
       if (!$45) {
        $$0$ph5$i$i$i = $$0$ph7$i$i$i;
        break L30;
       } else $$013$i$in$i$i = $45;
      }
      $$01$ph6$i$in$i$i = HEAP32[$$013$i$in$i$i >> 2] | 0;
      if (!$$01$ph6$i$in$i$i) {
       $$0$ph5$i$i$i = $$013$i$in$i$i;
       break;
      } else $$0$ph7$i$i$i = $$013$i$in$i$i;
     }
     if (($$0$ph5$i$i$i | 0) == ($38 | 0)) {
      $50 = $21;
      label = 28;
     } else if ((HEAP32[$$0$ph5$i$i$i + 16 >> 2] | 0) >>> 0 > $f >>> 0) {
      $50 = $21;
      label = 28;
     } else {
      HEAP32[$self >> 2] = $root;
      $$0 = $36;
      STACKTOP = sp;
      return $$0 | 0;
     }
    }
   }
  }
 } while (0);
 if ((label | 0) == 28) HEAP32[$counter >> 2] = $50 + 1;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $105 = 0, $11 = 0, $110 = 0, $113 = 0, $12 = 0, $125 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $27 = 0, $38 = 0, $41 = 0, $53 = 0, $58 = 0, $64 = 0, $66 = 0, $7 = 0, $73 = 0, $83 = 0, $87 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 do if ($mode & 2) if (($to_end - $to | 0) < 3) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $7 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $7 + 1;
  HEAP8[$7 >> 0] = -69;
  $9 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $9 + 1;
  HEAP8[$9 >> 0] = -65;
  break;
 } while (0);
 $11 = $frm_end;
 $12 = HEAP32[$frm_nxt >> 2] | 0;
 if ($12 >>> 0 >= $frm_end >>> 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $14 = $to_end;
 $16 = $12;
 L10 : while (1) {
  $15 = HEAP16[$16 >> 1] | 0;
  $17 = $15 & 65535;
  if ($17 >>> 0 > $Maxcode >>> 0) {
   $$0 = 2;
   label = 26;
   break;
  }
  do if (($15 & 65535) < 128) {
   $20 = HEAP32[$to_nxt >> 2] | 0;
   if (($14 - $20 | 0) < 1) {
    $$0 = 1;
    label = 26;
    break L10;
   }
   HEAP32[$to_nxt >> 2] = $20 + 1;
   HEAP8[$20 >> 0] = $15;
  } else {
   if (($15 & 65535) < 2048) {
    $27 = HEAP32[$to_nxt >> 2] | 0;
    if (($14 - $27 | 0) < 2) {
     $$0 = 1;
     label = 26;
     break L10;
    }
    HEAP32[$to_nxt >> 2] = $27 + 1;
    HEAP8[$27 >> 0] = $17 >>> 6 | 192;
    $38 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $38 + 1;
    HEAP8[$38 >> 0] = $17 & 63 | 128;
    break;
   }
   if (($15 & 65535) < 55296) {
    $41 = HEAP32[$to_nxt >> 2] | 0;
    if (($14 - $41 | 0) < 3) {
     $$0 = 1;
     label = 26;
     break L10;
    }
    HEAP32[$to_nxt >> 2] = $41 + 1;
    HEAP8[$41 >> 0] = $17 >>> 12 | 224;
    $53 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $53 + 1;
    HEAP8[$53 >> 0] = $17 >>> 6 & 63 | 128;
    $58 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $58 + 1;
    HEAP8[$58 >> 0] = $17 & 63 | 128;
    break;
   }
   if (($15 & 65535) >= 56320) {
    if (($15 & 65535) < 57344) {
     $$0 = 2;
     label = 26;
     break L10;
    }
    $113 = HEAP32[$to_nxt >> 2] | 0;
    if (($14 - $113 | 0) < 3) {
     $$0 = 1;
     label = 26;
     break L10;
    }
    HEAP32[$to_nxt >> 2] = $113 + 1;
    HEAP8[$113 >> 0] = $17 >>> 12 | 224;
    $125 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $125 + 1;
    HEAP8[$125 >> 0] = $17 >>> 6 & 63 | 128;
    $130 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $130 + 1;
    HEAP8[$130 >> 0] = $17 & 63 | 128;
    break;
   }
   if (($11 - $16 | 0) < 4) {
    $$0 = 1;
    label = 26;
    break L10;
   }
   $64 = $16 + 2 | 0;
   $66 = HEAPU16[$64 >> 1] | 0;
   if (($66 & 64512 | 0) != 56320) {
    $$0 = 2;
    label = 26;
    break L10;
   }
   if (($14 - (HEAP32[$to_nxt >> 2] | 0) | 0) < 4) {
    $$0 = 1;
    label = 26;
    break L10;
   }
   $73 = $17 & 960;
   if ((($73 << 10) + 65536 | $17 << 10 & 64512 | $66 & 1023) >>> 0 > $Maxcode >>> 0) {
    $$0 = 2;
    label = 26;
    break L10;
   }
   HEAP32[$frm_nxt >> 2] = $64;
   $83 = ($73 >>> 6) + 1 | 0;
   $87 = HEAP32[$to_nxt >> 2] | 0;
   HEAP32[$to_nxt >> 2] = $87 + 1;
   HEAP8[$87 >> 0] = $83 >>> 2 | 240;
   $96 = HEAP32[$to_nxt >> 2] | 0;
   HEAP32[$to_nxt >> 2] = $96 + 1;
   HEAP8[$96 >> 0] = $17 >>> 2 & 15 | $83 << 4 & 48 | 128;
   $105 = HEAP32[$to_nxt >> 2] | 0;
   HEAP32[$to_nxt >> 2] = $105 + 1;
   HEAP8[$105 >> 0] = $17 << 4 & 48 | $66 >>> 6 & 15 | 128;
   $110 = HEAP32[$to_nxt >> 2] | 0;
   HEAP32[$to_nxt >> 2] = $110 + 1;
   HEAP8[$110 >> 0] = $66 & 63 | 128;
  } while (0);
  $16 = (HEAP32[$frm_nxt >> 2] | 0) + 2 | 0;
  HEAP32[$frm_nxt >> 2] = $16;
  if ($16 >>> 0 >= $frm_end >>> 0) {
   $$0 = 0;
   label = 26;
   break;
  }
 }
 if ((label | 0) == 26) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $3 = 0, $30 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 60 | 0;
 $$byval_copy = sp + 56 | 0;
 $__lv = sp + 52 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 44 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $__names = sp + 8 | 0;
 $5 = sp;
 if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $12 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$1 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  FUNCTION_TABLE_viiiiiii[$12 & 63]($0, $this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv);
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  $16 = HEAP32[$__lv >> 2] | 0;
  if (($16 | 0) == 1) HEAP8[$__v >> 0] = 1; else if (!$16) HEAP8[$__v >> 0] = 0; else {
   HEAP8[$__v >> 0] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg$result >> 2] = $15;
  STACKTOP = sp;
  return;
 }
 __ZNKSt3__18ios_base6getlocEv($3, $__iob);
 __THREW__ = 0;
 $17 = invoke_iii(22, $3 | 0, 45792) | 0;
 $18 = __THREW__;
 __THREW__ = 0;
 if ($18 & 1) {
  $45 = ___cxa_find_matching_catch() | 0;
  $46 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
  $$0 = $45;
  $$01 = $46;
  ___resumeException($$0 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
 __ZNKSt3__18ios_base6getlocEv($4, $__iob);
 __THREW__ = 0;
 $21 = invoke_iii(22, $4 | 0, 45952) | 0;
 $22 = __THREW__;
 __THREW__ = 0;
 if ($22 & 1) {
  $48 = ___cxa_find_matching_catch() | 0;
  $49 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
  $$0 = $48;
  $$01 = $49;
  ___resumeException($$0 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
 __THREW__ = 0;
 invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $__names | 0, $21 | 0);
 $28 = __THREW__;
 __THREW__ = 0;
 if ($28 & 1) $$02 = $__names; else {
  $30 = $__names + 12 | 0;
  __THREW__ = 0;
  invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] | 0, $30 | 0, $21 | 0);
  $34 = __THREW__;
  __THREW__ = 0;
  if ($34 & 1) $$02 = $30; else {
   HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
   __THREW__ = 0;
   HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
   $38 = invoke_iiiiiiii(2, $__b | 0, $$byval_copy2 | 0, $__names | 0, $__names + 24 | 0, $17 | 0, $__err | 0, 1) | 0;
   $39 = __THREW__;
   __THREW__ = 0;
   if ($39 & 1) {
    $57 = ___cxa_find_matching_catch() | 0;
    $58 = tempRet0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__names + 12 | 0);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__names);
    $$0 = $57;
    $$01 = $58;
    ___resumeException($$0 | 0);
   } else {
    HEAP8[$__v >> 0] = ($38 | 0) == ($__names | 0) & 1;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__names + 12 | 0);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__names);
    STACKTOP = sp;
    return;
   }
  }
 }
 $51 = ___cxa_find_matching_catch() | 0;
 $52 = tempRet0;
 if (($__names | 0) == ($$02 | 0)) {
  $$0 = $51;
  $$01 = $52;
  ___resumeException($$0 | 0);
 } else $55 = $$02;
 do {
  $55 = $55 + -12 | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($55);
 } while (($55 | 0) != ($__names | 0));
 $$0 = $51;
 $$01 = $52;
 ___resumeException($$0 | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $28 = 0, $3 = 0, $30 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 60 | 0;
 $$byval_copy = sp + 56 | 0;
 $__lv = sp + 52 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 44 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $__names = sp + 8 | 0;
 $5 = sp;
 if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $12 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$1 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
  FUNCTION_TABLE_viiiiiii[$12 & 63]($0, $this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv);
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  $16 = HEAP32[$__lv >> 2] | 0;
  if (!$16) HEAP8[$__v >> 0] = 0; else if (($16 | 0) == 1) HEAP8[$__v >> 0] = 1; else {
   HEAP8[$__v >> 0] = 1;
   HEAP32[$__err >> 2] = 4;
  }
  HEAP32[$agg$result >> 2] = $15;
  STACKTOP = sp;
  return;
 }
 __ZNKSt3__18ios_base6getlocEv($3, $__iob);
 __THREW__ = 0;
 $17 = invoke_iii(22, $3 | 0, 45800) | 0;
 $18 = __THREW__;
 __THREW__ = 0;
 if ($18 & 1) {
  $45 = ___cxa_find_matching_catch() | 0;
  $46 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
  $$0 = $45;
  $$01 = $46;
  ___resumeException($$0 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$3 >> 2] | 0) | 0;
 __ZNKSt3__18ios_base6getlocEv($4, $__iob);
 __THREW__ = 0;
 $21 = invoke_iii(22, $4 | 0, 45944) | 0;
 $22 = __THREW__;
 __THREW__ = 0;
 if ($22 & 1) {
  $48 = ___cxa_find_matching_catch() | 0;
  $49 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
  $$0 = $48;
  $$01 = $49;
  ___resumeException($$0 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$4 >> 2] | 0) | 0;
 __THREW__ = 0;
 invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $__names | 0, $21 | 0);
 $28 = __THREW__;
 __THREW__ = 0;
 if ($28 & 1) $$02 = $__names; else {
  $30 = $__names + 12 | 0;
  __THREW__ = 0;
  invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] | 0, $30 | 0, $21 | 0);
  $34 = __THREW__;
  __THREW__ = 0;
  if ($34 & 1) $$02 = $30; else {
   HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
   __THREW__ = 0;
   HEAP32[$$byval_copy2 + 0 >> 2] = HEAP32[$5 + 0 >> 2];
   $38 = invoke_iiiiiiii(1, $__b | 0, $$byval_copy2 | 0, $__names | 0, $__names + 24 | 0, $17 | 0, $__err | 0, 1) | 0;
   $39 = __THREW__;
   __THREW__ = 0;
   if ($39 & 1) {
    $57 = ___cxa_find_matching_catch() | 0;
    $58 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__names + 12 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__names);
    $$0 = $57;
    $$01 = $58;
    ___resumeException($$0 | 0);
   } else {
    HEAP8[$__v >> 0] = ($38 | 0) == ($__names | 0) & 1;
    HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__names + 12 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__names);
    STACKTOP = sp;
    return;
   }
  }
 }
 $51 = ___cxa_find_matching_catch() | 0;
 $52 = tempRet0;
 if (($__names | 0) == ($$02 | 0)) {
  $$0 = $51;
  $$01 = $52;
  ___resumeException($$0 | 0);
 } else $55 = $$02;
 do {
  $55 = $55 + -12 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($55);
 } while (($55 | 0) != ($__names | 0));
 $$0 = $51;
 $$01 = $52;
 ___resumeException($$0 | 0);
}

function __ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i5 = 0, $$0$i6 = 0, $$01$i$i = 0, $$pre$i = 0, $$pre4 = 0, $0 = 0, $12 = 0, $13 = 0, $15 = 0, $2 = 0, $21 = 0, $23 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $49 = 0, $51 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $60 = 0, $63 = 0, $65 = 0, $7 = 0, $9 = 0, label = 0, sp = 0, $$01$i$i$looptemp = 0, $51$looptemp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = (((HEAP32[$0 >> 2] | 0) - $2 | 0) / 40 | 0) + 1 | 0;
 if ($7 >>> 0 > 107374182) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $15 = ((HEAP32[$9 >> 2] | 0) - $13 | 0) / 40 | 0;
 if ($15 >>> 0 < 53687091) {
  $21 = $15 << 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $27 = ((HEAP32[$0 >> 2] | 0) - $13 | 0) / 40 | 0;
  if (!$23) {
   $$0$i6 = 0;
   $32 = 0;
   $33 = $27;
  } else {
   $$0$i5 = $23;
   $65 = $27;
   label = 6;
  }
 } else {
  $$0$i5 = 107374182;
  $65 = ((HEAP32[$0 >> 2] | 0) - $13 | 0) / 40 | 0;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i6 = $$0$i5;
  $32 = __Znwj($$0$i5 * 40 | 0) | 0;
  $33 = $65;
 }
 $31 = $32 + ($33 * 40 | 0) | 0;
 $34 = $32 + ($$0$i6 * 40 | 0) | 0;
 if ($31) {
  HEAP32[$31 + 0 >> 2] = HEAP32[$__x + 0 >> 2];
  HEAP32[$31 + 4 >> 2] = HEAP32[$__x + 4 >> 2];
  HEAP32[$31 + 8 >> 2] = HEAP32[$__x + 8 >> 2];
  HEAP32[$__x + 0 >> 2] = 0;
  HEAP32[$__x + 4 >> 2] = 0;
  HEAP32[$__x + 8 >> 2] = 0;
  $36 = $32 + ($33 * 40 | 0) + 12 | 0;
  $37 = $__x + 12 | 0;
  HEAP32[$36 + 0 >> 2] = HEAP32[$37 + 0 >> 2];
  HEAP32[$36 + 4 >> 2] = HEAP32[$37 + 4 >> 2];
  HEAP32[$36 + 8 >> 2] = HEAP32[$37 + 8 >> 2];
  HEAP32[$36 + 12 >> 2] = HEAP32[$37 + 12 >> 2];
  $38 = $32 + ($33 * 40 | 0) + 28 | 0;
  $39 = $__x + 28 | 0;
  HEAP32[$38 + 0 >> 2] = HEAP32[$39 + 0 >> 2];
  HEAP32[$38 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
  HEAP32[$38 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
  HEAP32[$39 + 0 >> 2] = 0;
  HEAP32[$39 + 4 >> 2] = 0;
  HEAP32[$39 + 8 >> 2] = 0;
 }
 $40 = $32 + (($33 + 1 | 0) * 40 | 0) | 0;
 $41 = HEAP32[$this >> 2] | 0;
 $42 = HEAP32[$0 >> 2] | 0;
 if (($42 | 0) == ($41 | 0)) {
  HEAP32[$this >> 2] = $31;
  HEAP32[$0 >> 2] = $40;
  HEAP32[$9 >> 2] = $34;
  $63 = $41;
 } else {
  $49 = $33 + -1 - ((($42 + -40 - $41 | 0) >>> 0) / 40 | 0) | 0;
  $$01$i$i = $42;
  $51 = $31;
  do {
   $51$looptemp = $51;
   $51 = $51 + -40 | 0;
   $$01$i$i$looptemp = $$01$i$i;
   $$01$i$i = $$01$i$i + -40 | 0;
   HEAP32[$51 + 0 >> 2] = HEAP32[$$01$i$i + 0 >> 2];
   HEAP32[$51 + 4 >> 2] = HEAP32[$$01$i$i + 4 >> 2];
   HEAP32[$51 + 8 >> 2] = HEAP32[$$01$i$i + 8 >> 2];
   HEAP32[$$01$i$i + 0 >> 2] = 0;
   HEAP32[$$01$i$i + 4 >> 2] = 0;
   HEAP32[$$01$i$i + 8 >> 2] = 0;
   $53 = $51$looptemp + -28 | 0;
   $54 = $$01$i$i$looptemp + -28 | 0;
   HEAP32[$53 + 0 >> 2] = HEAP32[$54 + 0 >> 2];
   HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
   HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
   HEAP32[$53 + 12 >> 2] = HEAP32[$54 + 12 >> 2];
   $55 = $51$looptemp + -12 | 0;
   $56 = $$01$i$i$looptemp + -12 | 0;
   HEAP32[$55 + 0 >> 2] = HEAP32[$56 + 0 >> 2];
   HEAP32[$55 + 4 >> 2] = HEAP32[$56 + 4 >> 2];
   HEAP32[$55 + 8 >> 2] = HEAP32[$56 + 8 >> 2];
   HEAP32[$56 + 0 >> 2] = 0;
   HEAP32[$56 + 4 >> 2] = 0;
   HEAP32[$56 + 8 >> 2] = 0;
  } while (($$01$i$i | 0) != ($41 | 0));
  $$pre$i = HEAP32[$this >> 2] | 0;
  $$pre4 = HEAP32[$0 >> 2] | 0;
  HEAP32[$this >> 2] = $32 + ($49 * 40 | 0);
  HEAP32[$0 >> 2] = $40;
  HEAP32[$9 >> 2] = $34;
  if (($$pre4 | 0) == ($$pre$i | 0)) $63 = $$pre$i; else {
   $60 = $$pre4;
   do {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($60 + -12 | 0);
    $60 = $60 + -40 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($60);
   } while (($60 | 0) != ($$pre$i | 0));
   $63 = $$pre$i;
  }
 }
 if (!$63) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($63);
 STACKTOP = sp;
 return;
}

function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$pre = 0, $100 = 0, $105 = 0, $107 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $33 = 0, $39 = 0, $47 = 0, $49 = 0, $56 = 0, $66 = 0, $74 = 0, $76 = 0, $78 = 0, $84 = 0, $87 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre = HEAP32[$frm_nxt >> 2] | 0;
 if (!($mode & 4)) $15 = $$pre; else if (($frm_end - $$pre | 0) > 2) if ((HEAP8[$$pre >> 0] | 0) == -17) if ((HEAP8[$$pre + 1 >> 0] | 0) == -69) if ((HEAP8[$$pre + 2 >> 0] | 0) == -65) {
  $14 = $$pre + 3 | 0;
  HEAP32[$frm_nxt >> 2] = $14;
  $15 = $14;
 } else $15 = $$pre; else $15 = $$pre; else $15 = $$pre; else $15 = $$pre;
 L8 : do if ($15 >>> 0 < $frm_end >>> 0) {
  $17 = $frm_end;
  $18 = HEAP32[$to_nxt >> 2] | 0;
  $21 = $15;
  while (1) {
   if ($18 >>> 0 >= $to_end >>> 0) {
    $107 = $21;
    label = 39;
    break L8;
   }
   $20 = HEAP8[$21 >> 0] | 0;
   $22 = $20 & 255;
   do if ($20 << 24 >> 24 > -1) {
    if ($22 >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L8;
    }
    HEAP32[$18 >> 2] = $22;
    HEAP32[$frm_nxt >> 2] = $21 + 1;
   } else {
    if (($20 & 255) < 194) {
     $$0 = 2;
     break L8;
    }
    if (($20 & 255) < 224) {
     if (($17 - $21 | 0) < 2) {
      $$0 = 1;
      break L8;
     }
     $33 = HEAPU8[$21 + 1 >> 0] | 0;
     if (($33 & 192 | 0) != 128) {
      $$0 = 2;
      break L8;
     }
     $39 = $33 & 63 | $22 << 6 & 1984;
     if ($39 >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L8;
     }
     HEAP32[$18 >> 2] = $39;
     HEAP32[$frm_nxt >> 2] = $21 + 2;
     break;
    }
    if (($20 & 255) < 240) {
     if (($17 - $21 | 0) < 3) {
      $$0 = 1;
      break L8;
     }
     $47 = HEAP8[$21 + 1 >> 0] | 0;
     $49 = HEAP8[$21 + 2 >> 0] | 0;
     if (($22 | 0) == 237) {
      if (($47 & -32) << 24 >> 24 != -128) {
       $$0 = 2;
       break L8;
      }
     } else if (($22 | 0) == 224) {
      if (($47 & -32) << 24 >> 24 != -96) {
       $$0 = 2;
       break L8;
      }
     } else if (($47 & -64) << 24 >> 24 != -128) {
      $$0 = 2;
      break L8;
     }
     $56 = $49 & 255;
     if (($56 & 192 | 0) != 128) {
      $$0 = 2;
      break L8;
     }
     $66 = ($47 & 255) << 6 & 4032 | $22 << 12 & 61440 | $56 & 63;
     if ($66 >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L8;
     }
     HEAP32[$18 >> 2] = $66;
     HEAP32[$frm_nxt >> 2] = $21 + 3;
     break;
    }
    if (($20 & 255) >= 245) {
     $$0 = 2;
     break L8;
    }
    if (($17 - $21 | 0) < 4) {
     $$0 = 1;
     break L8;
    }
    $74 = HEAP8[$21 + 1 >> 0] | 0;
    $76 = HEAP8[$21 + 2 >> 0] | 0;
    $78 = HEAP8[$21 + 3 >> 0] | 0;
    if (($22 | 0) == 244) {
     if (($74 & -16) << 24 >> 24 != -128) {
      $$0 = 2;
      break L8;
     }
    } else if (($22 | 0) == 240) {
     if (($74 + 112 << 24 >> 24 & 255) >= 48) {
      $$0 = 2;
      break L8;
     }
    } else if (($74 & -64) << 24 >> 24 != -128) {
     $$0 = 2;
     break L8;
    }
    $84 = $76 & 255;
    if (($84 & 192 | 0) != 128) {
     $$0 = 2;
     break L8;
    }
    $87 = $78 & 255;
    if (($87 & 192 | 0) != 128) {
     $$0 = 2;
     break L8;
    }
    $100 = ($74 & 255) << 12 & 258048 | $22 << 18 & 1835008 | $84 << 6 & 4032 | $87 & 63;
    if ($100 >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L8;
    }
    HEAP32[$18 >> 2] = $100;
    HEAP32[$frm_nxt >> 2] = $21 + 4;
   } while (0);
   $18 = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
   HEAP32[$to_nxt >> 2] = $18;
   $105 = HEAP32[$frm_nxt >> 2] | 0;
   if ($105 >>> 0 >= $frm_end >>> 0) {
    $107 = $105;
    label = 39;
    break;
   } else $21 = $105;
  }
 } else {
  $107 = $15;
  label = 39;
 } while (0);
 if ((label | 0) == 39) $$0 = $107 >>> 0 < $frm_end >>> 0 & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01$i = 0, $12 = 0, $14 = 0, $19 = 0, $22 = 0, $29 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $62 = 0, $65 = 0, $73 = 0, $80 = 0, $82 = 0, $87 = 0, $89 = 0, sp = 0;
 sp = STACKTOP;
 if ($__ct << 24 >> 24 == $__decimal_point << 24 >> 24) {
  if (!(HEAP8[$__in_units >> 0] | 0)) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$12) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $14 = HEAP32[$__g_end >> 2] | 0;
  if (($14 - $__g | 0) >= 160) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $19 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $14 + 4;
  HEAP32[$14 >> 2] = $19;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ($__ct << 24 >> 24 == $__thousands_sep << 24 >> 24) {
  $22 = HEAP8[$__grouping >> 0] | 0;
  if (!($22 & 1)) $29 = ($22 & 255) >>> 1; else $29 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($29) {
   if (!(HEAP8[$__in_units >> 0] | 0)) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $33 = HEAP32[$__g_end >> 2] | 0;
   if (($33 - $__g | 0) >= 160) {
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $38 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $33 + 4;
   HEAP32[$33 >> 2] = $38;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $40 = $__atoms + 32 | 0;
 $$01$i = $__atoms;
 while (1) {
  if ((HEAP8[$$01$i >> 0] | 0) == $__ct << 24 >> 24) {
   $$0$lcssa$i = $$01$i;
   break;
  }
  $$01$i = $$01$i + 1 | 0;
  if (($$01$i | 0) == ($40 | 0)) {
   $$0$lcssa$i = $40;
   break;
  }
 }
 $47 = $$0$lcssa$i - $__atoms | 0;
 if (($47 | 0) > 31) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $50 = HEAP8[44312 + $47 >> 0] | 0;
 if (($47 | 0) == 24 | ($47 | 0) == 25) {
  $51 = HEAP32[$__a_end >> 2] | 0;
  if (($51 | 0) != ($__a | 0)) if ((HEAPU8[$51 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP32[$__a_end >> 2] = $51 + 1;
  HEAP8[$51 >> 0] = $50;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if (($47 | 0) == 23 | ($47 | 0) == 22) {
  HEAP8[$__exp >> 0] = 80;
  $62 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $62 + 1;
  HEAP8[$62 >> 0] = $50;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $65 = $50 & 95;
  if (($65 | 0) == (HEAP8[$__exp >> 0] | 0)) {
   HEAP8[$__exp >> 0] = $65 | 128;
   if (HEAP8[$__in_units >> 0] | 0) {
    HEAP8[$__in_units >> 0] = 0;
    $73 = HEAP8[$__grouping >> 0] | 0;
    if (!($73 & 1)) $80 = ($73 & 255) >>> 1; else $80 = HEAP32[$__grouping + 4 >> 2] | 0;
    if ($80) {
     $82 = HEAP32[$__g_end >> 2] | 0;
     if (($82 - $__g | 0) < 160) {
      $87 = HEAP32[$__dc >> 2] | 0;
      HEAP32[$__g_end >> 2] = $82 + 4;
      HEAP32[$82 >> 2] = $87;
     }
    }
   }
  }
  $89 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $89 + 1;
  HEAP8[$89 >> 0] = $50;
  if (($47 | 0) > 21) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZL10bop_string8BinaryOp($agg$result, $bop) {
 $agg$result = $agg$result | 0;
 $bop = $bop | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 do switch ($bop | 0) {
 case 11:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40456, 2);
   STACKTOP = sp;
   return;
  }
 case 8:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40432, 1);
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 38112, 1);
   STACKTOP = sp;
   return;
  }
 case 6:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37696, 1);
   STACKTOP = sp;
   return;
  }
 case 15:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40488, 2);
   STACKTOP = sp;
   return;
  }
 case 5:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40416, 2);
   STACKTOP = sp;
   return;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40392, 1);
   STACKTOP = sp;
   return;
  }
 case 13:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40472, 1);
   STACKTOP = sp;
   return;
  }
 case 4:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40408, 2);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40400, 1);
   STACKTOP = sp;
   return;
  }
 case 9:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40440, 2);
   STACKTOP = sp;
   return;
  }
 case 12:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40464, 1);
   STACKTOP = sp;
   return;
  }
 case 7:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40424, 2);
   STACKTOP = sp;
   return;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40496, 2);
   STACKTOP = sp;
   return;
  }
 case 10:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40448, 2);
   STACKTOP = sp;
   return;
  }
 case 14:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40480, 1);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40056, 1);
   STACKTOP = sp;
   return;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 40504, 46) | 0, $bop) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $7 = invoke_iii(22, $0 | 0, 45800) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   }
   __THREW__ = 0;
   $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 } while (0);
}

function __ZN9AllocatorD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01$i$i$i = 0, $$pre = 0, $$pre16 = 0, $0 = 0, $1 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $39 = 0, $41 = 0, $43 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $56 = 0, $6 = 0, $62 = 0, $x4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $x4 = sp;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($1 | 0) != ($3 | 0)) {
  $6 = $1;
  do {
   $5 = HEAP32[$6 >> 2] | 0;
   if ($5) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 4 >> 2] & 255]($5);
   $6 = $6 + 4 | 0;
  } while (($6 | 0) != ($3 | 0));
  $$pre = HEAP32[$0 >> 2] | 0;
  $$pre16 = HEAP32[$2 >> 2] | 0;
  if (($$pre16 | 0) != ($$pre | 0)) HEAP32[$2 >> 2] = $$pre16 + (~(($$pre16 + -4 - $$pre | 0) >>> 2) << 2);
 }
 $18 = HEAP32[$this >> 2] | 0;
 $19 = $this + 4 | 0;
 L10 : do if (($18 | 0) != ($19 | 0)) {
  $21 = $x4 + 12 | 0;
  $23 = $18;
  while (1) {
   __THREW__ = 0;
   invoke_vii(40, $x4 | 0, $23 + 16 | 0);
   $24 = __THREW__;
   __THREW__ = 0;
   if ($24 & 1) break;
   $27 = HEAP32[$23 + 28 >> 2] | 0;
   HEAP32[$21 >> 2] = $27;
   if ($27) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($27);
    __ZdlPv($27);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($x4);
   $30 = HEAP32[$23 + 4 >> 2] | 0;
   if (!$30) {
    $$0$i$i$i = $23;
    while (1) {
     $35 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$35 >> 2] | 0) == ($$0$i$i$i | 0)) {
      $$01$i$i$i = $35;
      break;
     } else $$0$i$i$i = $35;
    }
   } else {
    $$0$i$i$i$i = $30;
    while (1) {
     $32 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$32) {
      $$01$i$i$i = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $32;
    }
   }
   if (($$01$i$i$i | 0) == ($19 | 0)) break L10; else $23 = $$01$i$i$i;
  }
  $39 = ___cxa_find_matching_catch(0) | 0;
  $41 = HEAP32[$0 >> 2] | 0;
  if (!$41) {
   $49 = $this + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $50);
   ___clang_call_terminate($39);
  }
  $43 = HEAP32[$2 >> 2] | 0;
  if (($43 | 0) != ($41 | 0)) HEAP32[$2 >> 2] = $43 + (~(($43 + -4 - $41 | 0) >>> 2) << 2);
  __ZdlPv($41);
  $49 = $this + 4 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $50);
  ___clang_call_terminate($39);
 } while (0);
 $51 = $this + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$51 >> 2] | 0);
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this >> 2] = $19;
 HEAP32[$19 >> 2] = 0;
 $54 = HEAP32[$0 >> 2] | 0;
 if (!$54) {
  $62 = 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $62);
  STACKTOP = sp;
  return;
 }
 $56 = HEAP32[$2 >> 2] | 0;
 if (($56 | 0) != ($54 | 0)) HEAP32[$2 >> 2] = $56 + (~(($56 + -4 - $54 | 0) >>> 2) << 2);
 __ZdlPv($54);
 $62 = HEAP32[$51 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $62);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(72, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi7Z2D = $this;
  $$pre$phiZ2D = $this;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 44488) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 45800) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 40 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi7Z2D = $this;
   $$pre$phiZ2D = $this;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $this | 0;
 } while (0);
 ___cxa_begin_catch($$1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $$pre$phi7Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $64 = __THREW__;
 __THREW__ = 0;
 if (!($64 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $this | 0;
 }
 $66 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $68 = __THREW__;
 __THREW__ = 0;
 if ($68 & 1) {
  $70 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($70);
 } else ___resumeException($66 | 0);
 return 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(72, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi7Z2D = $this;
  $$pre$phiZ2D = $this;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 44488) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 45800) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi7Z2D = $this;
   $$pre$phiZ2D = $this;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $this | 0;
 } while (0);
 ___cxa_begin_catch($$1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $$pre$phi7Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $64 = __THREW__;
 __THREW__ = 0;
 if (!($64 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $this | 0;
 }
 $66 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $68 = __THREW__;
 __THREW__ = 0;
 if ($68 & 1) {
  $70 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($70);
 } else ___resumeException($66 | 0);
 return 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(72, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi7Z2D = $this;
  $$pre$phiZ2D = $this;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 44488) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 45800) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi7Z2D = $this;
   $$pre$phiZ2D = $this;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $this | 0;
 } while (0);
 ___cxa_begin_catch($$1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $$pre$phi7Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $64 = __THREW__;
 __THREW__ = 0;
 if (!($64 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $this | 0;
 }
 $66 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $68 = __THREW__;
 __THREW__ = 0;
 if ($68 & 1) {
  $70 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($70);
 } else ___resumeException($66 | 0);
 return 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(72, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi7Z2D = $this;
  $$pre$phiZ2D = $this;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 44488) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 45800) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi7Z2D = $this;
   $$pre$phiZ2D = $this;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $this | 0;
 } while (0);
 ___cxa_begin_catch($$1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $$pre$phi7Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $64 = __THREW__;
 __THREW__ = 0;
 if (!($64 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $this | 0;
 }
 $66 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $68 = __THREW__;
 __THREW__ = 0;
 if ($68 & 1) {
  $70 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($70);
 } else ___resumeException($66 | 0);
 return 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi8Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(72, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi8Z2D = $this;
  $$pre$phiZ2D = $this;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 44488) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 45800) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiii($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, $__n | 0);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi8Z2D = $this;
   $$pre$phiZ2D = $this;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $this | 0;
 } while (0);
 ___cxa_begin_catch($$1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $$pre$phi8Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $64 = __THREW__;
 __THREW__ = 0;
 if (!($64 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $this | 0;
 }
 $66 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $68 = __THREW__;
 __THREW__ = 0;
 if ($68 & 1) {
  $70 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($70);
 } else ___resumeException($66 | 0);
 return 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd($this, $__n) {
 $this = $this | 0;
 $__n = +$__n;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __THREW__ = 0;
 invoke_vii(72, $__s | 0, $this | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($3 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi7Z2D = $this;
  $$pre$phiZ2D = $this;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   __ZNSt3__16localeC2ERKS0_($1, $this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 28) | 0);
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 44488) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     __ZNSt3__16localeC2ERKS0_($$byval_copy, $this + ($16 + 28) | 0);
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 45800) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $37 = $35;
       label = 9;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $37 = $21;
     label = 9;
    } while (0);
    if ((label | 0) == 9) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
     invoke_viiiiid($40 | 0, $2 | 0, $11 | 0, $$byval_copy | 0, $19 | 0, $37 & 255 | 0, +$__n);
     $41 = __THREW__;
     __THREW__ = 0;
     if (!($41 & 1)) {
      if (HEAP32[$2 >> 2] | 0) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(48, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi7Z2D = $this;
   $$pre$phiZ2D = $this;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $this | 0;
 } while (0);
 ___cxa_begin_catch($$1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $$pre$phi7Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $64 = __THREW__;
 __THREW__ = 0;
 if (!($64 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $this | 0;
 }
 $66 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $68 = __THREW__;
 __THREW__ = 0;
 if ($68 & 1) {
  $70 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($70);
 } else ___resumeException($66 | 0);
 return 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $103 = 0, $116 = 0, $121 = 0, $122 = 0, $127 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0, $33 = 0, $36 = 0, $4 = 0, $46 = 0, $51 = 0, $52 = 0, $6 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $76 = 0, $8 = 0, $88 = 0, $92 = 0, $93 = 0, $__c$0 = 0, $__extbe = 0, $__state = 0, $__update_st$0$off0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbe = sp + 8 | 0;
 $__state = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 68 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) {
  $6 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($6);
  ___cxa_throw($6 | 0, 54576, 170);
 }
 $7 = $this + 92 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 do if (!($8 & 16)) {
  if ($8 & 8) {
   $46 = $this + 80 | 0;
   $51 = HEAP32[$46 + 4 >> 2] | 0;
   $52 = $__state;
   HEAP32[$52 >> 2] = HEAP32[$46 >> 2];
   HEAP32[$52 + 4 >> 2] = $51;
   do if (!(HEAP8[$this + 98 >> 0] | 0)) {
    $69 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 127]($4) | 0;
    $72 = $this + 36 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    $76 = (HEAP32[$this + 40 >> 2] | 0) - $73 | 0;
    if (($69 | 0) > 0) {
     $__c$0 = (Math_imul((HEAP32[$this + 16 >> 2] | 0) - (HEAP32[$this + 12 >> 2] | 0) | 0, $69) | 0) + $76 | 0;
     $__update_st$0$off0 = 0;
     break;
    }
    $88 = HEAP32[$this + 12 >> 2] | 0;
    if (($88 | 0) == (HEAP32[$this + 16 >> 2] | 0)) {
     $__c$0 = $76;
     $__update_st$0$off0 = 0;
    } else {
     $92 = HEAP32[$3 >> 2] | 0;
     $93 = $this + 32 | 0;
     $103 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$92 >> 2] | 0) + 32 >> 2] & 31]($92, $__state, HEAP32[$93 >> 2] | 0, $73, $88 - (HEAP32[$this + 8 >> 2] | 0) | 0) | 0;
     $__c$0 = $76 - $103 + (HEAP32[$72 >> 2] | 0) - (HEAP32[$93 >> 2] | 0) | 0;
     $__update_st$0$off0 = 1;
    }
   } else {
    $__c$0 = (HEAP32[$this + 16 >> 2] | 0) - (HEAP32[$this + 12 >> 2] | 0) | 0;
    $__update_st$0$off0 = 0;
   } while (0);
   if (_fseeko(HEAP32[$0 >> 2] | 0, 0 - $__c$0 | 0, 1) | 0) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   if ($__update_st$0$off0) {
    $116 = $__state;
    $121 = HEAP32[$116 + 4 >> 2] | 0;
    $122 = $this + 72 | 0;
    HEAP32[$122 >> 2] = HEAP32[$116 >> 2];
    HEAP32[$122 + 4 >> 2] = $121;
   }
   $127 = HEAP32[$this + 32 >> 2] | 0;
   HEAP32[$this + 40 >> 2] = $127;
   HEAP32[$this + 36 >> 2] = $127;
   HEAP32[$this + 8 >> 2] = 0;
   HEAP32[$this + 12 >> 2] = 0;
   HEAP32[$this + 16 >> 2] = 0;
   HEAP32[$7 >> 2] = 0;
  }
 } else {
  if ((HEAP32[$this + 24 >> 2] | 0) != (HEAP32[$this + 20 >> 2] | 0)) if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, -1) | 0) == -1) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $21 = $this + 72 | 0;
  $22 = $this + 32 | 0;
  $23 = $this + 52 | 0;
  while (1) {
   $24 = HEAP32[$3 >> 2] | 0;
   $25 = HEAP32[$22 >> 2] | 0;
   $31 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$24 >> 2] | 0) + 20 >> 2] & 31]($24, $21, $25, $25 + (HEAP32[$23 >> 2] | 0) | 0, $__extbe) | 0;
   $33 = HEAP32[$22 >> 2] | 0;
   $36 = (HEAP32[$__extbe >> 2] | 0) - $33 | 0;
   if ((_fwrite($33 | 0, 1, $36 | 0, HEAP32[$0 >> 2] | 0) | 0) != ($36 | 0)) {
    $$0 = -1;
    label = 23;
    break;
   }
   if (($31 | 0) == 2) {
    $$0 = -1;
    label = 23;
    break;
   } else if (($31 | 0) != 1) {
    label = 10;
    break;
   }
  }
  if ((label | 0) == 10) {
   if (!(_fflush(HEAP32[$0 >> 2] | 0) | 0)) break; else $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 23) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01$i = 0, $12 = 0, $14 = 0, $19 = 0, $22 = 0, $29 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $64 = 0, $72 = 0, $79 = 0, $81 = 0, $86 = 0, $88 = 0, sp = 0;
 sp = STACKTOP;
 if (($__ct | 0) == ($__decimal_point | 0)) {
  if (!(HEAP8[$__in_units >> 0] | 0)) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!($5 & 1)) $12 = ($5 & 255) >>> 1; else $12 = HEAP32[$__grouping + 4 >> 2] | 0;
  if (!$12) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $14 = HEAP32[$__g_end >> 2] | 0;
  if (($14 - $__g | 0) >= 160) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $19 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $14 + 4;
  HEAP32[$14 >> 2] = $19;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($__ct | 0) == ($__thousands_sep | 0)) {
  $22 = HEAP8[$__grouping >> 0] | 0;
  if (!($22 & 1)) $29 = ($22 & 255) >>> 1; else $29 = HEAP32[$__grouping + 4 >> 2] | 0;
  if ($29) {
   if (!(HEAP8[$__in_units >> 0] | 0)) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $33 = HEAP32[$__g_end >> 2] | 0;
   if (($33 - $__g | 0) >= 160) {
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $38 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $33 + 4;
   HEAP32[$33 >> 2] = $38;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $40 = $__atoms + 128 | 0;
 $$01$i = $__atoms;
 while (1) {
  if ((HEAP32[$$01$i >> 2] | 0) == ($__ct | 0)) {
   $$0$lcssa$i = $$01$i;
   break;
  }
  $$01$i = $$01$i + 4 | 0;
  if (($$01$i | 0) == ($40 | 0)) {
   $$0$lcssa$i = $40;
   break;
  }
 }
 $47 = $$0$lcssa$i - $__atoms | 0;
 $48 = $47 >> 2;
 if (($47 | 0) > 124) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $51 = HEAP8[44312 + $48 >> 0] | 0;
 if (($48 | 0) == 23 | ($48 | 0) == 22) HEAP8[$__exp >> 0] = 80; else if (($48 | 0) == 24 | ($48 | 0) == 25) {
  $52 = HEAP32[$__a_end >> 2] | 0;
  if (($52 | 0) != ($__a | 0)) if ((HEAPU8[$52 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP32[$__a_end >> 2] = $52 + 1;
  HEAP8[$52 >> 0] = $51;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $64 = $51 & 95;
  if (($64 | 0) == (HEAP8[$__exp >> 0] | 0)) {
   HEAP8[$__exp >> 0] = $64 | 128;
   if (HEAP8[$__in_units >> 0] | 0) {
    HEAP8[$__in_units >> 0] = 0;
    $72 = HEAP8[$__grouping >> 0] | 0;
    if (!($72 & 1)) $79 = ($72 & 255) >>> 1; else $79 = HEAP32[$__grouping + 4 >> 2] | 0;
    if ($79) {
     $81 = HEAP32[$__g_end >> 2] | 0;
     if (($81 - $__g | 0) < 160) {
      $86 = HEAP32[$__dc >> 2] | 0;
      HEAP32[$__g_end >> 2] = $81 + 4;
      HEAP32[$81 >> 2] = $86;
     }
    }
   }
  }
 }
 $88 = HEAP32[$__a_end >> 2] | 0;
 HEAP32[$__a_end >> 2] = $88 + 1;
 HEAP8[$88 >> 0] = $51;
 if (($47 | 0) > 84) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__x) {
 $__root = $__root | 0;
 $__x = $__x | 0;
 var $$06 = 0, $$pre = 0, $0 = 0, $10 = 0, $13 = 0, $15 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $46 = 0, $5 = 0, $51 = 0, $60 = 0, $61 = 0, $64 = 0, $65 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $78 = 0, $8 = 0, $81 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__x | 0) == ($__root | 0);
 HEAP8[$__x + 12 >> 0] = $0 & 1;
 if ($0) {
  STACKTOP = sp;
  return;
 } else $$06 = $__x;
 while (1) {
  $3 = $$06 + 8 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  $5 = $4 + 12 | 0;
  if (HEAP8[$5 >> 0] | 0) {
   label = 37;
   break;
  }
  $8 = $4 + 8 | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if (($10 | 0) == ($4 | 0)) {
   $13 = HEAP32[$9 + 4 >> 2] | 0;
   if (!$13) {
    label = 7;
    break;
   }
   $15 = $13 + 12 | 0;
   if (HEAP8[$15 >> 0] | 0) {
    label = 7;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$9 + 12 >> 0] = ($9 | 0) == ($__root | 0) & 1;
   HEAP8[$15 >> 0] = 1;
  } else {
   if (!$10) {
    label = 24;
    break;
   }
   $51 = $10 + 12 | 0;
   if (HEAP8[$51 >> 0] | 0) {
    label = 24;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$9 + 12 >> 0] = ($9 | 0) == ($__root | 0) & 1;
   HEAP8[$51 >> 0] = 1;
  }
  if (($9 | 0) == ($__root | 0)) {
   label = 37;
   break;
  } else $$06 = $9;
 }
 if ((label | 0) == 7) {
  if ((HEAP32[$4 >> 2] | 0) == ($$06 | 0)) {
   $35 = $4;
   $37 = $9;
   $39 = $4;
  } else {
   $23 = $4 + 4 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   HEAP32[$23 >> 2] = $25;
   if (!$25) $29 = $9; else {
    HEAP32[$25 + 8 >> 2] = $4;
    $29 = HEAP32[$8 >> 2] | 0;
   }
   $28 = $24 + 8 | 0;
   HEAP32[$28 >> 2] = $29;
   $30 = HEAP32[$8 >> 2] | 0;
   if ((HEAP32[$30 >> 2] | 0) == ($4 | 0)) HEAP32[$30 >> 2] = $24; else HEAP32[$30 + 4 >> 2] = $24;
   HEAP32[$24 >> 2] = $4;
   HEAP32[$8 >> 2] = $24;
   $$pre = HEAP32[$28 >> 2] | 0;
   $35 = $24;
   $37 = $$pre;
   $39 = HEAP32[$$pre >> 2] | 0;
  }
  HEAP8[$35 + 12 >> 0] = 1;
  HEAP8[$37 + 12 >> 0] = 0;
  $38 = $39 + 4 | 0;
  $40 = HEAP32[$38 >> 2] | 0;
  HEAP32[$37 >> 2] = $40;
  if ($40) HEAP32[$40 + 8 >> 2] = $37;
  $43 = $37 + 8 | 0;
  HEAP32[$39 + 8 >> 2] = HEAP32[$43 >> 2];
  $46 = HEAP32[$43 >> 2] | 0;
  if ((HEAP32[$46 >> 2] | 0) == ($37 | 0)) HEAP32[$46 >> 2] = $39; else HEAP32[$46 + 4 >> 2] = $39;
  HEAP32[$38 >> 2] = $37;
  HEAP32[$43 >> 2] = $39;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 24) {
  if ((HEAP32[$4 >> 2] | 0) == ($$06 | 0)) {
   $60 = $$06 + 4 | 0;
   $61 = HEAP32[$60 >> 2] | 0;
   HEAP32[$4 >> 2] = $61;
   if (!$61) $64 = $9; else {
    HEAP32[$61 + 8 >> 2] = $4;
    $64 = HEAP32[$8 >> 2] | 0;
   }
   HEAP32[$3 >> 2] = $64;
   $65 = HEAP32[$8 >> 2] | 0;
   if ((HEAP32[$65 >> 2] | 0) == ($4 | 0)) HEAP32[$65 >> 2] = $$06; else HEAP32[$65 + 4 >> 2] = $$06;
   HEAP32[$60 >> 2] = $4;
   HEAP32[$8 >> 2] = $$06;
   $70 = $$06;
   $72 = HEAP32[$3 >> 2] | 0;
  } else {
   $70 = $4;
   $72 = $9;
  }
  HEAP8[$70 + 12 >> 0] = 1;
  HEAP8[$72 + 12 >> 0] = 0;
  $73 = $72 + 4 | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  $75 = HEAP32[$74 >> 2] | 0;
  HEAP32[$73 >> 2] = $75;
  if ($75) HEAP32[$75 + 8 >> 2] = $72;
  $78 = $72 + 8 | 0;
  HEAP32[$74 + 8 >> 2] = HEAP32[$78 >> 2];
  $81 = HEAP32[$78 >> 2] | 0;
  if ((HEAP32[$81 >> 2] | 0) == ($72 | 0)) HEAP32[$81 >> 2] = $74; else HEAP32[$81 + 4 >> 2] = $74;
  HEAP32[$74 >> 2] = $72;
  HEAP32[$78 >> 2] = $74;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 37) {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os, $__str, $__len) {
 $__os = $__os | 0;
 $__str = $__str | 0;
 $__len = $__len | 0;
 var $$0 = 0, $$byval_copy = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $44 = 0, $49 = 0, $51 = 0, $53 = 0, $59 = 0, $61 = 0, $63 = 0, $65 = 0, $8 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $__os | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($2 & 1) {
  $51 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $51;
  $$pre$phi4Z2D = $__os;
  $$pre$phiZ2D = $__os;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $8 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
   HEAP32[$0 >> 2] = HEAP32[$__os + ($8 + 24) >> 2];
   if ((HEAP32[$__os + ($8 + 4) >> 2] & 176 | 0) == 32) $37 = $__str + $__len | 0; else $37 = $__str;
   $16 = $__os + $8 | 0;
   $17 = $__os + ($8 + 76) | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($18 | 0) == -1) {
    __THREW__ = 0;
    invoke_vii(47, $$byval_copy | 0, $16 | 0);
    $20 = __THREW__;
    __THREW__ = 0;
    if ($20 & 1) label = 16; else {
     __THREW__ = 0;
     $22 = invoke_iii(22, $$byval_copy | 0, 45800) | 0;
     $23 = __THREW__;
     __THREW__ = 0;
     if (!($23 & 1)) {
      __THREW__ = 0;
      $28 = invoke_iii(HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] | 0, $22 | 0, 32) | 0;
      $29 = __THREW__;
      __THREW__ = 0;
      if (!($29 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $33 = $28 << 24 >> 24;
       HEAP32[$17 >> 2] = $33;
       $$pre$phi6Z2D = $16;
       $35 = $33;
       label = 12;
       break;
      }
     }
     $31 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $31;
    }
   } else {
    $$pre$phi6Z2D = $16;
    $35 = $18;
    label = 12;
   } while (0);
   if ((label | 0) == 12) {
    __THREW__ = 0;
    HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
    invoke_viiiiiii(39, $1 | 0, $$byval_copy | 0, $__str | 0, $37 | 0, $__str + $__len | 0, $$pre$phi6Z2D | 0, $35 & 255 | 0);
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) label = 16; else {
     if (HEAP32[$1 >> 2] | 0) break;
     $44 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(48, $__os + $44 | 0, HEAP32[$__os + ($44 + 16) >> 2] | 5 | 0);
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) label = 16; else break;
    }
   }
   if ((label | 0) == 16) {
    $53 = ___cxa_find_matching_catch(0) | 0;
    $eh$lpad$body$indexZ2D = $53;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev($__s);
   $$0 = $eh$lpad$body$indexZ2D;
   $$pre$phi4Z2D = $__os;
   $$pre$phiZ2D = $__os;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev($__s);
  STACKTOP = sp;
  return $__os | 0;
 } while (0);
 ___cxa_begin_catch($$0 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $$pre$phi4Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $59 = __THREW__;
 __THREW__ = 0;
 if (!($59 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $__os | 0;
 }
 $61 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $63 = __THREW__;
 __THREW__ = 0;
 if ($63 & 1) {
  $65 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($65);
 } else ___resumeException($61 | 0);
 return 0;
}

function __ZN9Allocator4makeI8FunctionJ13LocationRangeNSt3__16vectorIPK10IdentifierNS3_9allocatorIS7_EEEEP3ASTEEEPT_DpT0_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $$01$i$i = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $36 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $49 = 0, $5 = 0, $51 = 0, $58 = 0, $59 = 0, $6 = 0, $65 = 0, $67 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(64) | 0;
 HEAP32[$1 >> 2] = 34168;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $67 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $67;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 6;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 36808;
 $11 = $1 + 48 | 0;
 HEAP32[$11 >> 2] = 0;
 $12 = $1 + 52 | 0;
 HEAP32[$12 >> 2] = 0;
 $13 = $1 + 56 | 0;
 HEAP32[$13 >> 2] = 0;
 $14 = $args1 + 4 | 0;
 $19 = (HEAP32[$14 >> 2] | 0) - (HEAP32[$args1 >> 2] | 0) | 0;
 $20 = $19 >> 2;
 L5 : do if ($20) {
  if ($20 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(181, $11 | 0);
   $23 = __THREW__;
   __THREW__ = 0;
   if (!($23 & 1)) label = 5;
  } else label = 5;
  if ((label | 0) == 5) {
   __THREW__ = 0;
   $25 = invoke_ii(67, $19 | 0) | 0;
   $26 = __THREW__;
   __THREW__ = 0;
   if (!($26 & 1)) {
    HEAP32[$12 >> 2] = $25;
    HEAP32[$11 >> 2] = $25;
    HEAP32[$13 >> 2] = $25 + ($20 << 2);
    $29 = HEAP32[$args1 >> 2] | 0;
    $30 = HEAP32[$14 >> 2] | 0;
    if (($29 | 0) == ($30 | 0)) break; else {
     $$01$i$i = $29;
     $32 = $25;
    }
    while (1) {
     if (!$32) $36 = 0; else {
      HEAP32[$32 >> 2] = HEAP32[$$01$i$i >> 2];
      $36 = HEAP32[$12 >> 2] | 0;
     }
     $32 = $36 + 4 | 0;
     HEAP32[$12 >> 2] = $32;
     $$01$i$i = $$01$i$i + 4 | 0;
     if (($$01$i$i | 0) == ($30 | 0)) break L5;
    }
   }
  }
  $39 = ___cxa_find_matching_catch() | 0;
  $40 = tempRet0;
  $41 = HEAP32[$11 >> 2] | 0;
  if ($41) {
   $43 = HEAP32[$12 >> 2] | 0;
   if (($43 | 0) != ($41 | 0)) HEAP32[$12 >> 2] = $43 + (~(($43 + -4 - $41 | 0) >>> 2) << 2);
   __ZdlPv($41);
  }
  HEAP32[$1 >> 2] = 34168;
  $49 = HEAP32[$8 >> 2] | 0;
  if ($49) {
   $51 = HEAP32[$9 >> 2] | 0;
   if (($51 | 0) != ($49 | 0)) HEAP32[$9 >> 2] = $51 + (~(($51 + -4 - $49 | 0) >>> 2) << 2);
   __ZdlPv($49);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
  $eh$lpad$body$index2Z2D = $40;
  $eh$lpad$body$indexZ2D = $39;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 } while (0);
 HEAP32[$1 + 60 >> 2] = $args2;
 HEAP32[$0 >> 2] = $1;
 $58 = $this + 16 | 0;
 $59 = HEAP32[$58 >> 2] | 0;
 if ($59 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$59) $65 = 0; else {
  HEAP32[$59 >> 2] = $1;
  $65 = HEAP32[$58 >> 2] | 0;
 }
 HEAP32[$58 >> 2] = $65 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN9Allocator4makeI5ApplyJ13LocationRangeP3ASTNSt3__16vectorIS4_NS5_9allocatorIS4_EEEEEEEPT_DpT0_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $$01$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $35 = 0, $38 = 0, $39 = 0, $40 = 0, $42 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $64 = 0, $66 = 0, $7 = 0, $8 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(64) | 0;
 HEAP32[$1 >> 2] = 34168;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $66 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $66;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 $7 = $1 + 32 | 0;
 $8 = $1 + 40 | 0;
 HEAP32[$7 + 0 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$1 >> 2] = 36424;
 HEAP32[$1 + 48 >> 2] = $args1;
 $10 = $1 + 52 | 0;
 HEAP32[$10 >> 2] = 0;
 $11 = $1 + 56 | 0;
 HEAP32[$11 >> 2] = 0;
 $12 = $1 + 60 | 0;
 HEAP32[$12 >> 2] = 0;
 $13 = $args2 + 4 | 0;
 $18 = (HEAP32[$13 >> 2] | 0) - (HEAP32[$args2 >> 2] | 0) | 0;
 $19 = $18 >> 2;
 L5 : do if ($19) {
  if ($19 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(181, $10 | 0);
   $22 = __THREW__;
   __THREW__ = 0;
   if (!($22 & 1)) label = 5;
  } else label = 5;
  if ((label | 0) == 5) {
   __THREW__ = 0;
   $24 = invoke_ii(67, $18 | 0) | 0;
   $25 = __THREW__;
   __THREW__ = 0;
   if (!($25 & 1)) {
    HEAP32[$11 >> 2] = $24;
    HEAP32[$10 >> 2] = $24;
    HEAP32[$12 >> 2] = $24 + ($19 << 2);
    $28 = HEAP32[$args2 >> 2] | 0;
    $29 = HEAP32[$13 >> 2] | 0;
    if (($28 | 0) == ($29 | 0)) break; else {
     $$01$i$i = $28;
     $31 = $24;
    }
    while (1) {
     if (!$31) $35 = 0; else {
      HEAP32[$31 >> 2] = HEAP32[$$01$i$i >> 2];
      $35 = HEAP32[$11 >> 2] | 0;
     }
     $31 = $35 + 4 | 0;
     HEAP32[$11 >> 2] = $31;
     $$01$i$i = $$01$i$i + 4 | 0;
     if (($$01$i$i | 0) == ($29 | 0)) break L5;
    }
   }
  }
  $38 = ___cxa_find_matching_catch() | 0;
  $39 = tempRet0;
  $40 = HEAP32[$10 >> 2] | 0;
  if ($40) {
   $42 = HEAP32[$11 >> 2] | 0;
   if (($42 | 0) != ($40 | 0)) HEAP32[$11 >> 2] = $42 + (~(($42 + -4 - $40 | 0) >>> 2) << 2);
   __ZdlPv($40);
  }
  HEAP32[$1 >> 2] = 34168;
  $49 = HEAP32[$1 + 36 >> 2] | 0;
  if ($49) {
   $51 = HEAP32[$8 >> 2] | 0;
   if (($51 | 0) != ($49 | 0)) HEAP32[$8 >> 2] = $51 + (~(($51 + -4 - $49 | 0) >>> 2) << 2);
   __ZdlPv($49);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
  $eh$lpad$body$index2Z2D = $39;
  $eh$lpad$body$indexZ2D = $38;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 } while (0);
 HEAP32[$0 >> 2] = $1;
 $57 = $this + 16 | 0;
 $58 = HEAP32[$57 >> 2] | 0;
 if ($58 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$58) $64 = 0; else {
  HEAP32[$58 >> 2] = $1;
  $64 = HEAP32[$57 >> 2] | 0;
 }
 HEAP32[$57 >> 2] = $64 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $__way, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__way = $__way | 0;
 $__wch = $__wch | 0;
 var $$pre = 0, $109 = 0, $114 = 0, $121 = 0, $126 = 0, $14 = 0, $141 = 0, $146 = 0, $2 = 0, $20 = 0, $25 = 0, $3 = 0, $37 = 0, $4 = 0, $44 = 0, $47 = 0, $5 = 0, $54 = 0, $56 = 0, $58 = 0, $61 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $75 = 0, $83 = 0, $85 = 0, $87 = 0, $9 = 0, $93 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $this + 44 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $this + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 >>> 0 < $5 >>> 0) {
  HEAP32[$2 >> 2] = $5;
  $54 = $5;
 } else $54 = $3;
 $7 = $__wch & 24;
 if (!$7) {
  $9 = $agg$result;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  $14 = $agg$result + 8 | 0;
  HEAP32[$14 >> 2] = -1;
  HEAP32[$14 + 4 >> 2] = -1;
  STACKTOP = sp;
  return;
 }
 if (($7 | 0) == 24 & ($__way | 0) == 1) {
  $20 = $agg$result;
  HEAP32[$20 >> 2] = 0;
  HEAP32[$20 + 4 >> 2] = 0;
  $25 = $agg$result + 8 | 0;
  HEAP32[$25 >> 2] = -1;
  HEAP32[$25 + 4 >> 2] = -1;
  STACKTOP = sp;
  return;
 }
 do if (($__way | 0) == 2) {
  $47 = $this + 32 | 0;
  if (!(HEAP8[$47 >> 0] & 1)) $56 = $47 + 1 | 0; else $56 = HEAP32[$this + 40 >> 2] | 0;
  $58 = $54 - $56 | 0;
  $70 = $58;
  $71 = (($58 | 0) < 0) << 31 >> 31;
 } else if (!$__way) {
  $70 = 0;
  $71 = 0;
 } else if (($__way | 0) == 1) if (!($__wch & 8)) {
  $44 = $5 - (HEAP32[$this + 20 >> 2] | 0) | 0;
  $70 = $44;
  $71 = (($44 | 0) < 0) << 31 >> 31;
  break;
 } else {
  $37 = (HEAP32[$this + 12 >> 2] | 0) - (HEAP32[$this + 8 >> 2] | 0) | 0;
  $70 = $37;
  $71 = (($37 | 0) < 0) << 31 >> 31;
  break;
 } else {
  $61 = $agg$result;
  HEAP32[$61 >> 2] = 0;
  HEAP32[$61 + 4 >> 2] = 0;
  $66 = $agg$result + 8 | 0;
  HEAP32[$66 >> 2] = -1;
  HEAP32[$66 + 4 >> 2] = -1;
  STACKTOP = sp;
  return;
 } while (0);
 $72 = _i64Add($70 | 0, $71 | 0, $0 | 0, $1 | 0) | 0;
 $73 = tempRet0;
 if (($73 | 0) >= 0) {
  $75 = $this + 32 | 0;
  if (!(HEAP8[$75 >> 0] & 1)) $83 = $75 + 1 | 0; else $83 = HEAP32[$this + 40 >> 2] | 0;
  $85 = $54 - $83 | 0;
  $87 = (($85 | 0) < 0) << 31 >> 31;
  if (!(($87 | 0) < ($73 | 0) | ($87 | 0) == ($73 | 0) & $85 >>> 0 < $72 >>> 0)) {
   $$pre = $__wch & 8;
   if (!(($72 | 0) == 0 & ($73 | 0) == 0)) {
    if ($$pre) if (!(HEAP32[$this + 12 >> 2] | 0)) {
     $109 = $agg$result;
     HEAP32[$109 >> 2] = 0;
     HEAP32[$109 + 4 >> 2] = 0;
     $114 = $agg$result + 8 | 0;
     HEAP32[$114 >> 2] = -1;
     HEAP32[$114 + 4 >> 2] = -1;
     STACKTOP = sp;
     return;
    }
    if (($__wch & 16 | 0) != 0 & ($5 | 0) == 0) {
     $121 = $agg$result;
     HEAP32[$121 >> 2] = 0;
     HEAP32[$121 + 4 >> 2] = 0;
     $126 = $agg$result + 8 | 0;
     HEAP32[$126 >> 2] = -1;
     HEAP32[$126 + 4 >> 2] = -1;
     STACKTOP = sp;
     return;
    }
   }
   if ($$pre) {
    HEAP32[$this + 12 >> 2] = (HEAP32[$this + 8 >> 2] | 0) + $72;
    HEAP32[$this + 16 >> 2] = $54;
   }
   if ($__wch & 16) HEAP32[$4 >> 2] = (HEAP32[$this + 20 >> 2] | 0) + $72;
   $141 = $agg$result;
   HEAP32[$141 >> 2] = 0;
   HEAP32[$141 + 4 >> 2] = 0;
   $146 = $agg$result + 8 | 0;
   HEAP32[$146 >> 2] = $72;
   HEAP32[$146 + 4 >> 2] = $73;
   STACKTOP = sp;
   return;
  }
 }
 $93 = $agg$result;
 HEAP32[$93 >> 2] = 0;
 HEAP32[$93 + 4 >> 2] = 0;
 $98 = $agg$result + 8 | 0;
 HEAP32[$98 >> 2] = -1;
 HEAP32[$98 + 4 >> 2] = -1;
 STACKTOP = sp;
 return;
}

function __ZN9Allocator4makeI5ArrayJ13LocationRangeNSt3__16vectorIP3ASTNS3_9allocatorIS6_EEEEEEEPT_DpT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$01$i$i = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $36 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $64 = 0, $66 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(60) | 0;
 HEAP32[$1 >> 2] = 34168;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $66 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $66;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 1;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 36744;
 $11 = $1 + 48 | 0;
 HEAP32[$11 >> 2] = 0;
 $12 = $1 + 52 | 0;
 HEAP32[$12 >> 2] = 0;
 $13 = $1 + 56 | 0;
 HEAP32[$13 >> 2] = 0;
 $14 = $args1 + 4 | 0;
 $19 = (HEAP32[$14 >> 2] | 0) - (HEAP32[$args1 >> 2] | 0) | 0;
 $20 = $19 >> 2;
 L5 : do if ($20) {
  if ($20 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(181, $11 | 0);
   $23 = __THREW__;
   __THREW__ = 0;
   if (!($23 & 1)) label = 5;
  } else label = 5;
  if ((label | 0) == 5) {
   __THREW__ = 0;
   $25 = invoke_ii(67, $19 | 0) | 0;
   $26 = __THREW__;
   __THREW__ = 0;
   if (!($26 & 1)) {
    HEAP32[$12 >> 2] = $25;
    HEAP32[$11 >> 2] = $25;
    HEAP32[$13 >> 2] = $25 + ($20 << 2);
    $29 = HEAP32[$args1 >> 2] | 0;
    $30 = HEAP32[$14 >> 2] | 0;
    if (($29 | 0) == ($30 | 0)) break; else {
     $$01$i$i = $29;
     $32 = $25;
    }
    while (1) {
     if (!$32) $36 = 0; else {
      HEAP32[$32 >> 2] = HEAP32[$$01$i$i >> 2];
      $36 = HEAP32[$12 >> 2] | 0;
     }
     $32 = $36 + 4 | 0;
     HEAP32[$12 >> 2] = $32;
     $$01$i$i = $$01$i$i + 4 | 0;
     if (($$01$i$i | 0) == ($30 | 0)) break L5;
    }
   }
  }
  $39 = ___cxa_find_matching_catch() | 0;
  $40 = tempRet0;
  $41 = HEAP32[$11 >> 2] | 0;
  if ($41) {
   $43 = HEAP32[$12 >> 2] | 0;
   if (($43 | 0) != ($41 | 0)) HEAP32[$12 >> 2] = $43 + (~(($43 + -4 - $41 | 0) >>> 2) << 2);
   __ZdlPv($41);
  }
  HEAP32[$1 >> 2] = 34168;
  $49 = HEAP32[$8 >> 2] | 0;
  if ($49) {
   $51 = HEAP32[$9 >> 2] | 0;
   if (($51 | 0) != ($49 | 0)) HEAP32[$9 >> 2] = $51 + (~(($51 + -4 - $49 | 0) >>> 2) << 2);
   __ZdlPv($49);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
  $eh$lpad$body$index2Z2D = $40;
  $eh$lpad$body$indexZ2D = $39;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 } while (0);
 HEAP32[$0 >> 2] = $1;
 $57 = $this + 16 | 0;
 $58 = HEAP32[$57 >> 2] | 0;
 if ($58 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$58) $64 = 0; else {
  HEAP32[$58 >> 2] = $1;
  $64 = HEAP32[$57 >> 2] | 0;
 }
 HEAP32[$57 >> 2] = $64 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __Z22jsonnet_unparse_numberd($agg$result, $v) {
 $agg$result = $agg$result | 0;
 $v = +$v;
 var $$0$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $24 = 0, $26 = 0, $28 = 0, $3 = 0, $35 = 0, $37 = 0, $6 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $0 = sp + 144 | 0;
 $ss = sp;
 $1 = $ss + 64 | 0;
 $2 = $ss + 8 | 0;
 HEAP32[$2 >> 2] = 792;
 $3 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 940;
 HEAP32[$1 >> 2] = 960;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $3 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $18;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 772;
 HEAP32[$1 >> 2] = 812;
 HEAP32[$2 >> 2] = 792;
 __THREW__ = 0;
 invoke_vi(179, $3 | 0);
 $10 = __THREW__;
 __THREW__ = 0;
 do if ($10 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $20;
 } else {
  HEAP32[$3 >> 2] = 1104;
  $12 = $ss + 44 | 0;
  HEAP32[$12 + 0 >> 2] = 0;
  HEAP32[$12 + 4 >> 2] = 0;
  HEAP32[$12 + 8 >> 2] = 0;
  HEAP32[$12 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 + 0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $3 | 0, $0 | 0);
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) {
   $16 = ___cxa_find_matching_catch() | 0;
   $17 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
   $eh$lpad$body$i$index2Z2D = $17;
   $eh$lpad$body$i$indexZ2D = $16;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  $24 = $ss + 8 | 0;
  if (+Math_floor(+$v) == $v) {
   __THREW__ = 0;
   invoke_iii(25, $24 | 0, ~~$v | 0) | 0;
   $26 = __THREW__;
   __THREW__ = 0;
   if (!($26 & 1)) label = 13;
  } else {
   HEAP32[$24 + ((HEAP32[(HEAP32[$24 >> 2] | 0) + -12 >> 2] | 0) + 8) >> 2] = 17;
   __THREW__ = 0;
   invoke_iid(1, $24 | 0, +$v) | 0;
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) label = 13;
  }
  if ((label | 0) == 13) {
   __THREW__ = 0;
   invoke_vii(43, $agg$result | 0, $3 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) {
    HEAP32[$ss >> 2] = 772;
    HEAP32[$ss + 64 >> 2] = 812;
    HEAP32[$2 >> 2] = 792;
    HEAP32[$3 >> 2] = 1104;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
    STACKTOP = sp;
    return;
   }
  }
  $28 = ___cxa_find_matching_catch() | 0;
  HEAP32[$ss >> 2] = 772;
  HEAP32[$ss + 64 >> 2] = 812;
  HEAP32[$2 >> 2] = 792;
  HEAP32[$3 >> 2] = 1104;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($12);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
  ___resumeException($28 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 ___resumeException($$01$i | 0);
}

function __ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEEC2ERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $7 = 0, $8 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$__x >> 2] | 0;
 $7 = $3 - $4 | 0;
 $8 = ($7 | 0) / 40 | 0;
 if (($3 | 0) == ($4 | 0)) {
  STACKTOP = sp;
  return;
 }
 if ($8 >>> 0 > 107374182) {
  __THREW__ = 0;
  invoke_vi(181, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if ($11 & 1) label = 13; else label = 4;
 } else label = 4;
 do if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) label = 13; else {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$1 >> 2] = $13 + ($8 * 40 | 0);
   $17 = HEAP32[$__x >> 2] | 0;
   $18 = HEAP32[$2 >> 2] | 0;
   if (($17 | 0) == ($18 | 0)) {
    STACKTOP = sp;
    return;
   } else {
    $$01$i = $17;
    $20 = $13;
   }
   while (1) {
    if (!$20) $33 = 0; else {
     __THREW__ = 0;
     invoke_vii(40, $20 | 0, $$01$i | 0);
     $22 = __THREW__;
     __THREW__ = 0;
     if ($22 & 1) {
      label = 12;
      break;
     }
     $24 = $20 + 12 | 0;
     $25 = $$01$i + 12 | 0;
     HEAP32[$24 + 0 >> 2] = HEAP32[$25 + 0 >> 2];
     HEAP32[$24 + 4 >> 2] = HEAP32[$25 + 4 >> 2];
     HEAP32[$24 + 8 >> 2] = HEAP32[$25 + 8 >> 2];
     HEAP32[$24 + 12 >> 2] = HEAP32[$25 + 12 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $20 + 28 | 0, $$01$i + 28 | 0);
     $28 = __THREW__;
     __THREW__ = 0;
     if ($28 & 1) {
      label = 10;
      break;
     }
     $33 = HEAP32[$0 >> 2] | 0;
    }
    $32 = $33 + 40 | 0;
    HEAP32[$0 >> 2] = $32;
    $$01$i = $$01$i + 40 | 0;
    if (($$01$i | 0) == ($18 | 0)) {
     label = 20;
     break;
    } else $20 = $32;
   }
   if ((label | 0) == 10) {
    $30 = ___cxa_find_matching_catch() | 0;
    $31 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
    $eh$lpad$body$index3Z2D = $31;
    $eh$lpad$body$indexZ2D = $30;
    break;
   } else if ((label | 0) == 12) {
    $36 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index3Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $36;
    break;
   } else if ((label | 0) == 20) {
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 if ((label | 0) == 13) {
  $38 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index3Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $38;
 }
 $40 = HEAP32[$this >> 2] | 0;
 if (!$40) ___resumeException($eh$lpad$body$indexZ2D | 0);
 $42 = HEAP32[$0 >> 2] | 0;
 if (($42 | 0) == ($40 | 0)) $49 = $40; else {
  $45 = $42;
  do {
   $44 = $45 + -40 | 0;
   HEAP32[$0 >> 2] = $44;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($45 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($44);
   $45 = HEAP32[$0 >> 2] | 0;
  } while (($45 | 0) != ($40 | 0));
  $49 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($49);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $13 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $46 = 0, $47 = 0, $48 = 0, $56 = 0, $59 = 0, $71 = 0, $83 = 0, $84 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $83 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $83 = 1;
   break;
  } else {
   $83 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($83) {
   $$pre$i3$i$i915 = $13;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($83) label = 16; else $$pre$i3$i$i915 = 0;
 if ((label | 0) == 16) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  STACKTOP = sp;
  return;
 }
 $28 = HEAP32[$__b >> 2] | 0;
 $30 = HEAP32[$28 + 12 >> 2] | 0;
 if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
 if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i, 0) | 0) << 24 >> 24 != 37) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  STACKTOP = sp;
  return;
 }
 $46 = HEAP32[$__b >> 2] | 0;
 $47 = $46 + 12 | 0;
 $48 = HEAP32[$47 >> 2] | 0;
 if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
  FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0;
  $56 = HEAP32[$__b >> 2] | 0;
 } else {
  HEAP32[$47 >> 2] = $48 + 4;
  $56 = $46;
 }
 do if (!$56) $84 = 1; else {
  $59 = HEAP32[$56 + 12 >> 2] | 0;
  if (($59 | 0) == (HEAP32[$56 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 36 >> 2] & 127]($56) | 0; else $$0$i$i$i$i1 = HEAP32[$59 >> 2] | 0;
  if (($$0$i$i$i$i1 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $84 = 1;
   break;
  } else {
   $84 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i3$i$i915) label = 38; else {
  $71 = HEAP32[$$pre$i3$i$i915 + 12 >> 2] | 0;
  if (($71 | 0) == (HEAP32[$$pre$i3$i$i915 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i915 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i915) | 0; else $$0$i$i1$i$i7 = HEAP32[$71 >> 2] | 0;
  if (($$0$i$i1$i$i7 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 38;
   break;
  }
  if ($84) {
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 38) if (!$84) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $13 = 0, $16 = 0, $26 = 0, $28 = 0, $3 = 0, $41 = 0, $42 = 0, $43 = 0, $51 = 0, $54 = 0, $66 = 0, $78 = 0, $79 = 0, $80 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1 : while (1) {
  $0 = HEAP32[$__b >> 2] | 0;
  do if (!$0) $78 = 1; else {
   $3 = HEAP32[$0 + 12 >> 2] | 0;
   if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
   if (($$0$i$i$i$i | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $78 = 1;
    break;
   } else {
    $78 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $13 = HEAP32[$__e >> 2] | 0;
  do if (!$13) label = 15; else {
   $16 = HEAP32[$13 + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
   if (($$0$i$i1$i$i | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 15;
    break;
   } else if ($78) {
    $79 = $13;
    break;
   } else {
    $$pre$i3$i$i9 = $13;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else $79 = 0;
  }
  $26 = HEAP32[$__b >> 2] | 0;
  $28 = HEAP32[$26 + 12 >> 2] | 0;
  if (($28 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 127]($26) | 0; else $$0$i$i = HEAP32[$28 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 8192, $$0$i$i) | 0)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b >> 2] | 0;
  $42 = $41 + 12 | 0;
  $43 = HEAP32[$42 >> 2] | 0;
  if (($43 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 40 >> 2] & 127]($41) | 0;
   continue;
  } else {
   HEAP32[$42 >> 2] = $43 + 4;
   continue;
  }
 }
 $51 = HEAP32[$__b >> 2] | 0;
 do if (!$51) $80 = 1; else {
  $54 = HEAP32[$51 + 12 >> 2] | 0;
  if (($54 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 36 >> 2] & 127]($51) | 0; else $$0$i$i$i$i1 = HEAP32[$54 >> 2] | 0;
  if (($$0$i$i$i$i1 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $80 = 1;
   break;
  } else {
   $80 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i3$i$i9) label = 37; else {
  $66 = HEAP32[$$pre$i3$i$i9 + 12 >> 2] | 0;
  if (($66 | 0) == (HEAP32[$$pre$i3$i$i9 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i9 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i9) | 0; else $$0$i$i1$i$i7 = HEAP32[$66 >> 2] | 0;
  if (($$0$i$i1$i$i7 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 37;
   break;
  }
  if ($80) {
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 37) if (!$80) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$01 = 0, $$01$i = 0, $$01$i7 = 0, $$02 = 0, $0 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $21 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $__ndflt = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__ndflt = sp;
 HEAP32[$__ndflt + 0 >> 2] = 0;
 HEAP32[$__ndflt + 4 >> 2] = 0;
 HEAP32[$__ndflt + 8 >> 2] = 0;
 $0 = HEAP8[$__dflt >> 0] | 0;
 if (!($0 & 1)) {
  $12 = $__dflt + 1 | 0;
  $13 = ($0 & 255) >>> 1;
  $14 = $__dflt + 1 | 0;
 } else {
  $4 = HEAP32[$__dflt + 8 >> 2] | 0;
  $12 = $4;
  $13 = HEAP32[$__dflt + 4 >> 2] | 0;
  $14 = $4;
 }
 $11 = $12 + $13 | 0;
 do if ($14 >>> 0 < $11 >>> 0) {
  $$01$i7 = $14;
  do {
   __THREW__ = 0;
   invoke_vii(44, $__ndflt | 0, HEAP8[$$01$i7 >> 0] | 0);
   $21 = __THREW__;
   __THREW__ = 0;
   if ($21 & 1) {
    label = 12;
    break;
   }
   $$01$i7 = $$01$i7 + 1 | 0;
  } while (($$01$i7 | 0) != ($11 | 0));
  if ((label | 0) == 12) {
   $36 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $36;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $27 = ($__c | 0) == -1 ? -1 : $__c << 1;
  if (!(HEAP8[$__ndflt >> 0] & 1)) {
   $49 = $27;
   label = 10;
  } else {
   $31 = $27;
   $32 = HEAP32[$__ndflt + 8 >> 2] | 0;
   label = 11;
  }
 } else {
  $49 = ($__c | 0) == -1 ? -1 : $__c << 1;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  $31 = $49;
  $32 = $__ndflt + 1 | 0;
  label = 11;
 }
 do if ((label | 0) == 11) {
  __THREW__ = 0;
  $33 = invoke_iiiii(14, $31 | 0, $__set | 0, $__msgid | 0, $32 | 0) | 0;
  $34 = __THREW__;
  __THREW__ = 0;
  if ($34 & 1) {
   $38 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $38;
   $lpad$phi$index2 = tempRet0;
   break;
  };
  HEAP32[$agg$result + 0 >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  $40 = _strlen($33 | 0) | 0;
  $41 = $33 + $40 | 0;
  if (($40 | 0) > 0) $$01$i = $33; else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
   STACKTOP = sp;
   return;
  }
  while (1) {
   __THREW__ = 0;
   invoke_vii(44, $agg$result | 0, HEAP8[$$01$i >> 0] | 0);
   $44 = __THREW__;
   __THREW__ = 0;
   if ($44 & 1) break;
   $$01$i = $$01$i + 1 | 0;
   if (($$01$i | 0) == ($41 | 0)) {
    label = 19;
    break;
   }
  }
  if ((label | 0) == 19) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
   STACKTOP = sp;
   return;
  }
  $47 = ___cxa_find_matching_catch() | 0;
  $48 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg$result);
  $$01 = $47;
  $$02 = $48;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
  ___resumeException($$01 | 0);
 } while (0);
 $$01 = $lpad$phi$index;
 $$02 = $lpad$phi$index2;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
 ___resumeException($$01 | 0);
}

function __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this, $heap) {
 $this = $this | 0;
 $heap = $heap | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i20$i = 0, $$0$i$i$i22$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i24$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i18$i = 0, $$idx$val$i4047$i = 0, $$idx1$val = 0, $$idx1$val$i = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $25 = 0, $27 = 0, $30 = 0, $34 = 0, $37 = 0, $40 = 0, $42 = 0, $45 = 0, $51 = 0, sp = 0;
 sp = STACKTOP;
 $$idx$val = HEAP32[$this + 12 >> 2] | 0;
 $$idx1$val = HEAP32[$this + 16 >> 2] | 0;
 if (($$idx$val | 0) == ($$idx1$val | 0)) {
  STACKTOP = sp;
  return;
 } else $2 = $$idx$val;
 do {
  if (HEAP32[$2 + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$2 + 48 >> 2] | 0);
  if (HEAP32[$2 + 56 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$2 + 64 >> 2] | 0);
  $15 = HEAP32[$2 + 116 >> 2] | 0;
  if ($15) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, $15);
  $18 = HEAP32[$2 + 120 >> 2] | 0;
  if ($18) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, $18);
  $$idx$val$i$i = HEAP32[$2 + 128 >> 2] | 0;
  $20 = $2 + 132 | 0;
  if (($$idx$val$i$i | 0) != ($20 | 0)) {
   $$idx$val$i4047$i = $$idx$val$i$i;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$$idx$val$i4047$i + 20 >> 2] | 0);
    $25 = HEAP32[$$idx$val$i4047$i + 4 >> 2] | 0;
    if (!$25) {
     $$0$i$i$i22$i = $$idx$val$i4047$i;
     while (1) {
      $30 = HEAP32[$$0$i$i$i22$i + 8 >> 2] | 0;
      if ((HEAP32[$30 >> 2] | 0) == ($$0$i$i$i22$i | 0)) {
       $$01$i$i$i24$i = $30;
       break;
      } else $$0$i$i$i22$i = $30;
     }
    } else {
     $$0$i$i$i$i20$i = $25;
     while (1) {
      $27 = HEAP32[$$0$i$i$i$i20$i >> 2] | 0;
      if (!$27) {
       $$01$i$i$i24$i = $$0$i$i$i$i20$i;
       break;
      } else $$0$i$i$i$i20$i = $27;
     }
    }
    if (($$01$i$i$i24$i | 0) == ($20 | 0)) break; else $$idx$val$i4047$i = $$01$i$i$i24$i;
   }
  }
  $$idx$val$i18$i = HEAP32[$2 + 92 >> 2] | 0;
  $34 = $2 + 96 | 0;
  if (($$idx$val$i18$i | 0) != ($34 | 0)) {
   $37 = $$idx$val$i18$i;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$37 + 20 >> 2] | 0);
    $40 = HEAP32[$37 + 4 >> 2] | 0;
    if (!$40) {
     $$0$i$i$i$i = $37;
     while (1) {
      $45 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$45 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
       $$01$i$i$i$i = $45;
       break;
      } else $$0$i$i$i$i = $45;
     }
    } else {
     $$0$i$i$i$i$i = $40;
     while (1) {
      $42 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
      if (!$42) {
       $$01$i$i$i$i = $$0$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i = $42;
     }
    }
    if (($$01$i$i$i$i | 0) == ($34 | 0)) break; else $37 = $$01$i$i$i$i;
   }
  }
  $$idx$val$i = HEAP32[$2 + 104 >> 2] | 0;
  $$idx1$val$i = HEAP32[$2 + 108 >> 2] | 0;
  if (($$idx$val$i | 0) != ($$idx1$val$i | 0)) {
   $51 = $$idx$val$i;
   do {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$51 >> 2] | 0);
    $51 = $51 + 4 | 0;
   } while (($51 | 0) != ($$idx1$val$i | 0));
  }
  $2 = $2 + 144 | 0;
 } while (($2 | 0) != ($$idx1$val | 0));
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIcE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $12 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $38 = 0, $4 = 0, $40 = 0, $46 = 0, $51 = 0, $6 = 0, $60 = 0, $64 = 0, $8 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$09 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 if (HEAP8[$0 >> 0] | 0) {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (!$__consume) {
   $$0 = $4;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP32[$3 >> 2] = -1;
  HEAP8[$0 >> 0] = 0;
  $$0 = $4;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $6 = HEAP32[$this + 44 >> 2] | 0;
 $8 = ($6 | 0) > 1 ? $6 : 1;
 L8 : do if (($8 | 0) > 0) {
  $10 = $this + 32 | 0;
  $__i$09 = 0;
  while (1) {
   $12 = _getc(HEAP32[$10 >> 2] | 0) | 0;
   if (($12 | 0) == -1) {
    $$0 = -1;
    break;
   }
   HEAP8[$__extbuf + $__i$09 >> 0] = $12;
   $__i$09 = $__i$09 + 1 | 0;
   if (($__i$09 | 0) >= ($8 | 0)) break L8;
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 L15 : do if (!(HEAP8[$this + 53 >> 0] | 0)) {
  $21 = $this + 40 | 0;
  $22 = $this + 36 | 0;
  $23 = $__1buf + 1 | 0;
  $24 = $this + 32 | 0;
  $__nread$0 = $8;
  while (1) {
   $26 = HEAP32[$21 >> 2] | 0;
   $27 = $26;
   $29 = HEAP32[$27 >> 2] | 0;
   $32 = HEAP32[$27 + 4 >> 2] | 0;
   $33 = HEAP32[$22 >> 2] | 0;
   $34 = $__extbuf + $__nread$0 | 0;
   $38 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$33 >> 2] | 0) + 16 >> 2] & 15]($33, $26, $__extbuf, $34, $__enxt, $__1buf, $23, $__inxt) | 0;
   if (($38 | 0) == 2) {
    $$0 = -1;
    label = 23;
    break;
   } else if (($38 | 0) == 3) {
    label = 14;
    break;
   } else if (($38 | 0) != 1) {
    $__nread$2 = $__nread$0;
    break L15;
   }
   $40 = HEAP32[$21 >> 2] | 0;
   HEAP32[$40 >> 2] = $29;
   HEAP32[$40 + 4 >> 2] = $32;
   if (($__nread$0 | 0) == 8) {
    $$0 = -1;
    label = 23;
    break;
   }
   $46 = _getc(HEAP32[$24 >> 2] | 0) | 0;
   if (($46 | 0) == -1) {
    $$0 = -1;
    label = 23;
    break;
   }
   HEAP8[$34 >> 0] = $46;
   $__nread$0 = $__nread$0 + 1 | 0;
  }
  if ((label | 0) == 14) {
   HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
   $__nread$2 = $__nread$0;
   break;
  } else if ((label | 0) == 23) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
  $__nread$2 = $8;
 } while (0);
 do if ($__consume) {
  $60 = HEAP8[$__1buf >> 0] | 0;
  HEAP32[$this + 48 >> 2] = $60 & 255;
  $64 = $60;
 } else {
  $51 = $this + 32 | 0;
  $__i2$0 = $__nread$2;
  while (1) {
   if (($__i2$0 | 0) <= 0) {
    label = 21;
    break;
   }
   $__i2$0 = $__i2$0 + -1 | 0;
   if ((_ungetc(HEAPU8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$51 >> 2] | 0) | 0) == -1) {
    $$0 = -1;
    label = 23;
    break;
   }
  }
  if ((label | 0) == 21) {
   $64 = HEAP8[$__1buf >> 0] | 0;
   break;
  } else if ((label | 0) == 23) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 $$0 = $64 & 255;
 STACKTOP = sp;
 return $$0 | 0;
}

function _scanexp($f, $pok) {
 $f = $f | 0;
 $pok = $pok | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $2 = 0, $20 = 0, $36 = 0, $47 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $76 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $96 = 0, $97 = 0, $c$0 = 0, $c$1$be = 0, $c$116 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$29 = 0, $c$3$be = 0, $neg$0 = 0, $x$017 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $f + 100 | 0;
 if ($1 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
  HEAP32[$0 >> 2] = $1 + 1;
  $9 = HEAPU8[$1 >> 0] | 0;
 } else $9 = ___shgetc($f) | 0;
 if (($9 | 0) == 43 | ($9 | 0) == 45) {
  $11 = HEAP32[$0 >> 2] | 0;
  $12 = ($9 | 0) == 45 & 1;
  if ($11 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $11 + 1;
   $20 = HEAPU8[$11 >> 0] | 0;
  } else $20 = ___shgetc($f) | 0;
  if (($20 + -48 | 0) >>> 0 > 9 & ($pok | 0) != 0) if (!(HEAP32[$2 >> 2] | 0)) {
   $c$0 = $20;
   $neg$0 = $12;
  } else {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   $c$0 = $20;
   $neg$0 = $12;
  } else {
   $c$0 = $20;
   $neg$0 = $12;
  }
 } else {
  $c$0 = $9;
  $neg$0 = 0;
 }
 if (($c$0 + -48 | 0) >>> 0 > 9) {
  if (!(HEAP32[$2 >> 2] | 0)) {
   $96 = -2147483648;
   $97 = 0;
   tempRet0 = $96;
   STACKTOP = sp;
   return $97 | 0;
  }
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  $96 = -2147483648;
  $97 = 0;
  tempRet0 = $96;
  STACKTOP = sp;
  return $97 | 0;
 } else {
  $c$116 = $c$0;
  $x$017 = 0;
 }
 while (1) {
  $x$017 = $c$116 + -48 + ($x$017 * 10 | 0) | 0;
  $36 = HEAP32[$0 >> 2] | 0;
  if ($36 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $36 + 1;
   $c$1$be = HEAPU8[$36 >> 0] | 0;
  } else $c$1$be = ___shgetc($f) | 0;
  if (!(($c$1$be + -48 | 0) >>> 0 < 10 & ($x$017 | 0) < 214748364)) break; else $c$116 = $c$1$be;
 }
 $47 = (($x$017 | 0) < 0) << 31 >> 31;
 if (($c$1$be + -48 | 0) >>> 0 < 10) {
  $52 = $x$017;
  $53 = $47;
  $c$29 = $c$1$be;
  while (1) {
   $54 = ___muldi3($52 | 0, $53 | 0, 10, 0) | 0;
   $55 = tempRet0;
   $58 = _i64Add($c$29 | 0, (($c$29 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
   $60 = _i64Add($58 | 0, tempRet0 | 0, $54 | 0, $55 | 0) | 0;
   $61 = tempRet0;
   $62 = HEAP32[$0 >> 2] | 0;
   if ($62 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $62 + 1;
    $c$2$be = HEAPU8[$62 >> 0] | 0;
   } else $c$2$be = ___shgetc($f) | 0;
   if (($c$2$be + -48 | 0) >>> 0 < 10 & (($61 | 0) < 21474836 | ($61 | 0) == 21474836 & $60 >>> 0 < 2061584302)) {
    $52 = $60;
    $53 = $61;
    $c$29 = $c$2$be;
   } else {
    $90 = $60;
    $91 = $61;
    $c$2$lcssa = $c$2$be;
    break;
   }
  }
 } else {
  $90 = $x$017;
  $91 = $47;
  $c$2$lcssa = $c$1$be;
 }
 if (($c$2$lcssa + -48 | 0) >>> 0 < 10) do {
  $76 = HEAP32[$0 >> 2] | 0;
  if ($76 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$0 >> 2] = $76 + 1;
   $c$3$be = HEAPU8[$76 >> 0] | 0;
  } else $c$3$be = ___shgetc($f) | 0;
 } while (($c$3$be + -48 | 0) >>> 0 < 10);
 if (HEAP32[$2 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
 $89 = ($neg$0 | 0) != 0;
 $92 = _i64Subtract(0, 0, $90 | 0, $91 | 0) | 0;
 $96 = $89 ? tempRet0 : $91;
 $97 = $89 ? $92 : $90;
 tempRet0 = $96;
 STACKTOP = sp;
 return $97 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $20 = 0, $23 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $49 = 0, $50 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $8 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  FUNCTION_TABLE_viiiiii[$8 & 31]($agg$result, $this, $$byval_copy, $__iob, $__fl, $__v & 1);
  STACKTOP = sp;
  return;
 }
 __ZNKSt3__18ios_base6getlocEv($1, $__iob);
 __THREW__ = 0;
 $11 = invoke_iii(22, $1 | 0, 45952) | 0;
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $55 = ___cxa_find_matching_catch() | 0;
  $56 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
  $$0 = $55;
  $$01 = $56;
  ___resumeException($$0 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
 $15 = HEAP32[$11 >> 2] | 0;
 if ($__v) FUNCTION_TABLE_vii[HEAP32[$15 + 24 >> 2] & 127]($__nm, $11); else FUNCTION_TABLE_vii[HEAP32[$15 + 28 >> 2] & 127]($__nm, $11);
 $20 = HEAP8[$__nm >> 0] | 0;
 if (!($20 & 1)) {
  $25 = $__nm + 4 | 0;
  $$ph = $25;
  $$pre$phi4Z2D = $__nm + 8 | 0;
  $$pre$phiZ2D = $25;
 } else {
  $23 = $__nm + 8 | 0;
  $$ph = HEAP32[$23 >> 2] | 0;
  $$pre$phi4Z2D = $23;
  $$pre$phiZ2D = $__nm + 4 | 0;
 }
 $27 = $20;
 $36 = $$ph;
 while (1) {
  if (!($27 & 1)) {
   $34 = $$pre$phiZ2D;
   $35 = ($27 & 255) >>> 1;
  } else {
   $34 = HEAP32[$$pre$phi4Z2D >> 2] | 0;
   $35 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  }
  if (($36 | 0) == ($34 + ($35 << 2) | 0)) {
   label = 24;
   break;
  }
  $38 = HEAP32[$36 >> 2] | 0;
  $39 = HEAP32[$__s >> 2] | 0;
  if ($39) {
   $41 = $39 + 24 | 0;
   $42 = HEAP32[$41 >> 2] | 0;
   if (($42 | 0) == (HEAP32[$39 + 28 >> 2] | 0)) {
    __THREW__ = 0;
    $49 = invoke_iii(HEAP32[(HEAP32[$39 >> 2] | 0) + 52 >> 2] | 0, $39 | 0, $38 | 0) | 0;
    $50 = __THREW__;
    __THREW__ = 0;
    if ($50 & 1) {
     label = 23;
     break;
    } else $$0$i$i = $49;
   } else {
    HEAP32[$41 >> 2] = $42 + 4;
    HEAP32[$42 >> 2] = $38;
    $$0$i$i = $38;
   }
   if (($$0$i$i | 0) == -1) HEAP32[$__s >> 2] = 0;
  }
  $27 = HEAP8[$__nm >> 0] | 0;
  $36 = $36 + 4 | 0;
 }
 if ((label | 0) == 23) {
  $58 = ___cxa_find_matching_catch() | 0;
  $59 = tempRet0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__nm);
  $$0 = $58;
  $$01 = $59;
  ___resumeException($$0 | 0);
 } else if ((label | 0) == 24) {
  HEAP32[$agg$result >> 2] = HEAP32[$__s >> 2];
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__nm);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $52 = 0, $53 = 0, $57 = 0, $58 = 0, $60 = 0, $61 = 0, $8 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  FUNCTION_TABLE_viiiiii[$8 & 31]($agg$result, $this, $$byval_copy, $__iob, $__fl, $__v & 1);
  STACKTOP = sp;
  return;
 }
 __ZNKSt3__18ios_base6getlocEv($1, $__iob);
 __THREW__ = 0;
 $11 = invoke_iii(22, $1 | 0, 45944) | 0;
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $57 = ___cxa_find_matching_catch() | 0;
  $58 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
  $$0 = $57;
  $$01 = $58;
  ___resumeException($$0 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$1 >> 2] | 0) | 0;
 $15 = HEAP32[$11 >> 2] | 0;
 if ($__v) FUNCTION_TABLE_vii[HEAP32[$15 + 24 >> 2] & 127]($__nm, $11); else FUNCTION_TABLE_vii[HEAP32[$15 + 28 >> 2] & 127]($__nm, $11);
 $20 = HEAP8[$__nm >> 0] | 0;
 if (!($20 & 1)) {
  $25 = $__nm + 1 | 0;
  $$ph = $25;
  $$pre$phi4Z2D = $25;
  $$pre$phi6Z2D = $__nm + 8 | 0;
 } else {
  $23 = $__nm + 8 | 0;
  $$ph = HEAP32[$23 >> 2] | 0;
  $$pre$phi4Z2D = $__nm + 1 | 0;
  $$pre$phi6Z2D = $23;
 }
 $26 = $__nm + 4 | 0;
 $28 = $20;
 $37 = $$ph;
 L17 : while (1) {
  if (!($28 & 1)) {
   $35 = $$pre$phi4Z2D;
   $36 = ($28 & 255) >>> 1;
  } else {
   $35 = HEAP32[$$pre$phi6Z2D >> 2] | 0;
   $36 = HEAP32[$26 >> 2] | 0;
  }
  if (($37 | 0) == ($35 + $36 | 0)) {
   label = 24;
   break;
  }
  $39 = HEAP8[$37 >> 0] | 0;
  $40 = HEAP32[$__s >> 2] | 0;
  do if ($40) {
   $42 = $40 + 24 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (($43 | 0) != (HEAP32[$40 + 28 >> 2] | 0)) {
    HEAP32[$42 >> 2] = $43 + 1;
    HEAP8[$43 >> 0] = $39;
    break;
   }
   __THREW__ = 0;
   $52 = invoke_iii(HEAP32[(HEAP32[$40 >> 2] | 0) + 52 >> 2] | 0, $40 | 0, $39 & 255 | 0) | 0;
   $53 = __THREW__;
   __THREW__ = 0;
   if ($53 & 1) {
    label = 23;
    break L17;
   }
   if (($52 | 0) == -1) HEAP32[$__s >> 2] = 0;
  } while (0);
  $28 = HEAP8[$__nm >> 0] | 0;
  $37 = $37 + 1 | 0;
 }
 if ((label | 0) == 23) {
  $60 = ___cxa_find_matching_catch() | 0;
  $61 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nm);
  $$0 = $60;
  $$01 = $61;
  ___resumeException($$0 | 0);
 } else if ((label | 0) == 24) {
  HEAP32[$agg$result >> 2] = HEAP32[$__s >> 2];
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nm);
  STACKTOP = sp;
  return;
 }
}

function _wcsrtombs($s, $ws, $n, $st) {
 $s = $s | 0;
 $ws = $ws | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$01$lcssa = 0, $$0125 = 0, $$026 = 0, $$1 = 0, $$13 = 0, $$215 = 0, $$24$lcssa = 0, $$2424 = 0, $$3 = 0, $$35 = 0, $$414 = 0, $$5 = 0, $$pn = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $46 = 0, $5 = 0, $7 = 0, $buf = 0, $ws2$07 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $buf = sp;
 if (!$s) {
  $2 = HEAP32[$ws >> 2] | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  if (!$3) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$026 = 0;
   $5 = $3;
   $ws2$07 = $2;
  }
  while (1) {
   if ($5 >>> 0 > 127) {
    $7 = _wcrtomb($buf, $5, 0) | 0;
    if (($7 | 0) == -1) {
     $$0 = -1;
     label = 26;
     break;
    } else $$pn = $7;
   } else $$pn = 1;
   $$13 = $$pn + $$026 | 0;
   $ws2$07 = $ws2$07 + 4 | 0;
   $5 = HEAP32[$ws2$07 >> 2] | 0;
   if (!$5) {
    $$0 = $$13;
    label = 26;
    break;
   } else $$026 = $$13;
  }
  if ((label | 0) == 26) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 L14 : do if ($n >>> 0 > 3) {
  $$0125 = $s;
  $$2424 = $n;
  $14 = HEAP32[$ws >> 2] | 0;
  while (1) {
   $13 = HEAP32[$14 >> 2] | 0;
   if (($13 + -1 | 0) >>> 0 > 126) {
    if (!$13) break;
    $19 = _wcrtomb($$0125, $13, 0) | 0;
    if (($19 | 0) == -1) {
     $$0 = -1;
     label = 26;
     break;
    }
    $$1 = $$0125 + $19 | 0;
    $$35 = $$2424 - $19 | 0;
    $27 = $14;
   } else {
    HEAP8[$$0125 >> 0] = $13;
    $$1 = $$0125 + 1 | 0;
    $$35 = $$2424 + -1 | 0;
    $27 = HEAP32[$ws >> 2] | 0;
   }
   $14 = $27 + 4 | 0;
   HEAP32[$ws >> 2] = $14;
   if ($$35 >>> 0 <= 3) {
    $$01$lcssa = $$1;
    $$24$lcssa = $$35;
    break L14;
   } else {
    $$0125 = $$1;
    $$2424 = $$35;
   }
  }
  if ((label | 0) == 26) {
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP8[$$0125 >> 0] = 0;
  HEAP32[$ws >> 2] = 0;
  $$0 = $n - $$2424 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$01$lcssa = $s;
  $$24$lcssa = $n;
 } while (0);
 if (!$$24$lcssa) {
  $$0 = $n;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$215 = $$01$lcssa;
 $$414 = $$24$lcssa;
 $30 = HEAP32[$ws >> 2] | 0;
 while (1) {
  $29 = HEAP32[$30 >> 2] | 0;
  if (($29 + -1 | 0) >>> 0 > 126) {
   if (!$29) {
    label = 19;
    break;
   }
   $35 = _wcrtomb($buf, $29, 0) | 0;
   if (($35 | 0) == -1) {
    $$0 = -1;
    label = 26;
    break;
   }
   if ($$414 >>> 0 < $35 >>> 0) {
    label = 22;
    break;
   }
   _wcrtomb($$215, HEAP32[$30 >> 2] | 0, 0) | 0;
   $$3 = $$215 + $35 | 0;
   $$5 = $$414 - $35 | 0;
   $46 = $30;
  } else {
   HEAP8[$$215 >> 0] = $29;
   $$3 = $$215 + 1 | 0;
   $$5 = $$414 + -1 | 0;
   $46 = HEAP32[$ws >> 2] | 0;
  }
  $30 = $46 + 4 | 0;
  HEAP32[$ws >> 2] = $30;
  if (!$$5) {
   $$0 = $n;
   label = 26;
   break;
  } else {
   $$215 = $$3;
   $$414 = $$5;
  }
 }
 if ((label | 0) == 19) {
  HEAP8[$$215 >> 0] = 0;
  HEAP32[$ws >> 2] = 0;
  $$0 = $n - $$414 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 22) {
  $$0 = $n - $$414 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 26) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__110__stdinbufIwE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $12 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $39 = 0, $4 = 0, $41 = 0, $47 = 0, $53 = 0, $6 = 0, $62 = 0, $8 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$09 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 if (HEAP8[$0 >> 0] | 0) {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (!$__consume) {
   $$0 = $4;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP32[$3 >> 2] = -1;
  HEAP8[$0 >> 0] = 0;
  $$0 = $4;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $6 = HEAP32[$this + 44 >> 2] | 0;
 $8 = ($6 | 0) > 1 ? $6 : 1;
 L8 : do if (($8 | 0) > 0) {
  $10 = $this + 32 | 0;
  $__i$09 = 0;
  while (1) {
   $12 = _getc(HEAP32[$10 >> 2] | 0) | 0;
   if (($12 | 0) == -1) {
    $$0 = -1;
    break;
   }
   HEAP8[$__extbuf + $__i$09 >> 0] = $12;
   $__i$09 = $__i$09 + 1 | 0;
   if (($__i$09 | 0) >= ($8 | 0)) break L8;
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 L15 : do if (!(HEAP8[$this + 53 >> 0] | 0)) {
  $21 = $this + 40 | 0;
  $22 = $this + 36 | 0;
  $23 = $__1buf + 4 | 0;
  $24 = $this + 32 | 0;
  $__nread$0 = $8;
  while (1) {
   $27 = HEAP32[$21 >> 2] | 0;
   $28 = $27;
   $30 = HEAP32[$28 >> 2] | 0;
   $33 = HEAP32[$28 + 4 >> 2] | 0;
   $34 = HEAP32[$22 >> 2] | 0;
   $35 = $__extbuf + $__nread$0 | 0;
   $39 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$34 >> 2] | 0) + 16 >> 2] & 15]($34, $27, $__extbuf, $35, $__enxt, $__1buf, $23, $__inxt) | 0;
   if (($39 | 0) == 2) {
    $$0 = -1;
    label = 22;
    break;
   } else if (($39 | 0) == 3) {
    label = 14;
    break;
   } else if (($39 | 0) != 1) {
    $__nread$2 = $__nread$0;
    break L15;
   }
   $41 = HEAP32[$21 >> 2] | 0;
   HEAP32[$41 >> 2] = $30;
   HEAP32[$41 + 4 >> 2] = $33;
   if (($__nread$0 | 0) == 8) {
    $$0 = -1;
    label = 22;
    break;
   }
   $47 = _getc(HEAP32[$24 >> 2] | 0) | 0;
   if (($47 | 0) == -1) {
    $$0 = -1;
    label = 22;
    break;
   }
   HEAP8[$35 >> 0] = $47;
   $__nread$0 = $__nread$0 + 1 | 0;
  }
  if ((label | 0) == 14) {
   HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
   $__nread$2 = $__nread$0;
   break;
  } else if ((label | 0) == 22) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
  $__nread$2 = $8;
 } while (0);
 if ($__consume) {
  $62 = HEAP32[$__1buf >> 2] | 0;
  HEAP32[$this + 48 >> 2] = $62;
  $$0 = $62;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $53 = $this + 32 | 0;
 $__i2$0 = $__nread$2;
 while (1) {
  if (($__i2$0 | 0) <= 0) break;
  $__i2$0 = $__i2$0 + -1 | 0;
  if ((_ungetc(HEAP8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$53 >> 2] | 0) | 0) == -1) {
   $$0 = -1;
   label = 22;
   break;
  }
 }
 if ((label | 0) == 22) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$0 = HEAP32[$__1buf >> 2] | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $20 = 0, $27 = 0, $38 = 0, $41 = 0, $43 = 0, $53 = 0, $58 = 0, $69 = 0, $7 = 0, $75 = 0, $80 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 do if ($mode & 2) if (($to_end - $to | 0) < 3) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $7 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $7 + 1;
  HEAP8[$7 >> 0] = -69;
  $9 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $9 + 1;
  HEAP8[$9 >> 0] = -65;
  break;
 } while (0);
 $11 = HEAP32[$frm_nxt >> 2] | 0;
 if ($11 >>> 0 >= $frm_end >>> 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $13 = $to_end;
 $15 = $11;
 L10 : while (1) {
  $14 = HEAP32[$15 >> 2] | 0;
  if (($14 & -2048 | 0) == 55296 | $14 >>> 0 > $Maxcode >>> 0) {
   $$0 = 2;
   label = 19;
   break;
  }
  do if ($14 >>> 0 < 128) {
   $20 = HEAP32[$to_nxt >> 2] | 0;
   if (($13 - $20 | 0) < 1) {
    $$0 = 1;
    label = 19;
    break L10;
   }
   HEAP32[$to_nxt >> 2] = $20 + 1;
   HEAP8[$20 >> 0] = $14;
  } else {
   if ($14 >>> 0 < 2048) {
    $27 = HEAP32[$to_nxt >> 2] | 0;
    if (($13 - $27 | 0) < 2) {
     $$0 = 1;
     label = 19;
     break L10;
    }
    HEAP32[$to_nxt >> 2] = $27 + 1;
    HEAP8[$27 >> 0] = $14 >>> 6 | 192;
    $38 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $38 + 1;
    HEAP8[$38 >> 0] = $14 & 63 | 128;
    break;
   }
   $41 = HEAP32[$to_nxt >> 2] | 0;
   $43 = $13 - $41 | 0;
   if ($14 >>> 0 < 65536) {
    if (($43 | 0) < 3) {
     $$0 = 1;
     label = 19;
     break L10;
    }
    HEAP32[$to_nxt >> 2] = $41 + 1;
    HEAP8[$41 >> 0] = $14 >>> 12 | 224;
    $53 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $53 + 1;
    HEAP8[$53 >> 0] = $14 >>> 6 & 63 | 128;
    $58 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $58 + 1;
    HEAP8[$58 >> 0] = $14 & 63 | 128;
    break;
   } else {
    if (($43 | 0) < 4) {
     $$0 = 1;
     label = 19;
     break L10;
    }
    HEAP32[$to_nxt >> 2] = $41 + 1;
    HEAP8[$41 >> 0] = $14 >>> 18 | 240;
    $69 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $69 + 1;
    HEAP8[$69 >> 0] = $14 >>> 12 & 63 | 128;
    $75 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $75 + 1;
    HEAP8[$75 >> 0] = $14 >>> 6 & 63 | 128;
    $80 = HEAP32[$to_nxt >> 2] | 0;
    HEAP32[$to_nxt >> 2] = $80 + 1;
    HEAP8[$80 >> 0] = $14 & 63 | 128;
    break;
   }
  } while (0);
  $15 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
  HEAP32[$frm_nxt >> 2] = $15;
  if ($15 >>> 0 >= $frm_end >>> 0) {
   $$0 = 0;
   label = 19;
   break;
  }
 }
 if ((label | 0) == 19) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZN5LocalC2ERK13LocationRangeRKNSt3__13mapIPK10IdentifierP3ASTNS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEES9_($this, $lr, $binds, $body) {
 $this = $this | 0;
 $lr = $lr | 0;
 $binds = $binds | 0;
 $body = $body | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $36 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$this >> 2] = 34168;
 $2 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($2, $lr);
 $3 = $this + 16 | 0;
 $4 = $lr + 12 | 0;
 HEAP32[$3 + 0 >> 2] = HEAP32[$4 + 0 >> 2];
 HEAP32[$3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 HEAP32[$3 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
 HEAP32[$3 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
 HEAP32[$this + 32 >> 2] = 10;
 $6 = $this + 36 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $this + 40 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this >> 2] = 34232;
 $9 = $this + 48 | 0;
 $10 = $this + 52 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$this + 56 >> 2] = 0;
 $12 = $this + 52 | 0;
 HEAP32[$9 >> 2] = $12;
 $13 = HEAP32[$binds >> 2] | 0;
 $14 = $binds + 4 | 0;
 if (($13 | 0) == ($14 | 0)) {
  $30 = $this + 60 | 0;
  HEAP32[$30 >> 2] = $body;
  STACKTOP = sp;
  return;
 }
 $17 = $13;
 while (1) {
  HEAP32[$0 >> 2] = $12;
  __THREW__ = 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  invoke_viiii(11, $1 | 0, $9 | 0, $$byval_copy | 0, $17 + 16 | 0);
  $18 = __THREW__;
  __THREW__ = 0;
  if ($18 & 1) break;
  $21 = HEAP32[$17 + 4 >> 2] | 0;
  if (!$21) {
   $$0$i$i$i$i$i = $17;
   while (1) {
    $26 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$26 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$01$i$i$i$i$i = $26;
     break;
    } else $$0$i$i$i$i$i = $26;
   }
  } else {
   $$0$i$i$i$i$i$i = $21;
   while (1) {
    $23 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$23) {
     $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $23;
   }
  }
  if (($$01$i$i$i$i$i | 0) == ($14 | 0)) {
   label = 9;
   break;
  } else $17 = $$01$i$i$i$i$i;
 }
 if ((label | 0) == 9) {
  $30 = $this + 60 | 0;
  HEAP32[$30 >> 2] = $body;
  STACKTOP = sp;
  return;
 }
 $31 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($9, HEAP32[$10 >> 2] | 0);
 HEAP32[$this >> 2] = 34168;
 $34 = HEAP32[$6 >> 2] | 0;
 if (!$34) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
  ___resumeException($31 | 0);
 }
 $36 = HEAP32[$7 >> 2] | 0;
 if (($36 | 0) != ($34 | 0)) HEAP32[$7 >> 2] = $36 + (~(($36 + -4 - $34 | 0) >>> 2) << 2);
 __ZdlPv($34);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
 ___resumeException($31 | 0);
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $27 = 0, $29 = 0, $46 = 0, $47 = 0, $48 = 0, $56 = 0, $68 = 0, $69 = 0, $83 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__ct + 8 | 0;
 L1 : while (1) {
  $1 = HEAP32[$__b >> 2] | 0;
  do if (!$1) $13 = 0; else if ((HEAP32[$1 + 12 >> 2] | 0) == (HEAP32[$1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 36 >> 2] & 127]($1) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $13 = 0;
   break;
  } else {
   $13 = HEAP32[$__b >> 2] | 0;
   break;
  } else $13 = $1; while (0);
  $14 = ($13 | 0) == 0;
  $15 = HEAP32[$__e >> 2] | 0;
  do if (!$15) label = 12; else {
   if ((HEAP32[$15 + 12 >> 2] | 0) != (HEAP32[$15 + 16 >> 2] | 0)) if ($14) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 127]($15) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 12;
    break;
   } else if ($14) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
  } while (0);
  if ((label | 0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else $83 = 0;
  }
  $27 = HEAP32[$__b >> 2] | 0;
  $29 = HEAP32[$27 + 12 >> 2] | 0;
  if (($29 | 0) == (HEAP32[$27 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 127]($27) | 0; else $$0$i$i = HEAPU8[$29 >> 0] | 0;
  if (($$0$i$i & 255) << 24 >> 24 <= -1) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  if (!(HEAP16[(HEAP32[$0 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0;
   continue;
  } else {
   HEAP32[$47 >> 2] = $48 + 1;
   continue;
  }
 }
 $56 = HEAP32[$__b >> 2] | 0;
 do if (!$56) $68 = 0; else if ((HEAP32[$56 + 12 >> 2] | 0) == (HEAP32[$56 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 36 >> 2] & 127]($56) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $68 = 0;
  break;
 } else {
  $68 = HEAP32[$__b >> 2] | 0;
  break;
 } else $68 = $56; while (0);
 $69 = ($68 | 0) == 0;
 do if (!$$pre$i2$i$i6) label = 32; else {
  if ((HEAP32[$$pre$i2$i$i6 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i6 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i6 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i6) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 32;
   break;
  }
  if ($69) {
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 32) if (!$69) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this | 0;
 var $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46128] | 0) {
  $36 = HEAP32[11530] | 0;
  STACKTOP = sp;
  return $36 | 0;
 }
 if (!(___cxa_guard_acquire(46128) | 0)) {
  $36 = HEAP32[11530] | 0;
  STACKTOP = sp;
  return $36 | 0;
 }
 if (!(HEAP8[52776] | 0)) if (___cxa_guard_acquire(52776) | 0) {
  _memset(52608, 0, 168) | 0;
  ___cxa_atexit(195, 0, ___dso_handle | 0) | 0;
  ___cxa_guard_release(52776);
 }
 __THREW__ = 0;
 invoke_iii(42, 52608, 52784) | 0;
 $8 = __THREW__;
 __THREW__ = 0;
 if (!($8 & 1)) {
  __THREW__ = 0;
  invoke_iii(42, 52620, 52816) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   __THREW__ = 0;
   invoke_iii(42, 52632, 52848) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    __THREW__ = 0;
    invoke_iii(42, 52644, 52880) | 0;
    $14 = __THREW__;
    __THREW__ = 0;
    if (!($14 & 1)) {
     __THREW__ = 0;
     invoke_iii(42, 52656, 52920) | 0;
     $16 = __THREW__;
     __THREW__ = 0;
     if (!($16 & 1)) {
      __THREW__ = 0;
      invoke_iii(42, 52668, 52960) | 0;
      $18 = __THREW__;
      __THREW__ = 0;
      if (!($18 & 1)) {
       __THREW__ = 0;
       invoke_iii(42, 52680, 52992) | 0;
       $20 = __THREW__;
       __THREW__ = 0;
       if (!($20 & 1)) {
        __THREW__ = 0;
        invoke_iii(42, 52692, 53032) | 0;
        $22 = __THREW__;
        __THREW__ = 0;
        if (!($22 & 1)) {
         __THREW__ = 0;
         invoke_iii(42, 52704, 53048) | 0;
         $24 = __THREW__;
         __THREW__ = 0;
         if (!($24 & 1)) {
          __THREW__ = 0;
          invoke_iii(42, 52716, 53064) | 0;
          $26 = __THREW__;
          __THREW__ = 0;
          if (!($26 & 1)) {
           __THREW__ = 0;
           invoke_iii(42, 52728, 53080) | 0;
           $28 = __THREW__;
           __THREW__ = 0;
           if (!($28 & 1)) {
            __THREW__ = 0;
            invoke_iii(42, 52740, 53096) | 0;
            $30 = __THREW__;
            __THREW__ = 0;
            if (!($30 & 1)) {
             __THREW__ = 0;
             invoke_iii(42, 52752, 53112) | 0;
             $32 = __THREW__;
             __THREW__ = 0;
             if (!($32 & 1)) {
              __THREW__ = 0;
              invoke_iii(42, 52764, 53128) | 0;
              $34 = __THREW__;
              __THREW__ = 0;
              if (!($34 & 1)) {
               HEAP32[11530] = 52608;
               ___cxa_guard_release(46128);
               $36 = HEAP32[11530] | 0;
               STACKTOP = sp;
               return $36 | 0;
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 $37 = ___cxa_find_matching_catch() | 0;
 ___cxa_guard_abort(46128);
 ___resumeException($37 | 0);
 return 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this | 0;
 var $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46112] | 0) {
  $36 = HEAP32[11526] | 0;
  STACKTOP = sp;
  return $36 | 0;
 }
 if (!(___cxa_guard_acquire(46112) | 0)) {
  $36 = HEAP32[11526] | 0;
  STACKTOP = sp;
  return $36 | 0;
 }
 if (!(HEAP8[53312] | 0)) if (___cxa_guard_acquire(53312) | 0) {
  _memset(53144, 0, 168) | 0;
  ___cxa_atexit(194, 0, ___dso_handle | 0) | 0;
  ___cxa_guard_release(53312);
 }
 __THREW__ = 0;
 invoke_iii(19, 53144, 53320) | 0;
 $8 = __THREW__;
 __THREW__ = 0;
 if (!($8 & 1)) {
  __THREW__ = 0;
  invoke_iii(19, 53156, 53328) | 0;
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 53168, 53336) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    __THREW__ = 0;
    invoke_iii(19, 53180, 53344) | 0;
    $14 = __THREW__;
    __THREW__ = 0;
    if (!($14 & 1)) {
     __THREW__ = 0;
     invoke_iii(19, 53192, 53360) | 0;
     $16 = __THREW__;
     __THREW__ = 0;
     if (!($16 & 1)) {
      __THREW__ = 0;
      invoke_iii(19, 53204, 53376) | 0;
      $18 = __THREW__;
      __THREW__ = 0;
      if (!($18 & 1)) {
       __THREW__ = 0;
       invoke_iii(19, 53216, 53384) | 0;
       $20 = __THREW__;
       __THREW__ = 0;
       if (!($20 & 1)) {
        __THREW__ = 0;
        invoke_iii(19, 53228, 53400) | 0;
        $22 = __THREW__;
        __THREW__ = 0;
        if (!($22 & 1)) {
         __THREW__ = 0;
         invoke_iii(19, 53240, 53408) | 0;
         $24 = __THREW__;
         __THREW__ = 0;
         if (!($24 & 1)) {
          __THREW__ = 0;
          invoke_iii(19, 53252, 53416) | 0;
          $26 = __THREW__;
          __THREW__ = 0;
          if (!($26 & 1)) {
           __THREW__ = 0;
           invoke_iii(19, 53264, 53424) | 0;
           $28 = __THREW__;
           __THREW__ = 0;
           if (!($28 & 1)) {
            __THREW__ = 0;
            invoke_iii(19, 53276, 53432) | 0;
            $30 = __THREW__;
            __THREW__ = 0;
            if (!($30 & 1)) {
             __THREW__ = 0;
             invoke_iii(19, 53288, 53440) | 0;
             $32 = __THREW__;
             __THREW__ = 0;
             if (!($32 & 1)) {
              __THREW__ = 0;
              invoke_iii(19, 53300, 53448) | 0;
              $34 = __THREW__;
              __THREW__ = 0;
              if (!($34 & 1)) {
               HEAP32[11526] = 53144;
               ___cxa_guard_release(46112);
               $36 = HEAP32[11526] | 0;
               STACKTOP = sp;
               return $36 | 0;
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 $37 = ___cxa_find_matching_catch() | 0;
 ___cxa_guard_abort(46112);
 ___resumeException($37 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb($agg$result, $obj_) {
 $agg$result = $agg$result | 0;
 $obj_ = $obj_ | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01 = 0, $$01$i$i$i = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $23 = 0, $26 = 0, $28 = 0, $31 = 0, $35 = 0, $5 = 0, $7 = 0, $8 = 0, $counter = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 16 | 0;
 $counter = sp + 12 | 0;
 $1 = sp;
 HEAP32[$counter >> 2] = 0;
 $2 = $agg$result + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 HEAP32[$agg$result >> 2] = $agg$result + 4;
 __THREW__ = 0;
 invoke_viiii(20, $1 | 0, $obj_ | 0, $counter | 0, 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $12 = ___cxa_find_matching_catch() | 0;
  $$0 = $12;
  $$01 = tempRet0;
  $$pre$phiZ2D = $agg$result;
  $35 = HEAP32[$2 >> 2] | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($$pre$phiZ2D, $35);
  ___resumeException($$0 | 0);
 }
 $7 = HEAP32[$1 >> 2] | 0;
 $8 = $1 + 4 | 0;
 if (($7 | 0) == ($8 | 0)) {
  $10 = $1 + 4 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, $11);
  STACKTOP = sp;
  return;
 }
 $19 = $7;
 while (1) {
  if ((HEAP32[$19 + 20 >> 2] | 0) != 1) {
   __THREW__ = 0;
   invoke_viii(10, $0 | 0, $agg$result | 0, $19 + 16 | 0);
   $23 = __THREW__;
   __THREW__ = 0;
   if ($23 & 1) break;
  }
  $26 = HEAP32[$19 + 4 >> 2] | 0;
  if (!$26) {
   $$0$i$i$i = $19;
   while (1) {
    $31 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$31 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$01$i$i$i = $31;
     break;
    } else $$0$i$i$i = $31;
   }
  } else {
   $$0$i$i$i$i = $26;
   while (1) {
    $28 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$28) {
     $$01$i$i$i = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $28;
   }
  }
  if (($$01$i$i$i | 0) == ($8 | 0)) {
   label = 4;
   break;
  } else $19 = $$01$i$i$i;
 }
 if ((label | 0) == 4) {
  $10 = $1 + 4 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, $11);
  STACKTOP = sp;
  return;
 }
 $14 = ___cxa_find_matching_catch() | 0;
 $15 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$1 + 4 >> 2] | 0);
 $$0 = $14;
 $$01 = $15;
 $$pre$phiZ2D = $agg$result;
 $35 = HEAP32[$2 >> 2] | 0;
 __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($$pre$phiZ2D, $35);
 ___resumeException($$0 | 0);
}

function _mbsnrtowcs($wcs, $src, $n, $wn, $st) {
 $wcs = $wcs | 0;
 $src = $src | 0;
 $n = $n | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$0$lcssa = 0, $$014$ = 0, $$014$lcssa = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $17 = 0, $21 = 0, $22 = 0, $30 = 0, $32 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $cnt$0$lcssa = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$3 = 0, $s = 0, $wbuf = 0, $wcs$ = 0, $wn$ = 0, $ws$0$lcssa = 0, $ws$030 = 0, $ws$1 = 0, $ws$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $wbuf = sp + 8 | 0;
 $s = sp;
 $0 = HEAP32[$src >> 2] | 0;
 HEAP32[$s >> 2] = $0;
 $1 = ($wcs | 0) != 0;
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 L1 : do if (($0 | 0) != 0 & ($wn$ | 0) != 0) {
  $$01428 = $wn$;
  $$031 = $n;
  $32 = $0;
  $cnt$029 = 0;
  $ws$030 = $wcs$;
  while (1) {
   $4 = $$031 >>> 2;
   $5 = $4 >>> 0 >= $$01428 >>> 0;
   if (!($5 | $$031 >>> 0 > 131)) {
    $$0$lcssa = $$031;
    $$014$lcssa = $$01428;
    $17 = $32;
    $cnt$0$lcssa = $cnt$029;
    $ws$0$lcssa = $ws$030;
    label = 7;
    break L1;
   }
   $$014$ = $5 ? $$01428 : $4;
   $7 = $$031 - $$014$ | 0;
   $8 = _mbsrtowcs($ws$030, $s, $$014$, $st) | 0;
   if (($8 | 0) == -1) {
    $cnt$3 = -1;
    break L1;
   }
   if (($ws$030 | 0) == ($wbuf | 0)) {
    $$115 = $$01428;
    $ws$1 = $wbuf;
   } else {
    $$115 = $$01428 - $8 | 0;
    $ws$1 = $ws$030 + ($8 << 2) | 0;
   }
   $13 = $8 + $cnt$029 | 0;
   $14 = HEAP32[$s >> 2] | 0;
   if (($14 | 0) != 0 & ($$115 | 0) != 0) {
    $$01428 = $$115;
    $$031 = $7;
    $32 = $14;
    $cnt$029 = $13;
    $ws$030 = $ws$1;
   } else {
    $$0$lcssa = $7;
    $$014$lcssa = $$115;
    $17 = $14;
    $cnt$0$lcssa = $13;
    $ws$0$lcssa = $ws$1;
    label = 7;
    break;
   }
  }
 } else {
  $$0$lcssa = $n;
  $$014$lcssa = $wn$;
  $17 = $0;
  $cnt$0$lcssa = 0;
  $ws$0$lcssa = $wcs$;
  label = 7;
 } while (0);
 L9 : do if ((label | 0) == 7) if (($17 | 0) != 0 & ($$014$lcssa | 0) != 0 & ($$0$lcssa | 0) != 0) {
  $$2 = $$0$lcssa;
  $$3 = $$014$lcssa;
  $21 = $17;
  $cnt$2 = $cnt$0$lcssa;
  $ws$2 = $ws$0$lcssa;
  while (1) {
   $22 = _mbrtowc($ws$2, $21, $$2, $st) | 0;
   if (($22 + 2 | 0) >>> 0 < 3) break;
   $21 = (HEAP32[$s >> 2] | 0) + $22 | 0;
   HEAP32[$s >> 2] = $21;
   $$3 = $$3 + -1 | 0;
   $30 = $cnt$2 + 1 | 0;
   if (!(($$3 | 0) != 0 & ($$2 | 0) != ($22 | 0))) {
    $cnt$3 = $30;
    break L9;
   } else {
    $$2 = $$2 - $22 | 0;
    $cnt$2 = $30;
    $ws$2 = $ws$2 + 4 | 0;
   }
  }
  if (!$22) {
   HEAP32[$s >> 2] = 0;
   $cnt$3 = $cnt$2;
   break;
  } else if (($22 | 0) == -1) {
   $cnt$3 = -1;
   break;
  } else {
   HEAP32[$st >> 2] = 0;
   $cnt$3 = $cnt$2;
   break;
  }
 } else $cnt$3 = $cnt$0$lcssa; while (0);
 if (!$1) {
  STACKTOP = sp;
  return $cnt$3 | 0;
 }
 HEAP32[$src >> 2] = HEAP32[$s >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre$i2$i$i611 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $28 = 0, $30 = 0, $48 = 0, $49 = 0, $50 = 0, $58 = 0, $70 = 0, $71 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $12 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $12 = 0;
  break;
 } else {
  $12 = HEAP32[$__b >> 2] | 0;
  break;
 } else $12 = $0; while (0);
 $13 = ($12 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($13) $$pre$i2$i$i611 = $14; else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($13) label = 12; else $$pre$i2$i$i611 = 0;
 if ((label | 0) == 12) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  STACKTOP = sp;
  return;
 }
 $28 = HEAP32[$__b >> 2] | 0;
 $30 = HEAP32[$28 + 12 >> 2] | 0;
 if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
 if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $$0$i$i & 255, 0) | 0) << 24 >> 24 != 37) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  STACKTOP = sp;
  return;
 }
 $48 = HEAP32[$__b >> 2] | 0;
 $49 = $48 + 12 | 0;
 $50 = HEAP32[$49 >> 2] | 0;
 if (($50 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
  FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 40 >> 2] & 127]($48) | 0;
  $58 = HEAP32[$__b >> 2] | 0;
 } else {
  HEAP32[$49 >> 2] = $50 + 1;
  $58 = $48;
 }
 do if (!$58) $70 = 0; else if ((HEAP32[$58 + 12 >> 2] | 0) == (HEAP32[$58 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 127]($58) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $70 = 0;
  break;
 } else {
  $70 = HEAP32[$__b >> 2] | 0;
  break;
 } else $70 = $58; while (0);
 $71 = ($70 | 0) == 0;
 do if (!$$pre$i2$i$i611) label = 31; else {
  if ((HEAP32[$$pre$i2$i$i611 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i611 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i611 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i611) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 31;
   break;
  }
  if ($71) {
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 31) if (!$71) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__insert_uniqueIRKNS_4pairIKS7_S7_EEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEENS_21__tree_const_iteratorIS8_SP_iEEOT_($agg$result, $this, $__p, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__p = $__p | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent$i = 0, $__r$0$i = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i = sp + 4 | 0;
 $0 = sp;
 $1 = __Znwj(40) | 0;
 $2 = $1 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $__v | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $11;
 } else {
  $5 = $1 + 28 | 0;
  __THREW__ = 0;
  invoke_vii(40, $5 | 0, $__v + 12 | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if ($7 & 1) {
   $9 = ___cxa_find_matching_catch() | 0;
   $10 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
   $eh$lpad$body$i$index2Z2D = $10;
   $eh$lpad$body$i$indexZ2D = $9;
   break;
  }
  HEAP32[$0 >> 2] = HEAP32[$__p >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $15 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($this, $$byval_copy, $__parent$i, $2) | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (!$16) {
   $18 = HEAP32[$__parent$i >> 2] | 0;
   HEAP32[$1 >> 2] = 0;
   HEAP32[$1 + 4 >> 2] = 0;
   HEAP32[$1 + 8 >> 2] = $18;
   HEAP32[$15 >> 2] = $1;
   $22 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
   if (!$22) $26 = $1; else {
    HEAP32[$this >> 2] = $22;
    $26 = HEAP32[$15 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $26);
   $27 = $this + 8 | 0;
   HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 1;
   $__r$0$i = $1;
  } else $__r$0$i = $16;
  HEAP32[$agg$result >> 2] = $__r$0$i;
  if (($__r$0$i | 0) == ($1 | 0) | ($1 | 0) == 0) {
   STACKTOP = sp;
   return;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
  __ZdlPv($1);
  STACKTOP = sp;
  return;
 } while (0);
 if (!$1) ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 __ZdlPv($1);
 ___resumeException($eh$lpad$body$i$indexZ2D | 0);
}

function __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK13LocationRange($o, $loc) {
 $o = $o | 0;
 $loc = $loc | 0;
 var $0 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $28 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $47 = 0, $50 = 0, $53 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$loc >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$loc + 4 >> 2] | 0;
 if ($7) {
  if ($2) {
   $16 = $loc + 1 | 0;
   $17 = ($0 & 255) >>> 1;
  } else {
   $16 = HEAP32[$loc + 8 >> 2] | 0;
   $17 = HEAP32[$loc + 4 >> 2] | 0;
  }
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, $16, $17) | 0;
 }
 $18 = $loc + 12 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (!$19) {
  STACKTOP = sp;
  return $o | 0;
 }
 $21 = HEAP8[$loc >> 0] | 0;
 if (!($21 & 1)) $28 = ($21 & 255) >>> 1; else $28 = HEAP32[$loc + 4 >> 2] | 0;
 if (!$28) $32 = $19; else {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 40792, 1) | 0;
  $32 = HEAP32[$18 >> 2] | 0;
 }
 $30 = $loc + 20 | 0;
 if (($32 | 0) != (HEAP32[$30 >> 2] | 0)) {
  $44 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 40816, 1) | 0;
  $47 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($44, HEAP32[$18 >> 2] | 0) | 0, 40792, 1) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($47, HEAP32[$loc + 16 >> 2] | 0) | 0;
  $50 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($44, 40824, 3) | 0;
  $53 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($50, HEAP32[$30 >> 2] | 0) | 0, 40792, 1) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($53, HEAP32[$loc + 24 >> 2] | 0) | 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($50, 40832, 1) | 0;
  STACKTOP = sp;
  return $o | 0;
 }
 $34 = $loc + 16 | 0;
 $36 = $loc + 24 | 0;
 $38 = (HEAP32[$34 >> 2] | 0) == (HEAP32[$36 >> 2] | 0);
 $40 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($o, $32) | 0, 40792, 1) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($40, HEAP32[$34 >> 2] | 0) | 0;
 if ($38) {
  STACKTOP = sp;
  return $o | 0;
 }
 $42 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 40808, 1) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($42, HEAP32[$36 >> 2] | 0) | 0;
 STACKTOP = sp;
 return $o | 0;
}

function __ZN12_GLOBAL__N_14HeapD2Ev($this) {
 $this = $this | 0;
 var $$idx4$val$i = 0, $$idx5$val$i = 0, $$idx6$i = 0, $$idx6$val$i = 0, $$idx6$val$pre$i = 0, $$idx6$val11$i = 0, $$idx6$val14$i = 0, $$idx7$i = 0, $$idx7$val$i = 0, $$idx7$val12$i = 0, $$idx7$val18$i = 0, $$lcssa$i = 0, $0 = 0, $18 = 0, $2 = 0, $23 = 0, $25 = 0, $29 = 0, $34 = 0, $36 = 0, $37 = 0, $43 = 0, $45 = 0, $5 = 0, $51 = 0, $9 = 0, $i$013$i = 0, $i$1$i = 0, $scevgep4$i$i$i$i = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 16 | 0;
 $2 = (HEAP8[$0 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$0 >> 0] = $2;
 $$idx6$i = $this + 20 | 0;
 $$idx6$val11$i = HEAP32[$$idx6$i >> 2] | 0;
 $$idx7$i = $this + 24 | 0;
 $$idx7$val12$i = HEAP32[$$idx7$i >> 2] | 0;
 L1 : do if (($$idx7$val12$i | 0) == ($$idx6$val11$i | 0)) {
  $$lcssa$i = 0;
  $51 = $$idx6$val11$i;
 } else {
  $$idx6$val14$i = $$idx6$val11$i;
  $$idx7$val18$i = $$idx7$val12$i;
  $9 = $2;
  $i$013$i = 0;
  while (1) {
   $5 = HEAP32[$$idx6$val14$i + ($i$013$i << 2) >> 2] | 0;
   if ((HEAP8[$5 + 4 >> 0] | 0) == $9 << 24 >> 24) {
    $$idx6$val$i = $$idx6$val14$i;
    $$idx7$val$i = $$idx7$val18$i;
    $i$1$i = $i$013$i;
   } else {
    if (!$5) {
     $$idx4$val$i = $$idx6$val14$i;
     $$idx5$val$i = $$idx7$val18$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 4 >> 2] & 255]($5);
     $$idx4$val$i = HEAP32[$$idx6$i >> 2] | 0;
     $$idx5$val$i = HEAP32[$$idx7$i >> 2] | 0;
    }
    $18 = ($$idx5$val$i - $$idx4$val$i >> 2) + -1 | 0;
    if (($i$013$i | 0) == ($18 | 0)) {
     $$idx6$val$pre$i = $$idx4$val$i;
     $23 = $$idx5$val$i;
    } else {
     HEAP32[$$idx4$val$i + ($i$013$i << 2) >> 2] = HEAP32[$$idx4$val$i + ($18 << 2) >> 2];
     $$idx6$val$pre$i = HEAP32[$$idx6$i >> 2] | 0;
     $23 = HEAP32[$$idx7$i >> 2] | 0;
    }
    $scevgep4$i$i$i$i = $23 + -4 | 0;
    HEAP32[$$idx7$i >> 2] = $scevgep4$i$i$i$i;
    $$idx6$val$i = $$idx6$val$pre$i;
    $$idx7$val$i = $scevgep4$i$i$i$i;
    $i$1$i = $i$013$i + -1 | 0;
   }
   $25 = $i$1$i + 1 | 0;
   $29 = $$idx7$val$i - $$idx6$val$i >> 2;
   if ($25 >>> 0 >= $29 >>> 0) {
    $$lcssa$i = $29;
    $51 = $$idx6$val$i;
    break L1;
   }
   $$idx6$val14$i = $$idx6$val$i;
   $$idx7$val18$i = $$idx7$val$i;
   $9 = HEAP8[$0 >> 0] | 0;
   $i$013$i = $25;
  }
 } while (0);
 HEAP32[$this + 48 >> 2] = $$lcssa$i;
 HEAP32[$this + 44 >> 2] = $$lcssa$i;
 $34 = HEAP32[$this + 32 >> 2] | 0;
 if (!$34) $43 = $51; else {
  $36 = $this + 36 | 0;
  $37 = HEAP32[$36 >> 2] | 0;
  if (($37 | 0) != ($34 | 0)) HEAP32[$36 >> 2] = $37 + (~(($37 + -4 - $34 | 0) >>> 2) << 2);
  __ZdlPv($34);
  $43 = HEAP32[$$idx6$i >> 2] | 0;
 }
 if (!$43) {
  STACKTOP = sp;
  return;
 }
 $45 = HEAP32[$$idx7$i >> 2] | 0;
 if (($45 | 0) != ($43 | 0)) HEAP32[$$idx7$i >> 2] = $45 + (~(($45 + -4 - $43 | 0) >>> 2) << 2);
 __ZdlPv($43);
 STACKTOP = sp;
 return;
}

function __ZN6ObjectC2ERK13LocationRangeRKNSt3__14listINS_5FieldENS3_9allocatorIS5_EEEE($this, $lr, $fields) {
 $this = $this | 0;
 $lr = $lr | 0;
 $fields = $fields | 0;
 var $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $27 = 0, $31 = 0, $33 = 0, $35 = 0, $4 = 0, $42 = 0, $44 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$01$i$i$i = 0, label = 0, sp = 0, $__f$01$i$i$i$looptemp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $0 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($0, $lr);
 $1 = $this + 16 | 0;
 $2 = $lr + 12 | 0;
 HEAP32[$1 + 0 >> 2] = HEAP32[$2 + 0 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$1 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
 HEAP32[$this + 32 >> 2] = 15;
 $4 = $this + 36 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $this + 40 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this >> 2] = 36392;
 $7 = $this + 48 | 0;
 HEAP32[$7 >> 2] = $7;
 $8 = $this + 52 | 0;
 HEAP32[$8 >> 2] = $7;
 $9 = $this + 56 | 0;
 HEAP32[$9 >> 2] = 0;
 $11 = HEAP32[$fields + 4 >> 2] | 0;
 if (($11 | 0) == ($fields | 0)) {
  STACKTOP = sp;
  return;
 } else $17 = $11;
 while (1) {
  __THREW__ = 0;
  $13 = invoke_ii(67, 20) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) break;
  $16 = $17 + 8 | 0;
  $18 = $13 + 8 | 0;
  HEAP32[$18 + 0 >> 2] = HEAP32[$16 + 0 >> 2];
  HEAP32[$18 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
  HEAP32[$18 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
  HEAP32[$13 + 4 >> 2] = $7;
  $20 = HEAP32[$7 >> 2] | 0;
  HEAP32[$13 >> 2] = $20;
  HEAP32[$20 + 4 >> 2] = $13;
  HEAP32[$7 >> 2] = $13;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
  $17 = HEAP32[$17 + 4 >> 2] | 0;
  if (($17 | 0) == ($fields | 0)) {
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) {
  STACKTOP = sp;
  return;
 }
 $27 = ___cxa_find_matching_catch() | 0;
 if (HEAP32[$9 >> 2] | 0) {
  $31 = HEAP32[$8 >> 2] | 0;
  $33 = (HEAP32[$7 >> 2] | 0) + 4 | 0;
  $35 = HEAP32[$31 >> 2] | 0;
  HEAP32[$35 + 4 >> 2] = HEAP32[$33 >> 2];
  HEAP32[HEAP32[$33 >> 2] >> 2] = $35;
  HEAP32[$9 >> 2] = 0;
  if (($31 | 0) != ($7 | 0)) {
   $__f$01$i$i$i = $31;
   do {
    $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
    $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$i$looptemp);
   } while (($__f$01$i$i$i | 0) != ($7 | 0));
  }
 }
 HEAP32[$this >> 2] = 34168;
 $42 = HEAP32[$4 >> 2] | 0;
 if (!$42) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  ___resumeException($27 | 0);
 }
 $44 = HEAP32[$5 >> 2] | 0;
 if (($44 | 0) != ($42 | 0)) HEAP32[$5 >> 2] = $44 + (~(($44 + -4 - $42 | 0) >>> 2) << 2);
 __ZdlPv($42);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
 ___resumeException($27 | 0);
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $17 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $34 = 0, $35 = 0, $37 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $58 = 0, $59 = 0, $63 = 0, $7 = 0, $71 = 0, $74 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if (($__c | 0) == -1) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $1 = $this + 12 | 0;
 $3 = $this + 8 | 0;
 $7 = (HEAP32[$1 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0;
 $8 = $this + 24 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = $this + 28 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 do if (($9 | 0) == ($11 | 0)) {
  $13 = $this + 48 | 0;
  if (!(HEAP32[$13 >> 2] & 16)) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $17 = $this + 20 | 0;
  $20 = HEAP32[$17 >> 2] | 0;
  $21 = $9 - $20 | 0;
  $22 = $this + 44 | 0;
  $25 = (HEAP32[$22 >> 2] | 0) - $20 | 0;
  $26 = $this + 32 | 0;
  __THREW__ = 0;
  invoke_vii(44, $26 | 0, 0);
  $27 = __THREW__;
  __THREW__ = 0;
  if (!($27 & 1)) {
   if (!(HEAP8[$26 >> 0] & 1)) $34 = 10; else $34 = (HEAP32[$26 >> 2] & -2) + -1 | 0;
   __THREW__ = 0;
   invoke_viii(5, $26 | 0, $34 | 0, 0);
   $35 = __THREW__;
   __THREW__ = 0;
   if (!($35 & 1)) {
    $37 = HEAP8[$26 >> 0] | 0;
    if (!($37 & 1)) {
     $48 = $26 + 1 | 0;
     $49 = ($37 & 255) >>> 1;
    } else {
     $48 = HEAP32[$this + 40 >> 2] | 0;
     $49 = HEAP32[$this + 36 >> 2] | 0;
    }
    $47 = $48 + $49 | 0;
    HEAP32[$17 >> 2] = $48;
    HEAP32[$10 >> 2] = $47;
    $50 = $48 + $21 | 0;
    HEAP32[$8 >> 2] = $50;
    $51 = $48 + $25 | 0;
    HEAP32[$22 >> 2] = $51;
    $$pre$phiZ2D = $13;
    $55 = $50;
    $58 = $51;
    $74 = $47;
    break;
   }
  }
  $52 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($52 | 0) | 0;
  ___cxa_end_catch();
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$pre$phiZ2D = $this + 48 | 0;
  $55 = $9;
  $58 = HEAP32[$this + 44 >> 2] | 0;
  $74 = $11;
 } while (0);
 $54 = $55 + 1 | 0;
 $59 = $54 >>> 0 < $58 >>> 0 ? $58 : $54;
 HEAP32[$this + 44 >> 2] = $59;
 if (HEAP32[$$pre$phiZ2D >> 2] & 8) {
  $63 = $this + 32 | 0;
  if (!(HEAP8[$63 >> 0] & 1)) $71 = $63 + 1 | 0; else $71 = HEAP32[$this + 40 >> 2] | 0;
  HEAP32[$3 >> 2] = $71;
  HEAP32[$1 >> 2] = $71 + $7;
  HEAP32[$this + 16 >> 2] = $59;
 }
 if (($55 | 0) == ($74 | 0)) {
  $$0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, $__c & 255) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$8 >> 2] = $54;
  HEAP8[$55 >> 0] = $__c;
  $$0 = $__c & 255;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZN9Allocator4makeI13LiteralStringJ13LocationRangePKcEEEPT_DpT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $28 = 0, $29 = 0, $3 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __Znwj(60) | 0;
 $3 = _strlen($args1 | 0) | 0;
 __THREW__ = 0;
 invoke_viii(3, $0 | 0, $args1 | 0, $3 | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $37 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $37;
  __ZdlPv($2);
  ___resumeException($$01 | 0);
 }
 HEAP32[$2 >> 2] = 34168;
 $6 = $2 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $6 | 0, $args | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 do if ($7 & 1) {
  $39 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $39;
 } else {
  $9 = $2 + 16 | 0;
  $10 = $args + 12 | 0;
  HEAP32[$9 + 0 >> 2] = HEAP32[$10 + 0 >> 2];
  HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$9 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
  HEAP32[$2 + 32 >> 2] = 14;
  $12 = $2 + 36 | 0;
  HEAP32[$12 >> 2] = 0;
  $13 = $2 + 40 | 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$2 + 44 >> 2] = 0;
  HEAP32[$2 >> 2] = 34184;
  __THREW__ = 0;
  invoke_vii(40, $2 + 48 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   HEAP32[$2 >> 2] = 34168;
   $20 = HEAP32[$12 >> 2] | 0;
   if ($20) {
    $22 = HEAP32[$13 >> 2] | 0;
    if (($22 | 0) != ($20 | 0)) HEAP32[$13 >> 2] = $22 + (~(($22 + -4 - $20 | 0) >>> 2) << 2);
    __ZdlPv($20);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
   $eh$lpad$body$index2Z2D = $19;
   $eh$lpad$body$indexZ2D = $18;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  HEAP32[$1 >> 2] = $2;
  $28 = $this + 16 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  if ($29 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
   __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $1);
   STACKTOP = sp;
   return $2 | 0;
  }
  if (!$29) $35 = 0; else {
   HEAP32[$29 >> 2] = $2;
   $35 = HEAP32[$28 >> 2] | 0;
  }
  HEAP32[$28 >> 2] = $35 + 4;
  STACKTOP = sp;
  return $2 | 0;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
 $$0 = $eh$lpad$body$index2Z2D;
 $$01 = $eh$lpad$body$indexZ2D;
 __ZdlPv($2);
 ___resumeException($$01 | 0);
 return 0;
}

function _wcsnrtombs($dst, $wcs, $wn, $n, $st) {
 $dst = $dst | 0;
 $wcs = $wcs | 0;
 $wn = $wn | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0$lcssa = 0, $$014$$0 = 0, $$014$lcssa = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $16 = 0, $21 = 0, $22 = 0, $31 = 0, $33 = 0, $4 = 0, $6 = 0, $7 = 0, $buf = 0, $cnt$0$lcssa = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $s$0$lcssa = 0, $s$030 = 0, $s$1 = 0, $s$2 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $buf = sp + 8 | 0;
 $ws = sp;
 $0 = HEAP32[$wcs >> 2] | 0;
 HEAP32[$ws >> 2] = $0;
 $1 = ($dst | 0) != 0;
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 L1 : do if (($0 | 0) != 0 & ($n$ | 0) != 0) {
  $$01428 = $n$;
  $$031 = $wn;
  $33 = $0;
  $cnt$029 = 0;
  $s$030 = $dst$;
  while (1) {
   $4 = $$031 >>> 0 >= $$01428 >>> 0;
   if (!($4 | $$031 >>> 0 > 32)) {
    $$0$lcssa = $$031;
    $$014$lcssa = $$01428;
    $16 = $33;
    $cnt$0$lcssa = $cnt$029;
    $s$0$lcssa = $s$030;
    label = 7;
    break L1;
   }
   $$014$$0 = $4 ? $$01428 : $$031;
   $6 = $$031 - $$014$$0 | 0;
   $7 = _wcsrtombs($s$030, $ws, $$014$$0, 0) | 0;
   if (($7 | 0) == -1) {
    $cnt$3 = -1;
    break L1;
   }
   if (($s$030 | 0) == ($buf | 0)) {
    $$115 = $$01428;
    $s$1 = $buf;
   } else {
    $$115 = $$01428 - $7 | 0;
    $s$1 = $s$030 + $7 | 0;
   }
   $12 = $7 + $cnt$029 | 0;
   $13 = HEAP32[$ws >> 2] | 0;
   if (($13 | 0) != 0 & ($$115 | 0) != 0) {
    $$01428 = $$115;
    $$031 = $6;
    $33 = $13;
    $cnt$029 = $12;
    $s$030 = $s$1;
   } else {
    $$0$lcssa = $6;
    $$014$lcssa = $$115;
    $16 = $13;
    $cnt$0$lcssa = $12;
    $s$0$lcssa = $s$1;
    label = 7;
    break;
   }
  }
 } else {
  $$0$lcssa = $wn;
  $$014$lcssa = $n$;
  $16 = $0;
  $cnt$0$lcssa = 0;
  $s$0$lcssa = $dst$;
  label = 7;
 } while (0);
 L9 : do if ((label | 0) == 7) if (($16 | 0) != 0 & ($$014$lcssa | 0) != 0 & ($$0$lcssa | 0) != 0) {
  $$2 = $$0$lcssa;
  $$3 = $$014$lcssa;
  $21 = $16;
  $cnt$2 = $cnt$0$lcssa;
  $s$2 = $s$0$lcssa;
  while (1) {
   $22 = _wcrtomb($s$2, HEAP32[$21 >> 2] | 0, 0) | 0;
   if (($22 + 1 | 0) >>> 0 < 2) break;
   $21 = (HEAP32[$ws >> 2] | 0) + 4 | 0;
   HEAP32[$ws >> 2] = $21;
   $$2 = $$2 + -1 | 0;
   $31 = $cnt$2 + 1 | 0;
   if (!(($$3 | 0) != ($22 | 0) & ($$2 | 0) != 0)) {
    $cnt$3 = $31;
    break L9;
   } else {
    $$3 = $$3 - $22 | 0;
    $cnt$2 = $31;
    $s$2 = $s$2 + $22 | 0;
   }
  }
  if (!$22) {
   HEAP32[$ws >> 2] = 0;
   $cnt$3 = $cnt$2;
  } else $cnt$3 = -1;
 } else $cnt$3 = $cnt$0$lcssa; while (0);
 if (!$1) {
  STACKTOP = sp;
  return $cnt$3 | 0;
 }
 HEAP32[$wcs >> 2] = HEAP32[$ws >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function __ZN5Token8toStringENS_4KindE($v) {
 $v = $v | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 do switch ($v | 0) {
 case 4:
  {
   $$0 = 35488;
   break;
  }
 case 2:
  {
   $$0 = 35472;
   break;
  }
 case 21:
  {
   $$0 = 35640;
   break;
  }
 case 14:
  {
   $$0 = 35584;
   break;
  }
 case 18:
  {
   $$0 = 35608;
   break;
  }
 case 6:
  {
   $$0 = 35504;
   break;
  }
 case 12:
  {
   $$0 = 35560;
   break;
  }
 case 1:
  {
   $$0 = 35464;
   break;
  }
 case 25:
  {
   $$0 = 34816;
   break;
  }
 case 11:
  {
   $$0 = 35544;
   break;
  }
 case 22:
  {
   $$0 = 35648;
   break;
  }
 case 15:
  {
   $$0 = 35592;
   break;
  }
 case 26:
  {
   $$0 = 35680;
   break;
  }
 case 20:
  {
   $$0 = 35632;
   break;
  }
 case 7:
  {
   $$0 = 35512;
   break;
  }
 case 5:
  {
   $$0 = 35496;
   break;
  }
 case 28:
  {
   $$0 = 35032;
   break;
  }
 case 10:
  {
   $$0 = 35536;
   break;
  }
 case 30:
  {
   $$0 = 34736;
   break;
  }
 case 8:
  {
   $$0 = 35520;
   break;
  }
 case 23:
  {
   $$0 = 35664;
   break;
  }
 case 27:
  {
   $$0 = 35696;
   break;
  }
 case 13:
  {
   $$0 = 35568;
   break;
  }
 case 0:
  {
   $$0 = 35456;
   break;
  }
 case 3:
  {
   $$0 = 35480;
   break;
  }
 case 31:
  {
   $$0 = 35704;
   break;
  }
 case 29:
  {
   $$0 = 35064;
   break;
  }
 case 24:
  {
   $$0 = 35672;
   break;
  }
 case 17:
  {
   $$0 = 34744;
   break;
  }
 case 9:
  {
   $$0 = 35528;
   break;
  }
 case 19:
  {
   $$0 = 35616;
   break;
  }
 case 16:
  {
   $$0 = 35600;
   break;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 35720, 36) | 0, $v) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $7 = invoke_iii(22, $0 | 0, 45800) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   }
   __THREW__ = 0;
   $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $10 = 0, $17 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $4 = 0, $46 = 0, $49 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP8[$__atoms + 24 >> 0] | 0) == $__ct << 24 >> 24;
  if (!$4) if ((HEAP8[$__atoms + 25 >> 0] | 0) != $__ct << 24 >> 24) break;
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $10 = HEAP8[$__grouping >> 0] | 0;
 if (!($10 & 1)) $17 = ($10 & 255) >>> 1; else $17 = HEAP32[$__grouping + 4 >> 2] | 0;
 if (($17 | 0) != 0 ? $__ct << 24 >> 24 == $__thousands_sep << 24 >> 24 : 0) {
  $20 = HEAP32[$__g_end >> 2] | 0;
  if (($20 - $__g | 0) >= 160) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $25 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $20 + 4;
  HEAP32[$20 >> 2] = $25;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $27 = $__atoms + 26 | 0;
 $$01$i = $__atoms;
 while (1) {
  if ((HEAP8[$$01$i >> 0] | 0) == $__ct << 24 >> 24) {
   $$0$lcssa$i = $$01$i;
   break;
  }
  $$01$i = $$01$i + 1 | 0;
  if (($$01$i | 0) == ($27 | 0)) {
   $$0$lcssa$i = $27;
   break;
  }
 }
 $34 = $$0$lcssa$i - $__atoms | 0;
 if (($34 | 0) > 23) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($__base | 0) == 16) {
  if (($34 | 0) >= 22) {
   if ($1) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   if (($0 - $__a | 0) >= 3) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   HEAP32[$__dc >> 2] = 0;
   $46 = HEAP8[44312 + $34 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $46;
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else if (($__base | 0) == 10 | ($__base | 0) == 8) if (($34 | 0) >= ($__base | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $49 = HEAP8[44312 + $34 >> 0] | 0;
 HEAP32[$__a_end >> 2] = $0 + 1;
 HEAP8[$0 >> 0] = $49;
 HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $$02$i$i = 0, $$02$i$i4 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $21 = 0, $22 = 0, $34 = 0, $36 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $7 = 0, $__p$0$lcssa$i$i = 0, $__p$0$lcssa$i$i9 = 0, $__p$0$ph$i$i = 0, $__p$0$ph$i$i2 = 0, $__p$01$i$i = 0, $__p$01$i$i5 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if ($1 & 16) {
  $4 = $this + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  $7 = HEAP32[$this + 24 >> 2] | 0;
  if ($5 >>> 0 < $7 >>> 0) {
   HEAP32[$4 >> 2] = $7;
   $12 = $7;
  } else $12 = $5;
  $10 = HEAP32[$this + 20 >> 2] | 0;
  $14 = $12 - $10 | 0;
  if ($14 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
  if ($14 >>> 0 < 11) {
   HEAP8[$agg$result >> 0] = $14 << 1;
   $__p$0$ph$i$i2 = $agg$result + 1 | 0;
  } else {
   $21 = $14 + 16 & -16;
   $22 = __Znwj($21) | 0;
   HEAP32[$agg$result + 8 >> 2] = $22;
   HEAP32[$agg$result >> 2] = $21 | 1;
   HEAP32[$agg$result + 4 >> 2] = $14;
   $__p$0$ph$i$i2 = $22;
  }
  if (($10 | 0) == ($12 | 0)) $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2; else {
   $$02$i$i4 = $10;
   $__p$01$i$i5 = $__p$0$ph$i$i2;
   while (1) {
    HEAP8[$__p$01$i$i5 >> 0] = HEAP8[$$02$i$i4 >> 0] | 0;
    $$02$i$i4 = $$02$i$i4 + 1 | 0;
    if (($$02$i$i4 | 0) == ($12 | 0)) break; else $__p$01$i$i5 = $__p$01$i$i5 + 1 | 0;
   }
   $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2 + $14 | 0;
  }
  HEAP8[$__p$0$lcssa$i$i9 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
 if (!($1 & 8)) {
  HEAP32[$agg$result + 0 >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $34 = HEAP32[$this + 8 >> 2] | 0;
 $36 = HEAP32[$this + 16 >> 2] | 0;
 $39 = $36 - $34 | 0;
 if ($39 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
 if ($39 >>> 0 < 11) {
  HEAP8[$agg$result >> 0] = $39 << 1;
  $__p$0$ph$i$i = $agg$result + 1 | 0;
 } else {
  $46 = $39 + 16 & -16;
  $47 = __Znwj($46) | 0;
  HEAP32[$agg$result + 8 >> 2] = $47;
  HEAP32[$agg$result >> 2] = $46 | 1;
  HEAP32[$agg$result + 4 >> 2] = $39;
  $__p$0$ph$i$i = $47;
 }
 if (($34 | 0) == ($36 | 0)) $__p$0$lcssa$i$i = $__p$0$ph$i$i; else {
  $$02$i$i = $34;
  $__p$01$i$i = $__p$0$ph$i$i;
  while (1) {
   HEAP8[$__p$01$i$i >> 0] = HEAP8[$$02$i$i >> 0] | 0;
   $$02$i$i = $$02$i$i + 1 | 0;
   if (($$02$i$i | 0) == ($36 | 0)) break; else $__p$01$i$i = $__p$01$i$i + 1 | 0;
  }
  $__p$0$lcssa$i$i = $__p$0$ph$i$i + $39 | 0;
 }
 HEAP8[$__p$0$lcssa$i$i >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $10 = 0, $17 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $4 = 0, $47 = 0, $50 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP32[$__atoms + 96 >> 2] | 0) == ($__ct | 0);
  if (!$4) if ((HEAP32[$__atoms + 100 >> 2] | 0) != ($__ct | 0)) break;
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $10 = HEAP8[$__grouping >> 0] | 0;
 if (!($10 & 1)) $17 = ($10 & 255) >>> 1; else $17 = HEAP32[$__grouping + 4 >> 2] | 0;
 if (($17 | 0) != 0 & ($__ct | 0) == ($__thousands_sep | 0)) {
  $20 = HEAP32[$__g_end >> 2] | 0;
  if (($20 - $__g | 0) >= 160) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $25 = HEAP32[$__dc >> 2] | 0;
  HEAP32[$__g_end >> 2] = $20 + 4;
  HEAP32[$20 >> 2] = $25;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $27 = $__atoms + 104 | 0;
 $$01$i = $__atoms;
 while (1) {
  if ((HEAP32[$$01$i >> 2] | 0) == ($__ct | 0)) {
   $$0$lcssa$i = $$01$i;
   break;
  }
  $$01$i = $$01$i + 4 | 0;
  if (($$01$i | 0) == ($27 | 0)) {
   $$0$lcssa$i = $27;
   break;
  }
 }
 $34 = $$0$lcssa$i - $__atoms | 0;
 $35 = $34 >> 2;
 if (($34 | 0) > 92) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($__base | 0) == 10 | ($__base | 0) == 8) {
  if (($35 | 0) >= ($__base | 0)) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else if (($__base | 0) == 16) if (($34 | 0) >= 88) {
  if ($1) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if (($0 - $__a | 0) >= 3) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP32[$__dc >> 2] = 0;
  $47 = HEAP8[44312 + $35 >> 0] | 0;
  HEAP32[$__a_end >> 2] = $0 + 1;
  HEAP8[$0 >> 0] = $47;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $50 = HEAP8[44312 + $35 >> 0] | 0;
 HEAP32[$__a_end >> 2] = $0 + 1;
 HEAP8[$0 >> 0] = $50;
 HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__14listIN6Object5FieldENS_9allocatorIS2_EEE6insertINS_21__list_const_iteratorIS2_PvEEEENS_15__list_iteratorIS2_S8_EES9_T_SC_PNS_9enable_ifIXsr19__is_input_iteratorISC_EE5valueEvE4typeE($agg$result, $this, $__p, $__f, $__l, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__p = $__p | 0;
 $__f = $__f | 0;
 $__l = $__l | 0;
 $0 = $0 | 0;
 var $$lcssa = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $37 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $__ds$0$lcssa = 0, $__ds$08 = 0, sp = 0, $26$looptemp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$__p >> 2] | 0;
 HEAP32[$agg$result >> 2] = $1;
 $2 = HEAP32[$__f >> 2] | 0;
 $3 = HEAP32[$__l >> 2] | 0;
 if (($2 | 0) == ($3 | 0)) {
  STACKTOP = sp;
  return;
 }
 $5 = __Znwj(20) | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $5 + 8 | 0;
 $7 = $2 + 8 | 0;
 HEAP32[$6 + 0 >> 2] = HEAP32[$7 + 0 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
 HEAP32[$agg$result >> 2] = $5;
 $9 = HEAP32[$2 + 4 >> 2] | 0;
 HEAP32[$__f >> 2] = $9;
 L4 : do if (($9 | 0) == ($3 | 0)) {
  $$lcssa = $5;
  $__ds$0$lcssa = 1;
 } else {
  $16 = $9;
  $18 = $5;
  $__ds$08 = 1;
  while (1) {
   __THREW__ = 0;
   $11 = invoke_ii(67, 20) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) break;
   $14 = $11 + 8 | 0;
   $15 = $16 + 8 | 0;
   HEAP32[$14 + 0 >> 2] = HEAP32[$15 + 0 >> 2];
   HEAP32[$14 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
   HEAP32[$14 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
   HEAP32[$18 + 4 >> 2] = $11;
   HEAP32[$11 >> 2] = $18;
   $16 = HEAP32[$16 + 4 >> 2] | 0;
   HEAP32[$__f >> 2] = $16;
   $21 = $__ds$08 + 1 | 0;
   if (($16 | 0) == ($3 | 0)) {
    $$lcssa = $11;
    $__ds$0$lcssa = $21;
    break L4;
   } else {
    $18 = $11;
    $__ds$08 = $21;
   }
  }
  $23 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($23 | 0) | 0;
  $26 = $18;
  do {
   $26$looptemp = $26;
   $26 = HEAP32[$26 >> 2] | 0;
   __ZdlPv($26$looptemp);
  } while (($26 | 0) != 0);
  __THREW__ = 0;
  invoke_v(4);
  $32 = __THREW__;
  __THREW__ = 0;
  if (!($32 & 1)) {}
  $28 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $30 = __THREW__;
  __THREW__ = 0;
  if ($30 & 1) {
   $40 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($40);
  } else ___resumeException($28 | 0);
 } while (0);
 $34 = HEAP32[$1 >> 2] | 0;
 HEAP32[$34 + 4 >> 2] = $5;
 HEAP32[$5 >> 2] = $34;
 HEAP32[$1 >> 2] = $$lcssa;
 HEAP32[$$lcssa + 4 >> 2] = $1;
 $37 = $this + 8 | 0;
 HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + $__ds$0$lcssa;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE13__lower_boundIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_SN_SN_($agg$result, $this, $__v, $__root, $__result) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 $__root = $__root | 0;
 $__result = $__result | 0;
 var $$0$ph10 = 0, $$0$ph7 = 0, $$01$lcssa3 = 0, $$01$ph9 = 0, $$014 = 0, $$014$us = 0, $1 = 0, $10 = 0, $21 = 0, $23 = 0, $24 = 0, $3 = 0, $31 = 0, $32 = 0, $42 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (!$__root) {
  $$0$ph7 = $__result;
  HEAP32[$agg$result >> 2] = $$0$ph7;
  STACKTOP = sp;
  return;
 }
 $1 = HEAP8[$__v >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $5 = ($1 & 255) >>> 1;
 $6 = $__v + 1 | 0;
 $7 = $__v + 8 | 0;
 $8 = $__v + 4 | 0;
 $$0$ph10 = $__result;
 $$01$ph9 = $__root;
 L4 : while (1) {
  L6 : do if ($3) {
   $$014$us = $$01$ph9;
   while (1) {
    $9 = $$014$us + 16 | 0;
    $10 = HEAP8[$9 >> 0] | 0;
    if (!($10 & 1)) {
     $21 = ($10 & 255) >>> 1;
     $23 = $9 + 1 | 0;
    } else {
     $21 = HEAP32[$$014$us + 20 >> 2] | 0;
     $23 = HEAP32[$$014$us + 24 >> 2] | 0;
    }
    $24 = _memcmp($23, $6, $5 >>> 0 < $21 >>> 0 ? $5 : $21) | 0;
    if (!$24) {
     if ($21 >>> 0 >= $5 >>> 0) {
      $$01$lcssa3 = $$014$us;
      break L6;
     }
    } else if (($24 | 0) >= 0) {
     $$01$lcssa3 = $$014$us;
     break L6;
    }
    $$014$us = HEAP32[$$014$us + 4 >> 2] | 0;
    if (!$$014$us) {
     $$0$ph7 = $$0$ph10;
     label = 19;
     break L4;
    }
   }
  } else {
   $$014 = $$01$ph9;
   while (1) {
    $31 = $$014 + 16 | 0;
    $32 = HEAP8[$31 >> 0] | 0;
    if (!($32 & 1)) {
     $45 = ($32 & 255) >>> 1;
     $47 = $31 + 1 | 0;
    } else {
     $45 = HEAP32[$$014 + 20 >> 2] | 0;
     $47 = HEAP32[$$014 + 24 >> 2] | 0;
    }
    $42 = HEAP32[$8 >> 2] | 0;
    $48 = _memcmp($47, HEAP32[$7 >> 2] | 0, $42 >>> 0 < $45 >>> 0 ? $42 : $45) | 0;
    if (!$48) {
     if ($45 >>> 0 >= $42 >>> 0) {
      $$01$lcssa3 = $$014;
      break L6;
     }
    } else if (($48 | 0) >= 0) {
     $$01$lcssa3 = $$014;
     break L6;
    }
    $$014 = HEAP32[$$014 + 4 >> 2] | 0;
    if (!$$014) {
     $$0$ph7 = $$0$ph10;
     label = 19;
     break L4;
    }
   }
  } while (0);
  $$01$ph9 = HEAP32[$$01$lcssa3 >> 2] | 0;
  if (!$$01$ph9) {
   $$0$ph7 = $$01$lcssa3;
   label = 19;
   break;
  } else $$0$ph10 = $$01$lcssa3;
 }
 if ((label | 0) == 19) {
  HEAP32[$agg$result >> 2] = $$0$ph7;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($agg$result, $this, $__v, $__root, $__result) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 $__root = $__root | 0;
 $__result = $__result | 0;
 var $$0$ph10 = 0, $$0$ph7 = 0, $$01$lcssa3 = 0, $$01$ph9 = 0, $$014 = 0, $$014$us = 0, $1 = 0, $10 = 0, $21 = 0, $23 = 0, $24 = 0, $3 = 0, $31 = 0, $32 = 0, $42 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (!$__root) {
  $$0$ph7 = $__result;
  HEAP32[$agg$result >> 2] = $$0$ph7;
  STACKTOP = sp;
  return;
 }
 $1 = HEAP8[$__v >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $5 = ($1 & 255) >>> 1;
 $6 = $__v + 1 | 0;
 $7 = $__v + 8 | 0;
 $8 = $__v + 4 | 0;
 $$0$ph10 = $__result;
 $$01$ph9 = $__root;
 L4 : while (1) {
  L6 : do if ($3) {
   $$014$us = $$01$ph9;
   while (1) {
    $9 = $$014$us + 16 | 0;
    $10 = HEAP8[$9 >> 0] | 0;
    if (!($10 & 1)) {
     $21 = ($10 & 255) >>> 1;
     $23 = $9 + 1 | 0;
    } else {
     $21 = HEAP32[$$014$us + 20 >> 2] | 0;
     $23 = HEAP32[$$014$us + 24 >> 2] | 0;
    }
    $24 = _memcmp($23, $6, $5 >>> 0 < $21 >>> 0 ? $5 : $21) | 0;
    if (!$24) {
     if ($21 >>> 0 >= $5 >>> 0) {
      $$01$lcssa3 = $$014$us;
      break L6;
     }
    } else if (($24 | 0) >= 0) {
     $$01$lcssa3 = $$014$us;
     break L6;
    }
    $$014$us = HEAP32[$$014$us + 4 >> 2] | 0;
    if (!$$014$us) {
     $$0$ph7 = $$0$ph10;
     label = 19;
     break L4;
    }
   }
  } else {
   $$014 = $$01$ph9;
   while (1) {
    $31 = $$014 + 16 | 0;
    $32 = HEAP8[$31 >> 0] | 0;
    if (!($32 & 1)) {
     $45 = ($32 & 255) >>> 1;
     $47 = $31 + 1 | 0;
    } else {
     $45 = HEAP32[$$014 + 20 >> 2] | 0;
     $47 = HEAP32[$$014 + 24 >> 2] | 0;
    }
    $42 = HEAP32[$8 >> 2] | 0;
    $48 = _memcmp($47, HEAP32[$7 >> 2] | 0, $42 >>> 0 < $45 >>> 0 ? $42 : $45) | 0;
    if (!$48) {
     if ($45 >>> 0 >= $42 >>> 0) {
      $$01$lcssa3 = $$014;
      break L6;
     }
    } else if (($48 | 0) >= 0) {
     $$01$lcssa3 = $$014;
     break L6;
    }
    $$014 = HEAP32[$$014 + 4 >> 2] | 0;
    if (!$$014) {
     $$0$ph7 = $$0$ph10;
     label = 19;
     break L4;
    }
   }
  } while (0);
  $$01$ph9 = HEAP32[$$01$lcssa3 >> 2] | 0;
  if (!$$01$ph9) {
   $$0$ph7 = $$01$lcssa3;
   label = 19;
   break;
  } else $$0$ph10 = $$01$lcssa3;
 }
 if ((label | 0) == 19) {
  HEAP32[$agg$result >> 2] = $$0$ph7;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_SK_SK_($agg$result, $this, $__v, $__root, $__result) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 $__root = $__root | 0;
 $__result = $__result | 0;
 var $$0$ph10 = 0, $$0$ph7 = 0, $$01$lcssa3 = 0, $$01$ph9 = 0, $$014 = 0, $$014$us = 0, $1 = 0, $10 = 0, $21 = 0, $23 = 0, $24 = 0, $3 = 0, $31 = 0, $32 = 0, $42 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (!$__root) {
  $$0$ph7 = $__result;
  HEAP32[$agg$result >> 2] = $$0$ph7;
  STACKTOP = sp;
  return;
 }
 $1 = HEAP8[$__v >> 0] | 0;
 $3 = ($1 & 1) == 0;
 $5 = ($1 & 255) >>> 1;
 $6 = $__v + 1 | 0;
 $7 = $__v + 8 | 0;
 $8 = $__v + 4 | 0;
 $$0$ph10 = $__result;
 $$01$ph9 = $__root;
 L4 : while (1) {
  L6 : do if ($3) {
   $$014$us = $$01$ph9;
   while (1) {
    $9 = $$014$us + 16 | 0;
    $10 = HEAP8[$9 >> 0] | 0;
    if (!($10 & 1)) {
     $21 = ($10 & 255) >>> 1;
     $23 = $9 + 1 | 0;
    } else {
     $21 = HEAP32[$$014$us + 20 >> 2] | 0;
     $23 = HEAP32[$$014$us + 24 >> 2] | 0;
    }
    $24 = _memcmp($23, $6, $5 >>> 0 < $21 >>> 0 ? $5 : $21) | 0;
    if (!$24) {
     if ($21 >>> 0 >= $5 >>> 0) {
      $$01$lcssa3 = $$014$us;
      break L6;
     }
    } else if (($24 | 0) >= 0) {
     $$01$lcssa3 = $$014$us;
     break L6;
    }
    $$014$us = HEAP32[$$014$us + 4 >> 2] | 0;
    if (!$$014$us) {
     $$0$ph7 = $$0$ph10;
     label = 19;
     break L4;
    }
   }
  } else {
   $$014 = $$01$ph9;
   while (1) {
    $31 = $$014 + 16 | 0;
    $32 = HEAP8[$31 >> 0] | 0;
    if (!($32 & 1)) {
     $45 = ($32 & 255) >>> 1;
     $47 = $31 + 1 | 0;
    } else {
     $45 = HEAP32[$$014 + 20 >> 2] | 0;
     $47 = HEAP32[$$014 + 24 >> 2] | 0;
    }
    $42 = HEAP32[$8 >> 2] | 0;
    $48 = _memcmp($47, HEAP32[$7 >> 2] | 0, $42 >>> 0 < $45 >>> 0 ? $42 : $45) | 0;
    if (!$48) {
     if ($45 >>> 0 >= $42 >>> 0) {
      $$01$lcssa3 = $$014;
      break L6;
     }
    } else if (($48 | 0) >= 0) {
     $$01$lcssa3 = $$014;
     break L6;
    }
    $$014 = HEAP32[$$014 + 4 >> 2] | 0;
    if (!$$014) {
     $$0$ph7 = $$0$ph10;
     label = 19;
     break L4;
    }
   }
  } while (0);
  $$01$ph9 = HEAP32[$$01$lcssa3 >> 2] | 0;
  if (!$$01$ph9) {
   $$0$ph7 = $$01$lcssa3;
   label = 19;
   break;
  } else $$0$ph10 = $$01$lcssa3;
 }
 if ((label | 0) == 19) {
  HEAP32[$agg$result >> 2] = $$0$ph7;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $58 = 0, $7 = 0, $8 = 0, $9 = 0, $__nd$0$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) {
  $58 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $58;
  $$0 = $58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__v + 1 | 0;
 $9 = $__v + 8 | 0;
 $10 = $__v + 4 | 0;
 $__nd$0$in = $1;
 while (1) {
  $11 = $__nd$0$in + 16 | 0;
  if ($5) $26 = $7; else $26 = HEAP32[$10 >> 2] | 0;
  $13 = HEAP8[$11 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  if ($15) $24 = ($13 & 255) >>> 1; else $24 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $28 = $8; else $28 = HEAP32[$9 >> 2] | 0;
  if ($15) $29 = $11 + 1 | 0; else $29 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  $30 = _memcmp($28, $29, $24 >>> 0 < $26 >>> 0 ? $24 : $26) | 0;
  if (!$30) {
   if ($26 >>> 0 < $24 >>> 0) label = 16;
  } else if (($30 | 0) < 0) label = 16;
  if ((label | 0) == 16) {
   label = 0;
   $34 = HEAP32[$__nd$0$in >> 2] | 0;
   if (!$34) {
    label = 17;
    break;
   } else {
    $__nd$0$in = $34;
    continue;
   }
  }
  if ($15) $47 = ($13 & 255) >>> 1; else $47 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $45 = $7; else $45 = HEAP32[$10 >> 2] | 0;
  if ($15) $49 = $11 + 1 | 0; else $49 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  if ($5) $50 = $8; else $50 = HEAP32[$9 >> 2] | 0;
  $51 = _memcmp($49, $50, $45 >>> 0 < $47 >>> 0 ? $45 : $47) | 0;
  if (!$51) {
   if ($47 >>> 0 >= $45 >>> 0) {
    label = 33;
    break;
   }
  } else if (($51 | 0) >= 0) {
   label = 33;
   break;
  }
  $55 = $__nd$0$in + 4 | 0;
  $56 = HEAP32[$55 >> 2] | 0;
  if (!$56) {
   label = 32;
   break;
  } else $__nd$0$in = $56;
 }
 if ((label | 0) == 17) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__nd$0$in;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 32) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $55;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 33) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__parent;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $58 = 0, $7 = 0, $8 = 0, $9 = 0, $__nd$0$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) {
  $58 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $58;
  $$0 = $58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $9 = $__k + 8 | 0;
 $10 = $__k + 4 | 0;
 $__nd$0$in = $1;
 while (1) {
  $11 = $__nd$0$in + 16 | 0;
  if ($5) $26 = $7; else $26 = HEAP32[$10 >> 2] | 0;
  $13 = HEAP8[$11 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  if ($15) $24 = ($13 & 255) >>> 1; else $24 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $28 = $8; else $28 = HEAP32[$9 >> 2] | 0;
  if ($15) $29 = $11 + 1 | 0; else $29 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  $30 = _memcmp($28, $29, $24 >>> 0 < $26 >>> 0 ? $24 : $26) | 0;
  if (!$30) {
   if ($26 >>> 0 < $24 >>> 0) label = 16;
  } else if (($30 | 0) < 0) label = 16;
  if ((label | 0) == 16) {
   label = 0;
   $34 = HEAP32[$__nd$0$in >> 2] | 0;
   if (!$34) {
    label = 17;
    break;
   } else {
    $__nd$0$in = $34;
    continue;
   }
  }
  if ($15) $47 = ($13 & 255) >>> 1; else $47 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $45 = $7; else $45 = HEAP32[$10 >> 2] | 0;
  if ($15) $49 = $11 + 1 | 0; else $49 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  if ($5) $50 = $8; else $50 = HEAP32[$9 >> 2] | 0;
  $51 = _memcmp($49, $50, $45 >>> 0 < $47 >>> 0 ? $45 : $47) | 0;
  if (!$51) {
   if ($47 >>> 0 >= $45 >>> 0) {
    label = 33;
    break;
   }
  } else if (($51 | 0) >= 0) {
   label = 33;
   break;
  }
  $55 = $__nd$0$in + 4 | 0;
  $56 = HEAP32[$55 >> 2] | 0;
  if (!$56) {
   label = 32;
   break;
  } else $__nd$0$in = $56;
 }
 if ((label | 0) == 17) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__nd$0$in;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 32) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $55;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 33) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__parent;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $58 = 0, $7 = 0, $8 = 0, $9 = 0, $__nd$0$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) {
  $58 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $58;
  $$0 = $58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $9 = $__k + 8 | 0;
 $10 = $__k + 4 | 0;
 $__nd$0$in = $1;
 while (1) {
  $11 = $__nd$0$in + 16 | 0;
  if ($5) $26 = $7; else $26 = HEAP32[$10 >> 2] | 0;
  $13 = HEAP8[$11 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  if ($15) $24 = ($13 & 255) >>> 1; else $24 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $28 = $8; else $28 = HEAP32[$9 >> 2] | 0;
  if ($15) $29 = $11 + 1 | 0; else $29 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  $30 = _memcmp($28, $29, $24 >>> 0 < $26 >>> 0 ? $24 : $26) | 0;
  if (!$30) {
   if ($26 >>> 0 < $24 >>> 0) label = 16;
  } else if (($30 | 0) < 0) label = 16;
  if ((label | 0) == 16) {
   label = 0;
   $34 = HEAP32[$__nd$0$in >> 2] | 0;
   if (!$34) {
    label = 17;
    break;
   } else {
    $__nd$0$in = $34;
    continue;
   }
  }
  if ($15) $47 = ($13 & 255) >>> 1; else $47 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $45 = $7; else $45 = HEAP32[$10 >> 2] | 0;
  if ($15) $49 = $11 + 1 | 0; else $49 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  if ($5) $50 = $8; else $50 = HEAP32[$9 >> 2] | 0;
  $51 = _memcmp($49, $50, $45 >>> 0 < $47 >>> 0 ? $45 : $47) | 0;
  if (!$51) {
   if ($47 >>> 0 >= $45 >>> 0) {
    label = 33;
    break;
   }
  } else if (($51 | 0) >= 0) {
   label = 33;
   break;
  }
  $55 = $__nd$0$in + 4 | 0;
  $56 = HEAP32[$55 >> 2] | 0;
  if (!$56) {
   label = 32;
   break;
  } else $__nd$0$in = $56;
 }
 if ((label | 0) == 17) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__nd$0$in;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 32) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $55;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 33) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__parent;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}
function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $58 = 0, $7 = 0, $8 = 0, $9 = 0, $__nd$0$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) {
  $58 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $58;
  $$0 = $58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $9 = $__k + 8 | 0;
 $10 = $__k + 4 | 0;
 $__nd$0$in = $1;
 while (1) {
  $11 = $__nd$0$in + 16 | 0;
  if ($5) $26 = $7; else $26 = HEAP32[$10 >> 2] | 0;
  $13 = HEAP8[$11 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  if ($15) $24 = ($13 & 255) >>> 1; else $24 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $28 = $8; else $28 = HEAP32[$9 >> 2] | 0;
  if ($15) $29 = $11 + 1 | 0; else $29 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  $30 = _memcmp($28, $29, $24 >>> 0 < $26 >>> 0 ? $24 : $26) | 0;
  if (!$30) {
   if ($26 >>> 0 < $24 >>> 0) label = 16;
  } else if (($30 | 0) < 0) label = 16;
  if ((label | 0) == 16) {
   label = 0;
   $34 = HEAP32[$__nd$0$in >> 2] | 0;
   if (!$34) {
    label = 17;
    break;
   } else {
    $__nd$0$in = $34;
    continue;
   }
  }
  if ($15) $47 = ($13 & 255) >>> 1; else $47 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $45 = $7; else $45 = HEAP32[$10 >> 2] | 0;
  if ($15) $49 = $11 + 1 | 0; else $49 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  if ($5) $50 = $8; else $50 = HEAP32[$9 >> 2] | 0;
  $51 = _memcmp($49, $50, $45 >>> 0 < $47 >>> 0 ? $45 : $47) | 0;
  if (!$51) {
   if ($47 >>> 0 >= $45 >>> 0) {
    label = 33;
    break;
   }
  } else if (($51 | 0) >= 0) {
   label = 33;
   break;
  }
  $55 = $__nd$0$in + 4 | 0;
  $56 = HEAP32[$55 >> 2] | 0;
  if (!$56) {
   label = 32;
   break;
  } else $__nd$0$in = $56;
 }
 if ((label | 0) == 17) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__nd$0$in;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 32) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $55;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 33) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__parent;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $58 = 0, $7 = 0, $8 = 0, $9 = 0, $__nd$0$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) {
  $58 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $58;
  $$0 = $58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__k + 1 | 0;
 $9 = $__k + 8 | 0;
 $10 = $__k + 4 | 0;
 $__nd$0$in = $1;
 while (1) {
  $11 = $__nd$0$in + 16 | 0;
  if ($5) $26 = $7; else $26 = HEAP32[$10 >> 2] | 0;
  $13 = HEAP8[$11 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  if ($15) $24 = ($13 & 255) >>> 1; else $24 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $28 = $8; else $28 = HEAP32[$9 >> 2] | 0;
  if ($15) $29 = $11 + 1 | 0; else $29 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  $30 = _memcmp($28, $29, $24 >>> 0 < $26 >>> 0 ? $24 : $26) | 0;
  if (!$30) {
   if ($26 >>> 0 < $24 >>> 0) label = 16;
  } else if (($30 | 0) < 0) label = 16;
  if ((label | 0) == 16) {
   label = 0;
   $34 = HEAP32[$__nd$0$in >> 2] | 0;
   if (!$34) {
    label = 17;
    break;
   } else {
    $__nd$0$in = $34;
    continue;
   }
  }
  if ($15) $47 = ($13 & 255) >>> 1; else $47 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $45 = $7; else $45 = HEAP32[$10 >> 2] | 0;
  if ($15) $49 = $11 + 1 | 0; else $49 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  if ($5) $50 = $8; else $50 = HEAP32[$9 >> 2] | 0;
  $51 = _memcmp($49, $50, $45 >>> 0 < $47 >>> 0 ? $45 : $47) | 0;
  if (!$51) {
   if ($47 >>> 0 >= $45 >>> 0) {
    label = 33;
    break;
   }
  } else if (($51 | 0) >= 0) {
   label = 33;
   break;
  }
  $55 = $__nd$0$in + 4 | 0;
  $56 = HEAP32[$55 >> 2] | 0;
  if (!$56) {
   label = 32;
   break;
  } else $__nd$0$in = $56;
 }
 if ((label | 0) == 17) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__nd$0$in;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 32) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $55;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 33) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__parent;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $58 = 0, $7 = 0, $8 = 0, $9 = 0, $__nd$0$in = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) {
  $58 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $58;
  $$0 = $58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $7 = ($3 & 255) >>> 1;
 $8 = $__v + 1 | 0;
 $9 = $__v + 8 | 0;
 $10 = $__v + 4 | 0;
 $__nd$0$in = $1;
 while (1) {
  $11 = $__nd$0$in + 16 | 0;
  if ($5) $26 = $7; else $26 = HEAP32[$10 >> 2] | 0;
  $13 = HEAP8[$11 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  if ($15) $24 = ($13 & 255) >>> 1; else $24 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $28 = $8; else $28 = HEAP32[$9 >> 2] | 0;
  if ($15) $29 = $11 + 1 | 0; else $29 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  $30 = _memcmp($28, $29, $24 >>> 0 < $26 >>> 0 ? $24 : $26) | 0;
  if (!$30) {
   if ($26 >>> 0 < $24 >>> 0) label = 16;
  } else if (($30 | 0) < 0) label = 16;
  if ((label | 0) == 16) {
   label = 0;
   $34 = HEAP32[$__nd$0$in >> 2] | 0;
   if (!$34) {
    label = 17;
    break;
   } else {
    $__nd$0$in = $34;
    continue;
   }
  }
  if ($15) $47 = ($13 & 255) >>> 1; else $47 = HEAP32[$__nd$0$in + 20 >> 2] | 0;
  if ($5) $45 = $7; else $45 = HEAP32[$10 >> 2] | 0;
  if ($15) $49 = $11 + 1 | 0; else $49 = HEAP32[$__nd$0$in + 24 >> 2] | 0;
  if ($5) $50 = $8; else $50 = HEAP32[$9 >> 2] | 0;
  $51 = _memcmp($49, $50, $45 >>> 0 < $47 >>> 0 ? $45 : $47) | 0;
  if (!$51) {
   if ($47 >>> 0 >= $45 >>> 0) {
    label = 33;
    break;
   }
  } else if (($51 | 0) >= 0) {
   label = 33;
   break;
  }
  $55 = $__nd$0$in + 4 | 0;
  $56 = HEAP32[$55 >> 2] | 0;
  if (!$56) {
   label = 32;
   break;
  } else $__nd$0$in = $56;
 }
 if ((label | 0) == 17) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__nd$0$in;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 32) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $55;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 33) {
  HEAP32[$__parent >> 2] = $__nd$0$in;
  $$0 = $__parent;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$ph6$i = 0, $$0$ph8$i = 0, $$01$ph7$i$in = 0, $$014$i$in = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $2 = 0, $25 = 0, $27 = 0, $29 = 0, $30 = 0, $31 = 0, $38 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $54 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 4 | 0;
 do if ($1) {
  $4 = HEAP8[$__v >> 0] | 0;
  $6 = ($4 & 1) == 0;
  $8 = ($4 & 255) >>> 1;
  $9 = $__v + 1 | 0;
  $10 = $__v + 8 | 0;
  $11 = $__v + 4 | 0;
  $$0$ph8$i = $2;
  $$01$ph7$i$in = $1;
  L3 : while (1) {
   $$014$i$in = $$01$ph7$i$in;
   while (1) {
    $12 = $$014$i$in + 16 | 0;
    $13 = HEAP8[$12 >> 0] | 0;
    $15 = ($13 & 1) == 0;
    if ($15) $27 = ($13 & 255) >>> 1; else $27 = HEAP32[$$014$i$in + 20 >> 2] | 0;
    if ($6) $25 = $8; else $25 = HEAP32[$11 >> 2] | 0;
    if ($15) $29 = $12 + 1 | 0; else $29 = HEAP32[$$014$i$in + 24 >> 2] | 0;
    if ($6) $30 = $9; else $30 = HEAP32[$10 >> 2] | 0;
    $31 = _memcmp($29, $30, $25 >>> 0 < $27 >>> 0 ? $25 : $27) | 0;
    if (!$31) {
     if ($27 >>> 0 >= $25 >>> 0) break;
    } else if (($31 | 0) >= 0) break;
    $38 = HEAP32[$$014$i$in + 4 >> 2] | 0;
    if (!$38) {
     $$0$ph6$i = $$0$ph8$i;
     break L3;
    } else $$014$i$in = $38;
   }
   $$01$ph7$i$in = HEAP32[$$014$i$in >> 2] | 0;
   if (!$$01$ph7$i$in) {
    $$0$ph6$i = $$014$i$in;
    break;
   } else $$0$ph8$i = $$014$i$in;
  }
  if (($$0$ph6$i | 0) != ($2 | 0)) {
   $41 = $$0$ph6$i + 16 | 0;
   if ($6) $56 = $8; else $56 = HEAP32[$11 >> 2] | 0;
   $43 = HEAP8[$41 >> 0] | 0;
   $45 = ($43 & 1) == 0;
   if ($45) $54 = ($43 & 255) >>> 1; else $54 = HEAP32[$$0$ph6$i + 20 >> 2] | 0;
   if ($6) $58 = $9; else $58 = HEAP32[$10 >> 2] | 0;
   if ($45) $59 = $41 + 1 | 0; else $59 = HEAP32[$$0$ph6$i + 24 >> 2] | 0;
   $60 = _memcmp($58, $59, $54 >>> 0 < $56 >>> 0 ? $54 : $56) | 0;
   if (!$60) {
    if ($56 >>> 0 < $54 >>> 0) break;
   } else if (($60 | 0) < 0) break;
   HEAP32[$agg$result >> 2] = $$0$ph6$i;
   STACKTOP = sp;
   return;
  }
 } while (0);
 HEAP32[$agg$result >> 2] = $2;
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $33 = 0, $44 = 0, $6 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
   STACKTOP = sp;
   return;
  }
  $6 = $info + 28 | 0;
  if ((HEAP32[$6 >> 2] | 0) == 1) {
   STACKTOP = sp;
   return;
  }
  HEAP32[$6 >> 2] = $path_below;
  STACKTOP = sp;
  return;
 }
 if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
  $44 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$44 >> 2] | 0) + 24 >> 2] & 7]($44, $info, $current_ptr, $path_below, $use_strcmp);
  STACKTOP = sp;
  return;
 }
 if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
  $14 = $info + 20 | 0;
  if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
   HEAP32[$info + 32 >> 2] = $path_below;
   $20 = $info + 44 | 0;
   if ((HEAP32[$20 >> 2] | 0) == 4) {
    STACKTOP = sp;
    return;
   }
   $23 = $info + 52 | 0;
   HEAP8[$23 >> 0] = 0;
   $24 = $info + 53 | 0;
   HEAP8[$24 >> 0] = 0;
   $26 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 31]($26, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
   if (!(HEAP8[$24 >> 0] | 0)) {
    $is_dst_type_derived_from_static_type$0$off01 = 0;
    label = 13;
   } else if (!(HEAP8[$23 >> 0] | 0)) {
    $is_dst_type_derived_from_static_type$0$off01 = 1;
    label = 13;
   }
   do if ((label | 0) == 13) {
    HEAP32[$14 >> 2] = $current_ptr;
    $33 = $info + 40 | 0;
    HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
    if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
     HEAP8[$info + 54 >> 0] = 1;
     if ($is_dst_type_derived_from_static_type$0$off01) break;
    } else label = 16; else label = 16;
    if ((label | 0) == 16) if ($is_dst_type_derived_from_static_type$0$off01) break;
    HEAP32[$20 >> 2] = 4;
    STACKTOP = sp;
    return;
   } while (0);
   HEAP32[$20 >> 2] = 3;
   STACKTOP = sp;
   return;
  }
 }
 if (($path_below | 0) != 1) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$info + 32 >> 2] = 1;
 STACKTOP = sp;
 return;
}

function _memchr($src, $c, $n) {
 $src = $src | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$0$lcssa = 0, $$0$lcssa36 = 0, $$012 = 0, $$1$lcssa = 0, $$15 = 0, $$22 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $32 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0, $s$0$lcssa = 0, $s$0$lcssa35 = 0, $s$013 = 0, $s$13 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$06 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $4 = ($n | 0) != 0;
 L1 : do if (($src & 3 | 0) != 0 & $4) {
  $5 = $c & 255;
  $$012 = $n;
  $s$013 = $src;
  while (1) {
   if ((HEAP8[$s$013 >> 0] | 0) == $5 << 24 >> 24) {
    $$0$lcssa36 = $$012;
    $s$0$lcssa35 = $s$013;
    label = 6;
    break L1;
   }
   $8 = $s$013 + 1 | 0;
   $9 = $$012 + -1 | 0;
   $13 = ($9 | 0) != 0;
   if (($8 & 3 | 0) != 0 & $13) {
    $$012 = $9;
    $s$013 = $8;
   } else {
    $$0$lcssa = $9;
    $$lcssa = $13;
    $s$0$lcssa = $8;
    label = 5;
    break;
   }
  }
 } else {
  $$0$lcssa = $n;
  $$lcssa = $4;
  $s$0$lcssa = $src;
  label = 5;
 } while (0);
 if ((label | 0) == 5) if ($$lcssa) {
  $$0$lcssa36 = $$0$lcssa;
  $s$0$lcssa35 = $s$0$lcssa;
  label = 6;
 } else {
  $$3 = 0;
  $s$2 = $s$0$lcssa;
 }
 L8 : do if ((label | 0) == 6) {
  $15 = $c & 255;
  if ((HEAP8[$s$0$lcssa35 >> 0] | 0) == $15 << 24 >> 24) {
   $$3 = $$0$lcssa36;
   $s$2 = $s$0$lcssa35;
  } else {
   $17 = Math_imul($0, 16843009) | 0;
   L11 : do if ($$0$lcssa36 >>> 0 > 3) {
    $$15 = $$0$lcssa36;
    $w$06 = $s$0$lcssa35;
    while (1) {
     $20 = HEAP32[$w$06 >> 2] ^ $17;
     if (($20 & -2139062144 ^ -2139062144) & $20 + -16843009) {
      $$1$lcssa = $$15;
      $w$0$lcssa = $w$06;
      break L11;
     }
     $26 = $w$06 + 4 | 0;
     $27 = $$15 + -4 | 0;
     if ($27 >>> 0 > 3) {
      $$15 = $27;
      $w$06 = $26;
     } else {
      $$1$lcssa = $27;
      $w$0$lcssa = $26;
      break;
     }
    }
   } else {
    $$1$lcssa = $$0$lcssa36;
    $w$0$lcssa = $s$0$lcssa35;
   } while (0);
   if (!$$1$lcssa) {
    $$3 = 0;
    $s$2 = $w$0$lcssa;
   } else {
    $$22 = $$1$lcssa;
    $s$13 = $w$0$lcssa;
    while (1) {
     if ((HEAP8[$s$13 >> 0] | 0) == $15 << 24 >> 24) {
      $$3 = $$22;
      $s$2 = $s$13;
      break L8;
     }
     $32 = $s$13 + 1 | 0;
     $$22 = $$22 + -1 | 0;
     if (!$$22) {
      $$3 = 0;
      $s$2 = $32;
      break;
     } else $s$13 = $32;
    }
   }
  }
 } while (0);
 STACKTOP = sp;
 return (($$3 | 0) != 0 ? $s$2 : 0) | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 180 | 0;
 $__nar = sp + 160 | 0;
 $__o = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[44600] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[44601] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[44602] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[44603] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[44604] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[44605] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $6 = invoke_iii(22, $0 | 0, 45792) | 0;
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 31]($6, $__nar, $4, $__o) | 0;
 $13 = $__o + ($3 << 2) | 0;
 if (($5 | 0) == ($4 | 0)) {
  $__op$0 = $13;
  $22 = HEAP32[$__s >> 2] | 0;
  HEAP32[$1 >> 2] = $22;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $__op$0, $13, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
 $__op$0 = $__o + ($5 - $__nar << 2) | 0;
 $22 = HEAP32[$__s >> 2] | 0;
 HEAP32[$1 >> 2] = $22;
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $__op$0, $13, $__iob, $__fl);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 72 | 0;
 $__nar = sp + 52 | 0;
 $__o = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[44600] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[44601] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[44602] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[44603] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[44604] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[44605] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $6 = invoke_iii(22, $0 | 0, 45800) | 0;
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 31]($6, $__nar, $4, $__o) | 0;
 $13 = $__o + $3 | 0;
 if (($5 | 0) == ($4 | 0)) {
  $__op$0 = $13;
  $22 = HEAP32[$__s >> 2] | 0;
  HEAP32[$1 >> 2] = $22;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $__op$0, $13, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
 $__op$0 = $__o + ($5 - $__nar) | 0;
 $22 = HEAP32[$__s >> 2] | 0;
 HEAP32[$1 >> 2] = $22;
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $__op$0, $13, $__iob, $__fl);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_18type_strENS_5Value4TypeE($agg$result, $t) {
 $agg$result = $agg$result | 0;
 $t = $t | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 switch ($t | 0) {
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37952, 5);
   STACKTOP = sp;
   return;
  }
 case 19:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37984, 6);
   STACKTOP = sp;
   return;
  }
 case 18:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37976, 6);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37944, 6);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37936, 7);
   STACKTOP = sp;
   return;
  }
 case 17:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37960, 8);
   STACKTOP = sp;
   return;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 37928, 4);
   STACKTOP = sp;
   return;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 37992, 30) | 0, $t) | 0;
   __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
   __THREW__ = 0;
   $7 = invoke_iii(22, $0 | 0, 45800) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   }
   __THREW__ = 0;
   $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $17 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($16 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 }
}

function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $__g_end, $__err) {
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__err = $__err | 0;
 var $$012$i$i = 0, $$lcssa6 = 0, $0 = 0, $10 = 0, $12 = 0, $14 = 0, $19 = 0, $28 = 0, $30 = 0, $31 = 0, $34 = 0, $35 = 0, $37 = 0, $46 = 0, $7 = 0, $__ig$011 = 0, $__r$012 = 0, $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond210 = 0, $or$cond213 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping >> 0] | 0;
 if (!($0 & 1)) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$__grouping + 4 >> 2] | 0;
 if (!$7) {
  STACKTOP = sp;
  return;
 }
 if (($__g | 0) == ($__g_end | 0)) $19 = $0; else {
  $10 = $__g_end + -4 | 0;
  if ($10 >>> 0 > $__g >>> 0) {
   $$012$i$i = $__g;
   $14 = $10;
   do {
    $12 = HEAP32[$$012$i$i >> 2] | 0;
    HEAP32[$$012$i$i >> 2] = HEAP32[$14 >> 2];
    HEAP32[$14 >> 2] = $12;
    $$012$i$i = $$012$i$i + 4 | 0;
    $14 = $14 + -4 | 0;
   } while ($$012$i$i >>> 0 < $14 >>> 0);
   $19 = HEAP8[$__grouping >> 0] | 0;
  } else $19 = $0;
 }
 if (!($19 & 1)) {
  $31 = $__grouping + 1 | 0;
  $34 = ($19 & 255) >>> 1;
 } else {
  $31 = HEAP32[$__grouping + 8 >> 2] | 0;
  $34 = HEAP32[$__grouping + 4 >> 2] | 0;
 }
 $28 = $__g_end + -4 | 0;
 $30 = HEAP8[$31 >> 0] | 0;
 $or$cond210 = $30 << 24 >> 24 < 1 | $30 << 24 >> 24 == 127;
 L18 : do if ($28 >>> 0 > $__g >>> 0) {
  $35 = $31 + $34 | 0;
  $37 = $30;
  $__ig$011 = $31;
  $__r$012 = $__g;
  $or$cond213 = $or$cond210;
  while (1) {
   if (!$or$cond213) if (($37 << 24 >> 24 | 0) != (HEAP32[$__r$012 >> 2] | 0)) break;
   $__ig$011 = ($35 - $__ig$011 | 0) > 1 ? $__ig$011 + 1 | 0 : $__ig$011;
   $__r$012 = $__r$012 + 4 | 0;
   $46 = HEAP8[$__ig$011 >> 0] | 0;
   $or$cond2 = $46 << 24 >> 24 < 1 | $46 << 24 >> 24 == 127;
   if ($__r$012 >>> 0 >= $28 >>> 0) {
    $$lcssa6 = $46;
    $or$cond2$lcssa = $or$cond2;
    break L18;
   } else {
    $37 = $46;
    $or$cond213 = $or$cond2;
   }
  }
  HEAP32[$__err >> 2] = 4;
  STACKTOP = sp;
  return;
 } else {
  $$lcssa6 = $30;
  $or$cond2$lcssa = $or$cond210;
 } while (0);
 if ($or$cond2$lcssa) {
  STACKTOP = sp;
  return;
 }
 if (((HEAP32[$28 >> 2] | 0) + -1 | 0) >>> 0 < $$lcssa6 << 24 >> 24 >>> 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__err >> 2] = 4;
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $10 = 0, $11 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $31 = 0, $33 = 0, $35 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $8 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 __THREW__ = 0;
 invoke_vii(72, $__s | 0, $this | 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($0 & 1) {
  $33 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $33;
  $$pre$phi4Z2D = $this;
  $$pre$phiZ2D = $this;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $4 = HEAP32[$this >> 2] | 0;
   $8 = HEAP32[$this + ((HEAP32[$4 + -12 >> 2] | 0) + 24) >> 2] | 0;
   if (!$8) {
    $25 = $4;
    label = 9;
   } else {
    $10 = $8 + 24 | 0;
    $11 = HEAP32[$10 >> 2] | 0;
    if (($11 | 0) != (HEAP32[$8 + 28 >> 2] | 0)) {
     HEAP32[$10 >> 2] = $11 + 1;
     HEAP8[$11 >> 0] = $__c;
     break;
    }
    __THREW__ = 0;
    $20 = invoke_iii(HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] | 0, $8 | 0, $__c & 255 | 0) | 0;
    $21 = __THREW__;
    __THREW__ = 0;
    if (!($21 & 1)) {
     if (($20 | 0) != -1) break;
     $25 = HEAP32[$this >> 2] | 0;
     label = 9;
    }
   }
   if ((label | 0) == 9) {
    $26 = HEAP32[$25 + -12 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(48, $this + $26 | 0, HEAP32[$this + ($26 + 16) >> 2] | 1 | 0);
    $31 = __THREW__;
    __THREW__ = 0;
    if (!($31 & 1)) break;
   }
   $35 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$0 = $35;
   $$pre$phi4Z2D = $this;
   $$pre$phiZ2D = $this;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $this | 0;
 } while (0);
 ___cxa_begin_catch($$0 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $$pre$phi4Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $41 = __THREW__;
 __THREW__ = 0;
 if (!($41 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $this | 0;
 }
 $43 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $45 = __THREW__;
 __THREW__ = 0;
 if ($45 & 1) {
  $47 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($47);
 } else ___resumeException($43 | 0);
 return 0;
}

function __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $5 = 0, $7 = 0, $__nd$0$in$i = 0, $__parent = 0, $__r$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  $13 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $13;
  $$0$i = $13;
  $21 = $13;
 } else {
  $3 = HEAP32[$__v >> 2] | 0;
  $__nd$0$in$i = $1;
  while (1) {
   $5 = HEAP32[$__nd$0$in$i + 16 >> 2] | 0;
   if ($3 >>> 0 < $5 >>> 0) {
    $7 = HEAP32[$__nd$0$in$i >> 2] | 0;
    if (!$7) {
     label = 5;
     break;
    } else {
     $__nd$0$in$i = $7;
     continue;
    }
   }
   if ($5 >>> 0 >= $3 >>> 0) {
    label = 9;
    break;
   }
   $10 = $__nd$0$in$i + 4 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (!$11) {
    label = 8;
    break;
   } else $__nd$0$in$i = $11;
  }
  if ((label | 0) == 5) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__nd$0$in$i;
   $21 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 8) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $10;
   $21 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 9) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__parent;
   $21 = $__nd$0$in$i;
   break;
  }
 } while (0);
 $14 = HEAP32[$$0$i >> 2] | 0;
 if ($14) {
  $31 = 0;
  $__r$0 = $14;
  HEAP32[$agg$result >> 2] = $__r$0;
  $30 = $agg$result + 4 | 0;
  HEAP8[$30 >> 0] = $31;
  STACKTOP = sp;
  return;
 }
 $16 = __Znwj(20) | 0;
 HEAP32[$16 + 16 >> 2] = HEAP32[$__v >> 2];
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = $21;
 HEAP32[$$0$i >> 2] = $16;
 $23 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$23) $26 = $16; else {
  HEAP32[$this >> 2] = $23;
  $26 = HEAP32[$$0$i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $26);
 $27 = $this + 8 | 0;
 HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 1;
 $31 = 1;
 $__r$0 = $16;
 HEAP32[$agg$result >> 2] = $__r$0;
 $30 = $agg$result + 4 | 0;
 HEAP8[$30 >> 0] = $31;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $1 = 0, $14 = 0, $16 = 0, $20 = 0, $22 = 0, $28 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $4 = 0, $42 = 0, $49 = 0, $8 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, sp = 0;
 sp = STACKTOP;
 if ($__res_arg >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 10;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $14 = ($8 & 255) >>> 1; else $14 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $14 >>> 0 > $__res_arg >>> 0 ? $14 : $__res_arg;
 if ($16 >>> 0 < 11) $20 = 10; else $20 = ($16 + 16 & -16) + -1 | 0;
 if (($20 | 0) == ($22 | 0)) {
  STACKTOP = sp;
  return;
 }
 do if (($20 | 0) == 10) {
  $42 = $8;
  $__new_data$1 = $this + 1 | 0;
  $__now_long$0$off0 = 0;
  $__p$0 = HEAP32[$this + 8 >> 2] | 0;
  $__was_long$0$off0 = 1;
 } else {
  $28 = $20 + 1 | 0;
  if ($20 >>> 0 > $22 >>> 0) $__new_data$0 = __Znwj($28) | 0; else {
   __THREW__ = 0;
   $30 = invoke_ii(67, $28 | 0) | 0;
   $31 = __THREW__;
   __THREW__ = 0;
   if ($31 & 1) {
    $33 = ___cxa_find_matching_catch(0) | 0;
    ___cxa_begin_catch($33 | 0) | 0;
    ___cxa_end_catch();
    STACKTOP = sp;
    return;
   } else $__new_data$0 = $30;
  }
  $35 = HEAP8[$this >> 0] | 0;
  if (!($35 & 1)) {
   $42 = $35;
   $__new_data$1 = $__new_data$0;
   $__now_long$0$off0 = 1;
   $__p$0 = $this + 1 | 0;
   $__was_long$0$off0 = 0;
   break;
  } else {
   $42 = $35;
   $__new_data$1 = $__new_data$0;
   $__now_long$0$off0 = 1;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
   break;
  }
 } while (0);
 if (!($42 & 1)) $49 = ($42 & 255) >>> 1; else $49 = HEAP32[$this + 4 >> 2] | 0;
 _memcpy($__new_data$1 | 0, $__p$0 | 0, $49 + 1 | 0) | 0;
 if ($__was_long$0$off0) __ZdlPv($__p$0);
 if ($__now_long$0$off0) {
  HEAP32[$this >> 2] = $20 + 1 | 1;
  HEAP32[$this + 4 >> 2] = $14;
  HEAP32[$this + 8 >> 2] = $__new_data$1;
  STACKTOP = sp;
  return;
 } else {
  HEAP8[$this >> 0] = $14 << 1;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg$result = $agg$result | 0;
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $36 = 0, $37 = 0, $5 = 0, $6 = 0, $7 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 if (!$0) {
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $2 = $__oe;
 $3 = $__ob;
 $5 = $2 - $3 >> 2;
 $6 = $__iob + 12 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $__ns$0 = ($7 | 0) > ($5 | 0) ? $7 - $5 | 0 : 0;
 $10 = $__op;
 $11 = $10 - $3 | 0;
 $12 = $11 >> 2;
 if (($11 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $12) | 0) != ($12 | 0)) {
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 do if (($__ns$0 | 0) > 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp, $__ns$0, $__fl);
  if (!(HEAP8[$__sp >> 0] & 1)) $29 = $__sp + 4 | 0; else $29 = HEAP32[$__sp + 8 >> 2] | 0;
  __THREW__ = 0;
  $30 = invoke_iiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $29 | 0, $__ns$0 | 0) | 0;
  $31 = __THREW__;
  __THREW__ = 0;
  if ($31 & 1) {
   $34 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sp);
   ___resumeException($34 | 0);
  }
  if (($30 | 0) == ($__ns$0 | 0)) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sp);
   break;
  }
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sp);
  STACKTOP = sp;
  return;
 } while (0);
 $36 = $2 - $10 | 0;
 $37 = $36 >> 2;
 if (($36 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__op, $37) | 0) != ($37 | 0)) {
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 HEAP32[$6 >> 2] = 0;
 HEAP32[$agg$result >> 2] = $0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__13mapIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $20 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $35 = 0, $5 = 0, $7 = 0, $__nd$0$in$i = 0, $__parent = 0, $__r$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  $13 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $13;
  $$0$i = $13;
  $26 = $13;
 } else {
  $3 = HEAP32[$__k >> 2] | 0;
  $__nd$0$in$i = $1;
  while (1) {
   $5 = HEAP32[$__nd$0$in$i + 16 >> 2] | 0;
   if ($3 >>> 0 < $5 >>> 0) {
    $7 = HEAP32[$__nd$0$in$i >> 2] | 0;
    if (!$7) {
     label = 5;
     break;
    } else {
     $__nd$0$in$i = $7;
     continue;
    }
   }
   if ($5 >>> 0 >= $3 >>> 0) {
    label = 9;
    break;
   }
   $10 = $__nd$0$in$i + 4 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (!$11) {
    label = 8;
    break;
   } else $__nd$0$in$i = $11;
  }
  if ((label | 0) == 5) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__nd$0$in$i;
   $26 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 8) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $10;
   $26 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 9) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__parent;
   $26 = $__nd$0$in$i;
   break;
  }
 } while (0);
 $14 = HEAP32[$$0$i >> 2] | 0;
 if ($14) {
  $__r$0 = $14;
  $35 = $__r$0 + 20 | 0;
  STACKTOP = sp;
  return $35 | 0;
 }
 $16 = __Znwj(28) | 0;
 HEAP32[$16 + 16 >> 2] = HEAP32[$__k >> 2];
 $20 = $16 + 20 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = $26;
 HEAP32[$$0$i >> 2] = $16;
 $28 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$28) $31 = $16; else {
  HEAP32[$this >> 2] = $28;
  $31 = HEAP32[$$0$i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $31);
 $32 = $this + 8 | 0;
 HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
 $__r$0 = $16;
 $35 = $__r$0 + 20 | 0;
 STACKTOP = sp;
 return $35 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignINS_19istreambuf_iteratorIcS2_EEEENS_9enable_ifIXaasr19__is_input_iteratorIT_EE5valuentsr21__is_forward_iteratorISA_EE5valueERS5_E4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $18 = 0, $19 = 0, $20 = 0, $32 = 0, $33 = 0, $34 = 0, $44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (!(HEAP8[$this >> 0] & 1)) {
  HEAP8[$this + 1 >> 0] = 0;
  HEAP8[$this >> 0] = 0;
 } else {
  HEAP8[HEAP32[$this + 8 >> 2] >> 0] = 0;
  HEAP32[$this + 4 >> 2] = 0;
 }
 $$pre$i$i$i = HEAP32[$__first >> 2] | 0;
 L5 : while (1) {
  if (!$$pre$i$i$i) $18 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0) == -1) {
   HEAP32[$__first >> 2] = 0;
   $18 = 0;
  } else $18 = $$pre$i$i$i; else $18 = $$pre$i$i$i;
  $19 = ($18 | 0) == 0;
  $20 = HEAP32[$__last >> 2] | 0;
  do if (!$20) label = 14; else {
   if ((HEAP32[$20 + 12 >> 2] | 0) != (HEAP32[$20 + 16 >> 2] | 0)) if ($19) break; else {
    label = 22;
    break L5;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0) == -1) {
    HEAP32[$__last >> 2] = 0;
    label = 14;
    break;
   } else if ($19) break; else {
    label = 22;
    break L5;
   }
  } while (0);
  if ((label | 0) == 14) {
   label = 0;
   if ($19) {
    label = 22;
    break;
   }
  }
  $32 = $18 + 12 | 0;
  $33 = HEAP32[$32 >> 2] | 0;
  $34 = $18 + 16 | 0;
  if (($33 | 0) == (HEAP32[$34 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 36 >> 2] & 127]($18) | 0; else $$0$i$i = HEAPU8[$33 >> 0] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $$0$i$i & 255);
  $44 = HEAP32[$32 >> 2] | 0;
  if (($44 | 0) == (HEAP32[$34 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$18 >> 2] | 0) + 40 >> 2] & 127]($18) | 0;
   $$pre$i$i$i = $18;
   continue;
  } else {
   HEAP32[$32 >> 2] = $44 + 1;
   $$pre$i$i$i = $18;
   continue;
  }
 }
 if ((label | 0) == 22) {
  STACKTOP = sp;
  return $this | 0;
 }
 return 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $$sink = 0, $1 = 0, $14 = 0, $16 = 0, $20 = 0, $22 = 0, $29 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $4 = 0, $43 = 0, $50 = 0, $8 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, sp = 0;
 sp = STACKTOP;
 if ($__res_arg >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 1;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $14 = ($8 & 255) >>> 1; else $14 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $14 >>> 0 > $__res_arg >>> 0 ? $14 : $__res_arg;
 if ($16 >>> 0 < 2) $20 = 1; else $20 = ($16 + 4 & -4) + -1 | 0;
 if (($20 | 0) == ($22 | 0)) {
  STACKTOP = sp;
  return;
 }
 do if (($20 | 0) == 1) {
  $43 = $8;
  $__new_data$1 = $this + 4 | 0;
  $__now_long$0$off0 = 0;
  $__p$0 = HEAP32[$this + 8 >> 2] | 0;
  $__was_long$0$off0 = 1;
 } else {
  $29 = ($20 << 2) + 4 | 0;
  if ($20 >>> 0 > $22 >>> 0) $$sink = __Znwj($29) | 0; else {
   __THREW__ = 0;
   $31 = invoke_ii(67, $29 | 0) | 0;
   $32 = __THREW__;
   __THREW__ = 0;
   if ($32 & 1) {
    $34 = ___cxa_find_matching_catch(0) | 0;
    ___cxa_begin_catch($34 | 0) | 0;
    ___cxa_end_catch();
    STACKTOP = sp;
    return;
   } else $$sink = $31;
  }
  $36 = HEAP8[$this >> 0] | 0;
  if (!($36 & 1)) {
   $43 = $36;
   $__new_data$1 = $$sink;
   $__now_long$0$off0 = 1;
   $__p$0 = $this + 4 | 0;
   $__was_long$0$off0 = 0;
   break;
  } else {
   $43 = $36;
   $__new_data$1 = $$sink;
   $__now_long$0$off0 = 1;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
   break;
  }
 } while (0);
 if (!($43 & 1)) $50 = ($43 & 255) >>> 1; else $50 = HEAP32[$this + 4 >> 2] | 0;
 _wmemcpy($__new_data$1, $__p$0, $50 + 1 | 0) | 0;
 if ($__was_long$0$off0) __ZdlPv($__p$0);
 if ($__now_long$0$off0) {
  HEAP32[$this >> 2] = $20 + 1 | 1;
  HEAP32[$this + 4 >> 2] = $14;
  HEAP32[$this + 8 >> 2] = $__new_data$1;
  STACKTOP = sp;
  return;
 } else {
  HEAP8[$this >> 0] = $14 << 1;
  STACKTOP = sp;
  return;
 }
}

function __ZN9Allocator4makeI13LiteralStringJ13LocationRangeNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPT_DpT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0, $33 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(60) | 0;
 HEAP32[$1 >> 2] = 34168;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $33 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $33;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 + 0 >> 2] = HEAP32[$6 + 0 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 14;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 34184;
 __THREW__ = 0;
 invoke_vii(40, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  $15 = tempRet0;
  HEAP32[$1 >> 2] = 34168;
  $16 = HEAP32[$8 >> 2] | 0;
  if ($16) {
   $18 = HEAP32[$9 >> 2] | 0;
   if (($18 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $18 + (~(($18 + -4 - $16 | 0) >>> 2) << 2);
   __ZdlPv($16);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
  $eh$lpad$body$index2Z2D = $15;
  $eh$lpad$body$indexZ2D = $14;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = $1;
 $24 = $this + 16 | 0;
 $25 = HEAP32[$24 >> 2] | 0;
 if ($25 >>> 0 >= (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
  __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
  STACKTOP = sp;
  return $1 | 0;
 }
 if (!$25) $31 = 0; else {
  HEAP32[$25 >> 2] = $1;
  $31 = HEAP32[$24 >> 2] | 0;
 }
 HEAP32[$24 >> 2] = $31 + 4;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $agg$result = $agg$result | 0;
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $0 = 0, $10 = 0, $2 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 if (!$0) {
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $2 = $__oe;
 $3 = $__ob;
 $4 = $2 - $3 | 0;
 $5 = $__iob + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $__ns$0 = ($6 | 0) > ($4 | 0) ? $6 - $4 | 0 : 0;
 $9 = $__op;
 $10 = $9 - $3 | 0;
 if (($10 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $10) | 0) != ($10 | 0)) {
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 do if (($__ns$0 | 0) > 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp, $__ns$0, $__fl);
  if (!(HEAP8[$__sp >> 0] & 1)) $27 = $__sp + 1 | 0; else $27 = HEAP32[$__sp + 8 >> 2] | 0;
  __THREW__ = 0;
  $28 = invoke_iiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $27 | 0, $__ns$0 | 0) | 0;
  $29 = __THREW__;
  __THREW__ = 0;
  if ($29 & 1) {
   $32 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sp);
   ___resumeException($32 | 0);
  }
  if (($28 | 0) == ($__ns$0 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sp);
   break;
  }
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sp);
  STACKTOP = sp;
  return;
 } while (0);
 $34 = $2 - $9 | 0;
 if (($34 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__op, $34) | 0) != ($34 | 0)) {
  HEAP32[$__s >> 2] = 0;
  HEAP32[$agg$result >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 HEAP32[$5 >> 2] = 0;
 HEAP32[$agg$result >> 2] = $0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__13mapIPK10IdentifierPN12_GLOBAL__N_19HeapThunkENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $5 = 0, $7 = 0, $__nd$0$in$i = 0, $__parent = 0, $__r$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  $13 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $13;
  $$0$i = $13;
  $22 = $13;
 } else {
  $3 = HEAP32[$__k >> 2] | 0;
  $__nd$0$in$i = $1;
  while (1) {
   $5 = HEAP32[$__nd$0$in$i + 16 >> 2] | 0;
   if ($3 >>> 0 < $5 >>> 0) {
    $7 = HEAP32[$__nd$0$in$i >> 2] | 0;
    if (!$7) {
     label = 5;
     break;
    } else {
     $__nd$0$in$i = $7;
     continue;
    }
   }
   if ($5 >>> 0 >= $3 >>> 0) {
    label = 9;
    break;
   }
   $10 = $__nd$0$in$i + 4 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (!$11) {
    label = 8;
    break;
   } else $__nd$0$in$i = $11;
  }
  if ((label | 0) == 5) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__nd$0$in$i;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 8) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $10;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 9) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__parent;
   $22 = $__nd$0$in$i;
   break;
  }
 } while (0);
 $14 = HEAP32[$$0$i >> 2] | 0;
 if ($14) {
  $__r$0 = $14;
  $31 = $__r$0 + 20 | 0;
  STACKTOP = sp;
  return $31 | 0;
 }
 $16 = __Znwj(24) | 0;
 HEAP32[$16 + 16 >> 2] = HEAP32[$__k >> 2];
 HEAP32[$16 + 20 >> 2] = 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = $22;
 HEAP32[$$0$i >> 2] = $16;
 $24 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$24) $27 = $16; else {
  HEAP32[$this >> 2] = $24;
  $27 = HEAP32[$$0$i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $27);
 $28 = $this + 8 | 0;
 HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
 $__r$0 = $16;
 $31 = $__r$0 + 20 | 0;
 STACKTOP = sp;
 return $31 | 0;
}

function __ZNSt3__13mapIPK10IdentifierN6Object5Field4HideENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $5 = 0, $7 = 0, $__nd$0$in$i = 0, $__parent = 0, $__r$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  $13 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $13;
  $$0$i = $13;
  $22 = $13;
 } else {
  $3 = HEAP32[$__k >> 2] | 0;
  $__nd$0$in$i = $1;
  while (1) {
   $5 = HEAP32[$__nd$0$in$i + 16 >> 2] | 0;
   if ($3 >>> 0 < $5 >>> 0) {
    $7 = HEAP32[$__nd$0$in$i >> 2] | 0;
    if (!$7) {
     label = 5;
     break;
    } else {
     $__nd$0$in$i = $7;
     continue;
    }
   }
   if ($5 >>> 0 >= $3 >>> 0) {
    label = 9;
    break;
   }
   $10 = $__nd$0$in$i + 4 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (!$11) {
    label = 8;
    break;
   } else $__nd$0$in$i = $11;
  }
  if ((label | 0) == 5) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__nd$0$in$i;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 8) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $10;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 9) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__parent;
   $22 = $__nd$0$in$i;
   break;
  }
 } while (0);
 $14 = HEAP32[$$0$i >> 2] | 0;
 if ($14) {
  $__r$0 = $14;
  $31 = $__r$0 + 20 | 0;
  STACKTOP = sp;
  return $31 | 0;
 }
 $16 = __Znwj(24) | 0;
 HEAP32[$16 + 16 >> 2] = HEAP32[$__k >> 2];
 HEAP32[$16 + 20 >> 2] = 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = $22;
 HEAP32[$$0$i >> 2] = $16;
 $24 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$24) $27 = $16; else {
  HEAP32[$this >> 2] = $24;
  $27 = HEAP32[$$0$i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $27);
 $28 = $this + 8 | 0;
 HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
 $__r$0 = $16;
 $31 = $__r$0 + 20 | 0;
 STACKTOP = sp;
 return $31 | 0;
}

function __ZNSt3__13mapIPK10IdentifierP3ASTNS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $5 = 0, $7 = 0, $__nd$0$in$i = 0, $__parent = 0, $__r$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  $13 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $13;
  $$0$i = $13;
  $22 = $13;
 } else {
  $3 = HEAP32[$__k >> 2] | 0;
  $__nd$0$in$i = $1;
  while (1) {
   $5 = HEAP32[$__nd$0$in$i + 16 >> 2] | 0;
   if ($3 >>> 0 < $5 >>> 0) {
    $7 = HEAP32[$__nd$0$in$i >> 2] | 0;
    if (!$7) {
     label = 5;
     break;
    } else {
     $__nd$0$in$i = $7;
     continue;
    }
   }
   if ($5 >>> 0 >= $3 >>> 0) {
    label = 9;
    break;
   }
   $10 = $__nd$0$in$i + 4 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (!$11) {
    label = 8;
    break;
   } else $__nd$0$in$i = $11;
  }
  if ((label | 0) == 5) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__nd$0$in$i;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 8) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $10;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 9) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__parent;
   $22 = $__nd$0$in$i;
   break;
  }
 } while (0);
 $14 = HEAP32[$$0$i >> 2] | 0;
 if ($14) {
  $__r$0 = $14;
  $31 = $__r$0 + 20 | 0;
  STACKTOP = sp;
  return $31 | 0;
 }
 $16 = __Znwj(24) | 0;
 HEAP32[$16 + 16 >> 2] = HEAP32[$__k >> 2];
 HEAP32[$16 + 20 >> 2] = 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = $22;
 HEAP32[$$0$i >> 2] = $16;
 $24 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$24) $27 = $16; else {
  HEAP32[$this >> 2] = $24;
  $27 = HEAP32[$$0$i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $27);
 $28 = $this + 8 | 0;
 HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
 $__r$0 = $16;
 $31 = $__r$0 + 20 | 0;
 STACKTOP = sp;
 return $31 | 0;
}

function __ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEEixERS6_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $5 = 0, $7 = 0, $__nd$0$in$i = 0, $__parent = 0, $__r$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  $13 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $13;
  $$0$i = $13;
  $22 = $13;
 } else {
  $3 = HEAP32[$__k >> 2] | 0;
  $__nd$0$in$i = $1;
  while (1) {
   $5 = HEAP32[$__nd$0$in$i + 16 >> 2] | 0;
   if (($3 | 0) < ($5 | 0)) {
    $7 = HEAP32[$__nd$0$in$i >> 2] | 0;
    if (!$7) {
     label = 5;
     break;
    } else {
     $__nd$0$in$i = $7;
     continue;
    }
   }
   if (($5 | 0) >= ($3 | 0)) {
    label = 9;
    break;
   }
   $10 = $__nd$0$in$i + 4 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (!$11) {
    label = 8;
    break;
   } else $__nd$0$in$i = $11;
  }
  if ((label | 0) == 5) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__nd$0$in$i;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 8) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $10;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 9) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__parent;
   $22 = $__nd$0$in$i;
   break;
  }
 } while (0);
 $14 = HEAP32[$$0$i >> 2] | 0;
 if ($14) {
  $__r$0 = $14;
  $31 = $__r$0 + 20 | 0;
  STACKTOP = sp;
  return $31 | 0;
 }
 $16 = __Znwj(24) | 0;
 HEAP32[$16 + 16 >> 2] = HEAP32[$__k >> 2];
 HEAP32[$16 + 20 >> 2] = 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = $22;
 HEAP32[$$0$i >> 2] = $16;
 $24 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$24) $27 = $16; else {
  HEAP32[$this >> 2] = $24;
  $27 = HEAP32[$$0$i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $27);
 $28 = $this + 8 | 0;
 HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
 $__r$0 = $16;
 $31 = $__r$0 + 20 | 0;
 STACKTOP = sp;
 return $31 | 0;
}

function __ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEEixEOS1_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $5 = 0, $7 = 0, $__nd$0$in$i = 0, $__parent = 0, $__r$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  $13 = $this + 4 | 0;
  HEAP32[$__parent >> 2] = $13;
  $$0$i = $13;
  $22 = $13;
 } else {
  $3 = HEAP32[$__k >> 2] | 0;
  $__nd$0$in$i = $1;
  while (1) {
   $5 = HEAP32[$__nd$0$in$i + 16 >> 2] | 0;
   if (($3 | 0) < ($5 | 0)) {
    $7 = HEAP32[$__nd$0$in$i >> 2] | 0;
    if (!$7) {
     label = 5;
     break;
    } else {
     $__nd$0$in$i = $7;
     continue;
    }
   }
   if (($5 | 0) >= ($3 | 0)) {
    label = 9;
    break;
   }
   $10 = $__nd$0$in$i + 4 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (!$11) {
    label = 8;
    break;
   } else $__nd$0$in$i = $11;
  }
  if ((label | 0) == 5) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__nd$0$in$i;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 8) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $10;
   $22 = $__nd$0$in$i;
   break;
  } else if ((label | 0) == 9) {
   HEAP32[$__parent >> 2] = $__nd$0$in$i;
   $$0$i = $__parent;
   $22 = $__nd$0$in$i;
   break;
  }
 } while (0);
 $14 = HEAP32[$$0$i >> 2] | 0;
 if ($14) {
  $__r$0 = $14;
  $31 = $__r$0 + 20 | 0;
  STACKTOP = sp;
  return $31 | 0;
 }
 $16 = __Znwj(24) | 0;
 HEAP32[$16 + 16 >> 2] = HEAP32[$__k >> 2];
 HEAP32[$16 + 20 >> 2] = 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = $22;
 HEAP32[$$0$i >> 2] = $16;
 $24 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$24) $27 = $16; else {
  HEAP32[$this >> 2] = $24;
  $27 = HEAP32[$$0$i >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $27);
 $28 = $this + 8 | 0;
 HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
 $__r$0 = $16;
 $31 = $__r$0 + 20 | 0;
 STACKTOP = sp;
 return $31 | 0;
}

function __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEEixERSD_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $29 = $__r$0 + 40 | 0;
  STACKTOP = sp;
  return $29 | 0;
 }
 $3 = __Znwj(44) | 0;
 $4 = $3 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $4 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 do if ($5 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $13;
 } else {
  __THREW__ = 0;
  invoke_vii(40, $3 + 28 | 0, $__k + 12 | 0);
  $9 = __THREW__;
  __THREW__ = 0;
  if ($9 & 1) {
   $11 = ___cxa_find_matching_catch() | 0;
   $12 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($4);
   $eh$lpad$body$i$index2Z2D = $12;
   $eh$lpad$body$i$indexZ2D = $11;
   break;
  }
  HEAP32[$3 + 40 >> 2] = 0;
  $17 = HEAP32[$__parent >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = $17;
  HEAP32[$0 >> 2] = $3;
  $21 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
  if (!$21) $25 = $3; else {
   HEAP32[$this >> 2] = $21;
   $25 = HEAP32[$0 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $25);
  $26 = $this + 8 | 0;
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1;
  $__r$0 = $3;
  $29 = $__r$0 + 40 | 0;
  STACKTOP = sp;
  return $29 | 0;
 } while (0);
 if (!$3) ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 __ZdlPv($3);
 ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 return 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 116 | 0;
 $__nar = sp + 104 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[44592] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[44593] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[44594] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[44595] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[44596] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[44597] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 44496, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 116 | 0;
 $__nar = sp + 104 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[44592] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[44593] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[44594] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[44595] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[44596] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[44597] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 44496, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 56 | 0;
 $__nar = sp + 44 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[44592] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[44593] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[44594] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[44595] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[44596] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[44597] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 44496, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg$result, $this, $__s, $__iob, $__fl, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 56 | 0;
 $__nar = sp + 44 | 0;
 $__o = sp + 20 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt + 0 >> 0] = HEAP8[44592] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[44593] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[44594] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[44595] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[44596] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[44597] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 44496, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $15 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($15 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $13, $14, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK5Token($o, $v) {
 $o = $o | 0;
 $v = $v | 0;
 var $0 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $v + 4 | 0;
 $2 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($0, 35424) | 0) == 0;
 $3 = HEAP32[$v >> 2] | 0;
 if ($2) {
  $4 = __ZN5Token8toStringENS_4KindE($3) | 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, $4, _strlen($4 | 0) | 0) | 0;
  STACKTOP = sp;
  return;
 }
 if (($3 | 0) == 13) {
  $7 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 35432, 1) | 0;
  $8 = HEAP8[$0 >> 0] | 0;
  if (!($8 & 1)) {
   $18 = $0 + 1 | 0;
   $19 = ($8 & 255) >>> 1;
  } else {
   $18 = HEAP32[$v + 12 >> 2] | 0;
   $19 = HEAP32[$v + 8 >> 2] | 0;
  }
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($7, $18, $19) | 0, 35432, 1) | 0;
  STACKTOP = sp;
  return;
 } else {
  $21 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 34272, 1) | 0;
  $23 = __ZN5Token8toStringENS_4KindE(HEAP32[$v >> 2] | 0) | 0;
  $26 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($21, $23, _strlen($23 | 0) | 0) | 0, 35440, 3) | 0;
  $27 = HEAP8[$0 >> 0] | 0;
  if (!($27 & 1)) {
   $37 = $0 + 1 | 0;
   $38 = ($27 & 255) >>> 1;
  } else {
   $37 = HEAP32[$v + 12 >> 2] | 0;
   $38 = HEAP32[$v + 8 >> 2] | 0;
  }
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($26, $37, $38) | 0, 35448, 2) | 0;
  STACKTOP = sp;
  return;
 }
}

function ___cxx_global_array_dtor73($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52372 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52360 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52348 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52336 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52324 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52312 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52300 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52288 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52276 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52264 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52252 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52240 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52228 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52216 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52204 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52192 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52180 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52168 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52156 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52144 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52132 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52120 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52108 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(52096);
 STACKTOP = sp;
 return;
}

function ___cxx_global_array_dtor48($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51532 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51520 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51508 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51496 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51484 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51472 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51460 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51448 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51436 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51424 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51412 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51400 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51388 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51376 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51364 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51352 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51340 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51328 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51316 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51304 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51292 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51280 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51268 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(51256);
 STACKTOP = sp;
 return;
}

function ___cxx_global_array_dtor45($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51220 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51208 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51196 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51184 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51172 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51160 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51148 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51136 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51124 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51112 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51100 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51088 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51076 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51064 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51052 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51040 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51028 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51016 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(51004 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(50992 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(50980 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(50968 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(50956 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(50944);
 STACKTOP = sp;
 return;
}

function ___cxx_global_array_dtor($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50892 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50880 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50868 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50856 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50844 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50832 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50820 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50808 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50796 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50784 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50772 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50760 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50748 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50736 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50724 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50712 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50700 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50688 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50676 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50664 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50652 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50640 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50628 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(50616);
 STACKTOP = sp;
 return;
}

function __ZL6appendRNSt3__13setIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEEERKS8_($r, $s) {
 $r = $r | 0;
 $s = $s | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01$i$i$i = 0, $$byval_copy = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $19 = 0, $2 = 0, $22 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__parent$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i$i = sp + 4 | 0;
 $0 = sp;
 $1 = HEAP32[$s >> 2] | 0;
 $2 = $s + 4 | 0;
 $3 = $r + 4 | 0;
 if (($1 | 0) == ($2 | 0)) {
  STACKTOP = sp;
  return;
 }
 $5 = $r + 4 | 0;
 $6 = $r + 8 | 0;
 $8 = $1;
 while (1) {
  $7 = $8 + 16 | 0;
  HEAP32[$0 >> 2] = $3;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
  $9 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($r, $$byval_copy, $__parent$i$i, $7) | 0;
  if (!(HEAP32[$9 >> 2] | 0)) {
   $12 = __Znwj(20) | 0;
   HEAP32[$12 + 16 >> 2] = HEAP32[$7 >> 2];
   $15 = HEAP32[$__parent$i$i >> 2] | 0;
   HEAP32[$12 >> 2] = 0;
   HEAP32[$12 + 4 >> 2] = 0;
   HEAP32[$12 + 8 >> 2] = $15;
   HEAP32[$9 >> 2] = $12;
   $19 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
   if (!$19) $22 = $12; else {
    HEAP32[$r >> 2] = $19;
    $22 = HEAP32[$9 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$5 >> 2] | 0, $22);
   HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
  }
  $26 = HEAP32[$8 + 4 >> 2] | 0;
  if (!$26) {
   $$0$i$i$i = $8;
   while (1) {
    $31 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$31 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$01$i$i$i = $31;
     break;
    } else $$0$i$i$i = $31;
   }
  } else {
   $$0$i$i$i$i = $26;
   while (1) {
    $28 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$28) {
     $$01$i$i$i = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $28;
   }
  }
  if (($$01$i$i$i | 0) == ($2 | 0)) break; else $8 = $$01$i$i$i;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $__way, $2) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__way = $__way | 0;
 $2 = $2 | 0;
 var $$off0 = 0, $10 = 0, $11 = 0, $23 = 0, $28 = 0, $32 = 0, $37 = 0, $4 = 0, $41 = 0, $45 = 0, $49 = 0, $54 = 0, $59 = 0, $6 = 0, $63 = 0, $68 = 0, $69 = 0, $74 = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$this + 68 >> 2] | 0;
 if (!$4) {
  $6 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($6);
  ___cxa_throw($6 | 0, 54576, 170);
 }
 $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 127]($4) | 0;
 $11 = $this + 64 | 0;
 if (HEAP32[$11 >> 2] | 0) if (!(($10 | 0) < 1 & (($0 | 0) != 0 | ($1 | 0) != 0))) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0)) {
  if ($__way >>> 0 >= 3) {
   $32 = $agg$result;
   HEAP32[$32 >> 2] = 0;
   HEAP32[$32 + 4 >> 2] = 0;
   $37 = $agg$result + 8 | 0;
   HEAP32[$37 >> 2] = -1;
   HEAP32[$37 + 4 >> 2] = -1;
   STACKTOP = sp;
   return;
  }
  $41 = HEAP32[$11 >> 2] | 0;
  if (($10 | 0) > 0) {
   $45 = ___muldi3($10 | 0, (($10 | 0) < 0) << 31 >> 31 | 0, $0 | 0, $1 | 0) | 0;
   $$off0 = $45;
  } else $$off0 = 0;
  if (!(_fseeko($41 | 0, $$off0 | 0, $__way | 0) | 0)) {
   $59 = _ftello(HEAP32[$11 >> 2] | 0) | 0;
   $63 = $this + 72 | 0;
   $68 = HEAP32[$63 + 4 >> 2] | 0;
   $69 = $agg$result;
   HEAP32[$69 >> 2] = HEAP32[$63 >> 2];
   HEAP32[$69 + 4 >> 2] = $68;
   $74 = $agg$result + 8 | 0;
   HEAP32[$74 >> 2] = $59;
   HEAP32[$74 + 4 >> 2] = (($59 | 0) < 0) << 31 >> 31;
   STACKTOP = sp;
   return;
  } else {
   $49 = $agg$result;
   HEAP32[$49 >> 2] = 0;
   HEAP32[$49 + 4 >> 2] = 0;
   $54 = $agg$result + 8 | 0;
   HEAP32[$54 >> 2] = -1;
   HEAP32[$54 + 4 >> 2] = -1;
   STACKTOP = sp;
   return;
  }
 }
 $23 = $agg$result;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 $28 = $agg$result + 8 | 0;
 HEAP32[$28 >> 2] = -1;
 HEAP32[$28 + 4 >> 2] = -1;
 STACKTOP = sp;
 return;
}

function ___dynamic_cast($static_ptr, $static_type, $dst_type, $src2dst_offset) {
 $static_ptr = $static_ptr | 0;
 $static_type = $static_type | 0;
 $dst_type = $dst_type | 0;
 $src2dst_offset = $src2dst_offset | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $27 = 0, $4 = 0, $6 = 0, $dst_ptr$0 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 $0 = HEAP32[$static_ptr >> 2] | 0;
 $4 = $static_ptr + (HEAP32[$0 + -8 >> 2] | 0) | 0;
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 HEAP32[$info >> 2] = $dst_type;
 HEAP32[$info + 4 >> 2] = $static_ptr;
 HEAP32[$info + 8 >> 2] = $static_type;
 HEAP32[$info + 12 >> 2] = $src2dst_offset;
 $10 = $info + 16 | 0;
 $11 = $info + 20 | 0;
 $12 = $info + 24 | 0;
 $13 = $info + 28 | 0;
 $14 = $info + 32 | 0;
 $15 = $info + 40 | 0;
 $16 = ($6 | 0) == ($dst_type | 0);
 dest = $10 + 0 | 0;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$10 + 36 >> 1] = 0;
 HEAP8[$10 + 38 >> 0] = 0;
 if ($16) {
  HEAP32[$info + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 20 >> 2] & 31]($6, $info, $4, $4, 1, 0);
  $dst_ptr$0 = (HEAP32[$12 >> 2] | 0) == 1 ? $4 : 0;
  STACKTOP = sp;
  return $dst_ptr$0 | 0;
 }
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 7]($6, $info, $4, 1, 0);
 $27 = HEAP32[$info + 36 >> 2] | 0;
 if (($27 | 0) == 1) {
  if ((HEAP32[$12 >> 2] | 0) != 1) if (!((HEAP32[$15 >> 2] | 0) == 0 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1)) {
   $dst_ptr$0 = 0;
   STACKTOP = sp;
   return $dst_ptr$0 | 0;
  }
  $dst_ptr$0 = HEAP32[$10 >> 2] | 0;
  STACKTOP = sp;
  return $dst_ptr$0 | 0;
 } else if (!$27) {
  $dst_ptr$0 = (HEAP32[$15 >> 2] | 0) == 1 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1 ? HEAP32[$11 >> 2] | 0 : 0;
  STACKTOP = sp;
  return $dst_ptr$0 | 0;
 } else {
  $dst_ptr$0 = 0;
  STACKTOP = sp;
  return $dst_ptr$0 | 0;
 }
 return 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $23 = 0, $25 = 0, $26 = 0, $30 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 41008;
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 $5 = $this + 52 | 0;
 $6 = $this + 68 | 0;
 $7 = $this + 98 | 0;
 $8 = $this + 4 | 0;
 dest = $5 + 0 | 0;
 stop = dest + 44 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$5 + 44 >> 1] = 0;
 HEAP8[$5 + 46 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $8);
 __THREW__ = 0;
 $9 = invoke_iii(39, $0 | 0, 45864) | 0;
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $12 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($12);
 }
 __ZNSt3__16localeD2Ev($0);
 do if ($9) {
  __ZNSt3__16localeC2ERKS0_($1, $8);
  __THREW__ = 0;
  $14 = invoke_iii(22, $1 | 0, 45864) | 0;
  $15 = __THREW__;
  __THREW__ = 0;
  if (!($15 & 1)) {
   HEAP32[$6 >> 2] = $14;
   __ZNSt3__16localeD2Ev($1);
   $17 = HEAP32[$6 >> 2] | 0;
   HEAP8[$7 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 127]($17) | 0) & 1;
   break;
  }
  $25 = ___cxa_find_matching_catch() | 0;
  $26 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  $$0 = $26;
  $$01 = $25;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($$01 | 0);
 } while (0);
 __THREW__ = 0;
 invoke_iiii(HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] | 0, $this | 0, 0, 4096) | 0;
 $30 = __THREW__;
 __THREW__ = 0;
 if (!($30 & 1)) {
  STACKTOP = sp;
  return;
 }
 $23 = ___cxa_find_matching_catch() | 0;
 $$0 = tempRet0;
 $$01 = $23;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 ___resumeException($$01 | 0);
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $st, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $$016 = 0, $$1 = 0, $$pn = 0, $12 = 0, $14 = 0, $16 = 0, $19 = 0, $2 = 0, $21 = 0, $3 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0$lcssa = 0, $nbytes$07 = 0, $nbytes$1 = 0, $nwchar_t$08 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (($mx | 0) == 0 | ($frm | 0) == ($frm_end | 0)) {
  $nbytes$0$lcssa = 0;
  STACKTOP = sp;
  return $nbytes$0$lcssa | 0;
 }
 $2 = $frm_end;
 $3 = $this + 8 | 0;
 $$016 = $frm;
 $nbytes$07 = 0;
 $nwchar_t$08 = 0;
 while (1) {
  $7 = _uselocale(HEAP32[$3 >> 2] | 0) | 0;
  __THREW__ = 0;
  $8 = invoke_iiii(40, $$016 | 0, $2 - $$016 | 0, $st | 0) | 0;
  $9 = __THREW__;
  __THREW__ = 0;
  if ($9 & 1) {
   label = 7;
   break;
  }
  if ($7) {
   __THREW__ = 0;
   invoke_ii(75, $7 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    label = 6;
    break;
   }
  }
  if (($8 | 0) == -2 | ($8 | 0) == -1) {
   $nbytes$0$lcssa = $nbytes$07;
   label = 15;
   break;
  } else if (!$8) {
   $$1 = $$016 + 1 | 0;
   $$pn = 1;
  } else {
   $$1 = $$016 + $8 | 0;
   $$pn = $8;
  }
  $nbytes$1 = $$pn + $nbytes$07 | 0;
  $nwchar_t$08 = $nwchar_t$08 + 1 | 0;
  if ($nwchar_t$08 >>> 0 >= $mx >>> 0 | ($$1 | 0) == ($frm_end | 0)) {
   $nbytes$0$lcssa = $nbytes$1;
   label = 15;
   break;
  } else {
   $$016 = $$1;
   $nbytes$07 = $nbytes$1;
  }
 }
 if ((label | 0) == 6) {
  $14 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($14);
 } else if ((label | 0) == 7) {
  $16 = ___cxa_find_matching_catch() | 0;
  if (!$7) ___resumeException($16 | 0);
  __THREW__ = 0;
  invoke_ii(75, $7 | 0) | 0;
  $19 = __THREW__;
  __THREW__ = 0;
  if ($19 & 1) {
   $21 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($21);
  } else ___resumeException($16 | 0);
 } else if ((label | 0) == 15) {
  STACKTOP = sp;
  return $nbytes$0$lcssa | 0;
 }
 return 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 204 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 44504, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 196 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 44504, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(43, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 75 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 44504, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg$result, $this, $__s, $__iob, $__fl, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp + 8 | 0;
 $__fmt = sp;
 $__nar = sp + 74 | 0;
 $__o = sp + 32 | 0;
 $__op = sp + 28 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 16 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 44504, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 __ZNKSt3__18ios_base6getlocEv($2, $__iob);
 __THREW__ = 0;
 invoke_viiiiiii(41, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 if ($19 & 1) {
  $25 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  ___resumeException($25 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$2 >> 2] | 0) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$3 + 0 >> 2];
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result, $$byval_copy, $__o, $23, $24, $__iob, $__fl);
  STACKTOP = sp;
  return;
 }
}

function _mbrtowc($wc, $src, $n, $st) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$1 = 0, $0 = 0, $11 = 0, $14 = 0, $2 = 0, $21 = 0, $23 = 0, $32 = 0, $8 = 0, $9 = 0, $c$0 = 0, $c$1 = 0, $c$2 = 0, $s$0 = 0, $s$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = $wc;
 $$01 = ($st | 0) == 0 ? 53672 : $st;
 $2 = HEAP32[$$01 >> 2] | 0;
 L1 : do if (!$src) {
  if (!$2) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  if (!$wc) {
   HEAP32[$0 >> 2] = $0;
   $11 = $0;
  } else $11 = $wc;
  if (!$n) {
   $$0 = -2;
   STACKTOP = sp;
   return $$0 | 0;
  }
  do if (!$2) {
   $8 = HEAP8[$src >> 0] | 0;
   $9 = $8 & 255;
   if ($8 << 24 >> 24 > -1) {
    HEAP32[$11 >> 2] = $9;
    $$0 = $8 << 24 >> 24 != 0 & 1;
    STACKTOP = sp;
    return $$0 | 0;
   } else {
    $14 = $9 + -194 | 0;
    if ($14 >>> 0 > 50) break L1;
    $$02 = $n + -1 | 0;
    $c$0 = HEAP32[53456 + ($14 << 2) >> 2] | 0;
    $s$0 = $src + 1 | 0;
    break;
   }
  } else {
   $$02 = $n;
   $c$0 = $2;
   $s$0 = $src;
  } while (0);
  L19 : do if (!$$02) $c$2 = $c$0; else {
   $21 = HEAP8[$s$0 >> 0] | 0;
   $23 = ($21 & 255) >>> 3;
   if (($23 + -16 | $23 + ($c$0 >> 26)) >>> 0 > 7) break L1; else {
    $$1 = $$02;
    $32 = $21;
    $c$1 = $c$0;
    $s$1 = $s$0;
   }
   while (1) {
    $s$1 = $s$1 + 1 | 0;
    $c$1 = ($32 & 255) + -128 | $c$1 << 6;
    $$1 = $$1 + -1 | 0;
    if (($c$1 | 0) >= 0) break;
    if (!$$1) {
     $c$2 = $c$1;
     break L19;
    }
    $32 = HEAP8[$s$1 >> 0] | 0;
    if (($32 & -64) << 24 >> 24 != -128) break L1;
   }
   HEAP32[$$01 >> 2] = 0;
   HEAP32[$11 >> 2] = $c$1;
   $$0 = $n - $$1 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  } while (0);
  HEAP32[$$01 >> 2] = $c$2;
  $$0 = -2;
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 HEAP32[$$01 >> 2] = 0;
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $0 = 0, $1 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $33 = 0, $36 = 0, $42 = 0, $43 = 0, $47 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 32 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0, $__s) | 0;
 $1 = $this + 44 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $this + 48 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($3 & 8) {
  $6 = HEAP8[$0 >> 0] | 0;
  if (!($6 & 1)) {
   $18 = $0 + (($6 & 255) >>> 1) + 1 | 0;
   HEAP32[$1 >> 2] = $18;
   $22 = $0 + 1 | 0;
   $24 = $0 + 1 | 0;
   $26 = $18;
  } else {
   $13 = (HEAP32[$this + 40 >> 2] | 0) + (HEAP32[$this + 36 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = $13;
   $15 = HEAP32[$this + 40 >> 2] | 0;
   $22 = $15;
   $24 = $15;
   $26 = $13;
  }
  HEAP32[$this + 8 >> 2] = $22;
  HEAP32[$this + 12 >> 2] = $24;
  HEAP32[$this + 16 >> 2] = $26;
 }
 if (!($3 & 16)) {
  STACKTOP = sp;
  return;
 }
 $29 = HEAP8[$0 >> 0] | 0;
 if (!($29 & 1)) {
  $33 = ($29 & 255) >>> 1;
  HEAP32[$1 >> 2] = $0 + $33 + 1;
  $42 = 10;
  $65 = $33;
 } else {
  $36 = HEAP32[$this + 36 >> 2] | 0;
  HEAP32[$1 >> 2] = (HEAP32[$this + 40 >> 2] | 0) + $36;
  $42 = (HEAP32[$0 >> 2] & -2) + -1 | 0;
  $65 = $36;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $42, 0);
 $43 = HEAP8[$0 >> 0] | 0;
 if (!($43 & 1)) {
  $55 = $0 + 1 | 0;
  $56 = ($43 & 255) >>> 1;
  $58 = $0 + 1 | 0;
 } else {
  $47 = HEAP32[$this + 40 >> 2] | 0;
  $55 = $47;
  $56 = HEAP32[$this + 36 >> 2] | 0;
  $58 = $47;
 }
 $57 = $this + 24 | 0;
 HEAP32[$57 >> 2] = $58;
 HEAP32[$this + 20 >> 2] = $58;
 HEAP32[$this + 28 >> 2] = $55 + $56;
 if (!(HEAP32[$2 >> 2] & 3)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$57 >> 2] = $58 + $65;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $ec, $what_arg) {
 $agg$result = $agg$result | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $0 = 0, $1 = 0, $10 = 0, $13 = 0, $17 = 0, $18 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP32[$ec >> 2] | 0;
 if (!$1) {
  HEAP32[$agg$result + 0 >> 2] = HEAP32[$what_arg + 0 >> 2];
  HEAP32[$agg$result + 4 >> 2] = HEAP32[$what_arg + 4 >> 2];
  HEAP32[$agg$result + 8 >> 2] = HEAP32[$what_arg + 8 >> 2];
  HEAP32[$what_arg + 0 >> 2] = 0;
  HEAP32[$what_arg + 4 >> 2] = 0;
  HEAP32[$what_arg + 8 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $3 = HEAP8[$what_arg >> 0] | 0;
 if (!($3 & 1)) $10 = ($3 & 255) >>> 1; else $10 = HEAP32[$what_arg + 4 >> 2] | 0;
 if (!$10) $17 = $1; else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg, 42712) | 0;
  $17 = HEAP32[$ec >> 2] | 0;
 }
 $13 = HEAP32[$ec + 4 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 31]($0, $13, $17);
 $18 = HEAP8[$0 >> 0] | 0;
 if (!($18 & 1)) {
  $28 = $0 + 1 | 0;
  $29 = ($18 & 255) >>> 1;
 } else {
  $28 = HEAP32[$0 + 8 >> 2] | 0;
  $29 = HEAP32[$0 + 4 >> 2] | 0;
 }
 __THREW__ = 0;
 invoke_iiii(31, $what_arg | 0, $28 | 0, $29 | 0) | 0;
 $30 = __THREW__;
 __THREW__ = 0;
 if ($30 & 1) {
  $32 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  ___resumeException($32 | 0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
 HEAP32[$agg$result + 0 >> 2] = HEAP32[$what_arg + 0 >> 2];
 HEAP32[$agg$result + 4 >> 2] = HEAP32[$what_arg + 4 >> 2];
 HEAP32[$agg$result + 8 >> 2] = HEAP32[$what_arg + 8 >> 2];
 HEAP32[$what_arg + 0 >> 2] = 0;
 HEAP32[$what_arg + 4 >> 2] = 0;
 HEAP32[$what_arg + 8 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE15__insert_uniqueIRKNS_4pairIKS4_S6_EEEENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEENS_21__tree_const_iteratorIS7_SP_iEEOT_($agg$result, $this, $__p, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__p = $__p | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $3 = 0, $8 = 0, $9 = 0, $__parent$i = 0, $__r$0$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i = sp + 4 | 0;
 $0 = sp;
 $1 = __Znwj(24) | 0;
 $2 = $1 + 16 | 0;
 $3 = $__v;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $2;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 HEAP32[$0 >> 2] = HEAP32[$__p >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $14 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($this, $$byval_copy, $__parent$i, $2) | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 if (!$15) {
  $17 = HEAP32[$__parent$i >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = $17;
  HEAP32[$14 >> 2] = $1;
  $21 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
  if (!$21) $25 = $1; else {
   HEAP32[$this >> 2] = $21;
   $25 = HEAP32[$14 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $25);
  $26 = $this + 8 | 0;
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1;
  $__r$0$i = $1;
 } else $__r$0$i = $15;
 HEAP32[$agg$result >> 2] = $__r$0$i;
 if (($__r$0$i | 0) == ($1 | 0) | ($1 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($1);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $11 = 0, $13 = 0, $16 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $5 = 0, $6 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 8 | 0;
 __THREW__ = 0;
 $2 = invoke_ii(75, HEAP32[$0 >> 2] | 0) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if (!($3 & 1)) {
  __THREW__ = 0;
  $5 = invoke_iiii(39, 0, 0, 4) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if ($6 & 1) {
   $13 = ___cxa_find_matching_catch(0) | 0;
   if (!$2) {
    $eh$lpad$body$indexZ2D = $13;
    ___clang_call_terminate($eh$lpad$body$indexZ2D);
   }
   __THREW__ = 0;
   invoke_ii(75, $2 | 0) | 0;
   $16 = __THREW__;
   __THREW__ = 0;
   if ($16 & 1) {
    $18 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($18);
   } else {
    $eh$lpad$body$indexZ2D = $13;
    ___clang_call_terminate($eh$lpad$body$indexZ2D);
   }
  }
  if ($2) {
   __THREW__ = 0;
   invoke_ii(75, $2 | 0) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if ($9 & 1) {
    $11 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($11);
   }
  }
  if ($5) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $21 = HEAP32[$0 >> 2] | 0;
  if (!$21) {
   $$0 = 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  __THREW__ = 0;
  $23 = invoke_ii(75, $21 | 0) | 0;
  $24 = __THREW__;
  __THREW__ = 0;
  if (!($24 & 1)) {
   if (!$23) {
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   __THREW__ = 0;
   invoke_ii(75, $23 | 0) | 0;
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) {
    $29 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($29);
   } else {
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 }
 $31 = ___cxa_find_matching_catch(0) | 0;
 $eh$lpad$body$indexZ2D = $31;
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 return 0;
}

function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag, $arg, $func) {
 $flag = $flag | 0;
 $arg = $arg | 0;
 $func = $func | 0;
 var $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 _pthread_mutex_lock(42864) | 0;
 if ((HEAP32[$flag >> 2] | 0) == 1) do _pthread_cond_wait(42888, 42864) | 0; while ((HEAP32[$flag >> 2] | 0) == 1);
 if (HEAP32[$flag >> 2] | 0) {
  _pthread_mutex_unlock(42864) | 0;
  STACKTOP = sp;
  return;
 }
 HEAP32[$flag >> 2] = 1;
 __THREW__ = 0;
 invoke_ii(72, 42864) | 0;
 $6 = __THREW__;
 __THREW__ = 0;
 if (!($6 & 1)) {
  __THREW__ = 0;
  invoke_vi($func | 0, $arg | 0);
  $8 = __THREW__;
  __THREW__ = 0;
  if (!($8 & 1)) {
   __THREW__ = 0;
   invoke_ii(73, 42864) | 0;
   $10 = __THREW__;
   __THREW__ = 0;
   if (!($10 & 1)) {
    HEAP32[$flag >> 2] = -1;
    __THREW__ = 0;
    invoke_ii(72, 42864) | 0;
    $12 = __THREW__;
    __THREW__ = 0;
    if (!($12 & 1)) {
     __THREW__ = 0;
     invoke_ii(74, 42888) | 0;
     $14 = __THREW__;
     __THREW__ = 0;
     if (!($14 & 1)) {
      STACKTOP = sp;
      return;
     }
    }
   }
  }
 }
 $16 = ___cxa_find_matching_catch(0) | 0;
 ___cxa_begin_catch($16 | 0) | 0;
 __THREW__ = 0;
 invoke_ii(73, 42864) | 0;
 $18 = __THREW__;
 __THREW__ = 0;
 if (!($18 & 1)) {
  HEAP32[$flag >> 2] = 0;
  __THREW__ = 0;
  invoke_ii(72, 42864) | 0;
  $20 = __THREW__;
  __THREW__ = 0;
  if (!($20 & 1)) {
   __THREW__ = 0;
   invoke_ii(74, 42888) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if (!($22 & 1)) {
    __THREW__ = 0;
    invoke_v(4);
    $24 = __THREW__;
    __THREW__ = 0;
    if (!($24 & 1)) {}
   }
  }
 }
 $26 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $28 = __THREW__;
 __THREW__ = 0;
 if ($28 & 1) {
  $30 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($30);
 } else ___resumeException($26 | 0);
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this | 0;
 var $$0 = 0, $14 = 0, $18 = 0, $19 = 0, $24 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 if (!(HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0)) {
  STACKTOP = sp;
  return $this | 0;
 }
 __THREW__ = 0;
 invoke_vii(73, $__s | 0, $this | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($6 & 1) {
  $31 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $31;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $14 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
   __THREW__ = 0;
   $18 = invoke_ii(HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] | 0, $14 | 0) | 0;
   $19 = __THREW__;
   __THREW__ = 0;
   if (!($19 & 1)) {
    if (($18 | 0) != -1) break;
    $24 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(48, $this + $24 | 0, HEAP32[$this + ($24 + 16) >> 2] | 1 | 0);
    $29 = __THREW__;
    __THREW__ = 0;
    if (!($29 & 1)) break;
   }
   $33 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
   $$0 = $33;
   break L4;
  } while (0);
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $this | 0;
 } while (0);
 ___cxa_begin_catch($$0 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 $39 = __THREW__;
 __THREW__ = 0;
 if (!($39 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $this | 0;
 }
 $41 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $43 = __THREW__;
 __THREW__ = 0;
 if ($43 & 1) {
  $45 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($45);
 } else ___resumeException($41 | 0);
 return 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this | 0;
 var $$0 = 0, $14 = 0, $18 = 0, $19 = 0, $24 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 if (!(HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0)) {
  STACKTOP = sp;
  return $this | 0;
 }
 __THREW__ = 0;
 invoke_vii(72, $__s | 0, $this | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($6 & 1) {
  $31 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $31;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $14 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
   __THREW__ = 0;
   $18 = invoke_ii(HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] | 0, $14 | 0) | 0;
   $19 = __THREW__;
   __THREW__ = 0;
   if (!($19 & 1)) {
    if (($18 | 0) != -1) break;
    $24 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(48, $this + $24 | 0, HEAP32[$this + ($24 + 16) >> 2] | 1 | 0);
    $29 = __THREW__;
    __THREW__ = 0;
    if (!($29 & 1)) break;
   }
   $33 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$0 = $33;
   break L4;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $this | 0;
 } while (0);
 ___cxa_begin_catch($$0 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(180, $this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 $39 = __THREW__;
 __THREW__ = 0;
 if (!($39 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $this | 0;
 }
 $41 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $43 = __THREW__;
 __THREW__ = 0;
 if ($43 & 1) {
  $45 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($45);
 } else ___resumeException($41 | 0);
 return 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if ((1073741806 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 4 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 2) $17 = 2; else $17 = $12 + 4 & -4;
 } else $17 = 1073741807;
 $18 = __Znwj($17 << 2) | 0;
 if ($__n_copy) _wmemcpy($18, $20, $__n_copy) | 0;
 if ($__n_add) _wmemcpy($18 + ($__n_copy << 2) | 0, $__p_new_stuff, $__n_add) | 0;
 $23 = $__old_sz - $__n_del | 0;
 if (($23 | 0) != ($__n_copy | 0)) _wmemcpy($18 + ($__n_add + $__n_copy << 2) | 0, $20 + ($__n_del + $__n_copy << 2) | 0, $23 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) == 1) {
  $29 = $this + 8 | 0;
  HEAP32[$29 >> 2] = $18;
  $30 = $17 | 1;
  HEAP32[$this >> 2] = $30;
  $31 = $23 + $__n_add | 0;
  $32 = $this + 4 | 0;
  HEAP32[$32 >> 2] = $31;
  $33 = $18 + ($31 << 2) | 0;
  HEAP32[$33 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 __ZdlPv($20);
 $29 = $this + 8 | 0;
 HEAP32[$29 >> 2] = $18;
 $30 = $17 | 1;
 HEAP32[$this >> 2] = $30;
 $31 = $23 + $__n_add | 0;
 $32 = $this + 4 | 0;
 HEAP32[$32 >> 2] = $31;
 $33 = $18 + ($31 << 2) | 0;
 HEAP32[$33 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__stdoutbufIcE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $20 = 0, $27 = 0, $31 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 L1 : do if (!$0) {
  HEAP8[$__1buf >> 0] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) {
   if ((_fwrite($__1buf | 0, 1, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) break; else $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $9 = $__1buf + 1 | 0;
  $10 = $this + 36 | 0;
  $11 = $this + 40 | 0;
  $12 = $__extbuf + 8 | 0;
  $13 = $__extbuf;
  $14 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $15 = HEAP32[$10 >> 2] | 0;
   $20 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 15]($15, HEAP32[$11 >> 2] | 0, $pbase$0, $9, $__e, $__extbuf, $12, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    $$0 = -1;
    label = 12;
    break;
   }
   if (($20 | 0) == 3) {
    label = 7;
    break;
   }
   $27 = ($20 | 0) == 1;
   if ($20 >>> 0 >= 2) {
    $$0 = -1;
    label = 12;
    break;
   }
   $31 = (HEAP32[$__extbe >> 2] | 0) - $13 | 0;
   if ((_fwrite($__extbuf | 0, 1, $31 | 0, HEAP32[$14 >> 2] | 0) | 0) != ($31 | 0)) {
    $$0 = -1;
    label = 12;
    break;
   }
   if ($27) $pbase$0 = $27 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else break L1;
  }
  if ((label | 0) == 7) {
   if ((_fwrite($pbase$0 | 0, 1, 1, HEAP32[$14 >> 2] | 0) | 0) == 1) break; else $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 12) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIwE8overflowEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $26 = 0, $30 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 L1 : do if (!$0) {
  HEAP32[$__1buf >> 2] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) {
   if ((_fwrite($__1buf | 0, 4, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) break; else $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $8 = $__1buf + 4 | 0;
  $9 = $this + 36 | 0;
  $10 = $this + 40 | 0;
  $11 = $__extbuf + 8 | 0;
  $12 = $__extbuf;
  $13 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $14 = HEAP32[$9 >> 2] | 0;
   $19 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 12 >> 2] & 15]($14, HEAP32[$10 >> 2] | 0, $pbase$0, $8, $__e, $__extbuf, $11, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    $$0 = -1;
    label = 12;
    break;
   }
   if (($19 | 0) == 3) {
    label = 7;
    break;
   }
   $26 = ($19 | 0) == 1;
   if ($19 >>> 0 >= 2) {
    $$0 = -1;
    label = 12;
    break;
   }
   $30 = (HEAP32[$__extbe >> 2] | 0) - $12 | 0;
   if ((_fwrite($__extbuf | 0, 1, $30 | 0, HEAP32[$13 >> 2] | 0) | 0) != ($30 | 0)) {
    $$0 = -1;
    label = 12;
    break;
   }
   if ($26) $pbase$0 = $26 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else break L1;
  }
  if ((label | 0) == 7) {
   if ((_fwrite($pbase$0 | 0, 1, 1, HEAP32[$13 >> 2] | 0) | 0) == 1) break; else $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 12) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL10uop_string7UnaryOp($agg$result, $uop) {
 $agg$result = $agg$result | 0;
 $uop = $uop | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (($uop | 0) == 1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40064, 1);
  STACKTOP = sp;
  return;
 } else if (!$uop) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40072, 1);
  STACKTOP = sp;
  return;
 } else if (($uop | 0) == 2) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 40056, 1);
  STACKTOP = sp;
  return;
 } else if (($uop | 0) == 3) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 38112, 1);
  STACKTOP = sp;
  return;
 } else {
  $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 40080, 45) | 0, $uop) | 0;
  __ZNKSt3__18ios_base6getlocEv($0, $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0);
  __THREW__ = 0;
  $7 = invoke_iii(22, $0 | 0, 45800) | 0;
  $8 = __THREW__;
  __THREW__ = 0;
  if ($8 & 1) {
   $16 = ___cxa_find_matching_catch() | 0;
   $17 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($16 | 0);
  }
  __THREW__ = 0;
  $13 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 10) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) {
   $16 = ___cxa_find_matching_catch() | 0;
   $17 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($16 | 0);
  } else {
   __ZNSt3__16localeD2Ev($0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $13) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
   _abort();
  }
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $10 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $40 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45864) | 0;
 HEAP32[$this + 68 >> 2] = $3;
 $5 = $this + 98 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0;
 HEAP8[$5 >> 0] = $10 & 1;
 if (($6 & 255 | 0) == ($10 & 1 | 0)) {
  STACKTOP = sp;
  return;
 }
 $15 = $this + 8 | 0;
 $16 = $this + 96 | 0;
 HEAP32[$15 + 0 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 HEAP32[$15 + 16 >> 2] = 0;
 HEAP32[$15 + 20 >> 2] = 0;
 $18 = (HEAP8[$16 >> 0] | 0) != 0;
 if ($10) {
  $19 = $this + 32 | 0;
  if ($18) {
   $20 = HEAP32[$19 >> 2] | 0;
   if ($20) __ZdaPv($20);
  }
  $22 = $this + 97 | 0;
  HEAP8[$16 >> 0] = HEAP8[$22 >> 0] | 0;
  $24 = $this + 60 | 0;
  HEAP32[$this + 52 >> 2] = HEAP32[$24 >> 2];
  $27 = $this + 56 | 0;
  HEAP32[$19 >> 2] = HEAP32[$27 >> 2];
  HEAP32[$24 >> 2] = 0;
  HEAP32[$27 >> 2] = 0;
  HEAP8[$22 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
 if (!$18) {
  $29 = $this + 32 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if (($30 | 0) != ($this + 44 | 0)) {
   $34 = HEAP32[$this + 52 >> 2] | 0;
   HEAP32[$this + 60 >> 2] = $34;
   HEAP32[$this + 56 >> 2] = $30;
   HEAP8[$this + 97 >> 0] = 0;
   HEAP32[$29 >> 2] = __Znaj($34) | 0;
   HEAP8[$16 >> 0] = 1;
   STACKTOP = sp;
   return;
  }
 }
 $40 = HEAP32[$this + 52 >> 2] | 0;
 HEAP32[$this + 60 >> 2] = $40;
 HEAP32[$this + 56 >> 2] = __Znaj($40) | 0;
 HEAP8[$this + 97 >> 0] = 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if ((-18 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $19 = $this + 1 | 0; else $19 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 11) $16 = 11; else $16 = $12 + 16 & -16;
 } else $16 = -17;
 $17 = __Znwj($16) | 0;
 if ($__n_copy) _memcpy($17 | 0, $19 | 0, $__n_copy | 0) | 0;
 if ($__n_add) _memcpy($17 + $__n_copy | 0, $__p_new_stuff | 0, $__n_add | 0) | 0;
 $22 = $__old_sz - $__n_del | 0;
 if (($22 | 0) != ($__n_copy | 0)) _memcpy($17 + ($__n_add + $__n_copy) | 0, $19 + ($__n_del + $__n_copy) | 0, $22 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) == 10) {
  $28 = $this + 8 | 0;
  HEAP32[$28 >> 2] = $17;
  $29 = $16 | 1;
  HEAP32[$this >> 2] = $29;
  $30 = $22 + $__n_add | 0;
  $31 = $this + 4 | 0;
  HEAP32[$31 >> 2] = $30;
  $32 = $17 + $30 | 0;
  HEAP8[$32 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
 __ZdlPv($19);
 $28 = $this + 8 | 0;
 HEAP32[$28 >> 2] = $17;
 $29 = $16 | 1;
 HEAP32[$this >> 2] = $29;
 $30 = $22 + $__n_add | 0;
 $31 = $this + 4 | 0;
 HEAP32[$31 >> 2] = $30;
 $32 = $17 + $30 | 0;
 HEAP8[$32 >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 45792) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, 44312, 44344 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 45952) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP32[$__decimal_point >> 2] = $14;
     __THREW__ = 0;
     $20 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
     $21 = __THREW__;
     __THREW__ = 0;
     if (!($21 & 1)) {
      HEAP32[$__thousands_sep >> 2] = $20;
      __THREW__ = 0;
      invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
      $26 = __THREW__;
      __THREW__ = 0;
      if (!($26 & 1)) {
       __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
       STACKTOP = sp;
       return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($29 | 0);
}

function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 45800) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, 44312, 44344 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 45944) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP8[$__decimal_point >> 0] = $14;
     __THREW__ = 0;
     $20 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
     $21 = __THREW__;
     __THREW__ = 0;
     if (!($21 & 1)) {
      HEAP8[$__thousands_sep >> 0] = $20;
      __THREW__ = 0;
      invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
      $26 = __THREW__;
      __THREW__ = 0;
      if (!($26 & 1)) {
       __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
       STACKTOP = sp;
       return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($29 | 0);
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $10 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $p$0 = 0, sp = 0;
 sp = STACKTOP;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below);
  STACKTOP = sp;
  return;
 }
 $3 = $info + 52 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $info + 53 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $9 = HEAP32[$this + 12 >> 2] | 0;
 $10 = $this + ($9 << 3) + 16 | 0;
 HEAP8[$3 >> 0] = 0;
 HEAP8[$5 >> 0] = 0;
 __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this + 16 | 0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
 L5 : do if (($9 | 0) > 1) {
  $13 = $info + 24 | 0;
  $14 = $this + 8 | 0;
  $15 = $info + 54 | 0;
  $p$0 = $this + 24 | 0;
  do {
   if (HEAP8[$15 >> 0] | 0) break L5;
   if (!(HEAP8[$3 >> 0] | 0)) {
    if (HEAP8[$5 >> 0] | 0) if (!(HEAP32[$14 >> 2] & 1)) break L5;
   } else {
    if ((HEAP32[$13 >> 2] | 0) == 1) break L5;
    if (!(HEAP32[$14 >> 2] & 2)) break L5;
   }
   HEAP8[$3 >> 0] = 0;
   HEAP8[$5 >> 0] = 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
   $p$0 = $p$0 + 8 | 0;
  } while ($p$0 >>> 0 < $10 >>> 0);
 } while (0);
 HEAP8[$3 >> 0] = $4;
 HEAP8[$5 >> 0] = $6;
 STACKTOP = sp;
 return;
}

function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp, $__len, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $11 = 0, $14 = 0, $15 = 0, $23 = 0, $6 = 0, $7 = 0, $8 = 0, $specify_precision$0$off0$ph = 0, sp = 0;
 sp = STACKTOP;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 1024)) $$1 = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1 = $$0 + 1 | 0;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6 | 0) == 260;
 if ($8) {
  $$2$ph = $$1;
  $specify_precision$0$off0$ph = 0;
 } else {
  HEAP8[$$1 >> 0] = 46;
  HEAP8[$$1 + 1 >> 0] = 42;
  $$2$ph = $$1 + 2 | 0;
  $specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len >> 0] | 0;
 if (!($11 << 24 >> 24)) $$2$lcssa = $$2$ph; else {
  $$012 = $__len;
  $$23 = $$2$ph;
  $15 = $11;
  while (1) {
   $$012 = $$012 + 1 | 0;
   $14 = $$23 + 1 | 0;
   HEAP8[$$23 >> 0] = $15;
   $15 = HEAP8[$$012 >> 0] | 0;
   if (!($15 << 24 >> 24)) {
    $$2$lcssa = $14;
    break;
   } else $$23 = $14;
  }
 }
 do if (($6 | 0) == 256) if (!($7 & 1)) {
  HEAP8[$$2$lcssa >> 0] = 101;
  break;
 } else {
  HEAP8[$$2$lcssa >> 0] = 69;
  break;
 } else if (($6 | 0) == 4) if (!($7 & 1)) {
  HEAP8[$$2$lcssa >> 0] = 102;
  break;
 } else {
  HEAP8[$$2$lcssa >> 0] = 70;
  break;
 } else {
  $23 = ($7 & 1 | 0) != 0;
  if ($8) if ($23) {
   HEAP8[$$2$lcssa >> 0] = 65;
   break;
  } else {
   HEAP8[$$2$lcssa >> 0] = 97;
   break;
  } else if ($23) {
   HEAP8[$$2$lcssa >> 0] = 71;
   break;
  } else {
   HEAP8[$$2$lcssa >> 0] = 103;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $specify_precision$0$off0$ph | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $st, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $11 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0, $n$02 = 0, $p$03 = 0, $tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmp = sp;
 HEAP32[$to_nxt >> 2] = $to;
 $2 = _uselocale(HEAP32[$this + 8 >> 2] | 0) | 0;
 __THREW__ = 0;
 $3 = invoke_iiii(38, $tmp | 0, 0, $st | 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  if (!$2) ___resumeException($11 | 0);
  __THREW__ = 0;
  invoke_ii(75, $2 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) {
   $16 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($16);
  } else ___resumeException($11 | 0);
 }
 if ($2) {
  __THREW__ = 0;
  invoke_ii(75, $2 | 0) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if ($7 & 1) {
   $9 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($9);
  }
 }
 if (($3 | 0) == 0 | ($3 | 0) == -1) {
  $$0 = 2;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $18 = $3 + -1 | 0;
 $19 = HEAP32[$to_nxt >> 2] | 0;
 if ($18 >>> 0 > ($to_end - $19 | 0) >>> 0) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!$18) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $27 = $19;
  $n$02 = $18;
  $p$03 = $tmp;
 }
 while (1) {
  $25 = HEAP8[$p$03 >> 0] | 0;
  HEAP32[$to_nxt >> 2] = $27 + 1;
  HEAP8[$27 >> 0] = $25;
  $28 = $n$02 + -1 | 0;
  if (!$28) {
   $$0 = 0;
   break;
  }
  $27 = HEAP32[$to_nxt >> 2] | 0;
  $n$02 = $28;
  $p$03 = $p$03 + 1 | 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_111InterpreterD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01$i$i$i = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $2 = 0, $5 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 104 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 108 | 0;
 if (($1 | 0) != ($2 | 0)) {
  $5 = $1;
  while (1) {
   $6 = HEAP32[$5 + 40 >> 2] | 0;
   if ($6) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
    __ZdlPv($6);
   }
   $9 = HEAP32[$5 + 4 >> 2] | 0;
   if (!$9) {
    $$0$i$i$i = $5;
    while (1) {
     $14 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$14 >> 2] | 0) == ($$0$i$i$i | 0)) {
      $$01$i$i$i = $14;
      break;
     } else $$0$i$i$i = $14;
    }
   } else {
    $$0$i$i$i$i = $9;
    while (1) {
     $11 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$11) {
      $$01$i$i$i = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $11;
    }
   }
   if (($$01$i$i$i | 0) == ($2 | 0)) break; else $5 = $$01$i$i$i;
  }
 }
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 116 | 0, HEAP32[$this + 120 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($0, HEAP32[$this + 108 >> 2] | 0);
 HEAP32[$this + 72 >> 2] = 38032;
 __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this + 84 | 0);
 __ZN12_GLOBAL__N_14HeapD2Ev($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$01 = 0, $0 = 0, $1 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $27 = 0, $28 = 0, $34 = 0, $39 = 0, $46 = 0, $8 = 0, $__p$0$lcssa = 0, $__p$02 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $16 = ($1 & 255) >>> 1;
  $17 = 1;
  $46 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $16 = HEAP32[$this + 4 >> 2] | 0;
  $17 = ($8 & -2) + -1 | 0;
  $46 = $8 & 255;
 }
 $13 = $__last - $0 >> 2;
 if (!$13) {
  STACKTOP = sp;
  return $this | 0;
 }
 if (($17 - $16 | 0) >>> 0 < $13 >>> 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $17, $16 + $13 - $17 | 0, $16, $16, 0, 0);
  $22 = HEAP8[$this >> 0] | 0;
 } else $22 = $46;
 if (!($22 & 1)) $28 = $this + 4 | 0; else $28 = HEAP32[$this + 8 >> 2] | 0;
 $27 = $28 + ($16 << 2) | 0;
 if (($__first | 0) == ($__last | 0)) $__p$0$lcssa = $27; else {
  $34 = $16 + (($__last + -4 - $0 | 0) >>> 2) + 1 | 0;
  $$01 = $__first;
  $__p$02 = $27;
  while (1) {
   HEAP32[$__p$02 >> 2] = HEAP32[$$01 >> 2];
   $$01 = $$01 + 4 | 0;
   if (($$01 | 0) == ($__last | 0)) break; else $__p$02 = $__p$02 + 4 | 0;
  }
  $__p$0$lcssa = $28 + ($34 << 2) | 0;
 }
 HEAP32[$__p$0$lcssa >> 2] = 0;
 $39 = $16 + $13 | 0;
 if (!(HEAP8[$this >> 0] & 1)) {
  HEAP8[$this >> 0] = $39 << 1;
  STACKTOP = sp;
  return $this | 0;
 } else {
  HEAP32[$this + 4 >> 2] = $39;
  STACKTOP = sp;
  return $this | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $23 = 0;
  $__r$0 = $1;
  HEAP32[$agg$result >> 2] = $__r$0;
  $22 = $agg$result + 4 | 0;
  HEAP8[$22 >> 0] = $23;
  STACKTOP = sp;
  return;
 }
 $3 = __Znwj(28) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__v | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  if (!$3) ___resumeException($7 | 0);
  __ZdlPv($3);
  ___resumeException($7 | 0);
 } else {
  $10 = HEAP32[$__parent >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = $10;
  HEAP32[$0 >> 2] = $3;
  $14 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
  if (!$14) $18 = $3; else {
   HEAP32[$this >> 2] = $14;
   $18 = HEAP32[$0 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
  $19 = $this + 8 | 0;
  HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
  $23 = 1;
  $__r$0 = $3;
  HEAP32[$agg$result >> 2] = $__r$0;
  $22 = $agg$result + 4 | 0;
  HEAP8[$22 >> 0] = $23;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $1 = 0, $11 = 0, $13 = 0, $16 = 0, $24 = 0, $27 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 8 | 0;
 $1 = $this + 96 | 0;
 HEAP32[$0 + 0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 if (HEAP8[$1 >> 0] | 0) {
  $5 = HEAP32[$this + 32 >> 2] | 0;
  if ($5) __ZdaPv($5);
 }
 $7 = $this + 97 | 0;
 if (HEAP8[$7 >> 0] | 0) {
  $11 = HEAP32[$this + 56 >> 2] | 0;
  if ($11) __ZdaPv($11);
 }
 $13 = $this + 52 | 0;
 HEAP32[$13 >> 2] = $__n;
 do if ($__n >>> 0 > 8) {
  $16 = HEAP8[$this + 98 >> 0] | 0;
  if ($16 << 24 >> 24 != 0 & ($__s | 0) != 0) {
   HEAP32[$this + 32 >> 2] = $__s;
   HEAP8[$1 >> 0] = 0;
   $24 = $16;
   break;
  } else {
   HEAP32[$this + 32 >> 2] = __Znaj($__n) | 0;
   HEAP8[$1 >> 0] = 1;
   $24 = $16;
   break;
  }
 } else {
  HEAP32[$this + 32 >> 2] = $this + 44;
  HEAP32[$13 >> 2] = 8;
  HEAP8[$1 >> 0] = 0;
  $24 = HEAP8[$this + 98 >> 0] | 0;
 } while (0);
 if ($24 << 24 >> 24) {
  HEAP32[$this + 60 >> 2] = 0;
  HEAP32[$this + 56 >> 2] = 0;
  HEAP8[$7 >> 0] = 0;
  STACKTOP = sp;
  return $this | 0;
 }
 $27 = ($__n | 0) < 8 ? 8 : $__n;
 HEAP32[$this + 60 >> 2] = $27;
 if (($__s | 0) != 0 & $27 >>> 0 > 7) {
  HEAP32[$this + 56 >> 2] = $__s;
  HEAP8[$7 >> 0] = 0;
  STACKTOP = sp;
  return $this | 0;
 } else {
  HEAP32[$this + 56 >> 2] = __Znaj($27) | 0;
  HEAP8[$7 >> 0] = 1;
  STACKTOP = sp;
  return $this | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $15 = 0, $19 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $23 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $23 | 0;
 }
 $3 = __Znwj(40) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  if (!$3) ___resumeException($7 | 0);
  __ZdlPv($3);
  ___resumeException($7 | 0);
 } else {
  $10 = $3 + 28 | 0;
  HEAP32[$10 + 0 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  HEAP32[$10 + 8 >> 2] = 0;
  $11 = HEAP32[$__parent >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = $11;
  HEAP32[$0 >> 2] = $3;
  $15 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
  if (!$15) $19 = $3; else {
   HEAP32[$this >> 2] = $15;
   $19 = HEAP32[$0 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $19);
  $20 = $this + 8 | 0;
  HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
  $__r$0 = $3;
  $23 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $23 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $13 = 0, $15 = 0, $2 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $5 = 0, $6 = 0, $8 = 0, $__p = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p = sp;
 $2 = $this + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE13__lower_boundIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_SN_SN_($__p, $this, $__v, HEAP32[$this + 4 >> 2] | 0, $2);
 $3 = HEAP32[$__p >> 2] | 0;
 do if (($3 | 0) != ($2 | 0)) {
  $5 = $3 + 16 | 0;
  $6 = HEAP8[$__v >> 0] | 0;
  $8 = ($6 & 1) == 0;
  if ($8) $28 = ($6 & 255) >>> 1; else $28 = HEAP32[$__v + 4 >> 2] | 0;
  $13 = HEAP8[$5 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  if ($15) $26 = ($13 & 255) >>> 1; else $26 = HEAP32[$3 + 20 >> 2] | 0;
  if ($8) $30 = $__v + 1 | 0; else $30 = HEAP32[$__v + 8 >> 2] | 0;
  if ($15) $31 = $5 + 1 | 0; else $31 = HEAP32[$3 + 24 >> 2] | 0;
  $32 = _memcmp($30, $31, $26 >>> 0 < $28 >>> 0 ? $26 : $28) | 0;
  if (!$32) {
   if ($28 >>> 0 < $26 >>> 0) break;
  } else if (($32 | 0) < 0) break;
  HEAP32[$agg$result >> 2] = $3;
  STACKTOP = sp;
  return;
 } while (0);
 HEAP32[$agg$result >> 2] = $2;
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIwE9pbackfailEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $11 = 0, $19 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 8 | 0;
 $__ci = sp + 4 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 if (($__c | 0) == -1) {
  if ($3) {
   $$01 = -1;
   STACKTOP = sp;
   return $$01 | 0;
  }
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
  STACKTOP = sp;
  return $$01 | 0;
 }
 $8 = $this + 48 | 0;
 L8 : do if ($3) {
  HEAP32[$__ci >> 2] = HEAP32[$8 >> 2];
  $11 = HEAP32[$this + 36 >> 2] | 0;
  $19 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 15]($11, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 4 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0;
  if (($19 | 0) == 1 | ($19 | 0) == 2) {
   $$01 = -1;
   STACKTOP = sp;
   return $$01 | 0;
  } else if (($19 | 0) == 3) {
   HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
   HEAP32[$__enxt >> 2] = $__extbuf + 1;
  }
  $23 = $this + 32 | 0;
  while (1) {
   $24 = HEAP32[$__enxt >> 2] | 0;
   if ($24 >>> 0 <= $__extbuf >>> 0) break L8;
   $26 = $24 + -1 | 0;
   HEAP32[$__enxt >> 2] = $26;
   if ((_ungetc(HEAP8[$26 >> 0] | 0, HEAP32[$23 >> 2] | 0) | 0) == -1) {
    $$01 = -1;
    break;
   }
  }
  STACKTOP = sp;
  return $$01 | 0;
 } while (0);
 HEAP32[$8 >> 2] = $__c;
 HEAP8[$1 >> 0] = 1;
 $$01 = $__c;
 STACKTOP = sp;
 return $$01 | 0;
}

function __ZNSt3__110__stdinbufIcE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $12 = 0, $20 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 4 | 0;
 $__ci = sp + 8 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 if (($__c | 0) == -1) {
  if ($3) {
   $$01 = -1;
   STACKTOP = sp;
   return $$01 | 0;
  }
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
  STACKTOP = sp;
  return $$01 | 0;
 }
 $8 = $this + 48 | 0;
 L8 : do if ($3) {
  HEAP8[$__ci >> 0] = HEAP32[$8 >> 2];
  $12 = HEAP32[$this + 36 >> 2] | 0;
  $20 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 15]($12, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 1 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0;
  if (($20 | 0) == 1 | ($20 | 0) == 2) {
   $$01 = -1;
   STACKTOP = sp;
   return $$01 | 0;
  } else if (($20 | 0) == 3) {
   HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
   HEAP32[$__enxt >> 2] = $__extbuf + 1;
  }
  $24 = $this + 32 | 0;
  while (1) {
   $25 = HEAP32[$__enxt >> 2] | 0;
   if ($25 >>> 0 <= $__extbuf >>> 0) break L8;
   $27 = $25 + -1 | 0;
   HEAP32[$__enxt >> 2] = $27;
   if ((_ungetc(HEAP8[$27 >> 0] | 0, HEAP32[$24 >> 2] | 0) | 0) == -1) {
    $$01 = -1;
    break;
   }
  }
  STACKTOP = sp;
  return $$01 | 0;
 } while (0);
 HEAP32[$8 >> 2] = $__c;
 HEAP8[$1 >> 0] = 1;
 $$01 = $__c;
 STACKTOP = sp;
 return $$01 | 0;
}

function _mbtowc($wc, $src, $n) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $12 = 0, $14 = 0, $22 = 0, $23 = 0, $31 = 0, $35 = 0, $4 = 0, $40 = 0, $44 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = $wc;
 if (!$src) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 do if ($n) {
  if (!$wc) {
   HEAP32[$0 >> 2] = $0;
   $7 = $0;
  } else $7 = $wc;
  $4 = HEAP8[$src >> 0] | 0;
  $5 = $4 & 255;
  if ($4 << 24 >> 24 > -1) {
   HEAP32[$7 >> 2] = $5;
   $$0 = $4 << 24 >> 24 != 0 & 1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $10 = $5 + -194 | 0;
  if ($10 >>> 0 <= 50) {
   $12 = $src + 1 | 0;
   $14 = HEAP32[53456 + ($10 << 2) >> 2] | 0;
   if ($n >>> 0 < 4) if ($14 & -2147483648 >>> (($n * 6 | 0) + -6 | 0)) break;
   $22 = HEAPU8[$12 >> 0] | 0;
   $23 = $22 >>> 3;
   if (($23 + -16 | $23 + ($14 >> 26)) >>> 0 <= 7) {
    $31 = $22 + -128 | $14 << 6;
    if (($31 | 0) >= 0) {
     HEAP32[$7 >> 2] = $31;
     $$0 = 2;
     STACKTOP = sp;
     return $$0 | 0;
    }
    $35 = HEAPU8[$src + 2 >> 0] | 0;
    if (($35 & 192 | 0) == 128) {
     $40 = $35 + -128 | $31 << 6;
     if (($40 | 0) >= 0) {
      HEAP32[$7 >> 2] = $40;
      $$0 = 3;
      STACKTOP = sp;
      return $$0 | 0;
     }
     $44 = HEAPU8[$src + 3 >> 0] | 0;
     if (($44 & 192 | 0) == 128) {
      HEAP32[$7 >> 2] = $44 + -128 | $40 << 6;
      $$0 = 4;
      STACKTOP = sp;
      return $$0 | 0;
     }
    }
   }
  }
 } while (0);
 HEAP32[(___errno_location() | 0) >> 2] = 84;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $13 = 0, $15 = 0, $2 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $5 = 0, $6 = 0, $8 = 0, $__p = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p = sp;
 $2 = $this + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($__p, $this, $__v, HEAP32[$this + 4 >> 2] | 0, $2);
 $3 = HEAP32[$__p >> 2] | 0;
 do if (($3 | 0) != ($2 | 0)) {
  $5 = $3 + 16 | 0;
  $6 = HEAP8[$__v >> 0] | 0;
  $8 = ($6 & 1) == 0;
  if ($8) $28 = ($6 & 255) >>> 1; else $28 = HEAP32[$__v + 4 >> 2] | 0;
  $13 = HEAP8[$5 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  if ($15) $26 = ($13 & 255) >>> 1; else $26 = HEAP32[$3 + 20 >> 2] | 0;
  if ($8) $30 = $__v + 1 | 0; else $30 = HEAP32[$__v + 8 >> 2] | 0;
  if ($15) $31 = $5 + 1 | 0; else $31 = HEAP32[$3 + 24 >> 2] | 0;
  $32 = _memcmp($30, $31, $26 >>> 0 < $28 >>> 0 ? $26 : $28) | 0;
  if (!$32) {
   if ($28 >>> 0 < $26 >>> 0) break;
  } else if (($32 | 0) < 0) break;
  HEAP32[$agg$result >> 2] = $3;
  STACKTOP = sp;
  return;
 } while (0);
 HEAP32[$agg$result >> 2] = $2;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $13 = 0, $15 = 0, $2 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $5 = 0, $6 = 0, $8 = 0, $__p = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p = sp;
 $2 = $this + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_SK_SK_($__p, $this, $__v, HEAP32[$this + 4 >> 2] | 0, $2);
 $3 = HEAP32[$__p >> 2] | 0;
 do if (($3 | 0) != ($2 | 0)) {
  $5 = $3 + 16 | 0;
  $6 = HEAP8[$__v >> 0] | 0;
  $8 = ($6 & 1) == 0;
  if ($8) $28 = ($6 & 255) >>> 1; else $28 = HEAP32[$__v + 4 >> 2] | 0;
  $13 = HEAP8[$5 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  if ($15) $26 = ($13 & 255) >>> 1; else $26 = HEAP32[$3 + 20 >> 2] | 0;
  if ($8) $30 = $__v + 1 | 0; else $30 = HEAP32[$__v + 8 >> 2] | 0;
  if ($15) $31 = $5 + 1 | 0; else $31 = HEAP32[$3 + 24 >> 2] | 0;
  $32 = _memcmp($30, $31, $26 >>> 0 < $28 >>> 0 ? $26 : $28) | 0;
  if (!$32) {
   if ($28 >>> 0 < $26 >>> 0) break;
  } else if (($32 | 0) < 0) break;
  HEAP32[$agg$result >> 2] = $3;
  STACKTOP = sp;
  return;
 } while (0);
 HEAP32[$agg$result >> 2] = $2;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this, $__wb, $__we, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__wb = $__wb | 0;
 $__we = $__we | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $20 = 0, $23 = 0, $25 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $__nar = sp + 16 | 0;
 $__ne = sp + 12 | 0;
 $mb = sp;
 $__nb = sp + 8 | 0;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $1 = $mb;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$__nb >> 2] = $__nar;
 $9 = (HEAP32[$__we >> 2] | 0) - $__wb >> 2;
 $11 = _uselocale(HEAP32[$this >> 2] | 0) | 0;
 __THREW__ = 0;
 $12 = invoke_iiiii(13, $__wb | 0, $__nb | 0, $9 | 0, $mb | 0) | 0;
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  if (!$11) ___resumeException($20 | 0);
  __THREW__ = 0;
  invoke_ii(75, $11 | 0) | 0;
  $23 = __THREW__;
  __THREW__ = 0;
  if ($23 & 1) {
   $25 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($25);
  } else ___resumeException($20 | 0);
 }
 if ($11) {
  __THREW__ = 0;
  invoke_ii(75, $11 | 0) | 0;
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($18);
  }
 }
 if (($12 | 0) == -1) __ZNSt3__121__throw_runtime_errorEPKc(46680); else {
  HEAP32[$__we >> 2] = $__wb + ($12 << 2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $29 = 0, $3 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  STACKTOP = sp;
  return;
 }
 $2 = $this + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) == ($0 | 0)) $29 = $0; else {
  $6 = $3;
  do {
   HEAP32[$2 >> 2] = $6 + -144;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
   $11 = HEAP32[$6 + -40 >> 2] | 0;
   if ($11) {
    $13 = $6 + -36 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
    __ZdlPv($11);
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6 + -136 | 0);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($0 | 0));
  $29 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($29);
 STACKTOP = sp;
 return;
}

function __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $29 = 0, $3 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) != ($1 | 0)) {
  $6 = $3;
  do {
   HEAP32[$2 >> 2] = $6 + -144;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
   $11 = HEAP32[$6 + -40 >> 2] | 0;
   if ($11) {
    $13 = $6 + -36 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
    __ZdlPv($11);
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6 + -136 | 0);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($1 | 0));
 }
 $29 = HEAP32[$this >> 2] | 0;
 if (!$29) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($29);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this, $__pos, $__s, $__n) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$pre = 0, $0 = 0, $13 = 0, $17 = 0, $2 = 0, $22 = 0, $24 = 0, $30 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$this + 4 >> 2] | 0;
 if ($7 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 if ($2) {
  $13 = 10;
  $17 = $0;
 } else {
  $9 = HEAP32[$this >> 2] | 0;
  $13 = ($9 & -2) + -1 | 0;
  $17 = $9 & 255;
 }
 if (($13 - $7 | 0) >>> 0 < $__n >>> 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $13, $7 + $__n - $13 | 0, $7, $__pos, 0, $__n, $__s);
  STACKTOP = sp;
  return $this | 0;
 }
 if (!$__n) {
  STACKTOP = sp;
  return $this | 0;
 }
 if (!($17 & 1)) $24 = $this + 1 | 0; else $24 = HEAP32[$this + 8 >> 2] | 0;
 $22 = $7 - $__pos | 0;
 $$pre = $24 + $__pos | 0;
 if (($7 | 0) == ($__pos | 0)) $$1 = $__s; else {
  if ($$pre >>> 0 <= $__s >>> 0 & ($24 + $7 | 0) >>> 0 > $__s >>> 0) $$0 = $__s + $__n | 0; else $$0 = $__s;
  _memmove($24 + ($__n + $__pos) | 0, $$pre | 0, $22 | 0) | 0;
  $$1 = $$0;
 }
 _memmove($$pre | 0, $$1 | 0, $__n | 0) | 0;
 $30 = $7 + $__n | 0;
 if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $30 << 1; else HEAP32[$this + 4 >> 2] = $30;
 HEAP8[$24 + $30 >> 0] = 0;
 STACKTOP = sp;
 return $this | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $23 = 0, $29 = 0, $32 = 0, $37 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $23 = ($6 & 255) >>> 1; else $23 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 if (($23 | 0) == (0 - $22 | 0)) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
 $32 = $29 - $5 | 0;
 if (($29 | 0) == ($5 | 0)) if ((HEAP32[$__h >> 2] | 0) == 12) {
  HEAP32[$__h >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 if (($32 | 0) != 12) {
  STACKTOP = sp;
  return;
 }
 $37 = HEAP32[$__h >> 2] | 0;
 if (($37 | 0) >= 12) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__h >> 2] = $37 + 12;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $23 = 0, $29 = 0, $32 = 0, $37 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $23 = ($6 & 255) >>> 1; else $23 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 if (($23 | 0) == (0 - $22 | 0)) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
 $32 = $29 - $5 | 0;
 if (($29 | 0) == ($5 | 0)) if ((HEAP32[$__h >> 2] | 0) == 12) {
  HEAP32[$__h >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 if (($32 | 0) != 12) {
  STACKTOP = sp;
  return;
 }
 $37 = HEAP32[$__h >> 2] | 0;
 if (($37 | 0) >= 12) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__h >> 2] = $37 + 12;
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_15Stack3popEv($this) {
 $this = $this | 0;
 var $$idx$i = 0, $$idx$val$i = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $$idx$i = $this + 16 | 0;
 $$idx$val$i = HEAP32[$$idx$i >> 2] | 0;
 if ((HEAP32[$$idx$val$i + -144 >> 2] | 0) == 5) {
  $1 = $this + 4 | 0;
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + -1;
 }
 $4 = $$idx$val$i + -144 | 0;
 $6 = $$idx$val$i;
 do {
  HEAP32[$$idx$i >> 2] = $6 + -144;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
  $11 = HEAP32[$6 + -40 >> 2] | 0;
  if ($11) {
   $13 = $6 + -36 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
   __ZdlPv($11);
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6 + -136 | 0);
  $6 = HEAP32[$$idx$i >> 2] | 0;
 } while (($6 | 0) != ($4 | 0));
 STACKTOP = sp;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $11 = 0, $15 = 0, $19 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $23 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $23 | 0;
 }
 $3 = __Znwj(32) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  if (!$3) ___resumeException($7 | 0);
  __ZdlPv($3);
  ___resumeException($7 | 0);
 } else {
  HEAP32[$3 + 28 >> 2] = 0;
  $11 = HEAP32[$__parent >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = $11;
  HEAP32[$0 >> 2] = $3;
  $15 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
  if (!$15) $19 = $3; else {
   HEAP32[$this >> 2] = $15;
   $19 = HEAP32[$0 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $19);
  $20 = $this + 8 | 0;
  HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
  $__r$0 = $3;
  $23 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $23 | 0;
 }
 return 0;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $23 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $42 = 0, $44 = 0, $46 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $27 = (HEAP32[$0 >> 2] | 0) - $13 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
  } else {
   $$0$i2 = $23;
   $46 = $27;
   label = 6;
  }
 } else {
  $$0$i2 = 1073741823;
  $46 = (HEAP32[$0 >> 2] | 0) - $13 >> 2;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $46;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 $38 = HEAP32[$this >> 2] | 0;
 $42 = (HEAP32[$0 >> 2] | 0) - $38 | 0;
 $44 = $32 + ($33 - ($42 >> 2) << 2) | 0;
 _memcpy($44 | 0, $38 | 0, $42 | 0) | 0;
 HEAP32[$this >> 2] = $44;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$38) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($38);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$01 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $21 = 0, $27 = 0, $33 = 0, $40 = 0, $8 = 0, $__p$02 = 0, $scevgep3 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $15 = ($1 & 255) >>> 1;
  $16 = 10;
  $40 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $15 = HEAP32[$this + 4 >> 2] | 0;
  $16 = ($8 & -2) + -1 | 0;
  $40 = $8 & 255;
 }
 $12 = $__last - $0 | 0;
 if (($__last | 0) == ($__first | 0)) {
  STACKTOP = sp;
  return $this | 0;
 }
 if (($16 - $15 | 0) >>> 0 < $12 >>> 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $16, $15 + $12 - $16 | 0, $15, $15, 0, 0);
  $21 = HEAP8[$this >> 0] | 0;
 } else $21 = $40;
 if (!($21 & 1)) $27 = $this + 1 | 0; else $27 = HEAP32[$this + 8 >> 2] | 0;
 $scevgep3 = $__last + ($15 - $0) | 0;
 $$01 = $__first;
 $__p$02 = $27 + $15 | 0;
 while (1) {
  HEAP8[$__p$02 >> 0] = HEAP8[$$01 >> 0] | 0;
  $$01 = $$01 + 1 | 0;
  if (($$01 | 0) == ($__last | 0)) break; else $__p$02 = $__p$02 + 1 | 0;
 }
 HEAP8[$27 + $scevgep3 >> 0] = 0;
 $33 = $15 + $12 | 0;
 if (!(HEAP8[$this >> 0] & 1)) {
  HEAP8[$this >> 0] = $33 << 1;
  STACKTOP = sp;
  return $this | 0;
 } else {
  HEAP32[$this + 4 >> 2] = $33;
  STACKTOP = sp;
  return $this | 0;
 }
 return 0;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $23 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $42 = 0, $44 = 0, $46 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $27 = (HEAP32[$0 >> 2] | 0) - $13 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
  } else {
   $$0$i2 = $23;
   $46 = $27;
   label = 6;
  }
 } else {
  $$0$i2 = 1073741823;
  $46 = (HEAP32[$0 >> 2] | 0) - $13 >> 2;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $46;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 $38 = HEAP32[$this >> 2] | 0;
 $42 = (HEAP32[$0 >> 2] | 0) - $38 | 0;
 $44 = $32 + ($33 - ($42 >> 2) << 2) | 0;
 _memcpy($44 | 0, $38 | 0, $42 | 0) | 0;
 HEAP32[$this >> 2] = $44;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$38) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($38);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $23 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $42 = 0, $44 = 0, $46 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $27 = (HEAP32[$0 >> 2] | 0) - $13 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
  } else {
   $$0$i2 = $23;
   $46 = $27;
   label = 6;
  }
 } else {
  $$0$i2 = 1073741823;
  $46 = (HEAP32[$0 >> 2] | 0) - $13 >> 2;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $46;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 $38 = HEAP32[$this >> 2] | 0;
 $42 = (HEAP32[$0 >> 2] | 0) - $38 | 0;
 $44 = $32 + ($33 - ($42 >> 2) << 2) | 0;
 _memcpy($44 | 0, $38 | 0, $42 | 0) | 0;
 HEAP32[$this >> 2] = $44;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$38) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($38);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $23 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $38 = 0, $42 = 0, $44 = 0, $46 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = ((HEAP32[$0 >> 2] | 0) - $2 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $12 = HEAP32[$this >> 2] | 0;
 } else $12 = $2;
 $9 = $this + 8 | 0;
 $13 = $12;
 $14 = (HEAP32[$9 >> 2] | 0) - $13 | 0;
 if ($14 >> 2 >>> 0 < 536870911) {
  $21 = $14 >> 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $27 = (HEAP32[$0 >> 2] | 0) - $13 >> 2;
  if (!$23) {
   $$0$i3 = 0;
   $32 = 0;
   $33 = $27;
  } else {
   $$0$i2 = $23;
   $46 = $27;
   label = 6;
  }
 } else {
  $$0$i2 = 1073741823;
  $46 = (HEAP32[$0 >> 2] | 0) - $13 >> 2;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $32 = __Znwj($$0$i2 << 2) | 0;
  $33 = $46;
 }
 $31 = $32 + ($33 << 2) | 0;
 if ($31) HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 $38 = HEAP32[$this >> 2] | 0;
 $42 = (HEAP32[$0 >> 2] | 0) - $38 | 0;
 $44 = $32 + ($33 - ($42 >> 2) << 2) | 0;
 _memcpy($44 | 0, $38 | 0, $42 | 0) | 0;
 HEAP32[$this >> 2] = $44;
 HEAP32[$0 >> 2] = $32 + ($33 + 1 << 2);
 HEAP32[$9 >> 2] = $32 + ($$0$i3 << 2);
 if (!$38) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($38);
 STACKTOP = sp;
 return;
}

function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $23 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 45792) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, 44312, 44338 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 45952) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP32[$__thousands_sep >> 2] = $14;
     __THREW__ = 0;
     invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
     $20 = __THREW__;
     __THREW__ = 0;
     if (!($20 & 1)) {
      __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
      STACKTOP = sp;
      return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($23 | 0);
}

function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $20 = 0, $23 = 0, $6 = 0, $8 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc, $__iob);
 __THREW__ = 0;
 $0 = invoke_iii(22, $__loc | 0, 45800) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if (!($1 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, 44312, 44338 | 0, $__atoms | 0) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   $8 = invoke_iii(22, $__loc | 0, 45944) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) {
    __THREW__ = 0;
    $14 = invoke_ii(HEAP32[(HEAP32[$8 >> 2] | 0) + 16 >> 2] | 0, $8 | 0) | 0;
    $15 = __THREW__;
    __THREW__ = 0;
    if (!($15 & 1)) {
     HEAP8[$__thousands_sep >> 0] = $14;
     __THREW__ = 0;
     invoke_vii(HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $8 | 0);
     $20 = __THREW__;
     __THREW__ = 0;
     if (!($20 & 1)) {
      __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
      STACKTOP = sp;
      return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
 ___resumeException($23 | 0);
}

function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg$result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$01$i$i = 0, $10 = 0, $11 = 0, $21 = 0, $24 = 0, $25 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__nar = sp + 4 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $5 = HEAP32[$__s >> 2] | 0;
 if (($__nar | 0) == ($4 | 0)) {
  $24 = $5;
  HEAP32[$agg$result >> 2] = $24;
  STACKTOP = sp;
  return;
 } else {
  $$01$i$i = $__nar;
  $8 = $5;
 }
 while (1) {
  $7 = HEAP8[$$01$i$i >> 0] | 0;
  do if (!$8) $25 = 0; else {
   $10 = $8 + 24 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (($11 | 0) == (HEAP32[$8 + 28 >> 2] | 0)) {
    $21 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] & 63]($8, $7 & 255) | 0) == -1;
    $25 = $21 ? 0 : $8;
    break;
   } else {
    HEAP32[$10 >> 2] = $11 + 1;
    HEAP8[$11 >> 0] = $7;
    $25 = $8;
    break;
   }
  } while (0);
  $$01$i$i = $$01$i$i + 1 | 0;
  if (($$01$i$i | 0) == ($4 | 0)) {
   $24 = $25;
   break;
  } else $8 = $25;
 }
 HEAP32[$agg$result >> 2] = $24;
 STACKTOP = sp;
 return;
}

function _MUSL_vfprintf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$0 = 0, $11 = 0, $12 = 0, $2 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $ap2 = sp + 120 | 0;
 $nl_type = sp + 80 | 0;
 $nl_arg = sp;
 $internal_buf = sp + 136 | 0;
 dest = $nl_type + 0 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
 if ((_printf_core(0, $fmt, $ap2, $nl_arg, $nl_type) | 0) < 0) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $2 = $f + 48 | 0;
 if (!(HEAP32[$2 >> 2] | 0)) {
  $6 = $f + 44 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  HEAP32[$6 >> 2] = $internal_buf;
  $8 = $f + 28 | 0;
  HEAP32[$8 >> 2] = $internal_buf;
  $9 = $f + 20 | 0;
  HEAP32[$9 >> 2] = $internal_buf;
  HEAP32[$2 >> 2] = 80;
  $11 = $f + 16 | 0;
  HEAP32[$11 >> 2] = $internal_buf + 80;
  $12 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
  if (!$7) $ret$1 = $12; else {
   FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
   $$ = (HEAP32[$9 >> 2] | 0) == 0 ? -1 : $12;
   HEAP32[$6 >> 2] = $7;
   HEAP32[$2 >> 2] = 0;
   HEAP32[$11 >> 2] = 0;
   HEAP32[$8 >> 2] = 0;
   HEAP32[$9 >> 2] = 0;
   $ret$1 = $$;
  }
 } else $ret$1 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
 $$0 = $ret$1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL25default_terminate_handlerv() {
 var $0 = 0, $11 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $34 = 0, $6 = 0, $8 = 0, $thrown_object = 0, $vararg_buffer10 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer10 = sp;
 $thrown_object = sp + 12 | 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if (!$0) _abort_message(53848, $vararg_buffer10);
 $2 = HEAP32[$0 >> 2] | 0;
 if (!$2) _abort_message(53848, $vararg_buffer10);
 $6 = $2 + 48 | 0;
 $8 = HEAP32[$6 >> 2] | 0;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 if (!(($8 & -256 | 0) == 1126902528 & ($11 | 0) == 1129074247)) {
  HEAP32[$vararg_buffer10 >> 2] = HEAP32[13422];
  _abort_message(53808, $vararg_buffer10);
 }
 if (($8 | 0) == 1126902529 & ($11 | 0) == 1129074247) $21 = HEAP32[$2 + 44 >> 2] | 0; else $21 = $2 + 80 | 0;
 HEAP32[$thrown_object >> 2] = $21;
 $22 = HEAP32[$2 >> 2] | 0;
 $24 = HEAP32[$22 + 4 >> 2] | 0;
 if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[54240 >> 2] | 0) + 16 >> 2] & 63](54240, $22, $thrown_object) | 0) {
  $29 = HEAP32[$thrown_object >> 2] | 0;
  $30 = HEAP32[13422] | 0;
  $34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 8 >> 2] & 127]($29) | 0;
  HEAP32[$vararg_buffer10 >> 2] = $30;
  HEAP32[$vararg_buffer10 + 4 >> 2] = $24;
  HEAP32[$vararg_buffer10 + 8 >> 2] = $34;
  _abort_message(53712, $vararg_buffer10);
 } else {
  HEAP32[$vararg_buffer10 >> 2] = HEAP32[13422];
  HEAP32[$vararg_buffer10 + 4 >> 2] = $24;
  _abort_message(53760, $vararg_buffer10);
 }
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$1 + ($4 + 24) >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 if (HEAP32[$1 + ($4 + 16) >> 2] | 0) {
  STACKTOP = sp;
  return;
 }
 if (!(HEAP32[$1 + ($4 + 4) >> 2] & 8192)) {
  STACKTOP = sp;
  return;
 }
 if (__ZSt18uncaught_exceptionv() | 0) {
  STACKTOP = sp;
  return;
 }
 $16 = HEAP32[$0 >> 2] | 0;
 $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
 __THREW__ = 0;
 $25 = invoke_ii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $21 | 0) | 0;
 $26 = __THREW__;
 __THREW__ = 0;
 if (!($26 & 1)) {
  if (($25 | 0) != -1) {
   STACKTOP = sp;
   return;
  }
  $29 = HEAP32[$0 >> 2] | 0;
  $32 = HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0;
  __THREW__ = 0;
  invoke_vii(48, $29 + $32 | 0, HEAP32[$29 + ($32 + 16) >> 2] | 1 | 0);
  $37 = __THREW__;
  __THREW__ = 0;
  if (!($37 & 1)) {
   STACKTOP = sp;
   return;
  }
 }
 $39 = ___cxa_find_matching_catch(0) | 0;
 ___cxa_begin_catch($39 | 0) | 0;
 __THREW__ = 0;
 invoke_v(2);
 $41 = __THREW__;
 __THREW__ = 0;
 if ($41 & 1) {
  $43 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($43);
 } else {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$1 + ($4 + 24) >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 if (HEAP32[$1 + ($4 + 16) >> 2] | 0) {
  STACKTOP = sp;
  return;
 }
 if (!(HEAP32[$1 + ($4 + 4) >> 2] & 8192)) {
  STACKTOP = sp;
  return;
 }
 if (__ZSt18uncaught_exceptionv() | 0) {
  STACKTOP = sp;
  return;
 }
 $16 = HEAP32[$0 >> 2] | 0;
 $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
 __THREW__ = 0;
 $25 = invoke_ii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $21 | 0) | 0;
 $26 = __THREW__;
 __THREW__ = 0;
 if (!($26 & 1)) {
  if (($25 | 0) != -1) {
   STACKTOP = sp;
   return;
  }
  $29 = HEAP32[$0 >> 2] | 0;
  $32 = HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0;
  __THREW__ = 0;
  invoke_vii(48, $29 + $32 | 0, HEAP32[$29 + ($32 + 16) >> 2] | 1 | 0);
  $37 = __THREW__;
  __THREW__ = 0;
  if (!($37 & 1)) {
   STACKTOP = sp;
   return;
  }
 }
 $39 = ___cxa_find_matching_catch(0) | 0;
 ___cxa_begin_catch($39 | 0) | 0;
 __THREW__ = 0;
 invoke_v(2);
 $41 = __THREW__;
 __THREW__ = 0;
 if ($41 & 1) {
  $43 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($43);
 } else {
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg$result, $this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$0$i$i$i$i = 0, $$01$i$i = 0, $10 = 0, $11 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $__nar = sp + 8 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 400;
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $5 = HEAP32[$__s >> 2] | 0;
 if (($__nar | 0) == ($4 | 0)) {
  $23 = $5;
  HEAP32[$agg$result >> 2] = $23;
  STACKTOP = sp;
  return;
 } else {
  $$01$i$i = $__nar;
  $8 = $5;
 }
 while (1) {
  $7 = HEAP32[$$01$i$i >> 2] | 0;
  if (!$8) $24 = 0; else {
   $10 = $8 + 24 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (($11 | 0) == (HEAP32[$8 + 28 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] & 63]($8, $7) | 0; else {
    HEAP32[$10 >> 2] = $11 + 4;
    HEAP32[$11 >> 2] = $7;
    $$0$i$i$i$i = $7;
   }
   $24 = ($$0$i$i$i$i | 0) == -1 ? 0 : $8;
  }
  $$01$i$i = $$01$i$i + 4 | 0;
  if (($$01$i$i | 0) == ($4 | 0)) {
   $23 = $24;
   break;
  } else $8 = $24;
 }
 HEAP32[$agg$result >> 2] = $23;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $ec, $what_arg) {
 $this = $this | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $what_arg, _strlen($what_arg | 0) | 0);
 __THREW__ = 0;
 invoke_viii(15, $0 | 0, $ec | 0, $1 | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $18;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
  ___resumeException($$01 | 0);
 }
 __THREW__ = 0;
 invoke_vii(69, $this | 0, $0 | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if (!($5 & 1)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
  HEAP32[$this >> 2] = 42728;
  $8 = $ec;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $this + 8 | 0;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  STACKTOP = sp;
  return;
 }
 $20 = ___cxa_find_matching_catch() | 0;
 $21 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0);
 $$0 = $21;
 $$01 = $20;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($1);
 ___resumeException($$01 | 0);
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if ((1073741807 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 4 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 2) $17 = 2; else $17 = $12 + 4 & -4;
 } else $17 = 1073741807;
 $18 = __Znwj($17 << 2) | 0;
 if ($__n_copy) _wmemcpy($18, $20, $__n_copy) | 0;
 $21 = $__old_sz - $__n_del | 0;
 if (($21 | 0) != ($__n_copy | 0)) _wmemcpy($18 + ($__n_add + $__n_copy << 2) | 0, $20 + ($__n_del + $__n_copy << 2) | 0, $21 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) == 1) {
  $27 = $this + 8 | 0;
  HEAP32[$27 >> 2] = $18;
  $28 = $17 | 1;
  HEAP32[$this >> 2] = $28;
  STACKTOP = sp;
  return;
 }
 __ZdlPv($20);
 $27 = $this + 8 | 0;
 HEAP32[$27 >> 2] = $18;
 $28 = $17 | 1;
 HEAP32[$this >> 2] = $28;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $26 = 0, $27 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if ((-17 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $19 = $this + 1 | 0; else $19 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  if ($12 >>> 0 < 11) $16 = 11; else $16 = $12 + 16 & -16;
 } else $16 = -17;
 $17 = __Znwj($16) | 0;
 if ($__n_copy) _memcpy($17 | 0, $19 | 0, $__n_copy | 0) | 0;
 $20 = $__old_sz - $__n_del | 0;
 if (($20 | 0) != ($__n_copy | 0)) _memcpy($17 + ($__n_add + $__n_copy) | 0, $19 + ($__n_del + $__n_copy) | 0, $20 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) == 10) {
  $26 = $this + 8 | 0;
  HEAP32[$26 >> 2] = $17;
  $27 = $16 | 1;
  HEAP32[$this >> 2] = $27;
  STACKTOP = sp;
  return;
 }
 __ZdlPv($19);
 $26 = $this + 8 | 0;
 HEAP32[$26 >> 2] = $17;
 $27 = $16 | 1;
 HEAP32[$this >> 2] = $27;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 1;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 4 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
  $__p$0 = $$pn + ($__sz$0 << 2) | 0;
  HEAP32[$__p$0 >> 2] = $__c;
  $22 = $$pn + ($__p$0$sum$pre$phiZZZ2D << 2) | 0;
  HEAP32[$22 >> 2] = 0;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
  $__p$0 = $$pn + ($__sz$0 << 2) | 0;
  HEAP32[$__p$0 >> 2] = $__c;
  $22 = $$pn + ($__p$0$sum$pre$phiZZZ2D << 2) | 0;
  HEAP32[$22 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 10;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 1 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
  $__p$0 = $$pn + $__sz$0 | 0;
  HEAP8[$__p$0 >> 0] = $__c;
  $22 = $$pn + $__p$0$sum$pre$phiZZZ2D | 0;
  HEAP8[$22 >> 0] = 0;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
  $__p$0 = $$pn + $__sz$0 | 0;
  HEAP8[$__p$0 >> 0] = $__c;
  $22 = $$pn + $__p$0$sum$pre$phiZZZ2D | 0;
  HEAP8[$22 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
}

function ___fwritex($s, $l, $f) {
 $s = $s | 0;
 $l = $l | 0;
 $f = $f | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $19 = 0, $29 = 0, $5 = 0, $6 = 0, $7 = 0, $i$0 = 0, $i$1 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) if (!(___towrite($f) | 0)) {
  $7 = HEAP32[$0 >> 2] | 0;
  break;
 } else {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else $7 = $1; while (0);
 $5 = $f + 20 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($7 - $6 | 0) >>> 0 < $l >>> 0) {
  $$0 = FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, $s, $l) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 L11 : do if ((HEAP8[$f + 75 >> 0] | 0) > -1) {
  $i$0 = $l;
  while (1) {
   if (!$i$0) {
    $$01 = $l;
    $$02 = $s;
    $29 = $6;
    $i$1 = 0;
    break L11;
   }
   $19 = $i$0 + -1 | 0;
   if ((HEAP8[$s + $19 >> 0] | 0) == 10) break; else $i$0 = $19;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, $s, $i$0) | 0) >>> 0 < $i$0 >>> 0) {
   $$0 = $i$0;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$01 = $l - $i$0 | 0;
   $$02 = $s + $i$0 | 0;
   $29 = HEAP32[$5 >> 2] | 0;
   $i$1 = $i$0;
   break;
  }
 } else {
  $$01 = $l;
  $$02 = $s;
  $29 = $6;
  $i$1 = 0;
 } while (0);
 _memcpy($29 | 0, $$02 | 0, $$01 | 0) | 0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$01;
 $$0 = $i$1 + $$01 | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $4 = 0, $5 = 0, $__v = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v = sp;
 $4 = HEAP32[$this + 8 >> 2] | 0;
 $5 = HEAP32[$this + 4 >> 2] | 0;
 if ($4 - $5 >> 2 >>> 0 >= $__n >>> 0) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
  STACKTOP = sp;
  return;
 }
 $11 = HEAP32[$this >> 2] | 0;
 $13 = $5 - $11 >> 2;
 $14 = $13 + $__n | 0;
 if ($14 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $16 = $4 - $11 | 0;
 if ($16 >> 2 >>> 0 < 536870911) {
  $19 = $16 >> 1;
  $$0$i = $19 >>> 0 < $14 >>> 0 ? $14 : $19;
 } else $$0$i = 1073741823;
 __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v, $$0$i, $13, $this + 16 | 0);
 __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($__v, $__n);
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v);
 __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 STACKTOP = sp;
 return;
}

function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $1 = ___errno_location() | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = 0;
 $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
 $5 = tempRet0;
 $6 = HEAP32[$1 >> 2] | 0;
 if (!$6) HEAP32[$1 >> 2] = $2;
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 do if (($6 | 0) == 34) {
  HEAP32[$__err >> 2] = 4;
  if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0) {
   $$0 = 2147483647;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  if (($5 | 0) < -1 | ($5 | 0) == -1 & $4 >>> 0 < 2147483648) {
   HEAP32[$__err >> 2] = 4;
   break;
  }
  if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 2147483647) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 2147483647;
   STACKTOP = sp;
   return $$0 | 0;
  } else {
   $$0 = $4;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 $$0 = -2147483648;
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z23jsonnet_unparse_jsonnetPK3AST($agg$result, $ast) {
 $agg$result = $agg$result | 0;
 $ast = $ast | 0;
 var $0 = 0, $10 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if ($ast) {
  $2 = ___dynamic_cast($ast, 34e3, 34016, 0) | 0;
  if ($2) {
   __ZL7unparsePK3AST($agg$result, HEAP32[$2 + 60 >> 2] | 0);
   STACKTOP = sp;
   return;
  }
 }
 $4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(41312, 34032, 68) | 0;
 __ZNKSt3__18ios_base6getlocEv($0, $4 + (HEAP32[(HEAP32[$4 >> 2] | 0) + -12 >> 2] | 0) | 0);
 __THREW__ = 0;
 $9 = invoke_iii(22, $0 | 0, 45800) | 0;
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $19 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($18 | 0);
 }
 __THREW__ = 0;
 $15 = invoke_iii(HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] | 0, $9 | 0, 10) | 0;
 $16 = __THREW__;
 __THREW__ = 0;
 if ($16 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $19 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($18 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($4, $15) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($4) | 0;
  _abort();
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $13 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 if (!($9 & 1)) {
  $21 = $6 + 4 | 0;
  $22 = ($9 & 255) >>> 1;
  $23 = $6 + 4 | 0;
 } else {
  $13 = HEAP32[$6 + 8 >> 2] | 0;
  $21 = $13;
  $22 = HEAP32[$6 + 4 >> 2] | 0;
  $23 = $13;
 }
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $23, $21 + ($22 << 2) | 0);
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 var $16 = 0, $17 = 0, $22 = 0, $25 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$info + 53 >> 0] = 1;
 if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP8[$info + 52 >> 0] = 1;
 $5 = $info + 16 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) {
  HEAP32[$5 >> 2] = $dst_ptr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  if (!(($path_below | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0)) {
   STACKTOP = sp;
   return;
  }
  HEAP8[$info + 54 >> 0] = 1;
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) != ($dst_ptr | 0)) {
  $25 = $info + 36 | 0;
  HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
  HEAP8[$info + 54 >> 0] = 1;
  STACKTOP = sp;
  return;
 }
 $16 = $info + 24 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 | 0) == 2) {
  HEAP32[$16 >> 2] = $path_below;
  $22 = $path_below;
 } else $22 = $17;
 if (!(($22 | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP8[$info + 54 >> 0] = 1;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $13 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 if (!($9 & 1)) {
  $21 = $6 + 1 | 0;
  $22 = ($9 & 255) >>> 1;
  $23 = $6 + 1 | 0;
 } else {
  $13 = HEAP32[$6 + 8 >> 2] | 0;
  $21 = $13;
  $22 = HEAP32[$6 + 4 >> 2] | 0;
  $23 = $13;
 }
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $23, $21 + $22 | 0);
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 if ((HEAP32[$info + 8 >> 2] | 0) == ($this | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) != ($current_ptr | 0)) {
   STACKTOP = sp;
   return;
  }
  $6 = $info + 28 | 0;
  if ((HEAP32[$6 >> 2] | 0) == 1) {
   STACKTOP = sp;
   return;
  }
  HEAP32[$6 >> 2] = $path_below;
  STACKTOP = sp;
  return;
 }
 if ((HEAP32[$info >> 2] | 0) != ($this | 0)) {
  STACKTOP = sp;
  return;
 }
 if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
  $14 = $info + 20 | 0;
  if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
   HEAP32[$info + 32 >> 2] = $path_below;
   HEAP32[$14 >> 2] = $current_ptr;
   $20 = $info + 40 | 0;
   HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
   if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) HEAP8[$info + 54 >> 0] = 1;
   HEAP32[$info + 44 >> 2] = 4;
   STACKTOP = sp;
   return;
  }
 }
 if (($path_below | 0) != 1) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$info + 32 >> 2] = 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $15 = 0, $17 = 0, $23 = 0, $3 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 41008;
 $0 = $this + 64 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if ($1) {
  __THREW__ = 0;
  invoke_ii(5, $this | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $7 = ___cxa_find_matching_catch(0) | 0;
   _fclose($1 | 0) | 0;
   ___cxa_begin_catch($7 | 0) | 0;
   __THREW__ = 0;
   invoke_v(2);
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) break;
   $17 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
   ___clang_call_terminate($17);
  } else {
   if (_fclose($1 | 0) | 0) break;
   HEAP32[$0 >> 2] = 0;
   break;
  }
 } while (0);
 if (HEAP8[$this + 96 >> 0] | 0) {
  $15 = HEAP32[$this + 32 >> 2] | 0;
  if ($15) __ZdaPv($15);
 }
 if (!(HEAP8[$this + 97 >> 0] | 0)) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  STACKTOP = sp;
  return;
 }
 $23 = HEAP32[$this + 56 >> 2] | 0;
 if (!$23) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  STACKTOP = sp;
  return;
 }
 __ZdaPv($23);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi2Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $13 = 0, $18 = 0, $19 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $13 = $3;
 } else $13 = $1;
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $this + 12 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($6 >>> 0 >= $8 >>> 0) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($__c | 0) == -1) {
  HEAP32[$5 >> 2] = $6;
  HEAP32[$7 >> 2] = $8 + -1;
  HEAP32[$this + 16 >> 2] = $13;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP32[$this + 48 >> 2] & 16)) {
  $18 = $__c & 255;
  $19 = $8 + -1 | 0;
  if ($18 << 24 >> 24 == (HEAP8[$19 >> 0] | 0)) {
   $$pre$phi2Z2D = $18;
   $$pre$phiZ2D = $19;
  } else {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else {
  $$pre$phi2Z2D = $__c & 255;
  $$pre$phiZ2D = $8 + -1 | 0;
 }
 HEAP32[$5 >> 2] = $6;
 HEAP32[$7 >> 2] = $$pre$phiZ2D;
 HEAP32[$this + 16 >> 2] = $13;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi2Z2D;
 $$0 = $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp, $__len, $__signd, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__signd = $__signd | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $10 = 0, $13 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 512)) $$1$ph = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1$ph = $$0 + 1 | 0;
 }
 $6 = HEAP8[$__len >> 0] | 0;
 if (!($6 << 24 >> 24)) $$1$lcssa = $$1$ph; else {
  $$012 = $__len;
  $$13 = $$1$ph;
  $10 = $6;
  while (1) {
   $$012 = $$012 + 1 | 0;
   $9 = $$13 + 1 | 0;
   HEAP8[$$13 >> 0] = $10;
   $10 = HEAP8[$$012 >> 0] | 0;
   if (!($10 << 24 >> 24)) {
    $$1$lcssa = $9;
    break;
   } else $$13 = $9;
  }
 }
 $13 = $__flags & 74;
 if (($13 | 0) == 64) {
  HEAP8[$$1$lcssa >> 0] = 111;
  STACKTOP = sp;
  return;
 } else if (($13 | 0) == 8) if (!($__flags & 16384)) {
  HEAP8[$$1$lcssa >> 0] = 120;
  STACKTOP = sp;
  return;
 } else {
  HEAP8[$$1$lcssa >> 0] = 88;
  STACKTOP = sp;
  return;
 } else if ($__signd) {
  HEAP8[$$1$lcssa >> 0] = 100;
  STACKTOP = sp;
  return;
 } else {
  HEAP8[$$1$lcssa >> 0] = 117;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $__sp, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__sp = $__sp | 0;
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $28 = 0, $33 = 0, $38 = 0, $43 = 0, $44 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $this + 64 | 0;
 if (HEAP32[$1 >> 2] | 0) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0)) if (!(_fseeko(HEAP32[$1 >> 2] | 0, HEAP32[$__sp + 8 >> 2] | 0, 0) | 0)) {
  $38 = $__sp;
  $43 = HEAP32[$38 + 4 >> 2] | 0;
  $44 = $this + 72 | 0;
  HEAP32[$44 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$44 + 4 >> 2] = $43;
  HEAP32[$agg$result + 0 >> 2] = HEAP32[$__sp + 0 >> 2];
  HEAP32[$agg$result + 4 >> 2] = HEAP32[$__sp + 4 >> 2];
  HEAP32[$agg$result + 8 >> 2] = HEAP32[$__sp + 8 >> 2];
  HEAP32[$agg$result + 12 >> 2] = HEAP32[$__sp + 12 >> 2];
  STACKTOP = sp;
  return;
 } else {
  $28 = $agg$result;
  HEAP32[$28 >> 2] = 0;
  HEAP32[$28 + 4 >> 2] = 0;
  $33 = $agg$result + 8 | 0;
  HEAP32[$33 >> 2] = -1;
  HEAP32[$33 + 4 >> 2] = -1;
  STACKTOP = sp;
  return;
 }
 $9 = $agg$result;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 $14 = $agg$result + 8 | 0;
 HEAP32[$14 >> 2] = -1;
 HEAP32[$14 + 4 >> 2] = -1;
 STACKTOP = sp;
 return;
}

function __ZN6ObjectD0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $17 = 0, $19 = 0, $20 = 0, $26 = 0, $5 = 0, $7 = 0, $9 = 0, $__f$01$i$i$i = 0, sp = 0, $__f$01$i$i$i$looptemp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36392;
 $0 = $this + 48 | 0;
 $1 = $this + 56 | 0;
 if (HEAP32[$1 >> 2] | 0) {
  $5 = HEAP32[$this + 52 >> 2] | 0;
  $7 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  $9 = HEAP32[$5 >> 2] | 0;
  HEAP32[$9 + 4 >> 2] = HEAP32[$7 >> 2];
  HEAP32[HEAP32[$7 >> 2] >> 2] = $9;
  HEAP32[$1 >> 2] = 0;
  if (($5 | 0) != ($0 | 0)) {
   $__f$01$i$i$i = $5;
   do {
    $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
    $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$i$looptemp);
   } while (($__f$01$i$i$i | 0) != ($0 | 0));
  }
 }
 HEAP32[$this >> 2] = 34168;
 $17 = HEAP32[$this + 36 >> 2] | 0;
 if (!$17) {
  $26 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $19 = $this + 40 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 if (($20 | 0) != ($17 | 0)) HEAP32[$19 >> 2] = $20 + (~(($20 + -4 - $17 | 0) >>> 2) << 2);
 __ZdlPv($17);
 $26 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$02 = 0, $0 = 0, $10 = 0, $12 = 0, $2 = 0, $20 = 0, $3 = 0, $__p$0$lcssa = 0, $__p$0$ph = 0, $__p$01 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 $3 = $2 >> 2;
 if ($3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($3 >>> 0 < 2) {
  HEAP8[$this >> 0] = $2 >>> 1;
  $__p$0$ph = $this + 4 | 0;
 } else {
  $10 = $3 + 4 & -4;
  $12 = __Znwj($10 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $12;
  HEAP32[$this >> 2] = $10 | 1;
  HEAP32[$this + 4 >> 2] = $3;
  $__p$0$ph = $12;
 }
 if (($__first | 0) == ($__last | 0)) {
  $__p$0$lcssa = $__p$0$ph;
  HEAP32[$__p$0$lcssa >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $20 = (($__last + -4 - $0 | 0) >>> 2) + 1 | 0;
 $$02 = $__first;
 $__p$01 = $__p$0$ph;
 while (1) {
  HEAP32[$__p$01 >> 2] = HEAP32[$$02 >> 2];
  $$02 = $$02 + 4 | 0;
  if (($$02 | 0) == ($__last | 0)) break; else $__p$01 = $__p$01 + 4 | 0;
 }
 $__p$0$lcssa = $__p$0$ph + ($20 << 2) | 0;
 HEAP32[$__p$0$lcssa >> 2] = 0;
 STACKTOP = sp;
 return;
}

function _vsnprintf($s, $n, $fmt, $ap) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $5 = 0, $8 = 0, $b = 0, $f = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $b = sp + 112 | 0;
 $f = sp;
 dest = $f + 0 | 0;
 src = 56456 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($n + -1 | 0) >>> 0 > 2147483646) if (!$n) {
  $$01 = $b;
  $$02 = 1;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$01 = $s;
  $$02 = $n;
 }
 $5 = -2 - $$01 | 0;
 $$$02 = $$02 >>> 0 > $5 >>> 0 ? $5 : $$02;
 HEAP32[$f + 48 >> 2] = $$$02;
 $8 = $f + 20 | 0;
 HEAP32[$8 >> 2] = $$01;
 HEAP32[$f + 44 >> 2] = $$01;
 $10 = $$01 + $$$02 | 0;
 $11 = $f + 16 | 0;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$f + 28 >> 2] = $10;
 $13 = _MUSL_vfprintf($f, $fmt, $ap) | 0;
 if (!$$$02) {
  $$0 = $13;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $15 = HEAP32[$8 >> 2] | 0;
 HEAP8[$15 + ((($15 | 0) == (HEAP32[$11 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
 $$0 = $13;
 STACKTOP = sp;
 return $$0 | 0;
}

function ___cxx_global_array_dtor112($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53300 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53288 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53276 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53264 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53252 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53240 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53228 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53216 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53204 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53192 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53180 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53168 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53156 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(53144);
 STACKTOP = sp;
 return;
}

function ___cxx_global_array_dtor97($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52764 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52752 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52740 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52728 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52716 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52704 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52692 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52680 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52668 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52656 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52644 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52632 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52620 | 0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(52608);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 45792) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 45792) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 45800) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 45800) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZN6ObjectD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $17 = 0, $19 = 0, $20 = 0, $26 = 0, $5 = 0, $7 = 0, $9 = 0, $__f$01$i$i = 0, sp = 0, $__f$01$i$i$looptemp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36392;
 $0 = $this + 48 | 0;
 $1 = $this + 56 | 0;
 if (HEAP32[$1 >> 2] | 0) {
  $5 = HEAP32[$this + 52 >> 2] | 0;
  $7 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  $9 = HEAP32[$5 >> 2] | 0;
  HEAP32[$9 + 4 >> 2] = HEAP32[$7 >> 2];
  HEAP32[HEAP32[$7 >> 2] >> 2] = $9;
  HEAP32[$1 >> 2] = 0;
  if (($5 | 0) != ($0 | 0)) {
   $__f$01$i$i = $5;
   do {
    $__f$01$i$i$looptemp = $__f$01$i$i;
    $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$looptemp);
   } while (($__f$01$i$i | 0) != ($0 | 0));
  }
 }
 HEAP32[$this >> 2] = 34168;
 $17 = HEAP32[$this + 36 >> 2] | 0;
 if (!$17) {
  $26 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
  STACKTOP = sp;
  return;
 }
 $19 = $this + 40 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 if (($20 | 0) != ($17 | 0)) HEAP32[$19 >> 2] = $20 + (~(($20 + -4 - $17 | 0) >>> 2) << 2);
 __ZdlPv($17);
 $26 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($26);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 45792) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0, $__iob);
 __THREW__ = 0;
 $2 = invoke_iii(22, $0 | 0, 45800) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$0 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$1 + 0 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $2);
  HEAP32[$agg$result >> 2] = HEAP32[$__b >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $5 = 0, $6 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below);
  STACKTOP = sp;
  return;
 }
 $5 = HEAP32[$this + 12 >> 2] | 0;
 $6 = $this + ($5 << 3) + 16 | 0;
 __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this + 16 | 0, $info, $adjustedPtr, $path_below);
 if (($5 | 0) <= 1) {
  STACKTOP = sp;
  return;
 }
 $9 = $info + 54 | 0;
 $p$0 = $this + 24 | 0;
 while (1) {
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0, $info, $adjustedPtr, $path_below);
  if (HEAP8[$9 >> 0] | 0) {
   label = 7;
   break;
  }
  $p$0 = $p$0 + 8 | 0;
  if ($p$0 >>> 0 >= $6 >>> 0) {
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$02 = 0, $0 = 0, $10 = 0, $16 = 0, $2 = 0, $9 = 0, $__p$0$lcssa = 0, $__p$0$ph = 0, $__p$01 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($2 >>> 0 < 11) {
  HEAP8[$this >> 0] = $2 << 1;
  $__p$0$ph = $this + 1 | 0;
 } else {
  $9 = $2 + 16 & -16;
  $10 = __Znwj($9) | 0;
  HEAP32[$this + 8 >> 2] = $10;
  HEAP32[$this >> 2] = $9 | 1;
  HEAP32[$this + 4 >> 2] = $2;
  $__p$0$ph = $10;
 }
 if (($__first | 0) == ($__last | 0)) {
  $__p$0$lcssa = $__p$0$ph;
  HEAP8[$__p$0$lcssa >> 0] = 0;
  STACKTOP = sp;
  return;
 }
 $16 = $__last - $0 | 0;
 $$02 = $__first;
 $__p$01 = $__p$0$ph;
 while (1) {
  HEAP8[$__p$01 >> 0] = HEAP8[$$02 >> 0] | 0;
  $$02 = $$02 + 1 | 0;
  if (($$02 | 0) == ($__last | 0)) break; else $__p$01 = $__p$01 + 1 | 0;
 }
 $__p$0$lcssa = $__p$0$ph + $16 | 0;
 HEAP8[$__p$0$lcssa >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 190;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 if ($2) $14 = $4; else $14 = 0;
 $15 = _realloc($14, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $15;
  $25 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $25 = $15; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $21 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($21);
   } else {
    $25 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 188;
 HEAP32[$__n >> 2] = $25 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 190;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 if ($2) $14 = $4; else $14 = 0;
 $15 = _realloc($14, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $15;
  $25 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $25 = $15; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $21 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($21);
   } else {
    $25 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 188;
 HEAP32[$__n >> 2] = $25 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $$1 = 0, $2 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 if (($this | 0) == ($thrown_type | 0)) {
  $$1 = 1;
  STACKTOP = sp;
  return $$1 | 0;
 }
 if (!$thrown_type) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $2 = ___dynamic_cast($thrown_type, 54632, 54688, 0) | 0;
 if (!$2) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 dest = $info + 0 | 0;
 stop = dest + 56 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$info >> 2] = $2;
 HEAP32[$info + 8 >> 2] = $this;
 HEAP32[$info + 12 >> 2] = -1;
 HEAP32[$info + 48 >> 2] = 1;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 31]($2, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
 if ((HEAP32[$info + 24 >> 2] | 0) != 1) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
 $$1 = 1;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $1 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $18 = 0;
  $19 = 0;
  tempRet0 = $18;
  STACKTOP = sp;
  return $19 | 0;
 }
 $1 = ___errno_location() | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = 0;
 $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
 $5 = tempRet0;
 $6 = HEAP32[$1 >> 2] | 0;
 if (!$6) HEAP32[$1 >> 2] = $2;
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $18 = 0;
  $19 = 0;
  tempRet0 = $18;
  STACKTOP = sp;
  return $19 | 0;
 }
 if (($6 | 0) == 34) {
  HEAP32[$__err >> 2] = 4;
  $15 = ($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0;
  tempRet0 = $15 ? 2147483647 : -2147483648;
  STACKTOP = sp;
  return ($15 ? -1 : 0) | 0;
 } else {
  $18 = $5;
  $19 = $4;
  tempRet0 = $18;
  STACKTOP = sp;
  return $19 | 0;
 }
 return 0;
}

function ___shgetc($f) {
 $f = $f | 0;
 var $$0 = 0, $$pre = 0, $$pre3 = 0, $0 = 0, $1 = 0, $12 = 0, $19 = 0, $27 = 0, $32 = 0, $6 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f + 104 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) label = 3; else if ((HEAP32[$f + 108 >> 2] | 0) < ($1 | 0)) label = 3;
 if ((label | 0) == 3) {
  $6 = ___uflow($f) | 0;
  if (($6 | 0) >= 0) {
   $9 = HEAP32[$0 >> 2] | 0;
   $$pre = HEAP32[$f + 8 >> 2] | 0;
   if (!$9) label = 8; else {
    $12 = HEAP32[$f + 4 >> 2] | 0;
    $19 = $9 - (HEAP32[$f + 108 >> 2] | 0) + -1 | 0;
    if (($$pre - $12 | 0) > ($19 | 0)) HEAP32[$f + 100 >> 2] = $12 + $19; else label = 8;
   }
   if ((label | 0) == 8) HEAP32[$f + 100 >> 2] = $$pre;
   $$pre3 = HEAP32[$f + 4 >> 2] | 0;
   if ($$pre) {
    $27 = $f + 108 | 0;
    HEAP32[$27 >> 2] = $$pre + 1 - $$pre3 + (HEAP32[$27 >> 2] | 0);
   }
   $32 = $$pre3 + -1 | 0;
   if ((HEAPU8[$32 >> 0] | 0 | 0) == ($6 | 0)) {
    $$0 = $6;
    STACKTOP = sp;
    return $$0 | 0;
   }
   HEAP8[$32 >> 0] = $6;
   $$0 = $6;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 HEAP32[$f + 100 >> 2] = 0;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 190;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $12 = (HEAP32[$__n >> 2] | 0) - $6 | 0;
 $14 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$14) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $14;
  $23 = $14;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $14;
  if (!$$pr) $23 = $14; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $18 = __THREW__;
   __THREW__ = 0;
   if ($18 & 1) {
    $20 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($20);
   } else {
    $23 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 188;
 HEAP32[$__n >> 2] = $23 + $12;
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + $$;
 STACKTOP = sp;
 return;
}

function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ((HEAP8[$__a >> 0] | 0) == 45) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = ___errno_location() | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
 $7 = tempRet0;
 $8 = HEAP32[$3 >> 2] | 0;
 if (!$8) HEAP32[$3 >> 2] = $4;
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($8 | 0) == 34 | ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 65535)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$0 = $6 & 65535;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ((HEAP8[$__a >> 0] | 0) == 45) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = ___errno_location() | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
 $7 = tempRet0;
 $8 = HEAP32[$3 >> 2] | 0;
 if (!$8) HEAP32[$3 >> 2] = $4;
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($8 | 0) == 34 | ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$0 = $6;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ((HEAP8[$__a >> 0] | 0) == 45) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = ___errno_location() | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
 $7 = tempRet0;
 $8 = HEAP32[$3 >> 2] | 0;
 if (!$8) HEAP32[$3 >> 2] = $4;
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($8 | 0) == 34 | ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$0 = $6;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $2 = 0, $5 = 0, $7 = 0, $9 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 __THREW__ = 0;
 $1 = invoke_iiii(41, $__s | 0, $__format | 0, $__va | 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if ($2 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  if (!$0) ___resumeException($9 | 0);
  __THREW__ = 0;
  invoke_ii(75, $0 | 0) | 0;
  $12 = __THREW__;
  __THREW__ = 0;
  if ($12 & 1) {
   $14 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($14);
  } else ___resumeException($9 | 0);
 } else {
  if (!$0) {
   STACKTOP = sp;
   return $1 | 0;
  }
  __THREW__ = 0;
  invoke_ii(75, $0 | 0) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if ($5 & 1) {
   $7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($7);
  } else {
   STACKTOP = sp;
   return $1 | 0;
  }
 }
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$01 = 0, $1 = 0, $11 = 0, $14 = 0, $2 = 0, $3 = 0, $__i$0$lcssa = 0, $__i$02 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (($__n | 0) <= 0) {
  $__i$0$lcssa = 0;
  STACKTOP = sp;
  return $__i$0$lcssa | 0;
 }
 $1 = $this + 12 | 0;
 $2 = $this + 16 | 0;
 $$01 = $__s;
 $__i$02 = 0;
 while (1) {
  $3 = HEAP32[$1 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$1 >> 2] = $3 + 1;
   $storemerge = HEAP8[$3 >> 0] | 0;
  } else {
   $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
   if (($11 | 0) == -1) {
    $__i$0$lcssa = $__i$02;
    label = 8;
    break;
   }
   $storemerge = $11 & 255;
  }
  HEAP8[$$01 >> 0] = $storemerge;
  $14 = $__i$02 + 1 | 0;
  if (($14 | 0) < ($__n | 0)) {
   $$01 = $$01 + 1 | 0;
   $__i$02 = $14;
  } else {
   $__i$0$lcssa = $14;
   label = 8;
   break;
  }
 }
 if ((label | 0) == 8) {
  STACKTOP = sp;
  return $__i$0$lcssa | 0;
 }
 return 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$01 = 0, $1 = 0, $11 = 0, $13 = 0, $2 = 0, $3 = 0, $__i$0$lcssa = 0, $__i$02 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (($__n | 0) <= 0) {
  $__i$0$lcssa = 0;
  STACKTOP = sp;
  return $__i$0$lcssa | 0;
 }
 $1 = $this + 12 | 0;
 $2 = $this + 16 | 0;
 $$01 = $__s;
 $__i$02 = 0;
 while (1) {
  $3 = HEAP32[$1 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   HEAP32[$1 >> 2] = $3 + 4;
   $storemerge = HEAP32[$3 >> 2] | 0;
  } else {
   $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
   if (($11 | 0) == -1) {
    $__i$0$lcssa = $__i$02;
    label = 7;
    break;
   } else $storemerge = $11;
  }
  HEAP32[$$01 >> 2] = $storemerge;
  $13 = $__i$02 + 1 | 0;
  if (($13 | 0) < ($__n | 0)) {
   $$01 = $$01 + 4 | 0;
   $__i$02 = $13;
  } else {
   $__i$0$lcssa = $13;
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) {
  STACKTOP = sp;
  return $__i$0$lcssa | 0;
 }
 return 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $14 = 0, $15 = 0, $24 = 0, $25 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $15 = 10;
  $7 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $15 = ($3 & -2) + -1 | 0;
  $7 = $3 & 255;
 }
 if (!($7 & 1)) $14 = ($7 & 255) >>> 1; else $14 = HEAP32[$this + 4 >> 2] | 0;
 if (($15 - $14 | 0) >>> 0 < $__n >>> 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $15, $__n - $15 + $14 | 0, $14, $14, 0, $__n, $__s);
  STACKTOP = sp;
  return $this | 0;
 }
 if (!$__n) {
  STACKTOP = sp;
  return $this | 0;
 }
 if (!($7 & 1)) $24 = $this + 1 | 0; else $24 = HEAP32[$this + 8 >> 2] | 0;
 _memcpy($24 + $14 | 0, $__s | 0, $__n | 0) | 0;
 $25 = $14 + $__n | 0;
 if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $25 << 1; else HEAP32[$this + 4 >> 2] = $25;
 HEAP8[$24 + $25 >> 0] = 0;
 STACKTOP = sp;
 return $this | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this | 0;
 var $10 = 0, $12 = 0, $13 = 0, $14 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46192] | 0) {
  $12 = HEAP32[11546] | 0;
  STACKTOP = sp;
  return $12 | 0;
 }
 if (!(___cxa_guard_acquire(46192) | 0)) {
  $12 = HEAP32[11546] | 0;
  STACKTOP = sp;
  return $12 | 0;
 }
 if (!(HEAP8[50904] | 0)) if (___cxa_guard_acquire(50904) | 0) {
  _memset(50616, 0, 288) | 0;
  ___cxa_atexit(199, 0, ___dso_handle | 0) | 0;
  ___cxa_guard_release(50904);
 }
 __THREW__ = 0;
 invoke_iii(42, 50616, 50912) | 0;
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  $14 = tempRet0;
  ___cxa_guard_abort(46192);
  ___resumeException($13 | 0);
 }
 __THREW__ = 0;
 invoke_iii(42, 50628, 50928) | 0;
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  $14 = tempRet0;
  ___cxa_guard_abort(46192);
  ___resumeException($13 | 0);
 }
 HEAP32[11546] = 50616;
 ___cxa_guard_release(46192);
 $12 = HEAP32[11546] | 0;
 STACKTOP = sp;
 return $12 | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this | 0;
 var $10 = 0, $12 = 0, $13 = 0, $14 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46176] | 0) {
  $12 = HEAP32[11542] | 0;
  STACKTOP = sp;
  return $12 | 0;
 }
 if (!(___cxa_guard_acquire(46176) | 0)) {
  $12 = HEAP32[11542] | 0;
  STACKTOP = sp;
  return $12 | 0;
 }
 if (!(HEAP8[51232] | 0)) if (___cxa_guard_acquire(51232) | 0) {
  _memset(50944, 0, 288) | 0;
  ___cxa_atexit(198, 0, ___dso_handle | 0) | 0;
  ___cxa_guard_release(51232);
 }
 __THREW__ = 0;
 invoke_iii(19, 50944, 51240) | 0;
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  $14 = tempRet0;
  ___cxa_guard_abort(46176);
  ___resumeException($13 | 0);
 }
 __THREW__ = 0;
 invoke_iii(19, 50956, 51248) | 0;
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  $14 = tempRet0;
  ___cxa_guard_abort(46176);
  ___resumeException($13 | 0);
 }
 HEAP32[11542] = 50944;
 ___cxa_guard_release(46176);
 $12 = HEAP32[11542] | 0;
 STACKTOP = sp;
 return $12 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $1 = 0, $15 = 0, $16 = 0, $21 = 0, $27 = 0, $28 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 if (!$__n) {
  STACKTOP = sp;
  return $this | 0;
 }
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $16 = 10;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $16 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $15 = ($8 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
 if (($16 - $15 | 0) >>> 0 < $__n >>> 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $16, $__n - $16 + $15 | 0, $15, $15, 0, 0);
  $21 = HEAP8[$this >> 0] | 0;
 } else $21 = $8;
 if (!($21 & 1)) $27 = $this + 1 | 0; else $27 = HEAP32[$this + 8 >> 2] | 0;
 _memset($27 + $15 | 0, $__c | 0, $__n | 0) | 0;
 $28 = $15 + $__n | 0;
 if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $28 << 1; else HEAP32[$this + 4 >> 2] = $28;
 HEAP8[$27 + $28 >> 0] = 0;
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nd + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $6 = 10;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $6 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 if ($6 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $6, $__n - $6 | 0, $27, 0, $27, $__n, $__s);
  STACKTOP = sp;
  return $this | 0;
 }
 if ($10) $14 = $this + 1 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
 _memmove($14 | 0, $__s | 0, $__n | 0) | 0;
 HEAP8[$14 + $__n >> 0] = 0;
 if (!(HEAP8[$this >> 0] & 1)) {
  HEAP8[$this >> 0] = $__n << 1;
  STACKTOP = sp;
  return $this | 0;
 } else {
  HEAP32[$this + 4 >> 2] = $__n;
  STACKTOP = sp;
  return $this | 0;
 }
 return 0;
}

function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 31]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf | 0, 1, $13 | 0, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   $$0 = -1;
   label = 5;
   break;
  }
  if (($10 | 0) == 2) {
   $$0 = -1;
   label = 5;
   break;
  } else if (($10 | 0) != 1) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) {
  $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 5) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 31]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf | 0, 1, $13 | 0, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   $$0 = -1;
   label = 5;
   break;
  }
  if (($10 | 0) == 2) {
   $$0 = -1;
   label = 5;
   break;
  } else if (($10 | 0) != 1) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) {
  $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 5) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, $id) {
 $this = $this | 0;
 $f = $f | 0;
 $id = $id | 0;
 var $0 = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = $this + 8 | 0;
 $3 = HEAP32[$0 >> 2] | 0;
 do if ((HEAP32[$this + 12 >> 2] | 0) - $3 >> 2 >>> 0 > $id >>> 0) $16 = $3; else {
  __THREW__ = 0;
  invoke_vii(107, $0 | 0, $id + 1 | 0);
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   $16 = HEAP32[$0 >> 2] | 0;
   break;
  }
  $12 = ___cxa_find_matching_catch() | 0;
  if (!$f) ___resumeException($12 | 0);
  __ZNSt3__114__shared_count16__release_sharedEv($f) | 0;
  ___resumeException($12 | 0);
 } while (0);
 $17 = HEAP32[$16 + ($id << 2) >> 2] | 0;
 if (!$17) {
  $20 = $16;
  $19 = $20 + ($id << 2) | 0;
  HEAP32[$19 >> 2] = $f;
  STACKTOP = sp;
  return;
 }
 __ZNSt3__114__shared_count16__release_sharedEv($17) | 0;
 $20 = HEAP32[$0 >> 2] | 0;
 $19 = $20 + ($id << 2) | 0;
 HEAP32[$19 >> 2] = $f;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $6 = 1;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $6 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 if ($6 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $6, $__n - $6 | 0, $27, 0, $27, $__n, $__s);
  STACKTOP = sp;
  return $this | 0;
 }
 if ($10) $14 = $this + 4 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
 _wmemmove($14, $__s, $__n) | 0;
 HEAP32[$14 + ($__n << 2) >> 2] = 0;
 if (!(HEAP8[$this >> 0] & 1)) {
  HEAP8[$this >> 0] = $__n << 1;
  STACKTOP = sp;
  return $this | 0;
 } else {
  HEAP32[$this + 4 >> 2] = $__n;
  STACKTOP = sp;
  return $this | 0;
 }
 return 0;
}

function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $13 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $13 = 0;
  $14 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  if (($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $13 = -1;
   $14 = -1;
  } else {
   $13 = tempRet0;
   $14 = $6;
  }
 } while (0);
 tempRet0 = $13;
 STACKTOP = sp;
 return $14 | 0;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($this, $__pos1, $__n1, $__s, $__n2) {
 $this = $this | 0;
 $__pos1 = $__pos1 | 0;
 $__n1 = $__n1 | 0;
 $__s = $__s | 0;
 $__n2 = $__n2 | 0;
 var $0 = 0, $10 = 0, $12 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $7 = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$this + 4 >> 2] | 0;
 if ($7 >>> 0 < $__pos1 >>> 0 | ($__n2 | 0) == -1) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 $10 = $7 - $__pos1 | 0;
 $12 = $10 >>> 0 < $__n1 >>> 0 ? $10 : $__n1;
 if ($2) $17 = $this + 1 | 0; else $17 = HEAP32[$this + 8 >> 2] | 0;
 $18 = $12 >>> 0 > $__n2 >>> 0;
 $20 = _memcmp($17 + $__pos1 | 0, $__s, $18 ? $__n2 : $12) | 0;
 if ($20) {
  $__r$0 = $20;
  STACKTOP = sp;
  return $__r$0 | 0;
 }
 if ($12 >>> 0 < $__n2 >>> 0) {
  $__r$0 = -1;
  STACKTOP = sp;
  return $__r$0 | 0;
 } else {
  STACKTOP = sp;
  return $18 & 1 | 0;
 }
 return 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$02 = 0, $1 = 0, $15 = 0, $2 = 0, $3 = 0, $6 = 0, $__i$0$lcssa = 0, $__i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (($__n | 0) <= 0) {
  $__i$0$lcssa = 0;
  STACKTOP = sp;
  return $__i$0$lcssa | 0;
 }
 $1 = $this + 24 | 0;
 $2 = $this + 28 | 0;
 $$02 = $__s;
 $__i$01 = 0;
 while (1) {
  $3 = HEAP32[$1 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   $6 = HEAP32[$$02 >> 2] | 0;
   HEAP32[$1 >> 2] = $3 + 4;
   HEAP32[$3 >> 2] = $6;
  } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$$02 >> 2] | 0) | 0) == -1) {
   $__i$0$lcssa = $__i$01;
   label = 7;
   break;
  }
  $15 = $__i$01 + 1 | 0;
  if (($15 | 0) < ($__n | 0)) {
   $$02 = $$02 + 4 | 0;
   $__i$01 = $15;
  } else {
   $__i$0$lcssa = $15;
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) {
  STACKTOP = sp;
  return $__i$0$lcssa | 0;
 }
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$02 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $6 = 0, $__i$0$lcssa = 0, $__i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (($__n | 0) <= 0) {
  $__i$0$lcssa = 0;
  STACKTOP = sp;
  return $__i$0$lcssa | 0;
 }
 $1 = $this + 24 | 0;
 $2 = $this + 28 | 0;
 $$02 = $__s;
 $__i$01 = 0;
 while (1) {
  $3 = HEAP32[$1 >> 2] | 0;
  if ($3 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
   $6 = HEAP8[$$02 >> 0] | 0;
   HEAP32[$1 >> 2] = $3 + 1;
   HEAP8[$3 >> 0] = $6;
  } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$$02 >> 0] | 0) | 0) == -1) {
   $__i$0$lcssa = $__i$01;
   label = 7;
   break;
  }
  $16 = $__i$01 + 1 | 0;
  if (($16 | 0) < ($__n | 0)) {
   $$02 = $$02 + 1 | 0;
   $__i$01 = $16;
  } else {
   $__i$0$lcssa = $16;
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) {
  STACKTOP = sp;
  return $__i$0$lcssa | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nd + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function _wcrtomb($s, $wc, $st) {
 $s = $s | 0;
 $wc = $wc | 0;
 $st = $st | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 if (!$s) {
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 128) {
  HEAP8[$s >> 0] = $wc;
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 2048) {
  HEAP8[$s >> 0] = $wc >>> 6 | 192;
  HEAP8[$s + 1 >> 0] = $wc & 63 | 128;
  $$0 = 2;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if ($wc >>> 0 < 55296 | ($wc & -8192 | 0) == 57344) {
  HEAP8[$s >> 0] = $wc >>> 12 | 224;
  HEAP8[$s + 1 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc & 63 | 128;
  $$0 = 3;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($wc + -65536 | 0) >>> 0 < 1048576) {
  HEAP8[$s >> 0] = $wc >>> 18 | 240;
  HEAP8[$s + 1 >> 0] = $wc >>> 12 & 63 | 128;
  HEAP8[$s + 2 >> 0] = $wc >>> 6 & 63 | 128;
  HEAP8[$s + 3 >> 0] = $wc & 63 | 128;
  $$0 = 4;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$015 = 0, $$02$lcssa = 0, $$024 = 0, $2 = 0, $3 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1 : do if (($__lo2 | 0) == ($__hi2 | 0)) {
  $$02$lcssa = $__lo1;
  label = 6;
 } else {
  $$015 = $__lo2;
  $$024 = $__lo1;
  while (1) {
   if (($$024 | 0) == ($__hi1 | 0)) {
    $$0 = -1;
    break L1;
   }
   $2 = HEAP8[$$024 >> 0] | 0;
   $3 = HEAP8[$$015 >> 0] | 0;
   if ($2 << 24 >> 24 < $3 << 24 >> 24) {
    $$0 = -1;
    break L1;
   }
   if ($3 << 24 >> 24 < $2 << 24 >> 24) {
    $$0 = 1;
    break L1;
   }
   $6 = $$024 + 1 | 0;
   $$015 = $$015 + 1 | 0;
   if (($$015 | 0) == ($__hi2 | 0)) {
    $$02$lcssa = $6;
    label = 6;
    break;
   } else $$024 = $6;
  }
 } while (0);
 if ((label | 0) == 6) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) >= 288) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) >= 288) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$015 = 0, $$02$lcssa = 0, $$024 = 0, $2 = 0, $3 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1 : do if (($__lo2 | 0) == ($__hi2 | 0)) {
  $$02$lcssa = $__lo1;
  label = 6;
 } else {
  $$015 = $__lo2;
  $$024 = $__lo1;
  while (1) {
   if (($$024 | 0) == ($__hi1 | 0)) {
    $$0 = -1;
    break L1;
   }
   $2 = HEAP32[$$024 >> 2] | 0;
   $3 = HEAP32[$$015 >> 2] | 0;
   if (($2 | 0) < ($3 | 0)) {
    $$0 = -1;
    break L1;
   }
   if (($3 | 0) < ($2 | 0)) {
    $$0 = 1;
    break L1;
   }
   $6 = $$024 + 4 | 0;
   $$015 = $$015 + 4 | 0;
   if (($$015 | 0) == ($__hi2 | 0)) {
    $$02$lcssa = $6;
    label = 6;
    break;
   } else $$024 = $6;
  }
 } while (0);
 if ((label | 0) == 6) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) >= 168) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) >= 168) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function _scalbn($x, $n) {
 $x = +$x;
 $n = $n | 0;
 var $$0 = 0, $1 = 0.0, $12 = 0, $15 = 0, $16 = 0, $18 = 0.0, $2 = 0, $5 = 0, $8 = 0.0, $9 = 0, $y$0 = 0.0, sp = 0;
 sp = STACKTOP;
 if (($n | 0) > 1023) {
  $1 = $x * 8988465674311579538646525.0e283;
  $2 = $n + -1023 | 0;
  if (($2 | 0) > 1023) {
   $5 = $n + -2046 | 0;
   $$0 = ($5 | 0) > 1023 ? 1023 : $5;
   $y$0 = $1 * 8988465674311579538646525.0e283;
  } else {
   $$0 = $2;
   $y$0 = $1;
  }
 } else if (($n | 0) < -1022) {
  $8 = $x * 2.2250738585072014e-308;
  $9 = $n + 1022 | 0;
  if (($9 | 0) < -1022) {
   $12 = $n + 2044 | 0;
   $$0 = ($12 | 0) < -1022 ? -1022 : $12;
   $y$0 = $8 * 2.2250738585072014e-308;
  } else {
   $$0 = $9;
   $y$0 = $8;
  }
 } else {
  $$0 = $n;
  $y$0 = $x;
 }
 $15 = _bitshift64Shl($$0 + 1023 | 0, 0, 52) | 0;
 $16 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = $15;
 HEAP32[tempDoublePtr + 4 >> 2] = $16;
 $18 = $y$0 * +HEAPF64[tempDoublePtr >> 3];
 STACKTOP = sp;
 return +$18;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi2Z2D = 0, $$pre$phiZ2D = 0, $14 = 0, $15 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 do if (!(HEAP32[$this + 64 >> 2] | 0)) $$0 = -1; else {
  $5 = $this + 12 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if ((HEAP32[$this + 8 >> 2] | 0) >>> 0 < $6 >>> 0) {
   if (($__c | 0) == -1) {
    HEAP32[$5 >> 2] = $6 + -1;
    $$0 = 0;
    break;
   }
   if (!(HEAP32[$this + 88 >> 2] & 16)) {
    $14 = $__c & 255;
    $15 = $6 + -1 | 0;
    if ($14 << 24 >> 24 == (HEAP8[$15 >> 0] | 0)) {
     $$pre$phi2Z2D = $14;
     $$pre$phiZ2D = $15;
    } else {
     $$0 = -1;
     break;
    }
   } else {
    $$pre$phi2Z2D = $__c & 255;
    $$pre$phiZ2D = $6 + -1 | 0;
   }
   HEAP32[$5 >> 2] = $$pre$phiZ2D;
   HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi2Z2D;
   $$0 = $__c;
  } else $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $3 = $__v + 4 | 0;
 $6 = (HEAP32[$1 >> 2] | 0) - $0 | 0;
 $10 = (HEAP32[$3 >> 2] | 0) + (0 - ($6 >> 2) << 2) | 0;
 HEAP32[$3 >> 2] = $10;
 _memcpy($10 | 0, $0 | 0, $6 | 0) | 0;
 $11 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $11;
 $13 = $__v + 8 | 0;
 $14 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$13 >> 2] = $14;
 $16 = $this + 8 | 0;
 $17 = $__v + 12 | 0;
 $18 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$17 >> 2] = $18;
 HEAP32[$__v >> 2] = HEAP32[$3 >> 2];
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 44856, 44888 | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result, $this, $__b, $__e, $__iob, $__err, $__tm) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 44704, 44712 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $14 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 42208;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 45872) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($14 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  HEAP32[$this + 36 >> 2] = $3;
  HEAP32[$this + 40 >> 2] = $__st;
  HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $14 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 42464;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 45864) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($14 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  HEAP32[$this + 36 >> 2] = $3;
  HEAP32[$this + 40 >> 2] = $__st;
  HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
  STACKTOP = sp;
  return;
 }
}

function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 ___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, $rem) | 0;
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
 $10$1 = tempRet0;
 STACKTOP = __stackBase__;
 return (tempRet0 = $10$1, $10$0) | 0;
}

function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $12 = 0, $18 = 0, $2 = 0, $3 = 0, $6 = 0, $7 = 0, $i$01 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 45720;
 $0 = $this + 8 | 0;
 $1 = $this + 12 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = HEAP32[$0 >> 2] | 0;
 if (($2 | 0) != ($3 | 0)) {
  $18 = $2;
  $6 = $3;
  $i$01 = 0;
  while (1) {
   $7 = HEAP32[$6 + ($i$01 << 2) >> 2] | 0;
   if (!$7) {
    $10 = $18;
    $12 = $6;
   } else {
    __ZNSt3__114__shared_count16__release_sharedEv($7) | 0;
    $10 = HEAP32[$1 >> 2] | 0;
    $12 = HEAP32[$0 >> 2] | 0;
   }
   $i$01 = $i$01 + 1 | 0;
   if ($i$01 >>> 0 >= $10 - $12 >> 2 >>> 0) break; else {
    $18 = $10;
    $6 = $12;
   }
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 144 | 0);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function _frexp($x, $e) {
 $x = +$x;
 $e = $e | 0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $2 = 0, $4 = 0, $7 = 0.0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $2 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $4 = $2 & 2047;
 if (($4 | 0) == 2047) {
  $$0 = $x;
  STACKTOP = sp;
  return +$$0;
 } else if (!$4) {
  if ($x != 0.0) {
   $7 = +_frexp($x * 18446744073709551616.0, $e);
   $$01 = $7;
   $storemerge = (HEAP32[$e >> 2] | 0) + -64 | 0;
  } else {
   $$01 = $x;
   $storemerge = 0;
  }
  HEAP32[$e >> 2] = $storemerge;
  $$0 = $$01;
  STACKTOP = sp;
  return +$$0;
 } else {
  HEAP32[$e >> 2] = $4 + -1022;
  HEAP32[tempDoublePtr >> 2] = $0;
  HEAP32[tempDoublePtr + 4 >> 2] = $1 & -2146435073 | 1071644672;
  $$0 = +HEAPF64[tempDoublePtr >> 3];
  STACKTOP = sp;
  return +$$0;
 }
 return +(0.0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result, $this, $__b, $__e, $__iob, $__err, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$$byval_copy1 + 0 >> 2] = HEAP32[$1 + 0 >> 2];
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result, $this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v);
 STACKTOP = sp;
 return;
}

function __ZN15BuiltinFunctionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $20 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34112;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 if ($1) {
  $3 = $this + 56 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 34168;
 $11 = HEAP32[$this + 36 >> 2] | 0;
 if (!$11) {
  $20 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $13 = $this + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
 __ZdlPv($11);
 $20 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __Z23jsonnet_static_analysisP3AST($ast) {
 $ast = $ast | 0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 $2 = $1 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 >> 2] = $1 + 4;
 __THREW__ = 0;
 invoke_viiii(16, $0 | 0, $ast | 0, 0, $1 | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($1, HEAP32[$2 >> 2] | 0);
  ___resumeException($10 | 0);
 } else {
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($0, HEAP32[$0 + 4 >> 2] | 0);
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($1, HEAP32[$2 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (HEAP32[$__err >> 2] & 4) {
  STACKTOP = sp;
  return;
 }
 if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
 HEAP32[$__y >> 2] = $__t$0 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (HEAP32[$__err >> 2] & 4) {
  STACKTOP = sp;
  return;
 }
 if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
 HEAP32[$__y >> 2] = $__t$0 + -1900;
 STACKTOP = sp;
 return;
}

function __ZN8FunctionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $20 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36808;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if ($1) {
  $3 = $this + 52 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 34168;
 $11 = HEAP32[$this + 36 >> 2] | 0;
 if (!$11) {
  $20 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $13 = $this + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
 __ZdlPv($11);
 $20 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($this, $__c, $__pos) {
 $this = $this | 0;
 $__c = $__c | 0;
 $__pos = $__pos | 0;
 var $$01$i = 0, $0 = 0, $10 = 0, $15 = 0, $__ps$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $10 = ($0 & 255) >>> 1;
  $15 = $this + 1 | 0;
 } else {
  $10 = HEAP32[$this + 4 >> 2] | 0;
  $15 = HEAP32[$this + 8 >> 2] | 0;
 }
 if (!$10) {
  $$01$i = -1;
  STACKTOP = sp;
  return $$01$i | 0;
 }
 $__ps$0$i = $15 + ($10 >>> 0 > $__pos >>> 0 ? $__pos + 1 | 0 : $10) | 0;
 do {
  if (($__ps$0$i | 0) == ($15 | 0)) {
   $$01$i = -1;
   label = 9;
   break;
  }
  $__ps$0$i = $__ps$0$i + -1 | 0;
 } while ((HEAP8[$__ps$0$i >> 0] | 0) != $__c << 24 >> 24);
 if ((label | 0) == 9) {
  STACKTOP = sp;
  return $$01$i | 0;
 }
 $$01$i = $__ps$0$i - $15 | 0;
 STACKTOP = sp;
 return $$01$i | 0;
}

function __ZN5ArrayD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $20 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36744;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if ($1) {
  $3 = $this + 52 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 34168;
 $11 = HEAP32[$this + 36 >> 2] | 0;
 if (!$11) {
  $20 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $13 = $this + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
 __ZdlPv($11);
 $20 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN5ApplyD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $20 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36424;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 if ($1) {
  $3 = $this + 56 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 34168;
 $11 = HEAP32[$this + 36 >> 2] | 0;
 if (!$11) {
  $20 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $13 = $this + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
 __ZdlPv($11);
 $20 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE($obj) {
 $obj = $obj | 0;
 var $1 = 0, $10 = 0, $5 = 0, $9 = 0, $obj$tr3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (!$obj) {
  STACKTOP = sp;
  return 1;
 } else $obj$tr3 = $obj;
 while (1) {
  $1 = ___dynamic_cast($obj$tr3, 37456, 37792, 0) | 0;
  if ($1) {
   label = 3;
   break;
  }
  $10 = ___dynamic_cast($obj$tr3, 37456, 37848, 0) | 0;
  if (!$10) {
   label = 6;
   break;
  }
  $obj$tr3 = HEAP32[$10 + 8 >> 2] | 0;
  if (!$obj$tr3) {
   label = 6;
   break;
  }
 }
 if ((label | 0) == 3) {
  $5 = __ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE(HEAP32[$1 + 8 >> 2] | 0) | 0;
  $9 = (__ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE(HEAP32[$1 + 12 >> 2] | 0) | 0) + $5 | 0;
  STACKTOP = sp;
  return $9 | 0;
 } else if ((label | 0) == 6) {
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) > 0 & ($2 | 0) < 13) {
  HEAP32[$__h >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) > 0 & ($2 | 0) < 13) {
  HEAP32[$__h >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) > 0 & ($2 | 0) < 32) {
  HEAP32[$__d >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) > 0 & ($2 | 0) < 32) {
  HEAP32[$__d >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 366) {
  HEAP32[$__d >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 366) {
  HEAP32[$__d >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$012 = 0, $13 = 0, $__i$03 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[$this + 44 >> 0] | 0) {
  $$0 = _fwrite($__s | 0, 4, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($__n | 0) > 0) {
  $$012 = $__s;
  $__i$03 = 0;
 } else {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 while (1) {
  if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$$012 >> 2] | 0) | 0) == -1) {
   $$0 = $__i$03;
   label = 6;
   break;
  }
  $13 = $__i$03 + 1 | 0;
  if (($13 | 0) < ($__n | 0)) {
   $$012 = $$012 + 4 | 0;
   $__i$03 = $13;
  } else {
   $$0 = $13;
   label = 6;
   break;
  }
 }
 if ((label | 0) == 6) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$012 = 0, $14 = 0, $__i$03 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[$this + 44 >> 0] | 0) {
  $$0 = _fwrite($__s | 0, 1, $__n | 0, HEAP32[$this + 32 >> 2] | 0) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($__n | 0) > 0) {
  $$012 = $__s;
  $__i$03 = 0;
 } else {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 while (1) {
  if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$$012 >> 0] | 0) | 0) == -1) {
   $$0 = $__i$03;
   label = 6;
   break;
  }
  $14 = $__i$03 + 1 | 0;
  if (($14 | 0) < ($__n | 0)) {
   $$012 = $$012 + 1 | 0;
   $__i$03 = $14;
  } else {
   $$0 = $14;
   label = 6;
   break;
  }
 }
 if ((label | 0) == 6) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 13) {
  HEAP32[$__m >> 2] = $2 + -1;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 13) {
  HEAP32[$__m >> 2] = $2 + -1;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZN15BuiltinFunctionD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $20 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34112;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 if ($1) {
  $3 = $this + 56 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 34168;
 $11 = HEAP32[$this + 36 >> 2] | 0;
 if (!$11) {
  $20 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
  STACKTOP = sp;
  return;
 }
 $13 = $this + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
 __ZdlPv($11);
 $20 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 7) {
  HEAP32[$__w >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 61) {
  HEAP32[$__s >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 60) {
  HEAP32[$__m >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 7) {
  HEAP32[$__w >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 61) {
  HEAP32[$__s >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 60) {
  HEAP32[$__m >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 24) {
  HEAP32[$__h >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($3 & 4 | 0) == 0 & ($2 | 0) < 24) {
  HEAP32[$__h >> 2] = $2;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$__err >> 2] = $3 | 4;
  STACKTOP = sp;
  return;
 }
}

function __ZN5LocalD0Ev($this) {
 $this = $this | 0;
 var $13 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34232;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this + 48 | 0, HEAP32[$this + 52 >> 2] | 0);
 HEAP32[$this >> 2] = 34168;
 $4 = HEAP32[$this + 36 >> 2] | 0;
 if (!$4) {
  $13 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $6 = $this + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 $13 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN8FunctionD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $20 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36808;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if ($1) {
  $3 = $this + 52 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 34168;
 $11 = HEAP32[$this + 36 >> 2] | 0;
 if (!$11) {
  $20 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
  STACKTOP = sp;
  return;
 }
 $13 = $this + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
 __ZdlPv($11);
 $20 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
 STACKTOP = sp;
 return;
}

function __ZN5ArrayD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $20 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36744;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if ($1) {
  $3 = $this + 52 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 34168;
 $11 = HEAP32[$this + 36 >> 2] | 0;
 if (!$11) {
  $20 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
  STACKTOP = sp;
  return;
 }
 $13 = $this + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
 __ZdlPv($11);
 $20 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
 STACKTOP = sp;
 return;
}

function __ZN5ApplyD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $20 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36424;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 if ($1) {
  $3 = $this + 56 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 34168;
 $11 = HEAP32[$this + 36 >> 2] | 0;
 if (!$11) {
  $20 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
  STACKTOP = sp;
  return;
 }
 $13 = $this + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) != ($11 | 0)) HEAP32[$13 >> 2] = $14 + (~(($14 + -4 - $11 | 0) >>> 2) << 2);
 __ZdlPv($11);
 $20 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($20);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function __ZSt11__terminatePFvvE($func) {
 $func = $func | 0;
 var $0 = 0, $10 = 0, $12 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp;
 __THREW__ = 0;
 invoke_v($func | 0);
 $0 = __THREW__;
 __THREW__ = 0;
 if (!($0 & 1)) {
  __THREW__ = 0;
  invoke_vii(109, 54120, $vararg_buffer1 | 0);
  $2 = __THREW__;
  __THREW__ = 0;
  if (!($2 & 1)) {}
 }
 $4 = ___cxa_find_matching_catch(0) | 0;
 ___cxa_begin_catch($4 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(109, 54160, $vararg_buffer1 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if (!($6 & 1)) {}
 $8 = ___cxa_find_matching_catch(0) | 0;
 __THREW__ = 0;
 invoke_v(2);
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $12 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($12);
 } else ___clang_call_terminate($8);
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $0 = 0, $1 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $info + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$0 >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
  STACKTOP = sp;
  return;
 }
 if (($1 | 0) != ($adjustedPtr | 0)) {
  $9 = $info + 36 | 0;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
  HEAP32[$info + 24 >> 2] = 2;
  HEAP8[$info + 54 >> 0] = 1;
  STACKTOP = sp;
  return;
 }
 $6 = $info + 24 | 0;
 if ((HEAP32[$6 >> 2] | 0) != 2) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$6 >> 2] = $path_below;
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 42320;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 invoke_vii(4, $this | 0, $0 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $8 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($8 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 42576;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 __THREW__ = 0;
 invoke_vii(6, $this | 0, $0 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $8 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($8 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__18ios_base5clearEj($this, $state) {
 $this = $this | 0;
 $state = $state | 0;
 var $0 = 0, $13 = 0, $14 = 0, $18 = 0, $20 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $3 = (HEAP32[$this + 24 >> 2] | 0) == 0;
 if ($3) HEAP32[$this + 16 >> 2] = $state | 1; else HEAP32[$this + 16 >> 2] = $state;
 if (!(($3 & 1 | $state) & HEAP32[$this + 20 >> 2])) {
  STACKTOP = sp;
  return;
 }
 $13 = ___cxa_allocate_exception(16) | 0;
 __ZNSt3__117iostream_categoryEv() | 0;
 $14 = $0;
 HEAP32[$14 >> 2] = 1;
 HEAP32[$14 + 4 >> 2] = 43296;
 __THREW__ = 0;
 invoke_viii(16, $13 | 0, 43352, $0 | 0);
 $18 = __THREW__;
 __THREW__ = 0;
 if ($18 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($13 | 0);
  ___resumeException($20 | 0);
 } else ___cxa_throw($13 | 0, 43400, 97);
}

function __ZN5LocalD2Ev($this) {
 $this = $this | 0;
 var $13 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34232;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this + 48 | 0, HEAP32[$this + 52 >> 2] | 0);
 HEAP32[$this >> 2] = 34168;
 $4 = HEAP32[$this + 36 >> 2] | 0;
 if (!$4) {
  $13 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
  STACKTOP = sp;
  return;
 }
 $6 = $this + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) != ($4 | 0)) HEAP32[$6 >> 2] = $7 + (~(($7 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 $13 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($13);
 STACKTOP = sp;
 return;
}

function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $12 = 0, $15 = 0, $20 = 0, $8 = 0, $9 = 0, $mem$0 = 0, sp = 0;
 sp = STACKTOP;
 do if (!$oldmem) $mem$0 = _malloc($bytes) | 0; else {
  if ($bytes >>> 0 > 4294967231) {
   HEAP32[(___errno_location() | 0) >> 2] = 12;
   $mem$0 = 0;
   break;
  }
  if ($bytes >>> 0 < 11) $8 = 16; else $8 = $bytes + 11 & -8;
  $9 = _try_realloc_chunk($oldmem + -8 | 0, $8) | 0;
  if ($9) {
   $mem$0 = $9 + 8 | 0;
   break;
  }
  $12 = _malloc($bytes) | 0;
  if (!$12) $mem$0 = 0; else {
   $15 = HEAP32[$oldmem + -4 >> 2] | 0;
   $20 = ($15 & -8) - (($15 & 3 | 0) == 0 ? 8 : 4) | 0;
   _memcpy($12 | 0, $oldmem | 0, ($20 >>> 0 < $bytes >>> 0 ? $20 : $bytes) | 0) | 0;
   _free($oldmem);
   $mem$0 = $12;
  }
 } while (0);
 STACKTOP = sp;
 return $mem$0 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = $frm + ((HEAP32[$_frm_nxt >> 2] | 0) - $frm >> 1 << 1);
 HEAP32[$to_nxt >> 2] = $to + ((HEAP32[$_to_nxt >> 2] | 0) - $to);
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = $frm + ((HEAP32[$_frm_nxt >> 2] | 0) - $frm);
 HEAP32[$to_nxt >> 2] = $to + ((HEAP32[$_to_nxt >> 2] | 0) - $to >> 1 << 1);
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = $frm + ((HEAP32[$_frm_nxt >> 2] | 0) - $frm >> 2 << 2);
 HEAP32[$to_nxt >> 2] = $to + ((HEAP32[$_to_nxt >> 2] | 0) - $to);
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = $frm + ((HEAP32[$_frm_nxt >> 2] | 0) - $frm);
 HEAP32[$to_nxt >> 2] = $to + ((HEAP32[$_to_nxt >> 2] | 0) - $to >> 2 << 2);
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function _strtold_l($s, $p, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $loc = $loc | 0;
 var $0 = 0, $1 = 0, $12 = 0, $16 = 0, $4 = 0.0, $f$i$i = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i$i = sp;
 dest = $f$i$i + 0 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $0 = $f$i$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 $1 = $f$i$i + 8 | 0;
 HEAP32[$1 >> 2] = -1;
 HEAP32[$f$i$i + 44 >> 2] = $s;
 HEAP32[$f$i$i + 76 >> 2] = -1;
 ___shlim($f$i$i, 0);
 $4 = +___floatscan($f$i$i, 2, 1);
 $12 = (HEAP32[$0 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) + (HEAP32[$f$i$i + 108 >> 2] | 0) | 0;
 if (!$p) {
  STACKTOP = sp;
  return +$4;
 }
 if (!$12) $16 = $s; else $16 = $s + $12 | 0;
 HEAP32[$p >> 2] = $16;
 STACKTOP = sp;
 return +$4;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 31]($8, $info, $dst_ptr, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $4 = 0, sp = 0;
 sp = STACKTOP;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below);
  STACKTOP = sp;
  return;
 } else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 31]($4, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp | 0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $10 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__vp + 4 | 0;
 $$field = HEAPU8[$0 >> 0] | HEAPU8[$0 + 1 >> 0] << 8 | HEAPU8[$0 + 2 >> 0] << 16 | HEAPU8[$0 + 3 >> 0] << 24;
 $$index1 = $0 + 4 | 0;
 $$field2 = HEAPU8[$$index1 >> 0] | HEAPU8[$$index1 + 1 >> 0] << 8 | HEAPU8[$$index1 + 2 >> 0] << 16 | HEAPU8[$$index1 + 3 >> 0] << 24;
 $3 = (HEAP32[$__vp >> 2] | 0) + ($$field2 >> 1) | 0;
 if (!($$field2 & 1)) {
  $10 = $$field;
  FUNCTION_TABLE_vi[$10 & 255]($3);
  STACKTOP = sp;
  return;
 } else {
  $10 = HEAP32[(HEAP32[$3 >> 2] | 0) + $$field >> 2] | 0;
  FUNCTION_TABLE_vi[$10 & 255]($3);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $12 = $3;
 } else $12 = $1;
 if (!(HEAP32[$this + 48 >> 2] & 8)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $9 = $this + 16 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $14 = HEAP32[$this + 12 >> 2] | 0;
 if ($10 >>> 0 < $12 >>> 0) {
  HEAP32[$9 >> 2] = $12;
  $16 = $12;
 } else $16 = $10;
 if ($14 >>> 0 >= $16 >>> 0) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$0 = HEAPU8[$14 >> 0] | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
  STACKTOP = sp;
  return +$$0;
 }
 $1 = ___errno_location() | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = 0;
 $4 = +_strtold_l($__a, $__p2, __ZNSt3__16__clocEv() | 0);
 $5 = HEAP32[$1 >> 2] | 0;
 if (!$5) HEAP32[$1 >> 2] = $2;
 if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
  STACKTOP = sp;
  return +$$0;
 }
 if (($5 | 0) == 34) HEAP32[$__err >> 2] = 4;
 $$0 = $4;
 STACKTOP = sp;
 return +$$0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (HEAP32[$__err >> 2] & 4) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (HEAP32[$__err >> 2] & 4) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($this, $__str, $__pos, $__n, $__a) {
 $this = $this | 0;
 $__str = $__str | 0;
 $__pos = $__pos | 0;
 $__n = $__n | 0;
 $__a = $__a | 0;
 var $0 = 0, $13 = 0, $14 = 0, $2 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$__str + 4 >> 2] | 0;
 if ($7 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 if ($2) $13 = $__str + 1 | 0; else $13 = HEAP32[$__str + 8 >> 2] | 0;
 $14 = $7 - $__pos | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, $13 + $__pos | 0, $14 >>> 0 < $__n >>> 0 ? $14 : $__n);
 STACKTOP = sp;
 return;
}

function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0, $10$0 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 $10$0 = _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, 0) | 0) ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
 return $10$0 | 0;
}

function _strtod($s, $p) {
 $s = $s | 0;
 $p = $p | 0;
 var $0 = 0, $1 = 0, $12 = 0, $16 = 0, $4 = 0.0, $f$i = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 dest = $f$i + 0 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 $1 = $f$i + 8 | 0;
 HEAP32[$1 >> 2] = -1;
 HEAP32[$f$i + 44 >> 2] = $s;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $4 = +___floatscan($f$i, 1, 1);
 $12 = (HEAP32[$0 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) | 0;
 if (!$p) {
  STACKTOP = sp;
  return +$4;
 }
 if (!$12) $16 = $s; else $16 = $s + $12 | 0;
 HEAP32[$p >> 2] = $16;
 STACKTOP = sp;
 return +$4;
}

function ___toread($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $15 = 0, $2 = 0, $21 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = $f + 20 | 0;
 $8 = $f + 44 | 0;
 if ((HEAP32[$6 >> 2] | 0) >>> 0 > (HEAP32[$8 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
 HEAP32[$f + 16 >> 2] = 0;
 HEAP32[$f + 28 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 $15 = HEAP32[$f >> 2] | 0;
 if (!($15 & 20)) {
  $21 = HEAP32[$8 >> 2] | 0;
  HEAP32[$f + 8 >> 2] = $21;
  HEAP32[$f + 4 >> 2] = $21;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!($15 & 4)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$f >> 2] = $15 | 32;
 $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this, $low, $high, $vec) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $vec = $vec | 0;
 var $$01$lcssa = 0, $$012 = 0, $$03 = 0, $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if (($low | 0) == ($high | 0)) {
  $$01$lcssa = $low;
  STACKTOP = sp;
  return $$01$lcssa | 0;
 }
 $4 = (($high + -4 - $low | 0) >>> 2) + 1 | 0;
 $$012 = $low;
 $$03 = $vec;
 while (1) {
  $5 = HEAP32[$$012 >> 2] | 0;
  if ($5 >>> 0 < 128) $9 = HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($5 << 1) >> 1] | 0; else $9 = 0;
  HEAP16[$$03 >> 1] = $9;
  $$012 = $$012 + 4 | 0;
  if (($$012 | 0) == ($high | 0)) break; else $$03 = $$03 + 2 | 0;
 }
 $$01$lcssa = $low + ($4 << 2) | 0;
 STACKTOP = sp;
 return $$01$lcssa | 0;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this, $__cap, $__start, $__a) {
 $this = $this | 0;
 $__cap = $__cap | 0;
 $__start = $__start | 0;
 $__a = $__a | 0;
 var $0 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 12 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = $__a;
 do if (!$__cap) $8 = 0; else {
  $3 = $__a + 112 | 0;
  if ((HEAP8[$3 >> 0] | 0) == 0 & $__cap >>> 0 < 29) {
   HEAP8[$3 >> 0] = 1;
   $8 = $__a;
   break;
  } else {
   $8 = __Znwj($__cap << 2) | 0;
   break;
  }
 } while (0);
 HEAP32[$this >> 2] = $8;
 $9 = $8 + ($__start << 2) | 0;
 HEAP32[$this + 8 >> 2] = $9;
 HEAP32[$this + 4 >> 2] = $9;
 HEAP32[$0 >> 2] = $8 + ($__cap << 2);
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 7]($8, $info, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb, $__ne, $__iob) {
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__iob = $__iob | 0;
 var $$0 = 0, $11 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$__iob + 4 >> 2] & 176;
 do if (($2 | 0) == 16) {
  $3 = HEAP8[$__nb >> 0] | 0;
  if ($3 << 24 >> 24 == 43 | $3 << 24 >> 24 == 45) {
   $$0 = $__nb + 1 | 0;
   break;
  }
  if (($__ne - $__nb | 0) > 1 & $3 << 24 >> 24 == 48) {
   $11 = HEAP8[$__nb + 1 >> 0] | 0;
   if ($11 << 24 >> 24 == 88 | $11 << 24 >> 24 == 120) $$0 = $__nb + 2 | 0; else label = 7;
  } else label = 7;
 } else if (($2 | 0) == 32) $$0 = $__ne; else label = 7; while (0);
 if ((label | 0) == 7) $$0 = $__nb;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12RuntimeErrorD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 12 | 0);
 $1 = HEAP32[$this >> 2] | 0;
 if (!$1) {
  STACKTOP = sp;
  return;
 }
 $3 = $this + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) == ($1 | 0)) $11 = $1; else {
  $7 = $4;
  do {
   $6 = $7 + -40 | 0;
   HEAP32[$3 >> 2] = $6;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($7 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($6);
   $7 = HEAP32[$3 >> 2] | 0;
  } while (($7 | 0) != ($1 | 0));
  $11 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($11);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function __ZN13LiteralStringD0Ev($this) {
 $this = $this | 0;
 var $11 = 0, $2 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34184;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 34168;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $11 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $4 = $this + 40 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $11 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN9ImportstrD0Ev($this) {
 $this = $this | 0;
 var $11 = 0, $2 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36680;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 34168;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $11 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $4 = $this + 40 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $11 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($this, $__s, $__sz, $__reserve) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 $__reserve = $__reserve | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0, sp = 0;
 sp = STACKTOP;
 if ($__reserve >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__reserve >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__reserve + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) {
  $11 = 1;
  STACKTOP = sp;
  return $11 | 0;
 }
 __THREW__ = 0;
 $3 = invoke_ii(75, $1 | 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $12 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($12);
 }
 if (!$3) {
  $11 = 4;
  STACKTOP = sp;
  return $11 | 0;
 }
 __THREW__ = 0;
 invoke_ii(75, $3 | 0) | 0;
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $9 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($9);
 } else {
  $11 = 4;
  STACKTOP = sp;
  return $11 | 0;
 }
 return 0;
}

function __ZN6ImportD0Ev($this) {
 $this = $this | 0;
 var $11 = 0, $2 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36696;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 34168;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $11 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $4 = $this + 40 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $11 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $0 = 0, $2 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $7 = ($0 & 255) >>> 1; else $7 = HEAP32[$this + 4 >> 2] | 0;
 if ($7 >>> 0 < $__n >>> 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n - $7 | 0, $__c) | 0;
  STACKTOP = sp;
  return;
 }
 if ($2) {
  HEAP8[$this + $__n + 1 >> 0] = 0;
  HEAP8[$this >> 0] = $__n << 1;
  STACKTOP = sp;
  return;
 } else {
  HEAP8[(HEAP32[$this + 8 >> 2] | 0) + $__n >> 0] = 0;
  HEAP32[$this + 4 >> 2] = $__n;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP8[$this + 128 >> 0] = 0;
 if (!$__n) {
  STACKTOP = sp;
  return;
 }
 __THREW__ = 0;
 invoke_vii(108, $this | 0, $__n | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $6 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
  ___resumeException($6 | 0);
 }
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
 STACKTOP = sp;
 return;
}

function _vasprintf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $2 = 0, $5 = 0, $9 = 0, $ap2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap2 = sp;
 $0 = _malloc(240) | 0;
 do if (!$0) $$0 = -1; else {
  HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
  $2 = _vsnprintf($0, 240, $fmt, $ap2) | 0;
  if ($2 >>> 0 < 240) {
   $5 = _realloc($0, $2 + 1 | 0) | 0;
   HEAP32[$s >> 2] = ($5 | 0) != 0 ? $5 : $0;
   $$0 = $2;
   break;
  }
  _free($0);
  if (($2 | 0) < 0) $$0 = -1; else {
   $9 = $2 + 1 | 0;
   $10 = _malloc($9) | 0;
   HEAP32[$s >> 2] = $10;
   if (!$10) $$0 = -1; else $$0 = _vsnprintf($10, $9, $fmt, $ap) | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46256] | 0) {
  STACKTOP = sp;
  return 46240;
 }
 if (!(___cxa_guard_acquire(46256) | 0)) {
  STACKTOP = sp;
  return 46240;
 }
 __THREW__ = 0;
 $4 = invoke_ii(76, 46264) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if (!($5 & 1)) {
  __THREW__ = 0;
  invoke_viii(20, 46240, 46264, $4 | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   ___cxa_atexit(201, 46240, ___dso_handle | 0) | 0;
   ___cxa_guard_release(46256);
   STACKTOP = sp;
   return 46240;
  }
 }
 $9 = ___cxa_find_matching_catch() | 0;
 ___cxa_guard_abort(46256);
 ___resumeException($9 | 0);
 return 0;
}

function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46624] | 0) {
  STACKTOP = sp;
  return 46608;
 }
 if (!(___cxa_guard_acquire(46624) | 0)) {
  STACKTOP = sp;
  return 46608;
 }
 __THREW__ = 0;
 $4 = invoke_ii(76, 46632) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if (!($5 & 1)) {
  __THREW__ = 0;
  invoke_viii(20, 46608, 46632, $4 | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   ___cxa_atexit(201, 46608, ___dso_handle | 0) | 0;
   ___cxa_guard_release(46624);
   STACKTOP = sp;
   return 46608;
  }
 }
 $9 = ___cxa_find_matching_catch() | 0;
 ___cxa_guard_abort(46624);
 ___resumeException($9 | 0);
 return 0;
}

function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46472] | 0) {
  STACKTOP = sp;
  return 46456;
 }
 if (!(___cxa_guard_acquire(46472) | 0)) {
  STACKTOP = sp;
  return 46456;
 }
 __THREW__ = 0;
 $4 = invoke_ii(76, 46480) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if (!($5 & 1)) {
  __THREW__ = 0;
  invoke_viii(20, 46456, 46480, $4 | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   ___cxa_atexit(201, 46456, ___dso_handle | 0) | 0;
   ___cxa_guard_release(46472);
   STACKTOP = sp;
   return 46456;
  }
 }
 $9 = ___cxa_find_matching_catch() | 0;
 ___cxa_guard_abort(46472);
 ___resumeException($9 | 0);
 return 0;
}

function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46360] | 0) {
  STACKTOP = sp;
  return 46344;
 }
 if (!(___cxa_guard_acquire(46360) | 0)) {
  STACKTOP = sp;
  return 46344;
 }
 __THREW__ = 0;
 $4 = invoke_ii(76, 46368) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if (!($5 & 1)) {
  __THREW__ = 0;
  invoke_viii(20, 46344, 46368, $4 | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   ___cxa_atexit(201, 46344, ___dso_handle | 0) | 0;
   ___cxa_guard_release(46360);
   STACKTOP = sp;
   return 46344;
  }
 }
 $9 = ___cxa_find_matching_catch() | 0;
 ___cxa_guard_abort(46360);
 ___resumeException($9 | 0);
 return 0;
}

function _strtoll($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0, $7 = 0, $8 = 0, $f$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 HEAP32[$f$i >> 2] = 0;
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 HEAP32[$f$i + 44 >> 2] = $s;
 if (($s | 0) < 0) HEAP32[$f$i + 8 >> 2] = -1; else HEAP32[$f$i + 8 >> 2] = $s + 2147483647;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $7 = ___intscan($f$i, $base, 1, 0, -2147483648) | 0;
 $8 = tempRet0;
 if (!$p) {
  tempRet0 = $8;
  STACKTOP = sp;
  return $7 | 0;
 }
 HEAP32[$p >> 2] = $s + ((HEAP32[$0 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) - (HEAP32[$f$i + 8 >> 2] | 0));
 tempRet0 = $8;
 STACKTOP = sp;
 return $7 | 0;
}

function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$01$lcssa = 0, $$012 = 0, $$03 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 if (($low | 0) == ($high | 0)) {
  $$01$lcssa = $low;
  STACKTOP = sp;
  return $$01$lcssa | 0;
 }
 $4 = (($high + -4 - $low | 0) >>> 2) + 1 | 0;
 $$012 = $low;
 $$03 = $dest;
 while (1) {
  $5 = HEAP32[$$012 >> 2] | 0;
  HEAP8[$$03 >> 0] = $5 >>> 0 < 128 ? $5 & 255 : $dfault;
  $$012 = $$012 + 4 | 0;
  if (($$012 | 0) == ($high | 0)) break; else $$03 = $$03 + 1 | 0;
 }
 $$01$lcssa = $low + ($4 << 2) | 0;
 STACKTOP = sp;
 return $$01$lcssa | 0;
}

function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nb, $__ne, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $0 = 0, $1 = 0, $fmt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $fmt = sp;
 HEAP8[$fmt >> 0] = 37;
 $0 = $fmt + 1 | 0;
 HEAP8[$0 >> 0] = $__fmt;
 $1 = $fmt + 2 | 0;
 HEAP8[$1 >> 0] = $__mod;
 HEAP8[$fmt + 3 >> 0] = 0;
 if ($__mod << 24 >> 24) {
  HEAP8[$0 >> 0] = $__mod;
  HEAP8[$1 >> 0] = $__fmt;
 }
 HEAP32[$__ne >> 2] = $__nb + (_strftime_l($__nb | 0, (HEAP32[$__ne >> 2] | 0) - $__nb | 0, $fmt | 0, $__tm | 0, HEAP32[$this >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function _strtoull($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0, $7 = 0, $8 = 0, $f$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f$i = sp;
 HEAP32[$f$i >> 2] = 0;
 $0 = $f$i + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 HEAP32[$f$i + 44 >> 2] = $s;
 if (($s | 0) < 0) HEAP32[$f$i + 8 >> 2] = -1; else HEAP32[$f$i + 8 >> 2] = $s + 2147483647;
 HEAP32[$f$i + 76 >> 2] = -1;
 ___shlim($f$i, 0);
 $7 = ___intscan($f$i, $base, 1, -1, -1) | 0;
 $8 = tempRet0;
 if (!$p) {
  tempRet0 = $8;
  STACKTOP = sp;
  return $7 | 0;
 }
 HEAP32[$p >> 2] = $s + ((HEAP32[$0 >> 2] | 0) + (HEAP32[$f$i + 108 >> 2] | 0) - (HEAP32[$f$i + 8 >> 2] | 0));
 tempRet0 = $8;
 STACKTOP = sp;
 return $7 | 0;
}

function __ZN13LiteralStringD2Ev($this) {
 $this = $this | 0;
 var $11 = 0, $2 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34184;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 34168;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $11 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
  STACKTOP = sp;
  return;
 }
 $4 = $this + 40 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $11 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this, $__sz) {
 $this = $this | 0;
 $__sz = $__sz | 0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $6 = $1 - $2 >> 2;
 if ($6 >>> 0 < $__sz >>> 0) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__sz - $6 | 0);
  STACKTOP = sp;
  return;
 }
 if ($6 >>> 0 <= $__sz >>> 0) {
  STACKTOP = sp;
  return;
 }
 $10 = $2 + ($__sz << 2) | 0;
 if (($1 | 0) == ($10 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = $1 + (~(($1 + -4 - $10 | 0) >>> 2) << 2);
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$adjustedPtr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, $info, $adjustedPtr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s, $__n, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__n = $__n | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $3 = 0, $5 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 $1 = _vsnprintf($__s, $__n, $__format, $__va) | 0;
 if (!$0) {
  STACKTOP = sp;
  return $1 | 0;
 }
 __THREW__ = 0;
 invoke_ii(75, $0 | 0) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $5 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($5);
 } else {
  STACKTOP = sp;
  return $1 | 0;
 }
 return 0;
}

function __ZN9ImportstrD2Ev($this) {
 $this = $this | 0;
 var $11 = 0, $2 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36680;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 34168;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $11 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
  STACKTOP = sp;
  return;
 }
 $4 = $this + 40 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $11 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
 STACKTOP = sp;
 return;
}

function __ZN6ImportD2Ev($this) {
 $this = $this | 0;
 var $11 = 0, $2 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 36696;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 34168;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $11 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
  STACKTOP = sp;
  return;
 }
 $4 = $this + 40 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($2 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $11 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($11);
 STACKTOP = sp;
 return;
}

function __Znwj($size) {
 $size = $size | 0;
 var $$lcssa = 0, $$size = 0, $1 = 0, $3 = 0, $5 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$size = ($size | 0) == 0 ? 1 : $size;
 $1 = _malloc($$size) | 0;
 if ($1) {
  $$lcssa = $1;
  STACKTOP = sp;
  return $$lcssa | 0;
 }
 while (1) {
  $3 = __ZSt15get_new_handlerv() | 0;
  if (!$3) {
   label = 4;
   break;
  }
  FUNCTION_TABLE_v[$3 & 7]();
  $5 = _malloc($$size) | 0;
  if ($5) {
   $$lcssa = $5;
   label = 5;
   break;
  }
 }
 if ((label | 0) == 4) {
  $7 = ___cxa_allocate_exception(4) | 0;
  HEAP32[$7 >> 2] = 54056;
  ___cxa_throw($7 | 0, 54104, 162);
 } else if ((label | 0) == 5) {
  STACKTOP = sp;
  return $$lcssa | 0;
 }
 return 0;
}

function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$01 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 L1 : do if (($low | 0) == ($high | 0)) $$0$lcssa = $low; else {
  $$01 = $low;
  while (1) {
   $3 = HEAP32[$$01 >> 2] | 0;
   if ($3 >>> 0 >= 128) {
    $$0$lcssa = $$01;
    break L1;
   }
   if (!((HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($3 << 1) >> 1] & $m) << 16 >> 16)) {
    $$0$lcssa = $$01;
    break L1;
   }
   $$01 = $$01 + 4 | 0;
   if (($$01 | 0) == ($high | 0)) {
    $$0$lcssa = $high;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0$lcssa | 0;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0, sp = 0;
 sp = STACKTOP;
 if ($__sz >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__sz + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $4 = 0, sp = 0;
 sp = STACKTOP;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below);
  STACKTOP = sp;
  return;
 } else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 31]($4, $info, $adjustedPtr, $path_below);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0, sp = 0;
 sp = STACKTOP;
 if ($__sz >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 2) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__sz + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $8;
 }
 _wmemcpy($__p$0, $__s, $__sz) | 0;
 HEAP32[$__p$0 + ($__sz << 2) >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$01 = 0, $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if (($low | 0) == ($high | 0)) {
  $$0$lcssa = $low;
  STACKTOP = sp;
  return $$0$lcssa | 0;
 }
 $4 = (($high + -4 - $low | 0) >>> 2) + 1 | 0;
 $$01 = $low;
 do {
  $5 = HEAP32[$$01 >> 2] | 0;
  if ($5 >>> 0 < 128) $9 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($5 << 2) >> 2] | 0; else $9 = $5;
  HEAP32[$$01 >> 2] = $9;
  $$01 = $$01 + 4 | 0;
 } while (($$01 | 0) != ($high | 0));
 $$0$lcssa = $low + ($4 << 2) | 0;
 STACKTOP = sp;
 return $$0$lcssa | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$01 = 0, $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 if (($low | 0) == ($high | 0)) {
  $$0$lcssa = $low;
  STACKTOP = sp;
  return $$0$lcssa | 0;
 }
 $4 = (($high + -4 - $low | 0) >>> 2) + 1 | 0;
 $$01 = $low;
 do {
  $5 = HEAP32[$$01 >> 2] | 0;
  if ($5 >>> 0 < 128) $9 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($5 << 2) >> 2] | 0; else $9 = $5;
  HEAP32[$$01 >> 2] = $9;
  $$01 = $$01 + 4 | 0;
 } while (($$01 | 0) != ($high | 0));
 $$0$lcssa = $low + ($4 << 2) | 0;
 STACKTOP = sp;
 return $$0$lcssa | 0;
}

function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $3 = 0, $5 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l | 0) | 0;
 $1 = _vsscanf($__s, $__format, $__va) | 0;
 if (!$0) {
  STACKTOP = sp;
  return $1 | 0;
 }
 __THREW__ = 0;
 invoke_ii(75, $0 | 0) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $5 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($5);
 } else {
  STACKTOP = sp;
  return $1 | 0;
 }
 return 0;
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr >> 0] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0, sp = 0;
 sp = STACKTOP;
 if ($__n >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 11) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__n + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $7;
 }
 _memset($__p$0 | 0, $__c | 0, $__n | 0) | 0;
 HEAP8[$__p$0 + $__n >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 $3 = $this + $2 | 0;
 HEAP32[$3 >> 2] = 772;
 $4 = $this + ($2 + 64) | 0;
 HEAP32[$4 >> 2] = 812;
 HEAP32[$this + ($2 + 8) >> 2] = 792;
 $6 = $this + ($2 + 12) | 0;
 HEAP32[$6 >> 2] = 1104;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + ($2 + 44) | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 __ZdlPv($3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0, sp = 0;
 sp = STACKTOP;
 if ($__n >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 2) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__n + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $8;
 }
 _wmemset($__p$0, $__c, $__n) | 0;
 HEAP32[$__p$0 + ($__n << 2) >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$01$lcssa = 0, $$013 = 0, $$04 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 if (($low | 0) == ($high | 0)) {
  $$01$lcssa = $low;
  STACKTOP = sp;
  return $$01$lcssa | 0;
 } else {
  $$013 = $low;
  $$04 = $dest;
 }
 while (1) {
  $1 = HEAP8[$$013 >> 0] | 0;
  HEAP8[$$04 >> 0] = $1 << 24 >> 24 > -1 ? $1 : $dfault;
  $$013 = $$013 + 1 | 0;
  if (($$013 | 0) == ($high | 0)) {
   $$01$lcssa = $high;
   break;
  } else $$04 = $$04 + 1 | 0;
 }
 STACKTOP = sp;
 return $$01$lcssa | 0;
}

function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this, $msg, $ec) {
 $this = $this | 0;
 $msg = $msg | 0;
 $ec = $ec | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $0 = sp;
 $1 = $ec;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $0;
 HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 + 4 >> 2] = $6;
 HEAP32[$tmpcast$byval_copy + 0 >> 2] = HEAP32[$0 + 0 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $tmpcast$byval_copy, $msg);
 HEAP32[$this >> 2] = 43320;
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45872) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) <= 8) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__121__throw_runtime_errorEPKc(42416);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45864) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) <= 8) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__121__throw_runtime_errorEPKc(42416);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 invoke_ii(68, 41224) | 0;
 $0 = __THREW__;
 __THREW__ = 0;
 if (!($0 & 1)) {
  __THREW__ = 0;
  invoke_ii(68, 41400) | 0;
  $2 = __THREW__;
  __THREW__ = 0;
  if (!($2 & 1)) {
   __THREW__ = 0;
   invoke_ii(71, 41576) | 0;
   $4 = __THREW__;
   __THREW__ = 0;
   if (!($4 & 1)) {
    __THREW__ = 0;
    invoke_ii(71, 41752) | 0;
    $6 = __THREW__;
    __THREW__ = 0;
    if (!($6 & 1)) {
     STACKTOP = sp;
     return;
    }
   }
  }
 }
 $8 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($8);
}

function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $3 = 0, $4 = 0, $7 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, sp = 0;
 sp = STACKTOP;
 if (($__lo | 0) == ($__hi | 0)) {
  $__h$0$lcssa = 0;
  STACKTOP = sp;
  return $__h$0$lcssa | 0;
 } else {
  $__h$02 = 0;
  $__p$01 = $__lo;
 }
 while (1) {
  $3 = (HEAP32[$__p$01 >> 2] | 0) + ($__h$02 << 4) | 0;
  $4 = $3 & -268435456;
  $7 = ($4 >>> 24 | $4) ^ $3;
  $__p$01 = $__p$01 + 4 | 0;
  if (($__p$01 | 0) == ($__hi | 0)) {
   $__h$0$lcssa = $7;
   break;
  } else $__h$02 = $7;
 }
 STACKTOP = sp;
 return $__h$0$lcssa | 0;
}

function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $4 = 0, $5 = 0, $8 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, sp = 0;
 sp = STACKTOP;
 if (($__lo | 0) == ($__hi | 0)) {
  $__h$0$lcssa = 0;
  STACKTOP = sp;
  return $__h$0$lcssa | 0;
 } else {
  $__h$02 = 0;
  $__p$01 = $__lo;
 }
 while (1) {
  $4 = (HEAP8[$__p$01 >> 0] | 0) + ($__h$02 << 4) | 0;
  $5 = $4 & -268435456;
  $8 = ($5 >>> 24 | $5) ^ $4;
  $__p$01 = $__p$01 + 1 | 0;
  if (($__p$01 | 0) == ($__hi | 0)) {
   $__h$0$lcssa = $8;
   break;
  } else $__h$02 = $8;
 }
 STACKTOP = sp;
 return $__h$0$lcssa | 0;
}

function __ZN12_GLOBAL__N_116HeapSimpleObjectD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40592;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 20 | 0, HEAP32[$this + 24 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$01 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 L1 : do if (($low | 0) == ($high | 0)) $$0$lcssa = $low; else {
  $$01 = $low;
  while (1) {
   $1 = HEAP32[$$01 >> 2] | 0;
   if ($1 >>> 0 < 128) if ((HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($1 << 1) >> 1] & $m) << 16 >> 16) {
    $$0$lcssa = $$01;
    break L1;
   }
   $$01 = $$01 + 4 | 0;
   if (($$01 | 0) == ($high | 0)) {
    $$0$lcssa = $high;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0$lcssa | 0;
}

function __ZN12_GLOBAL__N_123HeapComprehensionObjectD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40280;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $2 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 HEAP32[$this + $2 >> 2] = 772;
 $4 = $this + ($2 + 64) | 0;
 HEAP32[$4 >> 2] = 812;
 HEAP32[$this + ($2 + 8) >> 2] = 792;
 $6 = $this + ($2 + 12) | 0;
 HEAP32[$6 >> 2] = 1104;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + ($2 + 44) | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function _wmemmove($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($n | 0) == 0;
 if ($d - $s >> 2 >>> 0 < $n >>> 0) {
  if (!$5) {
   $$in = $n;
   do {
    $$in = $$in + -1 | 0;
    HEAP32[$d + ($$in << 2) >> 2] = HEAP32[$s + ($$in << 2) >> 2];
   } while (($$in | 0) != 0);
  }
 } else if (!$5) {
  $$025 = $s;
  $$07 = $d;
  $$16 = $n;
  while (1) {
   $$16 = $$16 + -1 | 0;
   HEAP32[$$07 >> 2] = HEAP32[$$025 >> 2];
   if (!$$16) break; else {
    $$025 = $$025 + 4 | 0;
    $$07 = $$07 + 4 | 0;
   }
  }
 }
 STACKTOP = sp;
 return $d | 0;
}

function __ZN12_GLOBAL__N_116HeapSimpleObjectD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40592;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 20 | 0, HEAP32[$this + 24 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$02 = 0, $1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 if (($low | 0) == ($high | 0)) {
  $$0$lcssa = $low;
  STACKTOP = sp;
  return $$0$lcssa | 0;
 } else $$02 = $low;
 do {
  $1 = HEAP8[$$02 >> 0] | 0;
  if ($1 << 24 >> 24 > -1) $7 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $7 = $1;
  HEAP8[$$02 >> 0] = $7;
  $$02 = $$02 + 1 | 0;
 } while (($$02 | 0) != ($high | 0));
 $$0$lcssa = $high;
 STACKTOP = sp;
 return $$0$lcssa | 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$02 = 0, $1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 if (($low | 0) == ($high | 0)) {
  $$0$lcssa = $low;
  STACKTOP = sp;
  return $$0$lcssa | 0;
 } else $$02 = $low;
 do {
  $1 = HEAP8[$$02 >> 0] | 0;
  if ($1 << 24 >> 24 > -1) $7 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $7 = $1;
  HEAP8[$$02 >> 0] = $7;
  $$02 = $$02 + 1 | 0;
 } while (($$02 | 0) != ($high | 0));
 $$0$lcssa = $high;
 STACKTOP = sp;
 return $$0$lcssa | 0;
}

function __ZN12_GLOBAL__N_123HeapComprehensionObjectD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40280;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_111HeapClosureD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40696;
 $1 = HEAP32[$this + 28 >> 2] | 0;
 if ($1) {
  $3 = $this + 32 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var sp = 0;
 sp = STACKTOP;
 if ((HEAP32[$info + 8 >> 2] | 0) != ($this | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_111HeapClosureD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40696;
 $1 = HEAP32[$this + 28 >> 2] | 0;
 if ($1) {
  $3 = $this + 32 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) != ($1 | 0)) HEAP32[$2 >> 2] = $3 + (~(($3 + -4 - $1 | 0) >>> 2) << 2);
 $9 = HEAP32[$this >> 2] | 0;
 if (!$9) {
  STACKTOP = sp;
  return;
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 if (($12 | 0) == ($9 | 0)) {
  HEAP8[$12 + 112 >> 0] = 0;
  STACKTOP = sp;
  return;
 } else {
  __ZdlPv($9);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 45888;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 __THREW__ = 0;
 $2 = invoke_i(1) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if (!($3 & 1)) {
  if (($1 | 0) == ($2 | 0)) {
   STACKTOP = sp;
   return;
  }
  __THREW__ = 0;
  invoke_vi(189, HEAP32[$0 >> 2] | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   STACKTOP = sp;
   return;
  }
 }
 $9 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($9);
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i$i = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 if ($__n >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $1 = $this + 128 | 0;
 if ((HEAP8[$1 >> 0] | 0) == 0 & $__n >>> 0 < 29) {
  HEAP8[$1 >> 0] = 1;
  $$0$i$i = $this + 16 | 0;
 } else $$0$i$i = __Znwj($__n << 2) | 0;
 HEAP32[$this + 4 >> 2] = $$0$i$i;
 HEAP32[$this >> 2] = $$0$i$i;
 HEAP32[$this + 8 >> 2] = $$0$i$i + ($__n << 2);
 STACKTOP = sp;
 return;
}

function _memcmp($vl, $vr, $n) {
 $vl = $vl | 0;
 $vr = $vr | 0;
 $n = $n | 0;
 var $$02 = 0, $1 = 0, $11 = 0, $2 = 0, $l$03 = 0, $r$04 = 0, sp = 0;
 sp = STACKTOP;
 L1 : do if (!$n) $11 = 0; else {
  $$02 = $n;
  $l$03 = $vl;
  $r$04 = $vr;
  while (1) {
   $1 = HEAP8[$l$03 >> 0] | 0;
   $2 = HEAP8[$r$04 >> 0] | 0;
   if ($1 << 24 >> 24 != $2 << 24 >> 24) break;
   $$02 = $$02 + -1 | 0;
   if (!$$02) {
    $11 = 0;
    break L1;
   } else {
    $l$03 = $l$03 + 1 | 0;
    $r$04 = $r$04 + 1 | 0;
   }
  }
  $11 = ($1 & 255) - ($2 & 255) | 0;
 } while (0);
 STACKTOP = sp;
 return $11 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 var $1 = 0, $11 = 0, $12 = 0, sp = 0;
 sp = STACKTOP;
 if (($this | 0) == ($__str | 0)) {
  STACKTOP = sp;
  return $this | 0;
 }
 $1 = HEAP8[$__str >> 0] | 0;
 if (!($1 & 1)) {
  $11 = $__str + 1 | 0;
  $12 = ($1 & 255) >>> 1;
 } else {
  $11 = HEAP32[$__str + 8 >> 2] | 0;
  $12 = HEAP32[$__str + 4 >> 2] | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $11, $12) | 0;
 STACKTOP = sp;
 return $this | 0;
}

function ___towrite($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $2 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = HEAP32[$f >> 2] | 0;
 if (!($6 & 8)) {
  HEAP32[$f + 8 >> 2] = 0;
  HEAP32[$f + 4 >> 2] = 0;
  $13 = HEAP32[$f + 44 >> 2] | 0;
  HEAP32[$f + 28 >> 2] = $13;
  HEAP32[$f + 20 >> 2] = $13;
  HEAP32[$f + 16 >> 2] = $13 + (HEAP32[$f + 48 >> 2] | 0);
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$f >> 2] = $6 | 32;
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$01$lcssa = 0, $$012 = 0, $$03 = 0, sp = 0;
 sp = STACKTOP;
 if (($low | 0) == ($high | 0)) {
  $$01$lcssa = $low;
  STACKTOP = sp;
  return $$01$lcssa | 0;
 } else {
  $$012 = $low;
  $$03 = $dest;
 }
 while (1) {
  HEAP32[$$03 >> 2] = HEAP8[$$012 >> 0];
  $$012 = $$012 + 1 | 0;
  if (($$012 | 0) == ($high | 0)) {
   $$01$lcssa = $high;
   break;
  } else $$03 = $$03 + 4 | 0;
 }
 STACKTOP = sp;
 return $$01$lcssa | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46584] | 0) {
  STACKTOP = sp;
  return 46568;
 }
 if (!(___cxa_guard_acquire(46584) | 0)) {
  STACKTOP = sp;
  return 46568;
 }
 __THREW__ = 0;
 invoke_viii(3, 46568, 46592, 11);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $6 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(46584);
  ___resumeException($6 | 0);
 }
 ___cxa_atexit(200, 46568, ___dso_handle | 0) | 0;
 ___cxa_guard_release(46584);
 STACKTOP = sp;
 return 46568;
}

function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46424] | 0) {
  STACKTOP = sp;
  return 46408;
 }
 if (!(___cxa_guard_acquire(46424) | 0)) {
  STACKTOP = sp;
  return 46408;
 }
 __THREW__ = 0;
 invoke_viii(3, 46408, 46432, 20);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $6 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(46424);
  ___resumeException($6 | 0);
 }
 ___cxa_atexit(200, 46408, ___dso_handle | 0) | 0;
 ___cxa_guard_release(46424);
 STACKTOP = sp;
 return 46408;
}

function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46216] | 0) {
  STACKTOP = sp;
  return 46200;
 }
 if (!(___cxa_guard_acquire(46216) | 0)) {
  STACKTOP = sp;
  return 46200;
 }
 __THREW__ = 0;
 invoke_viii(3, 46200, 46224, 8);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $6 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(46216);
  ___resumeException($6 | 0);
 }
 ___cxa_atexit(200, 46200, ___dso_handle | 0) | 0;
 ___cxa_guard_release(46216);
 STACKTOP = sp;
 return 46200;
}

function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 if (HEAP8[46320] | 0) {
  STACKTOP = sp;
  return 46304;
 }
 if (!(___cxa_guard_acquire(46320) | 0)) {
  STACKTOP = sp;
  return 46304;
 }
 __THREW__ = 0;
 invoke_viii(3, 46304, 46328, 8);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $6 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(46320);
  ___resumeException($6 | 0);
 }
 ___cxa_atexit(200, 46304, ___dso_handle | 0) | 0;
 ___cxa_guard_release(46320);
 STACKTOP = sp;
 return 46304;
}

function ___string_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $0 = 0, $1 = 0, $11 = 0, $2 = 0, $3 = 0, $k$0 = 0, $k$0$len = 0, sp = 0;
 sp = STACKTOP;
 $0 = $f + 84 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $len + 256 | 0;
 $3 = _memchr($1, 0, $2) | 0;
 if (!$3) $k$0 = $2; else $k$0 = $3 - $1 | 0;
 $k$0$len = $k$0 >>> 0 < $len >>> 0 ? $k$0 : $len;
 _memcpy($buf | 0, $1 | 0, $k$0$len | 0) | 0;
 HEAP32[$f + 4 >> 2] = $1 + $k$0$len;
 $11 = $1 + $k$0 | 0;
 HEAP32[$f + 8 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 STACKTOP = sp;
 return $k$0$len | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!(HEAP8[$__str >> 0] & 1)) {
  HEAP32[$this + 0 >> 2] = HEAP32[$__str + 0 >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$__str + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$__str + 8 >> 2];
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, HEAP32[$__str + 8 >> 2] | 0, HEAP32[$__str + 4 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 772;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 812;
 HEAP32[$0 + 8 >> 2] = 792;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 1104;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$__nd) {
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $0 = 0, $12 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 31]($0, $this, $code);
 if ((HEAP32[$0 + 4 >> 2] | 0) != (HEAP32[$condition + 4 >> 2] | 0)) {
  $12 = 0;
  STACKTOP = sp;
  return $12 | 0;
 }
 $12 = (HEAP32[$0 >> 2] | 0) == (HEAP32[$condition >> 2] | 0);
 STACKTOP = sp;
 return $12 | 0;
}

function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $19 = 0, $21 = 0, $4 = 0, $7 = 0;
 __THREW__ = 0;
 $0 = invoke_i(8) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $21 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($21);
 }
 if ($0) {
  $4 = HEAP32[$0 >> 2] | 0;
  if ($4) {
   $7 = $4 + 48 | 0;
   if ((HEAP32[$7 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[$7 + 4 >> 2] | 0) == 1129074247 : 0) __ZSt11__terminatePFvvE(HEAP32[$4 + 12 >> 2] | 0);
  }
 }
 $19 = HEAP32[13420] | 0;
 HEAP32[13420] = $19 + 0;
 __ZSt11__terminatePFvvE($19);
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 772;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 812;
 HEAP32[$0 + 8 >> 2] = 792;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 1104;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($0 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18ios_base4initEPv($this, $sb) {
 $this = $this | 0;
 $sb = $sb | 0;
 var $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 HEAP32[$this + 24 >> 2] = $sb;
 HEAP32[$this + 16 >> 2] = ($sb | 0) == 0 & 1;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 4098;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 6;
 $8 = $this + 28 | 0;
 dest = $this + 32 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__16localeC2Ev($8);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$01$lcssa = 0, $$012 = 0, $$03 = 0, sp = 0;
 sp = STACKTOP;
 if (($low | 0) == ($high | 0)) $$01$lcssa = $low; else {
  $$012 = $low;
  $$03 = $dest;
  while (1) {
   HEAP8[$$03 >> 0] = HEAP8[$$012 >> 0] | 0;
   $$012 = $$012 + 1 | 0;
   if (($$012 | 0) == ($high | 0)) {
    $$01$lcssa = $high;
    break;
   } else $$03 = $$03 + 1 | 0;
  }
 }
 STACKTOP = sp;
 return $$01$lcssa | 0;
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 772;
 HEAP32[$this + 64 >> 2] = 812;
 HEAP32[$this + 8 >> 2] = 792;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 1104;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this + 64 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function ___cxa_can_catch($catchType, $excpType, $thrown) {
 $catchType = $catchType | 0;
 $excpType = $excpType | 0;
 $thrown = $thrown | 0;
 var $4 = 0, $5 = 0, $temp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $temp = sp;
 HEAP32[$temp >> 2] = HEAP32[$thrown >> 2];
 $4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$catchType >> 2] | 0) + 16 >> 2] & 63]($catchType, $excpType, $temp) | 0;
 $5 = $4 & 1;
 if (!$4) {
  STACKTOP = sp;
  return $5 | 0;
 }
 HEAP32[$thrown >> 2] = HEAP32[$temp >> 2];
 STACKTOP = sp;
 return $5 | 0;
}

function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 43344;
 __THREW__ = 0;
 invoke_vii(71, $this | 0, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 if ($0 & 1) {
  $11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($11);
 } else {
  __ZNSt3__16localeD2Ev($this + 28 | 0);
  _free(HEAP32[$this + 32 >> 2] | 0);
  _free(HEAP32[$this + 36 >> 2] | 0);
  _free(HEAP32[$this + 48 >> 2] | 0);
  _free(HEAP32[$this + 60 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this, $ev) {
 $this = $this | 0;
 $ev = $ev | 0;
 var $1 = 0, $3 = 0, $4 = 0, $i$01 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$this + 40 >> 2] | 0;
 if (!$1) {
  STACKTOP = sp;
  return;
 }
 $3 = $this + 32 | 0;
 $4 = $this + 36 | 0;
 $i$01 = $1;
 do {
  $i$01 = $i$01 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$3 >> 2] | 0) + ($i$01 << 2) >> 2] & 31]($ev, $this, HEAP32[(HEAP32[$4 >> 2] | 0) + ($i$01 << 2) >> 2] | 0);
 } while (($i$01 | 0) != 0);
 STACKTOP = sp;
 return;
}

function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $10 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 54280;
 if (!(HEAP8[$msg >> 0] & 1)) $7 = $msg + 1 | 0; else $7 = HEAP32[$msg + 8 >> 2] | 0;
 __THREW__ = 0;
 invoke_vii(68, $this + 4 | 0, $7 | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  ___resumeException($10 | 0);
 } else {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this >> 2] | 0;
 __THREW__ = 0;
 $1 = invoke_i(1) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if (!($2 & 1)) {
  if (($0 | 0) == ($1 | 0)) {
   STACKTOP = sp;
   return;
  }
  __THREW__ = 0;
  invoke_vi(189, HEAP32[$this >> 2] | 0);
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   STACKTOP = sp;
   return;
  }
 }
 $8 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($8);
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}

function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  STACKTOP = sp;
  return;
 }
 $2 = $this + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) != ($0 | 0)) HEAP32[$2 >> 2] = $3 + (~(($3 + -4 - $0 | 0) >>> 2) << 2);
 if (($this + 16 | 0) == ($0 | 0)) {
  HEAP8[$this + 128 >> 0] = 0;
  STACKTOP = sp;
  return;
 } else {
  __ZdlPv($0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 772;
 HEAP32[$this + 64 >> 2] = 812;
 HEAP32[$this + 8 >> 2] = 792;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 1104;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this + 64 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (HEAP32[$__os + ($3 + 16) >> 2] | 0) {
  STACKTOP = sp;
  return;
 }
 $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
 if ($8) __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($8) | 0;
 HEAP8[$this >> 0] = 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (HEAP32[$__os + ($3 + 16) >> 2] | 0) {
  STACKTOP = sp;
  return;
 }
 $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
 if ($8) __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8) | 0;
 HEAP8[$this >> 0] = 1;
 STACKTOP = sp;
 return;
}

function dynCall_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 a11 = a11 | 0;
 a12 = a12 | 0;
 a13 = a13 | 0;
 a14 = a14 | 0;
 a15 = a15 | 0;
 FUNCTION_TABLE_viiiiiiiiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0, a11 | 0, a12 | 0, a13 | 0, a14 | 0, a15 | 0);
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var sp = 0;
 sp = STACKTOP;
 if ((HEAP32[$info + 8 >> 2] | 0) != ($this | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__clocEv() {
 var $4 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 do if (!(HEAP8[45696] | 0)) if (___cxa_guard_acquire(45696) | 0) {
  __THREW__ = 0;
  $4 = invoke_iiii(35, 2147483647, 45704, 0) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if ($5 & 1) {
   $8 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(45696);
   ___resumeException($8 | 0);
  } else {
   HEAP32[11422] = $4;
   ___cxa_guard_release(45696);
   break;
  }
 } while (0);
 STACKTOP = sp;
 return HEAP32[11422] | 0;
}

function _vsscanf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $4 = 0, $f = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f = sp;
 dest = $f + 0 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$f + 32 >> 2] = 42;
 HEAP32[$f + 44 >> 2] = $s;
 HEAP32[$f + 76 >> 2] = -1;
 HEAP32[$f + 84 >> 2] = $s;
 $4 = _MUSL_vfscanf($f, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 8 | 0;
 $$0 = $__n;
 $1 = HEAP32[$0 >> 2] | 0;
 do {
  if (!$1) $4 = 0; else {
   HEAP32[$1 >> 2] = 0;
   $4 = HEAP32[$0 >> 2] | 0;
  }
  $1 = $4 + 4 | 0;
  HEAP32[$0 >> 2] = $1;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $0 = 0, $1 = 0, $2 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 $0 = _strlen($__s | 0) | 0;
 __THREW__ = 0;
 $1 = invoke_iiiiii(14, $this | 0, 0, -1, $__s | 0, $0 | 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if ($2 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else {
  STACKTOP = sp;
  return $1 | 0;
 }
 return 0;
}

function __ZNSt3__16locale8__globalEv() {
 var $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 do if (!(HEAP8[45776] | 0)) if (___cxa_guard_acquire(45776) | 0) {
  __THREW__ = 0;
  invoke_i(3) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $7 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(45776);
   ___resumeException($7 | 0);
  } else {
   HEAP32[11442] = 45760;
   ___cxa_guard_release(45776);
   break;
  }
 } while (0);
 STACKTOP = sp;
 return HEAP32[11442] | 0;
}

function __ZNSt3__16locale7classicEv() {
 var $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 do if (!(HEAP8[45752] | 0)) if (___cxa_guard_acquire(45752) | 0) {
  __THREW__ = 0;
  invoke_i(2) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $7 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(45752);
   ___resumeException($7 | 0);
  } else {
   HEAP32[11436] = 45736;
   ___cxa_guard_release(45752);
   break;
  }
 } while (0);
 STACKTOP = sp;
 return HEAP32[11436] | 0;
}

function __ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 $3 = $this + $2 | 0;
 HEAP32[$3 >> 2] = 40852;
 $4 = $this + ($2 + 108) | 0;
 HEAP32[$4 >> 2] = 40872;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + ($2 + 8) | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 __ZdlPv($3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $$0 = $__n;
 $1 = HEAP32[$0 >> 2] | 0;
 do {
  if (!$1) $4 = 0; else {
   HEAP32[$1 >> 2] = 0;
   $4 = HEAP32[$0 >> 2] | 0;
  }
  $1 = $4 + 4 | 0;
  HEAP32[$0 >> 2] = $1;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 STACKTOP = sp;
 return;
}

function __ZN17ObjectCompositionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $__sp, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__sp = $__sp | 0;
 $__wch = $__wch | 0;
 var $4 = 0, sp = 0;
 sp = STACKTOP;
 $4 = $__sp + 8 | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] & 31]($agg$result, $this, HEAP32[$4 >> 2] | 0, HEAP32[$4 + 4 >> 2] | 0, 0, $__wch);
 STACKTOP = sp;
 return;
}

function __ZN14LiteralBooleanD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN13LiteralNumberD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN11LiteralNullD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN11ConditionalD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[ptr + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[ptr + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[ptr + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[ptr + 7 >> 0];
}

function _copysign($x, $y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0.0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $6 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | $1 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = $0;
 HEAP32[tempDoublePtr + 4 >> 2] = $6;
 $7 = +HEAPF64[tempDoublePtr >> 3];
 STACKTOP = sp;
 return +$7;
}

function __ZN6BinaryD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN5UnaryD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN5SuperD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN5IndexD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN5ErrorD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN4SelfD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN3VarD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN3ASTD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45872) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 45864) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 STACKTOP = sp;
 return;
}

function __ZNSt3__15ctypeIcEC2EPKtbj($this, $tab, $del, $refs) {
 $this = $this | 0;
 $tab = $tab | 0;
 $del = $del | 0;
 $refs = $refs | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 45816;
 $2 = $this + 8 | 0;
 HEAP32[$2 >> 2] = $tab;
 HEAP8[$this + 12 >> 0] = $del & 1;
 if ($tab) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$2 >> 2] = __ZNSt3__15ctypeIcE13classic_tableEv() | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $2 = 0, $3 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 45888;
 __THREW__ = 0;
 $2 = invoke_i(1) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $6 = ___cxa_find_matching_catch() | 0;
  ___resumeException($6 | 0);
 } else {
  HEAP32[$this + 8 >> 2] = $2;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__119__iostream_category7messageEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 var sp = 0;
 sp = STACKTOP;
 if (($ev | 0) != 1 & ($ev | 0) < 257) {
  __ZNKSt3__112__do_message7messageEi($agg$result, $this, $ev);
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 43256, 35);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(70, $0 | 0, 42936);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else {
  HEAP32[$0 >> 2] = 54400;
  ___cxa_throw($0 | 0, 54440, 164);
 }
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(70, $0 | 0, 42936);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else {
  HEAP32[$0 >> 2] = 54336;
  ___cxa_throw($0 | 0, 54376, 164);
 }
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(70, $0 | 0, 45680);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else {
  HEAP32[$0 >> 2] = 54336;
  ___cxa_throw($0 | 0, 54376, 164);
 }
}

function __ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var $2 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 HEAP32[$this + $2 >> 2] = 40852;
 $4 = $this + ($2 + 108) | 0;
 HEAP32[$4 >> 2] = 40872;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + ($2 + 8) | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZN3ASTD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 34168;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 if ($1) {
  $3 = $this + 40 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 4 | 0);
 STACKTOP = sp;
 return;
}

function _jsonnet_make() {
 var $0 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 $0 = __Znwj(48) | 0;
 HEAPF64[$0 >> 3] = 2.0;
 HEAP32[$0 + 8 >> 2] = 500;
 HEAP32[$0 + 12 >> 2] = 1e3;
 HEAP8[$0 + 16 >> 0] = 0;
 HEAP32[$0 + 20 >> 2] = 20;
 $5 = $0 + 28 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$0 + 32 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = $5;
 HEAP32[$0 + 36 >> 2] = 10;
 HEAP32[$0 + 40 >> 2] = $0;
 HEAP8[$0 + 44 >> 0] = 0;
 STACKTOP = sp;
 return $0 | 0;
}

function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function ___shlim($f, $lim) {
 $f = $f | 0;
 $lim = $lim | 0;
 var $2 = 0, $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$f + 104 >> 2] = $lim;
 $2 = HEAP32[$f + 8 >> 2] | 0;
 $4 = HEAP32[$f + 4 >> 2] | 0;
 $7 = $2 - $4 | 0;
 HEAP32[$f + 108 >> 2] = $7;
 if (($lim | 0) != 0 & ($7 | 0) > ($lim | 0)) {
  HEAP32[$f + 100 >> 2] = $4 + $lim;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$f + 100 >> 2] = $2;
  STACKTOP = sp;
  return;
 }
}

function __ZN12_GLOBAL__N_19HeapArrayD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40712;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) {
  __ZdlPv($this);
  STACKTOP = sp;
  return;
 }
 $3 = $this + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function _wmemcpy($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$014 = 0, $$023 = 0, $$05 = 0, sp = 0;
 sp = STACKTOP;
 if (!$n) {
  STACKTOP = sp;
  return $d | 0;
 } else {
  $$014 = $n;
  $$023 = $s;
  $$05 = $d;
 }
 while (1) {
  $$014 = $$014 + -1 | 0;
  HEAP32[$$05 >> 2] = HEAP32[$$023 >> 2];
  if (!$$014) break; else {
   $$023 = $$023 + 4 | 0;
   $$05 = $$05 + 4 | 0;
  }
 }
 STACKTOP = sp;
 return $d | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $5 = $this + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$5 >> 2] = $6 + 4;
 $$0 = HEAP32[$6 >> 2] | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $5 = $this + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$5 >> 2] = $6 + 1;
 $$0 = HEAPU8[$6 >> 0] | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16localeC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = invoke_i(4) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else {
  $3 = HEAP32[$0 >> 2] | 0;
  HEAP32[$this >> 2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 if (!(HEAP8[$__nm >> 0] & 1)) $7 = $__nm + 1 | 0; else $7 = HEAP32[$__nm + 8 >> 2] | 0;
 $8 = _catopen($7 | 0, 1) | 0;
 STACKTOP = sp;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 if (!(HEAP8[$__nm >> 0] & 1)) $7 = $__nm + 1 | 0; else $7 = HEAP32[$__nm + 8 >> 2] | 0;
 $8 = _catopen($7 | 0, 1) | 0;
 STACKTOP = sp;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this | 0;
 var $__p$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p$i = sp;
 if ((HEAP32[$this >> 2] | 0) != -1) {
  HEAP32[$__p$i >> 2] = $this;
  HEAP32[$__p$i + 4 >> 2] = 192;
  HEAP32[$__p$i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this, $__p$i, 193);
 }
 STACKTOP = sp;
 return (HEAP32[$this + 4 >> 2] | 0) + -1 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function ___uflow($f) {
 $f = $f | 0;
 var $$0 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp;
 if (!(HEAP32[$f + 8 >> 2] | 0)) if (!(___toread($f) | 0)) label = 3; else $$0 = -1; else label = 3;
 if ((label | 0) == 3) if ((FUNCTION_TABLE_iiii[HEAP32[$f + 32 >> 2] & 63]($f, $c, 1) | 0) == 1) $$0 = HEAPU8[$c >> 0] | 0; else $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__16locale5__imp9use_facetEl($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 if (__ZNKSt3__16locale5__imp9has_facetEl($this, $id) | 0) {
  STACKTOP = sp;
  return HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($id << 2) >> 2] | 0;
 } else {
  $1 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw($1 | 0, 54576, 170);
 }
 return 0;
}

function dynCall_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 a11 = a11 | 0;
 return FUNCTION_TABLE_iiiiiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0, a11 | 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 43024;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 + 0 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 42960;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 + 0 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_19HeapThunkD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40312;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_19HeapArrayD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40712;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) {
  STACKTOP = sp;
  return;
 }
 $3 = $this + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) != ($1 | 0)) HEAP32[$3 >> 2] = $4 + (~(($4 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 STACKTOP = sp;
 return;
}

function __ZNSt3__118__libcpp_refstringC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $0 = 0, $2 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 $0 = _strlen($msg | 0) | 0;
 $2 = __Znwj($0 + 13 | 0) | 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$2 + 4 >> 2] = $0;
 HEAP32[$2 + 8 >> 2] = 0;
 $5 = $2 + 12 | 0;
 _memcpy($5 | 0, $msg | 0, $0 + 1 | 0) | 0;
 HEAP32[$this >> 2] = $5;
 STACKTOP = sp;
 return;
}

function _jsonnet_destroy($vm) {
 $vm = $vm | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$vm) {
  STACKTOP = sp;
  return;
 }
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($vm + 24 | 0, HEAP32[$vm + 28 >> 2] | 0);
 __ZdlPv($vm);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_jjRKS4_($this, $__str, $__pos, $__n, $__a) {
 $this = $this | 0;
 $__str = $__str | 0;
 $__pos = $__pos | 0;
 $__n = $__n | 0;
 $__a = $__a | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($this, $__str, $__pos, $__n, $__a);
 STACKTOP = sp;
 return;
}

function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $1 + -1;
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 8 >> 2] & 255]($this);
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}

function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(74, $0 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else ___cxa_throw($0 | 0, 54480, 166);
}

function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $5 = 0, sp = 0;
 sp = STACKTOP;
 if ((HEAP32[$code + 4 >> 2] | 0) != ($this | 0)) {
  $5 = 0;
  STACKTOP = sp;
  return $5 | 0;
 }
 $5 = (HEAP32[$code >> 2] | 0) == ($condition | 0);
 STACKTOP = sp;
 return $5 | 0;
}

function __ZN12_GLOBAL__N_19HeapThunkD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40312;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _sn_write($f, $s, $l) {
 $f = $f | 0;
 $s = $s | 0;
 $l = $l | 0;
 var $2 = 0, $3 = 0, $6 = 0, $l$ = 0, sp = 0;
 sp = STACKTOP;
 $2 = $f + 20 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $6 = (HEAP32[$f + 16 >> 2] | 0) - $3 | 0;
 $l$ = $6 >>> 0 > $l >>> 0 ? $l : $6;
 _memcpy($3 | 0, $s | 0, $l$ | 0) | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + $l$;
 STACKTOP = sp;
 return $l | 0;
}

function __ZNSt13runtime_errorC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $1 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 54280;
 __THREW__ = 0;
 invoke_vii(68, $this + 4 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___resumeException($3 | 0);
 } else {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt11logic_errorC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $1 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 54256;
 __THREW__ = 0;
 invoke_vii(68, $this + 4 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___resumeException($3 | 0);
 } else {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function __ZNKSt3__16locale5__imp9has_facetEl($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $12 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$this + 8 >> 2] | 0;
 if ((HEAP32[$this + 12 >> 2] | 0) - $3 >> 2 >>> 0 <= $id >>> 0) {
  $12 = 0;
  STACKTOP = sp;
  return $12 | 0;
 }
 $12 = (HEAP32[$3 + ($id << 2) >> 2] | 0) != 0;
 STACKTOP = sp;
 return $12 | 0;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) >> 0] | 0) + 24 | 0;
}

function _llvm_ctlz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[ctlz_i8 + (x >>> 24) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[ctlz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[ctlz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[ctlz_i8 + (x & 255) >> 0] | 0) + 24 | 0;
}

function _jsonnet_realloc($vm, $str, $sz) {
 $vm = $vm | 0;
 $str = $str | 0;
 $sz = $sz | 0;
 var $$0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($sz | 0) == 0;
 do if (!$str) if ($1) $$0 = 0; else $$0 = _malloc($sz) | 0; else if ($1) {
  _free($str);
  $$0 = 0;
  break;
 } else {
  $$0 = _realloc($str, $sz) | 0;
  break;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($this, $__pos, $__s) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this, $__pos, $__s, _strlen($__s | 0) | 0) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40852;
 HEAP32[$this + 108 >> 2] = 40872;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + 8 | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this + 108 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function dynCall_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 FUNCTION_TABLE_viiiiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0);
}

function __ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 1104;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function dynCall_viiiiiddiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 a7 = +a7;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 FUNCTION_TABLE_viiiiiddiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6, +a7, a8 | 0, a9 | 0, a10 | 0);
}

function __ZNKSt3__112__do_message7messageEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = _strerror($ev | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, $0, _strlen($0 | 0) | 0);
 STACKTOP = sp;
 return;
}
function __ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40852;
 HEAP32[$this + 108 >> 2] = 40872;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + 8 | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this + 108 | 0);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $1 = (HEAP32[$this >> 2] | 0) + -4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = $2 + -1;
 if (($2 + -1 | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv((HEAP32[$this >> 2] | 0) + -12 | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__15ctypeIwE5do_isEtw($this, $m, $c) {
 $this = $this | 0;
 $m = $m | 0;
 $c = $c | 0;
 var $5 = 0, sp = 0;
 sp = STACKTOP;
 if ($c >>> 0 >= 128) {
  $5 = 0;
  STACKTOP = sp;
  return $5 | 0;
 }
 $5 = (HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($c << 1) >> 1] & $m) << 16 >> 16 != 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 1104;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = invoke_i(6) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else {
  STACKTOP = sp;
  return HEAP32[$0 >> 2] | 0;
 }
 return 0;
}

function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = invoke_i(7) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else {
  STACKTOP = sp;
  return HEAP32[$0 >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $5 = 0, sp = 0;
 sp = STACKTOP;
 if ($c << 24 >> 24 <= -1) {
  $5 = $c;
  STACKTOP = sp;
  return $5 | 0;
 }
 $5 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($c << 24 >> 24 << 2) >> 2] & 255;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZNKSt3__15ctypeIcE10do_toupperEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $5 = 0, sp = 0;
 sp = STACKTOP;
 if ($c << 24 >> 24 <= -1) {
  $5 = $c;
  STACKTOP = sp;
  return $5 | 0;
 }
 $5 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + (($c & 255) << 2) >> 2] & 255;
 STACKTOP = sp;
 return $5 | 0;
}

function _jsonnet_evaluate_snippet($vm, $filename, $snippet, $error) {
 $vm = $vm | 0;
 $filename = $filename | 0;
 $snippet = $snippet | 0;
 $error = $error | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = __ZL28jsonnet_evaluate_snippet_auxP9JsonnetVmPKcS2_Pib($vm, $filename, $snippet, $error, 0) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _abort_message($format, $varargs) {
 $format = $format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $list = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $list = sp;
 HEAP32[$list >> 2] = $varargs;
 $0 = HEAP32[_stderr >> 2] | 0;
 _vfprintf($0 | 0, $format | 0, $list | 0) | 0;
 _fputc(10, $0 | 0) | 0;
 _abort();
}

function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = invoke_i(5) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else {
  STACKTOP = sp;
  return HEAP32[$0 >> 2] | 0;
 }
 return 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, _strlen($__s | 0) | 0) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, _strlen($__s | 0) | 0) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function dynCall_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 FUNCTION_TABLE_viiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0);
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, _wcslen($__s) | 0) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__15ctypeIwE10do_toupperEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 if ($c >>> 0 >= 128) {
  $3 = $c;
  STACKTOP = sp;
  return $3 | 0;
 }
 $3 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($c << 2) >> 2] | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 if ($c >>> 0 >= 128) {
  $3 = $c;
  STACKTOP = sp;
  return $3 | 0;
 }
 $3 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($c << 2) >> 2] | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function _wmemset($d, $c, $n) {
 $d = $d | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$012 = 0, $$03 = 0, sp = 0;
 sp = STACKTOP;
 if ($n) {
  $$012 = $n;
  $$03 = $d;
  while (1) {
   $$012 = $$012 + -1 | 0;
   HEAP32[$$03 >> 2] = $c;
   if (!$$012) break; else $$03 = $$03 + 4 | 0;
  }
 }
 STACKTOP = sp;
 return $d | 0;
}

function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45592) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45544) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45488) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45408) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45112) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45080) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(44848) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(44696) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(44584) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(44488) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(44424) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(44304) | 0);
 STACKTOP = sp;
 return;
}

function b8(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 p10 = p10 | 0;
 p11 = p11 | 0;
 p12 = p12 | 0;
 p13 = p13 | 0;
 p14 = p14 | 0;
 abort(8);
}

function _snprintf($s, $n, $fmt, $varargs) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsnprintf($s, $n, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob | 0;
 var $$0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$iob + 4 >> 2] & 74;
 if (($2 | 0) == 64) $$0 = 8; else if (($2 | 0) == 8) $$0 = 16; else if (!$2) $$0 = 0; else $$0 = 10;
 STACKTOP = sp;
 return $$0 | 0;
}

function dynCall_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 FUNCTION_TABLE_viiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0);
}

function ___strdup($s) {
 $s = $s | 0;
 var $$0 = 0, $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_strlen($s | 0) | 0) + 1 | 0;
 $2 = _malloc($1) | 0;
 if (!$2) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 _memcpy($2 | 0, $s | 0, $1 | 0) | 0;
 $$0 = $2;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 46080, _wcslen(46080) | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 46048, _wcslen(46048) | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__16locale9use_facetERNS0_2idE($this, $x) {
 $this = $this | 0;
 $x = $x | 0;
 var $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this >> 2] | 0;
 $2 = __ZNKSt3__16locale5__imp9use_facetEl($0, __ZNSt3__16locale2id5__getEv($x) | 0) | 0;
 STACKTOP = sp;
 return $2 | 0;
}

function __ZNKSt3__16locale9has_facetERNS0_2idE($this, $x) {
 $this = $this | 0;
 $x = $x | 0;
 var $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this >> 2] | 0;
 $2 = __ZNKSt3__16locale5__imp9has_facetEl($0, __ZNSt3__16locale2id5__getEv($x) | 0) | 0;
 STACKTOP = sp;
 return $2 | 0;
}

function dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 return FUNCTION_TABLE_iiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this, $__str);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 STACKTOP = sp;
 return;
}

function _sscanf($s, $fmt, $varargs) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsscanf($s, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0;
 return high >> bits - 32 | 0;
}

function __ZNSt3__117iostream_categoryEv() {
 var sp = 0;
 sp = STACKTOP;
 if (!(HEAP8[43304] | 0)) if (___cxa_guard_acquire(43304) | 0) {
  HEAP32[10824] = 44080;
  ___cxa_atexit(101, 43296, ___dso_handle | 0) | 0;
  ___cxa_guard_release(43304);
 }
 STACKTOP = sp;
 return 43296;
}

function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($agg$result, $this + 16 | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($agg$result, $this + 12 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45928) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45936) | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 46072, 5);
 STACKTOP = sp;
 return;
}

function __ZN11StaticErrorD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 28 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45872) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45864) | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 46040, 4);
 STACKTOP = sp;
 return;
}

function ___cxa_get_globals_fast() {
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(53872, 6) | 0)) {
  $3 = _pthread_getspecific(HEAP32[13466] | 0) | 0;
  STACKTOP = sp;
  return $3 | 0;
 } else _abort_message(53880, sp);
 return 0;
}

function dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 FUNCTION_TABLE_viiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45368) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45304) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45240) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45176) | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function dynCall_viiiiiid(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = +a7;
 FUNCTION_TABLE_viiiiiid[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, +a7);
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $end = $end | 0;
 $mx = $mx | 0;
 var $3 = 0;
 $3 = $end - $frm | 0;
 return ($3 >>> 0 < $mx >>> 0 ? $3 : $mx) | 0;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45952) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45944) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45672) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45632) | 0);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free($p);
 if (!(_pthread_setspecific(HEAP32[13466] | 0, 0) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(53992, sp);
}

function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(44232) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(44192) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45792) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(45800) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!(HEAP8[$this >> 0] & 1)) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!(HEAP8[$this >> 0] & 1)) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this, $__os);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_110HeapStringD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40608;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 8 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 if (!$this) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 STACKTOP = sp;
 return;
}

function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 12) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp11make_globalEv() {
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[(__ZNSt3__16locale7classicEv() | 0) >> 2] | 0;
 HEAP32[11440] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 STACKTOP = sp;
 return 45760;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 STACKTOP = sp;
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 STACKTOP = sp;
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 STACKTOP = sp;
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function __ZNSt3__16localeC2ERKS0_($this, $l) {
 $this = $this | 0;
 $l = $l | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l >> 2] | 0;
 HEAP32[$this >> 2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result + 0 >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZN12_GLOBAL__N_110HeapStringD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 40608;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 8 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 45816;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if ($1) if (HEAP8[$this + 12 >> 0] | 0) __ZdaPv($1);
 STACKTOP = sp;
 return;
}

function dynCall_viiiiid(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 FUNCTION_TABLE_viiiiid[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6);
}

function __ZNKSt3__114error_category23default_error_conditionEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 HEAP32[$agg$result >> 2] = $ev;
 HEAP32[$agg$result + 4 >> 2] = $this;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 16 | 0;
 HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 1;
 if (!(HEAP32[$this + 20 >> 2] & 1)) return; else ___cxa_rethrow();
}

function b6(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 p10 = p10 | 0;
 abort(6);
 return 0;
}

function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 46008;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 16 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 45968;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this + 12 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 43024;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 42960;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(53864, 203) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(53936, sp);
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18ios_base6getlocEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16localeC2ERKS0_($agg$result, $this + 28 | 0);
 STACKTOP = sp;
 return;
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this + -8 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this);
 STACKTOP = sp;
 return;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function ___cxa_is_pointer_type($type) {
 $type = $type | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 if (!$type) $3 = 0; else $3 = (___dynamic_cast($type, 54632, 54800, 0) | 0) != 0;
 STACKTOP = sp;
 return $3 & 1 | 0;
}

function _strtoull_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = _strtoull($s, $p, $base) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _strcpy(pdest, psrc) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 var i = 0;
 do {
  HEAP8[pdest + i >> 0] = HEAP8[psrc + i >> 0];
  i = i + 1 | 0;
 } while (HEAP8[psrc + (i - 1) >> 0] | 0);
 return pdest | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 43024;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 43024;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 42960;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 42960;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 STACKTOP = sp;
 return;
}

function _strtoll_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = _strtoll($s, $p, $base) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18messagesIwE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var sp = 0;
 sp = STACKTOP;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18messagesIcE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var sp = 0;
 sp = STACKTOP;
 _catclose((($__c | 0) == -1 ? -1 : $__c << 1) | 0) | 0;
 STACKTOP = sp;
 return;
}

function b17(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 abort(17);
}

function runPostSets() {}
function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}

function _mbrlen($s, $n, $st) {
 $s = $s | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = _mbrtowc(0, $s, $n, ($st | 0) != 0 ? $st : 53664) | 0;
 STACKTOP = sp;
 return $2 | 0;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0;
 $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
 return $1$0 | 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 12 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = __ZNSt3__110__stdinbufIwE9__getcharEb($this, 0) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = __ZNSt3__110__stdinbufIcE9__getcharEb($this, 0) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 54280;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this + 4 | 0);
 STACKTOP = sp;
 return;
}

function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}

function b12(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 p6 = +p6;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 abort(12);
}

function __ZNSt11logic_errorD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$this >> 2] = 54256;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this + 4 | 0);
 STACKTOP = sp;
 return;
}

function _wcslen($s) {
 $s = $s | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while (1) if (!(HEAP32[$$0 >> 2] | 0)) break; else $$0 = $$0 + 4 | 0;
 STACKTOP = sp;
 return $$0 - $s >> 2 | 0;
}

function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = __ZNSt3__110__stdinbufIwE9__getcharEb($this, 1) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = __ZNSt3__110__stdinbufIcE9__getcharEb($this, 1) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + -8 + 12 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function _do_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = ___string_read($f, $buf, $len) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZNSt3__16localeD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$this >> 2] | 0) | 0;
 STACKTOP = sp;
 return;
}

function b16(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 abort(16);
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 12 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 STACKTOP = sp;
 return;
}

function _wctomb($s, $wc) {
 $s = $s | 0;
 $wc = $wc | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 if (!$s) $$0 = 0; else $$0 = _wcrtomb($s, $wc, 0) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function b25(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(25);
 return 0;
}

function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale5__imp12make_classicEv() {
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(50144, 1);
 HEAP32[11434] = 50144;
 STACKTOP = sp;
 return 45736;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 63](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[11446] | 0;
 HEAP32[11446] = $0 + 1;
 HEAP32[$this + 4 >> 2] = $0 + 1;
 return;
}

function __ZNKSt3__15ctypeIwE9do_narrowEwc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c >>> 0 < 128 ? $c & 255 : $dfault) | 0;
}

function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__15ctypeIcE9do_narrowEcc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c << 24 >> 24 > -1 ? $c : $dfault) | 0;
}

function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function b10(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(10);
}

function dynCall_diii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return +FUNCTION_TABLE_diii[index & 3](a1 | 0, a2 | 0, a3 | 0);
}

function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
 return;
}

function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __GLOBAL__I_a635() {
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_base4InitC2Ev(0);
 ___cxa_atexit(202, 41840, ___dso_handle | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt12length_errorD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt11logic_errorD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 31](a1 | 0, a2 | 0, a3 | 0);
}

function b0(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(0);
 return 0;
}

function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 STACKTOP = sp;
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 STACKTOP = sp;
 return;
}

function _isxdigit($c) {
 $c = $c | 0;
 var $4 = 0;
 if (($c + -48 | 0) >>> 0 < 10) $4 = 1; else $4 = (($c | 32) + -97 | 0) >>> 0 < 6;
 return $4 & 1 | 0;
}

function _catgets__wrapper(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 return _catgets(p0 | 0, p1 | 0, p2 | 0, p3 | 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function __ZSt17__throw_bad_allocv() {
 var $0 = 0;
 $0 = ___cxa_allocate_exception(4) | 0;
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw($0 | 0, 54104, 162);
}

function b14(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(14);
}

function _isxdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = _isxdigit($c) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_118HeapExtendedObjectD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function b15(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = +p6;
 abort(15);
}

function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_115HeapSuperObjectD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 63](a1 | 0, a2 | 0) | 0;
}

function _copysignl($x, $y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, sp = 0;
 sp = STACKTOP;
 $0 = +_copysign($x, $y);
 STACKTOP = sp;
 return +$0;
}

function _scalbnl($x, $n) {
 $x = +$x;
 $n = $n | 0;
 var $0 = 0.0, sp = 0;
 sp = STACKTOP;
 $0 = +_scalbn($x, $n);
 STACKTOP = sp;
 return +$0;
}

function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function _strlen(ptr) {
 ptr = ptr | 0;
 var curr = 0;
 curr = ptr;
 while (HEAP8[curr >> 0] | 0) curr = curr + 1 | 0;
 return curr - ptr | 0;
}

function _frexpl($x, $e) {
 $x = +$x;
 $e = $e | 0;
 var $0 = 0.0, sp = 0;
 sp = STACKTOP;
 $0 = +_frexp($x, $e);
 STACKTOP = sp;
 return +$0;
}

function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function dynCall_iid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 return FUNCTION_TABLE_iid[index & 1](a1 | 0, +a2) | 0;
}

function __Znaj($size) {
 $size = $size | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 $0 = __Znwj($size) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _fmodl($x, $y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, sp = 0;
 sp = STACKTOP;
 $0 = +_fmod($x, $y);
 STACKTOP = sp;
 return +$0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 127](a1 | 0, a2 | 0);
}

function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function b11(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(11);
}

function _isspace($c) {
 $c = $c | 0;
 var $4 = 0;
 if (($c | 0) == 32) $4 = 1; else $4 = ($c + -9 | 0) >>> 0 < 5;
 return $4 & 1 | 0;
}

function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function _newlocale__wrapper(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 return _newlocale(p0 | 0, p1 | 0, p2 | 0) | 0;
}

function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function _mbsinit($st) {
 $st = $st | 0;
 var $4 = 0;
 if (!$st) $4 = 1; else $4 = (HEAP32[$st >> 2] | 0) == 0;
 return $4 & 1 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function b9(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 abort(9);
}

function __ZNSt9bad_allocD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt8bad_castD0Ev($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 STACKTOP = sp;
 return;
}

function dynCall_vid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 FUNCTION_TABLE_vid[index & 1](a1 | 0, +a2);
}

function b19(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(19);
 return 0;
}

function ___cxa_throw__wrapper(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 ___cxa_throw(p0 | 0, p1 | 0, p2 | 0);
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 return;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this | 0;
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 127](a1 | 0) | 0;
}

function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 12 >> 2] | 0;
}

function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 8 >> 2] | 0;
}

function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 9 >> 0] | 0;
}

function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 8 >> 0] | 0;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[13554] | 0;
 HEAP32[13554] = $0 + 0;
 return $0 | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c << 24 >> 24 | 0;
}

function b1(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(1);
}

function __ZdaPv($ptr) {
 $ptr = $ptr | 0;
 var sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 STACKTOP = sp;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZdlPv($ptr) {
 $ptr = $ptr | 0;
 var sp = 0;
 sp = STACKTOP;
 _free($ptr);
 STACKTOP = sp;
 return;
}

function b22(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(22);
 return 0;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 255](a1 | 0);
}

function _pthread_cond_broadcast__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_cond_broadcast(p0 | 0) | 0;
}

function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__15ctypeIcE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c | 0;
}

function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}

function _pthread_mutex_unlock__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_mutex_unlock(p0 | 0) | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt11logic_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 1;
}

function b26(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(26);
}

function _pthread_mutex_lock__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_mutex_lock(p0 | 0) | 0;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function _isdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 return ($c + -48 | 0) >>> 0 < 10 | 0;
}

function __ZNSt9bad_allocC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 54056;
 return;
}

function __ZNSt8bad_castC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 54504;
 return;
}

function b20(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(20);
 return 0.0;
}

function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this | 0;
 return 43240;
}

function dynCall_i(index) {
 index = index | 0;
 return FUNCTION_TABLE_i[index & 15]() | 0;
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this | 0;
 return;
}

function b7(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(7);
 return 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN12_GLOBAL__N_110HeapEntityD2Ev($this) {
 $this = $this | 0;
 return;
}

function b23(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(23);
}

function _uselocale__wrapper(p0) {
 p0 = p0 | 0;
 return _uselocale(p0 | 0) | 0;
}

function __ZNSt3__110moneypunctIwLb1EED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIwLb0EED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb1EED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb0EED1Ev($this) {
 $this = $this | 0;
 return;
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 7]();
}

function _strerror__wrapper(p0) {
 p0 = p0 | 0;
 return _strerror(p0 | 0) | 0;
}

function ___ctype_toupper_loc__wrapper() {
 return ___ctype_toupper_loc() | 0;
}

function ___ctype_tolower_loc__wrapper() {
 return ___ctype_tolower_loc() | 0;
}

function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this | 0;
 return 54072;
}

function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this | 0;
 return 54520;
}

function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this | 0;
 return;
}

function b18(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(18);
 return 0;
}

function __ZNSt3__18messagesIwED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18messagesIcED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIwED1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIcED1Ev($this) {
 $this = $this | 0;
 return;
}

function _freelocale__wrapper(p0) {
 p0 = p0 | 0;
 _freelocale(p0 | 0);
}

function b13(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(13);
 return 0;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function __ZNSt9type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9exceptionD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD2Ev($this) {
 $this = $this | 0;
 return;
}

function ___ctype_b_loc__wrapper() {
 return ___ctype_b_loc() | 0;
}

function __ZNSt8bad_castD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function b4(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(4);
}

function ___cxa_end_catch__wrapper() {
 ___cxa_end_catch();
}

function b2(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(2);
}

function ___cxa_rethrow__wrapper() {
 ___cxa_rethrow();
}

function b5(p0) {
 p0 = p0 | 0;
 abort(5);
 return 0;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b3(p0) {
 p0 = p0 | 0;
 abort(3);
}

function b21() {
 abort(21);
 return 0;
}

function _abort__wrapper() {
 _abort();
}

function b24() {
 abort(24);
}

// EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_iiiiiiii = [b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0];
  var FUNCTION_TABLE_viiiii = [b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZN12_GLOBAL__N_16Parser14parseCommaListERNSt3__16vectorIP3ASTNS1_9allocatorIS4_EEEEN5Token4KindERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEEj,__ZN12_GLOBAL__N_16Parser20parseObjectRemainderERP3ASTRK5Tokenj,__ZN12_GLOBAL__N_111Interpreter12manifestJsonERK13LocationRangebRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN12_GLOBAL__N_111Interpreter19validateBuiltinArgsERK13LocationRangemRKNSt3__16vectorINS_5ValueENS4_9allocatorIS6_EEEENS5_INS6_4TypeENS7_ISC_EEEE];
  var FUNCTION_TABLE_vid = [b2,__Z22jsonnet_unparse_numberd];
  var FUNCTION_TABLE_vi = [b3,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZN15BuiltinFunctionD2Ev,__ZN15BuiltinFunctionD0Ev,__ZN3ASTD2Ev,__ZN3ASTD0Ev,__ZN13LiteralStringD2Ev,__ZN13LiteralStringD0Ev
  ,__ZN5LocalD2Ev,__ZN5LocalD0Ev,__ZN3VarD0Ev,__ZN6BinaryD0Ev,__ZN5SuperD0Ev,__ZN5IndexD0Ev,__ZN17ObjectCompositionD0Ev,__ZN6ObjectD2Ev,__ZN6ObjectD0Ev,__ZN4SelfD0Ev,__ZN5ApplyD2Ev,__ZN5ApplyD0Ev,__ZN9ImportstrD2Ev,__ZN9ImportstrD0Ev,__ZN6ImportD2Ev,__ZN6ImportD0Ev,__ZN14LiteralBooleanD0Ev,__ZN13LiteralNumberD0Ev,__ZN5ArrayD2Ev,__ZN5ArrayD0Ev,__ZN5UnaryD0Ev,__ZN8FunctionD2Ev,__ZN8FunctionD0Ev,__ZN11ConditionalD0Ev,__ZN11LiteralNullD0Ev,__ZN5ErrorD0Ev,__ZN12_GLOBAL__N_15Stack4dumpEv,__ZN12_GLOBAL__N_123HeapComprehensionObjectD2Ev,__ZN12_GLOBAL__N_123HeapComprehensionObjectD0Ev,__ZN12_GLOBAL__N_19HeapThunkD2Ev
  ,__ZN12_GLOBAL__N_19HeapThunkD0Ev,__ZN12_GLOBAL__N_110HeapEntityD2Ev,__ZN12_GLOBAL__N_118HeapExtendedObjectD0Ev,__ZN12_GLOBAL__N_115HeapSuperObjectD0Ev,__ZN12_GLOBAL__N_116HeapSimpleObjectD2Ev,__ZN12_GLOBAL__N_116HeapSimpleObjectD0Ev,__ZN12_GLOBAL__N_110HeapStringD2Ev,__ZN12_GLOBAL__N_110HeapStringD0Ev,__ZN12_GLOBAL__N_111HeapClosureD2Ev,__ZN12_GLOBAL__N_111HeapClosureD0Ev,__ZN12_GLOBAL__N_19HeapArrayD2Ev,__ZN12_GLOBAL__N_19HeapArrayD0Ev,__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__111__stdoutbufIwED0Ev,__ZNSt3__110__stdinbufIwED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__111__stdoutbufIcED0Ev,__ZNSt3__110__stdinbufIcED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev
  ,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,__ZNSt3__17collateIcED1Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED1Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev
  ,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED1Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED1Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED1Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED1Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED1Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED1Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev
  ,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZNSt12length_errorD0Ev,__ZNSt12out_of_rangeD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZN11StaticErrorD2Ev
  ,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv,__ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv,__ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEED2Ev,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev,__ZN12RuntimeErrorD2Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev,__Z23jsonnet_static_analysisP3AST,_free,_freelocale__wrapper,__ZNSt3__112__do_nothingEPv,__ZNSt3__121__throw_runtime_errorEPKc,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,___cxx_global_array_dtor112,___cxx_global_array_dtor97,___cxx_global_array_dtor73,___cxx_global_array_dtor48,___cxx_global_array_dtor45,___cxx_global_array_dtor,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev,__ZNSt3__18ios_base4InitD2Ev,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3];
  var FUNCTION_TABLE_vii = [b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv
  ,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_,__ZNSt3__18ios_base4initEPv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE,__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_,__ZNKSt3__18ios_base6getlocEv,__ZNSt3__18ios_base5clearEj,__Z20jsonnet_builtin_declm,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_,__ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK5Token,__ZL7unparsePK3AST,__Z22jsonnet_unparse_escapeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_,__ZL6appendRNSt3__13setIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEEERKS8_,__ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST
  ,__ZN12_GLOBAL__N_18type_strENS_5Value4TypeE,__ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb,__ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE,__ZN12_GLOBAL__N_15Stack4markERNS_4HeapE,__ZL10bop_string8BinaryOp,__ZL10uop_string7UnaryOp,__ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_,__ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEEC2ERKS4_,__Z23jsonnet_unparse_jsonnetPK3AST,__ZNSt3__118__libcpp_refstringC2EPKc,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,__ZNSt11logic_errorC2EPKc,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_,__ZNSt13runtime_errorC2EPKc,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_
  ,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,_abort_message,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4];
  var FUNCTION_TABLE_ii = [b5,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv,__ZNSt3__111__stdoutbufIcE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,__ZNKSt13runtime_error4whatEv,__ZNKSt3__119__iostream_category4nameEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv
  ,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv
  ,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt11logic_error4whatEv,__ZNKSt8bad_cast4whatEv,__Znwj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv,__ZN5Token8toStringENS_4KindE,_strerror__wrapper,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,_uselocale__wrapper,_wcslen,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5];
  var FUNCTION_TABLE_iiiiiiiiiiii = [b6,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b6];
  var FUNCTION_TABLE_iiii = [b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j,__ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc,__ZN9Allocator4makeI13LiteralStringJ13LocationRangeNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPT_DpT0_,__ZN12_GLOBAL__N_16Parser5parseEij
  ,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc,__ZN9Allocator4makeI13LiteralStringJ13LocationRangePKcEEEPT_DpT0_,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,__ZN9Allocator4makeI5ArrayJ13LocationRangeNSt3__16vectorIP3ASTNS3_9allocatorIS6_EEEEEEEPT_DpT0_,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignINS_19istreambuf_iteratorIcS2_EEEENS_9enable_ifIXaasr19__is_input_iteratorIT_EE5valuentsr21__is_forward_iteratorISA_EE5valueERS5_E4typeESA_SA_,__Z13jsonnet_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc,_newlocale__wrapper,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,_wcrtomb,_mbtowc,_mbrlen,_vasprintf,_do_read,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7];
  var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b8,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b8];
  var FUNCTION_TABLE_viiiiid = [b9,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b9,b9,b9];
  var FUNCTION_TABLE_viiiiiiii = [b10,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b10];
  var FUNCTION_TABLE_viiiiii = [b11,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNSt3__14listIN6Object5FieldENS_9allocatorIS2_EEE6insertINS_21__list_const_iteratorIS2_PvEEEENS_15__list_iteratorIS2_S8_EES9_T_SC_PNS_9enable_ifIXsr19__is_input_iteratorISC_EE5valueEvE4typeE,__ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE,__ZN12_GLOBAL__N_111Interpreter10makeObjectINS_23HeapComprehensionObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEEP3ASTS7_SH_EEENS_5ValueEDpT0_,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11];
  var FUNCTION_TABLE_viiiiiddiii = [b12,__Z24jsonnet_vm_execute_multiP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b,__Z18jsonnet_vm_executeP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b,b12];
  var FUNCTION_TABLE_iid = [b13,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd];
  var FUNCTION_TABLE_viiiiiii = [b14,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
  ,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,__ZN12_GLOBAL__N_111HeapClosureC2ERKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEPNS_10HeapObjectEjRKNS1_6vectorIS5_NSA_IS5_EEEEPK3ASTm,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14];
  var FUNCTION_TABLE_viiiiiid = [b15,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b15];
  var FUNCTION_TABLE_viiiiiiiii = [b16,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b16];
  var FUNCTION_TABLE_viiiiiiiiii = [b17,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b17,b17,b17];
  var FUNCTION_TABLE_iii = [b18,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__111__stdoutbufIwE8overflowEj,__ZNSt3__110__stdinbufIwE9pbackfailEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__111__stdoutbufIcE8overflowEi,__ZNSt3__110__stdinbufIcE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi,__ZNKSt3__16locale9use_facetERNS0_2idE,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl,__ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEEixEOS1_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv
  ,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc,__ZN12_GLOBAL__N_16Parser13parseTerminalEj,__ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEEixERS6_,__ZNSt3__13mapIPK10IdentifierP3ASTNS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_,__ZNSt3__13mapIPK10IdentifierPN12_GLOBAL__N_19HeapThunkENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_,__ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierDniDnEEEPT_DpT0_,__ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEEixERSD_,__ZNSt3__13mapIPK10IdentifierN6Object5Field4HideENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S6_EEEEEixERSB_,__ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK13LocationRange,__ZNKSt3__16locale9has_facetERNS0_2idE,_isxdigit_l,_isdigit_l,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18];
  var FUNCTION_TABLE_iiiiii = [b19,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_,__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj,_wcsnrtombs,_mbsnrtowcs,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
  ,b19,b19,b19];
  var FUNCTION_TABLE_diii = [b20,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj];
  var FUNCTION_TABLE_i = [b21,__ZNSt3__16__clocEv,__ZNSt3__16locale5__imp12make_classicEv,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,___ctype_b_loc__wrapper,___ctype_toupper_loc__wrapper,___ctype_tolower_loc__wrapper,___cxa_get_globals_fast,b21,b21,b21,b21,b21,b21,b21];
  var FUNCTION_TABLE_iiiii = [b22,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,__ZN9Allocator4makeI8FunctionJ13LocationRangeNSt3__16vectorIPK10IdentifierNS3_9allocatorIS7_EEEEP3ASTEEEPT_DpT0_,__ZN9Allocator4makeI5ApplyJ13LocationRangeP3ASTNSt3__16vectorIS4_NS5_9allocatorIS4_EEEEEEEPT_DpT0_,__ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier,__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_,__ZL23default_import_callbackPvPKcS1_Pi,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,_mbsrtowcs,_catgets__wrapper,_mbrtowc,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b22,b22,b22,b22,b22,b22,b22
  ,b22,b22,b22];
  var FUNCTION_TABLE_viii = [b23,__ZNKSt3__114error_category23default_error_conditionEi,__ZNKSt3__119__iostream_category7messageEi,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,___cxa_throw__wrapper,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,__ZN12_GLOBAL__N_16Parser9parseBindERNSt3__13mapIPK10IdentifierP3ASTNS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEj,__ZN12_GLOBAL__N_16Parser10unexpectedERK5TokenRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN6ObjectC2ERK13LocationRangeRKNSt3__14listINS_5FieldENS3_9allocatorIS5_EEEE,__ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_,__ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE15__insert_uniqueERKS3_,__ZN12_GLOBAL__N_111Interpreter14manifestStringERK13LocationRange,__ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE,__ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_,__ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,b23,b23,b23,b23,b23,b23,b23,b23
  ,b23,b23,b23];
  var FUNCTION_TABLE_v = [b24,__ZL25default_terminate_handlerv,___cxa_end_catch__wrapper,_abort__wrapper,___cxa_rethrow__wrapper,__ZSt17__throw_bad_allocv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b24];
  var FUNCTION_TABLE_iiiiiiiii = [b25,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b25,b25,b25,b25,b25,b25,b25];
  var FUNCTION_TABLE_viiii = [b26,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__Z10lex_numberRPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERK8Location,__ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE15__insert_uniqueIRKNS_4pairIKS4_S6_EEEENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEENS_21__tree_const_iteratorIS7_SP_iEEOT_,__ZN5LocalC2ERK13LocationRangeRKNSt3__13mapIPK10IdentifierP3ASTNS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEES9_,__ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj,__ZN12_GLOBAL__N_16Parser19parseIdentifierListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj,__ZL15static_analysisP3ASTbRKNSt3__13setIPK10IdentifierNS1_4lessIS5_EENS1_9allocatorIS5_EEEE,__ZN12_GLOBAL__N_15Stack9makeErrorERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__insert_uniqueIRKNS_4pairIKS7_S7_EEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEENS_21__tree_const_iteratorIS8_SP_iEEOT_,__ZN12_GLOBAL__N_111Interpreter10makeObjectINS_16HeapSimpleObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEENS4_IS7_NS2_5FieldESB_NSC_INSD_ISE_SI_EEEEEEEEENS_5ValueEDpT0_,__ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectERjjb,b26,b26,b26,b26,b26,b26,b26,b26
  ,b26,b26,b26];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _jsonnet_make: _jsonnet_make, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _realloc: _realloc, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _jsonnet_realloc: _jsonnet_realloc, _memcpy: _memcpy, _strlen: _strlen, _jsonnet_evaluate_snippet: _jsonnet_evaluate_snippet, _bitshift64Lshr: _bitshift64Lshr, _jsonnet_destroy: _jsonnet_destroy, _strcpy: _strcpy, _bitshift64Shl: _bitshift64Shl, __GLOBAL__I_a: __GLOBAL__I_a, __GLOBAL__I_a635: __GLOBAL__I_a635, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_vid: dynCall_vid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiid: dynCall_viiiiid, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiiiddiii: dynCall_viiiiiddiii, dynCall_iid: dynCall_iid, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiid: dynCall_viiiiiid, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _jsonnet_make = Module["_jsonnet_make"] = asm["_jsonnet_make"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _jsonnet_realloc = Module["_jsonnet_realloc"] = asm["_jsonnet_realloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _jsonnet_evaluate_snippet = Module["_jsonnet_evaluate_snippet"] = asm["_jsonnet_evaluate_snippet"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _jsonnet_destroy = Module["_jsonnet_destroy"] = asm["_jsonnet_destroy"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var __GLOBAL__I_a635 = Module["__GLOBAL__I_a635"] = asm["__GLOBAL__I_a635"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiiiddiii = Module["dynCall_viiiiiddiii"] = asm["dynCall_viiiiiddiii"];
var dynCall_iid = Module["dynCall_iid"] = asm["dynCall_iid"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  if (Module['noExitRuntime']) {
    return;
  }

  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






